author,author_bio,title,date,publisher,text,tags,url,score,bootcamps,num_bootcamps,claps 2019-01-02,first name,gender,prob_female,prob_male
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Middleware/End of Week – Emily Deans – Medium,2017-07-28 20:01:22,medium,"Middleware/ End of Week The last few days we’ve been playing around with middleware — mostly via the Express routing framework. Middleware is a type of function you can call to pass control to another middleware or route handler in an application’s request and response chain. It’s used in multiple frameworks and software, but thus far, our exposure has been limited to interaction with Express. This weekend, I’ll be working to finish and polish some of the past week’s assignments, and will also plan on spending a good chunk of time working on the newest weekly project. This week’s addition involves generating a ‘ Mystery Word Game’, which will (hopefully) result in a program in which a user will be pitted against a computer to try to uncover the identity of a random, computer-generated word like so: Project mockup from The Iron Yard I’ll report back in the next couple of days on my progress. Happy Friday to all. Song of the Day: “ Everything Is Happening Today” by Flock of Dimes","['JavaScript', 'Lesbians Who Tech', 'Women Who Code', 'Code Newbie', 'Codingbootcamp']",https://medium.com/@emilyldeans/middleware-end-of-week-59d6fd3bedc9,0,['The Iron Yard'],1,1,emily,F,0.9979317746535663,0.002068225346433675
Verity Honebon,,Week 6 — working in groups (Airbnb clone) – Verity Honebon – Medium,2017-07-31 10:57:36,medium,"Week 6 — working in groups ( Airbnb clone) The theme of this week has been collaboration as it’s the first time we’ve been working in groups rather than rotating pairs. Our goal was to build a Makers imitation of Airbnb, where locations can be listed, requested and booked for a period of time, in a group of 5. For me the week’s main challenges were as follows:(i) involving more people means involving more egos — code reviews were tough at first and I think all of us felt it hard not to take suggestions personally(ii) bringing together differing coding styles, speeds and workflow processes in one project(iii) minimising down time waiting for features to be implemented and merged(iv) understanding and adopting code I haven’t written Monday was a disaster as we didn’t have a structure in place to enforce regular communication and as a result we duplicated tasks, which left us feeling a bit demoralised. Without a doubt the main lessons that I have learned from this week have all been to do with the critical importance of good communications skills and behaviours, specifically:understanding what everyone is working on in order to avoid conflicts and duplication of effortremembering to check in with other pairs frequentlybeing able to recognise when a question is a design decision and should be owed with the rest of the group I think one of the biggest successes of the week was that we learned from our communications failure on Monday. From Tuesday onwards we introduced regular check-ins, started using a kanban board to track the progress of features and keep track of what everyone in the team was working on and made a rule that any doubts should be discussed by the whole team. Having reached M V P by the end of the day Tuesday (a minor miracle given the state of the project on Monday evening) we were able to use this success as motivation and had a pretty decent bare-bone site up and running by the end of the week. Once we had gotten over the first communication hurdle it was interesting to see how the speed of implementing features as a group and the acceleration of problem solving/debugging with more than two heads became exponentially quicker. The tools we used for this project are worth discussing as they were a big factor in getting to where we got by the end of the week. The kanban board really became an essential tool (see image). As well as allowing us to track progress and to see what the other pairs were doing, it felt like it acted as an anchor, drawing us back to the main focus of the project. We diagrammed on it, joked on it and recorded the main points from both our stand ups and our retros on it. At the start of the week we broke down the project specification into small pieces and used the inbuilt Git Hub management tools to assign issues and code reviews to certain pairs. The act of breaking the problem down, recording the pieces and then be able to assign them to pairs was hugely beneficial. Since everything was broken down so thoroughly no one could wander too far off track. I’ve learnt a lot form this week and, overall, had a really great time working in a team. The experience has really open my eyes up to the potential pitfalls when working in a team and the importance of imposing structure to ensure that communication is always strong — good communication doesn’t just happen it must be consciously done. As always, I’m looking forward to next week!","['Agile', 'Codingbootcamp', 'Coding', 'Teamwork', 'JavaScript']",https://medium.com/@verityhonebon/week-6-working-in-groups-airbnb-clone-973a1e1d65eb,1,[],0,0,verity,F,1.0,0.0
Emily Chai,"A student at Maker’s, aspiring full stack developer.",Hunting for a first job as a developer – Emily Chai – Medium,2017-05-13 10:44:31,medium,"Hunting for a first job as a developer Passing the halfway mark studying at Maker’s has brought about weekly careers sessions. There has been a keen curiosity to take a glimpse and prepare for what life will be like after Maker’s i. e. job hunting for what I assume will be our first developer job. For me, my first ‘proper’ job to start off my career. Having being graduated for almost a year now, I am more than ready to jump knee deep into work — and doing work I enjoy with fun, likeminded people around me. The question is, where? At what company? The careers team at Maker’s are super supportive and passionate about helping each of us to get a job that suits our own interests. We will soon have one to one chats with a member of the team to discuss further our preferences in what we are looking for in a job. I have a vague idea looking at the job destinations of previous Maker’s graduates, but I realise that there are many more opportunities available to me that I am not aware of. Jess shared a very useful ‘web developer roadmap’ on Slack a while ago which helped me visualise the different paths one could potentially take as a developer. Source: https://github. com/kamranahmedse/developer-roadmap Being a Maker’s student, I have been familiarised with the front and back-end-side of being a web developer — over twelve weeks we would have practised technologies of the ‘full stack’. Front end technologies such as Javascript, j Query, C S S and H T M L and back-end technologies such as Ruby, Ruby on Rails and Javascript. Developer jobs in this field may include software programming, mobile programming with Android and io S systems to video game and V R programming. I’m not too sure about the third path though. After scanning the internet a bit more on Dev Ops, a Dev Op engineer is someone who oversees the work of other developers and ‘system operators’ ( Sys Ops). There is also a so called ‘ Dev Ops culture’ which involves agile operation practices such as test driven development and pair programming — something that Maker’s have drummed into our practices from the very start. To read more about the roles of Dev Ops, I found this blog particularly helpful: Roles and Responsibilities for Dev Ops and Agile Teams This is a relativly done draft of a white paper I’ve been working on. I thought I’d post it here just to see what…medium. com Looking at past occupations of students in the March cohort, it ranges massively. From engineers to bankers to nurses to project managers, all keen to change their career paths to become a developer. Having so much experience between us has made it easy for each of us to pick each others brains about previous experiences in contrasting working environments. The careers sessions so far have brought up some important aspects to consider when job hunting… this will be in just under a month! What Company? This has been an important topic of discussion. Knowing what you want and which company to apply for can be a minefield due to the spectrum of companies that need developers. Aspects to consider: Size of the company Office location What technologies you will be working with — front end, back end Project or product based Company values Agile practices such as O O P, T T D, mentoring and pairing Investment in up-skilling Common assumptions: Start ups‘ Risky’? Do not have enough funds to invest in your learning? Smaller dev teams and therefore not as much mentoring? More freedom for creativity? Corporate establishments Able to invest in skills and development? Limitations of red tape? Too ‘stuffy’? Better chance of career progression in a large team? During our careers sessions, we came across some assumptions that we had about certain industries and different work environments. However, we were opened up to question these due to the fact that each individual company is different and perhaps researching more into their core values and speaking to someone who worked there would be more valuable to our decision making. How to get a job Seems pretty straight forward right? Naaat. I’ve come to realise that job hunting is an actual job in itself. There is a bulk of prep work that comes to the lead up of making an application and how this is executed may be indicative of the success later. Some top tips so far Aside from curating an enticing Github C. V and profile (the Linkedin of the tech world) — applying to jobs the box standard way i. e. sending a C. V and cover letter, or perhaps going through a recruiter — we have lately been inspired to think ‘out of the box’ in the way we approach job hunting and making applications. This brings me to Seth Godin’s analogy of the ‘purple cow’ in his book ‘ Transform Your Business by Being Remarkable’. A purple cow is a cow that stands out from the rest of them. Like so: Purple cow’s are ‘remarkable’ — we all want to be one basically We were given the statistic that 15% of jobs are advertised… S O to increase the likelihood of getting a job, and one that you want — one must get out there. Researching companies is key to this. Conversations, conversations, conversations. Having many conversations. Whether directly messaging on Linkedin, Twitter or even going to the company office, there is really nothing to lose. You will be able to find out more about the company, show interest to the potential employer and perhaps your name will stand out in applications. We have been given the challenge to try and have a conversation with one person from the company before applying to them. Attending meet ups and workshops to continually grow your network as well as keeping engaged with the industry. There are so many happening across London, it would be really rude not to. Side projects — also known as ‘pet projects’. The chance to show off your personal interests in a small project, whether creating your very own snakes game or translating an existing project using a new language. Everyone loves snake!… or slug Last but not least, demonstrating passion — in any way possible (tips just above^^). This comes first before anything. These career sessions have highlighted to me that I really need to get down and research the potential companies I would like to work for. Who knew that once choosing the path of becoming a developer, you then have to narrow that down again! I aim to keep an open mind as no way have I had enough time using each front and back end technology to know what I would like to specialise in doing. Perhaps this is not necessarily a bad thing as this means there would be many roles I apply for? Attending codebar’s workshop gave me a little insight into mobile development and the Android system — I hope to attend an io S soon to be able to compare one another. I have also created a twitter account named @chaicodes — for all my codey shenanigans.","['Job Hunting', 'Developer', 'Makersacademy', 'Codingbootcamp']",https://medium.com/@emilyxchai/hunting-for-a-first-job-as-a-developer-f41732a83436,0,[],0,41,emily,F,0.9979317746535663,0.002068225346433675
Jackson McGehee,Web Dev | Software Engineer | Creative Strategist | Veteran,Notes from U̶n̶d̶e̶r̶g̶r̶o̶u̶n̶d̶ Week Nine – Jackson McGehee – Medium,2018-02-02 17:30:29,medium,"Notes from U̶n̶d̶e̶r̶g̶r̶o̶u̶n̶d̶ Week Nine I am in week nine of a 13 week full-stack web development immersive course at General Assembly in Atlanta. I knew a little bit about the Python programming language before I started the course, but it was all self-taught and I hadn’t applied the language outside of online tutorials. Earlier this week I presented my first comprehensive full-stack application. I could write volumes about everything I learned between those two points, but I would like to share three things I have learned about myself during this course. For context, my first project was a version of Jeopardy I created with H T M L, C S S, and Java Script. It definitely pushed the limits of what I could do at that point, but the challenge was very exciting. Author’s note: no arguing with the answers; they are all undeniably correct. For my second project, I created Fitbrary: a web application that allows users to battle fitness monotany by creating workouts and viewing workouts created by others. I added Node. js with Express to the tools I used in the first project to build a server-side rendered application. I felt like I could call myself a (junior) web developer after this project. It was the first time I used a database ( Mongo D B) to store input from, and present information to, a user. I added React. js to my skill set for Due Point, my third project, which is a web application for creating and reviewing flashcards. This project supercharged my understanding of the things I can build. React allowed me to modularize my frontend and surgically exchange data between the client and server. I also achieved my reach goal of developing a review feature that presents the user’s cards in random order. The user has the option to remove cards from the deck that he or she answered correctly, or to put the cards he or she got wrong back in the deck and reshuffle. My Top Three Insights:1. Attention to detail During my time in the military, the phrase “attention to detail” became such a reflexive cliché that writing it for this article was almost physically painful. But I cannot overstate how much a decade of weapons maintenance, uniform inspections, and detailed reporting conditioned me to scour lines of code for a rouge semicolon or a missing closing parenthesis. Tiny mistakes can break all of your code, and can rob you of valuable time. 2. Detailed Planning is your Friend It is difficult to resist the pull of the sum of inspiration and excitement, but jumping directly into the text editor to start a project is a terrible idea. I was eager to apply all of the things I was learning in class, but without a clear plan, the new tools were just a quick trip to a dead end. The first step for each of my projects was to put myself in the seat of the user and map what I wanted his or her experience to be. I would capture this process conceptually through a series of user stories and visually with a wireframe diagram. Applications like Trello and Figma transformed my static plan into dynamic tools that facilitated development. My military experience and training made planning seem second nature, but more importantly it allowed me to help my classmates develop their own planning skills. The collaborative nature of web development was one of the top reasons I made this transition, and nowhere is that more evident than in the planning stage. 3. Systems Thinking is Everything My evangelism about systems thinking is on par with veagans and crossfitters. I was introduced to systems thinking through Peter Senge’s book “ The Fifth Discipline. ” Many of the principles Senge discussed were intuitive to me, but the book gave me a vocabulary and a formula with which to apply my instincts. At its most basic form, systems thinking is the process of analyzing the components of the system, understanding cause and effect between the components, and identifying efficient points of leverage to affect the system. In pratice, it is an art that is difficult to master, but beautiful when it is implemented properly. Web development and systems thinking really came together for me while creating Due Point. I was able to apply systems thinking to understand what React was doing on the frontend, what Node. js/ Express was doing on the backend, and how the two were exchanging data. Once I was able to isolate the cause and effect relationships between the components (both React Components and the components of the app in general) , I was able to drastically reduce the trouble shooting time. It was a huge breakthrough for me. I still have a long way to go I am very early in my web development journey, but I am very excited about what lies ahead. I feel like I am home now; the process of development aligns with my instincts. Agile software development is even listed as the first “see also” on the “ Fifth Discipline” wikipedia page. I plan on constantly assessing my strengths and weaknesses, and exploiting the efficient points of leverage to go fast forever. My Git Hub profile (contains all project repositories): https://github. com/jacksonmcgehee","['Web Development', 'JavaScript', 'Codingbootcamp']",https://medium.com/@jacksonfullstack/notes-from-u%CC%B6n%CC%B6d%CC%B6e%CC%B6r%CC%B6g%CC%B6r%CC%B6o%CC%B6u%CC%B6n%CC%B6d%CC%B6-week-nine-7dd9699bf209,0,['General Assembly'],1,41,jackson,M,0.0026488565914269406,0.997351143408573
Bree Jackson,,This is a homework assignment you see. – Bree Jackson – Medium,2017-08-11 03:11:39,medium,"This is a homework assignment you see. As a possible future grad of a bootcamp program, one of the many things that they ask us to do it to write a blog post. Now, there was a point and time where I dabbled in writing. Never in anything I truly attempted to publish, but this is not an unfamiliar topic to me. This is the very first time that I have ever truly attempted to write about myself and my journey. Now, this blog post isn’t really meant to get you to know everything about me. In my eyes, I’m not all T H A T interesting. No, for this blog, I’m going to just get to what I’ve been asked to write about, and we shall see what comes of it. Who knows- maybe I will start a true conversation. I doubt it, but we can see what comes of it. My experience so far has been, in most way, inspiring. In others, it’s been heart-wrenching. As a dyslexic woman, I can’t help but compare this time to that of my childhood and trying to learn a skill that seems to come so easy to others. I’m reminded of the daily struggles, and experience again the night terrors that follow. With that, I experience the growth needed to become a better person. Fear has been a big part of this journey. Our code school is closing, and my heart aches for those whom are losing or have lost their jobs already. We are not as whole as we once were without our ladies, and though they come by often, we feel their loss. Fear of my code, and my journey with it, and fear of what awaits me in the great beyond, is also a daily or bi-daily norm. I’ve come to feel that it is an unloved friend, but it shows little love back. Unlike my childhood, I’ve never meet so many whom have brought me so much joy and hope in such a short time. From sweet Crystal, whom is a guiding light to many, and whom will not mention whom she has helped (though I suspect that many owe her a great deal); to daring Cody, who faces her code with a brave face, pen in hand; to our steady Garret, whom can and will hold your hand and make you slow down so that you give yourself the breathing room to understand something. Many a teacher would do well to follow his lead (though, luckily, none at my school need to take note of this). This all being said, if you aren’t excited about code after talking with Zach and his gang of brilliant men, you won’t ever be excited about code. They bring a light to our campus that, I dare say, many of us would be lost without. I have never met so many people that in such a short amount of time I found I could trust to depend upon. To future bootcamp attendees, here is my advice: Be honest about your fear. Your fear is real, and valid, and would bring those whom aren’t sharing your struggles to their knees. However, your fellow students will understand, and you need that understanding. My heart-to-hearts with John have saved me, and kept me going, and if it weren’t for him and many others talking with me about their struggles, I would be lost. Remember to sleep- but keep in mind what that sleep brings. Be they night terrors or clarity, it’s all important. No mater what, you need it. Remember- it is ok to ask your instructors and fellow students for help. When all others are panicking, they are going to be your rocks, and your leaders. However, remember to let them breath. Remember that they are human, and remember that, yes, they to need to eat. Bonus points to you if you remind them to eat. And for those whom need it, a bit on condolences; it is hard to find a starting point, and it is hard to find your way when you don’t know what path to take. Not all advice that your instructors give you is going to help. Sometimes, you have to make your struggles- and they’re ok with that. Honest. And when it happens, don’t be scared to share about your sadness about losing cohort members. We have lost three, and though one of them hit me hardest, I know that everyone has a story about each one of them. Above all else, do not fear your successes. They will take you by surprise- do no leave them alone. See them, love them, let them heal you from your journey, and go the distance with them.","['Life', 'Codingbootcamp', 'Friends', 'Journey', 'Learning Disability']",https://medium.com/@breejax/as-a-possible-future-grad-of-a-bootcamp-program-one-of-the-many-things-that-they-ask-us-to-do-it-b4e9f09771c8,0,[],0,1,bree,F,0.9979967004477964,0.0020032995522036297
Sara Jo Helba,"I love riding and training horses, hiking, cooking, and playing incredibly lame board games with family and friends. And I LOVE to code!",Starting at Fullstack Academy – Sara Jo Helba – Medium,2017-07-21 19:13:17,medium,"Starting at Fullstack Academy My Path to Coding From Social Work to Coding I’m finally starting a coding bootcamp — Fullstack Academy. It’s a big change for me. My dad is a programmer, and I was always interested in it, but I never really delved into it until a couple years ago. I always had a passion for social work and helping people, and I’ve spent my adult life thus far pursuing that path. I’ve worked as a family therapist, a substance abuse counselor, a mental health assessor, and an undergrad/masters social work instructor. But I always felt that something was missing. I recently finished all of the course work for a Ph D in social work program, hoping that I would feel more fulfilled in the world of academia. But in the doctoral program, I realized that the things I was enjoying most in the program were figuring out the statistical analyses on our statistics software and arguing the logic of concepts and theories with other students and my professors — things more applicable to programming than social work. I started dabbling in coding classes, through Khan Academy, Girl Develop It, and Code Academy on the side, and I really enjoyed it. I got a sense of accomplishment from solving problems, figuring out how things work, and seeing the fruits of my labor. It was exciting and interesting and. . . well… fun! And there was/is so much room for growth — it was easy to see that no matter how far you get in the field of web development, you can always learn and create new things. It wasn’t easy making the switch — it took a lot of time and soul-searching. But at the end of the day, when I thought about my future, I simply saw myself appreciating work in programming more. I can still help others and participate in social good without it being my entire career (or I could possibly use tech to achieve social goals)! Either way, I appreciated what I was able to learn and gain through social work, but I’m excited to have my day to day career be more logically -focused challenges, which I can see the effects of each day. I know learning to code can be a difficult path, but as a social worker, I know intense work. And I’m ready for it. Why Fullstack? I was looking at many different bootcamps and narrowed my search to a few that seemed rigorous, had good reviews, and had good reputations within the tech community. I spoke to past Fullstack students who felt confident and competent in their work post-graduation, whereas others I spoke to who went to other bootcamps often described their programs in less inspiring ways, such as making them feel comfortable in not knowing much. One past Fullstack student I spoke to said that he felt more prepared for the work he’s doing now after having attended Fullstack than some of his colleagues with their masters’ in C S feel. Ultimately these reviews, in addition to: the great outcomes documented by the program, the emphasis on pair programming, the live remote option (so I could stay with my husband in Cincinnati without losing the quality of live instruction), the attention being spread across the full stack, the focus on Java Script across that stack, the strength of the portfolio Fullstack helps students develop, and the further along starting/ending points (see next sentence) made my decision to go with Fullstack. Many other programs seemed to start at a true beginner’s level and then take its students to an intermediate level; whereas Fullstack seemed to start at a more intermediate level and then push its students to a more advanced level by the end of the program — so you have to do some extra work at the beginning to qualify for the program, but you end up further along. Next Up… I’ve now passed Fullstack’s foundations, and am preparing to begin the live portion of the course. So far it has been rather challenging and sometimes intimidating, but each time I’ve been able to figure out another concept, it’s also been that much more exhilarating. So now I’m looking forward to starting the live portion and preparing myself to keep diving deeper!","['Programming', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@sjhelba/starting-at-fullstack-academy-ecb07c38d0be,3,['Fullstack Academy'],1,2,sara,F,0.9970841632585713,0.0029158367414286895
Emmanuel Amon,Excited @TheIronYard Student,The Beginning — Journey to becoming a junior developer! (The Iron Yard),2017-07-15 18:23:18,medium,"The Beginning — Journey to becoming a junior developer! ( The Iron Yard) Next week, we will start our 12 week journey to becoming a junior developers through The Iron Yard in Charleston, South Carolina. ( Great city by the way. If you have never been, B E E N! That makes sense trust me!) I am sitting in the library listening to Ed Sheeran on Spotify thinking about what to write for my first blog E V E R and thinking of several topics: A. How much do I write? Short and Sweet vs Long and … (is there a phrase for long works?) B. How technical should I be? Should I talk about the languages ( Javascript, C S S, H T M L, etc) and other various tools ( Visual Studio Code, Atom, etc) that we will learn? C. Should I tell a personal story? Something like *deep inhale* how I was a computer science major my freshman year in college ( Graduated May 2016) and changed my major 5 times until I went back to computer science but by this time I was a junior and needed to graduate (student loans) so I went to my second favorite which is business so that I could graduate on time but still knew programming is something I wanted to do but not college again so I researched and found coding bootcamps and fortunately came across The Iron Yard ( Thanks Steven!). *phew* ( Should have listened to my Dad who knew the technology field was where I was going since high school. ) Now which do will you focus on you’re asking?? How about all of the above!! Soooo welcome to the blog and I hope you enjoyed this introductory post! It is my goal to give you a look at this tough but exciting 12 week journey in which I am embarking. And hopefully, with some of my interesting humor thrown in, you will at least crack a half smile along the way! F Y I* There will be a lot of side thoughts and written interpretations of visual thoughts! Thanks!!( Thanks to John Saddington for the encouraging video on “ Blogging and Branding” ( Video 4 of 5))","['Web Development', 'First Post', 'Codingbootcamp', 'Coding', 'The Iron Yard']",https://medium.com/@emmanuelamon92/the-beginning-journey-to-becoming-a-junior-developer-the-iron-yard-7c9952611d39,4,"['The Iron Yard', 'TheIronYard']",2,2,emmanuel,M,0.004767402376910017,0.99523259762309
sam foong,,Coding akin to drinking from a firehose? – sam foong – Medium,2018-03-07 02:08:16,medium,"Coding akin to drinking from a firehose? Over the last 2 weeks i have started an exciting new chapter in my life, signing up to a coding bootcamp. Going into web development. Being someone who has no experience in coding prior has been an uphill climb. On the second day of class onwards you are given a curriculum( Ruby) at break neck speed. You try to grasp all these foreign concepts being thrown at you. Everyday you are being introduced to a new concept. Trying to make sense of them and apply them to the different exercises. At the end of second week you have a mini project to present to the class. Making a terminal app. My terminal app idea with a classmate of mine was to create a horoscope reader. This little project helps with simulating real life working environment in future. You learn to collaborate with someone else. Throughout the 2 weeks there are ex alumni coming in and sharing their experiences with you which helps. Besides that a C T O, Jeremy Gupta from carsguide came and shared his experience of his journey coding to becoming a C T O. Everyone keeps mentioning it’s ok to feel that way. Overwhelmed I mean. Going through other forms of online tutorial/websites helps. Some of the online materials which i found extremely useful are launchschool website/codeacademy, ruby docs, the book learn to program by Chris Pine. Teaching assistants are in if you need any help in clarification with a concept or any challenges. As for now, just going through all the materials and keep coding. Hopefully the light at the end of the tunnel is near.","['Web Development', 'Codingbootcamp']",https://medium.com/@samfoong88/coding-akin-to-drinking-from-a-firehose-e419b60e8bb6,0,[],0,0,sam,M,0.011474244831798909,0.9885257551682011
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Coding Bootcamp: Week 1 – Joseph Cardillo – Medium,2018-03-01 11:17:01,medium,"They encouraged us to start a journal or blog on Medium. I’m hesitant to add one more social media platform to my schedule. But the class has been moving so quickly, I thought it could actually be helpful to keep track of what we’re doing, and even as a way to (hopefully) look back and see the progress we’re making. Because right now it feels like we’re drowning in information! Class started Monday. Just yesterday, I turned to my class-neighbor and said, “ It’s only Wednesday?” Because it feels like it’s been three weeks. To me, an amateur coder — well, I don’t think it’s fair to call myself a coder yet — an H T M L/ C S S novice, we’ve already covered a lot of ground. Theoretically we have the tools to create responsive websites using the @media query option, for example. A very useful tool indeed. Like the float attribute. Now if I could just figure out how to use them without an hour of trial-and-error, we’ll be getting somewhere! That’s most of what we’re doing right now. Creating something. Looking at it through the Chrome Inspector. “ Did it work?” Tweaking a few things. “ Ah, yes. That’s what I wanted. ” Then a minute later realizing it’s not exactly how you wanted it. Changing a few more things. Messing things up. Then pressing C T R L + z until it gets back to where you had it. But sometimes the magic happens. And it all comes together. There certainly is a good deal of satisfaction that comes from bringing an idea from seed to fruit. Even if it is only a small one. I keep telling myself, “ We’re not expected to master all of this right away. It will come if we just keep digging into it. ” So that’s what I’m going to keep doing. Keep showing up. Keep doing the work. As Woody Allen says, “80% of life is just showing up. ” Very wise words indeed. Now for a little Java Script practice.","['Web Development', 'Codingbootcamp']",https://medium.com/@josephcardillo/they-encouraged-us-to-start-a-journal-or-blog-on-medium-1c15b9d8673,0,[],0,10,joseph,M,0.004069495880582216,0.9959305041194177
Joe Andy,Fullstack Web Developer interested in learning from anyone and everyone. Open to new ideas and efficient solutions.,Good Coding Habits – Joe Andy – Medium,2018-05-25 08:21:34,medium,"Good Coding Habits Photo by Markus Spiske on Unsplash I have been coding every day from sun up to sun down these past 10 weeks at a coding bootcamp which I am sad to graduate from here soon. I am ecstatic to join the work force, but I will miss the relationships I have formed with everyone that has had the same love for programming as much as I do. Over these past few months I have noticed good habits that have improved my code in the long run, and I am also beginning to notice the bad ones that are just now starting to surface. You live and learn. Just make sure you D O learn. Here are some helpful habits coming from someone who has seen tens of thousands of lines of code over the course of a few months. P E R S I S T E N C Eis key in programming. Being able to constantly push yourself to the next level, by always having that “student” mentality, is crucial for your skillset in coding. N E V E R settle for just enough knowledge. Knowledge is power. There is somebody right N O W competing with your future job. “ Work like there is someone working 24 hours a day to take it all away from you. ” - Mark Cuban. Free Timeis a must. I cannot tell you how often I will find myself staring at that vibrant blue light in front of me for hours on one singular problem only to discover the solution shortly after I take a quick breather, or go for a run. Your mind needs to rejuvenate in order to develop new ideas and especially in order to solidify current knowledge. Persistence is great, but if you find yourself dreaming of what you will be eating for lunch, then take a quick ping pong break to distract your mind for a minute. Do not forget to go back to coding though! Relationshipswith other programmers is beneficial for yourself as you begin to progress down this dark and scary road of coding. Even if it is via internet. It is good to receive advice from others in order to understand the various approaches towards the same end goal. It is also beneficial to repeat what you have learned to others as well. What I have learned from the numerous software libraries and frameworks out there, is that you do not truly know something until you are able to explain it to someone else. Remember, we are all in this together. Positive Attitudeis a big one for me. It is really easy to become discouraged while coding, especially when you first start your pursuit in programming. But never beat yourself up. Remember, you are learning to communicate to a piece of silicon and hardware. And it is a smart ass. Know your weaknesses and devote more time towards them. Simply ignoring what you do not know will N O T help you later down the road. Be sure to solidify the building blocks of your knowledge in coding N O W. You will not regret it. I hope you learned something new from the article. Coding is not easy. Anyone who says it is, is lying to you. But we can encourage and help each other, just like anyone who might have helped us along the way. Remember, coding is like a muscle. The more you use it, the stronger it becomes. If anyone has any questions for me, feel free to leave a comment or a message. Thanks!","['Programming', 'Good Coding Practice', 'Codingbootcamp', 'Code', 'Encouragement']",https://medium.com/@josephiznot/good-coding-habits-9f5fb7770476,0,[],0,11,joe,M,0.02449475112475898,0.975505248875241
Le Wagon Tokyo,Coding school for creative people & entrepreneurs #startup 🚀Intensive 9-week #FullStack #Bootcamps http://bit.ly/1VQNB08 👀,On joining Startup Weekend Tokyo Fintech (and ending up winning the whole thing),2018-03-09 03:31:21,medium,"On joining Startup Weekend Tokyo Fintech (and ending up winning the whole thing) What do you do on week-ends when you’re a Le Wagon student living in Tokyo for a couple of months? You join Startup Weekend! The Tokyoite tech events scene really grew over the past couple of years, and whether you’re into A I, Crypto or just want to listen to some inspiring founder stories, you’ll probably find an event to join any day of the week. While most of our students join evening events during weekdays, some just take it to the next level: They join events during the week-end. The W H O L E week-end. Held in Japanese. This is what Taras — a student of our fourth batch here in Tokyo — did, and his team ended up winning the whole thing! Here you go for a pretty unusual Tokyo experience. Never heard of Startup Weekend? If you’re not familiar with the formula of Startup Weekend, this is what to expect: participants will gather on Friday evening, pitch ideas, form teams, and hack their way to the final judging session on Sunday afternoon. It’s usually very hands-on, and at the end of the hackathon teams are expected not only to pitch an idea, but to actually demo a working prototype (at least if they want a shot at winning). Taras also has some advice for those who consider joining “ Personally I joined because I wanted to challenge myself and put in practice the skills I have just acquired with the bootcamp. And it made quite a difference compared to the first hackathon I joined back in Ukraine before! Overall, I’d advise not to overthink too much if you want to join one: just go for it, especially if the main topic is interesting for you. It might be somewhat intimidating at first, especially for those with limited tech skills, but a team needs a bit of every skill to perform”. Paying with your vocal cords So what did Taras chose to work on? “ I picked a project focused on an emerging area of voice payments. Masanobu-san who pitched the idea demonstrated great enthusiasm and it was obvious that he devoted quite some time to do his research prior to the event. I just felt it was a good fit for me” he starts, “ The team ended up being 6 people: 3 Japanese, 2 Mongolians, and me, a Ukrainian (laughs). We communicated in Japanese 90% of the time, which was mostly ok, except for when one or another teammate got too excited about a new idea and spoke really fast”. Believe it or not, Tokyo actually has a Startup Weekend organized almost every week “ This one was roughly 70 people, and we ended up with 12 different projects”. Our students get used to shipping prototypes quickly, but for a “normal” person, what is delivered over just 2 days can be quite impressive. “ I basically took care of the whole website for our application, both design and code. It shows general information, but most importantly, it contains the user interface that enables you to set limits, area of usage, as well as an interface for previous transactions”. So how did the app itself work? “ As the name Voicy Pay suggests, the idea is to enable user to validate payment using voice recognition. Why voice? Well, it has pros and cons. Some people are not really comfortable with face recognition for example, and fingerprint is very accurate, but tends to lose its accuracy over time, not to mention the cost of hardware and major risks with data storage and access. On the other hand, voice recognition software and devices are cheap, available off-the-shelf and quite reliable with continuous improvements even as we speak”. And for that, Taras’ team did not have to look very far: “ We just used Amazon Echo and Google Home devices, it was pretty straightforward”. And the winner is… So we spoiled a bit the result with the title, but guess what: Taras and his team ended up winning the whole thing! “ I don’t really have any advice on ‘how to win’, but I guess team spirit played a big part. Masanobu-san who initially pitched the idea created an environment from the outset, where everybody was really involved and responsible for the project’s success. We made a prototype with Amazon Echo, and it worked just the way we expected it to work even during the final demo in front of the judges, so that probably helped (laughs)”. The prize money that is usually at stake during Startup Weekends is not enough to kick-start a “real” startup, but you can actually connect with potential help during the event itself “ We were approached by a couple of interested parties, including potential angel investors and a Tokyo-based business incubator. We’re currently considering our next step, while each team member determines how much of their time they are ready to devote to the project from now on”. Congratulations Taras for the win, and a big thank you for your time!","['Startup Weekend', 'Fintech', 'Codingbootcamp', 'Tokyo', 'Learn To Code']",https://medium.com/le-wagon/on-joining-startup-weekend-tokyo-fintech-and-ending-up-winning-the-whole-thing-5adcc9d714bd,1,[],0,171,le,F,0.5308343409915357,0.46916565900846435
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",API|IPA – Emily Deans – Medium,2017-07-19 01:38:20,medium,"A P I| I P A Despite a good night’s sleep and ample caffeine intake, I was feeling pretty wiped today. I’m sure the general low energy was due, in part, to the cumulative effects of the past few week’s substantial information load — though have a sneaking suspicion that the sluggish, swamp weather we’ve been experiencing over the last few days hasn’t been doing me any favors in that regard either. I haven’t spent a summer here in about ten years, and am remembering now — all too intimately — the very special, distinctive feel of D C mid-summer humidity. It’s like a clammy, unwelcome hug from an old acquaintance that grabs you the moment you step outside, and won’t let go until you’re able to find refuge in the proximity of a high-velocity fan or A C unit. But I digress… Today, we did some exploring around the brave new (for us) world of A P Is ( Application Programming Interface). Yes, I did accidentally refer to them twice as I P As in class (whoops). This is another topic I’ve heard mentioned and explained in a few different ways, but never quite grasped until the last couple of days when we started using them. A P I’s are basically the requirements and specifications of a program that allow those programs to communicate and interact with other programs. They can be super cool resources for programmers, as they essentially allow you to access and utilize somebody else’s Java Script for input into your own programs. Many web-based companies have established A P Is as a way of sharing functions of their sites with others to increase reach and access, open the door for partnerships and other collaborations, and leverage data assets — amongst other things. A lot of companies rely on A P Is to sustain their infrastructure and, certainly, everyone who uses the web today benefits from their existence. Have you ever received an email invite for an event at an unfamiliar venue and noticed a handy map inserted right in the body of the message? Chances are, that invite design company used an A P I (most likely Google Maps) to insert that feature. Lucky for them because they didn’t have to pull together their own G I S system (complicated and expensive!) from scratch A N D lucky for us, because now we know how to get to our event! The friendly Google Maps A P I homepage Some of the most utilized A P Is at the moment come from Twitter, Facebook, Stripe, Dropbox, and of course, the aforementioned Google Maps. Today, we played around with capturing information from A P Is — N A S A, Git Hub, and Recipe Puppy — using the ‘fetch’ function and inputting selected segments into our code. I still certainly have a ways to go before I’m feeling proficient/savvy with A P I use and manipulation, but I already can appreciate what an exciting and useful tool this is to have in your developer kit. Song of the Day: Loudspeaker by M U N A // Soundcloud A L S O has an A P I","['Web Development', 'Codingbootcamp', 'The Iron Yard', 'Lesbians Who Tech', 'API']",https://medium.com/@emilyldeans/api-ipa-613fb37ccb58,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Gabe Wright,,The Iron Yard: Week 1 – Gabe Wright – Medium,2017-02-03 23:12:09,medium,"The Iron Yard: Week 1 I’m just going to get straight to the point. The amount you can learn in a week is really amazing. So far, my Iron Yard experience has been awesome. I actually haven’t gotten stressed yet, and still I’ve shoved so much H T M L and C S S knowledge in my brain, I’m not really sure how I’m not. I will say, I’m very glad I’ve studied both languages before starting. If it wasn’t for the prep and pre-work I’ve put in, I could definitely see why people feel swamped going into their first week here. For me, this whole week has been more of a giant “aha!” moment. The more I learn and apply this stuff, the better I realize why people can build beautiful sites so well and efficient. Learning things like Flexbox and Bootstrap helped me understand how most professionals approach their work flow for each project. Before, I was almost timid wondering how anyone could build anything efficiently with these languages. Now it all makes sense. The one thing I have to keep in the back of my head is, “it only gets harder. ” This week and maybe next week will seem manageable, but I’m definitely still anxious about diving into Java Script. Until then, I’m just happy to have my head above the water.","['Coding', 'Web Development', 'Coding Bootcamps', 'Learn To Code']",https://medium.com/@gabe1331/the-iron-yard-week-1-8a2ff364f222,0,['The Iron Yard'],1,0,gabe,M,0.0,1.0
chibueze ukaegbu,,"LearnFactory Internship: Day 16 (May 21, 2018) – LearnFactory Nigeria – Medium",2018-05-22 19:17:27,medium,"Learn Factory Internship: Day 16 ( May 21, 2018)“ Desire is the key to motivation, but it’s determination and commitment to an unrelenting pursuit of your goal — a commitment to excellence — that will enable you to attain the success you seek”… Mario Andretti Family… I missed my interns; I did not see them today, I did not even get to pop in to say hi to them. Today was excruciatingly busy; had to work double time to meet some deadlines for a client. Yes, we still have to pay the bills, self-funding the internship is no joke and our outsourcing business is very crucial to that. Infact, it is the whole purpose of the internship, to groom world-class software developers that can be outsourced to client projects. Well, the fourth week is underway, we are pushing for the first month …wow. We have made it this far, we will surely make it to the end. From the summary I got, they waded into the deep waters of functions; dissecting function expressions and statements, return from functions etc. I’ll have more gist for you tomorrow, so stay tuned. S P O T L I G H T O F T H E D A Y In the spotlight is our beautiful damsel, Miss Learn Factory, Bernadine Eze. Yesterday was her birthday, and she was all smiles. Bernadine Hi my name is Eze Bernardine May. I was born on 20th May into the family of 5, two handsome guys and three beautiful ladies. I am an indigene of Mbaise in Imo State. Well, a couple of years ago, I lost my dad, that event turned me into a strong and daring woman. I have been raised by my elegant mummy; Mrs Eze Ezenwanyi Rose whom by the special grace of God has done a great job in contributing to the woman I have become. I am fair, average height and slim. I have got a black hair and a fairly deep dimple on my right cheek that gets pronounced when I smile. This feature some how, differentiates me facially from my immediate younger sister whom people say looks much more like me. My voice is exceptionally unique, amazing; I will bet, you would want to hear me talk. Most times, many think I am a half-caste and other times, questions how real it is. I am very reserved, quiet and bold. I treasure my moments of solitude, weird right? I smile and laugh a lot; variety is the spice of life you know…, and some times fantasize. I like the colors black and white, which I somehow see as viewing things from two different perspectives. I like running, I love mathematics, I love reading books especially spiritual books, and above all, I love God that is to say, am a Christian. When it comes to food, ha-ha I don’t eat much and neither do I eat often. Rice is my favorite as well as okro soup especially when cooked with oil-bean (ugba) and stock fish with a little vegetable. Amongst all I dislike, I detest a proud look and negativity. I attended my secondary school at Divine International Schools which is located here in Aba. During those days, I sat for a couple of external exams, studied on scholarships and acquired several awards; all these where due to my love for mathematics. Presently, I am a computer engineering student of Michael Okpara University of Agriculture, Umudike in Umuahia. Most of the entrepreneurial skills that I find pleasing and worthwhile are shoe, bag production and sewing. I equally have an intermediate knowledge in graphics design, and currently, I am learning Computer programming, a skill i have always relished. Finally, this is me. Nothing so much included and nothing so much excluded. Yep, please start bringing the bride price. From www. brideprice. com. ng, she is worth N100, 000, 000. 00, loool. I’m taking it on behalf of the family. Well, have a lovely night, I’ll see you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-16-may-21-2018-3d96fa146657,1,[],0,122,chibueze,M,0.0,1.0
Zaynaib Giwa,Full Stack Developer | Aspiring Data Scientist | Northwestern Coding Bootcamp Student | Udacity Scholar | Foodie,Learning How to Learn – Zaynaib Giwa – Medium,2017-10-02 05:37:17,medium,"Learning How to Learn I recently finished the pre-work for the Northwestern Coding Bootcamp. With a week of downtime on my hands I figured I should pursue some of the supplemental materials. One of them was a Massive Online Learning Course ( M O O C) on Coursers called Learning How to Learn designed by professor Barbara Oakley. Professor Oakley is the author of a Mind of Numbers and she started the study of mathematics at the age of 26. Which dispels the common belief that you need to be born with the talent of mathematics in order to succeed. I had a lot of fun with this M O O C. Professor Oakley is a wonderful teacher. I liked the fact that Professor Oakley uses analogies, metaphors, real world examples and technical jargon to get her point across. These are some of the techniques that she suggest in her class in order to grasps a full understanding of the material. Sleeping, Exercising, Eating Well Making sure that your body meets the bare minimum it need to sustain itself is the best you can do to learn. I can tell you from experience not taking care of yourself can lead you to failure. Eat plenty and eat well! Professor Oakley did not mention this in her M O O C but this is important. If you can, eating whole food fresh fruits and vegetables will help you gain more energy and improve your mood. If I don’t get enough food to eat I get cranky, sleep, and headaches. Eating processed food will also lead me into being sluggish all day. It’s hard cooking every single meal so just cook in bulk. Get inspiration from youtube and pinterest for meal prep ideas. Recall Recalling things from memory to make sure you actually understand the material. If you cannot fully explain the material to yourself or to another person then you do not have mastery. The best way to recall is by going over your class notes and rewriting them. Creating practice test or doing projects outside of class to reinforce things that you learned in class. False Mastery I am guilty of doing behavior that promotes false mastery. Looking at a problem and saying I got it. But not attempting to solve the problem is not a way to master a skill. Highlighting and rereading does not improve the learning process. I’ve done this while I was teaching myself how to code. I would watch Lynda tutorials on javascript and computer science theory but I never attempted to do a project on my own. Or redo what I learned from the video from memory. This crippled my learning. The only way to become a better programmer is to write code. The more code you right the better you get. Deliberate Practice Going over things you already know does not help you master a subject. You have to get outside your comfort zone in order to master a subject. Spacing out study sessions Cramming for a test does not work. I’ve tried to do it many times and I can testify on this. This is when the power of habit comes into play. Spacing you study sessions often makes it easier to retain knowledge. You can combine this tip with the recall tip. In order to make sure you understand the material make yourself a practice test before moving on new material. Making sure you have a strong foundation for your house of knowledge. This is a great way of dealing with test anxiety. Getting into the habit of taking test daily will make you less afraid of them. Coding for 10 minutes a day for an entire year is better than coding for 8 hours only over the weekends. Coding constantly will make you get the basics down in your muscle memory. If you have gaps while you are learning you will spend time trying to remember what you just learned instead of learning new material. It will be this never ending loop of stunted progress. For inspiration try the 100 days of code challenge. If you get stuck while learning try asking a question on Stack Overflow or go to some tech meetups around your community. Pomodoro Technique The pomodoro technique is great for people suffering from Chronic Procrastinator Syndrome. You dedicate 25 minutes to completing a task. Once the 25 minutes are up you take a 5 to 10 minute break. I’ve used this technique throughout the entire course. Breaking things up into 25 minute intervals makes a tasks less daunting. Paring this tip with the spacing out study session helped me to stay on task and finished the course. Focusing on the process not the product Another reason why task can be daunting is that we focus on the destination and not the journey. This can suck the joy out of learning. Throughout most of my school days I was told G P A is important. A grade letter is the ultimate reward for taking a class. But in the real world grades do not matter. A good company is not going to hire you because you have a 4. 0. They are going to hire based on how you apply your skills. Everyone’s journey to becoming a web developer is different. It might take some people 3–6 months to get a job as web developer. Others it might take a year or two. The main thing to focus on is getting better with the skills you want to learn. Someone will eventually take notice. Imposter Syndrome Everyone one has imposter syndrome from time to time. The feeling that you are not good enough. I’ve seen a lot of people who are new to the tech community have imposter syndrome. I have it too. Just remember everyone was a beginner at one time in their life. Some people learned how to code when at the age of 8 others learn at the age of 50. As long as you try you will always get better. People who are successful are the ones that preserve. There is a saying “ It takes 10 years to become an overnight success. “ Teamwork Teamwork makes the dreamwork. Programming is not a solitary practice. In fact most if not A L L S T E M fields are collaboratory. Being able to look at problems from different perspectives helps speed progress along. If are more knowledgeable than your mates help them, explain, use recall tip to solidify your learning. If your mates are more knowledgeable than you. You can learn from them. For instance, I know that I am lacking from the front-end development side of web development. I asked my classmates from the bootcamp what they do to make their layouts look so nice and clean. Everyone tells me to use Bootstrap. They were right. Bootstrap makes C S S layouts easier especially when you are on a tight deadline. Going over your work Being able to see with a fresh pair of rested eyes and going over your work make you a better learner. I was guilty of not doing this when it comes to my writing and even my code. When I go over my code I clean up the indentations so other programmer can be able to read my work. I also try to create better comments when I refactor my work in the future. I add more functionality and style when I go back to my old projects. By not going over your work you are denying yourself a great privilege of improving and learning from your work. Further Reading How to Become a Straight A Student — Cal Newport A Mind for Numbers — Professor Oakley Pomodoro technique Chunking Intensive Notes on Learn How to Learn M O O C The Art of Getting It Done","['Productivity', 'Codingbootcamp', 'Codelikeagirl', 'Life Hacking', 'Habits']",https://medium.com/@zaynaibg/learning-how-to-learn-7ca81ca2fa4f,0,[],0,0,zaynaib,Unknown,Unknown,Unknown
Rhys Woodberry,Web dev and video game enthusiast | rhyspec.me,Focusing On The End Goal – The Code Odyssey – Medium,2018-05-20 02:01:01,medium,"Focusing On The End Goal Bootcamp is tough. Very tough. I can’t think of a time I felt more overwhelmed and on my toes. It doesn’t even come close to University. I don’t think anything could have prepared me for the feeling that bootcamp makes me feel so often. I have really enjoyed learning to code the past few months. Going from a retail worker with an unfinished Arts degree to where I am right now, only a few months down the road is pretty amazing. I have loved just being immersed in the world of technology and trying to absorb everything I can. Though, it hasn’t been a bump-free journey so far at all. There have been more ups and downs than I can count. There have been times where I have felt so alone and dumb, that I’m not smart enough for this kind of thing. There have been days where I can’t grasp concepts properly, or understand what happened in class. Times when I feel like there is far too much for me to have to learn to be able to do anything useful. However, despite all of these moments, one thing has kept me going. The end goal of completing the course, which is slowly getting closer with every day. I keep reassuring myself that I am doing the best I can, in the time I have and that I have already come so far in such a sort amount of time. I think in times of trouble and distress, it’s always good to keep your eye on the horizon. At the thing you are working towards, and to remind yourself on your accomplishments and successes rather than what you don’t know and what you’ve failed at. The only way to move forward is to accept the present, no matter how good or bad, and push forward towards an end goal.","['Life Lessons', 'Personal Development', 'Codingbootcamp']",https://medium.com/the-code-odyssey/focusing-on-the-end-goal-b3435b6c97,1,[],0,50,rhys,M,0.06022150438394093,0.9397784956160591
Angela Wolff,"Ex-NHS Accountant, now a coder at Makers. July 2018 cohort.",A promise to compromise – Angela Wolff – Medium,2018-08-16 10:34:50,medium,"A promise to compromise Today I discovered that javascript dealt in promises. I’m afraid that information did my nut in. My already overloaded, tiny-brain decided to curl up in a corner and quietly implode. I’ve stumbled forward from a crisis of coding confidence and gone from thinking I might be getting it before falling back to a floundering heap of incomprehension. We are in Week 6 at Makers. The first week of group work. That I have to say, is terrifying stuff. It may seem like a relief from the intensity of daily pairing but group work carries with it, it’s own emotional and technical baggage. I like to think of myself as calm, rock-like. It’s not unusual for me to be described as such by my peers and family. However, I tend to monitor my internal emotions a lot and while my exterior may be growing moss like an un-rolling stone, my interior is on a turbulent ride over mountain and moraine. In any given moment of the day I can oscillate from clinically depressed to, if not exactly manic, maybe to something that could at least be described as steady. Today was shit. We did our Agile standup session this morning, and planned the day, allocating tasks out. By mid-morning it had become clear, that sub-team A had discovered all my tasks were dependencies of their own and so had just rattled them off before moving on to more exciting stuff. My morning was cast asunder — to a wasteland of thwarted efforts or a gazillion merge conflicts. I resorted to my default of a right-royally-pissed-off-sulky-child and took myself off for a restorative coffee. Photo by Kaboompics . com from Pexels The coffee helped. I reminded myself that I grew up quite a few decades ago and that perhaps there was a better way to deliver a world class Air B N B clone, than skulking downstairs, playing puzzle bobble. It helped that while sulking about my own team crises, others were having their own catastrophic meltdowns around the office. I reckon Wednesday of week 6 is always a dark day at Makers H Q. Of course this first group challenge had very little to do with our technical ability to manufacture a rip off Air Bn B site and everything to do with team dynamics and how we learn to deal with conflict and hopefully mould ourselves into performing teams. I found it very interesting how seemingly well constructed teams can still start to crumble over time. Initially we worked together extremely well. We crucially had a similar work ethic and all seemed to have aligned motivations. Tasks were well segregated at the beginning and so it was easy to farm jobs out so everyone could contribute from an early stage. In addition we were all eager to get the job done and not particularly precious about the nature of the tasks we were working on. Over time I think we became a little complacent with our stand-ups, they became huddles around the most exciting laptop and it was harder to ensure we all remained aligned to the original team goals. Fortunately, we had developed sufficient trust to recognise the crumbling morale and came together for a great retro where we discussed each other’s highs and lows. We reassessed everyone’s current needs, such as the need to contribute, the need to maintain team morale and the need to make something work. It was a good clearing of air. Only time will tell whether this new found level of understanding will result in an equitable balance of individual compromise and a positive outcome for the team. Originally published at whatapalaver. co. uk on August 16, 2018.","['Teamwork', 'Makers', 'Codingbootcamp']",https://medium.com/@warriorwomenblog/a-promise-to-compromise-966ac48a400c,1,[],0,54,angela,F,0.9967919835634214,0.0032080164365785964
Monica Kosciuk,Full-Stack Developer // Lifelong Learner // Engineer // Climbing Enthusiast // Improviser,Getting past the crux in climbing and in coding – Monica Kosciuk – Medium,2017-08-05 23:06:17,medium,"Getting past the crux in climbing and in coding In climbing, a crux is the most difficult or most dangerous section of a route. The grade of the route is based on the difficulty of the crux. Some routes have a really difficult crux and the rest of the route is easy sailing from there. Others may have several cruces. And still others may have a consistent difficulty level all the way through with no crux. I’m finding many similarities in how to get past the crux in both climbing and coding. If you’re just watching someone climb (or live code), you’re not going to get better at it yourself. You’ll have ideas on how to execute the problem (route) better in your mind, but you won’t actually have that muscle memory or specific balance required to run the route yourself unless you actually run the route yourself. Coding is the same way. You won’t be able to familiarize yourself with the steps required to go from start to working product unless you sit yourself down and code through the No Method Errors, pry into the non-working code, and see what it’s doing versus what you think it’s doing. You can bring yourself to stackoverflow and lookup people’s answers to questions, but unless you try them out yourself and see what works for your specific code, it’s going to remain in its current state. I try to pry into what I think is even working code to see what it’s doing just to make sure. You execute unit tests in coding just as you run tests on a climbing problem to see whether your idea for a move will fail or succeed. Will you fall off that heel hook or successfully push yourself up to the next rock on the route? The more you test your move, the better balance and confidence you’ll have in pulling off that move when you’re climbing the whole route. You’re going to have confidence in any code you’re refactoring if you write good tests for it. I’m also finding similarities in the process of working together in climbing and in coding. One person may have a better idea on how best to get past a route’s crux whereas, on another crux of the same route, someone else might have an easier time and a clearer solution. One person might code a cleaner looking function than another, but later on down in the path to a working product they may have a harder time implementing another function that someone else flew through. Sharing ideas and helping each other get a better handle on the cruces makes us better coders. I’m going to be starting Week Three of Launch Academy’s immersive in-person program, but it feels like it’s been two months with all of the new techniques, languages, and frameworks that I’ve learned. I thought I’d combine my two passions for this update on the journey.","['Programming', 'Climbing', 'Codingbootcamp', 'Bouldering', 'Coding']",https://medium.com/@koscim/getting-past-the-crux-in-climbing-and-in-coding-7a71dec8c57d,0,['Launch Academy'],1,3,monica,F,0.9960501625340036,0.00394983746599644
Jacob Moore,,Day 16 — Calling all API and SUMMER SLAM – Jacob Moore – Medium,2017-08-07 19:39:00,medium,"Day 16 — Calling all A P I and S U M M E R S L A M Our task today is to pull data from an A P I and then use callback functions place said data into containers. I can get the data from the A P I into a response and it shows up correctly when I log it out. Well that is when our I P hasn’t made too many requests and it fails. I even have the C S S at a decent spot. It’s doing the callback to place the data that I’m confused with. The initial function I have has all the data for easy view but then bam. Lost. Hopefully I’ll get some more time with this from the instructor. As for the weekly project…we’re supposed to build out a functional calculator with limited operators. I’ve got the design super close, the H T M L makes sense, but I’m not quite there. I still need to fix an issue where the values don’t match the H T M L, operators are numbers not the value, and of course doing the actual operations. So partially completed? Struggles: Callbacks. I get their general use but applying them in use is alluding me. Understood: Promises for the most part make sense. It’s literally like a holding spot. Looking forward to: Completing the weekly assignment. If I can get it closer in the next day or so I’ll be thrilled. Even if it’s just having the J S read the actual value. Also a quick shout out to Indy Hackers for putting on the Indy Hackers Summer Slam. It was the first meet up I went to and pretty much solo and met some really nice people who had some really great things to say about The Iron Yard, the tech community, and just learning. Loved getting to meet some new people and hear such a positive take on the tech community.","['JavaScript', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-16-calling-all-api-and-summer-slam-3e11e8fcceb,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Taylor Edwards,,Learn JavaScript in One Day – Taylor Edwards – Medium,2018-04-06 17:14:58,medium,"Learn Java Script in One Day Let’s be real. Coding takes time, practice, and thought. When I say you can learn Java Script in one day, it’s not that you’ll be able to go out and build a web app tomorrow. What I am saying is that in one day, there are many resources available in our dev community that can help you get to a place of understanding with Java Script where you will be familiar with the language, can speak competently to your colleagues/job applicants/contractors/etc. , and be able to have a basic understanding of a codebase you may be working with. As I said before, there are many free online resources available to learn to code. I want to share my experience that I found effective with coupling multiple resources which allowed me the flexibility to learn on the go while also providing ample hands-on experience to practice the principles I had learned. N O T E: Neither of these companies is compensating me in any way for this article nor should it be construed as any formal endorsement/agreement/etc. You may have heard of Encode or free Code Camp. I’ve found that leveraging these two resources hand-in-hand can produce powerful results and retention of what is learned. Encode is a mobile app( Android or i O S) that has a robust course curriculum for learning Java Script in individual micro-lessons and practical application exercises that can be done easily while I’m on my phone. If I’m waiting for the train, arrive 5 minutes early to class, or am vegging on my lunch break, I can be learning new J S principles to pass the time rather than social media trolling or swiping right. Then when I had 20–30 minutes, I would leverage the free Code Camp curriculum as a refresher to what I had learned in my micro-lesson on Encode, leverage additional practice exercises to refine my skills, and solidify topics I was learning. I am still a novice when it comes to Java Script but I can confidently sit down and have an intelligent discussion with another developer about a project being worked on, can interview a job applicant for an engineering role and gauge their level of expertise with J S, and even review code and have a simple understanding of the framework and what’s happening in different areas of the codebase.","['JavaScript', 'Coding', 'Codingbootcamp', 'Freecodecamp']",https://medium.com/@tayloredwards_90748/learn-javascript-in-one-day-fb7ce5545a08,1,[],0,1,taylor,F,0.7432092531814825,0.2567907468185176
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 18 — (13) – Mike Brave – Medium,2018-09-06 22:19:41,medium,"42 Piscine Day 18 — (13) Edit: This is part of a series that culminated here, Next post. Previous post. I may actually be dumb after all. I thought I was smart, hard working, dedicated. Friends of mine usually use the words “witty”, “sharp”, “creative”, “brilliant”. Maybe I was just a big fish in a small pond. None of these words feel true at the moment. Yesterday I went on a bit of a rant in the blog about people discounting how hard it’s been for me and others of us without a stronger background in coding. I regret that rant, it was unprofessional and came from a place without forethought. So I dug a little deeper to see how I may have been mistaken. I reviewed all of the assignments we’ve been doing. I had in my mind told myself that I didn’t start struggling until after the first week, this wasn’t actually true, I’ve been struggling with concepts since day 4, and I struggled with format and how to turn things in since day 1. The whole thing has been a struggle. I have learned more than I thought I could, and am arguably not just smarter because of it, but a better person too. No regrets, but I am humbled and aware of the fact that perhaps I held myself higher than I should have. I Q tests be damned, I’m not actually as smart as they or I thought. I also have regrets about how I portrayed the last group project. Our group did fail to communicate, but this was also my failure as I was also one who communicated poorly. To not own up to my own role in this would be a disservice to everyone and also to myself. Most of what happened was outside of my control, but I could have communicated better, this is an area I don’t completely suck at and I should have performed better. One of the people in my piscine made a video of his last piscine that fairly well captures the feelings of it, you can find the video here. I should add, that his first piscine he hadn’t done any programming before and this piscine he has consistently been one of the most brilliant people that I could bring questions to, it’s cool to think about his growth like that. I’m sure that I am in many ways discounting my own growth, the test tomorrow will tell. Speaking of, that’s what almost all of us are doing right now, studying for the test, or procrastinating studying for the test. My writing this article is my at least somewhat justified form of procrastination. My intent with the blogging was to give people a glimpse of the experience as I found it really hard to find much info about how the piscine was or worked(at least in english), or how to get ready for it ahead of time, or even if you could get ready for it ahead of time. If I get in perhaps they would let me take a shot at helping to boost the marketing and recruiting, I mean I’d love to give it a go, that’s a big “if” right now though. I just hope it’s helpful for someone. A lot of the other Pisciners have come up to me telling me that my blogging about how hard it is gave them a laugh because “that’s exactly how we felt”. So at least that. I am proud of myself for keeping up the day to day of it, and for putting in the hours to learn here, I’m averaging over 14 hours a day, mostly just sleeping, eating and coding. So I’m proud of the effort spent as well. My brain isn’t adjusting as quickly as I’d like, and procrastination and poor time management struggles aside I’ve done as much as I could have done, I pushed limits, I achieved more than I thought I could, all of these are things to be proud of, not ashamed. Even if failing but done with right action it was still the right action. Or as my own little life motto has started to be the last couple of years; fail better, fail faster, fail forward. I’ve questioned if there was wisdom in listing what the assignments were as I've been doing, but I think I’ve been vague enough about them that if someone took the time to actually figure out this stuff ahead of time, then they are the most deserving of getting into the program that there ever was. Seriously, to figure things out from my vagueness, I would only applaud. That said if anyone from 42 reads these and wishes edits just let me know. I wrote these in the spirit of helpfulness not malice. Day 13 assignments are as follows, this is the last days of assignments, only large projects and tests remain. tree create nodetree apply prefextree apply infix (honestly I don’t understand what these are asking for)tree apply suffixtree insert datatree search itemtree level counttree apply by levelinsert data to the treeremove data from the tree","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-18-13-f22520081ba2,1,[],0,50,mike,M,0.003228654060934749,0.9967713459390652
it’s jennilyn,"Proud to be a #WomanInTech. Software developer, lifelong learner, runner, reader, cake-eater. Live bravely.",(Insert weird analogy here) for Git – it’s jennilyn – Medium,2017-06-02 01:40:41,medium,"( Insert weird analogy here) for Git Where I come from “git” is something you say to the dog when he’s in the way. But in the dev world it’s a system for tracking and managing your project files. Put simply, it’s version control. Let’s say you’re writing a novel and have two possible twists in mind — they could be “ Janitor in the Lobby with a Trashcan” or “ C E O in the Walk- In Freezer with a Carrot. ” You could use git to start your story, then branch off to write Janitor and C E O. Once you (or your editor) decides which is best, you’d merge Janitor or C E O back into the main path and continue writing. { If you merged both you and Buzz Lightyear would be having a chat…} I feel ya, Woody. Today I started my week two project and as I was writing the H T M L for the calendar page, it occurred to me that another way of writing the code may work better. So I created a separate branch and saved that “plot” for later consideration and implementation in case it ends up being the best option. Perhaps I will eat these words later, but I like git. Despite its complexity, the basic aspects make sense based on the way I’m learning to think about development. There is still a ton to learn ( I feel like Woody in the photo above) but knowledge and confidence will come in time.","['Git', 'The Iron Yard', 'Learning To Code', 'Web Development', 'Codingbootcamp']",https://medium.com/@jennilynhowell/insert-weird-analogy-here-for-git-6faff0afcef1,0,[],0,0,it’s,Unknown,Unknown,Unknown
Brigit Rossbach,"Software Engineer in Missoula, MT. Yale '16",Keeping Perspective in an Immersive Coding Bootcamp,2017-08-02 11:59:21,medium,"Keeping Perspective in an Immersive Coding Bootcampcredit: http://www. queenshotelbournemouth. com/bournemouth-boot-camp/ A few months ago, I decided to take a huge leap of faith and quit my job in order to enroll in a web development immersive program at the Flatiron School. I’m sure most of you have heard of these bootcamps- promising to teach you to code to a level that will get you hired as a developer in 12–18 weeks ( Flatiron is 15). I’m in the middle of week 3 right now, and have been really struggling with our first project in Ruby this week. In partners, we’re working to build a C L I that allows the user to interact with a database we built, pulling from an A P I. Now- before any readers wonder- no, I wouldn’t have known the meaning of any of the words in that sentence just a few months ago. I have no background in coding, never took a computer science class in college, and yet here I am. So anyways, I’ve been feeling quite discouraged, like I just can’t pick it up. I ask myself often if maybe I’m just not meant to be a programmer- maybe my brain just doesn’t get it. Then last night, I started thinking more about how far I’ve really come in the last 2. 5 weeks, since July 17. I remember so clearly, probably exactly 2 weeks ago on the Wednesday of week 1, being completely perplexed by the idea of instantiating an instance of a class. I just couldn’t get what was even going on- my brain was stuck. It took me (what felt like) an embarrassingly long amount of time to figure it out. Today, that is already second nature to me. Not only am I writing new classes, we’re building databases using Active Record and allowing a user to interact with that database. We’ve already gone so far past how to write a class, that it doesn’t feel like an accomplishment anymore to understand it. Code from the first week of bootcamp. Even more than that, on Monday of week 1, I don’t think I even realized what a Class in Ruby was, let alone how to write my own. It’s pretty unbelievable how much we’ve learned in just two and a half weeks, no matter how much more there is left to learn. I’m beginning to realize that this is just how an immersive bootcamp is. The learning curve is so steep that you constantly feel like you’re pushing a huge boulder up a hill. Just to keep up, you’re expending a huge amount of effort and accomplishing so much — but every time you start to feel like the weight has lightened, more work is added and it gives heavier. Despite that, we’re moving forward. There are huge ups and downs every day of a bootcamp, simply because of the pace we’re moving through the material- every day feels like it’s about a week long. I’m realizing the importance of keeping perspective, and taking looks back to realize just how far I’ve come every once in a while (but not for too long, because like I said- there’s so much ahead that I have to stay focused on moving forward). If anyone reading this is thinking of doing a bootcamp, or is in the middle of one, remember this. It’ll be hard to really see how much you’re accomplishing, but that’s how it’s supposed to be. The nature of the immersive model is intense ( I’m dreaming about code now- to the point that when my alarm went off this morning I thought I had to code something to turn it off), and doesn’t feel particularly rewarding unless you take a moment to pause. I have 12. 5 weeks to go, and one of my goals for the next 3 months is to keep this in mind as I continue to struggle through. No promises on that actually happening, though!","['Web Development', 'Ruby', 'Flatiron School', 'Codingbootcamp', 'Programming']",https://medium.com/techtrument/the-ups-and-downs-of-an-immersive-coding-bootcamp-775171b2ba9b,3,['Flatiron School'],1,7,brigit,F,1.0,0.0
Timika Downes,"Mom of three, lover of learning, intermittent creator!",Ruby Newbie: Each vs. Reduce Methods – Timika Downes – Medium,2018-06-05 00:41:22,medium,"Ruby Newbie: Each vs. Reduce Methods The learning curve for the newbie developer is steep. I’ve spent the past seven weeks completing carefully crafted pre work exercises before being thrown into full out, high speed, on demand coding. What a whirlwind! Many times throughout this process the concepts have seemed just beyond my reach. Put more positively, I almost understand everything I learn, but not always quickly enough or thoroughly enough to debug anything. That said, hopefully this blog with chart my growth through learning to code, and maybe it will help another newbie developer through their process. In the pre work, we learned how to set up arrays, and discovered how to iterate through them using the . times do method. Soon after learning . times do, we were introduced to the . each method, and eventually made our way to the . reduce method. Here is an example of how you can iterate through the same object and get the same results using multiple lines of code in an . each method, iterate through each item (called number) within the array, and add that item to the sumor can whittle your code down to two lines using the reduce method. Iterate through the numbers array, and reduce the array to the sum of all of the integers With the reduce method, you are able to reduce your code to two lines instead of six! With each new method learned, the level of efficiency as a coder increases exponentially. The work becomes more versatile, and it allows for more options in what we create.","['Programming', 'Ruby Code', 'Each Method', 'Reduce Method', 'Codingbootcamp']",https://medium.com/@timikadownes/ruby-newbie-each-vs-reduce-methods-83c8f6c066a2,0,[],0,2,timika,F,1.0,0.0
Sam Pellegrene,UX Developer. I blog about random stuff.,5 Things to know Before Starting A Coding Bootcamp – Sam Pellegrene – Medium,2018-03-03 13:49:49,medium,"5 Things to know Before Starting A Coding Bootcamp Looking to change Careers? Increase Salary? Hate your Job? Make sure these 5 Easy Steps are in place before you enroll in a Coding Bootcamp. Who am I, and why should you listen to me? Well technically you shouldn’t, but if you’re looking for some more guidance as you begin your journey to make a change in your life I have some insight in how to approach this new stage. I am a former coding bootcamp graduate myself with a 4 year marketing degree, went through the fear, doubt, imposter syndrome…all that good stuff. Encountered a competitive job market and got denied from 10 jobs before landing my current position. I laughed, I cried, I cursed at the sky and I celebrated… You Will Too. Be prepared for a Marathon, N O T a Sprint. It is quite common for coding bootcamps to sell you on an increase in salary potential from merely a few months of highly intensive work…sounds too good to be true right? That’s because it is. If you enter thinking you need to give it all you got for a few months you will fail…. simple. Before you apply, make sure you have enough money saved up to cover all expenses for the duration of the course, I N A D D I T I O N T O… 6 months after the course is over for your job search! The class will be the easiest part of your journey. What good is it to have the knowledge, but no money to give you the time to search for a new job? If you truly want to change your life, it will take time. Cut expenses, move back in with the folks, save almost a years worth of expenses, don’t eat out, make a lunch at home etc. The job search is The Hardest Part of this life changing equation, do not invest in a bootcamp and then go back to your old job. That’d be like going to college, getting a degree and then never using it!!…. wait…. damn. 2. A Bootcamp does not replace a 4 year or Associates degree. I cannot stress this one enough. Go and read as many debating articles as you want on this topic, but the corporate job market does not lie. I literally could not apply to any of the large corps unless I had some sort of a degree. Now, they did not care what it was in…but I had to have one. For many, bootcamps are attractive because if you didn’t wanna go to college these almost seem like a life hack too good to be true, but let me explain something very bluntly to you. ( Queue trigger reel) Without a degree, you will mostly qualify for start-ups. Start-ups will pay you sh*t and usually look for experience because they need a small yet affective dev team, even though your bootcamp instructor will tell you how great you are at coding. Companies do not care what your instructor said about you. You are a junior, inexperienced dev without a degree in their minds…sorry but just being blunt. Let a bootcamp compliment your degree, do not have it be a substitute. “ But Sam, what if I am a great coder, most tech companies just wanna see you know how to code!” Unless you have already built impressive dynamic applications, you didn’t even need to attend the bootcamp, just go work for Google, Facebook or Samsung. Side note…in a world riddled with plug and play js client side frameworks, building applications is something most any guy or girl with a few hours on their laptop can spin up in a few days…just saying. 3. Don’t rely on Recruiters Now let me be very clear…recruiters and contracting companies are of extremely high value… I am not saying they are not a tool to be leveraged, just do not rely on them to change your life. Sooooo many bootcamp attendees, when asked how their job search is going, will say this exact line: “ Wow it is going great, I met with 3 recruiters last week and they’re gonna let me know when they hear something… I am oodled with excitement and am headed to buy myself a new car to celebrate!” Minus the new car, this is a prime example of somebody who has set themself up for a 6 month to 1 year long job search. Wanna know how to take control of your job search. . N E T W O R K! Go grab coffee at 7am with as many people as you can, get out of bed early, go to meetups, build a list of your top 10 companies you’d like to work for and W H Y! You should be so busy that you have a hard time finding time to speak with recruiters. If you do this, you will decrease your job search time significantly. 4. Be able to showcase your abilities, not just talk about them. One of the biggest hurdles to overcome will be the fact you do not have a computer science degree, or associate equivalence. In order to overcome this, have your projects in a demo ready state on your phone or laptop. Whenever the conversation in an interview went to academic credentials, I would immediately pull out my phone and show them the apps I had built on my own. In addition to stating the reason I built them and the problem I was trying to solve. Managers quickly overlooked my lack of C S degree and wanted to know more about my app. Physical proof of your skill will N E V E R lie, and it will always be more impressive than a degree. You just have to know how to showcase it. 5. Stay Humble and Stay Hungry Yes you went to a bootcamp, yes you may have created some dope-ass class projects…but remember in the eye’s of corporate you are a junior dev. Remain humble, remain passionate and you will find those attributes are much more important than what language you have mastered. Culture and relationships are perhaps more important on a team than technical skill. They can teach you the code, they cannot teach you how to act when you get stressed, that was your parents job. If your character and virtue are weak…no amount of code will change that. Be a better person and you’ll find yourself getting a better job.","['Programming', 'Bootcamp', 'Codingbootcamp', 'Coding', 'Motivation']",https://medium.com/@sampellegrene/5-things-to-know-before-starting-a-coding-bootcamp-75704f0eb700,12,[],0,30,sam,M,0.011474244831798909,0.9885257551682011
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",4 Reasons to Learn to Code You Probably Didn’t Think Of,2018-03-01 19:31:58,medium,"4 Reasons to Learn to Code You Probably Didn’t Think Of No matter what field you’re in, you’ve probably heard at some point that you should learn to code. But is learning programming worth the time and energy? Here at Hack Reactor, we believe that learning to code teaches you countless skills, beyond creating mobile apps and websites. Here are 4 reasons to learn to code that you probably didn’t think of. 1. Learning to code boosts your brain power As with learning a foreign language, learning to code has many cognitive benefits for your brain. Learning a new skill, such as programming, forms new neural pathways in your brain. This concept is called structural plasticity, or neuroplasticity — the brain’s ability to change its physical structure as a result of learning. When you learn a new programming language such as Java Script or Python, you continue to strengthen these neural pathways — giving your brain a “workout” and helping your brain to resist damage later in life. Memory improvement, longer attention span, and a reduced risk of age-related cognitive decline, are just a few of the known positive effects of learning a new language, whether it’s Spanish or Java Script. 2. You develop creativity and problem-solving skills Learning to code teaches you to become a killer problem-solver. Before writing any code, programmers must work with other team members to understand the business problem so they can then break down the solution into workable pieces. When you learn computer programming, you develop a solution-oriented mindset when presented with a problem. You’re sharpening your logic and critical thinking skills — and this solution-driven approach often carries over outside of work into your everyday life. You’ll be able to troubleshoot and invent creative solutions to any problem you encounter. 3. You’ll save time and boost your productivity Learning programming can help you save time and become much more productive. Once you learn basic programming skills, you can automate basic tasks to help save time and become more effective at work or in your personal life. For example, you can write little programs to enhance your email and messaging work flow to become more efficient. You can create basic programs to streamline your everyday Excel tasks. You can even learn to write programs that automatically send emails and remotely control your mouse and keyboard — hello, life hacks! To see the last reason you should learn to code, check out our original post. — Start coding now with Hack Reactor’s onsite immersive programs, now offered in San Francisco, Los Angeles, Austin and New York City. Not located in these cities? We also have online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Coding', 'Code', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@hackreactor/4-reasons-to-learn-to-code-you-probably-didnt-think-of-eabbe58f1370,0,['Hack Reactor'],1,50,hack,Unknown,Unknown,Unknown
Kalen Hammann,,"A New Beginning, Part 5 – Kalen Hammann – Medium",2017-07-17 15:43:24,medium,"A New Beginning, Part 5 M E? P R O G R A M A C H E S S G A M E?! I love the next section of my portfolio. It lists all the applications I will have actually written by the time I’m through with the Firehose program. A quote generator. A Yelp clone. And a bunch of others including a program I will write as part of a software development team, using the same process (it’s called “agile”) real — that is, employed! — software developers use. My tech daughter Shira has even talked about agile “sprints” in her job. What will we be creating together? Right — a chess game! Now T H A T will be a real sign that I’ve gotten somewhere — to me, and to the hiring managers I’l be contacting. And, of course, those hiring managers will have real evidence to reassure them that I can work with other people to solve software challenges together. By the time I had finished coding that section of my portfolio, I was hooked. Just as the clever people at The Firehose Project had planned, I was more than ready to sign up for their paid program and get started working on all those apps. Here’s a link to what I’ve been talking about: Just click here and you can see my portfolio in all its glory. :-) O N E W E E K I N: M Y F I R S T A P P The first week was amazingly exciting and fun. I learned how to set up my Web Developer environment, start a rails server, and start pushing the results of each section I coded up to an online service called Git Hub to make sure the code didn’t get lost if my hard disk crashed (and also to make my work available to others, whether my Firehose Project mentors or later team mates). Then the really fun “work” began: creating an app that would “splurt” out some of my favorite quotes and, eventually, make it possible for others to add their favorite quotes to the database. Every time I made a change in the app and then refreshed my screen to see the results, the instantaneous change was like magic. I said “ Let there be… B L U E T Y P E!” and lo, blue type appeared on my screen. It was downright addictive. Then I learned to deploy each new feature of the app I was building to the wider internet through another service called “ Heroku. ” By the end of the week — just one week! — the whole app was done. You can see it for yourself right now: just click here. And please add a couple of your favorite quotes. :-) W E E K T W O: O N T O “ N O M S T E R” The beginning of Week 2 meant beginning to work on a whole new App: “ Nomster. ” The goal this time was to build an app kind of like Yelp: People could add places they thought worthy of note, make comments about them, add photos of them, give them ratings, etc. I was happy to find that getting my web developer enviornment and the first several steps of setting up the app began to look familiar. I could D O this! Of course, not everything had gone smoothly during week one, and they didn’t go smoothly this week either. As you may have heard, computers are very picky. If you are supposed to type a semicolon and type a colon instead — or leave it out altogether — the magical change you’re expecting doesn’t happen. If you use a capital letter instead of a lowercase letter, or vice versa, the program thinks you mean something entirely different and again no magic change occurs. What then?( More to come…)","['Web Design', 'Careers 19k', 'Codingbootcamp', 'Aging', 'Programming']",https://medium.com/@kalen7/a-surprising-career-change-part-5-b1d8c5ddcfa1,0,[],0,0,kalen,M,0.2631194002559883,0.7368805997440117
Yonko Kilasi,,A place with a difference – Yonko Kilasi – Medium,2017-03-02 13:35:43,medium,"A place with a difference Hello I’m Yonko . A poet, photographer and programmer. Like most people I first learnt how to code online however I felt like there was something missing . I felt like I wasn’t getting all there is to learn about coding (ironic considering I was taking free courses) then I discovered Moringa school, now if your like most people, when you hear the word school and you immediately remember your dreadful days in school and are happy that they are gone. Things are a little different at Moringa school . The first part being that it’s not like most schools. Now what do I mean? You see in Moringa school, we have no teachers, now just wait before you make any assumptions. What I mean is that the students are put in a classroom whereby there is no teacher. A model called a flipped classroom whereby the Learner learns by themselves. Ok let me break it down for you. The curriculum is already developed and hosted online. It accommodates every type of learner so you don’t have to worry about getting lost or not understanding. The learners are divided into pairs where they carry it pair programming. When they do this they get used to working with others well and thus they will be compatible in the work place. There are technical mentors present to help the students at all times Every morning the previous day’s work is reviewed before doing the current days work. The school itself takes feedback from Its students regularly to ensure they are getting the best. In a nutshell, Moringa School is a dream come true. A coding environment that simulates the work place and still manages to make everyone feel at home. So if you’ve been looking for place to learn how to code , stop the search and come to Moringa School and make a difference in the world through coding. Find out more here. Find me here","['Education', 'Teaching', 'Technology', 'Coding Bootcamps', 'Lifechanging']",https://medium.com/@yonkokilasi/a-place-with-a-difference-5b3c9eff6a25,0,[],0,0,yonko,Unknown,Unknown,Unknown
Kamrin Klauschie,Be the hustle you wish to see in the world.,How To Choose a Bootcamp Like a Bootcamp Employee & Where I’m Heading Back to School,2018-04-05 06:18:07,medium,"How To Choose a Bootcamp Like a Bootcamp Employee & Where I’m Heading Back to School Some of you may know, in June of 2017, I moved to Oakland, C A in hopeful preparation to attend Dev Bootcamp full time as a student, having been a full time staff member there for nearly 2 years. I aspired to take an unpaid sabbatical, basically from the moment I was hired and experienced the magic of our program and community in person. I figured 2 years was the equivalent of ‘putting in my time, ’ especially since there was precedent of other employees doing exactly that before me. I moved into a very affordable apartment to save money and to prepare for 3–4 months without salary at the end of 2017. Many more of you know the rest of the story: on July 12th, Dev Bootcamp announced it’s nation wide closure to the public. It was pretty devastating to everyone involved, but amazingly, our community and team rallied, creating an awesome experience for our final students and preserving as much of the rigor, empathy, quirkiness, and fun as we could, in the circumstances. By the grace of all the Gods and some incredibly supportive colleagues (thank you Cody, Karen, and Tarlin!), I was the first and only Careers team member in the history of the company to successfully, barely I might add, complete Phase 0 — our 9 week “part time” remote prep course (my colleagues disclosed in weeks 7 and 8 the actual workload overwhelmingly reported by active, successful students bumps up to about 40+ hours a week as students prepare for being full time onsite, but no worries! That’s bootcamp for you!). I did this as the company was shutting down, a student in the final two cohorts ( I had to repeat the final assessment — turns out, learning to code for the 1st time in a really fast paced environment with a full time job is incredibly challenging, even when you went to Montessori for pre-school, could afford to attend a private elementary school, and have been told that you’re “smart” since you were 2 years old. I, too, had to check my privilege and question my identity in the process. ). I spent many days and nights in those last months documenting my work and impact over the last 2 years, gathering information from colleagues at Dev Bootcamp who had either gone through the program or from colleagues who pursued some form of professional development sabbatical, and advocating for myself to complete the program full time in it’s entirety, despite the closure. As the most senior person on our local Careers team, I offered to sign on for an additional 6 months after the closure to provide the necessary career support we had offered to our final cohorts of students, in exchange for taking that 3 month sabbatical to complete the program. After all, it would be an incremental cost to our business and was more a function of optics and student sentiment, than actual reduced resources per student, when some of our cohorts, at that point, had one or three students in them on my campus. Without such an exchange or acknowledgement, staying at Dev Bootcamp beyond the closure made me feel like a lame duck, even though it was requested of me. By that point, I felt like I had done a lot at Dev Bootcamp to turn around our San Francisco Careers team and create meaningful progress towards more and more corporate apprenticeship programs in the Bay Area, but the pace was glacial, and I didn’t feel challenged anymore. Like many people who have been in a role for 2 years, have already been promoted in their first year, and reached a certain level of mastery — I wanted more. Many of our final students saw me working after hours until midnight and later around that time, learning to code and struggling alongside them, and advocated, in their own ways, for me to come along. Friday Feedback sessions with our staff occasionally included little love notes (as they often did for anyone and everyone at Dev Bootcamp) about how students believed in me and wanted me to be able to pursue my goal. I often got so much help from friends and colleagues that I would, ironically, struggle to fully understand the concept myself. I learned that when you have friends and colleagues who are so eager to help and to teach, it’s actually hard to wade through what you know or don’t know, and truly test your own competency and understanding. I will always remember, with special clarity, a few days spent ranting and raving about the fact that my (then new) boyfriend Jon, who has a C S degree from U S C, helped me with some of my Phase 0 projects in about week 7 or 8 of my studies, and then used the challenges, exactly as they were in my introductory course, for technical interviews with professional software engineers at his company later the next week. Indeed, learning to code was more confusing and exhilarating and infuriating and overwhelming and exciting and rewarding and exhausting, than even I imagined. In the end, I was not able to become a proud Dev Bootcamp alumni through the entire program, but I still wear my 2017 Red Panda badge with pride. The irony that I am someone who has advocated for nearly 5 years of my life as a team member in non-profits, businesses, and B-corps for expanded affordable, accessible professional skill development for adults around the world, through ethical outsourcing contracts, affordable gig economy training, apprenticeships, hiring process changes, scholarships, high net worth fundraising events, grants, hackathons and corporate event sponsorships — and still cannot achieve my desired professional development goal through the benefits offered to me at these adult education companies — is not lost on me. I no longer consider this coincidence; I consider this a calling. I consider this a relic of our era, and I have recently decided: I am more than happy to use my voice to inform my community about what’s happening and why it’s wrong, and to thoroughly document it. I believe we will look back on this time in both wonder and shame that we expected adults to collectively go into trillions of dollars of debt for such expensive, specialized skills, while corporations get tax breaks as big as our entire country’s student loan debt. I believe I’ll share stories to my shocked and confused children about how, in Mom’s era, we knew that the average adult would change careers at least 8 times in their life, but that the financial, logistical and emotional burden of figuring out that path lay squarely and solely on the individual as a consumer, who would be expected to go into debt over a largely uncertain, never guaranteed future. Because, kids, always remember: you can never truly purchase labor market entry in America, unless you’re the Trump family. My kids will look back and think how archaic it is that me and my peers in this generation had to operate in such a broken system — guessing what these job descriptions actually mean and are really looking for, knowing vaguely that the work experience and personal investment required might well be $200-$300 K of public and private higher education education in order to fill the requirements, and facing incredible amounts of degree and pedigree bias. They’ll look up to leaders like Simone Biles and David Hogg. They’ll be proud of the fact that my peers and I worked so hard to build a different path for them. So let’s be clear: just like many of the people I advocate for in my work, I am someone who craves learning and professional development as if my life depends on it, because I know: my life depends on it. I have gotten the art of faking it until I make it in tech down to a science over the last 7 years, and I am over it. I have absolutely no lofty expectations about what the tech industry and technical skills will mean or do for me. I buy exactly none of the ads about innovation, disruption, meritocracy, universality, and accessibility that originally brought me here. None of them, they’re patently false. Why? My first major tech conference I ever attended, Tech Crunch Disrupt in 2013, at the ripe age of 22, I was given a free $3, 000 ticket by the staff because the white male founder I was working with at the time had friends who ‘hooked him up’, and then only later did we all discover the Australians he sponsored to be at the conference demo’d an app on stage called Tit Stare, right after a 12 year old little girl. Then, after getting fired for creating a national P R crisis, then stealing money from the company, he was still hired to work for Twitter, and was more recently involved in another corporate sexual assault # Me Too scandal. This was my first boss in tech. Since then, I’ve been in meetings with Directors of Engineering who won’t even face me or address me in a meeting, and will only speak to and face my male peers. I have been told to my face by white male Heads of Talent Acquisition to only find “the best, strongest technical women” and just send those candidates. So if you had asked me, after sneaking into Grace Hopper last year on an educator badge (for which I had defied and broken their ticketing policies because non-traditional education didn’t count as real education, at a diversity and inclusion tech conference in 2017), while I was trudging through Phase 0 for no long term outcome in a totally doomed company, I probably would have told you — I’m out. I was the 66%, right then and there — or whatever ridiculous statistics they ramble on about when they talk about how sad and unfortunate it is that underrepresented people leave tech. I know why underrepresented people leave tech — it sucks here — especially for us. Stop the lecture, stop the conference: I would’ve happily left tech right then and there. It had nothing for me, but a miserable life of working hard all day long, and through a lot of the night, in a system that wasn’t built for me to succeed and thrive. Instead, I would happily live out in a tiny, rural Northern California cottage breeding French bulldogs or move to Bali and become an interior design as a good, nice woman should — a much more enjoyable, safe, carefree life. But guess what? Nope. Nope, nope, nope. You don’t win, inner critic. Oppression doesn’t win. The moral arc of the universe is long, but I’m going to be a software developer. I’m going to figure out how to be a software engineer in this world in my own way, for myself, just like the 550+ of you I’ve supported at Dev Bootcamp and Learners Guild, and just like the countless others I’ve met at hackathons all over the world. If I can hold so much hope, joy, accountability, and excitement for you, why can’t I extend it to myself? Fuck it, I’m doing it. So how did I decide what program to pick? The central question you should be asking yourself as a prospective student: Is this program built for me to accomplish my goals? Who am I? I am an aspiring social entrepreneur, current career coach and business development professional with 5 years of work experience in tech, and at least 7 years of work experience total — depending on how you slice and dice. I haven’t “made it”, but I’m probably going to be just fine overall. I’m not doing this because I have a burning fire under my ass, like living in my parents’ house, having a child, or escaping an abusive boss, although I have experienced two of those things. I’m worried that the work I love and cherish may change or disappear in the near future (like so many of us are), and the urgency of keeping my passion for my work alive and educating others about how important my work is inspires me to action right now. I have a solid track record of being able to deliver enough value at a 6 figure salary in the Bay Area, that I’m relatively confident I can continue to do work at that level of pay at any company if I really put my energy and effort towards it. I’m really lucky and blessed in this regard. My financial circumstances are a consequence of where I was born and who my parents are, and I didn’t earn it. It affords me a lot. I’m committed to deeply examining my privilege and lifting others up as I climb. I am not certain about how much longer I will be able to do the kind of work I love with the kinds of companies and people I love, given how much the tech industry and technical training landscape around it is changing. I want to feel more empowered to be a crucial person who is shaping and building that systemic change, and I know engineering and product are the most holy functions in Silicon Valley. As an engineer, I can make more meaningful change and my voice will carry more weight. There are only a certain number of years I suspect people like me can continue to see and witness unchanging diversity and inclusion reports at tech companies, before they start to internalize a really depressing, cynical inner dialogue, like I have. For me, diversity, inclusion, equity, intersectionality, structural inequality, systemic bias — all of these things are incredibly important to me, in the form of open acknowledgement and acceptance on behalf of basically all the organizations I subscribe to and believe in. I am a mission driven person and need to believe my work is creating better systems in the world. Waving at you, my fellow Millennials and beautiful, intersectional, intelligent Gen Z. I love you. So, what I’m saying is — I do not ‘necessarily’ want to be a technical recruiter, or part of any hiring platform nearby ( Hired, Triplebyte, Hacker Rank, Codility, etc. — I’m sorry, friends who work there!) because I have little to no interest in being part of a degree bias machine that evaluates and rejects more people than it empowers and supports. This would be an obvious, awesome career option for someone like me, who is not me. I see this as the outcome I am trying to avoid. It is highly inevitable at this point, in many different ways, but here I am. I am a person who relies on my high quality regurgitated advice and insights from the things I read and the people I stalk online, and my sense of accountability and urgency (read: I will email you politely on a timely basis because I am frequently paranoid) and my warm, fuzzy outreach skillz to keep my frozen delivery Freshly meal on the table and astronomical Bay Area rent paid. In other words, as a tech industry professional who already knows many hundreds of folks who would probably pay me and who knows the rudimentary skills of how to sell a techie thing in the Bay Area, I do not need to pay a premium for in-person training. Communities are great, and I already have a bunch of them. I can reliably find jobs and meet new people in tech without relying on in-person training. This is another area of incredible and obvious privilege on my part, but I think it’s worth stating that not everyone can or should pay for full time, onsite training. It is not necessary. I just accepted a new full time role recently, paid off my student loan debt through a series of miracles (receiving my 1st severance, retention, and signing bonus packages all in a row! She can negotiate, people!), and finally developed the beginning of an “emergency fund” all the financial planners always rant about people needing. What I am saying in a thinly veiled manner is: I am incredibly stingy and have a chip on my shoulder, and am clearly preemptively, ideologically offended that I have to pay for this training — for no good reason apparently — thank you America. Bougie, expensive, private, elitist programs? You are not for me. What are my goals? In the near term, I’d love to have a more empathetic and nuanced understanding of the non-traditional engineers’ journey. In other words, I’d like to make myself suffer more deeply in order to better understand the maniacal people I surround myself with on a daily basis. I’d love to have more in-depth conversations with engineering leaders and hiring managers about the technical interview process at their companies, why it’s designed for someone with a C S background and not more accessible for other educational pathways, and ways it could be improved to be more practical and realistic, utilizing some of my technical knowledge. I’d like to have deeper conversations than being proud that I vaguely know the difference between object oriented, functional, and procedural paradigms and the fact that Java and Javascript are different, and Ruby and Ruby on Rails are different. Imagine that. As a consultant and program manager for apprenticeships, I’d love to be able to evaluate the utility and quality of any given technical learning resource and articulate clear, definitive points of skill progression that can and should be marked and celebrated by a company in an apprenticeship. As an activist, I’d love to have the ability to go into the belly of the beast and become an apprentice myself, if things really hit the fan here. Sometimes you can only make change from the inside — or so I’ve heard. So far, I’ve relied on a lot of amazing friends and colleagues who identify as intrapreneurs in the corporates where they work, but if I need to truly become the change in 2018 — I am willing. As a lifelong learner, I’d love to feel a sense of deep challenge and have a new opportunity to test my grit and my ability. As an aspiring social entrepreneur, I’d love to be able to create and build my own product M V Ps, because I’ve been drawing them on paper since my early 20’s, and that’s just not ever cutting it. As a woman, I’d love to command more power and respect by surprising people and defying their expectations with my technical knowledge. In other words, I’d love to more frequently experience daily or hourly micro-aggressions with more rage, because I don’t conform to the feminine status quo or expectation. I would love to have 6 monitors and noise cancelling headphones on my head, with a name placard on my desk that says “not the secretary, ” or “ I am T H E engineer, ” and never, ever be the person who is required or expected to receive packages, answer phones, and warmly welcome anyone into my office ever again. As a human in the modern world watching a lot of things I love get eaten by software in the last quarter century, I’d love to have more long term confidence and security in my career and the value of my life, through tangible technical skill development. What are not my goals? Money has very little to do with my goals. In fact, I’ll likely take a pay cut if I want to be a junior software engineer at some point in the future. Having some remaining job security and a living wage is a blessing in so many ways related to my overall health and lifestyle in this process, and thus, as I ascend Maslow’s hierarchy, I am presented with the opportunity to build space for intrinsic motivation. In the empty space where I suspect my intrinsic motivation should be, my coaching experience helps me to remember that as someone with privilege, I will be even more susceptible to laziness, imposter syndrome, excuses, and complacency than my more tangibly motivated, terrified, stressed, anxious and accountable peers. As a career coach myself, who has harped on many a woman and person of color about making boatloads of money just because they should, I’m slightly appalled at myself that I have no salary goals. But like many non-traditional engineers, the prospect of challenging myself and developing an empowering, in-demand skill is exciting to me, with or without the money. But we can all be honest and check my privilege here: the money helps me focus, have space and time, and work hard. I’m grateful and blessed that money is not a concern right now. Given my answers to these two questions, my analysis of programs I would be willing to consider for myself look a little something like this: Part time, remote programs I would consider for myself For added benefit and contextual clues for those of you trying to make decisions for your own selves, I’ve added my analysis of additional well known programs, that I would never consider for myself (and I will mostly explain why): Other programs I would not consider for myself Sources: Switchup, Course Report, and Crunchbase As a matter of principle, there are a few things I’m pretty unwilling to concede on in any way, given my experience. I’m unwilling to pay for a program that doesn’t serve my people. Who are my people? My people are underdogs and misfits — always have been and always will be. Underdogs are from underrepresented, underestimated, or minority groups, low income backgrounds, and non-tech related fields. There’s a reason I’m not in Computer Science already, and if you don’t acknowledge the structural differences between my experience and someone else’s, I’m not interested. Underdogs and misfits tend to do things differently because our identity and personal history often demands or requires it. I’m a former bus driver, sorority dropout, failed athlete, two time U C L A reject, International Studies major from U C Irvine. If your program doesn’t speak to me and my people, I’m out. That goes for you, “half ass” D& I oriented training programs who put women and people of color in your images on your website, but fail to offer any identity specific language, or structural support like scholarships, or hire staff who look like me and reflect my lived experience. I mean, seriously, look at all those white male founders. Talk about an opportunity to differentiate. The things I would do to have the demographics of the student body and staff on a program website, like it was at Dev Bootcamp. It’s probably buried somewhere, but this was enough work. You all should make that information more readily available for your students. If I could demand one thing of all the bootcamps: release and prioritize openly sharing the identity data for your staff and student body already. I’m unwilling to pay for an untested, unproven program. In other words, I’m looking for a well established program, with vetted world class curriculum and resources, confident, trained and professional staff, a supportive community, and an empowering learning environment. You either go to a new bootcamp to learn how to run a bootcamp or because they’ve given you a significant discount, ideally the price tag ‘free’, to do so. By default, I’m looking for a program that has been reviewed by tons of different students who have paid for the program I am about to pursue at the same cost I will pay, and who rate it highly (this is an important distinction for programs whose primary type of student is full time, on site — most of those reviews you see will be for that flagship product instead, and in my opinion, are largely irrelevant to you as student consuming a different product). As a staff member, I remember how difficult it was to get students to review our program, let alone highly. We worked hard for high net promoter scores. This is more important to me than obscure, often deliberately confusing outcomes reports. I’m unwilling to do an onsite, or full time, or income share agreement ( I S A) program — ie, where a program takes a percentage of my salary for typically 2–3 years. For me, this is basic math. The opportunity cost of pursuing a full time program is way too high, when I can easily consume the necessary material on a part time basis after work, and since I will most likely secure a high paid job in tech because I already have one to begin with. The prospect of an “astronomical” amount of debt paid as a percentage of my already high salary for a few years is just not right for me. I’m not convinced it’s right for anyone necessarily, because I think student debt as the only means and fuel for funding the creation of high skilled, specialized knowledge workers is a flawed system, and I work hard in my day job to get at least some of that bill to be paid by someone else ( I’m coming for you corporates!). I don’t need it, and you may not need it. And as we share in my previous evaluation of my privilege, I’m also already well connected in tech, and I don’t need to pay a premium for onsite training. The end. At the end of the day, there are 3 programs that I believe were built for me to accomplish my goals: Flat Iron’s part time online program, Bloc, and Thinkful. Wait a minute, what about Udacity and Skillcrush? Welp. I decided they’re not designed for me. Having interviewed as a staff member with Udacity in November of last year and having followed them pretty closely for a few years now, I know they’re in the business of packaging simple, high quality videos with small tutorial projects as a means of exposing adults, primarily who already have a fundamental technical understanding, to more emerging tech. I am not a person with a fundamental technical understanding yet, and I am unwilling to take 3–4 Udacity nanodegrees over the course of the next 2 years in order to become professionally competent. If I already had a Computer Science degree and wanted to understand Flying Cars, or Autonomous Vehicles, or A R/ V R, Udacity would be built for me. I am not that person. Furthermore, I had a terrible experience interviewing with them and saw little to no Black and Latinx staff in their H Q office, which was disturbing and frustrating to me. They’ve released no data about the demographic breakdown of their students and staff that I know of, and I suspect if they did, it would look like your average elitist consumer tech company. They failed on at least two of my most important criteria. On the other hand, Skillcrush is pretty obviously marketing to freelancing Moms, in my opinion. Perhaps it’s because I’m a marketer and I’ve seen behind the curtain a few too many times, but it just seems so obvious. They’re not boasting about outcomes, corporate partnerships, or long term career relevant skills. If I was running an Etsy shop from rural Northern California selling French bulldog puppies as I aspire to in the future, Skillcrush would be the program for me. Alas, I am not a crafty, rural dog breeder right now… but wouldn’t that be the life. Thinkful? Welp. Here’s the thing. My old boss and colleague work there. Hi, Cody and Altara. It’s just more expensive — that’s the thing. And the website looks really sterile and scary. By my evaluation, the diversity and inclusion efforts are “half ass, ” in that there’s photos of people like me and the communities I care about, but no effort to acknowledge the structural inequities that make it more difficult for someone like me to break into a technical role. So nope. I’m stingy and I care more about diversity and inclusion than I can find about the Thinkful program and values that are available online. With that, I’m excited to announce that I’m enrolled in Bloc and will begin the program on April 30th. Between now and then, my primary goal is to finish building out apprenticeship. io, release the initial 5–10 podcasts I’m in the process of recording about ~180 amazing, successful apprentices and ~32 inspiring existing corporate apprenticeship programs, release another exciting project I’ve worked on for a while about technical careers, and get started with the initial parts of my S F Marathon training. We’ll see. I’m clearly feeling excited and ambitious. My goal is to run my 1st full length marathon in July, and finish my Bloc course before the end of December. So there you have it folks. Woot! I’m doing the thing! Here we go! ❤","['Programming', 'Education', 'Software', 'Coding', 'Codingbootcamp']",https://medium.com/apprenticeship-io/how-to-choose-a-bootcamp-like-a-bootcamp-employee-where-im-heading-back-to-school-cbc06e14ce54,17,['Dev Bootcamp'],1,379,kamrin,M,0.2906436629064366,0.7093563370935634
Chung Nguyen,"Software engineer, portrait photographer, hand-letterer, and pun maker.",Managing Your Post-Bootcamp Job Search – Chung Nguyen – Medium,2017-08-02 05:22:57,medium,"Managing Your Post- Bootcamp Job Search A template Trello board that’s filled with all the things you should do in your job search! T L; D R — Use this template Trello board to help organize your job search! Once you’re logged in to Trello, click on “ Show Menu” (upper right) and “ Copy Board”. I completed Hackbright Academy — a 12-week intensive coding bootcamp — in December 2016 and started my first job as a software engineer in February 2017. If I had to break it down, I’d say it was 70% “totally outside of my control good luck” and 30% “ I was prepared and did the right thing at the right time”. That is to say, regardless of how lucky you are, you’ll still need to be prepared. Here’s how my personal job search story unfolded and things I recommend: The program wrapped up mid- December, which meant I had a little lull since everyone I spoke to on the recruitment side was going on holiday soon. This was good and bad. I was ridiculously tired after finishing the program, so having a little downtime wasn’t the worst thing in the world. I used a lot of this time to create a Trello board, get organized, and watch a ridiculous amount of Frasier. #sorrynotsorry Recommendation: Spend that little bit of extra time at the start to set yourself up for success. For me, it was making sure all of my online presence was professional, having documents readily available (e. g. , template cover letter, resume in different formats, references), and listing all the things I want to do tech-wise so that I don’t waste time thinking about what to do next. As part of Hackbright, we had a career counselor / coach who would email us weekly to ask for updates from us. This was great for me, because I love being held accountable to someone else. I actually kept meticulous track of things I did and noted metrics so that I could share them with this person. Metrics I tracked: projects completed, jobs applied to, any progress with companies I’m interested in. Recommendation: Have a person like this in your life. They don’t need to do anything for you, except to hold you accountable for setting goals and reaching them. I used to manage a lot of projects using Trello, so this was just second nature to me. If I was interested in a company, I duplicated a template “card” for them and put in their info. Over time, I found that this was the info that was most helpful for me to have readily available for any company: If you’re talking to a lot of different companies — and you should! — imagine having all of this filled out at the ready in one place for when you hop on a phone call or before you head in for the interview. One of the hardest parts of the job search process is dealing with rejection. 💔 Or worse, total silence. I implemented a “fridge” and “freezer” section to indicate how things were going with certain companies. If we’re still actively engaged, great, you stay top-of-mind for me. But if an interview didn’t go well or I haven’t heard back in a while, I moved companies to the fridge and, consequently, to the freezer. This really helped me free up headspace since I already knew there would be no additional action to take on companies in the freezer. Recommendation: Take Chumbawamba’s advice: “ I get knocked down, but I get up again. You are never gonna keep me down. I get knocked down, but I get up again…. ” Also, I’m sorry for putting that song in your head. But in all honesty, I felt pretty bummed when things didn’t pan out like I had hoped. My personal coping mechanism was to set a timer (about 15–20 minutes, depending on how much I liked the team and company) and just let myself wallow and bathe myself in self-pity. But after that time is up, that’s it, back to business. I might be a robot. 🤖 Figure out your coping mechanism and lean on it heavily during this stressful process. What my job board looked like after I found my job. Many companies in the freezer for one reason or another (mostly timing). Assorted tips and unsolicited advice: The job search process is hard and it’s mentally taxing and emotionally draining. Be kind to yourself. Emphasize self-care. Pet a dog. 🐶 Or a cat, if it’s willing. 🐱 Yes, having a referral is great. But if you don’t have that at all, don’t let that stop you from cold applying to places. Everybody and their mamas need software engineers, so don’t be shy! Make it damn easy for people to help you. Need a referral? Be straightforward and give the person everything they need (e. g. , your resume). Want to meet for coffee? Recommend times and locations near them. Want advice? Ask specific questions. Trust me, people want to help you, but you have to help them help you. Ask for help. Stay connected to the world, through social media and/or in-person (yay, Meetup!). I actually joined Twitter and started tweeting when I made the transition to becoming a software engineer. Lots of tech folks on Twitter for some reason. I also posted on Medium, which got me a referral offer! Just keep swimming. Wendy Saccuzzo at Hackbright talked about this idea of “positive uncertainty” early on in the program. I took it to mean that while you don’t know exactly what will happen, you know that it’ll all work out in the end. Keep that in mind and keep at it! Thanks for reading! If you have any recommendations for additional content to put in the template Trello board, feel free to comment. If you liked this, click on the 💛 to share it with others! Good luck in your job search! 🍀","['Jobs', 'Job Hunting', 'Codingbootcamp', 'Trello', 'Job Search']",https://medium.com/@wordswithchung/managing-your-post-bootcamp-job-search-9b8316b854cd,0,['Hackbright Academy'],1,7,chung,M,0.05263157894736842,0.9473684210526315
Nigel Hing,Student at Launch School. Passed CFA level 2.,How I Discovered Launch School – Launch School – Medium,2018-08-01 05:54:22,medium,"How I Discovered Launch School Crawfish is like shrimp with a lot less meat and a lot more work! Back in July 2017, I was invited to a Crawfish boil party for the 4th of July Independence Day Celebration. It was hot and humid but I was just glad to be outside, chilling with my friends and most importantly; not studying. Just a month prior, I sat for the Chartered Financial Analyst ( C F A)level 2 exam; a brutal exam which I prepared for since January 2017. In total, I spent about 400–500 hours studying for that exam but that’s a story for a later day. As the sky darkened, most of us were sitting around a fire pit roasting some s’mores. They are these little marshmallows that melt in your mouth when you roast them over a fire. I call them “diabetes on a stick” or a “dentist’s best friend” but they do taste like heaven though especially with melted chocolate on it. Get a cup of hot tea and you’re set. I was sitting next to my housemate, Gooi when our conversations shifted to coding bootcamps… We had work visa issues back then, I still do. I still remember Gooi and I spending nights talking about our employment situation. With just a bachelors degree without any specialized skills, no companies were willing to hire and sponsor us. It would be an added expense and not to mention the paperwork involved. We simply did not have the skill set to justify being sponsored with a H1 B visa . At that point in time, we were fortunate enough to be working through a staffing agency. We could pay our bills and comfortably in Des Moines. However, neither one of us was doing anything we went to school for nor saw any potential to remain in the United States given our current course of action. Gooi did Actuarial Science and he could not secure an actuary position due to high competition and he also did not really enjoy it. I did Finance and Information Systems but I could not even get an interview for a Financial Analyst role because I had to be a full C F A in order to be sponsored. In order to be a C F A, I have to pass all 3 exams and work for 4 years so it was really a chicken and egg problem here. My information Systems major was a joke; the only thing I learnt was excel and access along with some simple V B A and some intro level H T M L/ C S S. There was no way I could start a career in I T with that limited skill. However, I did have a good 1 year stint as a database administrator for a small team in an insurance company though. That was all thanks to a friend of mine who owned the staffing agency and helped push me through. I told Gooi that our only way out of this mess was to improve our skill set and the best potential market for it would be in software development. Companies are more willing to sponsor a software developer, there’s an acute shortage and the pay is decent. That was back in October 2016. I did some research on my own and two boot camps stuck out back then. One was Flatiron and the other was Bloc. They had these really flashy websites, particularly Flatiron with an excellent design layout and impressive testimonials. These bootcamps promise a fulfilling career in software development in just 6–9 months! I was hooked and I was pretty sure that I’d go with either one of those bootcamps when I completed my C F A level 2. Both bootcamps weren’t cheap though, with one putting a $9–12 K dent in the wallet. But surely 9–12 K is worth it as an investment for my future. Within 6–9 months, I’d be job ready and 9–12 K would be nothing! Back to the crawfish party around the fire pit. Gooi had done research on his own and he had started on this “coding bootcamp” called Launch School except that it wasn’t really a coding bootcamp per say but more of an online school for web developers. The founder, Chris Lee, recently wrote an article on this: We're Not a Bootcamp We're Something Unique, and Uniquely Effectivemedium. com Instead of paying a lump sum or paying fixed amounts for a predetermined amount of time like other bootcamps, Launch School charged a fixed amount of $200 a month for as long as it takes the student to complete it. In their words:“ Ours is not a quick cram of concepts in a few months, but a slow mastery of fundamentals over a few years” Gooi just could not keep his mouth shut about how great Launch School was with its emphasis on mastery based learning. That sounded very interesting and intuitive to me. Gooi emphasized repeatedly that learning software development over 1–2 years mastering the core fundamentals before jumping into the more advanced and fancy frameworks would be more beneficial in the long run. That made a lot of sense to me as a finance person. I was taught back at my school to look for companies that are strong fundamentally but weak at that moment in time. It wasn’t about the big companies like Apple or Walmart that everyone talks about. Those companies would be good in a portfolio to reduce the risk and stabilize the beta but you won’t see much returns because they are most likely correctly valued. It’s more about finding companies that are undervalued: companies that have a higher intrinsic value than the current market price. One of my favorite investors was Michael Burry who uses this principle to find what he called the “ick” factor to great success. “ I tend to become interested in stocks that by their very names or circumstances inspire an unwillingness — and an ‘ick’ accompanied by a wrinkle of the nose — on the part of most investors to delve any further, ” Burry once wrote in a shareholder letter. I am diverting but I really like finance so I can’t help myself. . More finance articles to come later in the future ;-)6–9 months sounded really short to me to have a solid grasp of the fundamentals and the frameworks especially after hearing that Gooi took 6 months to complete the prep course along with Ruby foundations and Object Oriented Ruby. What was even scarier was the assessments that a student has to take and pass in order to move on. If a student fails, that student has to wait at least a week to retake the test. It actually gets very interesting if that student fails repeatedly. . he or she might be asked to leave the program and that freaked me out. That was the first time I heard that a paying client could be asked to leave if not performing up to expectations. Fortunately, I have not failed one yet (though I came quite close to failing one!) but it just shows how serious this coding bootcamp was. You just have to study and master the material well before attempting an assessment, albeit on a much smaller scale than the C F A exam which is once a year… I was intrigued and excited. My original plan was to finish coding bootcamp as quickly as possible within 6–9 months and get the hell out of Iowa. Chatting with Gooi made me realize that my journey to be a proficient software developer may very well take longer than 6–9 months. It was looking to be more like 1. 5 to 2 years at least, without even touching the more integrated and advanced topics. That sounded a lot more realistic to me. It was like opening up a beautifully designed life insurance brochure, crumpling it up and asking to see the sales illustration with all its wordiness and numbers and actually taking time to analyze it. We as consumers tend to fall for the nice brochures with all the colors and promises. Instead, we should be taught to look and analyze at the dry, boring specs of the product itself, kind of looking and studying the product manual which we all hate. That night, I visited Launch School’s website and back then, it was honestly quite simple looking and straight to the point. The introduction video was honest and blunt. The founder, Chris Lee was straight to the point and did not mince his words. A promising career in software development awaits provided you put in tons of hard work irrespective of the amount of months or years it takes you. Now, I cannot personally attest to the promising career part yet since I have not completed the course. I’ll have to write an article on that some other day if I ever land a job as a software developer hopefully in a few months time after I’m done with the 8th course( There are 9 in the core curriculum and I just started 7th). Looking back, I’m glad I dodged a major bullet by not attending Flatiron because it actually went through a $375 grand settlement in October 2017 for running without a license and its bogus claims: Flatiron coding school to pay $375 G for operating without a license, making false claims about its…"" Coding boot camps have become popular as students seek careers in the tech industry, but for-profit coding schools…www. nydailynews. com However, Launch School is not for everybody. Since its mastery based irrespective of time, you really have to spend at least 20 hours or more weekly studying and have the motivation to do it on your own. It gets even harder if you have a full time job and it gets even harder if you have a family with kids . To those that can complete this course while holding a full time job with a family with kids, you have my utmost respect. Disclaimer: The opinions and views here are based solely on the personal opinions of the author and has no 3rd party influence. A monetary credit may be applied to this article if Launch School publishes it under its collection of articles Join Launch School through this link: https://launchschool. com/join/039c4c52da and you and I bot hwill receive a one time $50 credit towards our tuition!","['Programming', 'Cfa', 'Launch School', 'Codingbootcamp', 'Mastery']",https://medium.com/launch-school/how-i-discovered-launch-school-11c836cce11d,4,[],0,181,nigel,M,0.007281761329563951,0.9927182386704361
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,"So You Wanna Code, Huh? Day One At Computer Programming Bootcamp.",2017-08-01 02:50:44,medium,"So You Wanna Code, Huh? Day One At Computer Programming Bootcamp. “ Back to school … Back to school …” I said I wanted a challenge… One of the several reasons that I departed my old career was to seek a field with people not only my age, but of similar intellectual curiosity. On my first day at computer coding bootcamp, I was seated next to to a young, driven former Chief Financial Officer for one of the “ Big Four” accounting firms. Needless to say, I think I’m on the right path. Today began the in-person course of the summer cohort at the Redwood Code Academy in Orange County, California. I have been a student for about a month now; Redwood provided online prework. Seriously, I think I made a very good choice. There are two primary instructors at Redwood and it’s obvious that both really know what they’re talking about. They’re sharp, but super approachable and, perhaps most importantly, really into this stuff. They seem to enjoy teaching the course. Or, the first day of it, at least. We have about 15-or-so students. I’m 33 years old. I would guess that the average age of the class skews slightly younger than me, but I certainly don’t feel old. The students seem like my peers. In age. And interests. Today, we blew through some H T M L lessons. It was encouraging to see how quickly we could turn code into … something. Not much, but something. I mean, I’m basically a web design expert, really. Hire me. The really exciting part, however, is that the course is structured in such a way that the student can very quickly see how this is all going to come together. It’s like, “ Oh, H T M L does this, C S S does that, Java Script will add functionality to that, Node connects this to that, S Q L will deliver that, and, oh! that’s what Angular does, and so on…” It’s Day One; I don’t know what any of those terms mean, really. But it’s motivating to know that they will, in fact, all come together at some point. Though, let’s be real: Day One wasn’t so much about lessons in H T M L, it was a refresher course on using the Command Prompt. I’m old enough to remember M S- D O S (did I just admit that?). So, some of the terminology wasn’t new but, trust me, “cd . . ” was buried waaaaaay in the back of my memory. And, via the Command Prompt, we were introduced to a tool that is actually confusing: git. Though, to be honest, there was something sort of pure, in the computer sense, of running git commands through the prompt and seeing the actions reflected in a typical browser. Kinda like magic. But then again, to me, even working in Visual Studio Code felt like wizardry. So, maybe I’m just easily impressed. Oh, and also: Slack. We do a lot through Slack. I like Slack. I don’t know exactly where my coding career will take me. I have two primary interests that, as far as code goes, seem really opposite to me: 1. data science (using data to build predictive models, learning Python, etc), and 2. coding firmware and microcontrollers (and learning C, Assembly, and/or Machine Code). For now, I am trying to establish a base. Become employable. Start being able to build stuff. To be able to look at code that may not totally make sense, but to be able to make the logical inferences and visualize what the application does. I am as confident as I can be that the Redwood Code Academy will provide all of that. And, from the feeling I have already, plenty more. I’m also sure that it will provide opportunities. And it will be those opportunities that help guide and shape my career. But I’d be lying if I said I wasn’t excited. I wasn’t yesterday. Yesterday, I just wanted to get to class. But now, having been there, I really am. The course at Redwood Code Academy is five days a week and 12 weeks long. I can’t promise that I will publish an update like this every day, but I will try to do so sufficiently that prospective students can get a feel for what coding bootcamp is like. Or, well, this one at least. Hopefully my journal will help prospective students make the decision to become actual bootcamp participants. Or not; it’s probably not for everyone. So, if that’s you, or if you’re just interested in a fun little adventure and some light reading, please follow along! Click H E R E to read about D A Y T W O.","['Programming', 'Coding', 'Codingbootcamp', 'Bootcamp']",https://medium.com/@sbogucki12/so-you-wanna-code-huh-day-one-at-computer-programming-bootcamp-43d4ef58fc60,0,['Redwood Code Academy'],1,105,steve,M,0.0037574028300791295,0.9962425971699209
Team Codebase,"We're a 9-week iOS Training Lab and app development firm in Savannah, Georgia.",Find the Right Coding Bootcamp for You – Team Codebase – Medium,2018-05-10 16:39:17,medium,"Find the Right Coding Bootcamp for You What to ask schools — and yourself — before taking the plunge. Since coding bootcamps emerged in the early 2010’s, many promising that students can become software developers in a matter of weeks, more and more are jumping on the bandwagon. After all, programming is the new literacy, and being able to meet employers’ increasing needs for technical talent stands to make you a more attractive candidate for job vacancies. Right? Yeah. Sure. But, diligent consumer that you are, you’ll want to conduct the same kind of research on your coding bootcamp programs as you might when buying a new laptop. Your education and electronics are not dissimilar: you expect to get a lot of mileage out of them, the price should be in line with the value it offers you, and after purchase, it’s up to you to use the resources they provide to your best advantage. Many coding bootcamps boast large “admissions” (since we’re talking about code, this is eduspeak for “sales”) teams whose job it is to convince you that a particular program will transform your life. These conversations can be very persuasive, and it is a good idea to come into them with a clear picture of your goals and motivations. Questions to Ask Yourself What do I want to get out of a coding bootcamp? Do you want to come out the other side with a job, or at least decent job prospects? Do you want to work with a dev team in a company or startup? Do you have aspirations of working from home as a remote employee or freelancer? Do you want to build your own websites or digital products? Pinpointing your ideal destination will make it easier to shortlist programs that offer the stepping stones you need to get there. How much time do I have to dedicate to learning? There are many programs on the market that offer coding bootcamp experiences via online learning platforms. Though it is not impossible to learn this way, it takes extraordinary resolve, discipline and gumption to complete and garner favorable outcomes from a “learn-at-your-own-pace” course. Students who choose this option often do so because they have day jobs, thereby reserving evenings and weekends for study. If you are considering this, it’s important to be realistic about your ability to engage with the content every (or almost every) day. Just like traditional language learning, practice is key, and if you don’t put in the time, you’ll lose the knowledge. In our experience, students learn best when they are on-site every day to receive instructor help and are sharing the learning experience within a supportive community of fellow students. However, if you are passionate and determined enough (ensuring that you are contributing to open source projects and/or shipping small personal projects), you can be successful in part-time or distance learning programs. Am I able to commit fully to my experience? What the program website probably says: “ Become a developer in X weeks!” What it probably does not say: “ Show up (or not) and automatically absorb programming knowledge with no effort!” Accelerated learning environments are tough. Some programs require weeks of pre-course work so that everyone is starting from a shared baseline. Others require considerable amounts of work outside of class. If you want to succeed online or part-time, you need to be able to motivate yourself to log in or put in a few hours of coding time on a regular basis. In addition to the practical, there are emotional considerations. It won’t always be fun, particularly if you’re coming in with little to no programming experience. You may be frustrated. You may feel like the dumbest person alive. You may cry. It’s what happens. You will get past it and become stronger. You don’t need a uniquely brilliant mind to be a good programmer — just commitment, motivation and a pinch of talent. But. If you don’t want to experience this rollercoaster, don’t respond well to stress, or are not used to struggling in a classroom, it might be a good idea to prepare yourself for what’s ahead or choose a different path. ( F Y I: You’re not dumb! You just need good instruction. ) Do I have a solid support system? While we’re on the topic of emotional considerations, support from your partner and/or family will likely be pretty important to your success. Every relationship and family is different, but in most cases it’s generally a good idea to rally your loved ones, make sure they understand what you’re doing, why you’re doing it, why it’s important to you, and come up with a plan to maintain your household while you’re taking care of business. Any arrangements you can make to minimize stress in your personal life will be good investments of your time. When you’ve finished this important soul searching, it’s time to talk to the schools in addition to conducting independent research on any claims made and reading alumni reviews wherever you can find them. Course Report and Switch Up are good starting points. Questions to Ask “ Admissions” What placement services do you offer? Most states require bootcamps to offer student placement services; however, the language is vague and the requirement is not strictly enforced. First, you will want to know whether the school has any direct relationships with or connections to the tech industry. Many bootcamp programs have been acquired by large education conglomerates, and while this bodes well for their ability to put butts in seats, it does not necessarily mean that they will be able to place you in a job. If the school does not offer direct placement opportunities (such as in-house apprenticeships), you will want to ask whether they employ a placement staff and what it is, exactly, that they help you with. Here are some common placement activities and what you should ask: Demo Day/ Graduation Events- How many employers or recruiters are usually in attendance?- What kinds of positions are they hiring for?- How many grads have been hired by recruiters who attend events? Résumé/ Linked In Profile Assistance- What experience specific to the tech industry do counselors have?- Do they have reputable industry connections?- Do they send out résumés or student profiles on your behalf to employers and recruiters? Mock Interviews- Who conducts the mock interview, and what is their tech-specific experience? Are they an employer looking to hire a candidate?- Does the content of the mock interview evolve over time to accommodate changing industry needs?- How is feedback offered, and does interviewing well translate to any job referral? O U R A N S W E R Codebase offers paid apprenticeship opportunities to top performers following completion of the 9-week Training Lab. We are active in Savannah’s tech community and have ties to local employers of technical talent as well as in other parts of the United States and Europe. Experience and ability to ship is key to employment, and the apprenticeship is designed to allow graduates to earn money while continuing to build their portfolios and skills. Who are the instructors and what is their experience? Software developers have high earning potential, so bootcamp instructors typically fall within one of two categories:1. Experienced programmers who are passionate about teaching 2. Inexperienced programmers (either graduates of the program or other junior developers) who know more than you…but just barely. There is no substitute for expert instruction. If you find that a program is hiring graduates as lead instructors, it is cause for concern. Ask for the names of the instructors and run them through Google. Where have they worked? Do they have professional experience in the course they’re teaching? Does the information you find match up with that provided on the school’s website? If a program is being taught by expert instructors, it is an indicator that the program has real ties to the industry. O U R A N S W E R Instructors Max Howell and Nathan Hosselton are mobile developers with more than 20 years’ combined experience. Max is globally known for his contributions to the open source community, including Homebrew and Promise Kit and has worked on high-profile projects like Poncho, which was featured on Planet of the Apps in 2017. The Codebase curriculum utilizes time-tested tools and native programming languages. How does tuition add up? You can figure this one out yourself. Divide the tuition by the total number of hours in the program. This is your cost per teaching hour, and this is a more significant indicator of value than the total tuition cost. For example: You might be considering a 12–week immersive program (35 hours a week) that costs $14, 900. You’re also considering a 24-week part-time program with 3-hour classes three days a week (9 hours a week) at $10, 000. At first glance, the latter program may appear to provide better value. But let’s do the math. Program 1 offers 420 total teaching hours — just shy of $36 per teaching hour. Program 2, however, offers only 216 teaching hours — more than $46 per teaching hour. We can conclude that at almost twice the instructional time, half the course duration, a likely more comprehensive curriculum, and a lower per-hour rate for your education, Program 1 is a better deal overall. O U R A N S W E R Codebase’s Training Lab is immersive (35 hours a week) for nine weeks. Tuition is $6, 500. Cost per teaching hour? Less than $21. Why so cheap? We want to keep the program accessible for low-income individuals for whom traditional higher education is prohibitively expensive. How will I fit in? Just as it’s important to garner support from your family and friends, you probably want to feel a sense of belonging when you walk into the classroom (or log into your online portal). What are the school’s selection criteria for students? Have previous students had good experiences? If they are willing, can you reach out to alumni to ask questions? Ties to the greater tech community are important as well. Does the program offer mentoring? A guest speaker program? Access to community networking events? Tours of local employers? Taking advantage of any of these opportunities will help you learn more about the industry you are entering and will help you begin or enhance your professional network. O U R A N S W E R Because we do take on apprentices, Codebase recruits for culture. As a result, cohorts are like family — as is Savannah’s community of technologists and entrepreneurs. Local organizations like tech S A V, Open Savannah and The Creative Coast ensure a full social calendar, and Codebase does not assign evening homework so that students can take advantage of these opportunities to connect with the great people that make Savannah a great place to be in tech. Apply to Codebase’s i O S Training Lab! You’ll learn Swift from experts, meet amazing people and be part of something great. Here’s what some of our awesome grads think of their Codebase experience. We hope to count you among their number! Questions? Visit our website to chat with us on Drift or shoot us an email at hello@codebase S A G A. com. And don’t forget to submit your application!","['Programming', 'Coding', 'Codingbootcamp', 'Education', 'Accelerated Learning']",https://medium.com/@codebasesaga/find-the-right-coding-bootcamp-for-you-bef0f0512cb2,6,[],0,1,team,Unknown,Unknown,Unknown
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 54 – Chingu – Medium,2018-03-19 15:42:09,medium,"Chingu Weekly Vol. 54 Another glimpse at the wondrous Build-to-learn lifestyle @ Chingu!@jon’s drum app! News & Opportunities🎉 Congratulations @andres for getting a junior React developer job!!🎉 Congratulations @chris on the new job as a Python developer!🎉 Congratulations @gherds for getting the job as a I T communication officer in the largest humanitarian agency in the world! That is so wonderful!!🎉 Congratulations to the 86. 6% of teams who believe they are on pace to finish the M V P of their team project by April 21st! We’ve still got another 4 weeks so there’s lots of time to go beyond your comfort-zone and level-up your skills to build!! Y O U’ V E G O T T H I S! Cheers to these burgeoning legends!🍻 On the weekly check-ins there is a question that asks: Is there anyone on your team who has been super helpful, kind, hard-working, etc. and deserves a shout-out? Here’s the list of the people who got a shout-out (or 3) last week 👇 Andrew Salcedo, Ana Veiga, sosodope, 8thday, ziggysauce, @vannya taught me a lot during out pair programming session this weekend, Luis Jaquez, Ana veiga, designbyinna, Meeetch, @lazycesar, Arvee, @lucygracesmom @ Javilag and @ Haberdashery, Kevin, lydiavuj, Jordan and Jason have been really helpful to me working through git issues, Yassine, Jazy Labs, nik, joseph Myalla, Every member, kenito, Unwana essien, @soreg, @ Mufasa, @ Roudy is made of pure grit 🔥( He’s struggled with stuff that’s new to him but doesn’t know what “quit” is. I really admire that in him. ), Jai, All of them, Munsterburg, @ziggysauce, Veronica, Dan Nguyen, everyone, @carla and @ Nat Ravenhill, Misomighty, Skidragon, akinwalehabib, Both my teammates are still great! Nick has been great! Zoey, all of them, Marcel, this guy is the M V P!, matthewburfield, marianoheller, @ Tia Shout-out & Showcase🔥 @nicolasbg77 built this awesome F I N D- A- R O U T E app! Check it out here! F I N D A R O U T E🔥 Miljan Djordjevic built this snazzy calculator app!🔥@vampiire has finally written an article on his learning adventures, titled Three Tangents on Learning. I highly recommend checking it out!🔥 Check out this awesome drumkit app from @jon!🔥@jon also wrote this blog post on flexbox. 🔥 kenito henry also built a calculator app recently! Check it out here. 🔥 Here is @jordan’s nightlife coordination app! Overheard in Chingu Below is an excerpt from this week’s edition. See the whole article here. We had a big issue with our project, as we could not do the project we initially planned on doing (limitations of A P I). We had an emergency-meeting, and found a new use for the A P I after like 30 minutes. Team is awesome! I successfully implemented passport authentication in our applicationfrontend mvp almost complete React pair programming. The past week we set up many React components, have re-styled our U I mobile first and added some Sass variables, and also set up our server and some basic routes to be connected to the client side next week. The front end view and basic C R U D A P I are finished and ready to be integrated! Everyone is progressing as planned with their learning for the sprints ahead — we’ve got a skeleton of our frontend built and will finalize initial design of the missing pages this week. We successfully connected the front end to the back end. I learned how to implement asynchronous requests in React","['Chingu', 'Reactjs', 'Freecodecamp', 'Codelikeagirl', 'Codingbootcamp']",https://medium.com/chingu/chingu-weekly-vol-54-5782cfff703b,0,[],0,188,chance,M,0.024461428631419813,0.9755385713685801
Edilson Hernandez,Currently an Iron Yard student in DC.,2 Weeks Completed At The Iron Yard – Edilson Hernandez – Medium,2017-07-09 23:00:38,medium,"2 Weeks Completed At The Iron Yard Walking towards the train station for my first day! As the title implies, I am currently a student at The Iron Yard. I am in the web development 12 week program. Now that I have completed these first 2 weeks, I feel like so much time has passed. I’ve been working overall 10 to 11 hours a day for this coding bootcamp. Maybe working is not the best word to use in this scenario because I like what I am doing. I think I should say hobby-ing(?). My first week at the Iron Yard is what I can describe as the wake up week. My spring semester of college had finished a couple of weeks prior and I mostly spent my time at work or exercising. Luckily, I knew what to expect coming in to the program. I just needed to brush off the rust. Nevertheless, our first week was composed of learning how to code in H T M L and C S S. Even though I had prior coding experience, my coding experience was more in a mathematical implementation. I felt a bit lost. Sometimes the code I would write would work perfectly well as I intended and other times where it made the whole page flip. It was a roller coaster. It was full of great victories and total defeats. This first week also set the environment of what we should expect in the next couple of weeks. Week 2: more of the same plus some new stuff. This week we began to wrap up our H T M L and C S S. We were given a weekly project which seemed simple, but was very challenging. Nothing we didn’t know how to do but definitely pushed us to our limits to truly use all the tools we have learned about. This week we also began to learn Java Script. A lot of people were happy for this new topic. Learning J S came a bit more naturally to me since it’s very similar to Java(one of the coding languages I had programming experience in). Regardless how easy it is now, I am going to continue cautiously. Overall, I am happy about everything I am currently doing. This culmination of skills will equal to something great!!!",['Codingbootcamp'],https://medium.com/@edilson.hernandez1/2-weeks-completed-at-the-iron-yard-2f471b7092a8,1,['The Iron Yard'],1,0,edilson,M,0.0,1.0
Claudia Zeledon,"Bookworm. Deaf. Maid. Junior Developer. Mother. Blogger. Brunette. Accountant. Nurse. Animal lover. Chef. Catch my drift, yet?",How I Went from Being Sheltered and Deaf to Trying Secure a Job in Coding,2018-08-15 15:59:43,medium,"How I Went from Being Sheltered and Deaf to Trying Secure a Job in Coding Photo by Carl Heyerdahl on Unsplash Let’s begin a simple introduction. My name is Claudia. I was born with severe sensorineural hearing loss. I am a bookworm, maid, blogger, teacher, organizer, nurse, chef and a junior developer. I grew up sheltered. There is so much about life that I didn’t know about. I never ventured to take a step out from my parents’ protective arms and explore what is out there. I was content with what life has offered me. I spent years in college, changing degree (more than 3 times), having a (nearly full-time) job in retail and helped my mother with the care of my two nieces. I was in my late twenties when I decided that I wanted to have a relationship. In fact, I never had a relationship before. Am I ashamed of it? No. There is no reason to be. Before, I’ve had few friends who tried to set me up with guys they knew and I always shied away from them. But now, I felt it was time for me to…blossom? Perhaps that was a bit of a idealistic notion. Rather than finding a guy in some clubs or coffee shops, I decided to see what technology has to offer. I looked up Match. com and it was only about three months later and two different guys later that I found a guy for me. You know what’s funny? I literally ignored this guy after two dates. He continued to text me for about a week and a half until my mother suggested that I give him another chance. He didn’t do anything wrong at all. In fact, I don’t remember why I chose to ignore him. Perhaps I was scared at the moment? The fact that it could potentially turn into a relationship? Well, let me remind you that I never had a relationship in my life. I’ve had crushes, sure. But relationship? Nope. I chose to not have one, even turned potential guys away. I wasn’t ready all these years. That is, until now. Well, I gave him a chance and before I knew it, we’re together five years later and still ongoing. We have a beautiful daughter together who adores animals (even snakes!), speed, singing and climbing the side of the stairs (such a monkey…). Something tells me she might carry the tradition of riding a motocross in my family ( My dad, nieces and I ride motocross). It had been a couple years since I finally finished my college degree online. I chose to major in Environmental Science with a minor in Fish and Wildlife Management. Did I love it? Well, I love learning about environments and animals in general — but hadn’t been able to secure a job in a field related to my degree around the area I live in. Then I realized that I wasn’t quite passionate about having a job in that field. I loved the idea of working outdoor, trying to conserve the environment and protect the animals — but that’s as far as I can go — the notion of it. Bothered by my lack of interest in wanting a job in that field, I wasn’t sure what to do next. I already have a newborn that I cared for at the time and I officially have a college degree that wasn’t going to help me get a completely different job. My boyfriend found out that I knew how to write codes. I used to spend my days in high school, designing websites using Paint Shop Pro, H T M L and C S S. That’s when he suggested that I take a look at jobs in software engineering. I wasn’t sure if such position would fit me. The idea of doing software development/engineering was…. way, way above me. I felt that I wasn’t smart to do it. Didn’t have the brain to develop complex codes. So, he bought me a simple S Q L book (it was just thin, tiny book) and told me to read it and see if I understood it. Surprisingly, I picked it up quick and was able to write simple S Q L queries. Then he suggested I look into coding boot camp. We explored what options we had in the area until he took it upon himself to visit a particular coding boot camp in person uptown. He liked the atmosphere and the people that were there. I was surprised when he told me about it. So, I visited the place, loved it and applied for it. The price of attending a coding boot camp scared me until the director there suggested I apply for a scholarship called # Yes We Code. I applied for the scholarship and I kid you not, in literally the same hour — I received a full scholarship to attend a coding boot camp! So, my journey with learning how to code began there. My mother cared for my daughter while I attended the coding boot camp for almost four months. I spent nearly eight hours a day from Monday to Friday learning how to code and spent a few more hours at night at home, still learning how to code. It was during that time that I realized I should have learned how to code when I was in college. Then again, I suppose that’s the predicament that a lot of people found themselves in — earning a degree and realizing it wasn’t what they wanted. Now that I’ve earned a certification in Back- End Engineering through The Iron Yard, I was excited to hunt and secure a career in software development. Unfortunately, that excitement dimmed. It had been several months of hunting for a career — and yet, each time I thought I was close to getting one, I always received the same feedback. I didn’t have enough experience for an entry-level position in software development (or java-related positions). It was a frustrating experience for me. There are so many entry level positions that didn’t require experience or only have at least 1 year of experience (which I do qualify for) and yet they wanted someone who have more experience than I do. How am I supposed to beat that? I knew finding that first job would be the hardest but I hadn’t expected it to be this hard. I even looked into internship and applied for some, and yet, no responses. I looked into remote jobs and so many required certain level of experiences. Now, it sounds like I’m about to give up but I am not. I managed to finished my college degree while I cared for my newborn (she is now turning three). I stepped out of self-contained classes (classes designed for the deaf and hard of hearing students in school) and went mainstream (attending classes that hearing students go to). I went to a coding boot camp and earned a certification. Now, I want to secure a career in coding. I suppose I’ll be writing posts here in Medium and on my blog about my journey in trying to secure a coding career, what it is like to experience life from my perspective and what I’ve learned (in general, anything that catches my interest).","['Web Development', 'Deaf', 'Codingbootcamp', 'Life Lessons', 'Software Development']",https://medium.com/@cjzeledon/how-i-went-from-being-sheltered-and-deaf-to-trying-secure-a-job-in-coding-59b0559aab55,12,['The Iron Yard'],1,0,claudia,F,0.9940265852372445,0.005973414762755484
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Chapter 2 — Schedule – W3Develops – Medium,2018-10-03 01:33:33,medium,"Chapter 2 — Schedule The best way to predict the future is to invent it. — Alan Kay Focus is the single most important factor in your success life. — Bill Gates & Warren Buffet Note 1: Cohorts are launched on the 5th of every month. Note 2: It’s possible that dates may change slightly. 1st day of month 1 — Handbook goes out via email5th day of month 1 — Cohort invites go out via email14th-21st days of month 1 — People joining in and getting settled into their teams Discord chat channels1st day of month 2–100+ Remote Teams Launched A) Step 1: As a team: Pick a project to reverse-engineer or a completely new idea to build. B) Step 2: As a team: Pick a project manager and assign team member roles and tasks as a team. C) Step 3: As a team: Designate a time once a week to hold a team meeting in which members discuss the dynamics of what is going on with the projects, wants, needs, and what is the next step is that needs to be completed in order to move forward with completing the project on time. Record the meeting (whether it be by text(upload to Medium), audio(upload to Sound Cloud), video(upload to You Tube) or in person(record the interaction and upload it to You Tube))upload it online and send us the link in the Weekly Team Check- In. Take ownership & finish the project, regardless of what happens. 14th day of month 2 — Act 1 due-date ( Project Setup)28th day of month 2 — Act 2 due-date ( Code Sprints) Some teams will finish early but A L L projects will continue until the project is finished, as long as at least one person remains in the team and is working on the project(some of the best projects are created by teams with only one team mate left coding). 28th day of month 3 — M V P due (minimum viable project) ( Project completion, showcase & closure) The final due date is relative to the project — some projects may take more time to complete. That is okay. * Teams that have not set up their projects after the first 2 weeks will be removed. Weekly Individual Check- In Schedule To support teams and help automate the admissions for future Cohorts, we have a system for keeping track of team progress and ensuring team communication & accountability. It is not abnormal for a W3develops Cohort to launch 100+ developer teams in a session. With this level of industriousness, it’s essential that we have a system to keep track of team-progress to support teams when they need assistance. Every Friday — Weekly Individual Check- In will be sent out via email Each Check- In takes 3 minutes to fill out, but can help keep teams accountable, focused, and uncover issues early. If teams don’t communicate, they fail. If you don’t think you will be able to complete these weekly accountability checks, this Cohort may not be right for you (please let us know). Here is what a Individual Check- In looks like: What I did in the last 7 days? What our team did in the last 7 days? What I am working on in the next 7 days? What our team is working on in the next 7 days? Is there anything blocking my path? (ex. I need to learn x, I don’t understand y) Is there anything blocking our teams path? (ex. We need to learn x, We don’t understand y) Weekly Team Check- In Schedule As stated above in Step 3, what teams must do is designate a time once a week to hold a team meeting in which members discuss the dynamics of what is going on with the project, wants, needs, roles, and what is the next step is that needs to be completed in order to move forward with completing the project on time. Your team must designate a member to record and publish Check- In meetings (whether it be by text message (upload to Medium), audio(upload to Sound Cloud), video(upload to You Tube) or in person(record the interaction and upload it to You Tube))upload it online and distribute the link to each team member in order for each member to be able to submit the link in the Weekly Team Check- In . Every Friday — The Weekly Team Check- In will be sent out via email The weekly Check- In will consist of a form to submit your teams weekly meeting recording link and a few brief questions. Team Acts Schedule1 — The teams are released in #news on the 5th. 2 — You will then be directed to find your team-chat. 3 — Now the fun starts. The team then follows W3 Develops project roadmap. Note: we are always looking for ways to improve this process so some of these milestones may change slightly. Act I — Project setup🗓 Due date to finish this Act: The 14th of your cohorts 2nd month. Bonus points if you can get it finished by early🔥— — — — — — — — Milestones1: Everyone has met each other and read each other’s bios2: We have discussed and agreed on a Project Manager. 3: We have discussed and agreed on a project. 4: We have discussed and set team goals and expectations5: We have set up a project management tool for assigning and tracking tasks6: Everyone is in the github team (the repo is automatically generated in the W3 Develops organization) Act I I — Code sprints🗓 Due date to finish: The 28th of your cohorts 2nd month. If the sprint takes longer, your team is at risk of losing momentum and failing. — — — — — — — — Milestones1: We have coordinated and assigned coding tasks for this sprint2: We are coding our tasks3: We have completed our tasks4: We have pushed up this sprint’s code into our Git Hub repo Act I I I — Project completion, showcase & closure🗓 Due date to finish this: The 28th of your Cohorts 3rd month for basic M V P( M V P = minimal viable project). — — — — — — — — Milestones1: We deployed our project on a public web host2: We have performed final debugging and testing3: We have requested feedback on our project4: We have evaluated the feedback and corrected any critical bugs5: We have completed our project build and are ready to submit it6: We have completed the W3 Develops Cohort project submission form7: A member of the team has written an article and/or made a screencast detailing the project. Milestone resources? Here is a short 2 minute mini-resource for Act 1 — Milestone#1 that will gives more info, tips, and examples on how to start completing the milestones: W3 Develops — Milestone #1 What is the Milestone? Everyone has met each other and read each other’s bios in #add-your-intros-here. Milestone #1 in a gif Milestone 1 Due date:🗓 1–3 days from when the teams are launched. If everyone has not touched base and said hello to each other within 3 days, please reach out to your team-mate’s in a D M to help them out (it can be pretty chaotic at first for new people). Make a ticket if the team doesn’t get going right away. Tickets will be found in your teams chat. What should I do? Bring the 🔥 🔥 in the form of Enthusiasm. Feel free to copy and paste this: “ Hey team I’m super excited to be here and build this project with you all!!!” Read your team-mate’s introductions in the #intros channel. If you can’t find it, ask them if they’ve made on yet. I recommend reaching out to your team-mate’s in Direct Message ( D M) to establish a connection and begin to build your developer network. You’re all here for a reason and some of you have spent months to get in — now is your chance to give your team the best opportunity for success by generating momentum at the start. What does success look like? Success is meeting your team-mate’s and beginning to build momentum for the project. Do not underestimate the importance of momentum in team projects. Past examples Tips I recommend downloading the Discord mobile app on your phone. Note: If there’s something you discovered during this milestone that you think would be helpful to others or there’s something you think is missing that would be helpful please leave a comment. We live for continuous improvement. :) Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 1 — Team Projects Lineup Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 4 — Standards & Builder’s Pledge Chapter 5 — Finished Projects & Other Cohorts Comments Chapter 6 — F A Q","['Web Development', 'Pair Programming', 'Codingbootcamp', 'W3develops', 'Freecodecamp']",https://medium.com/w3develops/chapter-2-schedule-f6ecb9937745,0,[],0,20,jonathan,M,0.0042130252697924414,0.9957869747302076
Karla Moreno,"jr. web developer, python enthusiast, and cat-lover",Fixed-Mindsets (And Recovery) – Karla Moreno – Medium,2017-10-05 07:32:19,medium,"Fixed- Mindsets ( And Recovery) Welcome to Fixed- Mindset Thinkers Anonymous. The path to recovering from your way of thinking seems daunting, but it’s not. I’m Karla, a former Fixed- Mindset Thinker and here’s my story: On the first day of web development class, I walked in overwhelmed with self-doubt and anxiety. My instructors played a video that forever changed my way of thinking. By the end of it, I was feeling inspired, excited, and most of all, ready for the challenge that is a 12-week coding bootcamp. You don’t have to watch the video to understand. So I’ll break it down. What even is a ‘fixed-mindset’? A fixed-mindset is a way of thinking in which you believe your abilities define you and cannot be changed. You’ve either “got it” or you don’t. In contrast, a growth-mindset is a way of thinking in which you believe the level of effort you put into a task determines success, and that there is always room to further develop your skills. You can do anything you set your mind to. So, now you know about the way you approach life. If you’re a growth-mindset thinker, congratulations, keep on keeping on! If you’re a fixed-mindset thinker, you may be wondering what this means. Are you surprised? That’s okay; I was, too. How’d you get to be this way? If you didn’t watch the video, here’s my interpretation and explanation ( Note: the video does a waaaay better job at this). Well, it depends on the way you were taught growing up. People with a fixed-mindset were often praised for their intelligence or capabilities that, while it boosted self-esteem and confidence, reinforced some negative qualities that arose when a task became more difficult. Those negative qualities include feelings of self-doubt when a task is not initially easy and the tendency to find the easiest solution/task that to complete in order to boost self-esteem. That resonated with me deeply. All my life school and learning had come easy to me up until college. Things got difficult and I reacted like a fixed-mindset thinker would: gave up before I truly gave it a chance. I didn’t even know I was doing that to myself, but after class on that first day, I knew I needed a change! Are we just gonna sit here and talk about it? Are you ready for recovery? The hardest part is admitting you have a fixed-mindset. If you’re aware of the problem, it makes it that much easier to fix it. Awareness facilitates making that change, or taking action, when you realize you’re doing fixed-mindset things. Some of you may wander if it’s even possible to change the way you think; it absolutely is. I wondered the same thing. After wasting too much time on thinking about doing something, I got up and actually did it. I didn’t stop trying to finish that task when I couldn’t complete it initially; I kept doing it until it was done. That’s the first step to stepping out of the fixed-mindset shell. And you just keep doing it until you don’t have to actively think about it. A testament to myself, I am a true-believer that I am in control of my success and future, not my level of intelligence. The really great thing for you fixed-mindset thinkers or those on the path to recovery, is that all you have to do is try. One of the most liberating, euphoric feelings is accomplishing a goal in the face of adversity. If you chose not to watch the video at the beginning of this blog, that’s okay. Here it is again if you’re ready to make a change.","['Growth Mindset', 'First Post', 'Productivity', 'Codingbootcamp']",https://medium.com/@diskokarl/fixed-mindsets-and-recovery-480c6dfcb4be,1,[],0,2,karla,F,0.9965117460460811,0.0034882539539189236
David Clark,Mindfulness | Humans | Animals | Earth | Coding | IG: the.coffee.smith,The Plan – L2Code – Medium,2018-03-04 00:12:47,medium,"The Plan Onward and Upward! Photo by Space X The month of February served me quite well. I took a break from coding because I knew that February would be very busy, and because I wanted to take a step back in order to mentally prepare for Thinkful. In February, we celebrated my wife’s 28th birthday, my daughter’s 7th birthday, and my own 30th birthday. Because I grew up not celebrating birthdays or any holidays, I’ve never had a real birthday. This year, my wife changed all that. She organized a great big shin-dig at our favorite brewery, vegan pizza and ice cream included, and invited several folks I haven’t seen in far too long. It was spectacular being able to experience what it feels like to be genuinely surprised by other people. The people in my life are so great, and I am eternally grateful to be able to call them my friends and family. February also brought about a lot of personal growth and solidifying of some healthy habits. Hit 60 days in a row of having meditated. Every morning, I meditate for at least 10 minutes. I make sure to get to work early enought to do so, or include in my self care time on the weekends. Finally went to the doctor. It’s been far too long, but it turns out I’m fit as a fiddle. This is great, because it leaves room for some things that I want to do, rather than need to do, such as #30 on my 40x40 list. Started a workout routine. Every other day to start — and soon every day — I’m completing a compound bodyweight workout. It’s easy to do in my living room and works all of my muscle groups! I’ve already started seeing elevated energy levels. Strengthened reading habit. I completed Borne by James Van Dermeer, and started American War by Omar El Akkad. I’ve been reading a good amount each day, and have incorporated it into either self care time or my bedtime routine. Increased our stability. Our tax returns came — more than we calculated we’d receive based on our W-4 withholdings — and we put it all straight into savings. Now, with two months of expenses set aside, we’re looking to open a higher-yield savings account, most likely with Discover, with the intent of saving more for our Emergency Fund, then moving on to college savings and the like. Evaluated our budget and spending from last year, we modified the budget for 2018 to account for more realistic spending. This puts us in a powerful position — knowing where every single dollar goes is important. That’s why we use Y N A B for tracking every single one. We received significant tuition assistance for this next school year for our daughter’s school, which is extremely emotionally rewarding. I’m feeling empowered going into this next chapter in my life! Thanks to the focus that I applied toward self-improvement this last month, I was able to modify my Google Calendar to be more realistic. I may be able to squeeze another five or so hours out of the week for coding. Bedtime routine doesn’t take long for myself, but it does when helping my daughter get ready. My wife may be able to take on more of that responsibility on nights that she is home on time to do so. My daughter and I had a discussion about this schedule, and she looked it over with me. She understands what is coming — and is already prepared for it, as it’s very similar to what she was experiencing when I was learning outside of a bootcamp. So, really, what’s the plan? The plan is to enroll in Thinkful this coming weekend. I’ve been spending this last weekend getting some things out of the way in preparation for it. If you can’t tell, I’m excited! With strengthened core habits in place, a supportive family, and clear goals in sight, I’m ready to tackle this next step!","['Money', 'Self Improvement', 'Learning To Code', 'Codingbootcamp', 'Coding']",https://medium.com/l2code/the-plan-f495e1bebba1,1,[],0,23,david,M,0.0035582779766708743,0.9964417220233291
Matthew Downs,"Originally from Atlanta, GA. I spent the last 14 years living in Japan, the final 7 farming rice on Sado Island. Back in Atlanta for the time being.",Run away the Impostor Syndrome – Matthew Downs – Medium,2016-11-01 12:25:39,medium,"Run away the Impostor Syndrome I went running yesterday. Running for the first time in quite a while actually. It’s a story that isn’t really important for this particular essay as to why it’s been so long since I’ve been running. But I did go. The reason was twofold. First, I’m getting a bit of a gut. You see, I used to have a job where I worked outside and did physical labor for most of the day. I was a farmer. Also a story for another entry. As a farmer I was able to work off most of the extra calories the two or three beers I drank at dinner the night before. However, these days I don’t do manual labor for my job. I should put that “job” in quotes in that my job these days is trying to learn as much as I can while I’m studying at Digitial Crafts, a coding bootcamp here in Atlanta where I’m learning full-stack web development. So, mostly I just sit and stare at a computer screen and bang my head against a desk while trying to figure out where the hell I am in a nested for-loop. That doesn’t provide the calorie-burn I’m used to. Thus, my gut. And the running. The second reason for the run, though, I think is the more important one. The exercise gives me time to think about the overwhelming sense of impostor syndrome in regards to my study at Digital Crafts. Today we started learning J Query, which I was kind of excited for because during the pre-work for the course I seemed to do really well on those exercises. Well, pre-work is not work work. Commence screen staring and desk-head-banging. Here’s a look at some of my garbage code. Maybe I shouldn’t put that out there. Hey everyone! Look at what a bad programmer I am! But it is a journey. And it is new. I am not a savant at this so learning is going to be work. That’s what the run kind of helped with. I need to remember that learning is work in order to keep my impostor syndrome at bay. And to keep a bit of sanity and perspective. ( Note: this is the first in what I hope can be some regular-like entries documenting my time at Digital Crafts and (hopefully) my future life as a software engineer. I realize I should have started at the beginning of the course, but right in the middle offers up some interesting insights too I hope!)","['Impostor Syndrome', 'Web Development', 'Codingbootcamp']",https://medium.com/@mwdowns/run-away-the-impostor-syndrome-7b9c840b836b,0,[],0,2,matthew,M,0.0034518646899117703,0.9965481353100882
Venturi's Voice,"Blogging and podcasting about all things tech. We speak to thought leaders in a variety of fields to get their insights into leadership, management & staffing.",Node University: Taking the non-academic route when learning to code,2018-07-03 08:42:55,medium,"Node University: Taking the non-academic route when learning to code Listen to the full show here. Azat Mardan is Head of front-end development at Indeed. com and Co- Founder at Node University. Azat knows coding has the power to change lives. That’s why he founded Node University. As an advocate of teaching coding skills, Azat is an expert in instructing through a variety of mediums. Teaching people online, in person, and via books have made him a skilled communicator. He infuses his infectious enthusiasm for programming into everything he teaches. Azat Mardan has taught over 1, 000 software engineers in-person and even more online through ebooks and video. He has published 14 books and dozens of online courses and has more than 15 years of experience in web, mobile and software development. Azat has a Bachelor’s Degree in Informatics and a Master of Science in Information Systems Technology degree. Listen to the full show here.","['Coding', 'Learn To Code', 'Code Newbie', 'Codingbootcamp', 'Code']",https://medium.com/@venturimarketingliam/node-university-taking-the-non-academic-route-when-learning-to-code-eacfdad118a7,1,[],0,0,venturi's,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 13 — (Rush01) – Mike Brave – Medium,2018-09-02 05:06:35,medium,"42 Piscine Day 13 — ( Rush01) Edit: This is part of a series that culminated here, Next post. Previous post. It’s the weekend which means two projects; a group project and a personal one. The personal one is worth more points, but the group one feels more important to me as it demonstrates teamwork and collaboration etc. How these are actually weighted is unknown to me, but there has been some debate among the students where the time would be better spent. My group for the group project is not ideal. One of my members is attending an entrepreneurship expo in San Fransisco for both days we are allowed to work on it. She is eager to work on it but absent, so she wanted to cram in as much as possible before she left and has asked me to stay late as well. So to accommodate and give her the chance I will be here till midnight. The other one I chatted with didn’t seem convinced that it was worth putting much time into, her friend sort of spoke for her and told me to not waste my time on it and focus on the personal project instead as it was worth more points. I told her I would check in with her once I’d done more, she hasn’t answered any further messages. So it seems like it’s just me working on this, and I’m stuck on something that should be simple, displaying a double array to the screen. If I can’t manage that at least then I’ll have to either find another way to store my data or actually give up. Perhaps by choosing to work on the group project I chose poorly again. My friend’s group is very different than mine, two of her teammates are superstar programmers and she is the least capable (though still very capable). Which has a different feeling of wanting to not be the dead weight, instead of trying to convince people to show up like mine. Yesterday I was chatting with another student here and he said something to the effect of “ I haven’t failed a test since the third grade, this place makes me feel dumb” and that seems to sum up the gist of it. Most of us are the types who are usually the smartest person in the room, and here many of us are not, at least not compared to each other, the constant inability to do everything (often interpreted as failure) contributes to this feeling as well. More people are struggling and at similar levels as myself than I thought, my worry is that this means I’m actually in worse shape than I thought. It still remains to be seen if they value people with previous programming experience over those who are first time learners, it would make sense as they would score higher, but that doesn’t seem to be the vibe that I’m getting. Ironically most of the people doing well this piscine are people who have taken one previously or have lot of background in coding. My one semester of C++ at community college helped me understand loops and that’s it, I didn’t really have an edge at all because of it. The stuff we are learning is so much deeper than anything I’ve learned about code before that anything short of a years worth of experience (or schooling in computer science) wouldn’t really prepare you much for it. Those who are doing well seem to have that year of experience. I can see my writing get lower and lower quality everyday, it rambles more and drifts, I’m mentally tired when I get around to writing, I’m mentally tired everyday, most of us are. I have run into a few people though who are here but not really attending, or are only attending a couple of hours a day. I wonder what their motive was, just free rent for a month? That doesn’t seem like enough for me, but then again who knows. I forgot to take a headcount today, but I’m sure more have quit. The group project is to make a sudoku solver.","['Education', 'Ecole 42', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-13-rush01-b3e4f2148723,2,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",The Pressure of Too Much – Emily Deans – Medium,2017-07-12 23:07:34,medium,"The Pressure of Too Much In addition to the inherit challenges that lay within the day-to-day experience of being in a bootcamp — being on the receiving end of a near-constant barrage of new and challenging information, having (what feels like) more work than you can possibly manage to complete in a fixed 24-hour day, wrestling with mild-to-major public speaking fears on occasion when presenting or working through concepts and problems you’re not 100% solid on in front of the class, etc. — I’ve found myself struggling to create and maintain balance in what will be my “new normal” for the next few months. While my time in class and around our projects and lessons feels fairly focused and intentional, I’ve noticed that over the last few weeks, I’ve found it extremely difficult to disengage and participate in non-coding activities. When I was hitting a wall on my weekly project a few weekends back, I decided I needed to “take a break” and go for a walk, but ended up feeling so guilty about not doing my work that I turned on my coding podcast for company (not exactly the immersive nature walk I’d been craving). Because all of this material feels so new and intense and exciting, the more I learn, the more I feel I need/want to learn. With every new lesson and/or concept, I suddenly find myself bookmarking a dozen new resources — books to put on hold at the library! Websites to peruse! You Tube videos to watch! Lectures to download for later listening! I then find myself fatiguing my decision-making capacity whenever I’m inside of what I’ll refer to as “unstructured time”, trying to decide which is the most important topic option to explore — should I do a deep-dive into D O M manipulation? Focus on realllllly understanding Flex Box? Become more fluent in terminal commands? Tackle algorithms and data structures?? The list could go on, but you catch my drift. There is just so so much information out there and S O many ways to access it. It’s overwhelming, and can completely wipe you out before you’ve even started a lesson. If I’m going to make it through this course without burning out (as I very much intend to do!), I know I’m going to need to figure out how to be more disciplined in the way that I structure my time, and also will need to make it a priority to schedule that time to include a few other activities that help me feel grounded and sane when I’m in stressful situations. For me, that’s probably going to mean making time for cooking, friends, exercise, reading (books! for pleasure!), the occasional brewery visit, and S L E E P. Wish me luck!","['Programming', 'Women In Tech', 'Women Who Code', 'The Iron Yard', 'Codingbootcamp']",https://medium.com/@emilyldeans/the-pressure-of-too-much-5d350014b8b9,1,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
chibueze ukaegbu,,"LearnFactory Internship: Day 20 (May 25, 2018) – LearnFactory Nigeria – Medium",2018-05-27 16:44:57,medium,"Learn Factory Internship: Day 20 ( May 25, 2018)“ We are born with the sun in our face, and the wind at our back. We dare the impossible, scorn the improbable and accomplish the unbelievable”…i C Ubuntu + H T M L + C S S = Code :) And that was it; week 4 has taken a bow. We had a very interesting week, filled with calls from amazing gentlemen, writing cool code and generally being awesome. The interns worked hard, pushing themselves beyond their limits. For 2 nights ( Thursday and Friday), they slept in the office, pushing to complete their P V C project. I must confess, I was very impressed with what they accomplished; the U X is very polished and this is given the fact that 3 weeks ago, most of them had zero idea about H T M L and C S S. I must commend not only the teaching staff, Matthew, Isaac & Lawrence, who have been amazing; but the interns themselves who have shown that they are world-class. To Team Bentely- Continental: Chidera, Chinenye and George; Team Lamborghini Aventador: Rutherford, Chilaka, Zoe and Andrew; Team Mercedes Maybach: Ezekiel, Prince, Shalom and Ekene; and Team Rolls Royce Phantom: Emmanuel, Chibuike, Bernadine, and Grace. To cap the day, here are screenshots from the on-going P V C challenge the teams built. Group 1: Teams Lamborghini- Aventador & Rolls Royce Phantom Group 1 P V C challenge Group 2: Teams Mercedes- Maybach and Bentley- Continental S P O T L I G H T O F T H E D A Y In the spotlight today is Ekene, quiet, cool and focused. Cool as Ice Hi, I am Okeke Ekene Mac- Anthony. I’m not complicated, I am one of 6 children born to Mr & Mrs Paul and Fidelia Okeke. I’m currently a student of Nnamdi Azikiwe University, Awka. I love the color black, I enjoy Egusi and Fufu. I love playing football, writing and listening to music and new found love for writing code. Who needs a groom… Well, what more can I say, he is a man of few words. Tuesday is the official one month mark; it’s cool we have come this far. We were told it couldn’t be done, we were told we would be wasting a lot of money training these young people when we had no binding bond with them. But, life has it’s own surprises. The satisfaction of saying “ We did it”, outweighs every other thing. Well… have a blast, enjoy the weekend, and I’ll see you on the other side of Sunday. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-20-may-25-2018-3d592c8aacf,0,[],0,135,chibueze,M,0.0,1.0
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",JavaScript Functions For Dummies (Me): Part 1 – Joseph Cardillo – Medium,2018-04-01 10:56:50,medium,"Java Script Functions For Dummies ( Me): Part 1 Drilling The Basics: An Intro To . ceil(), . reverse(), . split(), and . join() Photo by Roman Mager on Unsplash Each morning before getting into the thick of class we are given coding challenges. I really enjoy these as a way to prime our minds for the day ahead. As I do these I’m realizing 1) how much I don’t know, and 2) that there are certain concepts that keep resurfacing, and that it might be helpful (to me) to write out my thought process — and the solutions — as a way to drill them in. Someone recently introduced me to Code Fights, which I’m very thankful for. The below questions are from their Java Script Intro: “ The Journey Begins”. Using Java Script to Return the Century a Given Year Is In The Question// "" Given a year, return the century it is in. The first century spans from the year 1 up to and including the year 100, the second - from the year 101 up to and including the year 200, etc. "" My Thought Process I first thought to use the . round() method, but after trying a few iterations of this I realized it was rounding down when, for example, the year was between 1901 and 1949 because in dividing it by 100, the tens place was less than five. For example:function round Year(year) {   x = year / 100;   y = Math. round(x);   return y;}round Year(1901);// rounds 19. 01 down to 19 Instead, I used the . ceil() method. 1) Divide the year by 100 and set this value equal to x. 2) Pass x into . ceil() and set this equal to y; then return y. The Solutionfunction century From Year(year) {  var x = year / 100;  var y = Math. ceil(x)  return y;} I checked to see if there was a more eloquent solution, and there was (from user haynar)! This one takes the thought process a few steps further and combines my three steps into one:function century From Year(year) {  return Math. ceil(year/100);}// Magical! Using Java Script To Check if a Given String is a Palindrome The Question// "" Given the string, check if it is a palindrome. "" My Thought Process1) Set the string equal to y: Example: input String = ""hello""2) Split the string into an array of individual characters:x = [. . . input String];// or:x = input String. split('');// output: [""h"", ""e"", ""l"", ""l"", ""o""]3) Reverse the string:x. reverse();// output: [""o"", ""l"", ""l"", ""e"", ""h""]4) Join the string back together and set equal to z:z = x. join('');// output: ""olleh""5) Check equality of y (the original string) and z (the reversed string):if (z == y) {    return true;  } else {    return false;  } The Solutionfunction check Palindrome(input String) {  var y = input String;  var x = [. . . input String];  x. reverse();  var z = x. join('');  if (z == y) {    return true;  } else {    return false;  }} The more succinct version which combines my three steps into one (from user folsomwg). This one splits the string, reverses it, then joins it back together and checks whether the original string is equal to the reversed string. If it does, return true. if not, false. function check Palindrome(input String) {  return input String == input String. split(''). reverse(). join('');} I’d love to hear from you! Let’s connect using the following function:function lets Connect(yes) { if (yes === true) {  console. log(""linked In"");  console. log("" Twitter""); } else {  console. log(""thanks for reading!""); }}","['JavaScript', 'Codingbootcamp', 'Web Development', 'Coding', 'Programming']",https://medium.com/@josephcardillo/javascript-functions-for-dummies-me-part-1-d0edae7ae0c,0,[],0,22,joseph,M,0.004069495880582216,0.9959305041194177
Sourab Kumar,20 yrs | Co-Founder of Buzy Developers | Freelance Android Application Developer | Competitive Coder,New Journey of Algorithms and Data Structures — 100 days of Competitive coding!,2018-08-24 10:34:59,medium,"New Journey of Algorithms and Data Structures — 100 days of Competitive coding! Hi guys! I started my journey of competitive coding when I was 19 years old. Technically, 1st year of Computer Science Engineering course. I really didn’t know much about anything apart from C++ from 11th and 12th to get started with. I just knew how to write basic programs by the end of 12th grade. I had also learnt to implement basic data structures like stacks, queues and linked lists using pointers and arrays. If you don’t know what’s data structures, don’t worry we are here to solve it! chill :) Little background about what is competitive coding? Competitive programming is a mind sport usually held over the Internet or a local network, involving participants trying to program according to provided specifications. Contestants are referred to as sport programmers. Competitive programming is recognized and supported by several multinational software and Internet companies, such as Google and Facebook. There are several organizations who host programming competitions on a regular basis. A programming competition generally involves the host presenting a set of logical or mathematical problems to the contestants (who can vary in number from tens to several thousands), and contestants are required to write computer programs capable of solving each problem. Judging is based mostly upon number of problems solved and time spent for writing successful solutions, but may also include other factors (quality of output produced, execution time, program size, etc. ) — Source: Wikipedia Well that was little too much in detail, let me break it down! It’s a Game! Yes, you heard it right. A game, where you use your brains to solve easy to complex level questions and you get points to solve these questions. Yes, you can show off the level you’re at by posting status on Whatsapp and Instagram! lol! The only rule is, there is no rules! You can code in any programming language and how ever you want to, you have to just satisfy all the test cases or in laymen terms — basic requirement of the code defined by the problem setters. ( Don’t worry, no teacher is going to bug you here to use specific variable names. ) It all seems fun right? Till here?? Y E S????…. . You can jump to the below link to get started and writing few programmers on yourself. N O??okay, No problem. . still scared to write a line of code? still don’t know what compilers will think of you, when you run into errors? still don’t know why you should join this challenge? Continue reading! I will try my best to convince you. : D Why am I doing this? Same reason as you are here, to learn! I am a student, who believes teaching can teach you a lot more than books can teach you. Trust me, this is really true. I have trained nearly 300 students under the banner of “ Buzy Developers” for past couple of months in Android Application Development through multiple workshops conducted all through out Karnataka, India. In today’s engineering college, students are scared to write any piece of code! I am not trying to generalize to all colleges or any specific college. This is just through my experience. In fact, even I was scared. You know why? Because we were barely given any real life instance to program on. We could barely see the connection between the programs we wrote in labs and real life world! This really sucked out all the fun in programming and made it sound really monotonous. Many gave up there! I want to change this! I want to tell you guys, Darr ke aage jeet hai!!! ( Beyond fear lies victory) I started writing program solution for questions on Hackerrank. I still remember I was ranked around 10 Million when I started, with clue about any algorithms in my 1st semester. I reached rank of 50 Thousand and even got a Medal for it, In the time span of 2–3 months. ( Right now it is Sliver medal in Problem Solving on Hackerrank. and was in Top 10% programmer on Hakerearth in 2017) Even you can achieve this! It’s easy. It will surely boost your confidence level to try out little more difficult problems. Why should you know Algorithms? Being a student or an employee in Computer Science department or Company or anyone who is interested in Computer Science, should know few basic algorithms to get work done easily. What are Algorithms? Algorithms are set of steps for a computer program to accomplish a task. Algorithms put the “ Science” in “ Computer Science”. — Khan Academy Now, you would wonder what are these steps? Why are these steps so special? A simple analogy to make you understand this is, “ I used to travel through a specific route to college, I hated waiting at many (5 or more) traffic signals. It sucked! I didn’t mind driving an extra mile than be standing at the signal to turn Green. So 1 day, I asked my father to drop me to college as my vehicle was given for servicing. He took me through a specific road where we literally had to wait at just 1 traffic signal. It was like a magic for me!!!” Now question to you, Will I follow my father’s route from next time or my own route? Obviously, my dad’s! Because it was faster and I didn’t have to wait. Moral of the story is that, Someone with more experience than you knows better route ( Not always, but most of the time). Similarly, In solving any problem on computer science there are many algorithms written by many great thinkers and doers in this field. You might find a solution, but your solution needs to be faster and consume less space on the system. It’s gotta be one heck of a supermodel, beating all other algorithms written by all other great people. But the door way of using these great algorithms will always be open. I will speak about data structure in later stages. What am I trying to accomplish by this? I want to help you build 3 things in this process of 100 days, starting from today. 1. Your online coding profile2. Strengthening your coding temperament3. Help you people get adapted to Coding questions asked in technical Interviews. How are we going to accomplish this? With a lot of practice! Every week, I will either be making a You Tube Video or writing blog with all resources to help you guys learn new algorithms and also try your hands on solving problems by using these algorithms. Learning will be useless, until you know how to apply them in real life to solve real life problems. Also, solving problems will give you more insight on the loophole of the algorithms and how it is good. The only prerequisite is to know at least 1 programming language. Below is the index which will be constantly updated over time. Index: Simple Problem Solving questions — https://www. hackerrank. com/domains/algorithms ( Try solving atleast 2–3 very simple questions of Easy level) What if I am not able to solve them? I won’t give you false hope saying that, “ This is very easy, just go ahead and solve it, even a 6 year old can do this, etc etc etc” I really want people to join in me in this journey, if you find this thing E X C I T I N G! and nothing else. You can always learn stuff and keep up with the challenge even later on, but you should be full of life and energy to solve these questions. Because it’s not going to be easy! I used to not get solutions for weeks together for difficult problems. But, every single day I used to be excited to find the solution for it. Make use of Google and Stackoverflow wisely, that’s more than enough to get through almost 80% of your problem. Just don’t give up on this journey, you will have a lot of reasons to do that but let’s make this as one of our priority. Before going to bed, you should at least try to solve 1 question everyday. This will make all the difference. I really hope this help my friends and all the people who are in need of learning something new and exciting. If you like this initiative, we can always collaborate to give the best content to the audience. Follow me on Instagram to get the live updates: https://www. instagram. com/buzydevelopers/ You can personally follow Sourab Kumar on Linked In: https://www. linkedin. com/in/sourab-k-a61623ba/ Stay Tuned for more updates every week! Thank You Best Regards, Sourab Kumar","['Programming', 'Computer Science', 'Coding', 'Developer', 'Codingbootcamp']",https://medium.com/buzy-developers/new-journey-of-algorithms-and-data-structures-100-days-of-competitive-coding-276cd937772e,6,[],0,61,sourab,Unknown,Unknown,Unknown
Greg Gallant,,So You’re Starting A Coding Boot Camp? Great! Now you need to prepare!,2017-05-12 23:36:14,medium,"So You’re Starting A Coding Boot Camp? Great! Now you need to prepare! Tips for New Students Complete the pre-work Do online tutorials on H T M L, C S S, Git, Java Script, j Query (codeschool, codeacademy, freecodecamp, etc). W R I T E D O W N a schedule to carve out a minimum of 20 hours per week for boot camp work outside of class. It has to be written and it has to be realistic. If it’s written and realistic you will stick to it. If not, it’s not likely to stick. Tell friends and family what you will be doing and tell them that you will not have much free time for the 6 months that you’re in the boot camp. Ask for their support and understanding. The boot camp takes “ R E A L” sacrifice. You will not see your friends (and possibly family) as often. The sacrifice is worth it but it is real. You have to be ready for it before you start the boot camp. Carve out scheduled personal time for relaxation and exercise. It’s important to keep that up during the boot camp because stress is intense at times and exercise will help curb the stress. Sleep schedule: Try to make a strict sleep schedule. There will be times that it is difficult to stick to but it’s important to try as much as possible. Once the boot camp starts follow these rules: Don’t be shy in class. Ask lots of questions. Your classmates will thank you! Attend Office Hours! This is a must. Spend time with T A’s as much as possible. Practice syntax until it’s memorized. Practice mechanics until you know exactly what the code is doing. Do N O T C O P Y/ P A S T E. You won’t remember syntax if you do. Type, type and start over again. Understand all the class exercises by experimenting with the code. Start homework early in the week even if it is only pseudo-code. Dissect every problem into little pieces and then code in little pieces. Build H W from the ground up. Small pieces at a time. If you are getting stuck, get help during office hours early in the week so you can improve your work. Form study groups! Helping others understand helps you understand better too. Take breaks! Don’t study for hours without taking 15–20 minute breaks. You’ll need that to process and absorb the material that you’re studying. It’s important for your brain! Prepare for the following week by checking out the syllabus and watching some videos, doing some online reviews, etc. You should walk into each week’s class having already previewed the topic. You’ll follow along much easier and get more out of the class by doing that. The day after class, redo the class exercises from scratch to reinforce the material before the next lesson. This will also help when you go to complete the homework. Write down questions when you are getting stuck outside of class so you can come prepared during office hours to figure things out. Write down key terms and make a list of those that you need further explanation on. Then research online and ask for help in class. Organize all of your helpful links into specific folders on your browser and keep a live doc with organized resources by unit. This will be essential when you want to review topics later because all of the resources will be organized.","['Codingbootcamp', 'Coding']",https://medium.com/bootcampspot/so-youre-starting-a-coding-boot-camp-great-now-you-need-to-prepare-e3820d29758,0,[],0,40,greg,M,0.00184053027865371,0.9981594697213463
DigitYser,"DigitYser is the digital flagship of Brussels where communities gather to learn, create and implement digital solutions focused on Data & AI , IOT and VR.",Shift your career with a Data Science Bootcamp – DigitYser – Medium,2017-07-02 17:09:36,medium,"Shift your career with a Data Science Bootcamp Marta, Olivier and Agustina share their experience and tips for accomplishing a career change via attending a Data Science Bootcamp The speed in which digitalisation has reshaped the job market has not only created new types of jobs, but has also given place to an exponential amount of data generation, the so-called “oil of the 21st Century”. Ensuring how to take advantage of it is crucial to companies who want to proactively design strategies in today’s competitive environment. It is also equally relevant to those who -no matter the stage of their career- aim for better career prospects by learning Data Science skills. In 2012, Harvard Business Review referred to Data Scientist as “the Sexiest Job of the 21st Century”. This attracted a lot of attention and triggered the offer of new learning options for those wanting to step into the Data Science field. But, in a practical way (and leaving the buzz behind) which are the most frequent challenges faced by those who put all their effort and motivation to shift their career into Data Science? This is what Agustina, Marta and Olivier -former participants at the di- Academy Data Science bootcamp, in Belgium- know very well. The three of them attended the 2016 Summer Coding Camp, where they learned courses on R, Python, S A S, S Q L and Statistics. Afterwards, they were selected to join the Data Science bootcamp where -during 12 weeks- they studied Data Science business cases from field experts. Their efforts were fruitful as they found a job in Data Science, and are happy to share more about their journey with us. Agustina Pérez Let’s start with Agustina Pérez. While she originally studied Literature, she started diving into coding at her work, and attended some training on Web Programming and Web Design. She then kept an eye on the new M O O Cs related to programming, machine learning and data analytics, and attended the bootcamp as it seemed the sweet spot between the three of them, allowing a good transition from theoretical knowledge to business applications. During the bootcamp, she started a traineeship at Startups. be, and later got a full time position there having, as she describes, “the most interesting job I’ve ever had. The bootcamp helped me make a transition in my career to Data Science”. ( Do you want to meet Agustina and hear to her testimonial? Join us on July 3rd. ) Marta Redmann Marta Redmann also shared her story with us. She studied Electrical Network Engineering, gained some experience mainly in the energy sector, and then did a Master in Artificial Intelligence. She realised that her interest was fully into the Data Science direction, and joined the Summer Camp to learn the technical basis of programming. At that moment, she signed a contract with Teradata, and started her new job as a Data Scientist at the time she also joined the Bootcamp. As she says: “applying for the Bootcamp showed to my future employer that I was really interested to learn Data Science”. Olivier Van Tongerloo Same as Marta, Olivier Van Tongerloo had a background in Engineering (in Electronics) and worked for several years in that field. He started getting interested in data when he did his thesis on Graph Theory for Economics and a project about Marketing at a friend’s company. He then decided to join the Summer Camp and Bootcamp to help him with the career switch by improving skills and proving his motivation. While attending the Bootcamp, he also did a traineeship at a Data Science consulting firm and met Keyrus, the company which hired him after completing the program. Concerning the challenges they faced, the three of them agreed that, due to the fast pace of the lessons, they could not always deepen that much in some of the topics presented in the business cases, as they were busy with other projects/full time job outside the 2 weekly sessions ( Monday and Tuesday) they had to attend. Their tip is to, before the bootcamp’s kick-off, allocate some time during the 3 remaining weekdays to review the topics, or to include them in some ongoing project. What was the most enriching part of joining the Bootcamp? For Agustina, it was was studying from business cases delivered by consulting experts showed the real work of a data scientist was one of the strongest points of the bootcamp. Olivier enjoyed attending hackathons and having visibility on a broad variety of topics allowed him to choose the path to choose within Data Science. Martha loved learning about the (many) tools and ways to build a Data Science solution, which makes it almost an art. Overall, the three agreed that the most valuable element was building a network. Getting in touch with people of different backgrounds while interacting during plenty of different activities allowed them to exchange views on the different ways in which Data Science is applied. As Marta said: “real-life classes are much better because you can directly ask your questions to the teacher and interact with other students”. It is also the perfect way to meet a future employer. Beyond the buzz on Data Science “sexiness”, what is important to keep in mind is that stepping into Data Science requires mastering the technical knowledge and acquiring the practical vision on how to use it. Joining a Data Science Bootcamp pays off because it brings these 2 elements together, but it also requires a high level of commitment and motivation. Hence, if you would like to be join one, here are some extra tips from our former bootcampers: Learn as much as possible from various sources. Online classes and M O O C’s surely help in order to have some basics before considering joining a Data Science Bootcamp. Consider that, while you can prefer R or Python, the best is to work hard to be able to master both of them. Try and fail fast, and don’t be afraid of asking questions. Attend Data Science meetups and events. In Belgium, a great start is joining the Data Science Community meetups. Define the topics of your interest, and think about a project you could work on. Join informative sessions to learn more about the options of your interest. Meet the people behind the bootcamp, ask them to clarify your doubts. Are you interested to acquire some Data Science skills in Brussels? Want to learn more about our Summer Coding Camp (kicking off on August 7th. ) and Data Science bootcamp (starting on October 2nd. )? Join us for our informative session on Monday, July 3rd. at Digit Yser (in Brussels). Agustina will also be there, sharing her experience. We look forward to meet you there! If you can’t join, drop us a message to training@di-academy. com, or tweet us We will provide general information and keep you in the loop of other informative sessions. Talk to you soon! These are some of the 2016 di- Academy Summer Camp and Data Science Bootcamp participants","['Data Science', 'Bootcamp', 'Career Advice', 'Codingbootcamp', 'Brussels']",https://medium.com/@DigitYser/shift-your-career-with-a-data-science-bootcamp-f1d74a656e9b,5,[],0,4,digityser,Unknown,Unknown,Unknown
Verity Honebon,,Week 8 — Starting Rails – Verity Honebon – Medium,2017-07-31 13:18:42,medium,"Week 8 — Starting Rails Praise for Rails is all over the internet, it’s said to be elegant, forcing you to use best practise, and good at enabling the user to create prototype web apps quickly, which makes it popular with startups. After a little research on Rails I was excited to start learning it and to go back to Ruby after such a long time on Java Script. The theme of the week, given to us by our coach Mary, was ‘convention over configuration’ so we understood from the get go that we would have to conform to the Rails way of doing things to make a success of the project. Coming out the other side of this week I think I have identified the following pros of using Rails to create a web app:(i) You are forced to follow best practice. You are pushed, for example, to use the Model- View- Controller format(ii) When Rails commands are correctly used many auxiliary files (often blank) are generated for the user, which saves lots of time(iii) Rails has the O R M Active Record built in, this seems to me to be much more user friendly than Data Mapper, which we have used on a previous project(iv) The internet was right, Rails is extremely functional and allows you to build the bare bones of an app very quickly That’s not to say that this week was plane sailing though, as we did struggle quite a lot with implementing parts of the programme. The most obvious cons that we came across are as follows:(i) You must conform to the Rails way of doing things, down to small things like how files should be named. If you don’t do this Rails will not work with your code(ii) I can see how Rails allows developers without a deeper knowledge of Ruby to get by using Rails. It seems to me that this could be dangerous in some circumstances(iii) It is sometimes hard to get visibility of all the files Rails commands generate automatically, what they are and what their content should be/how they should be used Using Rails we ended up with a V E R Y minimalistic Facebook and I’d like to take some time to talk about why that is and how the structure of the team and how it changed during the week affected the outcome of the project. Let me first say that at the start of the week we were working in a group of ten (our entire cohort). Our coach did acknowledge that learning a new technology in a group of such a size would be challenging and she was right. We were told that professional software developer project groups tend to max out at around 6 people, which makes sense given the problems we encountered as such a large group. The headlines were: Its’ really hard to pool knowledge successfully in a large group The time period allotted to pairing with a single person before switching to another person should be much longer than if you are working on something familiar as you spend quite a lot of time researching and learning new material When there are not many features that can be worked on in sync there is a lot of waiting around and people start to feel that they are not being useful Emotions are contagious, if one person starts to feel down about a project it can easily spread I’ve been trying to think about how we could have made the project group of ten work and even now I’m really not sure what we could have done differently besides better communication. Ultimately we broke down into several subsections and I ended up in a group of 5. We moved forward much more quickly as a smaller team and I felt like I learnt much more in the end of the week than in the beginning. The experience has given me lots of food for thought on the ideal project group size and about how to communicate when working in a team of a large size so it was definitely a useful experiment. It’s scary to think that I only have a month left of the course — it’s all gone so quickly and I honestly don’t want it to end as I am having so much fun. The careers element has now kicked in and we are having weekly sessions with members of the Careers Team to think about jobs and life after Makers. I am looking forward tremendously to having a junior developer job but not at all to the process of getting it. Please someone give me a job!","['Ruby on Rails', 'Ruby', 'Codingbootcamp', 'Coding']",https://medium.com/@verityhonebon/week-8-starting-rails-5a0e9b68da4f,0,[],0,2,verity,F,1.0,0.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Calculator Complete – Emily Deans – Medium,2017-07-20 23:32:37,medium,"Calculator Complete Finally was able to finish and submit the weekly project yesterday. Not exactly the most impressive thing in the world to look at , but I do now have a fully functional basic calculator that I created entirely from scratch based entirely on a static mockup, using H T M L, C S S, and Java Script. Mockup on the left and my work on the right I had the majority of the program written by Sunday, but kept getting stuck on the final screen evaluation and return. I tried to create an event listener on the ‘equal’ button that used the ‘eval’ function in Java Script to return the value of the on-screen operation, but it kept returning a value of Na N (not a number). I realized after much scrutiny and some debugging assistance from one of our assistant instructors that I had a function toward the beginning of my code that was causing the program to capture and attempt to evaluate the full H T M L for the screen — thus resulting in the error. Cleared that piece up and now it’s working just swimmingly! Unfortunately, I can’t share the live/functional version with y’all here because I don’t have it hosted anywhere, but I’ve provided the code below so if you want to create your own files you should be able to get it loaded up in your browser at home! H T M L C S S Java Script In non-code/bootcamp-related territory, I finished ‘ Difficult Women’ by Roxane Gay on my commute today. Amazing. I’ve never read her fiction writing before, and I’ve got to say I love it as much as I love her non-fiction work. Meaning, I love it a lot. Song of the Day: ‘ I Found You’ by Alabama Shakes","['Web Development', 'Codingbootcamp', 'Code Newbie', 'Women Who Code', 'Lesbians Who Tech']",https://medium.com/@emilyldeans/calculator-complete-9a78ed596ae5,1,[],0,9,emily,F,0.9979317746535663,0.002068225346433675
Maddy King,Education x Tech,Dev Academy graduates win Tech Ruck awards – Enspiral Dev Academy – Medium,2017-07-17 02:09:43,medium,"Dev Academy graduates win Tech Ruck awards Sarah Dueweke presenting her team’s ideas at Tech Ruck Enspiral Dev Academy is an 18 week web development school based in Wellington and Auckland, New Zealand. Congratulations to Sarah Dueweke, Best Emerging Player of Tech Ruck 2017! We sat down with Sarah and asked her a few questions about her winning team’s experience. What is Tech Ruck? The Wellington Tech Ruck was a full-day event supported by N Z T E, British High Commission, Westpac New Zealand, Robert Walters and W R E D A, that tech organisations around Wellington were invited to participate in. Each organisation sent in a team (or teams) of no more than six people to spend the day coming up with their best ideas and pitches for new ways to enjoy sports using the latest technologies. Why did you sign up? I found out about it in my last week of Enspiral Dev Academy bootcamp, and signed up straight away. I thought it would be a great opportunity to meet other industry professionals, and just have fun with my team coming up with cool ideas to share. What were your thoughts going in? Most of the team thought we were heading into a hackathon, where we’d be coding all day. In fact, we didn’t do any coding at all! So that was a bit of a surprise. But mostly I was just looking forward to the opportunity to get more involved in Wellington’s tech community. The team in action. Images courtesy of W R E D A. What was the day like? It was pretty full on! Throughout the day we brainstormed ideas and came up with story boards to pitch to the judges. I volunteered to be the representative of the group who would do all of the pitching, so I spent a lot of time standing up and talking in front of the crowds. It was a little intimidating at first, being surrounded by people who have been doing this kind of work for years, but in the end it was a great experience. How did it feel to win? It was such a cool surprise! We were up against seasoned pros, and our whole team had only just finished Bootcamp the week before. So when they called our names for two of the three prizes, it was really exciting. We were all very proud. The group prize was called the “ Player of the Match” award, which was a trip to Melbourne and tickets to the Sports Analytics World Series conference on August 4th. The individual prize they gave me was called the “ Best Emerging Player”, which was an internship opportunity with Westpac. Where to next from here? As a team, most of us are now just getting out there to look for jobs as developers. Participating in the Tech Ruck was a great starting place for us to meet industry professionals and get our names out there. Apply now for Dev Academy and you could gain the skills to become a junior web developer in just 18 weeks! All levels of experience welcome — level up and design a creative, flexible, well paid life you love. Check out the Dev Academy website for more info.","['Tech', 'Women In Tech', 'Codingbootcamp', 'Sports Tech']",https://medium.com/enspiral-dev-academy/dev-academy-graduates-win-tech-ruck-awards-fedbb6b6eb82,0,[],0,6,maddy,F,1.0,0.0
Katherine Lane,,About Me – DigitalCrafts – Medium,2017-07-25 21:57:34,medium,"About Melove this image ❤“ Tell your story…” Medium’s data-default-value prints within the text box before I start typing. As I ponder my words, my anxiety rises and I think to myself, “ How inviting. ” Me? Oh, I’m just a girl, living in the city, learning to code. How’d I get here? Simple: I wanted a better life. After obtaining a Bachelors of Science in Psychology, I had no clue what I wanted from life, love, or a career. So for a while, I lived without any care for the future. I worked in the restaurant industry as a server, manager, and bartender…and I loved long walks on the beach (just kidding, I was landlocked) Tiny part of my Coffee Run code. 6 months ago I wouldn’t have believed I could read this, let alone write this. I wasn’t necessarily unhappy. But, I wasn’t exactly happy either. I wanted more. Wanted to learn something new and get out of the service industry. Don’t get me wrong, I wouldn’t take back one moment; those experiences made me who I am, laying blueprint to a life I could have never imagined. Although, if past me was reading this, she’d probably name about 50 moments I could have lived without, each time the also in, “ A L S O, that other time…” getting just a bit louder. You get the point. I hope. After meeting a cute comedian-boy with a beautiful soul, I said goodbye to little ol’ Tallahassee, Florida and said hello to the big city of Atlanta. I worked as a server, executive assistant, then a receptionist/office manager. I still wasn’t fulfilled at the end of the day. I saw where a life in general office management was heading, and I wanted out. Py Game! Kind of like Frogger. A few friends had suggested looking into coding. I’m thinking “yeah…sure. ” But, as the months went on, I began going to meet-ups. I wanted to see what this “coding thing” was all about. At the end of 2016, I had barely knew what Java was besides the coffee cup (which I also thought was the same as Java Script). However after a heap of meet-ups, web searches, and asking countless questions of my I T-employed friends, I learned a bit more about coding. And I liked it. In June of 2017, I began an epic journey. I started down a path notorious for its ups and downs, famous for its highs and lows, resigned myself to a future of frustrated tears and exalted laughter. I signed up for a Coding Bootcamp. Click me would produce 6 random numbers So far, I’ve created multiple web pages, a Powerball number generator, a Py Game, and a lot more. I don’t actually plan on anyone reading this but, as they say, ‘each journey starts with a single step’ and maybe this will help with my struggles over the next 3 months too. Or not. Are you still reading this? Good for you!! I was also persuaded as I couldn’t figure out these checkboxes in j Query and stumbled upon an article on medium that helped. So maybe, someone will stumble upon one of my posts after banging their head against their computer for 2 hours and I’ll be able to help them.","['Programming', 'Codingbootcamp', 'Coding', 'Atlanta', 'Women In Tech']",https://medium.com/digitalcrafts/readme-7e954853c17b,0,[],0,11,katherine,F,0.9971373970884047,0.0028626029115953475
Christopher Osborne,Special Operations Veteran turned full stack developer recruit! http://ChrisOsbor.ne,How I found myself in another boot-camp! (Part 2) – Christopher Osborne – Medium,2016-11-03 03:27:42,medium,"How I found myself in another boot-camp! ( Part 2) This is Part 2 of the blog post. If you’d like to catch up please feel free to read Part 1 here! I found myself in parts of the world I wouldn’t have imagined and had some great experiences along the way. The work life balance wasn’t bad either. I usually worked 60–90 days on and 60 days off. The hardest part was the constant traveling and not being able to find the perfect balance. During this time I had the opportunity to invest in a couple of startups which led me down a path of learning everything I could on business, startups, investing, and the technical side. Most people wouldn’t take that risk of investing in startups but I did and that same risk taking mentality has been with me since the beginning. Once I started needing more and more education on business I decided I should go back to school and learn as much as I could. Once in school I realized the slow pace really isn’t what I was looking for considering the high paced life I had been living since high school. I did two semesters and it felt like I really got no where during that year. Prior to the semester ended I wanted to find ways to get more involved in startups and the primary way is to have programming knowledge, design, or marketing would be the easier ways in which I would be interested in. At the same time I was also working on my own startup and found out really quickly how expensive it was to hire programmers for some of my own projects. I then made the decision I should look into learning to code so that I could benefit myself and potentially find my way into another startup to gain some real world experience. A friend of mine who has been heavily involved with a few different startups mentioned looking into coding boot-camps. He then showed me General Assembly( G A) which I then read through their programs and the Web Development Immersive course would be starting at the perfect time over the summer. I then signed up for a tour of the G A campus and have an introductory interview. I was given some minor homework with some small coding challenges to make sure I was committed to actually attending. I completed those fairly quickly and then was issued a interview time. Once I toured the campus and thought it would be a good fit I gave a confirmation to G A and they mentioned they would review the coding challenge I was given and see if they thought I could handle the course. About a week later I got an email stating I was accepted into the course. Less than a month later I was sitting at a table in a General Assembly classroom starting the next 13 weeks of intense programming education. Now I am sitting here and I have written four blog posts and working on my fifth as well as coded five or so projects that have been incorporated into my portfolio. There has been a lot of struggle at least in the Austin market with coding boot-camp grads and the amount of junior web development positions that are available. Not to mention the amount of boot-camps that have sprung up just in the Austin area is quite interesting. Some focus on different aspects of coding which does help us who graduate but knowing there is a long process to find a job is a bit intimidating. Those 13 weeks were some of the hardest but most fun weeks I have had in a while. It was something completely different than what I had been used to. I wasn’t running the risk of driving over an I E D, getting shot at, or risking my life over something completely stupid that makes absolutely no sense. I was starting my life over to be something I had never done before and wanting to have a new career and future. I will also say I was very lucky to have a smaller class of 10 other students/friends. From the get go we were all there to help each other out. There was never anyone who was trying to out do anyone else and be the spotlight ranger as we called it in the military. At any point if I was struggling during the course (which happened quite frequently) I could look over and see Christian (the guy making the gang signs in the pic), Bob (guy leaning over in the black shirt), or Colin (not pictured because he’s sleeping in class somewhere) and we’d all just give each other weird confused faces and laugh. This class was really intensive but by the end of it the entire group built ever lasting relationships. So far we are 2 months out of the course and we have 1 guy who had a job prior to course end, 3 other’s have jobs, and 1 doesn’t count since he’s back in college. So we’re sitting at about 50% and the rest should hopefully be gainfully employed soon. Class of W D I6 — A T X and Instructors at graduation! Sorry this took so long to finish up but I have been busy doing the fun thing of job hunting and sending massive amounts of applications into the black hole of these Austin tech companies. If you’d like to see what projects I have worked visit my portfolio.","['Web Development', 'Programming', 'Coding Bootcamps', 'General Assembly']",https://medium.com/@chaosborne/how-i-found-myself-in-another-boot-camp-part-2-943851ae9632,3,['General Assembly'],1,0,christopher,M,0.0046573532726988135,0.9953426467273012
Shaheedah,Techy. Writer at http://ezibota.com. Author of Solitude : http://createspace.com/4968579 #freedomPalestine,Why You Should Learn How To Code – Shaheedah – Medium,2018-05-08 10:08:05,medium,"Why You Should Learn How To Code1. Schedule Freedom As a developer, you would have the flexibility of setting your own schedule. There are so many freelance resources out there for one to setup a free (or paid on some sites) account and watch as people give you money to do what you like to do. 2. Earn More, But Work Fewer Hours There is nothing better than having financial freedom. If you can work freelance, you have more time for yourself while making a decent living. Most times, freelancers get to set their budget. Either hourly, daily, or monthly. 3. No Tedious Online Job Application Process (if you have the market) You can skip job applications because we all know the job hunt is an exhausting experience. If you use a freelance site, you would have had your portfolio set up, that way, people will hire you when your work impresses them. 4. You would get job offers Technology is the new world. People are looking for software developers, business analysts, tech researchers everyday. Opportunities are endless. The global community is in high demand of skilled tech enthusiasts. 5. Say “ No” to Job Offers ( If you wish) If you have found your own target market base, either from posting online or people around you, then you could have the choice of turning down job offers that do not work on your own terms. 6. Extra Time to Pursue Interests With your schedule flexibility, you can use the extra time to pursue other interests. 7. Can Work Remotely For a lot of people, the option to work from home is always very inviting. As a developer, you get the option of working remotely, from your living room, in your pyjamas. You get to wake up when you want and go to bed when you want. 8. Make Side Project Dreams into Reality If you have personal project ideas, it would be a good opportunity to actualise it with your comfortable income and flexibility. It would be a great opportunity to set aside time for personal development that could result in skills upgrade, more experience and execution of other ideas. 9. Be part of the tech community The tech community is a family. You will see us retweeting each other constantly. It is a great feeling being a part of a community that is committed to knowledge sharing and support. Stuck on some bug? Reach out to the community and you will have people responding, asking you to post your code so they can take a look for you. It’s a pretty cool secret club. 10. Self- Reliance and Empowerment Being a developer is very empowering. Building applications from scratch, giving life to pieces of code is the most gracious feeling. If you work as a freelancer, you would have to adapt and learn to solve your problems by yourself. It’s an empowering feeling knowing you are capable of building something out of nothing and also, empowers you through financial security. Some freelance websites for experienced developers:· www. freelancer. com· www. peopleperhour. com· www. elance. com· www. guru. com· www. upwork. com","['Freelancing', 'Coding', 'Women In Tech', 'Black Women In Tech', 'Codingbootcamp']",https://medium.com/@SwitSlim/why-you-should-learn-how-to-code-d19a14ec00c8,0,[],0,15,shaheedah,F,1.0,0.0
SwitchUp,"Discover the best learning path to your dream tech career. Course reviews, recommended career tracks, job search advice, and more at http://switchup.org.",Coding Bootcamp: A Guide to Help You Choose – SwitchUp – Medium,2018-05-21 17:47:41,medium,"Coding Bootcamp: A Guide to Help You Choose In this Coding Bootcamp Guide, you’ll find tips for choosing a program, scholarship lists, online rankings, and resources to start your search. At Switch Up, students commonly ask us: what do I look for when I am trying to choose a bootcamp? No matter the focus, the core components that make the best programs stand-out from the rest are consistent. To make things easier, we’ve compiled a list of the most important things to consider when comparing potential bootcamp programs. Goals First and foremost, have you had a chance to sit down with yourself and consider why you are beginning your bootcamp journey? It is important to begin by identifying what your goals are as you enter the research phase of your process. Do you want to: Learn a new skill? Expand your resume? Land a high-paying job? These are all very different reasons to invest in bootcamp programs. Some bootcamps are focused on job placement while others are targeted at university graduates looking to transition into more specific career tracks. Reading school summaries is an easy first step. Get a feel for the student body at different institutions and make sure their goals are aligned with yours. Attend an Info Session Don’t be afraid to go to the school and ask a ton of questions. Info sessions are a fantastic way to get real insight into the school’s passion, level of individualized attention and overall success. Many bootcamps have data to support their job placement rates and also work with hiring partners to ensure their students are learning the skills necessary for the workforce. Attending an info session can: Lead to connections with teachers, alumni and administrative staff Give you the answers you need before you begin your application process Clear up any discrepancies that might be unclear on the bootcamp website These sessions are both cost and risk-free. Plus, many schools offer them in an online format, so you can easily attend from anywhere! Attend one as a jumping off point. You have nothing to lose. Career Support and Mentorship Excellent career support is one of the best signs of a quality program. From one-on-one mentorship to job placement assistance, great schools are driven to help their grads succeed. Mentorship can actually make or break a bootcamp. By finding the right mentor, students can jumpstart new careers with the support they truly need to succeed. One-on-one mentorship and group-style mentorship are two different ways bootcamps provide these services. Ask yourself these questions when considering the career support of a program: Do they… Pair you with a mentor that best fits your needs as a student? Hold mock interviews to help you prepare for future professional experiences? Aid in the building of your portfolio? Provide office hours for questions and support? Guarantee a quality job after graduation? Note: We used the word quality when referring to job placement above. Transparency is key when looking at job placement statistics. Make sure you ask not only if students are being placed in jobs after graduation, but also typical job titles and graduate salaries. When comparing job outcomes statistics, be sure to ask your school for a third-party verified outcomes report. These reports will give you a detailed breakdown about how a school reports and publishes outcomes. All of these details are fair considerations when comparing programs. Find your perfect blend of career support and mentorship by digging around their website or reading coding bootcamp reviews. Curriculum In any field, a high-quality curriculum will balance structure and industry trends with enough flexibility to accommodate different learning styles and abilities. . A strong curriculum sets students up for success, and enables teachers to perform at a high level. So how does an industry that moves as fast as coding ensure a quality curriculum? We’ve seen a couple of ways. Take a look at the syllabus: It matters. The coding program syllabus reviews will give you insight into what you’re learning, the pacing of the program, and whether or not it covers everything you feel you will need to learn. Flexibility: Core skills are important for an institution to teach, but it is also imperative for them to operate with a flexible approach. Technology is constantly evolving. Is the curriculum keeping up? Computer Science Fundamentals: In an effort to provide students with a more thorough background, many bootcamps now teach computer science fundamentals in addition to languages and frameworks. You’ll want to consider if this approach is right for you. Programming Blockchain reviews: See if your desired school is starting to offer programs in blockchain technology, or similarly up-and-coming subjects that will help catapult you into the future. Schools that stay up with the times are more likely to help you succeed. Pricing and Payment One of the greatest advantages of attending bootcamp instead of a university is the significantly lower cost. Bootcamps have begun offering a slew of ways to fund their education programs. Upfront payment often offers a discount, while in-house financing can help students who need a longer period of time to pay. If you are intimidated by the thought of funding your dream, don’t worry too much. There are plenty of options. See more on how to deal with coding bootcamp cost. The cost of the bootcamp itself can also play a huge role in determining your perfect program. Bootcamps can have very low costs depending on their location, level of one-on-one support and a slew of other factors. Reviews For quality control, students have taken to using reviews and ratings from graduates to eliminate the less-than-satisfactory programs saturating the market. Detailed reviews take students beyond marketing materials or publicity, and provide valuable first-hand experience. On-the-ground perspectives are often a deciding factor when students are looking to change careers. It can help students understand the big picture, from the beginning of their research through to a career. The reviews on Switch Up include how programs helped students before, during and after their attendance. If you’re curious about pre-work, info sessions, career services or even the application process, start with this best coding bootcamp page for highly-rated programs.","['Programming', 'Codingbootcamp', 'Coding', 'Bootcamp']",https://medium.com/@switchup/coding-bootcamp-a-guide-to-help-you-choose-8dc1a78badd7,2,[],0,0,switchup,Unknown,Unknown,Unknown
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,The Challenges of CSS After Learning Nodejs – L.J. Yockey – Medium,2017-06-05 03:50:37,medium,"The Challenges of C S S After Learning Nodejs I’m about 3 months into my journey at Thinkful. Looking back, I’m amazed at how much I’ve learned! For starters, I would have never thought I would be writing a post with a title like this. Prior to Thinkful, I only had experience with basic frontend apps. Thanks to Thinkful, I’ve gained experience with technologies such as Node/ Express, Mongo D B/ Mongoose, S Q L/ Sequelize, Mocha, and Chai as well as Continuous Integration using Travis C I to push my apps to Heroku. It’s a lot of new information, but once I got over the worst of the learning curve, the process has been quite enjoyable! It helped that I had a lot of people helping and supporting me. As I mentioned last week, I’ve been working on my latest Capstone, Hospit Alert. I pushed my M V P to Heroku and am currently working on a separate branch to add styling and other final touches. After getting some feedback on my previous Capstone from my P M, Robert, I knew that I needed to spend more time on the styling to ensure that Hospit Alert had a clean, modern look. After working on the C S S for what felt like a long time, I hardly had anything done. My issue with C S S after learning backend was that I felt as though I didn’t have the “right-brain” type of thinking that would be required to make a good-looking app. The C S S assignments in Codecademy as well as the early assignments in Thinkful provided a picture of a design from which I could build my page. I was able to do this with little hesitation. However, when I’m required to build an entire app from scratch, I have a lot of difficulty coming up with design ideas. The same feelings of inadequacy that I felt growing up when I had to draw something for a school assignment started to resurface. It was obvious that I needed to reach out for help. I talked to my dear friend Elias, who referred me to the amazing Derek. Derek provided me with a different way of looking at C S S — a more systematic approach. He emphasized the importance of starting with good H T M L content and building from there. He also recommended that I build the C S S for mobile devices and work my way up from there. There was hope for me once again. When it was time to start coding again, I still felt a bit of a block. Frustrated, I went back to my client-side Java Script to factor in the adjustments I had made on my H T M L pages ( I’ve grown much more comfortable with Java Script after joining Thinkful). I talked to Elias again and he suggested some more refactoring for the H T M L. I talked to my mentor, Rachel, and she suggested even more refactoring. The process of building, tearing down, and rebuilding has been frustrating, but I’m very fortunate to have a mentor and friend who refuse to let me cut corners. Despite the overwhelming amount of support I got, I was still having difficulty with C S S. It was becoming increasingly clear that C S S was the weakest point in my skillset. Rachel told me something that provided me with some relief and clarity: that C S S is a beast and that many people have the misconception that it is easy. I overuse this G I F on Twitter because it is too perfect. Despite my ability to relate to this G I F, I’ve always viewed C S S as a quick, easy process. I rushed through the assignments due to my previous experience with C S S. I rushed through H T M L too, but Elias has given me a lot of pointers along the way to make my projects more accessible, which helped me improve a lot. Since I had no prior experience with backend technologies, I took my time with the assignments. The T L; D R version of this story is that C S S is rough after learning backend because I took more time to learn backend than I did with C S S. Thanks to the accountability that Thinkful provides, I am able to work on this now instead of discovering it while job-hunting. It is humbling to think that I need to approach C S S like I would a brand new language, but it’s going to make me a better developer if I tackle this now. Thanks for reading!","['Web Development', 'CSS', 'JavaScript', 'Coding', 'Codingbootcamp']",https://medium.com/@Ljyockey/why-going-back-to-css-is-rough-after-learning-backend-c09a72f965ec,0,[],0,3,l.j.,Unknown,Unknown,Unknown
Sean Manning,,Your guide to the obligatory Ruby on Rails bootcamp app that uses HTTParty to pull json data from a…,2017-05-06 16:00:38,medium,"Your guide to the obligatory Ruby on Rails bootcamp app that uses H T T Party to pull json data from a R E S Tful A P I and scraps the web with a rake task If you are teaching yourself Ruby on Rails or are considering enrolling in a coding boot camp, one suggestion would be to have a look at the projects and portfolios of people who have completed the courses and are themselves currently looking for jobs and make sure that you can understand all of their code . Open your Cloud9 I D E and create a ruby workspace. This comes with Rails and Ruby already installed. Add gem “httparty” to Gem File and run $ bundle install. We will use the H T T Party gem to pull json data from remote R E S Tful A P I. Let’s get started, by looking at www. pokeapi. co. There is no authentication required to access this public Pokemon data, but now would be a good time to read up on it. If we visit https://pokeapi. co/api/v2/pokemon/ we will see another hash: There are 811 Pokemon and 20 displayed per page. If we wanted to display all 811 pokemon in the browser we could pass '?limit=811' into the query string. If we wanted to display Pokemon #21–40 we could pass '?offset=20' into the query string. In our controller we can populate an instance variable@names with an array containing each Pokemon name: Or we can populate an instance variable @names_hash with a hash containing each Pokemon name as a key and the corresponding height as the value : Now we can create a route and a view file and take a sneak peak at what the data from the first 10 pokemon looks like: The data that we are pulling can more efficiently be downloaded it into a database instead of repeatedly pulling it from our controller. Now we can stop and think about how we want to create our seeding file. Assuming new Pokemon will be created in the future, we will periodically reseed our database and we will want to start where we left off. That means that we need to locate the id of the last Pokemon we created. However, when we first initially seed, calling Pokemon. last. id will return nil if there are no Pokemon yet created. Note, if we add validations to the Pokemon model, such as a maximum character length of the :name attribute:…only Pokemon that meet the validations would be created into our database when we run $ rake db:seed . We can use cron and the whenever gem to schedule $ rake db:seed to be rerun periodically. Start by adding gem ‘whenever’, :require => false to your Gemfile and run bundle install. Run $ wheneverize to create config/schedule. rb Run $ bundle exec whenever and our code in schedule. rb file will be translated into cron: Finally we run $ bundle exec whenever -i to update cron. You can list installed cron jobs with $ crontab -l If you visit https://pokemondb. net/pokedex/all you will see a list of every Pokemon and if you visit https://pokemondb. net/pokedex/bulbasaur you will see an image of bulbasaur. Let’s setup a web scraper to crawl this url and pull these images using the Mechanize gem, which itself uses the nokogiri gem internally to parse H T M L responses. Add gem ‘mechanize’ to your Gem File and run $ bundle install. First we will need to create a Photo model and table where we will store and organize these photos and add gem ‘carrierwave’, ‘0. 11. 2’ to your Gem File and run $ bundle install. Now for organization purposes let’s create a scraper folder under app. Mechanize:: Download is a pluggable_parser that downloads files in small pieces without loading it into memory first. If we open $ rails console and run the following code, we will have the url of the bulbasaur image returned. Now let’s create a rake task. namespace is to help us organize our rake tasks. We call this rake task from our command line as $ rake pokemon:scraper. Calling [:enviroment] gives us access to the models and methods in our app. We are passing each Pokemon’s name to Pokemon Scraper model’s get_image(name) method. That method then returns the image url (see above) to be passed to Photo model’s upload(url) method, which uses Carrierwave’s remote_ A T T R I B U T E_url method. We then update Photo’s pokemon_name attribute and Pokemon’s photo_id attribute. Run the rake task $ rake pokemon:scraper You now have the backbone of your standard Rails Boot Camp Json R E S Tful A P I app. If you search the internet, you will find plenty of examples of these types of apps.","['Rails', 'Ruby on Rails', 'Codingbootcamp']",https://medium.com/@sean_manning/your-guide-to-the-obligatory-ruby-on-rails-bootcamp-app-that-uses-httparty-to-pull-json-data-from-a-50ae7685d5ca,0,[],0,0,sean,M,0.007009713460080397,0.9929902865399196
DigitYser,"DigitYser is the digital flagship of Brussels where communities gather to learn, create and implement digital solutions focused on Data & AI , IOT and VR.",Ready for our first Data Science Job Fair of 2017 – DigitYser – Medium,2017-07-12 20:50:31,medium,"Ready for our first Data Science Job Fair of 2017 Introducing our Summer Coding Camp participants to organisations interested to sponsor their Data Science Bootcamp is key to Digit Yser’s mindset We are so excited to have been contacted by so many talented professionals interested to join our Summer Coding Camp! This is a clear sign on the awareness towards the importance of developing and promoting Data Science skills. This is a great prelude for the first Data Science Job Fair 2017 edition, where we bring in contact the participants of our Summer Coding Camp with organisations who are interested to sponsor their Data Science Bootcamp and to invite them to work for them. This is in line Digit Yser’s mindset, which is highly focused on bringing together different stakeholders around the activities we organise. A year ago, during each of our Data Science Job Fairs, an average of 20 companies ( Innovation and Training Partners) were able to meet 40 participants of our Summer Coding Camp and Data Science Bootcamp. This is a great opportunity which goes beyond a typical job fair, as the event’s format to both the training’s participants and the organisations to briefly present themselves to everyone, ensuring a clear visibility of their profiles and the added value they bring along. The event is open to everyone: feel free to book your place and join us on August 1st. It is free of charge for the Summer Coding Camp participants and for our partners. Don’t hesitate to contact Philippe (pvanimpe@gmail. com) if you want to know all the benefits of being a partner. If you want to join the Summer Coding Camp, you are still on time! Join our informative session on July 17th. or contact us asap via e-mail (training@di-academy. com). Keep an eye on the upcoming events on our Facebook page, and join us at our Data Science events at Digit Yser! We look forward to meeting you soon!","['Data Science', 'Codingbootcamp', 'Coding', 'Brussels', 'Jobs']",https://medium.com/@DigitYser/ready-for-our-first-data-science-job-fair-of-2017-21b86e923ca6,0,[],0,1,digityser,Unknown,Unknown,Unknown
Theodore Chuang,coding daily. day dreaming about the potential of distributed consensus.,First Coding Bootcamp Project — Week 3 – Theodore Chuang – Medium,2018-09-08 07:40:07,medium,"First Coding Bootcamp Project — Week 3 It is week three of coding full time and it has been the most fun I have had in a long while. We just finished our first project and it has been an exhilarating experience. Code enables us to imagine something and bring it into existence. There were many firsts for me that I would have never learnt only following tutorials and online courses. For anyone learning programming out there, start building right almost away. Even better teach what you have learnt. Teach > Build > Observe. The project objective was to build a terminal application that solves a problem in two days. In this timeframe we had to design, plan, develop, test, document and present a M V P. Oh and this was a paired project, so play nicely. (although anyone from the team would have been an honor, I was paired with Santosh who was great!). We brainstormed and decided a point of sales ( P O S) application would be a fantastic solution to codify our journey so far. Given the short time frame we did not want to build anything content heavy and instead focussed more on the technical elements like object-oriented programming, reclusion, and data structures. While the mentors and teammates were always there you lend a fresh pair of eyes, there was a lot to consider in such a short time frame. We slashed our initial story board in half after consulting with Garret, one of our experienced mentors. Paired programming was effective and efficient. We followed the driver-navigator approach in the early and final stages. The early stages was focussed on the overall architecture and design. So that in the middles stages we could individually work on preestablished modules. And in the final stages, we putted our brains together to worked the more complex functionality and glue the project together. Santosh and I came into this project with different strengths and working together helped us avoid getting blocked for too long at any stage. It also helped a lot with debugging as both of us would have already been familiar with each component. Overall I would recommend trying paired programming. Git and Github is amazing, pull and commit often. While I would not recommend Git Hub collaboration until one is already familiar with Git and Git Hub, it worked great for us because we kept in constant communication. We had our first ever Git conflict but because I decided ahead of time to work on different modules the conflicts were minor formatting and easy to resolve. The biggest challenge for us was navigating the unknowns. We had lots of features in mind by we were uncertain how long it would actually take to build them. For some of the more complex features we were even not sure how we would go about solving the problems. Fortunately there is already a framework to manage this type of problem: M V P prototype and agile development. Focussing on the end user helped us prioritized on the most important features to build first. Once we built out the core features we were able to extend the application with additional ones. Piece by piece the product came together. I see two main aspect of programming: people and code; ultimately we are building code for people. Check my project and the code at https://github. com/ Theodore Chuang/ruby-pos. There a lot of wrinkles to iron out, but feedback is welcome.","['Code Newbie', 'Career Change', 'Codingbootcamp', 'Programming']",https://medium.com/@theodorechuang/first-coding-bootcamp-project-week-3-49c200bb13,0,[],0,32,theodore,M,0.0037655264787273025,0.9962344735212727
Armando Amador,,Boot Camp Retrospective (part 1) – Armando Amador – Medium,2017-07-13 18:23:08,medium,"Boot Camp Retrospective (part 1) Following a passion had never really been in my plans. Growing up in Miami, the goal had been the same from when I entered high school: “ Graduate college, and get a job in the corresponding field”. After graduating with a degree in psychology, I started as a behavioral therapy technician, working with children who were diagnosed with autism spectrum disorder. Additionally, took on the responsibilities of a case manager at the agency. I found the work to be rewarding, as I enjoyed teaching others and learning new things, such as behavior pairing and reinforcement schedules. Helping others has been a fundamental part of my identity, and I found being a behavioral technician to be a really good fit for my values. The case management job, on the other hand, was through and through the operations of a business, bureaucracy was a main stay at my job. Insurance companies were difficult to deal with from time to time, and made calculated decisions that hurt families; I was disillusioned quickly. Alongside negotiating with insurance companies, I was asked to do simple repetitive tasks. I can’t stand that sort of tedium, so I looked for ways to take some of the manual labor out of my office job! I found resources to solve my simple problems from a source I never expected to be passionate about, or at the very least interested in: Programming! I found a great book called Automate the Boring Stuff by Albert Sweigart. It helped me write code to solve simple office tasks using Python. After increasing my productivity, I turned to another medium, video games! I transition to a package called Pygame and built a few projects here and there. At this point, I was hooked! After several months of dabbling with programming, I was told that my client’s insurance covering therapy would not be renewed by their insurance company. I was stunned, I had been working with them for almost a year at this point, and extremely upset at the time, since he had been making great progress under my tenure. It was frustrating to know that all of the progress my client had made may very well be undone within a few short months. It gave me time to reflect on my career path. After weeks of contemplating whether or not to take on another case, I ultimately chose to quit my jobs at the agency. Since I was so interested in programming, I considered going back to school to get a computer science degree. Shortly after researching this idea, I came across an intriguing alternative: Developer boot camps. I chose this path, as it allowed me to get fast, hands on, experience developing applications. I researched many developer boot camps in Miami, none offered me a chance to really delve into Python. Since Python was my first language, I was looking to explore packages that were difficult to get a good grasp with as a beginner. I decided to broaden the scope of my search, looking in places I had family. Originally being from Chicago I chose to look there first, I found many schools, but once again I found it difficult to find a program that offered Python. Just as I was about to start searching in another city: I found Coding Dojo! They offered Python and exposure to other technologies that really seemed to be in demand! I was so excited to check out the space and meet with instructors first hand, that I bought a plane ticket immediately! After meeting with the team, I was hooked, and ready to begin, signing up for March’s cohort!","['Programming', 'Codingbootcamp', 'Coding Dojo', 'Career Change']",https://medium.com/@armando.amador/boot-camp-retrospective-part-1-b383808d5bb5,4,['Coding Dojo'],1,0,armando,M,0.0050626974383026855,0.9949373025616973
Roberto Busó-García,,A Tech Blog is a Tech Blog is a Tech Blog – Roberto Busó-García – Medium,2018-08-15 01:42:46,medium,"A Tech Blog is a Tech Blog is a Tech Blog Roberto Blog. new(heading: intriguing, content: insightful) I hit return, already tasting the bubbly, seeing green where there was red, listening to the roar of a million silent claps in my Medium-infested dreams. And then: Argument Error: wrong number of arguments (given 0, expected 2) Crap. But hey: sounds about right. Story of my life as a tech blogger. Ay ay ay. Intriguing doesn’t mean anything in that context. Neither does insightful! I should know better. And I do. I’m in coding bootcamp (only four weeks in, but still). An error message will not deter me. I read the message, I decipher the message. In this specific case, I *agree* with the message. It expected two arguments and I provided zilch. Zero. Nada. Fine: I’ll try something else. But not writing the actual blog and passing the elements as arguments. No, of course not. I’m a programmer now. I will build something that will do that for me. So… google, google, stackoverflow, stackoverflow, hackersdonthave2beelonely…wait, what is hackersdonthave2beelonely??? Clear history. So, yeah, ok: Google, Stack Overflow, A P I Dock. Here we go. I think I found something. rails new Roberto Blog I hit return, the one keyboard shortcut I’ve managed to learn. Excuse me— what’s that? Oh. Return is not a keyboard shortcut for return. Yes, yes, I hear you. Well, it did get the job done. createcreate R E A D M E. mdcreate Rakefilecreate . ruby-versioncreate config. rucreate . gitignorecreate Gemfilerun git init from “. ” Initialized empty Git repository in / Users/flatironschool/ Development/ Roberto Blog/. git/create package. json Etcetera. Now we’re talking: there’s a lot of creating going on and I’m not really doing any of it. The magic of Rails. That’s right, I think to myself— is there any other way of thinking? out loud, I guess, to a thirsty crowd in a deserted road in mid July, but I digress— So, yes: that’s right, I think to my self, this blog will not write itself. I will use generators to generate a site that generates a blog. My blog. Genius. Is this a blog? Is this my blog? Not quite. Or at least, not quite yet. I was paying attention in lecture, I worked on them labs. This created the blog -ahem, I mean, project. It did a lot of work for me, but did not generate the blog post, just a world in which that blog post could be spawned, where it could grow and associate with models. No, no! Not that kind of models. I mean models, the M V C kind of models. Back to coding the blog post into existence. Because I will not -cannot- write this blog post, it seems. After weeks of seeing Post and posts and @posts I feel like I’ve had many too many …references… to what has proven to be a variable if not moveable feast: what am I now, in the scope of this context? What are my methods? Am I a class or an instance of that class? Have I inherited? Am I required or permitted? Is my presence validated? What about my uniqueness? If you pry me, do I not bleed? If you byebug me, do I not laugh? Enough of that: no space in a tech blog for that. Back to the job at hand. Now that I have the project where my blog exists, it is time to create an awesome post. Yes, the instructor said never to use generate scaffold but it looked so incredible in lecture. So — tempting. Surely that kind of Rails magic will write the post. Let’s do it. (don’t tell anyone)rails generate scaffold awesome_post Oh yes, I was paying attention for sure. I know that’s not all I need to do. This generator will do a lot of work for me — but not all of it. No, I must create a migration so that the magic is final. That’s to say, Rails may create the models and tables and make the associations, generate the routes and all that jazz. But it won’t run the migration for me. So I will. I migrate. Not this migration. This migration. Feeling good about this one. At the very least, I didn’t get any pesky error message. Empowered, emboldened I feel. So I decide to run the site and finally gaze upon my awesome post. I type in rails server (though if you want to be efficient like Eric says, you can type rails s) and wait for my masterpiece… We’re live! (in my laptop, at least) So far, so good. So…great. I knew there was a way I could hack this blog post into existence. And it will be awesome. After checking the temperature of the champagne bottle chilling in the fridge, I click “ New Awesome Post” to read my brilliant, insightful words written by Ruby…on Rails. new_awesome_post_path Oh, ok. Interesting. Fascinating, even. Clearly the site wants me to create the awesome post by clicking on that button. Of course, of course: this will be proof of authorship. They think of everything, don’t they? Let’s get this blog post done! -click- Why can’t life be more like the movies? Yes — yes! This is success. Status code? 201 baby! Awesome post created. But no, not this blog post. The awesome blog post is the one you don’t get to read. The blog post made up of zeros and ones (and no text) that shall forever live traversing the eternal restful routes of… Wait, what? The scaffold generator created a delete route? No, well, I… Hey, hey don’t do that, don’t type that — Oh no. . destroy Control- C","['Ruby on Rails', 'Coding', 'Codingbootcamp', 'Flatiron School']",https://medium.com/@robertobuso/a-tech-blog-is-a-tech-blog-is-a-tech-blog-d4a1339c25e6,0,[],0,36,roberto,M,0.007688553723193651,0.9923114462768063
Ajmal Jalal,Full stack web developer | MERN Stack |,What I learned at Lambda School? – Ajmal Jalal – Medium,2018-08-16 18:47:52,medium,"What I learned at Lambda School? Photo by Jefferson Santos on Unsplash Long story short, Lambda School made me a programmer. It is the story of a person with two masters’ degrees in law and experience working with several international organizations on the rule of law issues in developing countries. But that is not what I want to talk about here; I only mentioned them to let you know that I did not chose a coding bootcamp because I did not have a career. I chose to learn programming because of the passion and interest I had for it since I was in the high school. After I moved to the U. S from Afghanistan, I had to decide about my career path. Should I start a new career or I have to continue with my old profession? This question was tickling me all times. After I looked back at my past I realized that my old profession was not what I wanted at the beginning, I was, somehow, forced to choose it. Therefore, I decided to shift to something that I really liked and that was exactly when I started searching programing courses. I first went to a community college and registered for a two years associate program in web development. Then, I realized that college is not a good path for me because of its unnecessary general knowledge subjects I had to take. Besides, one of my friend was doing the same program in the same college and he spent one semester only learning H T M L. I did not want that to happen. I went back to the registrations’ office and asked for a refund. I had to find a useful and short path. Google is everyone’s friend when it comes to finding something quickly. I googled programming courses and the list of the results was all about bootcomps. Yes that is what I want, I told myself. I was happy and contacted some of them. Unluckily, they asked me to pay and pay a lot. Tuition for each of them was above $10, 000. As a new immigrant to the U. S, I did not have that amount of money to pay. I did not stop searching though, because I knew I would find something that is affordable. Have you ever googled something and then on your Facebook you see dozens of advertisements about the same thing you searched on google? It happens to me all the times and I hate it. After searching a lot through google for a programing course, bootcamp advertisement started popping up on my Facebook. I liked it this time because I wanted it. I came across Lambda School; I read about it and applied without wasting time. Lambda School promised me what I wanted without paying a dollar in advance. What I really liked the first time about Lambda School was three aspects of it. First: It will not ask me for tuition in advance. Second: I have to pay only after I have a job. Third: I will only pay if my salary is 50k or above a year. Wow! That is amazing, is it not? For an immigrant who is in the U. S. for only 3 months now, this was amazing. Ok, let us talk about what happened next or actually, what I learned at Lambda School? Starting a new field is not easy. It is hard as rock and scary as hell. However, when you have passion for it you will split that rock easily. I had no idea about computer science, algorithms, data structures and computational thinking. Now, after 6 months of hard working from 8am-5pm every day, I have solid understanding of all the topics I mentioned. If I split the role, I will give 50% to Lambda School and the rest to my own efforts. That is true about every school and program. You need to play more than 50% if you really want to grasp the concepts. A snapshot of the capstone project at Lambda School Lambda School is designed to go gradually, giving you one piece at a time. I started with basic H T M L, C S S, responsiveness and suddenly, I realized I have made a basic web page that is good looking and responsive. This first project gave me confidence, and that is how Lambda School is cultivating confidence in your abilities. When it was time to shift to the hard parts, the scary parts, at the beginning of this shift, I questioned Lambda School’s way of teaching. I thought H T M L and C S S was very easy but with Java Script, functional programing, O O P, and writing complex code, Lambda School is not doing very well. Later in the path, I realized that the way Lambda School is going, is the correct way and I have to be patient and learn how to go systematically. That is what everyone, new to a field, must do. You need to be patient, you need to trust your instructors because you are new and you do not know the struggle in the way. They know it better; they are programmers and made a solid foundation now. I realized that the solution to understanding hard parts is practicing ten times, doing all the cool projects that Lambda School was giving us, and asking questions. While learning a new thing you need to change the scary stories of the journey to fun ones. It is all about Programing not coding Every journey has its stories, the good stories and the scary ones. Changing the game and making the scary stories to fun ones is where you learn a lot. When it was time to shift to Python, a new language other than Java Script, I saw a shift to a scary part for me. Python was something very different and new. I had to cover many things in a very short time. This was a real struggle. I was just learning what programing is and knew a little bit of Java Script. The good thing was that Lambda School did not teach me how to code, it taught me how to program, how to think like a programmer, and how to solve problems. When I started Python I realized that I only have to take care of the syntax here, the rest is the same programing tactics. With shifting to Python Lambda School taught me about what a real programmer should do. This is true when we shifted to learning C. In C, I needed to write most of the built in methods that were already there in Java Script. Again, I knew that it is not a bout coding it is about programing. I was able to have basic ideas in C as well. Actually I was able to solve hard problems in C. Briefly, Lambda School taught me how to program and how to learn new technologies easily and how to change scary technologies to fun ones. When I was choosing between different bootcamps, among other good aspects of the program, one thing that grabbed my attention a lot was the computer science part of the Lambda School curriculum. We spent a good amount of time on learning the basics of computer science, algorithms and data structures. I was not able to find the same topics on other bootcamps’ curriculums. For someone completely new to programing, having some knowledge about computer science topics is necessary. Luckily, Lambda School had it all and I now have the basic knowledge upon which I can build gradually. Conclusion Leaving a career and starting a new one is a tough decision to make. However, if you do not enjoy the type of work you are doing currently, you will not succeed at all. I liked programing, I wanted to have that black screen and type some code that does not make sense to a common computer user. I wanted to make that calculator myself. Although it has a good income, I did not choose learning programing only for its income. That is the first factor you need to keep in mind when you decide to learn programing. If you do not like it, you will not won the battle of writing those scary lines of codes. The second factor is the type of program you choose. My own opinion is to select the one that does not ask for tuition ahead of time. Lambda School invests in student, which makes a very high level of trust. I knew they would do their part of the job to make me a programmer because they were investing time and money for it. The third factor is the curriculum of the program. After comparing many programs to each other, Lambda School was in the top of the list. It does not only teach web development, but it goes deeper in the computer science section, the algorithms, the data structures, and problem solving skills. Even though I do not have a computer science degree, I am confident about my understandings of computer science topics. All these three factors are necessary to keep in mind if you want to start a career as a programmer.","['Programming', 'Codingbootcamp', 'Career Change', 'Bootcamp', 'Coding']",https://medium.com/@ajmaljalal58/what-i-learned-at-lambda-school-bb4d0bce34db,6,[],0,31,ajmal,M,0.0,1.0
Codeworks,"The leading JavaScript bootcamp in Europe. We teach JS for the full stack in the heart of Barcelona. For more info, check out our website: www.codeworks.me",Finding a Developer Job That Fits – Code Words – Medium,2018-10-03 13:38:28,medium,"Finding a Developer Job That Fits What to expect in your first role after Codeworks If you’re worried about getting your first web developer job after Codeworks, stop. You have absolutely no need to worry. The job market for first-time developers is fruitful. What’s more important is choosing the ripe fruit. Not just the low hanging stuff. ( Okay you get it, we’re talking about the right job). We caught up with Codeworks graduate Hannah Redler. Here she gives us the lowdown on life after bootcamp and how she chose the right job at Glovo. So grab yourselves a coffee, have a read and weigh up Hannah’s ‘first-job criteria’ against your own. First things first. Glovo. Glovo plans to build its tech team by adding more than 100 engineers in the coming months — saying it wants to become what it calls “the most relevant technology hub in Southern Europe. ” Hannah, a self-professed ‘nerd’ has worked at the Barcelona-based delivery startup for almost 8 months. She’s watched Glovo grow to become one of Europe’s most successful on-demand startups. Hannah in the Glovo reception with her trusty bike. She cycles to work, just like the riders. Consider your commute in your first developer job. You might prefer the metro. © Codeworks Understood, but what is Glovo? Just like the phrase ‘ Netflix and chill, ’, this service is creeping into our everyday speech. The U K might nurse their hangovers and ‘just deliveroo it’. In the U S A they ‘ Insta-cart it. ’ In Barcelona, ‘ Let’s Glovo it’ is now shorthand for using a super speedy personalised delivery. Glovo riders will shop for and deliver almost anything on your behalf. You can order a volleyball or pharmacy cream ( Hannah has done both), through the app. Barcelona’s beach is dotted with the riders, their yellow cases blending in with tuck-tuck drivers and sunshine. It’s not just the beach where you’ll spot the drivers. Glovo has spread into Spain’s major cities and now has footholds in France, Costa Rica and Peru. Expansion continues. Having ratcheted up investment steadily in its early years, Glovo closed 2017 with a €30m Series B round led by Rakuten Capital and Cathay Innovation. Muhammad Sajjad on Barceloneta beach. As the sun sets, this is Glovo rider a serious mission. © Codeworks Hannah’s Story So Hannah, good to meet you here in Poblenou, in the heart of Barcelona’s startup scene. Where did your developer journey begin? Before Codeworks, I was working as a financial data analyst, using macro-economic factors on statistical models to forecast different things in the bank — mortgages and so on. I was a bit bored of finance more than anything else, it’s not very exciting or inspiring. It was bureaucratic to the max! What I did like was building stuff. I was using Python; I had to use it every day to analyse data and build models. I loved this coding part of my job. It’s quite fun when you’re being paid to learn! I’m a bit of a nerd and I do like learning new things. When I left that job in London, I knew I wanted to be a developer. I’d done an undergrad and a Masters, but I couldn’t face three more years of learning. I knew there were jobs in coding. But I didn’t know that bootcamp would set you up for one like it did. Hannah outside the Glovo office in Barcelona’s start-up district. © Codeworks How has it felt to go from Codeworks to office life ? Glovo was bit like bootcamp at first, going from one intense learning environment to another. You start Codeworks and you’re working really intensely on new frameworks and new programming languages. When I started at Glovo, again, I was learning a new framework, a new programming language ( Java), with new people. There was a new intensity, but this time I was getting paid for it. I was already used to learning by doing. It’s been a very fast paced period of my life and it just felt like the next good thing. How’s the cost of living in Barcelona? Things like rent are cheap. My lifestyle is just better. Coming from finance, I took a pay-cut but life is better. Cycling keeps my commute costs down. The thing I find, is I can have a really good time by not spending money here. I can go to the beach, buy a beer for a euro. I’ve had a really good day, been outside for half of it, and it’s cost me nothing. How long did it take to get a job after Codeworks? It took 2 weeks from finishing bootcamp to starting at Glovo. I came to bootcamp’s hiring day and there were 8 or so companies to meet, it was great. Some were really small, and needed their first developer, others were building a team. The weight of being the first developer was too big a responsibility for me, so I was less drawn to those small companies, but some people might prefer the challenge of these tiny startups. Hannah got a good feeling from Glovo during hiring day. © Codeworks Then there were some bigger ‘startups’ like Holaluz and Glovo. The first step was meeting a member tech team, to get a bit of a feel for the team during Hiring Day. The second step was when I went in for the interview when I realised I really wanted to work there. It was crazy, it all happened very quickly but naturally. Grass on the walls, soothes the mind. Spot the employee having a break on the sofa. © Codeworks Why is experience of working in pairs important to your first developer role? Pair Programming slows you down and you get new ideas. It’s easy to stay in your own bubble, but it really helps to work with someone who knows more than you. We’ve started to pair up more at Glovo to teach each other about our different work. Everyone’s working hard. People never take it out on people around them. How was the first week? In my last role, I felt like a tiny cog, like I made no contribution. But Glovo was different. On the second day, I did a ticket, made a pull request, and it got integrated into the codebase. You pull the code, make a change, ask people to review the change, and they approve it. You then work on bigger and bigger tickets. I liked that they had Vue and Java. Now I’m trying to learn a bit more back-end, I raised Java in my review as something I wanted to learn. Next I was being put on Java. It’s really fun now that I’m working on projects where I’m able to do a bit of everything ; I can see a problem in its entirety. Horns optional. Good vibes essential. © Codeworks What makes Glovo a good place to work? You get a real mix of nationalities, Spanish, English, French, Moroccan, Brazilian, Venezuelan, Indian, American, it makes it a really great to place to work. I didn’t use Spanish when I was first at bootcamp, as I was learning in English all day. The official language for most tech companies is English, but it’s natural for some to slip back in Spanish. After bootcamp, I was at the level to build it up, so I like that I can improve my Spanish at Glovo. One of the core values is Good Vibes. Or as they call it: ‘don’t be an arsehole’. They have a policy that if you’re hiring someone, even if they’re really good at what they do, only hire them if they have good vibes. It’s really ingrained and everyone’s really nice. So you see Good Vibes values in the day-to-day. That’s a very British word ‘nice’. But it does sound pretty nice! What’s an average day like? Sometimes I’ll be working on one project for a few weeks, building a whole new screen. And other times I’ll work on short term projects so I’ll whizz through bugs, like 10 tickets in a day. I like variety, I get bored quite easily. It’s quite nice to have lots of different stuff to do. I get in anytime before 10am, I generally work from about 10–7pm. People can work quite late — it’s a startup so there’s always work to do. We all have the freedom to manage our own workload, I have responsibility of my own tasks, but support if I need it. C E O and co-founder Oscar Pierre left. He’s not even 30 and his company is changing the world. © Codeworks What keeps you motivated? I really enjoy what I do. I’m learning every day. Problem-solving, finding the answer, making things happen! So, finally. This is your first developer job, but what’s next?. I’d like to learn some more backend and get proficient in Java. I want to have a bit more legitimacy as a developer and keep learning. Carrying on having fun, having a nice lifestyle! Question Your Future Employer Hannah’s first role fits, but your first develop job may not be perfect. Here are a few first job questions to help find the right fit: Does the role meet your original ambitions, frontend, backend or both? How’s the lifestyle, weather and commute? Will you improve your English or Spanish? Is this a product you’re passionate about? Would you use it yourself? What stack/framework will you be working with? What were your instincts from the first interview? What does an average day look like? How’s the office atmosphere? How much autonomy would you like? How will you keep learning? Now it’s your turn. What’s important? Add your own questions to the list! And finally, it’s 99% hard work, 1% luck. Hannah worked hard, but she was lucky with her first role. Finding the right role takes time. Ruthlessly return to your personal criteria. Try and get in touch with someone who works in your potential company via Linked In. Ask them if they have half an hour and could they answer a few questions on how their job meets your criteria? Don’t be scared, in most cases they’ll be flattered you asked! If they’re busy, you can ask H R to answer your questions in detail or check Glassdoor for reviews. Good luck!","['Programming', 'Startup', 'Web Development', 'Barcelona', 'Codingbootcamp']",https://medium.com/code-words/finding-a-developer-job-that-fits-f82776fc0b3e,2,[],0,102,codeworks,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 16 — #Goals – conshus – Medium,2017-04-03 12:08:45,medium,"Day 16 — # Goalsliner notes:- What a weekend. So on Saturday, we had some special guests stop by the radio station. Thirstin Howl I I I and Hakim Green of Channel Live dropped a lot of knowledge. You can listen to the whole show and watch the behind the scene video at http://k N Ow B E T T E R H I P H O P. com- S U N D A Y S U N D A Y S U N D A Y! It was a great day. I think I finally got a grasp on the Functional Programming. Fully completed the questions that were given to us to enforce the principles. Then I was able to start the weekend homework! With the things I learned and struggled through previously, I moved through the assignment relatively quickly. The errors that came up, I’ve seen them before and knocked them out. - Also, I met up with my classmates at Starbucks. I felt like a real coder. haha Meh. I don’t see why people like going to coffee shops to do coding. I think I may have caught the plague from a guy at the next table. haha It was good to work with everyone outside of class, but I think the library or a bookstore may be a better fit for me. - The weekend assignment was to create a Now Playing Movie List similar to what you would find at I M Db. For the time I had to work on it, I think it came out pretty cool. It lists the movies currently playing as well as will give you the biography and films of an actor if you click on their name. 7:15am I’ve been thinking about goals lately. More specifically goals for life after completing coding bootcamp. Still formulating and revising. What are some of your goals? Alright, back to the reading for the day. Write ya later. peace piece Dwane / conshushttp:// H I P H O Pand C O D E. com","['Coding', 'Coding Bootcamps', 'Hiphop']",https://medium.com/@conshus/day-16-goals-56c7bccc56fd,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Mary Sedarous,Marketing and PR at Code Chrysalis. Undergrad at UW-Madison and Master’s from University of Tokyo. I tweet about spies @MarySedJP on Twitter :),A research-based approach to coding education – Code Chrysalis – Medium,2018-05-11 06:59:48,medium,"A research-based approach to coding education One of the things we’ve seen lacking in the technical education space is an intentional focus on pedagogy and school design. It isn’t enough for us to ask “ What makes an effective software engineer?” We also need to ask: “ What makes an effective school?” and “ What makes an effective teacher?” As it turns out, being a good software engineer doesn’t necessarily make someone good at teaching it. In fact, it can actually make someone worse. According to the National Research Council in How People Learn, “expertise in a particular domain… can sometimes hurt teaching because many experts forget what is easy and what is difficult for students. ” Research shows that being a great teacher requires more than just content knowledge; it requires a fundamental understanding of pedagogy– the theory and practice of how to teach. Recently, our team used research by the world-renowned educational academic John Hattie to analyze how we could improve our school structure and teaching practices to better support student outcomes. Hattie is best known for undertaking the largest-ever analysis of quantitative education research data. He synthesized the data from over 800 research studies that synthesized other studies and produced a ranking of the factors that actually impact educational outcomes. Hattie ranked each factor by “effect sizes”. An effect size of 0. 4 means a year’s worth of progress for a year’s worth of effort. According to Hattie, everything with an effect size above 0. 4 is worthwhile, and anything below 0. 4 can be discarded. There are over 250 factors in Hattie’s most recent work. We’ve included a chart of some of the factors we find most interesting and relevant. The top factor, collective teacher efficacy (a teacher’s personal belief that they can influence a student’s achievement), can give students a boost over 3. 5 times higher than average with an effect size of 1. 5. Factors below 0. 4 (and thus, negligible) include things like the teacher’s subject matter knowledge or lack of sleep. Our team has a spreadsheet of many of these factors. For each factor, we’ve asked ourselves the following questions: What does this mean? How can we assess this? How are we doing this well? How can we do this better? As we ruminated on this research, we realized that there were a lot of things we were already doing exceptionally well. From day one, we have used deliberate practice and targeted feedback to push students towards mastery. They build their first full stack app by themselves from scratch in week six and practice those skills in repetition throughout the second half of the course. From day one, we have used conceptual change programs to help students shift their mindsets about learning. As Kani, our C E O, likes to say: “ We make you comfortable with being uncomfortable. ” We have also helped students develop their soft skills and critical analysis skills through technical discussions, student-led meetups, and improvisation techniques. Analyzing this research also made us realize there were some things we could put a heavier focus on. Below, we’ve included a list of changes we have made since our first cohort, and how it is related to Hattie’s research. A snapshot of what we changed. Response to intervention (1. 29) : We added ongoing formative assessments and created a scaffolded system of support for struggling students. Jigsaw method (1. 20): We changed our solution lectures from teacher-led to student-led after each activity. Collective teacher efficacy (1. 57): We implemented a research-backed teacher effectiveness rubric to improve both our collective abilities and confidence in our impact. Cognitive task analysis (1. 29): We shifted the focus of lectures from delivery of content to task decomposition strategies. Lack of sleep (-0. 05): We reduced the time of our classes from 6 days per week to 5 days per week. By using research as part of the design process for our school, we’ve been able to refine our school model and improve student learning outcomes at an accelerated rate. At Code Chrysalis, we’ve been intentional about creating a team of highly qualified software engineers A N D highly qualified educators. And we have also been intentional about using educational research to inform our teaching practices. We don’t just want to be the best school for software engineers. We want to be the best school. Code Chrysalis is a 12-week, full-time advanced coding bootcamp located in the heart of Tokyo. See why we are an industry leader in technical education in Japan. Follow us on Instagram | Facebook | Twitter | You Tube","['Education', 'Technology', 'Coding Bootcamp', 'John Hattie', 'Programming']",https://medium.com/code-chrysalis/a-research-based-approach-to-coding-education-9ff5729982c2,7,[],0,32,mary,F,0.9963367130940759,0.0036632869059240857
Charles Clemens,,Learning Journal — Day 3 – Charles Clemens – Medium,2018-09-14 04:01:53,medium,"Learning Journal — Day 3 Prompt“[ Adult learners] demand that their learning is relevant to their real life issues, problems, and tasks, and that their education will boost their performance levels and help them live their lives in a better, and more satisfying way. ” ( Links to an external site. ) Links to an external site. In other words, understanding your motivation for learning contributes to the effectiveness of your learning, and your learning journal is a place to explore those thoughts. What are your motivations for learning? For some reason it took a long time for me to determine what my primary motivation is. Is it the love of learning? Making money? Being accomplished? It happens to be all of these three, and possibly more. At the core, my primary motivation for learning is to apply knowledge in a way that makes my life better. Now that might seem a bit vague so let me provide some examples that are less obvious than the reason for my attendance at a coding bootcamp : I watched youtube videos on meal preparation so that I could learn how to save time on food preparation throughout the week. Over the years doing this has saved me hundreds of hours during the work week, has completely eliminated the stress of running late in the morning since I can just grab my fully prepared breakfast and lunch and then hit the road. I’ve also likely saved hundreds of dollars because I hardly ever eat out for lunch. I have spent money on classes in various martial arts so that I could learn how to defend myself without hurting myself. You’d be surprised how many people break their hands in a fight because they don’t know how to punch. I have read hundreds of tutorials and forums through years to fix a myriad of hardware and software issues that has plagued my wife. Happy wife, happy life. Sometimes this learning turns into financial gain, sometimes it doesn’t. As long as there is purpose and action involved, I’m okay either way.","['Coding', 'Codingbootcamp']",https://medium.com/@cclemensjr/learning-journal-day-3-eb00de9a315f,5,[],0,0,charles,M,0.005172083839041249,0.9948279161609588
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",Why You Should Enroll in a Coding Bootcamp – News on the Bloc – Medium,2017-07-06 03:06:46,medium,"Why You Should Enroll in a Coding Bootcamp Here at Bloc, we rely heavily on data and feedback to make our programs better and help you get the job you want. We’re constantly looking to hiring managers, industry professionals, and industry news to make sure our programs are aligned with expectations in the field. It seems like 2016 was the year coding bootcamps really took off, but are they still worth the price tag? Why should anyone enroll in a coding bootcamp? Reason 1: Automation in the workplace According to Forbes, the introduction of machines, A I, and new technology are threatening many jobs like telemarketers, appraisers, tax preparers, and cashiers. There is an increasing need for S T E M professionals as well as those in complex roles like social work or mental health services. S T E M professionals offer a level of logic and problem solving abilities past that of what a machine is capable. On N P R’s “ Will Your Job be Done by a Machine?”, they show that statistically, there’s only a 12. 8% chance a software developer role will be automated due to the skill and logic it takes to do well in this field. It is likely that some software development tasks can be automated, but the need is still there for a human. Reason 2: Employers hire bootcamp graduates Many people think that coding bootcamps don’t offer an education good enough to rival that of an accredited education. In a recent Indeed study, they found that “72% of employers think bootcamp grads are ‘just as prepared’ to be high performers as degree holders”. Given Bloc’s program is shorter in length, allows you to go part-time, and is a fraction of the cost of a degree, it’s a no brainer for those looking to keep in budget or wanting to change their career. In addition, surveyors found that “51% of surveyed companies said that hiring bootcamp grads is a good way to help job seekers from minority groups find work in the technology sector. ” This is important to Bloc and hiring managers, as we want to create a diverse group of people working in tech. Bloc also offers diversity scholarships to enable more people of minority groups to take our programs. Reason 3: Knowing how to code sets you apart The job market is saturated with people who may have the same background as you and 4-year education. Diversifying your skillset makes you stand out to potential employers. It’s beneficial to learn code even if your dream title isn’t developer. For those who are in marketing, are project managers, or are technical writers, development can be an unique skill that sets you apart from competition and allows you to do your job more effectively. Still unsure if a bootcamp is right for you? Sign up to watch one of our online information sessions and talk with one of our Student Advisors. We want to be sure Bloc is a good fit for you and your career goals!","['Career Track', 'Software Development', 'Web Development', 'Codingbootcamp']",https://medium.com/newsonthebloc/why-you-should-enroll-in-a-coding-bootcamp-5b855354df23,6,[],0,0,bloc,Unknown,Unknown,Unknown
Shadi Jam,"Obsessed with back end development, particularly .Net/C# && all things coding at The Iron Yard Houston.",Week One Almost Done – Shadi Jam – Medium,2016-11-08 04:29:37,medium,"Week One Almost Done It’s Thursday of week one. Turns out I wasn’t the only one having all those issues with the Github extension in Visual Studio. Lucky for us Matt taught us how to use Git Bash which is W A Y W A Y better. I’ve managed to complete the homework assignment from yesterday without having to stay up until 3:00 A M as well! At this point I’m kind of winging it with the homework and looking back at notes and previous assignments, not to mention 987346 google searches/hour to figure out how to create grids and columns in css, and yet I still feel as if I’m missing the underlying concept. I’m looking forward to the weekend though so I can go back and reread all the course material, review all my work and try to reinforce everything Matt has taught us this week. It’s so much information and yet when I think back to Sunday I can’t believe I know how to do all this stuff now. This course is incredible. I’m loving every minute of it. The days are flying by, the people (classmates, teachers, and staff) are so interesting and fun, and I guess my only regret is not doing this years ago!","['Education', 'Html Css', 'Coding', 'Codingbootcamp']",https://medium.com/@shadijam/week-one-almost-done-82bb17ee799f,0,['The Iron Yard'],1,0,shadi,M,0.2668845315904139,0.7331154684095861
Isaias Pomales,,My Experience at a Coding Bootcamp ...so far – Isaias Pomales – Medium,2018-06-03 17:03:18,medium,"My Experience at a Coding Bootcamp . . . so far At the beginning of this year, I got accepted into the Web Developer Fellowship program at Full Stack Academy. It began with a month long bootcamp prep course. During that time, I learned plain old Javascript and all its quirks. I had a lot of practice solving coding problems as well. I felt like my algorithm skills greatly improved just within that first month. Following the prep course was a three week self paced foundations course which covered topics such as closure and prototypical inheritance. There was also a project which put into practice everything that was learned up to that point. It is a game where you try to guess a number between 1 and 100. Here’s the link to play. Guessing Game Edit descriptionimpomales. github. io The last six weeks has been what is called the junior phase of the program. Here we covered the components of a modern day single page web application. We started with the backend and worked our way through the stack. I learned how to make a web server in Node. js using the Express framework. Postgres was the database management system of choice with Sequelize as the O R M. React was the front end library used for building user interfaces. Redux managed the state of the application. Putting all the pieces together we were able to build a web application entirely with javascript. Almost every day a new technology was introduced. It was a bit overwhelming at first. I was worried I was not going to have enough time to absorb everything. Since the topics introduced were being put into practice every day, I ended up feeling more confident in my understanding over time. Pair programming is a major component of the program. Every day we were randomly paired with someone to work on workshops. I really enjoyed this process. I felt like I learned best when I was teaching someone else. It really solidified my own understanding. Prior to this program, I was a bit of a lone wolf programmer. Working with someone else, gave me experience reading someone else’s code and verbalizing abstract concepts better. Currently, I’m at the end of a week long break. This Monday will be the beginning of senior phase. Here is where we apply all that we have learned to created cool projects. In preparation to senior phase I took a little dive into game development using Babylon. js framework. I’m planning on making a 3d web browser game as my personal project. I’m excited for what’s to come, but I am also a little nervous. I think that is a good thing. That feeling of discomfort is just a sign that there is more opportunity for growth.","['JavaScript', 'Full Stack', 'Codingbootcamp']",https://medium.com/@impomales/my-experience-at-a-coding-bootcamp-so-far-6cd61becdf60,1,[],0,0,isaias,M,0.0,1.0
DevMountain,DevMountain is an industry-leading tech bootcamp teaching code & design. Our community loves sharing our craft & empowering the next wave of makers. #devmtn,Bootcamp vs Self Taught – The DevMountain Blog – Medium,2017-01-03 21:07:14,medium,"Bootcamp vs Self Taught Learning to code, as you probably know, has a lot of benefits. You can open many doors to careers that allow you the flexibility, challenge, and compensation that you want. Likely, you already know why you should learn to code–let’s talk about how to take the next step. You may know people who are “self taught, ” people with an affinity and zeal for technology that compels them to learn the ins and outs on their own. There are resources ad infinitum to help beginners get started. While teaching yourself may seem like a promising option, those who go down this road often either struggle to stay motivated, or take a considerably longer time mastering their skill than their peers who chose to pursue a more structured path. At Dev Mountain, we’ve created a program that will help you achieve the success you want more quickly and efficiently. Here’s what our program can offer you that self-teaching just doesn’t. 1. Direction The world of coding is a big and often confusing place. Learning on your own can be discouraging when you’re unable to find what you need, unsure of where to start or where to go next. As the adage goes, you don’t know what you don’t know. Attending a bootcamp like Dev Mountain provides you with the direction and guidance that you need to stay on track and get the most out of the time you invest in your education. 2. Support Diving into something new can be intimidating, and it’s not uncommon for those that are self taught to become disillusioned, frustrated, or discouraged with slow progress towards their goals. Bootcamps provide a supportive environment where other students with similar goals will be learning alongside you. Leading your class will be a professional coder who has years of experience and success. Mentors, exceptional past students interested in helping, also support and are invested in you and your success. 3. A Robust Resume For many of our employers that have hired graduates (many of them repeatedly), our stamp of approval means something to your future job. Going through a bootcamp like Dev Mountain opens doors and helps you to get noticed in the workforce by providing you with evidence of experience that is backed up by a reliable source. Your employer may not get the same peace of mind if they don’t know what kind of experience you’ve had on your own. Along with this, participating in our program will provide you with plenty of opportunities to work alone and as part of a team, to make connections with professionals as well as blossoming programmers and entrepreneurs, and to produce impressive finished products that you can show to prospective employers. You’ll leave with a fleshed out resume along with a long list of references and contacts that will help you build your career. Are you ready to take the next step towards a career you’ll love? Visit us and get to know our team, they can’t wait to meet you and start turning your dreams into a reality! We’ve made our programs accessible by expanding to four locations in Utah and Texas, providing part-time and full-time course options, and providing free housing for full time students. Request a syllabus today to see what you can expect from our program, and to start planning your coding education.","['Programming', 'Coding', 'Coding Bootcamps', 'General Assembly']",https://medium.com/devmountain/bootcamp-vs-self-taught-499869f391b1,2,['DevMountain'],1,1,devmountain,Unknown,Unknown,Unknown
Timika Downes,"Mom of three, lover of learning, intermittent creator!",Mother’s Day: Coding Boot Camp Day 1 – Timika Downes – Medium,2018-05-14 14:15:31,medium,"Mother’s Day: Coding Boot Camp Day 1 Coding and Relaxing — Photo by J. Wennington Four weeks ago I began a new journey. I entered into the world of computer programming, beginning with the pre-work phase of a coding boot camp. At any given time feelings of excitement, motivation and even apprehension popped through my brain like hot popcorn kernels. What will I learn? How will my before-self be different than my after-self? Can I do this ( I am a “tech dud”, not a “tech nerd”)? I found comfort in the mental process of accepting the challenge. From past experience, I knew the importance of moving through the Rolodex of feelings, acknowledging and accepting each one. Eventually, though, I would need to jump in and take action in order to quiet the inner dialogue. My growth mindset is, ironically, pretty fixed- I knew I could find success no matter how difficult. So, I jumped in! The pre-work phased passed with lightening speed. I know this because I took a moment on the morning of the live boot camp to actually stop my racing mind, and look back over the 4 weeks. I searched all the way back to day one of the online pre- work, and I could see myself logged in and smiling. “ Wow, I’ve learned so much so far”…and yet I can sense that I’ve only touched the surface tension of this huge sea of coding knowledge. There was and is so much more to dive into. So, on Mother’s Day 2018, I gave 8 hours to coding. Eight hours to a cohort of brave learners. Eight hours to an instructor that obviously loves coding (and gaming, and teaching, and science). Eight hours to a fun T A who’s been to Coachella and is eager to help us succeed over the next three months. On this Mother’s Day, I began to learn my computer — to really, truly learn it. And while I wasn’t with my kids and husband for much of the day, I know that our lost time was not for nothing. Because what I learn, they learn. Everyday I reach for my goal to teach them everything I know. This Mother’s Day began the gift of coding, a gift to me as well as a gift to them.","['Codingbootcamp', 'Growth Mindset', 'Tech', 'Mothers Day']",https://medium.com/@timikadownes/https-medium-com-timikadownes-mothers-day-coding-boot-camp-5d37803b7c99,1,[],0,12,timika,F,1.0,0.0
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Hack Reactor Becomes Even Better with Acquisition by Galvanize,2018-08-02 13:01:01,medium,"Hack Reactor Becomes Even Better with Acquisition by Galvanize For the last five years Hack Reactor has created the highest quality Coding Bootcamp program, with industry-leading outcomes in Software Engineering, an exceptional student experience, a strong alumni footprint and consistent employer recognition. We’re thrilled to bring things to the next level by joining the Galvanize community and its commitment to creating an ecosystem for technology learners, entrepreneurs, startups and established companies. As a prospective Hack Reactor student, this means not only are you still on a path to Hack Reactor’s exceptional Software Engineering curriculum and program, but you’re also on a path to even more opportunity. For starters, you’ll be part of an alumni community that’s now almost doubled in size and a larger and more diverse network of employers. And, when you graduate Hack Reactor, you’ll receive six months of free membership at Galvanize, which includes access to a cross-campus access to coworking spaces, virtual and on-campus mentorship sessions, and, members-only networking events, workshops and the Google for Entrepreneurs network, among others. Hack Reactor will be moving into select Galvanize campuses as early as September. Galvanize has beautiful workspaces in the most tech-relevant neighborhoods. While these benefits are available to all future Hack Reactor grads, those who attend an on-campus program in San Francisco, Austin or New York will also experience Hack Reactor on location at Galvanize. You’ll be among the first Hack Reactor students studying in a workspace full of creators, innovators and passionate learners. Students will rub elbows with potential employers like Zillow, Slack, Nordstrom and Mozilla (these are all member companies with suites on campus at Galvanize) and showing off skills alongside startups and established tech companies starting on Day 1 of Hack Reactor. In short, your opportunity for learning, networking and making it big in the tech industry just got a lot bigger. Apply now to be in this space by September. Will there be any changes to the Hack Reactor program? There are no planned changes to the Hack Reactor Program curriculum as a result of this acquisition. Both Hack Reactor and Galvanize strive to maintain the most industry-relevant curriculum and intend to continue making regular program improvements to match the demand of employers in our markets. The Hack Reactor programs in Austin, San Francisco, and New York will eventually be moved to the Galvanize campuses where Hack Reactor students can learn in Galvanize’s beautiful space, with superior facility and unique networking opportunities available there. More information regarding timing is below! What is the benefit of the Galvanize community? Uniting Hack Reactor and Galvanize communities makes our program even more exciting for prospective students than ever before. As a student and member of our community, you will benefit from: an expanded alumni community to learn, grow and collaborate with; an even larger employer network with more opportunities to find a fulfilling role after graduation; access to all 10 campuses in the Galvanize network ( Denver (2), Boulder, Austin, Phoenix, New York, Seattle, San Francisco, Los Angeles and online); access to community events, members-only networking opportunities, virtual and on-campus mentorship sessions, the Google For Entrepreneurs network, and chances to learn from member companies and entrepreneurs; a beautiful, well-equipped, and inspiring place to learn and grow. To learn more about the future of Hack Reactor and what it means as a prospective student, check out our original post. Interested in becoming a student at Hack Reactor? Learn more about Hack Reactor’s full-time and part-time programs. We’re online in S F, Austin, N Y C, and L A. Originally published at www. hackreactor. com.","['Coding', 'Acquisition', 'Galvanize', 'Hack Reactor', 'Codingbootcamp']",https://medium.com/@hackreactor/hack-reactor-becomes-even-better-with-acquisition-by-galvanize-1eb86e4d396c,0,"['Hack Reactor', 'Galvanize']",2,35,hack,Unknown,Unknown,Unknown
Theodore Chuang,coding daily. day dreaming about the potential of distributed consensus.,How I ended up at a coding bootcamp – Theodore Chuang – Medium,2018-08-27 13:39:40,medium,"How I ended up at a coding bootcamp Fast Track Program First Attempt — Honeymoon It is my second day of Coder Academy’s Fast Track program and here I am reflecting on how did I end up here. It all started in the summer of 2016 when I had an entire weekend free to myself. At this point I had been a real estate appraiser for 5 years and was wondering where to take my career next. I thought about what aspects of work I enjoyed and wondered if programming might be a good fit for me. Space => Clarity. The early days of learning to code were a bit overwhelming but mostly exciting. There were so many resources online that I jumped around several learning platforms. When I was not practising, I procrastinated by reading blogs ( What’s the best… programming language, framework, laptop, editor, etc. ). Programming exercises were fun and I felt I was learning. But learning a bit of Java Script syntax was different from learning to think like a programmer and solving problem. I soon felt like I hit a wall in my progress. My enthusiasm withered away over the next few months. I let life get in the way and soon I was back the daily grind. Second Attempt — First Anniversary I have been coding on and off for a year now but was not making much progress. For many personal reasons I decided it was time to experience living in another city. In April 2017 I landed in Sydney, Australia. I was hoping a new environment would be what I needed to jump start my career change. For the first months, I had plenty of time to code while I was job hunting. I needed a structured learning plan and decided to focus on a few Udemy courses. Being able to immerse myself in my learning was just what I needed to get over the wall that I felt when I was only working through tutorials in my spare time. Outside of the course work, I also started to listen to developer podcasts and attended tech Meetups on a weekly basis. Focusing on code was great for learning but my bank account was drying up. After a few months I started working full time back in real estate. Occasionally I worked through more Udemy courses on evenings but my progress slowed down to a crawl. I acknowledged that following along with the tutorials exposed me only to a surface level understanding of the programming world. It provided the vocabulary of the craft but lacked the deliberate practice to build the required critical thinking skills. Everyone saids to start building projects (and I would agree) but it was hard to get motivated. I did not create the time for the deep work required. Procrastinating with coding videos was an easy to feel falsely productive. After working for 11 months, my employment contract was expiring soon and I had an offer to renew it. Before deciding, it was time to reflect on my lack of programming progress again. I had been internally debating about attending coding school from day 1 years ago but it always seemed expensive. In hindsight the time I have spent trying to teach myself over the last two years with minimal progress has also been expensive . Ultimately the part time self taught path was not working for me. Third Attempt- Formal Coding Program Despite the ups and downs of my journey so far, I was still set on becoming a developer. My recent interests in decentralized consensus technology was a big part of my motivation. I was still debating on whether a coding program would be the best overall path moving forward. There were multiple programs that I was considering both online and in-person. The main criteria I was juggling was time, money, and success rate. Once I decided to go all-in on success rate, an in-person coding program became the obvious choice for me. Fortunately my partner has been supporting me along my entire journey and we discussed the practical logistics of committing to a 6 month program. After a bit of planning, I decided in just a few days and here I am. The two year internal debate is over, time to code!","['Programming', 'Codingbootcamp', 'Career Change', 'Code Newbie']",https://medium.com/@theodorechuang/how-i-ended-up-at-a-coding-bootcamp-d60a5fdf120,1,[],0,51,theodore,M,0.0037655264787273025,0.9962344735212727
Kelvin Mai,,Lessons From Finishing a Coding Bootcamp – DigitalCrafts – Medium,2018-03-23 17:24:56,medium,"Lessons From Finishing a Coding Bootcamp In November of last year, I started an immersive coding bootcamp at Digital Crafts. It’s amazing how 16 weeks just flew by, just last week was Digital Crafts Demo Day! I was among one of the graduating alumni that showcased projects at the event. And if you weren’t able to make it out don’t worry, I put together a small demo reel of some of my projects. Now that it’s over I feel as though I can shed some light on a few things. And some of you may be familiar with my first Medium article floating around, this can be viewed as somewhat of a sequel to it. The Learning Doesn’t Stop There is a few misconceptions from people considering an accelerated learning program such as a coding bootcamp. The most glaring one is that you will gain mastery after finishing and be done with learning. This is simply not the case, especially in a field that moves as fast as Software Development. The program isn’t designed to teach you anything and everything there is to know about programming, instead it’s built to expose you to many different technologies. Because of the varied exposure, many of us come out as a jack of all trades and when the imposter syndrome sets in we realize we can’t call ourselves a master of any specific skillset. However going through 4 months at a blistering speed of learning we have mastered one skill and that is the art of learning. In the beginning it was difficult to code for more than an hour, and now there is an insatiable hunger to learn and work on our craft without noticing the time drift by. The good news is that it’s really open ended, you can dive deeper into any subject that interests you. This was shown in the last few weeks leading up to Demo Day as some of my classmates worked on a final project centered around their passion. One fell into the world of machine learning and artificial intelligence and another just went deep into mobile and native development. For me personally, I like to explore technologies so my portfolio is filled with varying languages and frameworks. It shows that the skills developed here is transferrable and you aren’t limited to just the Web. It’s Not Just About The Code Many incoming bootcamp students are looking for a career change, so the job search takes center stage at various points in the journey. Because the attention to the hunt, we have all learned a great deal about professional writing, emails and resumes. Much more than you would initially thought at a school focused on programming. But it was a necessary skillset to pick up. Another aspect is just learning from each other as a class. Unlike college the bootcamp has people coming from all different backgrounds with a singular common goal. As such it was interesting to be introduced to artists, pet owners and chefs culminating all in one place. Because of these varying backgrounds we were able to enrich each other’s lives with aspects outside of code. In addition it should come to no surprise, in an environment focused on learning and improvement, that it turns out many developers and aspiring developers are very much into self improvement. Discussions of philosophy, entrepreneurship and fitness arose quite frequently. There were even talks of starting a book club within Digital Crafts, however it was quickly squashed to try and keep up with the curriculum. Just The Beginning I know that finishing Digital Crafts isn’t the end. My job hunt just began and being a developer means being a student for life. But for incoming students I wanted to dispel some myths about the coding bootcamp. It’s not all roses, and nothing is given to you. You still need to put in the time to work, but you’ll come out willing to learn and push yourself everyday. And during the struggles throughout the course, your peers will be there to keep you motivated as well as provide some exterior skills that you can apply to your life.","['Codingbootcamp', 'Web Development', 'Programming', 'Self Improvement', 'Software Development']",https://medium.com/digitalcrafts/lessons-from-finishing-a-coding-bootcamp-1bb60fe0c7a0,3,[],0,99,kelvin,M,0.006099028970387609,0.9939009710296124
Startup Southerner,"On a mission to include, inform and empower the Entrepreneurial South • #StartupYall • subscribe to our newsletter for updates • http://eepurl.com/bGZbaf •","Southern Startup Report: Iron Yard shuts down, The Chesterfield fires up",2017-07-31 12:43:32,medium,"Southern Startup Report: Iron Yard shuts down, The Chesterfield fires up By Alec Cole, Look Far Startup Southerner is proud to present the Startup Southern Report in partnership with Look Far, a New Orleans software development studiocommitted to supporting and accelerating technological innovation in the greater Southeast. The Southern Startup Report is a twice-monthly, curated newsletter covering the latest startup happenings in the American Southeast. Subscribe here if you like what you’re reading. Southern Startup News | July 14 — July 28: Greenville, S C — Coding school Iron Yard shuts down — One of the largest coding schools in the Southeast is closing its doors. The Iron Yard was a behemoth — boasting locations in 15 cities in states including Texas, North Carolina, South Carolina, Florida, Tennessee, and Georgia. Iron Yard wasn’t the only code school to shut down recently; Dev Bootcamp, a respected, 5-year-old operation headquartered in San Francisco, announced their own closure on July 12. These high-profile shutterings have provoked a new wave of conversation ( H N’s thread is particularly on-point) on the viability of the code camp model. Both Iron Yard and Dev Bootcamp cited profit shortfalls as the driving factor behind their closures. Not exactly shocking, but one thing to keep in mind is that the two programs were both acquired by aggressively for-profit academic organizations, with Kaplan Inc buying Bootcamp and Apollo Group purchasing Iron Yard. While I think that reports of the industry’s demise are greatly premature ( Iron Hack is a code school, and they’re in this week’s funding section), there’s an argument to be made that we’re seeing an inflection point in the code camp boom. I’d be interested to know how y’all feel about this, especially given how important these camps can be to talent-starved Southern ecosystems. New Orleans, L A — Advano accepted into Y Combinator — Nolatech just got its first Y Combinator company! Nanoparticle startup Advano has been high on the list of local standouts for some time now. They last made news in March of this year, when they picked up $500 K for a new round. Now, they’re bound for the world’s most prestigious accelerator. Y C occupies a place somewhere between “admired” and “deified” in startup land, and it’s amazing to see a New Orleans crew bound for Silicon Valley. It’s also worth noting that Advano is part of a group of promising companies clustered around the New Orleans Bio Innovation Center, a community that has already seen numerous funding rounds in 2017. Not only that, but it’s based on tech developed at Tulane University, something that Advano shares in common with funded ventures Axosim, Fluence Analytics, Tympanogen, and other members of the N O B I C cluster. I say it time and time again: watch these companies closely. Local efforts to commercialize academic research have taken huge bounds in recent years, and they continue to reap the rewards. Durham, N C — Chesterfield life sciences innovation center nears completion — Speaking of life sciences centers — Durham is about to get one of their own. The Chesterfield is a massive, 100, 000 square-foot institute built from (ironically enough) a former cigarette factory. Sponsored by Duke University, the Chesterfield will play host to labs from the school, the Eastern headquarters of Californian cloud giant Nutanix, and also Bio Labs N C, a coworking space catering to life sciences entrepreneurs. Given the existing strength of Triangle-area pharma and biotech, I’d be surprised if they had any difficulty finding residents. The Chesterfield also represents one of the academic/private partnerships that often drive the development of new hubs in Southern cities. Atlanta, G A — Techstars Atlanta introduces class of 2017 — The ten companies of Techstars Atlanta’s 2017 cohort have been unveiled. While most are sourced from Georgia and the greater Southeast ( T N, N C), , we’re also seeing a couple of international inclusions in Nigeria’s Farmcrowdy and Latvian startup The Monetizr. Techstars is among the most mature accelerators active in the Southeast, and I’m glad to see companies from Tennessee and North Carolina take advantage of it. It’s a different mix than 2016’s class, which drew from only Georgia among the Southeastern states. Hopefully we can get a Louisiana company into the mix for 2018. Orlando, F L — acccesso acquires T E2 for $80 M — Aaand let’s wrap up with an acquisition. accesso is a Florida ticketing service that’s been around for some time. They’ve bought a few companies over the years — most recently U K startup Ingresso- but their new purchase of San Diego-based T E2 represents a major new step. First, $80 M’s a lot of money. It’s accesso’s largest purchase to date. Second, they’re clearly expanding offerings. Unlike Ingresso, which also specialized in ticketing, T E2 creates software around what it calls ‘experience management’ — giving marketers to power to curate their audience’s activities, and analyze the effectiveness of real-world campaigns. It’s interesting to see accesso looking at this adjacent vertical; we’ll see if the trend continues. Recent Rounds: Atlanta, G A — Double Net — $4 M Seed Duluth, G A — Sebacia — $20 M Series D Miami, F L — Ironhack — $3 M Orlando, F L — Genicon — $6. 6 M Raleigh, N C — Filter Easy — $6. 9 M Series B Upcoming Events: July 31 — New Orleans, L A — Startup Bus August 4 — Baton Rouge, L A — Assembly Required: Innovators in Food August 8–9— Nashville, T N— Nashville Analytics Summit August 12 — Jacksonville, F L — S Q L Saturday Jackson Look Far Updates: On the Blog — How to H T T P S All the Things in Node — Probably the best guide ever to making sure that you keep your Node server H T T P S-friendly, all courtesy of our friendly local front-end developer Geoff Gauchet. The tech advice is actionable, the jokes are not. But they’re still excellent.","['Startup', 'Startupyall', 'Codingbootcamp', 'Techstars', 'Life Sciences']",https://medium.com/@StartupSoutherner/southern-startup-report-iron-yard-shuts-down-the-chesterfield-fires-up-31fed754c1c6,1,"['The Iron Yard', 'Dev Bootcamp', 'Ironhack']",3,1,startup,Unknown,Unknown,Unknown
Lian Thompson,"Software Engineer based in SF. Make yourself at home, there's La Croix in the fridge.",GraphQL: First Impressions + Forming an Opinion on Frontend vs Backend,2018-08-20 19:49:24,medium,"Graph Q L: First Impressions + Forming an Opinion on Frontend vs Backend As I began my journey into web development, “ Do you prefer frontend or backend?” quickly became one of the more challenging nontechnical questions for me to answer. Even developers who had little more experience than me seemed to have a strong opinion — why didn’t I? This issue was solved for me when I learned about Graph Q L, a querying language for A P I’s. “ Graph Q L is a new A P I standard that provides a more efficient, powerful and flexible alternative to R E S T. At its core, Graph Q L enables declarative data fetching where a client can specify exactly what data it needs from an A P I. Instead of multiple endpoints that return fixed data structures, a Graph Q L server only exposes a single endpoint and responds with precisely the data a client asked for. ” — howtographql. com In other words, instead of making multiple requests like you do with R E S T A P I’s, you can create your own A P I schema’s to look exactly how you want and thus, be able to retrieve the exact information you want with a single query. I know. Last week I did two separate client and server tutorials to build a Hackernews clone using Graph Q L. I started with the server side, using Graph Q L + Node and instantly appreciated the reduced number of A P I calls I was making. All the struggles I had with R E S T calls during my technical program seemed far more simple and manageable with this new (to me) technology! Next I moved on to the client side, which took me half the time to complete than the server tutorial did. I’m sure that’s partly because the server tutorial I just took made the subject matter less foreign, but also because as it turns out, I really like working on frontend! When I finished Graph Q L + Apollo client tutorial I was S O pleased. It was very apparent that a lot of my joy I get from coding is attached to seeing and interacting with a “finished product”. For me, accomplishing the backend tutorial just didn’t produce the same satisfaction. What I learned is that Graph Q L is incredibly powerful and probably going to take over R E S Tful A P I’s. Part of what makes Graph Q L so powerful is that it’s completely customizable and can be used with any language, database and framework, in any place a client is interacting with an A P I. If you’re curious to know more, the tutorials I took are from howtographql. com. They’re really great with different learning styles — they use quizzes, videos, and they cover information very thoroughly.","['GraphQL', 'Diversity In Tech', 'Codingbootcamp', 'Women In Tech', 'Coding']",https://medium.com/@lianthompson/graphql-apollo-first-impressions-forming-an-opinion-on-frontend-vs-backend-55a16b092172,0,[],0,4,lian,M,0.4003915810083211,0.5996084189916789
Drew Campbell,Unity Developer | Game Developer | VR | Blogger | Pixel Art Enthusiast | Lover of the Planet and all things Tech,Programming Fundamentals: Functions – Drew Campbell – Medium,2017-07-27 19:55:08,medium,"Programming Fundamentals: Functions In the previous post we looked at repetition, the process of telling a computer to repeatedly execute a set of instructions based on some condition. In this article, we will delve into functions, what they are, how we use them, and how best to design functions in our programs. Yet again, before we delve into functions, there are some things we need to know first. Mostly we need to look at statements and compound statements. In most programming languages, the smallest element we can use to create a program is known as a statement, which up until now we have been calling an instruction. We have already looked at several different statements: if-statements, while-statements, and for-statements, but other statements exist such as assignment statement, assigning values to our variables, and expression statements, which is a statement that produces a value, for instance 5 + 5 * 2. Often it takes more than a single statement to get something done, and that’s where compound statements, also known as blocks, come into play. If-statements, while-statements, and for-statements are all examples of compound statements. That is, they comprise of more than a single statement. In most programming languages, we define a block of code using a set of curly braces, so an if statement would look like the following: If(condition){ // statements in here} The above example shows an if statement, and curly braces with all instructions within the curly braces being the ones that are executed if the condition evaluates to true. There are two main benefits for using code blocks. They allow us to define scope, something I won’t be touching on in this article, and that as you have already seen, they allow us to group a set of statements. One thing we can’t do with our compound statements is use it multiple times throughout our program, which finally brings us nicely onto functions. Functions A function is like a named compound statement which can be referenced by its name throughout our code, and thus used multiple times. However, unlike a compound statement, our functions have additionally properties. They can accept and return data in the form of variables or data structures. A function needs a name so we can identify it, like a variable does so we can access the memory location our data resides in, a function name is an identifier to the address were our group of statements are stored. As a function can accept and return data, we also must define this when creating our function. A name, return type and list of accepted data forms the signature of a function. Below is an example of a function:int Add Numbers(int a, int b){int c = a + b;return c;} In the example shown we have created a function called Add Numbers which accepts two variables, also called parameters, called a and b, defined within a set of parentheses, and we have our return type defined as an int, placed before the name of the function. The idea behind this function is that it accepts two integer numbers, and then we add these two numbers together within the function and return the result. There are no restrictions on the type of data our function returns, it can be a primitive type, or user-defined. Additionally, we can pass in any number of variables of any type, in which they don’t have to be of the same time, we also don’t have to pass in any variables at all. In most languages, we are also allowed to return nothing, which is typically done by specifying the return type as void. void Print Hello(){ Print( Hello);} For us to use the functions we create we must call them within the parts of our program in which we want to use them. Calling the function, is done by using the name followed by a set of parenthesis, following on from the example above we would call the function Add Numbers in the following way: Add Numbers(5, 3). The values we passed in are stored in the variables a and b respectively and are then added together, return the variable c which will equal 8. In the example just given though we are calling the function but we are not doing anything with the value returned. To make use of the return value c we need to store that data somewhere, like in a variable. To call the function and store the value would look like the following: Int d = Add Numbers(5, 3) Functions can be called from anywhere in our program, that is we can all them within loops, if statements, or even within other functions. Functions essentially point to a block of instructions that we want to execute so when we call a function you can think that we are just adding that block of instructions into our program at that point. As you can start to see functions are a powerful concept. They allow us to reuse a set of statements as many times as we want in our program reducing the amount of instructions we need to write. They also allow us to better organise our program, making it easier to maintain, well that is if we design them properly. Designing Functions When deciding whether to write a function there are a few things worth considering. The first step is to decide whether the instructions you want to put into a function are going to be used more than once, if not then you might not have to put them in one. Secondly you must decide on the return type. Do you think your function should return anything, and if so, then what? Then finally we need to figure out what parameters if anything we need to pass into the function. The specifics are all dependent on the problem you are trying to solve, or the program you are trying to write. If we wanted to do any mathematical operations such as adding or subtracting numbers then we can assume that we would want to pass in the numbers we want to add together either as variables or as a data structure. We would also probably want to use the result of the function, and therefore should return it. If we wanted to output something to the screen and wanted to write that into a function we would mostly likely have a parameter of the thing we want to print: a number, or word, but we would most likely not want to return anything as we simply want to output to the screen. I think the most important thing to think of when designing functions is to remember that a function should only do one thing. If we want to write a program that adds two numbers together and then prints them out we can see that the there are two things we want to do, add numbers, and print them, and that these tasks are separate from one another, and therefore should end up in two separate functions. If we were write them into a single function, we would never be able to reuse our code as effectively as possible. We wouldn’t be able to add two numbers together without printing them, nor could we print a number without first adding it to another. On a final note to allow functions to help us organise and improve the readability of our programs it is essential that our functions are given a meaningful name, this stems to our variables as well. We need to know what is being stored in a variable, or what a function we call does, and this is best coming across in the names we select for them. Conclusion In this article, we have learnt about functions. A function is a grouping of statements that can be referenced by name, that can accept and return data. Using the name of a function we can call it multiple times in different parts of our program. This results in cleaner, more organised programs, that avoid us having to write duplicate code when wanting to perform a similar task, in which only the data has changed. After reading this article, and assuming you have been reading the rest of the series, you should have a good understanding of the major concepts that most languages are built around. In the final article in this series, we will look at combining all the concepts we have learn about so far, by introducing algorithms.","['Programming', 'Coding', 'Software Engineering', 'Software Development', 'Codingbootcamp']",https://medium.com/@dr3wc/programming-fundamentals-functions-c4833ac126b,1,[],0,0,drew,M,0.0864588857780683,0.9135411142219317
Le Wagon Montréal,Coding school for creative people & entrepreneurs 🦄 🖥 9-week Full-Stack program to learn to code. 🚀 http://lewagon.com/montreal,Learning & building: Following your passion as a young developer,2018-09-05 16:41:35,medium,"Learning & building: Following your passion as a young developer Victor Korelsky took Le Wagon’s Full Stack program in Paris ( Batch #30). An entrepreneur, developer and computer science student at Mc Gill, Victor is also a roving instructor and coach for Le Wagon in Montreal. Seeking a life path, from Paris to Montreal In summer 2014, Victor was 17 years old and had just received his high school baccalaureate in France. With his diploma in hand, he decided to head to Russia to learn Russian. At the time, a friend suggested they launch a startup to offer personalized and online academic support to students. This is where his adventure with Teech began. A love of challenges led him to climb Mont Blanc, where he reflected on where his life should head next. This experience pushed him to follow his passions and push his boundaries. Victor, at the summit of Mont- Blanc“ It was the hardest thing I’ve ever done in my life. What I took away from the experience is that, if you really want to do something, you’ll find a way to do it. ” In spring 2015, he enrolled at Montreal’s prestigious Mc Gill University in political science, economics and computer science. That’s when he realized he was missing a key skill to become independent and more agile in his academic and entrepreneurial goals: knowing how to code. Le Wagon: a bootcamp to jumpstart your web programming skills His quest for coding knowledge led him to Le Wagon’s Full Stack program, which he took in Paris in summer 2016 ( Batch #30). After two months of intensive learning and after coding an application in 10 days, he returned to Montreal to pursue his bachelor’s in computer science at Mc Gill and had the chance to continue learning and growing in the Le Wagon community. Happy Papy - Le Wagon Paris - Batch #30 Life's never been so easy!www. lewagon. com What did he learn from Le Wagon?“ Le Wagon gave me solid experience in web programming. The bootcamp offers nearly 400 hours of coding in 9 weeks, versus 150 hours for a university semester, ” answers Victor. He continues, “ I feel like I’ve known how to code for a while. Now, I can do my homework in half the time compared to a first-year student who hasn’t been coding for long. ” The biggest difference he sees is in terms of his employability. “ My university program and the bootcamp have very different concentrations. Through my university studies, I learn about things like computer science and software engineering, while Le Wagon primarily teaches you web development. ”“ Le Wagon’s program gives you more than just technical knowledge. It educates you about how to build a product and become an entrepreneur. ” Victor, pitching at a Demo Day Experience as a startup C T O Victor is pursuing entrepreneurship and continues to work with Teech. After raising $700, 000, the startup is growing and forming its organizational structure. While keeping up with his studies, Victor serves as the company’s C T O and oversees its marketing. In summer 2017, he joined the team when it was based in London, U K, at the King’s 20 Accelerator while also working as an assistant instructor at Le Wagon London. Teech dream team standup“ I realized the importance of the C T O role in a startup. I spent a lot of time managing devs who worked together but who didn’t collaborate. ” Teech saw strong growth with 20, 000 app downloads, including 40% to 50% during the university exam period. Sharing his passion as a Le Wagon alum and instructor Victor has been part of the launch of Le Wagon in Montreal, which is home to the bootcamp’s first chapter in North America. He joined the team starting with its first session in February 2017. While still in university, he continues to share the same passion through a program that helped him do what he loves both in Montreal and around the world. Victor going over some code with Aaron, Le Wagon student batch #168“ With Le Wagon, I have the chance to travel and work with a really active international community. I’ve been to London and Tokyo and I’ve had the same ‘ Le Wagon’ experience. The ‘work hard, play hard’ atmosphere is pretty much the same everywhere. ” What is Victor’s advice for aspiring coders and entrepreneurs?“ Say yes to new challenges and then figure out on the fly how to get it done rather than say no because you’re afraid to fail. ” What are 3 reasons you’re happy you joined Le Wagon? Le Wagon helped me through the frustrating periods every beginning coder goes through. You can take courses on Codeacademy. com, read books and follow tutorials, but there’s a gap between learning the theory and building a real product or app. It can take time to bridge that gap at first, because you don’t know what you should learn or how all the different technologies work together. Learning everything is often a long and frustrating process. Le Wagon is like a “cheat code”: you come out of it with all the tools to be productive and to understand and use complex technologies. I met a lot of interesting people at Le Wagon who have had different journeys. Le Wagon also lets me travel to teach in different countries where they also hold the bootcamp. It’s a big advantage to have a close-knit community, and the majority of instructors and assistants have also gone through the program at one point. The last reason is because you get lifetime access to the platform with the courses and exercises. This is really useful if you want to review a subject or learn a new technology. The curriculum is always in sync with the world of web development. You can always learn new things and stay up to date. What are 3 tips you would give students to help them get the most out of their bootcamp experience? Watch the course videos before each day. This helps you focus on the important points. Don’t be afraid of feeling completely in over your head. That’s part of the learning process. You have to be comfortable getting lost in the code so that you can eventually figure it out and make steady progress. Don’t copy and paste code you find online. Try to understand what you’re coding. Take the time to read the documentation and use a pen and paper before switching to a keyboard. Do you want to know more about Le Wagon Montréal’s program? Download our Syllabus or Book a call with us! 😁 Coding Bootcamp in Montréal - Le Wagon Working as a junior developer for Stripe, Algolia, Molotov, Save, Compass, 55, Save, etc. . We will help you find your…www. lewagon. com","['Startup', 'Codingbootcamp', 'Web Development', 'Entrepreneurship', 'Learning To Code']",https://medium.com/le-wagon/learning-building-following-your-passion-as-a-young-developer-db6357d3bba0,1,[],0,11,le,F,0.5308343409915357,0.46916565900846435
Aanyu Deborah O,,WHY I CODE – Aanyu Deborah O – Medium,2018-09-11 13:05:05,medium,"W H Y I C O D E Growing up, i was taught that man does not just grow up to merely exist or survive; there has to be some kind of purpose as to why God put us on this earth. When i come to think about it, i ask myself, why would God go through the trouble of giving us the brains or the talents that we have and then just leave us to breathe and die. There has to be something; a purpose maybe? I can comfortably say that i was able to find my passions, amidst my many talents. Sure, i love to draw, and sing and write, but there has not been anything that has been as remotely fascinating to me, as the world of technology. I will confess, it started off as an excitement for gadgets; computers, phones, play stations, circuit boards and the like. Soon enough, my mind wouldn’t just let me be; i had to know how to create something of my own; my own video game, my own software, my own mobile phone…. I’ve heard the saying that goes, “if you do not like the book, then write your own”, and write my own book i will. I am also socially aware; i like to know what is going on around me, my community, my country, and the world in general. I think you will agree with me when i say that the state of our country is not one to reckon with. We have seen brave young individuals come up and try to rebuke this unjust political system, and what are they rewarded with, if not death? It is saddening to know that the citizens of my country do not have a say in anything; the wool has been pulled over our eyes, our hands are tied have been tied with ropes and our ears stuffed with more political propaganda. The government continues to lie, kill, steal, and make empty promises, but what i know for sure, is that there’s always a solution. Young and talented, what can a young programmer, like me, do to try to make this situation better for us? Should i just sit back with cheek in hand and wallow in self pity? I believe i can do so much more than party and ignore our country’s strife. I do believe, that this is, if not my purpose, one of my major purposes in life; to make this country a better place to be. Through my empowerment in programming and technology in general, i know that i will use my knowledge or programing and code to be a much more useful resource to our nation. i am also coming to the realization that hacking is something that i really want to do. if it means penetrating the systems of the corrupt organizations that are supposed to be serving the country’s citizens (but are not), then i am happy to do it. Who said i wasn’t patriotic? Aanyu Deborah Oduman.","['Life', 'Codingbootcamp', 'Programming', 'Technology', 'Patriotism']",https://medium.com/@aanyudeboraho/why-i-code-2d9fb3b73753,1,[],0,0,aanyu,Unknown,Unknown,Unknown
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Crossing Off a ‘To-Do’ – Emily Deans – Medium,2017-08-11 00:01:34,medium,"Crossing Off a ‘ To- Do’ Today, I successfully finished creating a fully-functionally — albeit, humbly-designed — ‘to-do’ list utilizing a full stack approach incorporating the ‘mustache’ template engine with H T M L, C S S, Java Script in my routes, index, and seeder files, and an S Q L database on the back-end using Postgre S Q L. The routes (“ Controller”) use Sequelize configuration and ‘promises’ — J S objects that represent the output of a contained operation and return the resulting value — to move information between the user interface (“ View”) and the database (“ Model”) and enable the user to add, delete, edit, and mark items as ‘complete’. The Sequelize addition to this week’s stack has been a bit confusing for me, so I’m feeling pretty excited about getting this app up and functioning the way I want it! Here are the routes I used to get there: Tomorrow, we’re starting the new weekly project, which has us creating what appears to be a sort of ‘ Twitter’ knock-off/social-networking app called ‘ Gabble’. The project involves establishing users — via a login — who can create messages (up to 140 characters of text) and ‘like’ the posts of other users. This is definitely the heftiest and most ambitious project to date and it’s going to require us pulling in a number of resources, including: Sequelize Passport Java Script C S S H T M L Mustache Body-parser Express Express-session Node-validator, Bash script Postgre S Q L S Q L Hoping to have a little fun with this one… Have a good night! Song of the Day: “ Gone Insane” by Lucius","['JavaScript', 'Women Who Code', 'Code Newbie', 'Codingbootcamp', 'Lesbians Who Tech']",https://medium.com/@emilyldeans/crossing-off-a-to-do-f6c9495d83ed,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
E,,Codesmith Weeks 1–2: – E – Medium,2018-10-08 02:12:00,medium,"Codesmith Weeks 1–2: The first two weeks of Codesmith moved pretty quickly, speeding from Java Script fundamentals, data structures/ O O P and algorithms from week one into front end ( H T M L/ C S S), J S O N and even React in week two. It has been a whirlwind of a blur, where you look back and can’t believe that only 14 days passed by. Material Each 2 days of Codesmith are split into modules, where a new topic is introduced and you get your feet wet with simple exercises, then come back for more lecture and finally work on more difficult, in-depth challenges with a pair programming partner. The first couple of days were extremely manageable for me. I expected to be lost and bewildered from Day 1, but we were eased into the material with basic J S challenges similar to what we did in our C S X prep work. However, towards the end of Week 1, we were introduced to O O P Data Structures, for which I had zero exposure in the past. I had never heard of binary search trees, linked lists or hash tables, yet I had to rewrite their prototype methods, figure out how to resolve collisions in hash tables and search through binary search trees on the spot with my partner! That was probably the most challenging unit for me thus far — but once we poked around online and got a grasp of what they were and took a step back, I realized that the concepts underlying them are absurdly simple. For example, the nodes in linked lists are made up of two things: a value and a next: pointer. They’re actually quite basic, and they point to each other, hence the name “linked list. ” It wasn’t until the next week that I saw how these concepts played out in basic H T M L: you can traverse through the entire H T M L body like a linked list! That was when I began to connect the dots and appreciate the layout of the course material. Week 2 eased up a bit as we moved into front-end D O M manipulation using J S and React. It’s a bit surreal to think that I now have already created a mini React app (game) nearly from scratch without the help of a step-by-step tutorial. We also had a mini hackathon where my partner and I created a chrome extension that served as a Reader Mode button with a read aloud functionality where you could fiddle with the language, text, voice and volume the text was spoken aloud in. We used recursion to traverse the page’s nodes and pick up what we deemed to be relevant text and redisplay and read it aloud to the user in their set preferences. Given that we were able to do this under 6 hours with no prior experience making extensions, I was quite pleased with our final result, which had a rather sleek U I. :) All in all, I’m very much enjoying my time in Codesmith and look forward to what we will be learning next. Tidbits on N Y C life I love being able to explore the city during my breaks. Manhattan has an unparalleled level of convenience where I can buy lunch, pick up packages and ship returns, run errands, check out the local artist’s market and do some shopping (browsing lol) at Supreme, U G G, Uniqlo, Victoria Secret, etc. all during a single lunch break. ( Disclaimer: I didn’t actually go inside Supreme, I just oggle in wonder at the queue every time I walk by. ) It boggles my mind, and I’m fairly certain my calves are now thicker than ever. However… I do think L A has better food 😜. Man oh man I really wanted to get to Codesmith v Other Bootcamps and my impression thereof, but I’ll save that for next week!","['Programming', 'Codesmith', 'Coding', 'Codingbootcamp', 'Data Structures']",https://medium.com/@eternally/codesmith-weeks-1-2-322fd5b1bdea,0,['Codesmith'],1,60,e,Unknown,Unknown,Unknown
Kelli Givens,,Fear of Flying – Kelli Givens – Medium,2018-08-23 10:51:34,medium,"Fear of Flying Confessions of the W O R S T Coding Mentee E V E R Imposter Syndrome sufferers often can’t see the forest for the trees / Photo by David Kovalenko on Unsplash Officially, I started the Firehose Project Full- Stack Web Development Program on 16 July 2018. I actually began two weeks later. Or you could say I’m 30 years behind! The average age of a coding boot camp student is 29 (and the average age of a first-time mother is under 30 so even my first child if I had one would be an ‘older’ coder). Be that as it is, despite a slow, sometimes no, internet connection ( I live on a farm in a little village in South Africa) and Vagrant* software absolutely refusing to play fair, I’m finally up and jogging with Codeanywhere. I’m writing my first blog, which means I got through Week 1’s Splurty lessons! This blog is a completion of Lesson 1 of Assignment 1. That said (and done) one F P Task stares me in the face each day — Remaining Mentor Sessions: 21 (all of them!) Yes, it is true. I have yet to have a 1-on-1 Mentor Session despite valiant efforts of encouragement by my experienced advisor (you know who you are) and other concerned Firehose Project Team Members. Sorry, guys, I’m being an idiot wasting this incredible resource. Truth is I have a fear of flying into the unfamiliar universe of the coding environment. What if I don’t get it? What if I can’t learn it? What if ______________? You name it . . . But why? The Intro to Software Engineering pre-course went well (great really) so the fear is not about an actual lack of skill. It was thereafter, when enough people were impressed that I was undertaking this venture ‘at this age, ’ that I began to worry — “ What if I choke?” Albert Einstein wondered the same thing:“ The exaggerated esteem in which my lifework is held makes me very ill at ease. I feel compelled to think of myself as an involuntary swindler. ” Seems frustratingly self-defeating, right? It is. Believe it or not there’s a name for it — Imposter Syndrome — commonly understood as a false and sometimes crippling belief that one’s successes are the product of luck or fraud rather than skill. As if it was a fluke that I pulled off 50+ years of success in academics, sport, business and philanthropy. Yup, it had to have been pure luck! I was just in the right place at the right time for sure. And now? My fear is that this flight into the world of coding will unmask the real me and prove that I’ve been a fraud all along. Yikes! So how do I ground the negative effects of Imposter Syndrome that are keeping me from flying? Well, writing this blog is a start. It’s better to be open and share these thoughts. Perhaps others may feel like imposters too and share their experiences in the comments below. Photo Credit: errantscience. com What else? Mindfulness. Like the Marianne Williamson quote:“ Our deepest fear is not that we are inadequate. Our deepest fear is that we are powerful beyond measure. It is our light, not our darkness that most frightens us. We ask ourselves, Who am I to be brilliant, gorgeous, talented, fabulous? Actually, who are you not to be?” O K, right. I mean nice, but practically? It’s normal not to know everything ( I have never coded before). I’ll find out more as I progress through the course. Self-doubt is a normal reaction. There may be (many) times when I feel out of my depth. This too shall pass. Failure is part of the normal learning experience. Use it constructively. I will make mistakes. That’s normal. ‘ Catch’ the correct things too. Most importantly, make weekly contact with my mentor a normal practice by taking responsibility for cultivating the experience of mentorship. This will give me a good reality check and help me think things through. This can’t happen without taking risks including sharing my hopes, fears, ideas and goals openly. Starting now. * N O T E: I get the cleverly chosen name Vagrant (a portable virtual software development environment) as a migratory reference but literarily it means “moving or behaving unpredictably; inconstant. ” Just saying!","['Life', 'Codingbootcamp', 'Imposter Syndrome', 'Firehose Project', 'Mentorship']",https://medium.com/@kelligivens/https-medium-com-kelligivens-fear-of-flying-2c9e66d3a198,0,[],0,4,kelli,F,0.995998666222074,0.0040013337779259755
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",How Are React JS & Flux JS Related? – Hack Reactor – Medium,2018-09-11 15:03:44,medium,"How Are React J S & Flux J S Related? If you’ve been exploring the world of Java Script, you’ve likely encountered the terms “ React” and “ Flux”. But how are React and Flux related? We’ve got all the basic information you need to begin grasping these concepts. Understanding React Let’s start at the beginning. The year is 2012, and Facebook’s newsfeed has just gotten a makeover. A software designer at the company just launched React J S, a Java Script library for creating user interfaces ( U I). By 2013, React is open-sourced and available to the public. By itself, React J S is only concerned with user interfaces (like the View in the M V C/ Model- View- Controller architecture). It functions by cutting a page into components, which are like pieces of a puzzle that you can separate and work on individually. Using these components, React provides a straightforward technique for building successful web front-ends or layouts. Writing with React means you’re able to simply specify how you want a component to appear in web interactions. How does Flux fit into the picture? Flux J S is the architecture that Facebook uses when working with React J S. To draw a comparison to the M V C structure, Flux is like the M ( Model) stage. It complements React’s component-based design using a unidirectional data flow and allows users to create Java Script data layers. Flux applications are composed of 3 main parts. These parts substantiate Flux’s unidirectional flow: Action: An action taken by a user that is sent to the dispatcher. Store: Stores that manage data and update all affected views. Dispatcher: A central dispatcher that receives and transmits action data to the store which hold the application’s data. You are able to define dependencies in your dispatch using the “wait For” prompt to signal one step depends on a prior step. Because of how it complements React’s unidirectional flow, Flux is great for isolating data changes and increasing the locality of bugs. In other words, Flux allows you to pinpoint a coding flaw more easily. At the same time, however, it disallows cascading actions. This means that changing one part of your store doesn’t cause another part to change, which adds to Flux’s ability to minimize coding bugs and unnecessary rerendering. You don’t need to use Flux to write React — but doing so can be a gamechanger. Flux is meant to be a simple application architecture, one that perfectly complements React. The next time you embark on a React endeavor, try incorporating Flux!— Want more coding information and lessons? Check out the Hack Reactor blog, or visit our website to find out about our industry-proven software engineering programs. Originally published at www. hackreactor. com.","['JavaScript', 'Reactjs', 'Flux', 'Coding', 'Codingbootcamp']",https://medium.com/@hackreactor/how-are-react-js-flux-js-related-47822e144f92,0,['Hack Reactor'],1,0,hack,Unknown,Unknown,Unknown
Modestas,,"General Assembly, Web Development Immersive — Week 3 Overview",2018-03-16 11:47:13,medium,"General Assembly, Web Development Immersive — Week 3 Overview After spending the weekend working in order to sustain my life, I didn’t have that much time to devote to my project. Sure I managed to write some pseudo code and think about how I would actually begin to build my game up, but I didn’t have anything concrete. I felt like I was a day behind and was going to need a solid start come Monday. Go Time The whole of project week consisted of coming into the General Assembly building to do stand-up and see how everyone’s getting on, followed by immediately proceeding to work on our projects for the whole day. On Monday, I had finally gotten a clearer idea on how I was going to build my game and was able to actually start writing some code. Despite the relief of having some sense of direction, it brought about a whole new slew of concerns. You see, the problem with being in the very beginning stage of your project is that there are so many different things that need to be implemented before you have a final product, so I quickly found myself overwhelmed. It didn’t help that I was trying to think about tackling too many problems and thinking about all of the different features I would like to implement, simultaneously. I had to take a step back and write down a list of things that I needed to focus my attention on and stick to just O N E thing at a time. This helped me tremendously and saved me alot of headache. In heart of the Christmas spirit and in fear of being too unoriginal, I decided to rebrand my projects theme to that of “ Chimneys and Candy Canes”. Though I liked the theme, i realised it would only be truly applicable once a year. Oh well, you cant have it all I guess. At this stage, my game was coming along pretty nicely and I was becoming increasingly hopeful that I was going to at least have an M V P ( Minimum Viable Product) by the end of the week. Nonetheless, I found myself massively overthinking simple problems and making them more complicated than they needed to be. I felt mentally drained. Though, with some helpful guidance from the teaching assistants and regular refreshment breaks I was able to continuously push through. What also helped me was taking a step back and going through the logic of my code and what was happening during each and every step of the application. Additionally, to keep me motivated, I removed the features I successfully implemented from my To Do list and seeing the list shrink gave me a sense of progress, though In the end; the list ended up continuously growing as more features kept popping into my head. As Friday drew near, I realised that I wasn’t going to be able to implement all of the features that I hoped for in my game, which to be honest, slightly did demotivate me. However, I realised that this was inevitable. When initially coming up with ideas for your project, it is natural to be over ambitious, resulting in many features not making it to the final product, especially with the small time frame we had. After coming to terms with this notion, I had to take a look at my To Do list and prioritise the features I needed to implement, tackling the essential ones first and then adding the nice-to-haves in the end if I had time. The great thing also was that after this project, we would have a nice littler two week Christmas break where I would have some time to continue work on my project. Friday The idea was to meet up in a local cafe in the morning and then at 1. 30pm, present our projects. We were also encouraged to wear the ugliest Christmas sweater we could possibly find, I wore an old garish Beck & Hersey sweater which wasn’t exactly Christmasy, but flashy and obnoxious enough to qualify, I M O. My whole morning was spent trying to fine tune my project and make sure it was as presentable as possible. It was presentation time. As a class We took turns to showcase our projects in groups of five. We each had a table and approximately twenty minutes, whereby our classmates would walk around and view each project. It was cool seeing everyone’s finished games actual come to life and I was surprised at the fact that they all looked so unique. I encourage you to check out my project which is deployed on Heroku. Though this is technically my final product, I anticipate refactoring it and adding more features. All in all, I felt like everyone did a fantastic job and it was great seeing the sentiment of the general class shift from frustrated to joyful. Thereon after, we were prompted to fill out our survey on our experience so far on the course, and had some champagne. what a way to break my fast. Subsequently, I made my way to the pub, had a few pints and chatted away with my classmates. At the end of the night, I was hungry ( A F) and had set my mind on having some nice crispy K F C chicken wings. I walk into the shop, pretty much salivating and giddy at the idea of finally getting to sink my teeth into some nice chicken. As I gawk at the sexy picture of my order and began to place it, I couldn’t believe what came out of the cashiers mouth. “ No chicken wings left sir” Not wanting to settle for coleslaw, I went to grab a kebab at my local kebab shop. That is, after a fifty minute commute. By then it didn’t matter what I put in my mouth as long as it was edible. Though i didn’t get my chicken craving satisfied in the end, the bright side was that I had a two week break to look forward to aswell as a new year.","['Programming', 'Codingbootcamp', 'Tech', 'Technology', 'Web Development']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-3-overview-a99f1764fa99,0,['General Assembly'],1,1,modestas,Unknown,Unknown,Unknown
Brionna White,"Freelance Web Developer - Bay Area, CA . brionnawhite.com",WHY YOU SHOULD NOT ONLY FOCUS ON LANDING A JOB AFTER CODING BOOTCAMP?,2017-06-08 07:32:26,medium,"W H Y Y O U S H O U L D N O T O N L Y F O C U S O N L A N D I N G A J O B A F T E R C O D I N G B O O T C A M P? I think we all know about the brutal job market out there in tech right now. It’s crazy and everyone is trying to land that first job right out of coding Bootcamp. It can be very tough — I’ve been down that road. While going down that road, I started to seek other avenues to create revenue. In most cases, a lot of alumni is just like me after graduating Coding Bootcamp with having to pay the Bootcamp back as your loan interest rates and payments are piling up while job searching. So I thought to myself, there has to be an alternative way to earn some extra cash while job searching. I have skills that can keep money in my pocket forever as long as the web is functioning and in existence. Let’s talk about scenarios of Bootcamp graduates and what they could possibly jump into after graduating a coding Bootcamp. There are plenty opportunities a coding Bootcamp alumni can take on such as a freelance web developer. Why not hire yourself out as a freelance web developer and create some fancy sites for mom n pop shop and charge them a reasonable amount. The client sites you could be building may be even easier to create than the in-depth front-end and back-end web applications, you learned in Bootcamp which can also be easy money to easily generate depending on one’s work ethic and learning ability. For example, It took me 2–3 days to learn Wordpress right after Bootcamp, now I make client websites with the platform that earns me extra cash. It’s definitely something to consider and familiarize yourself with the opportunities you can pursue while job searching. Most like job security so that is majority everyone’s goal right out of Bootcamp but honestly if you come from a sales background or very good with branding and marketing, you can easily get yourself a $5, 000- $20, 000 client doing freelance gigs working with Wordpress — yes your skills are worth that much! The sky is the limit, just don’t focus on landing a job, focus on your craft and make it your job! Another great opportunity one can pursue right out of Bootcamp is start a meet-up or class lessons based on what you’ve learned at coding Bootcamp. If you are a self-starter and have great learning and teaching skills, you can definitely start your own meet-up sessions about how to create a web page using H T M L, C S S & Java Script and charge for the admission. Not everyone can afford 15–20k or have the time to attend a Bootcamp so why not teach others who are still interested in programming in small sessions. This gives you more exposure to programming while having the chance to teach others that are interested in the job market. This also gives you exposure to the tech industry and improves your network with other aspiring and experienced developers. You want to immerse yourself in the community now that you graduated. Don’t be the graduate that only apply online to job applications and never been to one meet up and they’re right in the tech bubble, you will run your options very short and that’s when one start to think they made the wrong career choice when in doubt they probably just don’t know the market too well. Also, that brings up another point, I would definitely consider these tips during the winter holidays because there are some Bootcamp cohorts that graduate their students in the middle of November and December. The job market can be very slow during that time due to the holidays and everyone is going on vacation. So keep in mind, there are other options that could help you if you’re not hearing back from anyone until late January. I know the job market is tough but it’s no different from the real estate market when it comes to getting in at the right time and the hustle and bustle kind of things need to take place. The tech industry is booming and it won’t be this brutal forever which sounds like a good thing to some but it’s definitely a bad thing for most because it will be even harder to get into in the near future. You want to come out of Bootcamp like a ninja and tell yourself the sky is the limit and even after 50 rejections emails and job offers, you can still produce work in web development and get paid in many other ways. Guys, think about it about like this, if businesses are paying you to build websites and you start to produce a large number of them very quickly, any company will take your effort and hard work into consideration in hiring you because its shows other businesses has put trust into you to build their brand online. It’s definitely a win-win for both parties. Don’t give up! Keep going strong coding Bootcamp graduates! Best, Brionna Whitehttps://www. linkedin. com/in/brionnawhite/","['Programming', 'Coding', 'Codingbootcamp', 'Tech']",https://medium.com/@WhiteBrionna/why-you-should-not-only-focus-on-landing-a-job-after-coding-bootcamp-504d4185da75,2,[],0,1,brionna,F,1.0,0.0
Stephen Geller,,"Week 2, 3 & 4: The Cheek of it – Stephen Geller – Medium",2017-07-26 12:04:27,medium,"Week 2, 3 & 4: The Cheek of it This blog post marks the first post written by an official Sheffield University graduate in Psychology! Well, probably not but you get what I mean. Having just returned from a week in Sheffield celebrating grad week, I am now ready to write a long-overdue post covering the last few weeks. Week 2: Getting kicked by the kickstart (not the best title I grant you) Mr Josh Cheeks. If you’re reading this, somewhere in the depths of binary hell, please know how much I suffered between the dates of July 10th and 16th. Your lectures were engaging, interesting and insightful. Your notes were clear, concise and entirely legible. Your challenges, however, were, like, not fun. At all. Well, mainly session 3’s challenges, which required extensive independent research, (lots of) trial, and mostly error. However, after a comfortable first week, this was exactly the kind of challenge I was hoping for. There appears to be an infinite learning curve when it comes to coding language mastery, and no matter how much you master the basics (arrays arrays arrays ❤), there will be ways to implement and manipulate them that will have never crossed your mind. So, I ultimately have to say thanks to Mr Cheeks for ramping up my confusion/frustration levels, this is part of what this whole developer experience is about, and I’m looking forward to a plethora of further difficulties ahead. Cool things about this week: Seeing how T D D worked for the first time, and learning the full scale of possibilities that good code can offer Challenges from this week: Beginning to understand that there are always a million ways of achieving the same goal, learning about procs/blocks/lambdas, not losing faith when a task appears out of your capabilities Week 3: Villain Academy Week 3’s challenge was to build a fully functional student directory, complete with saving/loading functions to other files. Here, a vital lesson was learned: re-factoring working code sucks. From swapping the chomp method with a suitable gsub or . delete to re-factoring an entire method to utilise C S V functionality over File. open, a lot of head-scratching occurred just trying to fix what had already worked with previous code. This ties into Codewars challenges too – I have once or twice failed to pass a Codewars test not because the code doesn’t work, but because it takes too long to complete. Looping seems to be the main perpetrator here, and what I find most frustrating is not knowing how to maintain functionality whilst removing looping from the methods used. In general, I am yet to fully grasp how to make things efficient, and re-factoring can only take me so far as of yet. Nevertheless, with each Codewars solution I see, and each alternative approach found on Stackoverflow, I can really feel a sense of progression in my abilities. More importantly, I have started to find a sense of flow in my work — a workflow, if you will — which has massively helped my approach to problem solving. It almost feels like making music, where the more you use your tools, the more set you become in your ways of making something with them. Of course, the caveat of this, like with music, is developing bad habits. Hopefully the Pre Course hasn’t created too many of them, but I’m in no doubt that the course itself will iron them out anyways. Cool things about this week: saving to other files, learning about C S Vs & File. open, further getting to grips with hashes, being able to create interactive menus Challenges from this week: re-factoring code, getting to 6 kyu on Codewars, keeping focused when you feel like you’ve already learnt too much! Week 4: Fizzing the buzzers (my worst title yet) Today is Wednesday the 26th of July. In 5 days, I will be sat in the Makers Academy building on Commercial Street with the rest of my cohort, tackling challenges and learning together. This week is all about getting us as ready for that as possible, by encouraging us to practice pair programming (and alliteration) with anyone we can get our hands on. Unfortunately for me, I’m yet to move to the big smoke, so am not sure what this will really feel like, but I’ve been getting a glimpse of it through some remote pairing instead. Thanks to Nick, Puyan, Elizabeth and Abi (you’re all great), I’ve paired over some codewars kata and the famous Fizzbuzz challenge which solves a mathematical problem. Pairing is a fundamental part of the Makers experience that they require you to do throughout the process, and I can already see why. I’ve spent hours on some kata, bashing my head against a wall trying to work out why my code isn’t doing what I want it to do. My ‘incomplete-kata’ folder grows bigger every day. And yet, a quick plain- English conversation about why my code fails almost always results in a new way of attacking the problem. Through pairing, I’ve also learnt that everyone differs in their gaps of knowledge, and things that seem obvious to them might be the same thing you’re struggling on most. I’m sure it will also be frustrating at times trying to convey or understand a concept with someone else, but Makers seems like a sort of family thus far, and family are meant to be as frustrating as they are supportive. I really can’t wait to meet my cohort, the course itself seemed so far away for so long and it’s hard to believe it’ll all kick off in less than a week. Cool things about this week: Learning R Spec! T D D was a mysterious concept so far, and it’s exciting to finally have a glimpse at what it actually is. Challenges from this week: C V writing… Part of this week’s challenge is to write a Github C V, and selling yourself is hard, especially when you feel you don’t have much to sell yourself with! What’s ahead In three days, I will be an official Londoner/ Londonite/poor. Trying to relish the last few days in Bristol before I move out, but in all honesty I can’t wait to go. I’ve been looking forward to this course from the second I received the phone call, and I feel like I’m ready to crack on with it now. It’s going to be a scary, intense, and challenging ride for sure, but one that will ultimately be incredibly rewarding. The most satisfying part of this month so far is how much I’ve actually enjoyed it, and that’s really what has mattered most to me. This direction was in many respects another blind leap — Psychology was chosen after dropping out of a Music Technology degree — but every experience so far indicates that it’s the right one for me. Last week was a strange one, as I finally said goodbye to my home for the last three years as well as lost one of my childhood heroes Chester Bennington (felt like he needed to be mentioned here), and I’m now back home with nothing ahead but the bootcamp. Going from being in the oldest cohort of non-mature students at University to probably the youngest cohort of Makers Academy students, I’m expecting a bit of a social shift in how to conduct myself, and I’m yet to know how smoothly I’ll cope with that. I still feel as much of a mess as any recent graduate tends to be, and developing a form of discipline towards my work still feels harder than it should be, but necessary nonetheless. Same goes for managing stress levels, a familial trait I’ve always had trouble dealing with. Regardless, I am so lucky to be doing this course, and will have to throw everything I’ve got at it to make sure it pays off, which I have no doubt in my mind that it was. Now back to some kata with the sweet sounds of Linkin Park in my ear…","['Coding', 'Codingbootcamp', 'Makersacademy', 'Programming']",https://medium.com/@stephengeller/week-2-3-4-the-cheek-of-it-4c48d9e41140,1,[],0,0,stephen,M,0.0034105039333625683,0.9965894960666374
Blake Schlin,,Understanding how to use the .select .map and .reduce methods together in Ruby,2018-03-21 16:43:45,medium,"Understanding how to use the . select . map and . reduce methods together in Ruby Sourced from Github My coding bootcamp instructor recently gave us a problem that looked like this. The goal was to calculate the total amount of words for all items with type <b>book</b>items = [ {title: “ No D B A”, words: 561, tags: [“nosql”, “people”, “orm”], type: :book}, {title: “ Infodeck”, words: 1145, tags: [“nosql”, “writing”], type: :book}, {title: “ Orm Hate”, words: 1718, tags: [“nosql”, “orm”], type: :book}, {title: “ruby”, words: 1313, tags: [“ruby”], type: :article}, {title: “ D D D_ Aggregate”, words: 482, tags: [“nosql”, “ddd”], type: :book}] Because of how I was first taught, I naturally wanted to solve it using “if” statements like so…item1 = items[0][:type]item2 = items[1][:type]item3 = items[2][:type]item4 = items[3][:type]item5 = items[4][:type]sum = 0if item1 == :book sum += items[0][:words]. to_iendif item2 == :book sum += items[1][:words]. to_iendif item3 == :book sum += items[2][:words]. to_iendif item4 == :booksum += items[3][:words]. to_iendif item5 == :book sum += items[4][:words]. to_iendputs sum But realized their was a much simpler approach using loops. If this array of hashes contained 100’s of items, i’d be writing if statements until getting Carpal Tunnel syndrome. So instead, I used the . select, . map, and . reduce methods in Ruby to simply the solution into a single block of code. puts items. select{|x| x[:type] == :book}. map{|y| y[:words]. to_i}. reduce(0){ |sum, count| sum + count }#1. The Select method creates variable “x” and iterates over every pair in the items array. If the boolean expression is true(key of “type” == :book) it’ll place the truthy hash into a a new object. #2 The Map method creates a new array without effecting the original array being looped over. I created variable “y” to grab the value of the key “words” and then converted that into an integer. #3 The Reduce method iterates over an array like the select method but instead uses an operation to keep track of the total for every element of that array. In this example, I created values “sum” and “count” and every iteration, the sum receives the word count for each book in the items array.","['Freecodecamp', 'Programming', 'Codingbootcamp', 'Ruby', 'Coding']",https://medium.com/@blakeschlin/understanding-how-to-use-the-select-map-and-reduce-methods-together-in-ruby-e630cf75e517,0,[],0,0,blake,M,0.05138465760944147,0.9486153423905586
SwitchUp,"Discover the best learning path to your dream tech career. Course reviews, recommended career tracks, job search advice, and more at http://switchup.org.",Study at a Bootcamp That Guarantees You a Job – SwitchUp – Medium,2018-08-09 19:34:02,medium,"Study at a Bootcamp That Guarantees You a Job Bootcamps are great for career changers. Access these programs for guaranteed career support. There are many reasons to attend a coding bootcamp, but the number one reason we hear from students is undoubtedly to land a job. Bootcamp students are on the hunt for careers that offer more in terms of salary and upward mobility. Although most bootcamps are motivated to help their students land jobs after graduation, some are so driven by student success that they actually offer a job guarantee. Our comprehensive list includes both online and in-person, full-time, immersive programs that offer their students a guaranteed job after graduation. So what does a job guarantee actually mean? There are a few different types of job guarantees and each program offers its own stipulations. We have found three main categories that fall under the job guarantee umbrella: Schools that refund your tuition if you do not land a job within a certain period of time Schools that help you to land a full-time, salaried position Schools that help you land job offers or apprenticeships Note: Job guarantees typically come with conditions and are often paired with a lengthy, detailed contract. Schools may require a certain number of weekly job applications, require you to accept any and every job offer, or include internships and unpaid positions as part of their fulfillment. Make sure you understand all of the terms and conditions before committing to a particular agreement. What are the benefits of a bootcamp job guarantee? Schools that offer a job guarantee are so confident in their program and curriculum that they are willing to refund you your money if you do not succeed. Schools that offer a job guarantee will have strong career services and support. Schools that offer a job guarantee lessen your chance of unemployment. Which schools fall into this category? In recent years, job guarantees have become a popular way for both online and in-person bootcamps to stand out from the competition. Our list below includes programs like Bloc, an online program that guarantees a job within 180 days or your money back, and Codeup which promises a job offer within six months of graduation or a guaranteed 50% tuition reimbursement. If you want a school with a job guarantee, explore our comprehensive list: Coding Bootcamps with Job Guarantees.","['Programming', 'Codingbootcamp', 'Coding', 'Code', 'Code Review']",https://medium.com/@switchup/study-at-a-bootcamp-that-guarantees-you-a-job-2d0d9b607ecf,0,['Codeup'],1,0,switchup,Unknown,Unknown,Unknown
Ian Hoffman,Recent App Academy grad with an interest in JavaScript and Swift. Get to know me at https://ianhoffman.github.io/about_me/.,I built an iOS app in 3 weeks and here’s what I learned,2017-07-16 20:44:32,medium,"I built an i O S app in 3 weeks and here’s what I learned As a recent bootcamp grad, I was looking for ways to distinguish myself from the hordes of recent bootcamp grads spilling out of camps like App Academy, Hack Reactor, General Assembly and (now-defunct) Dev Bootcamp. I also felt like my education at App Academy, while good, was limited — I’d learned exclusively how to build websites. But, before I’d enrolled in App Academy, I’d thought building “apps” was all about mobile — I mean, no layperson refers to websites as “apps”, right? But we have tons of “apps” on our phones. App overload. So, I decided I’d complement my new web-dev expertise with a crash-course in Swift. Actually, let me back up a second: I’d already decided to learn some i O S development when, for my final project at App Academy, I’d built an app in React Native. However, that whole experience was so divorced from the final product — we wrote entirely in Java Script — that I didn’t really feel I was building an i O S app as much as just compiling some J S into something that sort of worked as an app. Anyway. Back to it. After App Academy, you need to send at a minimum 25 job applications a week. This meant that any time I devoted to building my app would compete with sending job apps. I also knew no Swift going into the project, so I’d need to get up to speed. I decided to team up with my cousin, a Computer Science major at the University of Santa Cruz, so that we could tackle the project together. We decided to build an app which allows college students to discuss hot-button issues on their campus in a safe, non-anonymous, yet also potentially contentious and deep way. We called it “snowflakes” as a little joke. Three weeks later, we have a pretty functional app. Yes, the styling isn’t gorgeous — yet — but it’s almost fully functional and even includes some functionality we didn’t originally plan on, like a “top news” feed that draws on Google News’ R S S Feed for each school. We hope to deploy to the Apple store in the next weeks. But — more than the concrete skills I picked up over the past weeks — what I learned from this project is how to work effectively on a small team, how to self-motivate, and how to learn rapidly. Here are my biggest takeaways from building an i O S app in three weeks:1. Get organized. It was only midway through the project that we decided to create a sort of “ Scrum” sheet, but we should have done it much sooner. It was really satisfying to change the color of tasks from red, indicating “not implemented”, to orange, meaning “in progress”, to green (“complete”). It was also a useful place to dump new ideas that I might or might not have time to implement (we used a seperate “wish list” tab in google docs for this). I consistently surprised myself, in fact, by how much faster I was able to “tick off” these scrum-sheet features than I’d expected I’d be able to. That in itself was motivating, and inspired me to develop features (like the above-mentioned R S S feed) I hadn’t even planned on implementing. 2. Be willing to change gears rapidly if the project calls for it. We started off using X Code’s “storyboard” feature to create our app, in which you can literally drag and drop components onto a canvas and then hook them into your code via an outlet. It sounds nice, but it leads to disastrous git merge conflicts. After a couple days of trying to brute force this into working, we took a step back and switched gears entirely. Storyboard hell. Yes, we started over completely from scratch. But it was worth it, because with our new methodology — writing all code purely programmatically — we were able to be twice as productive in the end, since we were able to merge easily and thus divide work evenly. 3. Find the technology you need. This may seem obvious, but it wasn’t for us. We had no experience with Swift, as I mentioned, and, while I had experience with Rails, I had no idea how to hook up a Rails server to a Swift app. And, while it would probably be a good skill to learn, and one I am interested in learning, handling both the server and client side of an i O S app felt like a lot to bite off in just three weeks. Still, it took us a few days to realize just how useful Firebase would prove as an alternative to traditional hand-rolled servers. Though Firebase does suffer various limitations, such as the ability to perform complex server-side logic, it works well for a relatively straightforward app like ours. Having one less complicated moving part to worry about when diving into something new really simplified our process. 4. When in doubt, hack it out. I came into Swift with almost no experience in statically typed languages (just one semester of C++ in college) and, aside from my limited experience with React Native, no experience building mobile apps. That said, I was almost never stuck on how to implement a feature — because of, well, **the internet**. There are so many resources out there, and, while they may not have the exact answer you’re looking for, chances are they’ll have some answer that’s applicable to the problem you’re facing. By constantly browsing Stack Overflow, I was able to implement everything from Regex checking, to image caching, to converting dates to “time ago” format (i. e. , “one hour ago”), to dynamically resizing text fields as the user types. Point is, you shouldn’t let a lack of experience hold you back: if you’re willing to be scrappy and work hard, you can solve just about every problem you’ll run into. Now that we’ve sort of “finished” the app — though no such thing is ever really done, and there are many more features we’d like to build out — I’m reprioritizing applying for jobs ( I’ll still put two to three hours a day into styling, however). But I plan to take the lessons I’ve learned from building “snowflakes” with me, even as I look for jobs. Here’s how I’ll apply them: I’ll get organized. I’ll use a sort of “scrum sheet” to keep track of all my job-app related tasks for the day. I’ll use another tab to track potential contacts and how I’m keeping up with them. I’ll be willing to switch gears. If something isn’t working for me, I don’t want to keep putting time into it — I’d rather be as productive as possible. For me right now, that means I want to massively de-prioritize sending apps “cold” and focus more on building contacts and growing my network. I’ll try new technologies. Medium is one way of getting myself out there that I hadn’t planned on using, but now I see as potentially viable. I’ll also make sure to look at alternative job-hunt platforms such as Triplebyte and Hired. com. I’ll be scrappy. I know I’m not the most experienced dev out there, but I do have work ethic and a desire to learn. I know I could form an important part of most teams given the chance, and I’ll take that confidence into every interview and networking situation I attend. So, enough about me — what have you learned since finishing up a programming bootcamp? I’d love to hear about the projects you’ve worked on and how your job hunts are going.","['Swift', 'Programming', 'Codingbootcamp', 'iOS', 'Learning To Code']",https://medium.com/@ianhoffman/i-built-an-ios-app-in-3-weeks-and-heres-what-i-learned-a5a178c92a09,4,"['App Academy', 'Hack Reactor', 'General Assembly', 'Dev Bootcamp']",4,13,ian,M,0.0033550123346041713,0.9966449876653958
Mark Hazoldt,,TIY Vegas 2017 — Week 1 – Mark Hazoldt – Medium,2017-07-03 03:38:34,medium,"T I Y Vegas 2017 — Week 1 So far The Iron Yard is everything I expected and more. I have wanted to attend a programming bootcamp ever since I found out The Iron Yard was in Las Vegas, way back in March of 2015. It took a while to get my life in order to be able to attend but it was definitely worth the wait. The first day was Sunday June 25th. We all met at 5pm with our Mac Books to set up all the tools we would need to get started. This included… Atom (or your text editor of choice)i Term2 Z S H Git Creating a github account if you didn’t have one. Setting up ssh keys to make uploading to github easier It was a relatively straight forward process, at least for someone like myself who has an I T background. I am definitely more familiar with Windows but I know my way around on a Mac and it is definitely becoming more second nature as the days go by. For me the best part of the experience has been meeting all the amazing people in my cohort and the instructors. I have always been interested in computers and programming but have only met a few developers over the years. It is awesome to suddenly be in an environment where everyone has that common ground is going after similar goals. As expected the learning pace is fast and you can not really waste any time if you expect to get through all the course work. That said, the grading is not like a traditional school where you get a letter grade. The only people who can determine if you are behind or on pace are the instructors, if they feel you are grasping the content then you are on pace regardless of any other metric. I am coming in with I would say hobby level experience. I was relatively familiar with H T M L and C S S going in so I haven’t really felt overwhelmed by the work yet, the pace is fast enough that you have to stay focused and put out the effort even if you are familiar with the current material though. I have still learned a lot this week by digging into the details a little more. Most of the course work so far has involved mockup images and recreating the mockup with H T M L/ C S S. We should get into Java Script next week which will be fun because that will add a lot more capability. It is also awesome how the learning environment is very laid back, if you need to leave to get a snack or you want to find a spot away from everything to focus, you can do that. It isn’t like at a traditional school where you are stuck at your desk. They also have alumni that help answer questions and can use the campus as a co-working space. This is cool for a number of reasons. You can ask the previous students questions like what their work search was like and every time you meet someone else in software development that is another potential friend and networking opportunity. The Iron Yard feels like a club of software developers, which I guess it is. They also host various coding meet ups, one of which is the Ruby Users group. I had actually wanted to attend that meet up months ago but never ended up going. One day I stayed late working on something and just happen to run into the meet up on my way out, I was happy to finally say I went to that, even if I only stayed and talked for a few minutes. This post is kind of disorganized but I am surprised I have even found the time to make a blog at all. It is advocated to do personal branding and blogging, I am not sure how many students decide to participate in this, but I am giving it a try. Random things:we all went to dinner after setting up our computers on Sunday On Fridays there is designated socializing time, we played werewolf, there was alcoholstudents are given 24 hour access to the building That is all I can think of for now, next post will be week 2.","['Coding', 'The Iron Yard', 'Coding Bootcamp', 'HTML', 'CSS']",https://medium.com/@mhazoldt/tiy-vegas-2017-week-1-d5945bc137e0,1,['The Iron Yard'],1,2,mark,M,0.003315967146008878,0.9966840328539911
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,"AngularJS to the Rescue!! Days 5, 6, 7 at Coding Bootcamp.",2017-08-09 19:42:11,medium,"Angular J S to the Rescue!! Days 5, 6, 7 at Coding Bootcamp. Ever heard the expression “drinking from a fire hose”? During the first week of class at the Redwood Code Academy, we burnt through introductions to H T M L, C S S, Bootstrap, Java Script and during the first two days of this week, j Query. It’s Wednesday now, week 2, and we are being introduced to Angular J S. The material, though plentiful for sure, doesn’t feel overwhelming yet. I mean, it’s alot. Like water from a fire hose. But, so far, manageable. I think I’m getting a grasp on how the curriculum here at bootcamp is going to play out: We are being introduced to all of the concepts that we will need to create functional Java Script applications, and we’re learning just enough initially to be dangerous. As the course progresses, I think we will build independent and group projects and, during those phases ( I sense), we will really hammer down these newly acquired skills. And each new lesson builds on the previous lesson and, in most cases, makes the challenges of the prior day easier to handle with our new knowledge. So, for example, we first learned how to stylize H T M L using only H T M L. The next day, we discovered that C S S makes stylizing H T M L much easier. Same idea with Java Script. We learned some basics. After struggling with these basics, we were better prepared to appreciate j Query and Angular, which we were introduced to in subsequent lessons. Basically, it’s like we always start by setting the foundation. And then we build from there. Makes sense, right? It’s rewarding to see already the progress that we’ve made. I can create a mean Constructor function, and I’m pretty sure I have down pat the code for an iterating “ For” loop. Which doesn’t sound like much, but these basics are the concrete upon which my house of Java Script knowledge shall be built. I did discover that this course is going to provide me the skills to resolve a real world issue. As some of you may know, my favorite hobby is mixing music. To do so, I have to purchase and download a ton of music. The site from which I purchase my music, Beatport, appends a series of numbers to the beginning of the filenames of the tracks I download. These numbers make sorting the files, for D J purposes, really difficult. So, I have to spend an unenjoyable amount of time right-clicking and renaming each of the files to remove the series of numbers. It takes forever; I buy so much music. There is probably an easy solution but, for ever now, I have been using this brute force method. Well, I described this issue to our instructors and I was happy to learn that once we begin taking on C#, around week 5, I will gain the capability to create a simple little application to automate this process. So, even if I get nothing else out of this course, I’ll at least have that. I suspect I’ll graduate with plenty more :) The course remains exciting. I know enough about Java Script already to recognize that it is powerful. Once you see how it is able to accept user input and manipulate the content of a webpage (which, very professionally, lol, I now refer to as the “ D O M”. ), one can quickly conjure the possibilities. Which is really saying something because we aren’t even working with databases, servers, or any of the really heavy duty stuff yet. Just simple frontend applications so far. Perhaps that’s why coding as a profession so appeals to me: if one can do so much with just the basics, it’s sorta thrilling to think of all we’ll be able to accomplish once we really dig into this stuff. It’s kinda like I am gaining a superpower. I want to be called “ The Great Bo Good Ski”. image from http://doug. wikia. com/wiki/ Quailman To read the next update, please click H E R E.","['Web Development', 'Coding', 'Codingbootcamp', 'Programming', 'JavaScript']",https://medium.com/@sbogucki12/angularjs-to-the-rescue-days-5-6-7-at-coding-bootcamp-859c0a4683f5,0,['Redwood Code Academy'],1,9,steve,M,0.0037574028300791295,0.9962425971699209
Lena Sabaeva,,The Journey begins. – Lena Sabaeva – Medium,2016-11-06 01:37:04,medium,"The Journey begins. Hello world! I have finally jumped on the blogging bandwagon. My aim here is to chronicle my journey through the highs, lows and everything-in-betweens of learning to code. I’ll keep my first entry brief. Monday is the day when I start my 14 week dev bootcamp aimed at teaching students to become self-sufficient developers. The learning environment will be fully immersive and intensive. (“ Strength through struggle?” Yes, please. ) Despite all the research and preparation that I’ve put into making this decision, I still feel like I’m taking a leap of faith, a jump into the unknown. A tad hyperbolic perhaps, but I’d be deceiving you if I said that I have absolutely no trepidation when imagening what’s in store for me. This is okay. I can never be fully rid of these feelings for it is a formidable task that I am undertaking. There’s only so much preparation and research that one can do before finally having to jump— preferably with a parachute. The moment will never be perfect ( I’m looking at you, my research-loving nerds), but deep down you’ll know that you’re making the right decision. All nerves aside, I am excitedly looking forward to Monday! Let the nerve-inducing, triumph-producing learning madness begin! Until next time! À bientôt!","['Inspiration', 'Learning To Code', 'Learning', 'Journey', 'Codingbootcamp']",https://medium.com/@lena.sab/the-journey-begins-f9dd834eaebb,0,[],0,1,lena,F,0.997627710668025,0.002372289331974967
Le Wagon Tokyo,Coding school for creative people & entrepreneurs #startup 🚀Intensive 9-week #FullStack #Bootcamps http://bit.ly/1VQNB08 👀,Le Wagon Tokyo portraits: discovering the digital nomad life with Dimitri,2017-02-02 03:17:50,medium,"Le Wagon Tokyo portraits: discovering the digital nomad life with Dimitri How does life look like in Japan as a freelance web developer? We sat down with Dimitri ( Dim), recently settled in Tokyo and one of our teacher for the coming batch, to talk about his experience so far in one of the world’s most buzzing city. Settling down So how did Dimitri end up in Tokyo? “ Well, I am here on working holiday visa” starts Dimitri, a convenient way for freelancers to live here “ I did two sessions of Le Wagon in Paris as a teacher assistant in 2016. And after that we decided to move to Tokyo with my girlfriend, just like that… One of the perks of the freelance life”. That seems like a wise decision, considering the projects he’s been working on until now “ I am splitting my time between freelance jobs and personal projects: At the moment I am working remotely on a mobile app project. Also, I just started giving a hand on Safe Cast ( Open Source environmental data project launched in Tokyo), and working on a couple of chatbots as pet projects. Moving here, I also got to meet cool entrepreneurs, and that led me to start yet another project related to V R”. That is a lot of projects. What he enjoys the most as developer? “ Initially I wanted to become a developer to free myself from the pressure of having a boss or working with customers, so obviously that’s not happening with freelancing” he laughs. “ But I am getting there. I really love teaching and transferring my passion for code. Also, I am not so much of a front-end guy… I really prefer back-end stuffs, how everything is wired, how the logic works”. As for the city itself “ It’s really exciting living here, I can see myself staying for at least another year. Plus I am learning Japanese, which helps, and I get to travel around Asia too, I am going to teach at the other Le Wagon’s chapter in Asia, in a couple of weeks”. Teaching at Le Wagon Switching to the topic of being a teacher at Le Wagon, Dimitri had interesting stories to share: “ I really enjoy sharing key concepts of code, and also letting students discover things by themselves. Also, not having a teacher/student, kind of “paternalistic”, relationship makes it enjoyable to teach”, he continues “ I am always surprised by how people take very different approaches to the same problem. That’s a value of the bootcamp spirit too”. He was also very clear about his teaching philosophy “ For me, as a teacher, I don’t want to lecture or give very detailed examples. I don’t like to push people to learn by heart, but rather teach them how to think and conceptualize”. So what amazes you about students at Le Wagon? “ Well, some people are total newbies, they would get angry that they can’t make it, get angry at themselves. It takes time for a mind to break” he laughs. “ Some students join Le Wagon without really understanding what is code. And then they end up loving it, and becoming passionate web developers. It’s fascinating”. 99. 5% of each intake makes it. I guess you also have fun stories to share “ Ah yes! One student thought he could code everything with Ruby, and then discovered he had to learn Java Script too. He tried to find workarounds… And eventually ended up learning J S”. Big laugh “ The first week is really, really tough. Usually, 1/3 of the class thinks they won’t make it. But 99. 5% of each intake makes it. Basically, nobody drops unless they meet very unexpected issues”. He concludes “ I would say the bootcamp has an ego-check effect too. It’s a good way to challenge yourself”. Advice time So Dimitri, any last word for people still considering Le Wagon? “ I would say it is the chance for you to live and work independently. Also, it’s probably the single best decision you can make if you’re seriously considering entrepreneurship and do not have a technical background or… co-founder”. Why in Tokyo then? “ I was told there is a lack of technical skills here, people basically prefer to become managers. Learning to code is a chance to stand out. I am not too worried about the bootcamp being run fully in English. Here I met a few people telling me they could not speak English, and then when they start talking, it’s as fluent as it gets. Probably a matter of modesty, or lack of confidence” he continues, laughing. “ Still, I am interested to discover cultural differences and a probably a unique approach to learning and teaching”, and concludes with a grin “ It’s going to be a great experience”. Well thanks Dimitri for your time and for sharing your views, looking forward to having you teach our Database session! (which makes a lot of sense since your initials are… D B).","['Startup', 'Entrepreneurship', 'Tokyo', 'Coding Bootcamp', 'Digital Nomads']",https://medium.com/@LeWagonTokyo/le-wagon-tokyo-portraits-discovering-the-digital-nomad-life-with-dimitri-c4984022dab7,1,[],0,16,le,F,0.5308343409915357,0.46916565900846435
it’s jennilyn,"Proud to be a #WomanInTech. Software developer, lifelong learner, runner, reader, cake-eater. Live bravely.",Pilot: Starting my coding journey – it’s jennilyn – Medium,2017-05-12 02:08:24,medium,"Pilot: Starting my coding journey Hey, I’m Jennilyn. Nice meeting you here. Here I am yesterday with my fun, smart, supportive husband, who is a pilot. Eleven days from now I will dive (drown?) into software development at The Iron Yard in Greenville, S C, and — between you and me — I’m terrified. Excited. Really excited, actually. But anxious. I’ve been bored for years. Since high school, if I were to be honest. College was no breeze, but it didn’t exactly push me to the limit. Most of it is my fault; I picked what turned out to be an easy major (journalism/graphics) and, because I was a transfer student, shied from a minor or honors program for fear of not graduating “on time. ” After school, my husband and I lived in the D C area, and I busted my butt in the boutique retail industry, growing from full-time sales grunt to store manager rather quickly. But the hours, never seeing my husband, holidays away from my family, the mall… I was done after 4 years. Then I tried something entirely different: optometry. For about a year I worked as an assistant under a great optician (hey Jen!< — she is so awesome) who showed me I could learn difficult things. I could solve problems (really well, in fact), and for once I wasn’t on a hamster wheel each workday. But then it was time to move back home to Greenville. I worked for two years as a lead account manager at a small email marketing firm and loved it. “ Challenge accepted” became my middle name: solving client problems, troubleshooting software/user errors, recruiting and coaching good colleagues, and captaining a major development project we contracted were all projects I relished. You could say I get a high off learning and finding solutions. I’m like Ms Pac- Man when it comes to new challenges: I’ll eat them all, then the ghosts will get me. Ghosts started knocking last year. Working on that dev project is what inspired me to investigate coding: Isn’t there a better way to communicate tech and educate the client about this functionality and U I? Are there steps we as the client can take to make this process easier or more efficient? Could we hire someone to maintain this for us? I felt myself stalling out (yes, the Ms Pac- Man trait is both a strength and a weakness) because I didn’t have the tools to fix these issues. My hunger for that grew and curiosity eventually evolved into talking with T I Y. Trying out Codecademy last year with my four-legged audience/snack-stealer. At this beginning stage I can say with certainty I’m ready to go Ms Pac- Man on some code learnin’ and become a kick-ass developer who also has the patience and relationship-building chops to keep clients coming back for more software, more websites, more apps. It’s going to be a long 12 weeks, and the ghosts that say you can’t may be hard to scare off at times, but I know the sweat, tears, discipline, and do it anyways will overcome.","['The Iron Yard', 'Codingbootcamp', 'Coding', 'First Post', 'Learning To Code']",https://medium.com/@jennilynhowell/pilot-starting-my-coding-journey-c993d7f6b15e,2,['The Iron Yard'],1,1,it’s,Unknown,Unknown,Unknown
Le Wagon Montréal,Coding school for creative people & entrepreneurs 🦄 🖥 9-week Full-Stack program to learn to code. 🚀 http://lewagon.com/montreal,9 Weeks Learning to Code. A Successful DemoDay. And Then What?,2018-04-02 14:11:49,medium,"9 Weeks Learning to Code. A Successful Demo Day. And Then What? Tips for “ Le Wagon” Bootcamp Grads from Senior Engineers Want to read this story in French? On March 16, the 18 graduates from Le Wagon Montréal’s Batch #125 presented the products they built during the last 10 days of the program. Five applications were pitched with enthusiasm. It was a time of excitement and celebration for all the students as well as for the hundred or so people who attended the event. Two Weeks to Build an M V P Some context is important for those who have not gone through our program and who are not programmers. Ten days to build an app is not very long and is a real challenge. Even more so considering that nine weeks earlier, most of the students did not know how to code. During 7 weeks of intensive coursework and practice they learned, according to the industry’s best practices, basic programming concepts, software architecture, database and front-end development, including Java Script ( E S6), and developed several Rails applications. Everyday is so much rewarding, you learn something new and you practice immediately, being helped by amazing teachers but also by the other students. You work hard, but you enjoy every moment of it ! Coding can get really addictive, and the way it’s done at Le Wagon has a lot to do with it !— Thibaud, Le Wagon Montréal alumni Batch #125 students addicted to challenges The final two weeks of the bootcamp are dedicated to developing projects in teams. The projects are built “from scratch”, and the work includes pitching the idea, programming the app, prototyping it and then, the icing on the cake: presenting the app during Demo Day. In only 2 weeks, we built a functional web-app that I can use as the first major piece of my portfolio, but more importantly, I now have a clear vision of the process and challenges associated with building a web product. — Damien, Le Wagon Montréal alumni The Five Products Presented Five applications were presented on Demo Day:1- Project Grace. Helping Helpers Target: Large charitable foundations Solution: A website enabling foundations to easily manage & track their projects and streamline interactions with their N G Os. Yves presenting Project Grace2- Tennis Mate. Find your next hitting partner Target: Amateur tennis players Solution: An app that matches you with compatible hitting partners based on your skill level, availability, and location. 3- Characterize. Build your backstory Target: New or returning Dungeons & Dragon players Solution: A website that offers a randomized set of backstory elements to stimulate the user’s creativity Alice, Zach & Aayush presenting Characterize4- Winelife. Your personal wine advisor Target: Wine lovers who don’t know a lot about wine Solution: An application through which the user can select certain criteria such as taste and budget, and the app suggests wines that are available at the closest liquor store. 5- Gamiflex. The best tool to find your next game. Target: Experienced video gamers Solution: A webapp that provides a video game suggestion for the user, based on their given preferences and situation. Théo & Nicolas presenting Gamiflex And Then What? The 10 Best Tips from Developers We had the honour of welcoming L P Maurice, the C E O and Co- Founder of Busbud, who ended the evening with an inspirational speech. He asked his team members what were their greatest lessons learned and advice for new developers joining the ecosystem. Here is an extract of what they said: Failure is your friend. You learn from it and grow. If you are not failing, you are not pushing beyond your capabilities of today and becoming better tomorrow. Stay curious. Ask “why?” or “why not?” whenever you can and then get the answer. Read voraciously, but keep in mind you “learn by doing”. Imposter syndrome is real, everyone feels it, you’re not alone. Opening up and sharing your thoughts with others when you feel it helps you get through it and can help others that are feeling it as well. You are in the best business at the best possible time in the history of the world. Degrees don’t matter as much, you’ll get hired if you have experience building great things. You’ll have the time of your life. Dogfood your product or service. Talk to the users of your product and empathize with them. Don’t try to guess what they think. Pay it forward. Helps others as you have been helped to get where you are. Technology is a vast landscape, choose a problem that you are passionate about and change the world. Beware of “ Fear Of Missing Out” ( F O M O). Just pick a tool/framework/language that you like, go build something and get better. Side projects are great for exploring and showcasing your skills. Real life hobbies (sports, music, etc) are important too! Follow a career path that you want to have, don’t let someone tell you what you are “supposed” to do next. It’s hard to fabricate passion and it’s your secret ingredient. If you are passionate you will succeed. Keep on going and enjoy the journey!👉 Read L P Maurice entire speech Do you want to know more about Le Wagon Montréal’s program? Let’s meet! 😁 What’s your goal for learning to code? Forget hype, F O M O or rewards and ask yourself the right questions. medium. com Coding Bootcamp in Montréal - Le Wagon Working as a junior developer for Stripe, Algolia, Molotov, Save, Compass, 55, Save, etc. . We will help you find your…www. lewagon. com","['Coding', 'Programming', 'Codingbootcamp', 'Web Development', 'Startup']",https://medium.com/le-wagon/9-weeks-learning-to-code-a-successful-demoday-and-then-what-48c7bf1983be,1,[],0,192,le,F,0.5308343409915357,0.46916565900846435
Chris Hullman,The musings of a student understanding and navigating the stop and go signs at the roadblocks on the web development road to success (toll roads excluded).,Coding Bootcamp Challenges #1) So. Many. Dev. Tools.,2018-03-05 23:06:55,medium,"Coding Bootcamp Challenges #1) So. Many. Dev. Tools. Factor no. 1 in fuelling the intensity of coding bootcamps: The shear amount of web development related tools, platforms, services, etc. you’re exposed to! Half the challenge that I’m finding with coding bootcamps is not the coding itself, it’s the shear amount of web development related tools, platforms, services available for every developer to improve their productivity — think of exactly where, how and why on your computer you may write any given line of code in whatever language, and surely there would be a tool or feature available on the internet (paid or not) that you could obtain to make this job “easier”. This should be of little surprise however given that web interfaces and services dominate the content and use of what we know as the internet today I would like to simply list some such web dev tools that I’ve had the pleasure of discovering (local, clound and/or browser based). I won’t go into listing any available libraries or frameworks, otherwise this article will become monstrous in length. I D Es V S Code Atom Cloud9 Codepen Text Editors Sublime Notepad++ Obj Gen Testing Saucelabs Chrome Dev Tools Browserstack Code Storage and Collaboration Git Hub Bitbucket Sourcetree Prototyping and Design Axure Photoshop G I M P Code Writing Helpers and Frameworks Sass Web Templates Twitter Bootstrap H T M L5 Boilerplate Skeleton Browser Support Checkcaniuse Collaboration and Communication Slack Linked In Organisation Trello","['Web Development', 'Students', 'Codingbootcamp', 'Devtools']",https://medium.com/@chrishullman/coding-bootcamp-challenges-1-so-many-dev-tools-df2d6b79bae,0,[],0,2,chris,M,0.13713656176653735,0.8628634382334627
Álvaro González San Pedro,EMEA Expansion Lead @Ironhack. Education passionate. Entrepreneur. Fanatic reader. Volunteer. Being the change I want to see in the world.,The dutch dream; or why tech talent is moving to the Netherlands (and us too!),2018-05-23 15:24:10,medium,"The dutch dream; or why tech talent is moving to the Netherlands (and us too!) The Netherlands has an acute shortage of tech talent, which will have to be filled by local new grads, career changers and international talent. High salaries and the best work-life balance worldwide are awaiting. And coding bootcamps are the fastest and most effective pathway to enter such a career in tech. Ironhack is opening a new campus in Amsterdam to prepare this new generation of digital creators for the Netherlands. Ironhack, the global tech school, is launching a new campus in Amsterdam. Apply now! You want to get a job in tech. First, stop being obsessed with Silicon Valley. And second, start looking to the Netherlands and considering it as your next move. Best talent is already doing so. And we just moved-in as well. Seriously, move here, now. You will not regret it, at all. A huge tech-talent shortage: in Amsterdam there are x26 job vacancy openings per available junior tech worker Still skeptical? Let’s start with the facts then. 1. Best European place to work in tech Amsterdam is a magnet for tech talent. According to I Amsterdam there is a pool of over 250k tech workers in the city. With an urban population of around one million people, that means that c. 25% of its population works in tech. Not bad, huh? Hubspot already pointed it out in a recent survey: the dutch capital is “ The best European Tech City to work in”. Surprised? Well, an average salary of tech workers of above €4k per month (net!) might have some guilt. But there is more. 2. Best work-life balance, worldwide! Times have changed. Quality of life matters, increasingly more than big pay-checks. And this is clearer for tech talent and millennial. The Netherlands is a top candidate country for them. It is the only country in Europe with 3 cities in the top 15 rank of Quality of Life by Numbeo and ranks #1 country in the world for work-life balance by O E C D, with only 0. 5% of people working over 50 hours per week. If you add that the commuting times to work are among the lowest in the world and that the cost of living is substantially lower than in other developed hubs, we can further understand why people love living in this country. Put it simple: pay well and live well, this is the dutch formula to attract the best talent. Where do I sign, boss?3. Massive tech talent shortage It is a fact: the Netherlands, and specially Amsterdam, is suffering a huge tech talent shortage. According to a recent report released by Startup Amsterdam and Amsterdam Economic Board the demand for junior tech talent doubled in 2017, reaching a shocking figure of x26 job vacancy openings per available junior tech worker. And according to Sterksen, in the Randstad area (the largest Dutch urban region including the major cities) 5 out of 6 tech jobs openings were not filled in 2016. Wait, whaaat? Looks right, companies are desperate to hire tech talent in the Netherlands, and you didn’t know it (yet)! Among the tech talent software developers are still the most sought-after candidates, as well as data scientists, who are extremely hard to find. Atomico pointed out the ‘dutch tech talent boom’ in their latest report “ The State of European Tech 2017”, estimating that Amsterdam has a community of over 90k software developers (vs. 67k in 2016), which means a year-on-year growth of +35% of developer community, the fastest growing in Europe together with Paris. 4. Huge variety of international tech companies. And growing! Tech names fight for the best talent. And the Netherlands is becoming the scenario of this battle, specially Amsterdam, where companies are moving-in unexpectedly fast: the city is now home to over 600 international tech corporates, of which 170 have chosen Amsterdam for their worldwide headquarters. Actually, many of the Silicon Valley big names themselves are setting up in Amsterdam, including Google, Uber, Netflix, Salesforce, Double Dutch or Cisco. And the Brexit will favor it even more. It is easy to understand why international companies love the Netherlands (and Amsterdam) to locate. Among other reasons: the country’s basic and secondary education level is well above other European countries; 90% of population speaks English; it is the gateway to Europe with a unique and fast transport links at 2–3 hour trip distance to main cities in the continent; it is home to the world’s latest data-transport hub and fastest internet broadband; and it is the one of the fastest early-adopter tech population in the world, which makes the city a perfect testbed for tech ventures and new tech products! What else do you need to know to “go dutch”?5. Home of worldwide renown innovators The Dutch are worldwide recognised for their entrepreneur and innovation spirit. Actually, the Netherlands has been home to some of the most relevant multinationals across industries, such I N G Bank, Philips, Amstel Brewery, Heineken, Exor, K L M, K P M G, Rabobank, Randstad, T N T Express or Unilever, to name a few. And, obviously, the Dutch have been also first movers in startups since early 90s: Booking. com, Tom Tom, We Transfer, Catawiki, Elastic, Takeaway. com, Shapeways, Travelbird, Ace& Tate or The Next Web have been leading players in their respective fields and shaped entire industries. This is a country of entrepreneurs. It is not surprising then that Amsterdam, Eindhoven and The Hague are ranked #1, #2 and #3 in Europe, respectively, on “basic and post-school entrepreneurial education and training”, as pointed out by Global Entrepreneurship Monitor. And why does this matter? Easy: make your way into the Dutch tech scene and there is a high chance you could take part of the next generation of industry shaping businesses!6. A real tech community, committed and collaborative This, with no doubt, is my favourite part of the Dutch tech scene, so far. The sense of community in the Dutch ecosystem is incredible. Once you land here you feel part of the family and receive huge support from different ends. To give you a sense of it: in just 2 weeks since we arrived to Amsterdam we have been already welcomed by top entrepreneur communities in the city such Startup Grind and Startup Weekend Amsterdam ( Techstars); by A M Sx Tech, the biggest and private slack community in the city; by top co-working spaces and community hubs such We Work Metropool, T Q, B. Amsterdam, Rent24 and C I C Rotterdam; by the leading tech schools transforming entrepreneurial education such Growth Tribe, The Talent Institute and Restart. Network; by tech-specialised advisors such New People and L X A; by leading Universities such us Hogeschool — University of Rotterdam; or by tech big corporates such as Atlassian and Unilever, to name a few! Other players reshaping the local and global tech scene (and who we expect to meet soon) are the worldwide renown accelerators Rockstart, Startupboocamp and Collider; the science-specialised incubator A C E ( Amsterdam Center for Entrepreneurship), the revolutionising training program Startup Foundation Experience, the national startup supporting community Founded in Holland, the country’s largest tech university Delft University of Technology, the smartest km² in the Netherlands High Tech Campus Eindhoven and top local V Cs such us Prime Ventures, Endeit Capital, hen Q and Peak Capital. 7. Public and private sectors working with one shared goal But most importantly, what really sets the Netherlands apart from other tech hubs are the joint forces between public and private sectors to support new ventures, tech talent and entrepreneurs. Led by Startup Amsterdam and Startup Delta, the public and private sectors are working aligned to build unique initiatives to bring the best international talent to the country. Among other they launched: The ‘ Tech Housing’ project: a large tech house that will provide an easy soft-landing place for incoming tech talent as well as connecting these tech nomads with like-minded peers. Project A: the Government is subsidising top international tech talent to fly-in to have them meet with Dutch tech companies and visit the country. Reschooling programs: great support to tech related reschooling programs in fields of developing, growth hacking and U I/ U X design. Examples of these are: B S S A and Growth Tribe. Startup visa: A residence permit that gives ambitious international non- E U entrepreneurs a year to start an innovative company in the Netherlands. In brief, the Netherlands is building strong pillars to become the friendliest city in the world for tech talent and entrepreneurs. Watch-out Silicon Valley! So, are you ready to join the Dutch tech dream? We can’t stress this enough. The Netherlands has an acute shortage of tech talent, and startups and tech companies are constantly searching for new talent. At the moment, the are x26 job vacancies for every junior tech worker. Yes, you read well. And you could be part of it. The most sought-after role is software developer, followed by data scientist. Other specialty roles such as digital marketing or growth hacking are also in high demand. Junior entry level average salaries for these roles are usually €35k+ (among highest in Europe), with senior levels approaching to the €100k figure. Ironhackers have diverse backgrounds, but they all have one thing in common: they are brave as hell! How to become part of it? Well, tech recruiters are no longer recruiting based upon educational background, but instead focusing on the programming skills of the potential recruits. Not surprisingly, the number of developers that dropout secondary education is larger than in any other industry. Then, a university degree is no longer a guarantee for success. You need to get real-life and tangible skills. We recommend: Take an online course. This is the best way to discover your interests and skills-fit. There’s plenty of resources out there. Udemy and Lynda. com have excellent short online programs. Codeacademy is your best bet to start coding. Get a feel for the different disciplines, decide what you would like to specialize in, and then commit to it! Join a tech bootcamp: once you have decided you area of expertise, a bootcamp will provide all the necessary skills you need to become very employable in a record time. You will learn skills that employers look for, stripping out the non-useful stuff and focusing on the most important aspects and immediately apply your new skills to solve real-world problems. We recommend you make your own due diligence when choosing the bootcamp ( Switchup and Coursereport are the reference directories to compare bootcamps). It is very important you feel comfortable with the value (and return on your time and money invested!) you will received from such an intensive experience. If you are looking for web-development and U X/ U I bootcamps, we have good news: we are launching a new campus in Amsterdam! Ironhack begs to differ, as we are obsessed to build the best tech school worldwide. We are top ranked by Switch Up and Coursereport, and we provide high-impact, condensed educational experiences designed to get you from zero to job-ready in 3 months. We’ve taught 1. 500+ Ironhackers globally already with a c. 90% placement rate after bootcamp. Our graduates are being employed by the top tech companies worldwide. We are already operating in Madrid, Barcelona, Paris, Berlin, Mexico, Miami and Sao Paolo, and have huge plans for the campus in Amsterdam! If you want to learn and to try our educational experience for free, you can join our Ironhack Amsterdam Meetup group and stay tuned for the free workshops we host every couple of weeks. Feel free to visit us in person (email to alvaro. gonzalez@ironhack. com to schedule an in person meeting) or ask more detailed info about the program at www. ironhack. com.","['Entrepreneurship', 'Netherlands', 'Ironhack', 'Codingbootcamp', 'Career Change']",https://medium.com/ironhack/https-medium-com-alvaro-gonzalez-the-dutch-tech-dream-ab3a00625582,11,['Ironhack'],1,1.7K,álvaro,Unknown,Unknown,Unknown
chibueze ukaegbu,,"LearnFactory Internship: Day 18 (May 23, 2018) – LearnFactory Nigeria – Medium",2018-05-25 07:28:35,medium,"Learn Factory Internship: Day 18 ( May 23, 2018)“ Follow your heart, it already knows the way”. Steve Jobs At prayers It was a slow day, as the interns spent all day by themselves solving problems and writing code. They pored over their notes on functions and objects and trying to assimilate all that Matthew had downloaded into their medulla oblangata. You could sense their hunger to learn and do this at a scale of the pros. I have absolute faith they will get there. The laughter that only code can elicit… At code It was interesting going round and seeing the intense looks of concentrations as they tried to crack the code. S P O T L I G H T O F T H E D A Y In the spotlight today is Zoe, the lady that always brings a smile with her. Zoe, smiling for the world I am Oduduabasi J. Asuquo, one of 4 children born to Prof & Dr Mrs James Asuquo. I’m a graduate of Civil Engineering from the Federal University of Technology, Owerri. I am a Jesus lover; and I love Singing, Smiling, Dancing, Reading, traveling, making friends and chatting plus looking for trouble to solve. I love the colors Black and White, my favorite meal is Fried rice and Chicken, plus chicken and any other thing and chicken. Have I said Chicken before? Yes, chicken. Beautiful and fun My favorite quote is “ God is able to do exceedingly abundantly above all I can ever ask of him”. I hate pride and pretense; love fairness and my life ambition is to be the best of myself always. You can never have a dull moment with Zoe. She is an amazing lady with an infectious laughter that will get you out of any mood. We are counting down to one month. Awesome… Awesome… Awesome. . . Stay beautiful. I’ll be seeing you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-18-may-23-2018-e96d7a097dc2,0,[],0,114,chibueze,M,0.0,1.0
Ray Choi,Entrepreneur and Product Manager,Why I Quit My Product Manager Job to Learn to Code – Ray Choi – Medium,2017-08-12 15:32:35,medium,"Why I Quit My Product Manager Job to Learn to Code My path to picking the coding bootcamp right for me. A little bit about me. I am a former Technology Consultant who built internal products leveraging E R P systems, and for a brief period, was also an acting co-owner of a small business. I graduated with an M B A from the Kellogg School of Management and was most recently the Lead Global Product Manager of the Find- A- Pro Advisor Marketplace at Intuit. Although I have worked with engineers for nearly a decade, and consider myself technically apt, I have very little “actual” coding experience. After consulting with my wife, I made the difficult decision to leave Intuit (before applying to any programs) and devote all my time to prepare for a coding bootcamp. Prior to leaving Intuit, I spent a month trying the self-study path and even toyed with part-time courses, however, I quickly realized that learning to code is more than a full-time job. Although my timing could have been more efficient, the time off allowed me to learn a lot about myself and energized me to reset my goals for the future! You can find more about me at the end of this blog. Why a coding bootcamp? Unlike most bootcamp students whose goal is a big pay increase post course completion, my reasons for joining were vastly different: Deepen my technical skillset to be able to think like an engineer Ability to speak the same alien language and empathize with engineers Leverage my entrepreneurship background and my M B A to build an M V P (for one of the many ideas circulating in my head) The Search Process. Surprise, surprise — my search began with Google. After my initial quest, I quickly realized that the market is oversaturated with coding bootcamps, so much that the pioneers of the industry had already shut their doors ( R I P Dev Bootcamp). Additionally, the value proposition for each bootcamp was exactly the same, they each promised a big paycheck. I took a step back and did what any true Product Manager would do in this situation — I brought out my white board and made a list! There were a few different factors that were inputs into my decision making process when picking a bootcamp class: List the top players in the industry: Hack Reactor, Galvanize, General Assembly. Note: App Academy’s payment structure was too steep (22% of your salary is a lot of money), and Berkeley Extension School by Trinity was on my list (because of the Berkeley brand and the low cost) but was eliminated when I couldn’t find reviews from past students Conduct “customer interviews”: I talked to over ten previous students from each of the top three programs on my list (as a Product Manager being able to gain deep customer empathy is one of the most important skills necessary when building great product — and this by far was the most helpful in deciding which bootcamp to enroll in) Understand the teaching style of each program: I enrolled in Hack Reactor’s new Structured Study Program ( S S P) which is supposed to prepare you for the immersive program Chat with admissions from all three of the bootcamps: I wanted to understand the admissions process, the caliber of teachers, and the background of the cohort Below is the high-level synthesis of my research: The Detour. After quitting my job and narrowing the list of coding bootcamps, I spent a month and a half preparing for my #1 choice, Hack Reactor. I started the prep process by doing Codecademy, Code School, Watch & Code ( Gordon has an amazing teaching style and I would highly recommended his course), Eloquent Java Script, and enrolling in Hack Reactor’s S S P (yes, I did a lot). The goal of Hack Reactor’s S S P is to prep you for the full-time immersive program, but in order to succeed in the pre-bootcamp you need to have some working knowledge of Java Script. My expectation for the pre-boot camp was to be taught a certain subject, understand best practices, learn why and when to use a certain function, and then put what you learned into practice, similar to business school. However, the teaching style of the S S P course is completely different. By enrolling in Hack Reactor you are expected to know the fundamentals of Java Script by doing Codecademy and Eloquent Java Script, and by going through practice problems similar to Codewars. However, I did not think this was enough to prepare you for Hack Reactor’s S S P, let alone the immersive program. Being that this was my first time truly learning to code, if I got stuck, or didn’t know what to do, or where to go, I was advised to search on Google for the answer. I know this is what people do in the real world but my goal was not to further my googling skills, but to be taught how to code. Hack Reactors guidance was to try to solve the question via Google, then ask your classmates, and then as a last resort, utilize Hack Reactor’s help desk. The help desk, which is staffed by Hackers-in- Residence (previous students), can be a hit or miss — some are awesome and will go the extra mile, other not so much. While I understand Hack Reactors teaching style is to help the individual be autonomous and learn on their own, I quickly learned that their teaching style (while it might work for hundreds of previous graduates), was not right for me. This is by no means a knock on Hack Reactor, I just realized that we were not a good fit for each other. The Decision. After hours of research, talking to previous students (highly recommended!), and putting in countless hours into learning Java Script, I decided to enroll in General Assembly’s Web Development Immersive program, and am super excited to start on Monday! While I still have some reservations, the pre-work alone has already confirmed that their teaching style is more conducive to my learning style. Also, the ability to study on campus to complete the pre-work and immerse myself into the environment is pretty cool! Some other notes. Many students have mentioned the difficulty in finding a job as an engineer. While my focus is not on becoming an engineer, I fully understand that coming out of any boot camp and finding a job as an engineer is going to be difficult and can take many months. Have patience and keep going at it my friends! Shout Out. Thank you to all of you that have taken the time to speak with me about their experience and helping me make the right decision! I would love to hear about your own experience after completing your coding bootcamp. Please feel free to leave a comment / message and I will try to connect with you one-on-one. A Bit More About Me. As a technology consultant at Accenture and Ernst & Young ( E Y) I focused on business strategy and building internal products leveraging E R P systems. As the acting co-owner of a Small Business and most recently, the Lead Global Product Manager for Find- A- Pro Advisor at Intuit, I learned to be the voice of the customer and build deep customer empathy. At the Kellogg School of Management at Northwestern University I focused on Entrepreneurship and was also briefly exposed me to the world of programming. Disclaimer: This blog represented my own opinions and as such does not reflect the opinions of any organizations. I reserve the right to change my opinion in the future.","['Programming', 'Codingbootcamp', 'Product Management', 'Mba', 'Coding']",https://medium.com/@raybchoi/why-i-quit-my-product-manager-job-to-learn-to-code-ba2483d47f53,2,"['Dev Bootcamp', 'Hack Reactor', 'Galvanize', 'General Assembly', 'App Academy']",5,2,ray,M,0.02610614990915619,0.9738938500908438
Andrew Kemp,"Software Developer, studying at Makers Academy",Why Makers Academy? – Andrew Kemp – Medium,2018-06-03 21:22:06,medium,"Why Makers Academy? As detailed in my previous blog post, last year I quit my job of 13 years and decided to pursue a new career as a developer. Having made the decision to do this, I was faced with the next big decision, how to go about making it happen? My starting point was an article from techworld. com, which detailed 19 coding courses and bootcamps based in the U K. I made a list of each of the courses/bootcamps detailing where they were located (if not based online), their cost and the course length. The next step was… Research, Research, Research I was able to rule out a few courses/bootcamps from the very start due to their locations being too far away from where I live; however I ended up adding a few extra in their place after finding some others, which weren't listed in the techworld article. Given the amount of money the prospective courses were going to cost, I wanted to be as thorough as possible in my research and making my choice. I decided to look at the course content, previous student stories, when and how they were founded, if they had any blogs, youtube videos, twitter comments, etc. I wanted to gather as much information as I could about each course/bootcamp, literally leaving no stone unturned! During the first stage of my research, I’d noted that a lot of the courses had links to the following course review sites, Switchup, Quora and Course Report. This added another criteria to my search and proved to be a very important factor in helping me make my decision. I read through the overall review for each course and what seemed like a never-ending list of ex-students’ reviews. In order to keep track of my findings, I kept a simple tally of the number of positive and negative reviews, paying particular attention to any negative reviews and the reasons for these. I ended up spending several days building up a profile on each course. Once this was complete, I could quite easily rule out some of the courses, mainly due to the overall course ratings on the aforementioned sites and some of the ex-students reviews. I found myself left with a shortlist of three; Makers Academy and two others. The next step was to try and arrange a visit; something which was encouraged by Makers and one of the other course providers. This gave me the opportunity to see the offices, meet some of the staff, ask questions and to get an overall feeling for each. The third course didn’t mention anything about offering the opportunity to visit, which eventually put me off applying for a place there. I managed to arrange visits on consecutive days, which meant only one trip to London. The first was at the other course provider and was more of a meetup event, as opposed to a guided tour. Having not attended a meetup prior to this visit, I didn’t really know what to expect. The course provider had given some brief information about there being an opportunity to practice some coding; however, they didn’t reveal much more than that. I had preconceived ideas that there’d be some kind of talk about the course, an opportunity to speak to some of the students and the opportunity to work on some code. Only the latter of these turned out to be true. When I arrived, there was a queue out of the door whilst people registered. Once I’d got to the front of the queue and signed in, I was pointed in the direction of two large tables, which basically filled the room. I was told that one was for people working on Free Code Camp modules, and the other was for people working on Code Wars. That there was the extent of my interaction with the staff. After everyone had signed in, they disappeared upstairs and would only return towards the end of the hour and a half session that was advertised. By that point, I had already formed an unfavourable opinion of the course, given how unwelcoming and uninformative the staff had been. My visit to Makers the following day was the polar opposite; I was met by an individual member of staff, taken on a guided tour, provided with promotional material about the course, given the opportunity to ask as many questions as I wanted and given personal contact information; just in case I had any further questions after the visit. It would be easy to say that this visit made my mind up for me; however, looking back at my whole selection process, there were several indicators pointing me towards Makers Academy. I found the website to be the most comprehensive with just the right level of information about the curriculum, enough to entice wannabe developers to explore them as a serious option. I liked the fact that the course had specific entry criteria, meaning everyone is encouraged to have completed a number of different tasks prior to applying for an interview. The staff and students all came across super friendly and welcoming during my visit. Finally, on the course review sites, I found several negative reviews in respect of competitor courses, which made reference to how people wished they had put in extra effort to secure a place at Makers. It was all these factors combined which led me to select Makers Academy as my course of choice, and this proved to be the right choice. From day one of the pre-course I’ve enjoyed every minute of the experience and would say it has been one of the best decisions I’ve ever made. I wouldn’t hesitate recommending Makers Academy to anyone who is serious about changing career and retraining as a developer.","['Coding', 'Web Development', 'Codingbootcamp', 'Makersacademy']",https://medium.com/@andyk_5/why-makers-academy-b453c6684794,1,[],0,8,andrew,M,0.0037934542159017816,0.9962065457840982
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 80 / Feels Good – conshus – Medium,2018-08-02 12:14:38,medium,"Day 80 / Feels Goodliner notes: Professional: Seems like I may be getting a better understanding of Angular. As I’m going through the tutorial, I try to write the code to accomplish what they are talking about before looking at what they have. I’ve been getting pretty close. Then I would try to understand what the differences are. Personal: Went downtown to meet with some friends. They wanted to talk about possibly working together on some projects that they have coming up. Feels good when people think you’re good enough with coding that you can help them with challenges they are facing. Got home and started playing around with some design stuff for my personal site and still working on the dashboard layout for the radio station project. Going in to the office again. I want to finish the tutorial today and dive deeper into more advanced topics that we’ll probably be using in upcoming projects. After work, some of my coworkers will be going to the U C F Coding Bootcamp presentation day of recent graduates. Will be cool to see what they have been learning and what projects they have been working on. Running late, so going to get ready and start my day. Have a great one!peace piece Dwane / conshusdwane. io / H I P H O Pand C O D E. com","['Programming', 'Codingbootcamp', 'Hip Hop', 'Code', 'Coding']",https://medium.com/@conshus/day-80-feels-good-9fca8ea56e12,0,['The Iron Yard'],1,13,conshus,Unknown,Unknown,Unknown
Martin Adams,"Author, Land: A New Paradigm for a Thriving World http://www.unitism.com",Full-Stack Software Developer Bootcamp at Enspiral Dev Academy,2016-11-06 19:11:59,medium,"Full- Stack Software Developer Bootcamp at Enspiral Dev Academy It’s been said that software development is both an art and a science. It’s an art because it takes skill, patience, and repeated practice to master. And just like art, software development has the potential to produce works of beauty. It’s also a science because it’s a systematic body of knowledge that is inherently logical, structured, and interrelated in its parts. And just like science, software development has the potential to produce technology bordering on the magical. Mt. Taranaki, as seen on flight from Auckland to Wellington on August 28, 2016. Taranaki is to the Māori a sacred mountain. Photo © 2016 Creative Commons Martin Adams Knowing this, imagine therefore how excited I felt when I boarded a plane on August 26, 2016, in San Francisco, California, to fly to Wellington— New Zealand’s up-and-coming tech capital. There, over the course of the next two months, I would dedicate myself to the study of software development at an organization called Enspiral Dev Academy. Thus began one of the greatest adventures of my life—and one I will always remember, for it has altered the course of my life. I’ve loved computers as far back as I can remember. In the 80’s, while other children were drawing doodles with crayons and paper, I would “draw” pictures on one of the first Macintosh computers ( I was fortunate enough to have had one at home), dedicate these drawings to my parents using a five-year old’s spelling and grammar, and then properly print and hand the drawings to them; and when I was 14, I created a functional word processor using Quick B A S I C. But even though computers remained a significant part of my life experience, I didn’t make software development the main focus of my adult life; meanwhile, the skills I eventually did acquire were largely self-taught. As a result, I had become under-skilled in an area that was becoming more in-demand than ever before. Land: A New Paradigm for a Thriving World, available as a gift at unitism. com Social justice is another passion of mine. I had written a book as an expression of that passion called Land: A New Paradigm for a Thriving World, which was published in 2015 by North Atlantic Books. Faced with worldwide ecosystem collapse as well as widespread wealth inequality and economic hardship, people around the world are looking for fresh solutions to many of society’s seemingly intractable issues. In writing Land, my intent was to present a core solution to a wide array of social and economic justice issues. Enspiral. com So it was no coincidence, then, that I chose to enroll in the Enspiral Dev Academy ( E D A) software developer bootcamp, since E D A itself has its roots in another collaborative business model that appeals to my sensibilities called Enspiral, a “virtual and physical network of companies and professionals brought together by a set of shared values and a passion for positive social impact. ” Since, to me, the key to success in business and in life lies in the spirit of collaboration, I resonated with Enspiral’s heart and mission. Thus, the choice for E D A became a straightforward one. I also discovered that E D A is more affordable than some other software development programs in the U. S. , even if you factor in the cost of the flight and local accommodations. It seems to me that Enspiral Dev Academy does both by educating the whole person. It takes great skill to teach software development in such a way that the artistic as well as the scientific elements of this craft are fully passed on and embedded into the student’s consciousness. A holistic curriculum that trains body, mind, and heart, has, in my experience, the potential to not only properly teach a craft, but also to become a transformative, life-changing experience in the process. But what exactly does a holistic software development program consist of? In addition to our already packed software development curriculum, we had semi-weekly yoga classes, daily mindfulness meditations, several daily group check-ins, weekly engineering empathy sessions, integrated team dynamic lessons, as well as a school-wide commitment to integrity, kindness, and effort. Rather than being a distraction from learning how to actually code, the emphasis on holistic learning helped me learn more. As a matter of fact, I’ve learned more in these nine weeks than I have in over ten years as a self-taught software developer. I personally found the holistic curriculum at E D A to be incredibly effective. However, one doesn’t need to know how to code in order to attend the Enspiral Dev Academy bootcamp: Many of my fellow classmates had never touched a single line of code prior to beginning their 9-week remote preparatory course that immediately preceded the 9-week Wellington-based bootcamp. By the end of the course, I was in awe at how well we all knew how to craft a fully-functioning web app. As a matter of fact, it seems to me that the most important qualities a student can bring to the program aren’t previous skills, but an openness to new experiences as well as a willingness to absorb new information. The Kōkako 2016 cohort at Enspiral Dev Academy. Bootcamp is not for the faint-of-heart, however. You’ll have to really want to learn to code, because it’s that intense desire that’ll get you through the day, each and every day. For example, shortly upon my arrival in Aotearoa (the Māori name for New Zealand) I tore my right knee meniscus and got tendonitis in the right ankle; as a result I was experiencing acute pain and was on crutches for much of my time there (fortunately, intensive care units in Aotearoa are free for those with accidents); I also caught the flu. Yet nothing dissuaded me from making the most of my time there, precisely because I had had this burning desire to learn and absorb new information. My morning flat white at Fidel’s. Sometimes, I would get indulgent and have two. Large. It was during that time that I also fell in love with Wellington’s coffee culture: I would have one or two flat whites each morning (the Kiwi equivalent to a latte)—with almond milk and a side of coconut oil, bulletproof coffee-style for sustained energy—to help me get through the day. Little treats and rewards like that encouraged me to keep going, even when the going got tough. The spirit of teamwork and passion of E D A’s instructors was also evident: I could tell that they not only lived to code and coded for a living, but also loved to collaboratively work together and freely share their knowledge. Having them as role models made the transition from student to graduate significantly easier (thanks, Simon Tegg, Piet Geursen, mix irving, Joseph Quested, Sarrah Jayne, et al!) Now that I’m back in California, what happened seems a little bit like a strange dream: Did I really just learn how to code in a lovely, far away country full of kind people… did that really just happen? Yet, when I connect with my fellow teammates or open the now familiar Atom code editor and look at code such as:// Java Script: Feathers J S framework with Redux integrationexport function get Actions() { return (dispatch) => { api. service('actions')  . find()  . then((actions) => {  let obj = Object. assign(. . . actions. data. map((action) => ({ [action. id]: action })))  dispatch({ type: ' R E C E I V E_ A C T I O N S', payload: obj })  }) }} I remember that this all really did happen, and that I really do know how to code. Tears are coming to my eyes as I’m writing this: By having learned how to code, I was given a gift of immense value, for this gift can help me build the startup I’ve been wanting to build for many years, provide a stable financial source for future social endeavors, and support loved ones for the rest of my life. To learn more about Enspiral Dev Academy and to qualify for a $250 discount, click here (though I receive a small commission for each referral, I wholeheartedly recommend E D A on its own merits, regardless). Standing on top of a hill in Newtown Park, with a view of New Zealand’s South Island in the far background.","['Coding', 'Enspiral', 'Coding Bootcamps', 'New Zealand', 'Silicon Valley']",https://medium.com/enspiral-tales/full-stack-software-developer-bootcamp-at-enspiral-dev-academy-6e9fbdac1974,1,[],0,22,martin,M,0.004795711152627731,0.9952042888473722
Omar De Los Santos,Software Developer,The Difference Between a Coding Bootcamp and an Apprenticeship: Part 2,2018-05-24 02:19:04,medium,"The Difference Between a Coding Bootcamp and an Apprenticeship: Part 2 Walking the Long Road It’s currently my third day as an apprentice, and I’m surprised by how much independence I’m being given to learn. As a bootcamp student, my entire day was booked between lectures, code demos, pair programming, and homework. As a graduate, I had to meet a quota for job applications; I was expected to attend at least one networking event a week; and I also had algorithms and interview preparation. As an apprentice, my first task — aside from H R paperwork — is to make a version of Tic Tac Toe built on Clojure (which requires first learning Clojure). I’m almost tempted to self impose a bootcamp structure. I could see myself looking up and following tutorials to quickly build something much like I’ve been used to doing during these last few months. Instead, I’m embracing the “wear the white belt” mentality and reading Clojure for the Brave and True in order to learn functional programming. I realize that I have a long way to go, and I need to pace myself. The Long Road By their very nature, bootcamps promote the idea of a short, rugged path to software development. On our first day, we were asked to repeat (loudly) “ I am a software developer” multiple times. I certainly didn’t believe that on day one, but it did became a little more believable each day given the almost tangible progress we experienced each day. Coming out of a bootcamp, I found it difficult to think long-term. I was mentally exhausted. I was falling into financial debt. Every minute (often including lunch time) between 9 A M and 6 P M during the previous three months had been spent learning, reading, or coding. T A’s checked our attendance three times a day. We had simply been too preoccupied to think further past the next assessment or the next showcase project. Dave and Ade stress being prepared for the long journey, but I felt too exhausted from sprinting (39). When faced with the freedom of graduation, I didn’t know whether to reinforce the technologies I had learned or to try learning new technologies. I didn’t feel completely satisfied having built applications that I could not fully understand or explain to others. I found myself spending more time on side projects and tutorials than on networking or submitting job applications. Though it often felt that I was investing that time in order to get a job, I now realize that I truly wanted to keep learning. And I wanted to do so in an environment that values mentorship. As an apprentice with 8th Light, you’re getting paid to learn for months before being promoted to Software Crafter. Only then do you begin working on paid client projects. Just as you might be thinking long-term, so must your company that is investing time and money into your education and development as a crafter. A Different Road Refreshingly, Dave and Ade don’t discourage walking away from software development if, in mapping out one’s ideal path, the path of an apprentice doesn’t align with one’s own values. However, they do warn that if one decides to return to software development, many software organizations will want to hear a justification for their absence (54). For the vast majority of bootcamp students, software development is already the different road. Given their lack of software development experience, most graduates will have to justify their transition into software development. Companies offering apprenticeships often value the non-technical experiences that candidates have to offer. After all, a crafter’s commitment to a growth mindset includes learning from their apprentices.","['Programming', 'Apprenticeship', 'Codingbootcamp']",https://medium.com/@omarnyte/the-difference-between-a-coding-bootcamp-and-an-apprenticeship-part-2-98bf92490d10,2,[],0,0,omar,M,0.00476718171743994,0.99523281828256
Careerscore,"We empower tech professionals to make sound, data-driven decisions using our career management platform https://careerscore.com/",What is a Growth Hacker and how to become one after a coding bootcamp,2016-06-02 14:08:13,medium,"What is a Growth Hacker and how to become one after a coding bootcamp So what is a growth hacker? Well, a growth hacker is someone focused on trying to rapidly and efficiently grow a business. Growth hackers achieve growth using rapid experimentation across different marketing channels and product development. They’re focused on moving the mark on that growth metric — in other words, growth is their compass, their true north. The role isn’t like traditional marketing, in fact, it merges elements of engineering, product management, and marketing to achieve objectives. This can range from anything from creating viral hooks or loops in the product itself to clever marketing tactics that encourage users to bring others to a platform Across the board though, growth hackers depend on a measurable process to test their growth hypothesis so they can know the value they are creating. Do you have the skills to excel on this career path ? Obsessed with data and analytics Creative problem-solving Marketing experience Ideally some experience coding Constant learner Enjoys pushing the limits If you answered yes to most of the skills needed, congratulations, I advise you to take the leap and start applying to these types of positions. We want to get you started with some resources that you shouldn’t miss : Growth Hackers: Growth Hackers is how teams unleash their company’s growth potential. With a community of more than 150, 000 members, growth professionals can discover emerging opportunities and collaborate privately with their teams to test these opportunities. Reddit Channel: An amazing resource to keep up to date with the growth hacking community Optimizely: Create seamless A/ B tests and optimize your marketing campaigns Mixpanel: The best analytics suite to measure and track funnel conversions. Very easy to set up. Mandrill: Marketing automation is critical for any growth hacker. Mandrill is the easiest tool out there. Hooked: This book introduces readers to the “ Hook Model, ” a four steps process companies use to build customer habits. Through consecutive hook cycles, successful products reach their ultimate goal of bringing users back repeatedly .","['Growth Hacking', 'Startup', 'Codingbootcamp']",https://medium.com/@mycareerscore/what-is-a-growth-hacker-and-how-to-become-one-after-a-coding-bootcamp-43504d919b99,0,[],0,0,careerscore,Unknown,Unknown,Unknown
Imogen Kutz,I don’t take enough selfies…,Basic bitch problems – Imogen Kutz – Medium,2017-03-01 10:51:04,medium,"I got it, but now I don’t get it… Here are some pictures of dogs I found on google instead. Basic bitch problems Makers Academy 12 weeks coding bootcamp, end of week 2, and I’m finding things to grumble about. Don’t get me wrong. I’m loving the course and my cohort is great and I’m learning so much it’s a complete mindfuck to even think about how far I’ve already come from where I started. But there’s always some niggling thing, right?1. Huge office, 4 loos There are only 4 unisex loos and you always have to queue. Always. You stand there helplessly thinking about all the code you could be writing if only you didn’t need to keep your place in the loo queue. To make matters worse, you also have to awkwardly stand making small talk with people as you wait to park your ass on that freshly warmed loo seat…*shudder* No one wants their porcelain throne newly cheeked. 2. Laptops need power, who knew? You’d think it would be annoying enough to find that the tabletop power ports randomly don’t seem to work. However, they’re just desktop extension cables precariously chained together feeding out from wall sockets which simply exacerbates the problem . I found myself crawling under the desk looking for a working socket, only to come up again with leggings full of splinters. As it turns out, old wooden floors are assholes that hate your legs. This would have been the simpler solution. 3. Nevernight sky Fun fact. London has all the pollutions, so its light pollution means it never really gets fully dark. The night sky always looks like very early dawn. All night. It’s just an oddly illuminated purple all night. It freaks me out. I look at the night sky and I feel like I’ve either stayed up until the crack of dawn, or the sun has only just set. It’s a horrible broken thing with no stars. 4. The city thinks it’s too good for fresh air If I’m not getting a lungful of car fumes, someone is huffing cigarette smoke into my face. What do people have against clean air here? It’s like everyone is doing everything they can to rid London of all that pesky odourless gas that we supposedly need to live. 5. No one can drive here I was talking to someone about how bad drivers were in London. We were standing on a street corner at the time. As if the traffic was rushing to prove my point, we saw 2 people driving in the opposite lane to get around a queue, one B M W drive around the car in front at a junction in a single-lane road, and 1 cart thing ignoring the existence of defined two-way traffic lanes, all the space of about 5 minutes. Accurate depiction of driving tests in London… Not to mention all the times I’ve seen illegal turns in the road, all the cars, vans, lorries, and buses that stop across pedestrian walkways when the lights have already turned in some misguided attempt to get further forward in the traffic queue, and the number of times I’ve seen cars cut in front of each other. I’ve even seen the tiniest cars cut up buses like they have some kind of death wish. Oh, and there was also that time a bus I was on drove into a stationary coach in the next lane as it was driving past, fucking up its wing mirror… Right, now this totally fruitless basic rant of things that have barely even bothered me is over, I think I need a nap… Let’s be honest, I just couldn’t think of any quality content for this week’s post…","['Makersacademy', 'Basicbitch', 'Codingbootcamp']",https://medium.com/@allthatilk/basic-bitch-problems-a702996b861a,0,[],0,0,imogen,F,1.0,0.0
Abi Noda,Independent developer and founder of http://pullreminders.com,Coding Bootcamp Hiring Stats are Still Misleading and Harmful,2017-07-17 17:00:21,medium,"Coding Bootcamp Hiring Stats are Still Misleading and Harmful C I R R coding bootcamp outcomes report The opinions expressed here represent my own and not those of my current or former employer. When I worked at Dev Bootcamp, we spent a lot of time looking at how our competitors advertised hiring rates and salaries. If you were someone researching bootcamps to attend, you would’ve seen many claiming 95%+ hiring rates and six figure starting salaries. As one of the earliest code schools with experience employing thousands of graduates, many of these numbers seemed questionable to us. When we looked at the fine print and calculation behind these numbers, we found manipulative formulas and in many cases no sign of evidence whatsoever. Schools were preying on potential customers with untruthful advertising. A few months ago, a number of well-known schools formed a new organization called The Council on Integrity in Results Reporting ( C I R R) that standardizes the way their outcomes are measured, reported, and audited. Standardized formulas and independent auditing will help stop false advertising, but in some ways, the C I R R feels like an evolved form of marketing by organizations that are well positioned to profit from it. The problem with C I R R is that it favors selective schools over more accessible ones. For example, if someone told you that “ School A” employed 90% of their students and “ School B” employed 60% of its graduates, which would you think was the better program? Of course School A. But what if the full picture looked like this: School A: Requires S A T scores of > 1500 and 160 hours of prior programming experience in order to begin the program Admits 250 students per year Employs 90% of students School B: Requires basic logic exercises in order to begin the program Admits 1000 students per year Employs 60% of students Refunds tuition to those that are unable to land jobs School A admits a small number of students who may come from elite Silicon Valley companies and have demonstrated academic aptitude and prior programming experience. To no surprise, almost all of these students finish the program and find jobs. School B accepts anyone who’s motivated even with little or no prior experience, and still over half of their students manage to find jobs after graduating. The rest get their money back. Now ask yourself, which delivers a better program? Competition in the coding bootcamp industry is really tough right now. Everyone is looking for an edge. I expect C I R R member schools will double down on outcomes-based advertising and try to discredit programs that have inferior employment numbers. One problem with this as I have described is that it is simply inaccurate to use hiring statistics as the primary measure of a program’s quality. Another problem is that both new and existing schools will be pressured to prop up their hiring statistics in part through selective admission processes. This could end up affecting under-served groups most and ultimately hurt diversity in the tech industry. Admissions processes often carry with them hard-to-see discriminatory elements for different socio-economic groups. Even decades-old tools like the S A T have been found to have significant racial bias. We need to make access to to a career in technology more accessible, not less. If bootcamps are paving the way to the educational model of the future, they must find a way to be both effective and accessible, and then communicate their merits to consumers in a verifiable way.","['Programming', 'Codingbootcamp', 'Web Development', 'Startup']",https://medium.com/@abinoda/coding-bootcamp-placement-rates-are-still-misleading-and-harmful-a761a0b9ecaf,1,['Dev Bootcamp'],1,93,abi,F,0.9588785046728971,0.041121495327102804
Isiah VanBrackle,,Opening Doors with an Invisible Key – Isiah VanBrackle – Medium,2018-08-08 15:24:29,medium,"Opening Doors with an Invisible Key I recently started learning how to code at the Flatiron School A C C E S S L A B S bootcamp. Now that i’ve survived the first 3 weeks marking the end of the first mod, I feel comfortable enough to actually talk about it. In that last week we were assigned partners and tasked with making a working Command Line App.  My partner and i decided we wanted to make use of an Application Program Interface. We figured as native New Yorkers something that would allow a user to track the trains the needed to get around would be great. After actually trying to mess with the M T A’s A P I, and learning just how hard it was to deal with… we decided to try a more user friendly A P I. Enter the Yelp A P I. Building our first app after just three weeks of coding went as well as one would expect. Before long project week was over and it was time to present. We tested the app one last time headed into the presentation room, closed my laptop, and gave the other presenters our full attention. Quick as you could blink, it was our turn. Our app allows a user to input their location and find the 5 highest rated bars in their area, and add the bars they loved or really want to visit to a user specific list. To show off these features, we changed our set location in front of the audience, and then moved to find bars near us. The code didn’t work. Something, between that moment and the last time we tested our code, had broken. We played it cool, re-ran the app, and stayed away from that portion of the code. Part of the way through we realized The A P I Key was shunted out of the environment when i closed my laptop. This behavior is actually expected. As developers we don’t want to to store the Key permanently in our environment, and we don’t want to hard code it as the value of the A P I_ K E Y variable above, because it could be stolen when push up our code to github. I had already explicitly told any potential users how to set up their environment in our R E A D M E, to ensure they wouldn’t run into a similar error. But i hadn’t realized something as simple as closing my laptop would reset the environment. Basically it was if i strolled up to a speakeasy and said “ Insert Password Here” when asked for the passphrase. So now i had a problem, which i already knew one solution to. Following the instructions in my own R E A D M E. Every time we wanted to to run the app we should enter export Y E L P_ A P I_ K E Y=“insert key here” . However as simple as this solution seemed, it’d be undeniably annoying to have to do this every time we wanted to show someone our app. And what user would want to make use of an app they had to do work to use? There had to be another way. A way to keep the A P I key stored locally with out giving everyone access to it. After the slightest bit of research, it turned out that there were. One of those tools is dotenv https://github. com/bkeepers/dotenv . In their own words it’s “ A Ruby gem to load environment variables from `. env`. ” Dotenv can be used with Rails Sinatra Rubyand it allows you to Write multi-line variables Substitute commands Add comments You’d put export Y E L P_ A P I_ K E Y=“insert key here” in the . env file you created in the root of your directory. Once this is all done, simply use ‘gitignore’ to make sure git doesn’t track the file and you’ve smoothly skirted the issue.","['API', 'Rubygems', 'Codingbootcamp']",https://medium.com/@squarepheonix/t-86827d958e9f,0,['Flatiron School'],1,0,isiah,M,0.0004666355576294914,0.9995333644423705
William A. Mooney,Christ Centered Dev. || Developer || Blogger,5th Week — Vivixx Coding Bootcamp – William A. Mooney – Medium,2017-07-17 13:45:22,medium,"5th Week — Vivixx Coding Bootcamp At a restaurant wearing my Vivixx Academy Coding Bootcamp shirt. During the 5th and final week of the 1st Semester we continued working on our personal website and on Tuesday July 4th, 2017 we uploaded what we had to Git Hub. io which has free basic hosting for your project’s. No one in the class is completely finished but hopefully soon each of us will have a nice and polished website. Once mine is completed I intend to get it properly hosted but for now Git Hub. io should work well. We didn’t have any challenges but we did go over Bootstrap which I ended up using for my website. The week went by fast as I was thinking about our one week break between semester’s and admittedly it caused my mind to wonder at times. To read more about how my semester break went click here. Christ Centered Dev. || Coding Bootcamp Student || Blogger","['Web Development', 'Codingbootcamp']",https://medium.com/@williammooney/5th-week-vivixx-coding-bootcamp-d83fe38edd7f,0,[],0,0,william,M,0.0038724765712618,0.9961275234287382
Jacob Moore,,Day 11 — DOM dom dom dom – Jacob Moore – Medium,2017-07-31 13:13:50,medium,"Day 11 — D O M dom dom dom Struggles: D O M. The Document Object Model. Why do you exist? Okay fine. I know W H Y it exists. I get it’s purpose. I get the idea of nodes and branches and all of that. Maybe it will make more sense in time and with examples but I don’t really understand the need to manipulate the D O M. Why not just fix the H T M L? I mean the study materials I went over showed literally creating a web page from the D O M. This seems… I don’t want to call it lazy. Maybe counterproductive? Messy? Sure let’s go with messy. Say you have a complex website built and you decide to fix one item with manipulating the D O M. Seems okay. But then you go back and adjust four more things. Then another 2, then 3, etc. At this point shouldn’t you just be creating a branch off the master, fixing the code, and then updating the master once it’s gone through Q/ A? Beyond the regular use of manipulating the D O M it mostly makes sense. Understood: I guess this is also a struggle that came to an understanding. Part of the weekly project revolves around using for loops based on a large data set to get returns. I spent probably 6 plus hours on this one for loop. I was trying to get a return from the array of only those with a select property that had an array containing more than 8 items. Six hours later I realized I was using inverted loops and nested loops when all I need to do was look at the base array. Now I just need to push them into their own arrays and then done. Looking forward to: Event listeners. I understand what they are and what they bring to websites. Lets do this functionality!!!","['JavaScript', 'Codingbootcamp', 'Amateur']",https://medium.com/@jacob.w.moore/day-11-dom-dom-dom-dom-aee824200321,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Liz Reyes,,the Banana Gorilla Problem – Liz Reyes – Medium,2018-05-29 02:19:03,medium,"the Banana Gorilla Problem There I was… hoping to get a banana, but I knew I was about to get a gorilla holding my damn banana…. I recently began attending a coding boot camp, so far this experience has been both, scary and exciting; I am learning crazy lots in such a short period of time. Currently, we are focusing on learning Ruby on Rails; when reviewing the core of this programming language, we encountered the banana gorilla problem. This blog post will discuss how to share functionality amongst classes when inheritance is not an option and without breaking the principle of keeping your code dry. To dive on this problem, I will use a Jedi training example. This will be a pass or fail kind of training, where the teacher will make the final decision of whether a student will become Jedi or not. I will be creating a Teacher classs; This class will have the functionality of testing student’s Jedi skills (test_jedi_skills), and to make the final decision of ordaining students as Jedi (jedi_final_decision)class Teacher   def test_jedi_skills    puts ""testing Jedi Skills. . . ""    puts "" Jedi skills tested""   end   def jedi_final_decision    puts "" You are a now Jedi, may the force be with you""   end endqui_gon_jinn = Teacher. new qui_gon_jinn. jedi_final_decision # You are a now Jedi, may the force be with youqui_gon_jinn. test_jedi_skills # testing Jedi Skills. . . Jedi skills tested This training course will have T A whose main responsibility will be to test students’ Jedi skills. When attempting to code the functionalities of the T A, I could copy thetest_jedi_skills method from the Teacher class and paste it into the Teacher Assistant. This could work, but it would make my code wet and hard to maintain in the future. class Teacher Assistant def test_jedi_skills    puts ""testing Jedi Skills. . . ""    puts "" Jedi skills tested""  end end Another option could be to inherit from the Teacher class…but this is where it happens, the banana gorilla problem: I want my T A to have the functionality to test student Jedi skills, but I do not want the T A to make the final decision if a student becomes a Jedi or not!class Teacher Assistant < Teacherendobi_wan_kenobi = Teacher Assistant. newobi_wan_kenobi. test_jedi_skills# testing Jedi Skills. . . Jedi skills testedobi_wan_kenobi. jedi_final_decision# You are a now Jedi, may the force be with you In this example the T A inherits all the methods from the Teacher class, but I just want one functionality! I just want the banana. My solution to this problem will be to use a Ruby Module, which is a simple piece of code that collects behaviors or functions. I will make a module called Test Jedi Skills which will contain the test_jedi_skills method. module Test Jedi Skills  def test_jedi_skills   puts ""testing Jedi Skills. . . ""   puts "" Jedi skills tested""  end  end And now I will include in the Teacher and Teacher Assistant classes the module by adding this line of code include Test Jedi Skills Both classes have gained the test_jedi_skill method, in a dry way. module Test Jedi Skills  def test_jedi_skills   puts ""testing Jedi Skills. . . ""   puts "" Jedi skills tested""  end  endclass Teacher  include Test Jedi Skills   def jedi_final_decision    puts "" You are a now Jedi, may the force be with you""   end endclass Teacher Assistant   include Test Jedi Skillsendqui_gon_jinn = Teacher. new qui_gon_jinn. jedi_final_decision # You are a now Jedi, may the force be with youqui_gon_jinn. test_jedi_skills # testing Jedi Skills. . . Jedi skills testedobi_wan_kenobi = Teacher Assistant. newobi wan kenobi. test_jedi_skills # testing Jedi Skills. . . Jedi skills tested","['Ruby', 'Codingbootcamp', 'First Post', 'Learning To Code', 'Star Wars']",https://medium.com/@lizreyes_21757/the-banana-gorilla-problem-8a4c0bc49b0e,0,[],0,73,liz,F,1.0,0.0
Drew Curtis,,Coding Boot Camp: A new chapter – Drew Curtis – Medium,2018-10-03 05:04:32,medium,"Coding Boot Camp: A new chapter Three weeks ago I started a coding boot camp at Hack Reactor. I entered with confidence and a strong motivation to dive into the software engineering realm. This post will be about my experience so far and the lessons learned. Do you know that feeling when you start something but immediately wish you were more prepared? The first day of college inside an advanced mathematics class, the first day at a new job or a quarter of the way through a marathon. You’re getting a brief idea of day one at an intensive full-time boot camp. I had 35 other classmates and material got thrown at us like the old saying of water from a fire hydrant. My confidence was deflating as I had to routinely visit my friend Google to help me understand how to even start a problem. It also didn’t help that I realized that many of my 35 classmates were in a pre-boot camp program for 6–8 weeks. They were able to slice through the first weeks material in moments and start working on advanced projects from the start. I felt like I started a race with 10 times gravity pushing me down but it didn’t seem to hinder anyone else. This is a brief high-level summary of week 1. In week 2, I took a deep breath and remembered a quote that I will paraphrase “failure is the lack of trying vs the outcome”. I left a previous career and am diving into savings to pursue this passion. Even though I have feelings of inadequacy, I pushed them to the corner and decided to rise and grind. I started putting in 14–16 hour days to give me time to finish the assignments then go beyond. I was able to join a great study group of ambitious learners. This group provides structure to my learning in two ways. One, it provides a help lifeline if I’m stuck on a topic. Two, it allows me to help others which enhances and secures my learning. This week of hustling has allowed me to catch up with the others in this imaginary race in my mind. Now that I’m in week three, I feel a lot more confident with my ability to perform in this intensive environment. I’m tired, exhausted even, but my mind is growing at a thrilling pace. This boot camp is not a race against others. I’m racing against myself to become better every day. After all, if you don’t learn more than you currently know then you won’t become more than you are.",['Codingbootcamp'],https://medium.com/@drewcurtis99/coding-boot-camp-a-new-chapter-163ae277904f,2,['Hack Reactor'],1,52,drew,M,0.0864588857780683,0.9135411142219317
Pablo,Sorry for my awkward English…,Keeping Focused – Pablo – Medium,2018-08-30 11:41:00,medium,"Keeping Focused Nine months after completing Makers Academy coding bootcamp, I do not have a job. Makers have lined up seven interviews for me, and I have failed every single one of them… which is a bit of a pain to say the least. So back to job hunting. There are several ways to cope with this situation: let’s have a look at my options: Drink alcohol to oblivion : I would feel numb to any pain, I would live blissfully in a world of ever-entertaining solitude. Drink chamomile tea to oblivion… O K missing the point here… The aim of this blog is to make sure that I keep my focus on technology. My current project is a React project. A task I had to solve was to turn the following hard coded table into a not so hard coded table:<tr>  <td > < Card id=""1_heart. png"" text Value=' Ace' /></td>  <td > < Card id=""1_spade. png"" text Value=' Ace' /></td>  <td > < Card id=""1_club. png"" text Value=' Ace' /></td>  <td > < Card id=""1_diamond. png"" text Value=' Ace' /></td></tr><tr>  <td > < Card id=""king_heart. png"" text Value=' King' /></td>  <td > < Card id=""king_spade. png"" text Value=' King' /></td>  <td > < Card id=""king_club. png"" text Value=' King' /></td>  <td > < Card id=""king_diamond. png"" text Value=' King' /></td></tr><tr>  <td > < Card id=""queen_heart. png"" text Value=' Queen' /></td>  <td > < Card id=""queen_spade. png"" text Value=' Queen'/></td>  <td > < Card id=""queen_club. png"" text Value=' Queen'/></td>  <td > < Card id=""queen_diamond. png"" text Value=' Queen'/></td></tr><tr>  <td > < Card id=""jack_heart. png"" text Value=' Jack' /></td>  <td > < Card id=""jack_spade. png""text Value=' Jack'/></td>  <td > < Card id=""jack_club. png"" text Value=' Jack'/></td>  <td > < Card id=""jack_diamond. png""text Value=' Jack'/></td></tr><tr>  <td > < Card id=""10_heart. png"" text Value=' Ten' /></td>  <td > < Card id=""10_spade. png"" text Value=' Ten'/></td>  <td > < Card id=""10_club. png"" text Value=' Ten'/></td>  <td > < Card id=""10_diamond. png"" text Value=' Ten'/></td></tr><tr>  <td > < Card id=""9_heart. png"" text Value=' Nine' /></td>  <td > < Card id=""9_spade. png"" text Value=' Nine'/></td>  <td > < Card id=""9_club. png"" text Value=' Nine'/></td>  <td > < Card id=""9_diamond. png"" text Value=' Nine'/></td></tr><tr>  <td > < Card id=""8_heart. png"" text Value=' Eight' /></td>  <td > < Card id=""8_spade. png"" text Value=' Eight'/></td>  <td > < Card id=""8_club. png""text Value=' Eight'/></td>  <td > < Card id=""8_diamond. png"" text Value=' Eight'/></td></tr><tr>  <td > < Card id=""7_heart. png"" text Value=' Seven' /></td>  <td > < Card id=""7_spade. png"" text Value=' Seven'/></td>  <td > < Card id=""7_club. png"" text Value=' Seven'/></td>  <td > < Card id=""7_diamond. png"" text Value=' Seven'/></td></tr><tr>  <td > < Card id=""6_heart. png"" text Value=' Six' /></td>  <td > < Card id=""6_spade. png"" text Value=' Six'/></td>  <td > < Card id=""6_club. png"" text Value=' Six'/></td>  <td > < Card id=""6_diamond. png"" text Value=' Six'/></td></tr><tr>  <td > < Card id=""5_heart. png"" text Value=' Five' /></td>  <td > < Card id=""5_spade. png"" text Value=' Five'/></td>  <td > < Card id=""5_club. png"" text Value=' Five'/></td>  <td > < Card id=""5_diamond. png"" text Value=' Five'/></td></tr><tr>  <td > < Card id=""4_heart. png"" text Value=' Four' /></td>  <td > < Card id=""4_spade. png"" text Value=' Four'/></td>  <td > < Card id=""4_club. png"" text Value=' Four'/></td>  <td > < Card id=""4_diamond. png"" text Value=' Four'/></td></tr><tr>  <td > < Card id=""3_heart. png"" text Value=' Three' /></td>  <td > < Card id=""3_spade. png"" text Value=' Three'/></td>  <td > < Card id=""3_club. png"" text Value=' Three'/></td>  <td > < Card id=""3_diamond. png"" text Value=' Three'/></td></tr><tr>  <td > < Card id=""2_heart. png"" text Value=' Deuce' /></td>  <td > < Card id=""2_spade. png"" text Value=' Deuce'/></td>  <td > < Card id=""2_club. png"" text Value=' Deuce'/></td>  <td > < Card id=""2_diamond. png"" text Value=' Deuce'/></td></tr> Note that < Card/> is an imported React component, and we can notice a specific pattern :<tr><td > < Card id="" X_heart. png"" text Value=' Y' /></td><td > < Card id="" X_spade. png"" text Value=' Y'/></td><td > < Card id="" X_club. png"" text Value=' Y'/></td><td > < Card id="" X_diamond. png"" text Value=' Y'/></td></tr>where X is the beginning of the id props and Y is the text Value props. I want to make sure that the cards are displayed in a very specific order. In order to do that, I create the obj Match Order object and the Array Card Values array as follows :const obj Match Order ={  1: '1',  2:'king',  3: 'queen',  4: 'jack',  5: '10',  6: '9',  7: '8',  8: '7',  9: '6',  10: '5',  11: '4',  12: '3',  13: '2'}const Array Card Values = [ "" Ace"", "" King"", "" Queen"", "" Jack"", "" Ten"", "" Nine"",  "" Eight"", "" Seven"" , "" Six"", "" Five"", "" Four"", "" Three"", "" Two"" ] Also, I need to iterate through each suit. In order to do that, I need to create the suits array :const suits = [""_heart. png"", ""_spade. png"", ""_club. png"", ""_diamond. png"" ] We now have all the ingredients to make magic happen : the following code renders the exact same table that we had at the beginning : T A- D A A !<tr>  {    suits. map((suit)=> {      return (        <td key={suit}>          { Array Card Values. map((value, index) => {            let id Key = obj Match Order[index+1] + suit            let card Name = value            return ( < Card key={index} id={id Key} text Value={card Name}/>)          })          }        </td>      )    } )  }</tr> Sorry, the above code is not quite the same as the hardcoded table displayed at the beginning… Visually it did look fine on my app, but as Mitch points out (he has posted a comment on this article), I just create a single <tr>. I am giving it another shot :{ Array Card Values. map((value) => {  return (    <tr>      {suits. map((suit) => {        return (          <td>             < Card              id={`${value}_${suit}. png`}              text Value={value}              />           </td>          )      })      }    </tr>  )})} And this time we have 13 <tr> containing 4 <td> each, just like the table at the beginning… But I am not using my obj Match Order object to match the specific url used by every single Card item, and it is important that I use it because the Ace (for example) is not using the Ace_heart. png U R L, but rather 1_heart. png…etc. So in the end, we have :{ Array Card Values. map((value, index) => {  return (    <tr>      {suits. map((suit) => {        return (          <td>            < Card              id={`${obj Match Order[index+1]}${suit}`}              text Value={value}            />          </td>        )      })      }    </tr>  )})} Which gives us the same table as the one I am using at the beginning…. unless somebody comments otherwise 😅.","['JavaScript', 'Job Hunting', 'Codingbootcamp', 'React']",https://medium.com/@pabloandresvdl/keeping-focused-b07aa9ffd9bf,0,[],0,52,pablo,M,0.0015644484752295657,0.9984355515247705
Paul O'Brien,"CEO of MediaTech Ventures, CMO to #VC, #Startup Advisor. I get you funded. Father, marketer, author, #Austin. @seobrien & @AccelerateTexas. https://seobrien","From Cambridge to Coffee Barista, How University has been Sold to Us",2018-08-23 20:53:52,medium,"From Cambridge to Coffee Barista, How University has been Sold to Us C N B C’s Courtney Connley reported recently that Google, Apple and 13 other companies that no longer require employees to have a college degree, spurring some consideration of the implication on jobs and education. Google, Apple and 13 other companies that no longer require a college degree The economy continues to be a friendly place for job seekers today, and not just for the ultra-educated — economists…www. cnbc. com The amateur economist in me read the headline on the surface of it and thought, “great! More affirmation that $100, 000 in debt to get a piece of paper that says you’re academically capable of consuming and regurgitating information isn’t the right bar to set for tech jobs!” And then I pondered… Will this domino other companies to do the same? Will this encourage Universities to be more flexible or affordable? Wait… college degrees aren’t really R E Q U I R E D in any job, are they? They may have said it’s required but that’s never actually the case. Is this just a P R stunt to get more attention and candidates? For what jobs? News, economics, politics, and education mix up a funny set of correlations in the U. S. No, not a funny set, a disconcerting set. Connley noted in her article, “ In 2017, I B M’s vice president of talent Joanna Daley told C N B C Make It that about 15 percent of her company’s U. S. hires don’t have a four-year degree. She said that instead of looking exclusively at candidates who went to college, I B M now looks at candidates who have hands-on experience via a coding boot camp or an industry-related vocational class. ” We all know a few facts: The cost of education, particularly in the U. S. , is spiraling out of control The culture shifting our beliefs to “needing a college degree, ” has pushed too many into a system from which we just don’t have jobs/demand. Trade schools died, and again are flourishing as we realize this Certain skills that are highly educated (such as coding) don’t require such formal education I’ve touched on education a few times in my career; personally passionate about it though not working specifically therein (well, until Media Tech Ventures developed Collective). Years ago, I was a bit of a study of Jeff Selingo and the value of education. More recently, passionate about the pace of innovation and implication of technology in education. What bothers me is a notion pertaining to my primary work with startups and entrepreneurs; how we’re all born to be creative builders, entrepreneurial, and that institutionalized schooling seemingly beats that out of us. We grow up aspiring to be astronauts and artists but find our way into expensive 4 year plans that make us worker bees. Why do we perpetuate that?? College has been sold to us. In 100 years, I hope college Marketing professors are teaching of the golden age of Selling University. It’s a brilliant case study really, not unlike how De Beers made us all believe diamonds are invaluable… Create prestigious brands to which we aspire and from which people find themselves in lofty, celebrity, and valued positions Make that education more accessible to others Legislate how education is funded, public from private schools, and work with the government to help pay for the costs of those who struggle to afford it Offer courses and degrees that previously needed no extensive education, broadening the market further so that it serves everyone Ramp up the consumer appeal… “ Party Schools, ” Spring Break, free Macs (today, Free Alexa’s from Amazon), Back To School shopping season, Animal House movies… who doesn’t want to go to college??? Develop the market, from/through elementary schools, such that it perceives that one must get the college diploma. Your future depends on it. Lastly, constrain supply even further. Tenure professors. Aggressively compete with online education (see A S U). Legislate away For Profit secondary education. Credit: James Forrester; Creative Commons License, Wikipedia Someone should write a book in the brilliance of how University went from Cambridge, so that people could learn to be Academics, Doctors, and Lawyers, to a trillion dollar industry so people can learn to be coffee baristas. Perhaps this article is a start to that. What are the implications on the job market of Apple, Google, and I B M are not requiring a college degree anymore? Probably not much. Smart companies hire the right people, regardless of their papers. Hopefully though, this is the start of a return to some sanity in education. Originally published at seobrien. com on August 23, 2018.","['Education', 'Schools', 'University', 'Entrepreneurship', 'Codingbootcamp']",https://medium.com/@seobrien/from-cambridge-to-coffee-barista-how-university-has-been-sold-to-us-290b575b39de,30,[],0,36,paul,M,0.004197004293941091,0.9958029957060589
Shofi Bahalwan,Numberphile. Computerphile. Autodidact. Idiot.,On my way – Shofi Bahalwan – Medium,2017-06-03 00:44:19,medium,"On my way Music recommendation: Phil Collin’s, On My Way. Two days ago, I booked a Pair Programming Session with Makers Academy. Terrified, yes. Nervous, yes. No idea what will happen, yes. Excited, absolutely yes. “ It’s a dangerous business, walking out one’s front door”— Gandalf I have no idea what will happen, that’s the scariest part about all this. The exciting part is, I have a new goal. True, I’m risking my life for something very uncertain, especially for an international student, but I rather live fighting for something meaningful and chasing dreams no matter how far they are, than being hunted with regrets. After the pair programming session, either they accept me and I fly to London, or try again and loop. What’s the worst thing that could happen? I once read a book called the Art of War by Sun Tzu. In it he said, “ The general who wins the battle makes many calculations in his temple before the battle is fought. The general who loses makes but few calculations beforehand. ” So I said to myself, “ What’s the worst thing that could happen?” Fantasies of magical worlds and spy movies aside, the worst thing that can come out from this, is that I learn to code, which is a good thing. A very good thing. First because it’s something I’m passionate about. Second because it’s a valuable skill for one’s career. Why am I writing this blog? I want to share how I experience the difficulties and perks of being a n00b programmer. From the very beginning, I’ll try to record the challenges I face, techniques I acquire during my journey, and life as a beginning programmer in general. I know 100% that this isn’t going to be easy. Absolutely convinced. Especially, especially pursuing a career far far away from home. But I am ready. I might have no idea about the vast technology that I will have to know. But as I said, I am ready. Whatever it is, I know I can learn it. ( Yes, the feeling that you can learn anything at all under the sun, or beyond for that matter, is a feeling you get after making your “ Turing Machine” print “ Hello, World!”. ) I’ll post every Saturday. Don’t worry I won’t be talking about myself all the time, just what’s absolutely necessary to record what I’ve learnt. Programming concepts, tools, helpful articles and books on programming, some explanations about certain algorithms, awesome websites, and other things that I consider useful by the time I wrote the article. That’s a good reason to follow me right?","['Programming', 'Bootcamp', 'Codingbootcamp']",https://medium.com/@smbahalwan/on-my-way-3f2d5a378a68,0,[],0,0,shofi,Unknown,Unknown,Unknown
Chris Barfod,"Creative programmer, Dvorak keyboard user, always learning and working towards a better future.","Hello, World! – Chris Barfod – Medium",2018-03-07 05:47:01,medium,"Hello, World! Come with me on a journey through my mind as we explore the passages of my thoughts. Here I’ll be sharing the path I’m taking towards self-improvement and anything else that piques my interest. Hopefully my musings will engage and enrich the lives of those out there. Presently, I am undertaking a coding bootcamp to learn the skills necessary to code out in the wild. The first language I’ve been learning is Ruby, a dynamic, open source programming language with a focus on simplicity and productivity, as described on their website. At first, I found it challenging to link individual concepts without the ability to reference back to a source. Many times I have visualised the way my brain works as bits of information stored within a series of directories, much like a computer or a library. Each bit of information within a directory, which is in turn within another directory, and so on, until reaching the encompassing ‘home’ directory from where everything branches out. Today I had an ‘a-ha’ moment where everything suddenly clicked. The teacher was explaining ancestry within Ruby. As I had already created this branching class structure to visualise my brain and how I stored information, assimilating the connections necessary to understand these concepts was easy. Once the overarching concepts and their relation to all we had learnt was explained, everything became clear.","['Programming', 'Ruby', 'Coding', 'Codingbootcamp']",https://medium.com/@chrisbarfod/hello-world-e7b8e9734112,0,[],0,0,chris,M,0.13713656176653735,0.8628634382334627
Jacob Moore,,Day 6 - Responsive – Jacob Moore – Medium,2017-07-25 12:44:03,medium,Day 6 - Responsive Struggles: I personally despise our weekly project. I’ve thrown away so much code it’s disgusting. Yesterday I built a new Home page for the seventh time and then went back to my old code as it was cleaner. It took seeing the use of <div> as a container to finally fix an ongoing issue. C S S is my bane. Understood: Our reading for the weekend was about forms in H T M L and responsive web design. The form stuff all makes sense. The daily project we did yesterday was pretty simple as well. The responsive web design though took some time to adjust to. It’s all a matter of building mobile first then up that takes time. Looking forward to: Our assignment for the evening had to deal with Java Script. Finally! I like J S more than C S S.,"['Responsive Design', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-6-responsive-5a56b309bea1,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Bootcamp Advisors,"Your personal coach sharing advice to guide you through the coding bootcamp admissions, financing, and decision-making process. info@bootcampadvisors.com","Brand, Learning, or Network? – Bootcamp Advisors – Medium",2017-07-29 18:48:25,medium,"Brand, Learning, or Network? With the announcement of the recent closures of Dev Bootcamp and The Iron Yard, students, instructors, and leaders of coding bootcamps are unsettled. Given the incredible demand for software engineers, and in the boom of coding bootcamp options (which, by the way, is why we exist today to help you cut through the noise), we’re not worried about whether or not bootcamps are a valuable, or high return learning investment. We do, however, know that it takes a thoughtful process to make the most of your experience. Let’s get at some of the learning goals that we hear from our students, which tend to fit into three main categories: Brand: This is about the community and the signal that the bootcamp serves as in your local job market. The community comes out to demo days and supports their work because the bootcamp has built goodwill in the local market, contributes to the growth of the local tech scene, and is known for producing grads that employers want to hire. Network: Beyond being ‘known’ in the community, a networked bootcamp knows the local market well enough to be able to open the doors at local tech companies and connect the dots between companies looking for junior talent, and you as a graduate. While not the only important factor to consider, all the strong learning preparation in the world doesn’t guarantee you’ll get a job — but a strong introduction in your local search market can make all the difference. Learning: Some students have a strong foundation as a self-taught developer, but want to formalize that, establish good habits, and formally credential their skills. Others are using the bootcamp to start their journey, and want to be sure that the foundation that the program is built upon has a strong basis in building knowledge. The strongest bootcamps know how to balance and excel in all three of these areas; be sure you’re meeting the needs of your specific situation. Knowing why you’re attending a bootcamp is the first major step in the process. Reach out at info@bootcampadvisors. com; we’d love to help you through the decision-making process!","['Programming', 'Learn To Code', 'Software Development', 'Codingbootcamp']",https://medium.com/@BootcampAdvisor/brand-learning-or-network-8ab42e8fae7c,3,"['Dev Bootcamp', 'The Iron Yard']",2,1,bootcamp,Unknown,Unknown,Unknown
Scott Bowman,,Build Rapport in the Community and Lasting Connections with Prospective Talent through Hackathons,2017-10-04 12:55:59,medium,"Build Rapport in the Community and Lasting Connections with Prospective Talent through Hackathons Bootcampers Collective, L L C is seeking partnerships with local software companies in Colorado through Hackathon event hosting and community mentorship. Founded in March 2017 as a Meetup. com group and Slack. com community, Bootcampers Collective has grown to hosting educational, hands-on experiences in web development across the Denver and Boulder metro Bootcampers Collective’s primary audience is Coding Bootcamp students and graduates as well as Self-taught and Experienced web and software developers looking for a challenge on the side. Event Structure The signature event structure is a short Hackathon event lasting 6–10 hours. We prepare new and experienced developers with an orientation 36 hours prior to the event. Typically hosted on the premises of the company in focus, attendees brainstorm, organize, design, and develop a community-focused and open-source application using agnostic front- and back-end technologies in Agile / Sprint hybrid teams. The Opportunity Host an event with us! Bootcampers Collective is flexible to your needs as an organization and adapts events to account for Denver and Boulder community. Hackathons are a great way to inspire and motivate your workforce. Hackathons can be adapted to serve the needs of your local community. Hackathons create tech that solves problems. Hackathons allow organizations to creatively demonstrate their products. Hackathons attract talented developers and allow your organization to evaluate their performance. Hackathons educate both experienced and inexperienced developers as they work together to solve a common problem and grows mentoring relationships. Hackathons inspire leadership among your Junior, Mid, and Senior developers. Who will step up? Contact us Bootcampers Collective is excited to partner with you for our next community Hackathon! We are accepting inquiries and scheduling meetings with interested parties now. If interested, please contact Charlie Beck ( C E O) at info@bootcamperscollective. com or Scott Bowman ( C S O) at scott@bootcamperscollective. com. www. bootcamperscollective. com","['Hackathons', 'Codingbootcamp', 'JavaScript', 'Agile', 'Mean Stack']",https://medium.com/bootcampers-collective/build-rapport-in-the-community-and-lasting-connections-with-prospective-talent-through-hackathons-4a347e6a0036,1,[],0,52,scott,M,0.003373535711008196,0.9966264642889918
Sean Alexander Harris,,Completing NorthCoders and the Meaning of ‘Career’ – Sean Alexander Harris – Medium,2018-05-28 22:55:36,medium,"Completing North Coders and the Meaning of ‘ Career’ One of the very few good pieces of advice I have received is about the meanings and connotations of the word ‘career’. In the context of your working life, career is a noun describing a post-rationalised sequence of roles consisting of activities, events, and responsibilities that you negotiated according to a set of principles and practices that led you to your current position. In the context of your motoring, career is a verb entailing a barely controlled swerving from side to side, only maintaining a loose sense of intended direction. Imagine the straight, maybe upwardly angling line represented by the former. Imagine the undulating, perhaps violently, perhaps gently, oscillating line represented by the latter. Which rings true for your career? Which would you like to be true? Which should be true? In truth, all of us will have different lines. Some people have lines that run in an uninterrupted charge off the graph. Others have lines that barely make it off the x-axis and probably break the idea of plotting a line on a graph at all. We’re all trying to plot those straight lines but, inevitably and with terrifying consistency, life happens. Decisions are made by us, for us, or are muddled past without being made. The career line undulates accordingly. As I studied with North Coders, I was also completing a masters degree in Education and Leadership with the University of Manchester and writing my dissertation on new models of coding education. Working on improving and innovating the providing of education for our community is something I value and will be deciding on how to continue in the coming months. However, as I studied two quite different things simultaneously, the two meanings of career often came to mind. My research into education policy itself certainly allowed me space to consider pedagogy more abstractly. My study of coding immersed me in problem solving, logic, and sometimes abstract thinking. I’ve learned to use a variety of technologies to build applications to briefs. I’ve levelled up my ability to learn new technologies independently. I’ve met really smart, kind, and patient people who help others to learn and better themselves — and been lucky enough to make friends with some of them. Deciding to study at North Coders feels like grabbing the steering wheel more firmly, making a strong turn, and enjoying the true, only loosely controlled swerve, of my career. Thank you Northcoders and all of the fantastic friends and colleagues on my cohort. ******************************************************************* I’m interviewing with several great companies this week, all of whom seem to grasp the real and competitive business value in working with people coming to tech from different backgrounds who have succeeded on a challenging and rigorous course. I’m excited to see where I can succeed in the tech sector by adding value for my company and customers, learn as much as is humanly possible, and work my way to a position where I can combine my tech skills with client facing work.","['Education', 'Codingbootcamp', 'Careers', 'Coding', 'Manchester']",https://medium.com/@seanalexanderharris/completing-northcoders-and-the-meaning-of-career-706a4cf47465,6,[],0,56,sean,M,0.007009713460080397,0.9929902865399196
Holly Valenty,Full-Stack Developer and Tech Education Enthusiast.,I have a lot to say. – HollsMarie – Medium,2018-05-02 12:44:39,medium,"I have a lot to say. First things first: I’m a full stack developer. And a very proud full stack developer at that. It’s weird to say, and still hard for me to believe. I graduated. I am done with code school. I can write code in three different languages. I can build a website with three different stacks. Who is this girl? I’ve accomplished something I honestly never thought was in the realm of possibility for me. “ Girl Power” was something we used to say in 1996 when a Spice Girls poster was on every 10 year old girl’s bedroom wall, yet the phrase has more momentum and passion behind it for me now at 27 than it did when I was 6 and saying it to everyone I knew… while holding a peace sign, obviously. Y G G. We’re 5 months in to 2018 and the year has already been a whirlwind for me. I’ve moved to a new city, taken on a completely new field of study within tech, decided to stay in said city, and fully completed the program and two projects within it. I’ve made new friendships and rekindled old ones, encountered new challenges, climates, and levels of loneliness, and today I realized I couldn’t be happier. Y A Y! At face value this program has given me new skills in development and the tech industry, but it’s truly given me so much more than that. I feel empowered, and an overwhelming desire to empower others in return. When I lost my job last year, along with my independence and a few other things, I remember telling a girlfriend(hi K K!) that I felt like I didn’t know who I was anymore. That I felt as though everything that defined me had been pulled out from under me. This journey has allowed me to find the things within me that define me. Courage, persistence, determination, and heart. Quitting was never an option, no matter how hard the next step felt. Although the code education portion of my program has ended, we’ve begun Career Readiness week at the Dojo. Yesterday we were asked to write our “ Elevator Pitch” (and also to act it out in a networking setting… always awkward. ). Anyway, here’s mine: I am Holly Valenty. I am an ambitious, confident, and coachable full-stack web developer. My first life was as a recruiter but my path has centered around working with developers and cultivating a love for technology. I bring a dynamic set of skills to web development and am passionate about breaking down barriers as a women in tech. These last few months have made me realize how passionate I am about encouraging women of all ages to try out an area of S T E M to study as well as encouraging people to take risks, or find what makes them feel strong. Take on the challenge, whatever it may be, do it. Just go for it. Stop waiting for the right moment, or until fill-in-the-blank happens, because it may never happen and you may lose out on the opportunity to change your life for the better. I think back to the Diversity Scholarship essay I had to write for my program, and reflect on the 3rd grade girl I wrote about ( Spoiler alert: it was me). The one who thought that the reason she struggled in math and science was all due to the fact that she was a girl, and therefore, bad at these subjects. The one who thought she was going to have to rely on playing soccer in college to get into college in general, or could only ever do something in english or history to earn her degree. I hope she’s proud. I hope she knows how kick ass she can be. And that it’s ok to be confident about her skills and her intelligence, because she’s the only one who can determine her worth. I hope she’s cool with all the risks I’ve been taking, and the dreams I’ve been achieving, because I’ve been coming up with a few more for her. . A few other updates: For my code friends, Javascript with Angular was my favorite technology to work with, and what our final project was done with! Despite feeling a little blind and struggling with it, I’d like to build my portfolio with it. There is so much you can do! I have decided to call Chicago home. I’ve found an apartment in a neighborhood I love and am so excited about what’s next on this journey. I’ll be back in St. Pete next week to visit friends and family, and scoop up my pup so she can be my side kick in the midwest. Celeste and I will be driving to my new home the following week. Please pray for our sanity (and safety). My Lola girl has some heart problems and she and I would really appreciate any spare prayers for her improvements. My girl’s heart is just too big.","['Web Development', 'Coding Dojo', 'Women In Tech', 'Codingbootcamp', 'Personal Development']",https://medium.com/hollsmarie/i-have-a-lot-to-say-f98d6cf2ae81,4,[],0,248,holly,F,0.9923533354849922,0.00764666451500782
Jason Lestina,,The Journey Continues – Jason Lestina – Medium,2016-07-01 13:51:32,medium,"The Journey Continues It is crazy how much your life can change in just two months time. Since my last posting I have gotten married to the most amazing woman I have ever met, quit a stable job with good pay, and have started attending school again. Usually any one of these changes is considered a huge life change, and I did all three at once. However, I can say with confidence that all three were the best decisions I’ve ever made and I haven’t been this happy and fulfilled in quite some time. Sometimes you’ve just got to risk it all He who is not courageous enough to take risks will accomplish nothing in life. - Muhammad Ali At first, my wife and I were both scared about the idea of cutting our income in half to have me attend a 40 hour a week coding bootcamp. However, I had supported her just a few years prior as she finished up school, and she was excited at the prospect of being able to return that favor. We knew that we would survive, and that my job happiness (and personal happiness for that matter) were far more important. Getting my feet wet Since making that decision and starting at The Iron Yard, I have done more coding than in the past 5 years combined. Since leaving the technology field when switching majors back in college, I have not done much coding aside from a few Team Treehouse and Codecademy lessons here and there. However, in only 18 days at The Iron Yard I have created 14 repositories on Git Hub with over 40 commits. At the end of the first week we were given an image mock-up and asked to turn it into a functional web page. I was pretty happy with how it turned out, especially considering I had only been at it for 5 days. By the end of the second week we got into C S S frameworks and Java Script libraries. I had a lot of fun playing around with j Query plug-ins when we had to create a j Query Emporium. By the end of the third week (and the time of this writing) I have been churning through Java Script fundamentals and several Java Script problems to gain experience with the language. I am by no means an expert (yet) but I am absolutely loving what I am doing now. It used to be a struggle for me to get into work by 9am, but now I have no problem waking up at 7am to make sure I can come in early before class and spend some more time on a project. Passion is a powerful tool! I was so surprised this week when at 7am I was taking a shower and happened to think up a way to refactor my code making it much more D R Y. I can say with confidence that I have never once before problem solved a work related issue during an early morning shower. I can’t wait to continue my journey with The Iron Yard. At the end of today we will be 25% of the way through the program. I am excited to see where the next 25% takes me.","['Programming', 'Web Development', 'Learning To Code', 'Coding Bootcamp', 'The Iron Yard']",https://medium.com/@marthix/the-journey-continues-d637b080f514,2,['The Iron Yard'],1,1,jason,M,0.004847072024143468,0.9951529279758565
Yulia Litvinchuk,Junior Developer at comparethemarket.com,My first code review: what I have learned – Yulia Litvinchuk – Medium,2017-07-17 19:51:05,medium,"My first code review: what I have learned Time flies at Makers Academy, the first week has gone so fast and left me thinking: “ What Have I Done and What Do I Know?” During our first week, we were introduced to a number of new concepts and practices that are daily used in the coding world. In the corporate world that I came from, we had a long, drawn out team meetings with little value that did not bring anything new to my day. Makers’ approach is very different, is a different way of communication, sharing a feedback and developing your performance. At our morning standups, we talk a lot about what we struggled with the day before, what was easy, what needs to be improved and what are the plans for the day. This is a chance to say out loud what are you working on and share successes from the previous day. Sharing information from each cohort member is important. We learn from everyone’s mistakes and can save others from repeating them over and over again. On Mondays, the format of our regular mornings slightly changes: instead of the 9:30 am standup we conduct a code review of our weekend challenge. As a newbie, I would ask: “ What is a code review? Why would we even go through the code that perfectly works and passes all the tests?”. Code review is the process of reviewing some code in order to make sure it works, and in order to develop it where possible. I have learned that the code reviews help us to see millions of opportunities to improve the existing code, allows to focus on functionality, design and usefulness of tests. It can be a tedious process of iteration over every single line of your production code along with the unit tests to implement better features or styles. It is like taking a microscope in a way to spot and replace all redundant instances. In theory, you could ship the code without having someone watching your code, but in practice, there are many reasons why we would not avoid this process. This time around I would like to list some of the important steps that you need to undertake when performing a code review. I would assume that you have already used Ruby’s testing framework Rspec. 1. Run Rspec. Our first step and the beginning of everything. This may sound silly and too simple, but you need to check if the tests are passing. 2. Unit test coverage. Here at Makers Academy we aim for 100% coverage. What this means is that you should test every feature of your code, test how your application behaves. A potential problem with a full coverage report — you can test every individual method, cover every response, but in the end your 100% coverage does not mean your code is perfect. 3. Run Rubo Cop with Rspec. It is a code style checker for Ruby. As humans, we miss ‘single or double quotes’, ‘white spaces’, use inappropriate brackets. The tool helps you to fix some of your problems. For how to, see here $ gem install rubocop4 . Learn to write a good R E A D M E files. As a junior developer, your biggest challenge is to explain how to use and understand your application. Make sure there are clear instructions how to set up, what to install, include a brief description of the project, outline all the technologies used. 5. Readability. I am going to point out here that you need good variables names, right indentation, deleting all irrelevant comments. Make the structure of your code beautifully laid out, allow yourself and others to get a better picture of what you are writing. 6 . Remove redundant code, the code that is executed but has no effect on the output from the program7. Follow Single Responsibility Principle, a part of S O L I D. Strive to write one class per file. When you build complex programs, this way comes much more manageable to break the functionality down. Remember, a class is a set of behaviour, so we want to keep them separately. 8. Context. An elegant way of grouping your unit tests together is by using the context keyword. And to avoid repetition simply add before & after hooks that run the same block of test. 9. Subject specifies the thing you are testing. Usually it is an instance of the tested class. Use subject blocks to control the initialisation of the tested object: it { is_expected(subject). to respond_to(:method) }10. Avoid magic numbers: Instead of passing a number — use described_class: : D E F A U L T_ C A P A C I T Y, simply create let(:test) { 100 }11. Practice using Rspec matches to define expectations of your tests: something. to be eq [] vs something. to be_empty Find more matches here . 12. Don’t test private methods. You should worry about public ones only. 13. The attr_readers can help you limit the access to the code instance variable, so check if the value is only needed to be read or would you also write a method allowing it to be written. 14. Use early returns or guard clause. The method will not do anything U N L E S S there is a condition, like on the example below: some code before…raise “ Not an integer!” unless something. is_a? Integer Code reviews are definitely a great idea. As I want to grow and become a better developer I prefer to make it into the habit, have a passion for it and bring all skills together to make my code look readable and easy to maintain. I would highly recommend them to everyone.","['Software Development', 'Codingbootcamp', 'Coding', 'Ruby']",https://medium.com/@yulia.v.litvin/my-first-code-review-what-i-have-learned-2a7eec3e0e6,0,[],0,1,yulia,F,1.0,0.0
Lauren Greenberg,"Exploring programming, my assumptions and the outdoors.",What’s the deal with .send? – Lauren Greenberg – Medium,2017-07-17 18:00:35,medium,"What’s the deal with . send? As I sat in class today learning about . send(), I became increasingly more frustrated. I see the value of abstraction. It’s pretty cool how clean it can make your methods in each class look. Send, though, just seems like it’s on another level. To make a trite reference, “it’s like inception. ” It seems to me that it functions as an abstraction of a thing that is already abstracted. Here’s an example taken from the Flatiron School website: The bottom one I S an abstraction — there are no specific variable names here. Everything is generic. And, it makes it really clear what is happening in that line of code. So why is the top one better? According to some lovely people at stack overflow, send can save a lot of typing. They explain that in order to assign attributes in the following way:class Dog attr_accessor :name, :owner, :breedend Whenever a new Dog object is created, one would have to do the following in initialize:snoopy = Dog. newsnoopy. name = "" Snoopy""snoopy. owner = "" Charlie Brown""snoopy. breed = ""beagle""instead, the :name, :owner, and :breed, ad infinitum — there could be many more attributes, such as, :age, :birth_place, :best_friend, :favorite_food, and :favorite_activity. These attributes and their values (ie name: “toto”, owner: “dorothy”, birth_place: “kansas”) can be defined as key-value pairs (assigned to a variable “attributes”), sot that when a new instance of Dog is created we only need two lines of code to assign each of these attributes to our new dog:toto = Dog. new()attributes. each do |key, value| toto. send(""#{key}="", value)end This is cool. It does look nice. I’m not sold though. The attributes still have to be defined somewhere, so those x number (let’s say 5 – 8) lines of code still have to be written somewhere. So why not in the initialize method? Ok. Breakthrough. This is what allows us to change the number of parameters / attributes that we can assign to each new dog without changing the initialize method. If we wanted to add a new attribute, such as :date_adopted, or :birthday, it would just be another key-value pair in the each loop. The reason why send is useful here is that each attribute would have its own setter method, such as name=, so by substituting “key” for “name”, we are able to pass in a variety of different attributes without naming them individually. And, the most helpful explanation that I have seen, thanks to google and Geoff Parsons, is: “ The send method allows you to send a message (call a method) when you won't know the name of that method until runtime. ” T H A T I S T H E A N S W E R I H A V E B E E N L O O K I N G F O R. So, I think the benefit of this, beyond just philosophically sounding like a good idea, is that it allows you to change your mind without having to go back and change your code. You can write . send in your code, and when you run the program you can pass in any methods you want to . send without having to change the structure of your existing written code, but still get different pieces of information out of it depending on what methods you tell . send to use. Not sure how soon I’ll be using the . send method, but it is nice to understand why someone might want to use it. And to understand what it is telling me in someone else’s code — that they expect from the outset that the information they will want will change over time. In researching ways to change your code at runtime, I also discovered that Ruby has a thing called alias methods. These allow you to make a small add-on to an existing method that you have defined without either redefining your method (minimizing the risk of breaking things) or making a new method with a new name (you would have to go back and change any calls to that method in your code). The way this works is that if you have a method that you have already defined, and some new functionality that you want to add, you can write out an alias method. For instance, when we made hangman, we had to display the board to the user each time they made a guess:def display_board(level)    system(""clear"")    show_hangman(level) #displays the hangman   puts self. board. chars. join("" "") #displays the letters & spacesend If I wanted to re-use this code to make a harder version of the game, where the user gets even fewer guesses (not that the game isn’t hard enough, because due to some lack of user clues our game was overly difficult), I could have the level increase an extra time each time I display it, so that for example 2 arms would be displayed at once instead of onedef display_board_difficulty_2(level)    system(""clear"")   level = level + 1   show_hangman(level) #displays the hangman   puts self. board. chars. join("" "") #displays the letters & spacesend To use this same method name, ‘display board’, I could write an alias_method, which wold take in 2 symbols: the method I want to actually implement, and the name I want it to be called. alias_method :display_board_difficulty_2, :display_board People on the internet talked a lot about using this for name — so that if you’re getting a full name when you call name and you only want a first name, you could still call name and get the specific data you want without having to operate on it at another point in the process. It’s also nice that Ruby allows so much flexibility to make changes to your code after you have written or declared things. Why exactly you would do this instead of just changing the code in the initial method, is that it could also easily be helpful if working with another developer, so that the changes you’ve made are clear and there is an easy way to go back to the initial functionality. Takeaways: Ruby enables a variety of ways to make last-minute add-ons or changes to how your program runs. #send : allows you to change the parameters at runtimealias_method : allows you to make changes to a method and still preserve the original method","['Programming', 'Ruby', 'Coding', 'Code', 'Codingbootcamp']",https://medium.com/@lgreenberg23/whats-the-deal-with-send-fe9fa7a3fe13,0,['Flatiron School'],1,62,lauren,F,0.987739934147142,0.012260065852858035
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",JavaScript Functions For Dummies (Me): Part 2 – Joseph Cardillo – Medium,2018-04-03 09:21:36,medium,"Java Script Functions For Dummies ( Me): Part 2 Using the Math. max() Function Photo by Thought Catalog on Unsplash Using the Math. max() Function This small exercise helped me get more familiar with using Math. max(). The Question// "" Given an array of integers, find the pair of adjacent elements that has the largest product and return that product. ""// For input Array = [3, 6, -2, -5, 7, 3], the output should beadjacent Elements Product(input Array) = 21. // 7 and 3 produce the largest product. // from Code Fights My Thought Process// Use a for loop to run through the array. // Take the product of each adjacent element. // Push the product to a new array. // Run a separate function on the new array to output the highest integer. 1) After writing my pseudocode I opened Chrome’s Java Script Console ( Opt + Cmd + J on Mac) and originally tried this:function adjacent Elements Product(input Array) { for (var i = 0; i < input Array. length; i++) { let ans = input Array[i] * input Array[i+1]; console. log(ans);  }}// let ans = input Array[i] * input Array[i+1] is taking each element in the array and multiplying it [i] by the one following it [i+1], then setting it equal to the variable ans. It then returns each ans to the console as it loops. In this case: 18, -12, 10, -35, 21, and Na N ( Not a Number). It returned Na N because I was running the for loop up to the end of the length of the array. In the example provided the length of the array was 5, and the last element was 3. Therefore, when it got to the end of the array it was trying to multiply 3 by the integer after it (input Array[i+1]), but there is no integer after it. To resolve this I subtracted 1 from the length of the input Array in the for loop:for (var i = 0; i < input Array. length-1; i++)2) I needed to push the products to a new array in order to compare them. I did this by first creating a variable in the global scope, and setting it equal to an empty array, then using . push() to ‘push’ each product to this new array:var new Arr = [];// Then inside the function:new Arr. push(ans);3) I referenced M D N to find out how to find the largest integer in an array and came across Math. max() which, “returns the largest of zero or more numbers. ” I originally inserted the below into my function, but this returned Na N. return Math. max(new Arr); In looking at M D N’s docs it became clear that in order to run Math. max() on a variable that was set equal to an array, I had to use […] in front of the variable name:// I could do this:console. log( Math. max(5, 9, 1));// expected output: 9// Or this:var arr = [5, 9, 1];console. log( Math. max(. . . arr));// expected output: 9 The Solutioninput Array = [3, 6, -2, -5, 7, 3]var new Arr = [];function adjacent Elements Product(input Array) { for (var i = 0; i < input Array. length-1; i++) { let ans = input Array[i] * input Array[i+1]; new Arr. push(ans); } return Math. max(. . . new Arr);} I’d love to hear from you! Let’s connect using the following function:function lets Connect(yes) { if (yes === true) {  console. log(""linked In"");  console. log("" Twitter""); } else {  console. log(""thanks for reading!""); }}","['JavaScript', 'Codingbootcamp', 'Web Development', 'Programming', 'Coding']",https://medium.com/@josephcardillo/javascript-functions-for-dummies-me-part-2-5bdeaa1cf6cc,0,[],0,3,joseph,M,0.004069495880582216,0.9959305041194177
Paul Ly,"Full-Stack Web Developer - Former JPM Analyst, ESL Teacher, and Expat",Respect RSpec – Paul Ly – Medium,2018-05-31 02:57:04,medium,"Respect R Spec There’s much I cannot recall, my memory was never what it should’ve been. However, I do recall the day I stepped into an accounting class as a freshman in high school. And no, I didn’t have a say in it. If you went to Fort Hamilton High School, like me, you may be familiar with the f-ed up schedules we were assigned with. And if there was anything I took away from that accounting class, it wasn’t the T-charts, debits and credits, nor the teacher’s flowing hair — it was C Y A, ‘ Cover Your Ass. ’ And if you have any experience in any cut-throat business or if you’re just a New Yorker you get where I’m coming from. But where is this going you ask? Tests. Now, this may be a traumatic and demonic term for you — you may have had countless dark nights cramming for exams, and the nervous breakdowns right before and right after the exam, but tests are there for a reason. Whether or not they are necessary, beneficial, sufficient, effective, or well-written is another debate. This is why I shall refer to these “tests” as “checks” from hereafter. Many advocates argue you should be writing checks before you even start writing your code. Your code should then be reflective of your checks. Now this may sound troublesome, and a complete and utter waste of your time and effort — because clearly you’re a much better programmer than I will ever be — but let’s break it down for a sec: You’re stating your objectives and defining your goals in deliberate steps effectively leading to a colorful image of the outline of your program and/or application. You’re writing checks where if it functions properly, should react in a certain and particular way providing targeted outputs and return values. The syntax is unbelievably easy, just like me. Last but not least, you can ensure you’re meeting your deliverables, or at least you have evidence of your interpretation of the somewhat vague deliverable instructions — C Y A. I always thought sapphire and emerald were the superior gem, and maybe this has something to do with Pokemon, but maybe it doesn’t. Either way, Ruby is where my life is at day-in, and day-out. As a budding junior developer in the making at Flatiron, I work with Ruby on the daily. What else am I working with you may ask, and that would most definitely be R Spec. “ R Spec is a great tool in the behavior-driven development ( B D D) process of writing human readable specifications that direct and validate the development of your application. ” More importantly, how does one go about writing an R Spec test? Oh, but one simply does!require ‘rspec’ and the file you’re testing2. define what you’ll check with a describe block3. begin to explain what behaviours (shoutout to my friends across the pond) you want to check with another describe block4. add color and the meaning of life to a specific check with an it block or use context F Y I — last ‘end’ is for the overall describe block from step 2 on line 125. state your expectations of the results and return values of your code I had heard Python is very simple to learn and that’s the main reason for colleges and universities double-down on it for students’ first language, but I only realized exactly why when I heard Avi, co-founder of the Flatiron School, break it down with the philosophies of Python, and why he advocates for Ruby — fundamentally there should be only one way to do something. He argues it limits programmers’ freedom in a sense and how it is less exciting and expressive as Ruby. As such, there are multiple ways you can check your methods, code and return values:but which is ‘best practice?’ As you can tell, I’m not as gifted in articulating my thoughts as I once was, if ever, so I shall without further ado present a magnificent and benevolent barrage of code snippets:better to use ‘let instead of ‘begin’good examples reflecting flexibility of testing methods Let’s just take a moment and enjoy the following :)","['Ruby', 'Programming', 'Coding', 'Codingbootcamp', 'Rspec']",https://medium.com/@lpault29/respect-rspec-e4d4ac092c0,1,['Flatiron School'],1,50,paul,M,0.004197004293941091,0.9958029957060589
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Weekly Update vol. 35 – Chingu – Medium,2017-07-03 09:36:04,medium,"Weekly Update vol. 35 More members getting developer jobs, a Front- End Cert and a plethora of projects & articles to showcase!credit: @lidiya News & Random— Existing members: Early signups for the July cohort session will be going out this week so keep your eye out for that!— Congratulations Periklis Panagiotis Arnaoutis (@periman) who just got a Senior Dev job last week!— Congratulations @fish94 for getting a developer job (not to mention getting a few offers as well)!— Congratulations Traci Cremeans (@icartusacrimea) for getting a developer internship! Congrats to everyone that got jobs this week!“ Be so good they can’t ignore you. ” — Steve Martin It’s not a coincidence that the above people all got paid developer gigs last week. They have all been active in build-to-learn projects and not only have interesting pieces in their portfolios (they persevered), but also experience working in teams and adapting/learning on the go to get the project done. When they walk into a junior developer job interview, they do so with a confidence and story much more compelling than the average person. They’ve already built software in real teams, they’ve experienced the challenges that come with that, and they can talk about how the team overcame those challenges — all things people generally assume you do after you get your first job. @periman isn’t the first Chingu member to apply for junior dev positions and receive a Senior Developer offer from a company, nor will he likely be the last. Companies know how valuable finding the right people are. :)“ The best way to predict the future is to invent it. ” If there’s one thing I’ve learned in the past 10 months facilitating these cohorts: This life is yours to build. Your work-ethic now, the communities you associate with, and the opportunities you choose to take advantage of are the building blocks that will determine your future. Alan Kay’s quote above is so true. — Congratulations Bolu Ajibawo for getting your F R O N T- E N D C E R T!!! Shout-outs & Showcase@kamyl — A weather app in React for what appears to be an impromptu weekend F C C Speedrun!@szewaiyuen6 — Coding Journal wrote a great article called A few things on Python importing, check it out here! The Zoo@oxyrus — Andrés Pérez, who started the Chingu Zoo initiative (then got hit with exams) has been making crazy progress on the site. Here’s a sneak peek of an older iteration:@lidiya — l-emi took a few months off code but is back in full-force with this super cool Synth Radio audio visualization page!@oxyrus — Andrés Pérez also jumped in on the weekend challenge fun and made this quick tribute page to Monsieur Musk. @ajibs — Bolu Ajibawo finished the Simon Game and wrote a short article about it! (app link in the article)@daft. so. wow — Here’s a finished calculator app!@diemano — Diemano Nóbrega wrote an article about the Chingu cohorts in Portuguese. Looking at the July applications annnnd we’ve got a lot of Brazilians joining! :)@napstablook — Napstablook built this Nighttime Coordination app, have a look at it here! While I was playing around with it I found an awesome spot in Prague I’m going to visit this week!@rifkegribenes — Sarah Schneider crafted this awesome Recipe Box app using React!@vampiire — Vampiire, aka the most passionate coder I’ve ever met so far, wrote an article a few months back some people might enjoy: Twitch Viewer App. @zamhaq — @zamhaq made this sign-up piece! Overheard in Chingu— got my first paid freelance G I G!!!— This might sound crazy and out of context :smile: Apologies, but I just had to share this :hand: Today, I did some meditation and I was swept by this serene feeling of satisfaction and self appreciation after contemplating my coding journey so far. It’s not about the accomplishments or the knowledge ( I’m still waaaay far behind in that aspect, but hey: I ain’t stopping :muscle:) It’s more about the persistence and the willingness to continue despite the fact that everything in my life (yep! literally) is pushing me to give up. I’m proud of myself (no boasting, just some needed self appreciation : D). I just wanted to say this so that if there someone else who’s in the same position as me: know that you’re not alone and we ain’t stopping! Rest of this week’s edition of Overheard in Chingu here. Quotes to Go Quotes from the legendary Alan Kay. Technology is anything that wasn’t around when you were born. Some people worry that artificial intelligence will make us feel inferior, but then, anybody in his right mind should have an inferiority complex every time he looks at a flower. The best way to predict the future is to invent it. Thank you for reading this Weekly Update! If you enjoyed this, please click the 💚 below so other devs who may benefit from Chingu can find us. :)","['Programming', 'Chingu', 'Freecodecamp', 'Codingbootcamp', 'React']",https://medium.com/chingu/weekly-update-vol-35-eba736a4f02e,0,[],0,38,chance,M,0.024461428631419813,0.9755385713685801
Simonxca,www.github.com/simonxca | www.twitter.com/simonxca | www.linkedin.com/in/simonxca,Web Dev Lesson 2 - The 2 HTML Elements You Need To Know,2018-03-13 07:02:38,medium,"Web Dev Lesson 2 - The 2 H T M L Elements You Need To Know In this lesson, we’ll learn the 2 most important elements in H T M L. Check out this blog post if you need to brush up on H T M L syntax. Viewing the H T M L of Other Websites First, we’ll learn how to view the H T M L of other websites to see how the professionals write H T M L:1. Visit a website in your browser ( I used “www. google. com""). 2. Right-click on a blank part of the website. 3. Click “ Inspect” (or “ Inspect Element” depending on your browser). ( Safari users: you’ll first need to go to Preferences > Advanced Tab > check “ Show Develop menu in menu bar”, then do the 3 steps above. ) This will open the Console, which shows us the H T M L, C S S, and Javascript in the website. 4. Navigate to the Elements Tab (or the tab that contains H T M L). Whoa, that’s a lot of H T M L! Don’t worry, we don’t need to understand everything here. For now, we’ll look at the H T M L of popular websites to see how they’re built. www. facebook. comwww. netflix. comwww. amazon. com Notice the highlights I added. The <div> H T M L element is used a lot. Does this mean <div> is in some way more special than other elements? Absolutely!<div> - The Most Important and Misunderstood H T M L Element of All Time<div> is the building block of H T M L websites and should be one of the first things a programmer masters when learning H T M L. <div> is also very misunderstood because many people think it’s “not semantic”. Here’s why: When we first learn about H T M L elements, it’s easy to understand what an element represents. - If we see a <p> element, we know it’s a paragraph of text. - If we see a <h1> element, we know it’s big, bold, header text. - If we see a <video> element, we know it’s a video. If we see a <div> element, what is that?<div> stands for “ Content Division element”, which is a really vague explanation and a reason why <div> is so misunderstood. What a <div> Really Is A <div> just creates a box around our content. Why do we care about this box? Because in a later lesson, we’ll learn how to break websites down into a layout of boxes and recreate the website from scratch with H T M L and C S S. So it pays to think in terms of boxes. For now, let’s visualize how a <div> works. Suppose we have an H T M L page with only text:hello Now, add a div around the content:<div>hello</div> The <div> creates a box around our content (the box is not actually visible, but I outlined it in blue for demo purposes). Notice the box created by a <div> takes up the full width. This is called a block element in H T M L. Now, add another <div>:<div>hello</div><div></div> The second <div> is empty (not visible, outlined for demo purposes). It still creates a box that takes up the full width (a block element) even though there’s no content inside the box. If we add content inside the second <div>, it will look like this:<div>hello</div><div>world</div> Now the second <div> has content, the box will surround the new content. What if the content takes up multiple lines of space?<div>hello, this is a really long line as an example</div><div>world</div> The <div> will stretch to surround all the content. Now, what if we add a nested div:<div> hello, this is a <div>really long line</div> as an example</div></div>world</div> The inner <div> creates a box around its content. Since <div>’s are block elements, the inner box takes up the full width so it will be on its own line. Hopefully, these examples clarify the mechanics of how <div> works:1. It creates a box around our content. 2. The box takes up the full width because <div> is a block element. <span> - Second Most Important Element<span> is like the opposite of a <div>. It creates a box around our content, but it’s an inline element so it only takes up as much width as needed:<span>hello</span> Notice the box created by <span> only takes up as much width as the content because it’s an inline element. <span>hello</span><span>world</span> Both <span>’s appear on the same line because they are inline elements and only take up as much width as needed. Now, surround the first <span> with a <div>:<div><span>hello</span></div><span>world</span> Now, the box created by the <span> is inside the box created by the <div>. The <div> takes up the full width because it’s a block element so anything after the <div> will wrap to the next line. That’s all there is to it! <div> and <span> create boxes around our content, except <div> is a block element, while <span> is an inline element. What Makes <div> and <span> Special? Here is some H T M L that demonstrates why <div> is so great. Try copying this H T M L and loading it in your browser: By default:<p> creates a box around our content A N D adds some space before and after. <h1> creates a box A N D uses a big, bold font A N D adds some space after. Meanwhile, <div> just creates a box. Let’s See What’s Going On:1. Right-click on a blank part of the page. 2. Click “ Inspect” (or “ Inspect Element”). This will open the Console. 3. Open the Elements Tab (the tab containing H T M L). 4. Hover over a <p> element with your mouse: Notice the part in orange. This is the extra space added by <p> and is called margin, which we’ll cover in the next lesson on C S S. 4. Now hover over a <div> element with your mouse: Notice there’s no spaced added before or after the <div>. <div> just creates a box. Same story with <span>. Both create a box around our content with no styling except <div> is a block element and <span> is an inline element. Why This is Important1. For any company, their website uses many, many <div>’s so we’ll need to understand <div> in order to work with the company’s existing code. 2. <div> and <span> are our points of reference when learning H T M L. When we understand these, everything else becomes easier to understand. (<p> is just a <div> with space added before and after, etc. )3. By thinking about website in terms of boxes, we can break down and recreate their design from scratch (explained in a later lesson). To show how a page can be broken down into boxes, we can build the previous H T M L page with just <div>’s:3 Learnings From This Lesson How to view the H T M L of other websites using the Console ( Right-click > “ Inspect” or “ Inspect Element” > Elements Tab). What <div> and <span> are, how they work, and why they’re important. The 2 basic types of H T M L elements:1) block element = takes up full width. 2) inline element = takes up as much width as the content inside. Thanks For Reading! In the next lesson, we’ll learn how to use C S S to add styling to our elements and make our website look nice. Stay tuned! Simon Xiong Follow me: https://github. com/simonxca Connect: https://www. linkedin. com/in/simonxca Follow me: https://twitter. com/simonxca","['Web Development', 'Learning To Code', 'HTML', 'Tutorial', 'Codingbootcamp']",https://medium.com/@simonxca/web-dev-lesson-2-the-2-html-elements-you-need-to-know-2951e15acb16,1,[],0,0,simonxca,Unknown,Unknown,Unknown
Horizons,,"Horizons, Chapter 6 – Horizons – Medium",2016-08-04 20:17:40,medium,"Horizons, Chapter 6 The “ Aha” Moment when your app finally works Week 6 was very eventful for the Horizonites. Between celebrating the halfway point of the course to competing in a 24 Hour Hackathon, the week was filled with excitement and true mental tests. Horizonites learned to use React and Redux. They used these skills to work on two projects — an interactive calendar similar to Google Calendar and a chat-app similar to i Message. At the end of the week, Horizons founders Abhi, Darwish, and Edward treated the class to a night out at the Spruce Street Harbor Park. The whole class competed in Games of Truth-or- Dare Jenga. The Highlight? Watching T A Ethan Lee run after someone after pulling the “ Get Someone’s Number” Jenga block. The following day, they put their skills to the test at the Hackathon from noon until noon the next day where some truly amazing ideas unfolded. The categories included Music, Lifestyle, and Sports/ Health. The judging criteria was as follows: Technical Challenges What type of technical challenges did the group deal with? How technically did they dive here? Originality How unique and innovative is the demo? Is it new and original or a combination of existing services? Design How good is the visual design and interaction experience? The winners were: In Music: Tempo The Universal Music Player: takes Spotify, Youtube, Soundcloud, and more and lets you make playlists from all of the different music subscription services. Prize for winning: “ Dinner with Darwish and your whole team! (up to $30/person”","['Startup', 'Venture Capital', 'Technology', 'Codingbootcamp', 'Horizons Weekly']",https://medium.com/@horizons/horizons-chapter-6-7a81bde2e85c,0,[],0,1,horizons,Unknown,Unknown,Unknown
David Clark,Mindfulness | Humans | Animals | Earth | Coding | IG: the.coffee.smith,I’ve been busy. – L2Code – Medium,2018-05-11 01:14:53,medium,"I’ve been busy. Real busy. Photo by Tom Grimbert on Unsplash Which is good! I haven’t written a new blog post lately because I’ve been spending all of my time at home coding, or engaging with my family. It’s been a crazy May, and it’s not over yet. As far as how my program at Thinkful goes, I think it’s going pretty well. It’s moving along pretty quickly in terms of the learning curve. I’ve definitely had several frustrating nights. While I was completing lessons swiftly in the beginning, as it was all stuff I’d done before, but in a different way. Now that I’m studying things that I haven’t so much in the past, I’m slowing down quite a bit. I’m actually a bit worried about that. There is some stress that comes from having to graduate within six months to qualify for the job guarantee. It wears on my mind whenever I find myself trying to get through just one challenge that night. I’m trying to remind myself that the less I stress, the more I learn. I’m finding that I’m having trouble remembering syntax. I’m unsure what parameters a method takes, or I forget what a method does exactly and can’t understand the docs for it or the videos that explain it, etc. I think I’m getting better the more we work with stuff, but it’s pretty crazy all the different parameters and methods. ( A note: I’m using ‘parameters’ here to refer to the placeholders in the () of a method. While those could be anything you want to name them, what I really mean is that it’s difficult to understand what that method is looking for. ) Also, methods take a specific number of parameters depending on what you’re doing. And often, I’m unsure how many to use, or how to use the method, etc. j Query is definitely testing my patience and my capacity to learn. It can be quite discouraging at times, but if I remove myself for a couple of minutes, remind myself what I’m doing this, and how it feels when you do know how to create with code, I get back up on that horse and work through it. Through this struggle, I’ve definitely come to appreciate the classroom/coworking environment. I’m not sure that ‘classroom’ is a good term, because classrooms are typically stale, full of yawns, and you’re not allowed to talk. Working on everything alone is pretty brutal. Sure, everyone says they have a Slack channel — but how active is it? Thinkful’s is not so active. I must say, though, that every single person I’ve spoken to has been great! Always willing to help if they have the time, and very patient. I can honestly say that Flatiron’s channels were much more active. Granted, I only worked in the content channels for their free pre-coursework, so more people have access to that, which could explain its higher activity. It is hard sometimes to exhaust all of your known avenues of knowledge and help, to have to look at the solution code or email your mentor so that you can get back to it tomorrow. So all that said, I’ve got an idea for the types of workplaces I would most likely do well in during my first couple of years at a developer. A small code-focused team with a diverse population and experience levels, that is supportive of newbies and discovery. A code-focused team part of a larger entity, with leaders and fellows available for idea-bouncing. I have actually started researching this in spare moments throughout my days. I’ve got a list going of companies I think I would like to apply to, and why I would want to work there. Aside from moving from moving on to j Query so quickly, this month also marked my eighth anniversary, I have a friend’s wedding coming up, my partner has been experiencing some health issues and I’m trying to be supportive of her, I’m attempting to balance time with my daughter, her school has had tons of events going on, and I’ve had to take on ownership of some things at her school, and — I almost forgot! — I’m still working full-time, wearing innumerable number of hats! Anywho… My original intent with this blog was to provide a weekly summary with code blocks, examples, and more about what I’d learned. Unfortunately, that seems like an irresponsible goal for me right now. I’m not out to get tons of Instagram follows while I post selfies with my laptop and Sublime pulled up, and I’m not looking for free swag… I’ve definitely been taking good notes, which I’ll post about sometime. And I’m constantly reviewing those. Thinkful also does a great job of getting you up close and personal with code while you read about the topic, so I’ve got lots of notes on those as well. So far, so good! Coming up, I’m writing my first app from scratch, and will be performing a mock interview. Let’s just say I’m a wee bit nervous…","['Life Lessons', 'Coding', 'Codingbootcamp', 'Learningtocode']",https://medium.com/l2code/ive-been-busy-d9d55a666c76,0,[],0,0,david,M,0.0035582779766708743,0.9964417220233291
Eko Simanjuntak,Student at Del Institute of Technology,What I Learn from GO-SQUADS Mini Bootcamp – Eko Simanjuntak – Medium,2018-07-01 06:08:06,medium,"What I Learn from G O- S Q U A D S Mini Bootcamp Taken from https://www. gnome-look. org/p/1019711/ On my second internship program, I got a chance to join G O- J E K’s internship program, that called G O- S Q U A D S. I think this internship program will same with other internship program that what I knew. The internship program that I had knew before is at the first day you will given the project description, assign the buddy, and introduce the team that you will work with. But here I face different thing. At the first week, I join the mini coding bootcamp, there is no project assignment yet. At the mini bootcamp, I learn a lot of best practicing T D D as well. I also must follow the N O N- N E G O T I A B L E C O D E R U L E S. If I brake the one of the rules, somehow I can find my code anymore, and it happen so often to me. So, here what I got from the bootcamp. 1. Keep it simple and stupid When I given a problem statement, I need to figure out what classes, methods, and attributes should I create to solve the problem. After that, I create the method, auto generate the code that can be, implement the method, run the code, and done. Simple right? But did you know? The solution that I created is complex. I create all the stuff by my instinct and actually I didn’t really need all of them to solve the problems. From this I learn the most important point is to fulfil the specification. Even my code is not good enough I can refactor it later. 2. Never love your code The N O N- N E G O T I A B L E C O D E R U L E S are my guideline whenever I write my code on the bootcamp. Even my code is good enough and have a comprehensive unit test, but if I brake one of the rules I should delete my code (rm -rf). I got twice rm -rf tragedy right before I start my code review. From this tragedy, my code is not important thing. I had learn that following the rules is the most important things because I can create better code when I follow the rules. For example, one of the rules is comments or unused code should never be committed. So it’s better to create a good code that can explain itself rather than add comment to my code. When I refactor my code later I didn’t need to update my comments. 3. Commit message is my documentation Every time I will start my code review, the first thing I need to show is my commit messages. Before I show my code, everyone should understand how it developed. So, if my commit messages not easy enough to understand, the reviewer cannot image how it was. That is why every commit message should express intent. It means the commit messages should related and express the code changes. Creating good commit message is important thing to do even it not listed on the N O N- N E G O T I A B L E C O D E R U L E S. I image when my team cannot understand what the changes I did and should contact me to ask it. I will wasting time when my team ask me every time I do commit. Even though the commit message is getting longer, it’s okay as long as it clear. Can you see the similarity from each point that I explain above? The similarity is all of them are B A S I C. I didn’t need to learn about algorithms, design pattern, implement S O L I D principle, and others to follow the rules. It is very easy to follow and the result will better. So, from the bootcamp, I feel the coaches guide me back to basic, to learn what I didn’t learn on collage. Being comfortable with the basic one will lead me to create an awesome one. Hopefully, G O- J E K will make another mini coding bootcamp so others students out there can join it. Maybe mini coding bootcamp to learn specific things like learn Go Lang, System Design, Microservices Architecture, and others technologies. Cappy Hoding!","['Programmers Life', 'Gojek', 'Codingbootcamp', 'Internships']",https://medium.com/@ecojuntak/what-i-learn-from-go-squads-mini-bootcamp-d3c60eb95fc9,0,[],0,10,eko,M,0.0,1.0
Anthony Jarina,,Coding Bootcamp and You: A Love Story. – Anthony Jarina – Medium,2017-03-02 16:21:04,medium,"Coding Bootcamp and You: A Love Story. For the first couple entries, I discussed my decision to make a pivot and switch careers from fitness to tech. But what is coding bootcamp like? Is it really possible to learn multiple languages over the course of 10–12 weeks and learn them to a level that can make you employable? Is it worth the 10–20, 000 price tag? The simple (yet painfully unfulfilling) answer: Results may vary. As I believe I mentioned in an earlier post, I’m wrapping up week 8 out of 10 of a Full Stack Python Development curriculum. During these weeks, I’ve gotten my fingers (all 9 of them… more on that in a later post) typing away on Python, Django, S Q L, Java Script, Angular J S, J Query, H T M L/ C S S, S C S S, Bootstrap and more. It’s been a hell of a ride. One that I feel that I was equipped for due to prior experience and also by setting a significant expectation on myself early on. Barring anything else, I was determined to be a success story coming out of bootcamp and to have a career immediately after program completion. A lofty goal, to be sure, but there was no way I was going to enter this thing only to fail. I’d be lying if I said I didn’t have reservations. On one hand it sounds like a platform for highway robbery while on the other it sounds too good to be true. Pay 10k and end up with a career paying anywhere from 60–100k after only 10 weeks? Psh, yeah right buddy. If you believe that, I got a bridge to sell ya! Here’s the thing though: the most successful coding bootcamp applicant possesses a handful of important traits: Perspective: They realize that this is an opportunity not to be taken lightly, either due to the short time frame or the price tag. Or some other reason unique to them. Ambition: They are consistently looking for the next challenge. If they’ve completed a homework assignment with a given language, the set about finding more challenges. Self- Promotion: You H A V E to be able to sell yourself. Put any qualms about seeming “cocky” or full of yourself to the side. Put your best qualities forward, talk about what you can and want to do. Believe that the company you’re interviewing with will be thankful that they’ve employed you as an asset. Then deliver. Armed with those traits, I marched in and did everything I could to achieve success. It also lit a fire under my butt that I encountered plenty of naysayers. Nothing is more motivating than a handful of people to prove wrong, yknow? So should you join a coding bootcamp? I would suggest doing your research and coming to your own conclusions. However, I can vouch for my experience. Coding Temple has been great. The instructors are great, the office manager and financial and marketing guys are great. The environment is laid back and incredibly enjoyable. I’ve got one likely job offer and a couple others in the pipeline, too. Mainly because I applied myself. A final piece of advice: consider this an investment in your life and your future. Take it seriously and you’ll be set for life in a field that has innumerable twists and turns. If you haven’t gone to college and go to coding bootcamp, you’ve also saved yourself tens of thousands of dollars toiling away in a university model that is archaic at best. Work hard, seek new challenges in and out of class, and reap the benefits.","['Programming', 'Coding', 'Codingbootcamp', 'Career Change']",https://medium.com/@anthonyjarina/coding-bootcamp-and-you-a-love-story-6d861a619d02,1,['Coding Temple'],1,1,anthony,M,0.004907680596533925,0.9950923194034661
Alvaro Rojas,Tech geek. Travel addict. @UCLA Alumni. Currently hustling as Expansion Lead @Ironhack.,Why Code. – ajoered – Medium,2017-01-05 15:26:44,medium,"Why Code. I love surfing Wake up early. Coffee. Drive to the beach. Paddle out. Cold water, pelicans flying, dolphins, salt, sand…the epitome of fulfilment on all levels — addiction, freedom. I could rant on about the deep connection with mother nature or the invaluable life lessons to be learnt from your time spent in the water — but this is a coding blog. So why the hell are you ranting on about surfing, you might ask? It makes for a great analogy to the current social stigma we have developed regarding employment in current society. I’m also obsessed with surfing. But bear with me. I’ve found that the most entertaining and rewarding sports to learn are those where conditions are uncertain. A football pitch will never move around mid-game, and neither will a basketball court. Surfing, on the other hand, is completely unpredictable. There’s no fixed track, no ramp to skate down — there are thousands of Kj of pure energy morphing into unpredictable shapes — and you, trying to ride them. When the rules are uncertain, your approach has to be be dynamic — you must improvise to thrive. The best surfers in the world have a multifaceted skill set that enables them to read their environment in milliseconds, adapt their surfing to those conditions, and rip. Enter the job market. For the last century, our society has rewarded “long term perseverance”. We’re urged to choose our career path at an early age, project our goal 15 years into the future, then put our heads down and work our asses off to develop the necessary skills and experience to achieve that goal, in the hopes that someone will reward us for it. Our current employment structure doesn’t encourage deviations — no adapting, no pivoting — if you leave the path, you fail, if you don’t, you will surely become the next C E O of Google, like you rightly deserve. But unless your name is Sundar Pichai (and if so, hi Sundar, here’s a link to my Linked In, call me), something didn’t work according to our plans! We were so immersed in our wonderful conscience-easing pre-established route that we stopped paying attention to our surroundings. We forgot to account for change. We thought we were playing football, when we were surfing all along — and there’s a storm coming. Who would have thought a communist country with 1. 3 Billion people would leverage globalisation and change the international trade landscape. Who would have said kids with no traditional education and zero experience would go on to become the most groundbreaking and successful entrepreneurs. Who would have imagined technology would drive innovation to change the very fabric of almost every industry we know at an unprecedented rate. And as a result, we find ourselves packed with knowledge and experience completely irrelevant to our current environment. Misfits, with boring jobs or no job at all, dumbed down by the media, pinned down by debt, and with no clear path or direction. 90% of the information we have stored is worthless, and we lack key soft skills such as communication, motivation, persuasion or teamwork. We have suddenly realised we live in an era where we have an external hard drive permanently plugged into our brain called the internet, and as a result the ability to find and decipher information effectively has become much more valuable than knowing a textbook off by heart. Technology has empowered and transformed industries such as transport and communications, enabling them to become a catalyst for globalisation, changing every aspect of society — sparking a revolution. Our population is growing exponentially, our resources are limited, and we are rapidly killing our planet. Technology is the only factor that can increase supply of food to account for the ever-growing demand, or redefine products and services to make a more efficient use of resources and reduce emissions. It is our vehicle for innovation and survival, and it is taking over every aspect of our lives. To make a more efficient use of technology, we embed it within machines, computers, devices and factories. And we use coding to communicate with them. We are heading towards an era where, whether we like it or not, our fate will depend on technology, and I believe being literate in this transaction will become a standard. Should everybody learn how to code? I really have no idea. There are way too many factors to consider. Is it for everyone? Will it make you more employable? Will everybody learn and drive salaries down? Maybe. What I do know is for now it is the only constant in a sea of change — it is here to stay, and for me this is reason enough to deviate from my path and learn. I also like computers, otherwise I’d be a masochist. If we want to survive the next 20 years, we must diverge. Embrace change, accept conditions will be unstable — adapt our strategy. Look around, and find your equivalent to my coding. Find your competitive advantage. Oh and give surfing a try! This blog will take you through my journey. Don’t worry, no more digressions or grandiloquent profound essays — I’ll stick to facts. Given my background, I will try to be as abstract as possible and focus on the core concepts behind coding, and its repercussions on industries, businesses and strategy, rather than coding itself. If you want actually learn coding, you should probably join Ironhack, like I did :) If you liked my post, please share!","['Education', 'Tech', 'Coding', 'Codingbootcamp', 'Surfing']",https://medium.com/ajoered/why-code-1349d10d8a18,3,['Ironhack'],1,24,alvaro,M,0.0003351206434316354,0.9996648793565683
Codeworks,"The leading JavaScript bootcamp in Europe. We teach JS for the full stack in the heart of Barcelona. For more info, check out our website: www.codeworks.me",5 Common Coding Bootcamp Myths Busted – Code Words – Medium,2018-08-07 16:25:03,medium,"5 Common Coding Bootcamp Myths Busted Examining misconceptions about coding bootcamps and sharing a little evidence to the contrary. Einstein once said: ‘ The measure of intelligence is the ability to change. ’ Coding is partly about changing the way you think, so let’s start now. Let’s question how we think about coding bootcamps. # Myth 1: You need to be a Maths or Science expert. For lots of people, coding seems to come with a misconception that you need incredible knowledge of Maths or Science. In fact, to get a job you need high technical abilities. Those can be learned whatever your background. No higher maths required. If you’re not sure that your skills or background will fit, we’ll help you find out. Codeworks’ rigorous application process involves a tech interview, coding assignment and pre-course. And that’s all before you’ve set foot on our Poblenou campus. These three challenges will help you understand what exactly lies ahead of you on the course. Maths might help with these assignments, but it’s not essential. Same for Science. Oh and Computer Science. It won’t hurt to have this knowledge, but you don’t strictly need it. Think of coders and you might imagine geeks working on hard stuff that us simpletons could never comprehend. Mind-bending algebra problems that only a genius could solve. We get flashbacks to school and that feeling when your classmates miraculously ‘got it’ and perhaps you didn’t. Perhaps you just saw numbers swirling in a vortex of doom. Well, coding is the opposite. No vortex of doom. Instead we offer a lot of intense learning and a little blue sky. A background in Ping Pong always helps. From project managers to those working in finance, arts and the creative fields, our students come from a huge range of backgrounds. Lucy for example, joined Codeworks after teaching English in Hong Kong. Lucy switched from teaching in Hong Kong to coding and loved it. Our graduate George also helps to debunk this myth. George worked as a Project Manager in a marketing company before making the switch to Codeworks. He says: ‘ I always thought you had a be a certain type of person who was great at maths and was a wizard with a computer. However, I can firmly say you don’t need to be Rain Man or the next Steve Wozniak to become a developer — all you need is discipline’. We agree. A pinch of discipline and a big dollop of that problem-solving mindset is more important. In fact, you could have nothing but a a degree in Bagpiping and still successfully pass our pre-course. # Myth 2: They’re too expensive When investing in your own learning, the old saying is true, you get what you pay for. Our handy table here shows clearly how far your teaching hours go in comparison to other bootcamps. Here’s a few more reasons it’s not as expensive as you think. You’re likely to get a nice salary Soon after you graduate, you’re likely to have your first developer job. Salaries obviously vary hugely depending on sector and company size. But even on a developer starting salary, the Return on Investment ( R O I) is fast and secure. You’re able to safely pay back the tuition fees with the pay cheque you’re likely to earn afterwards. Cost per hour of learning is super low Have a think about how many hours of learning you need. Our course costs € 10, 30 an hour for approximately 952 hours of learning. Compared to the tuition fees for relatively fewer hours of learning per week, on a longer course, we think it’s worth it. You can deal with the opportunity cost Consider the opportunity cost of spending three months at bootcamp vs. three years at University, with all the outgoings and loss of earnings that that entails. Considered in this way, bootcamp is much cheaper. As bootcamps are shorter than a degree, your total outgoings won’t be as high and you’ll be earning sooner. Barcelona is sunny and cheap Finally, the fact that you’re learning in sunny Barcelona means the cost of living is lower. Renting a central, nice room in a shared apartment in Barcelona costs around €400–500 per month. Renting the equivalent in London costs on average £ 750 a month. Considering your free healthy breakfast and the beautiful beach on your doorstep, your quality of living is better here too. We provide a fresh healthy breakfast every day. Eating on the outside terrace is optional!# Myth 3: You could teach yourself the same stuff remotely When our Codeworks co-founder Alex started to learn coding, he tried to go solo for a couple months. He taught himself wherever and whenever he had a chair and a laptop. He says:“ It ended up as just me and the monitor and I knew it wouldn’t work. After a certain point, you hit some walls. We’re born to interact. We’re social beings. ” Alex (at the lectern) prefers company these days. To successfully join Codeworks, you need to be familiar with coding fundamentals, and have a basic knowledge of Java Script, H T M L and C S S. If you’re not yet familiar with the fundamentals, we’ll provide you with the materials to get there. Yes, you could try to learn this theory by yourself, just as Alex did, but it would only get you so far. Immersing yourself fully in the Codeworks campus is proven to be a more effective approach. Like learning a language, you need to surround yourself in what you’re learning. You’ll need that original ‘teach yourself’ mentality, but it’s crucial to build on that prior learning with others. A little daily interaction is good for the mind! Without great support, people normally get stuck along the way and lose motivation, eventually giving up. That’s why our retention rate is high. If you get stuck a team of instructors are on hand to help you. You’re never alone on campus! We even have dogs hanging around to boost your motivation. What’s more, working remotely wouldn’t include the important extras a bootcamp offers, like pitching ideas, presenting in front of a group and interviews with potential employers during our Hiring Day. So there you have it. Immersion works. # Myth 4: Bootcamp won’t give you a job This is a funny one. It’s not a myth, it’s true. No bootcamp will give you a job on a plate. Let’s break it down. ‘ Bootcamp’ is a broad umbrella term. Dig a little deeper and the more immersive bootcamps should have rigorous data available. Investigate how they measure their hiring rate. Do they count internships in that rate? Some bootcamp programs are light, others are more advanced and so cost more money. Some will get you up and running, coding your first website. Others will direct you to a more professional outcome. Codeworks is one of those. Whether it’s for your startup, or to join an existing team, we’ll get you ready. 100% of our recent graduates who looked for work after finishing the course, are now in work. That figure includes Hannah who says:“ I wanted to learn the front–end and the back–end, to get a career in tech. ” And that’s just what she did. After graduating, Hannah got a job as a Full- Stack Engineer at rapidly growing, Barcelona based Glovo. Hannah wanted a career in tech, and like the rest of our cohort, she got one. We at Codeworks only count real coding jobs like Hannah’s when we calculate our hiring rate. Product management, marketing and design don’t count as successes in our statistics. Our rate is measured as the percentage of students who receive a job offer within six months of graduation from Codeworks, as long as they can legally work in the E U and are actively looking for employment. After this time, if one of our students doesn’t receive a job offer, we count it as a failure. Our C V management includes a headshot for your Linked In profile, and interview tips. Basically, we take outcomes seriously. We have the highest standard in the industry: many institutions don’t specify how they calculate their graduates’ hiring rate, and their stats include jobs that are not related to coding. Codeworks is completely transparent about this. We won’t give you a role on a plate. We’ll give you all the ingredients to cook up a job for yourself. Those ingredients include interview tips, professional C V management and networking opportunities. Most of all they include the skills built over the three month course that enable you to win your first offer. Student David (left) meets I B M at Hiring Day on campus. You’ll need to put some effort in too of course. We encourage students to put aside plenty of time towards the end of the course to send out batches of tailor made applications. The tech sector is thriving with job opportunities and we select our students well. If this is you, we’ll train you in best possible way, and get you in touch with top companies that are looking to expand their teams. If you’re interested in finding out more about jobs after bootcamp, get in touch. # Myth 5: Bootcamps don’t give you the certificate you need. Codeworks is proudly unaccredited. We don’t give you a certificate for one simple reason, you don’t need one. That’s why most coding bootcamps don’t pursue accreditation for their courses, like a traditional College or University might. Your future employers actually don’t want a certificate, so they won’t be asking you for one. Instead, for most jobs, you’ll take a technical test, using much of what you’ve learnt on the program. In this test employers will want to see your solution to a problem. They’ll know that problem inside out. They’ll know the places you might trip up, and how your solution would work long term. It’s down to you to find the solution. You’ll need to simply knuckle down and breeze through the hiring process. So shift your mindset a little and remember you’re learning dynamic new skills rather than gaining a piece of paper. Going into interviews for your post bootcamp developer position will be a purely test-driven, rather than qualification-driven experience. We could happily give you a certificate, but without being able to apply your skills in a test or in a team, it could be a little tokenistic. As graduate Cameron adds, “ Once you’ve graduated, don’t worry too much about not having that pure computer science theory in place because it’s rarely asked of you. I would suggest having your finger on the pulse for the techniques, patterns and best practice from leaders in the field. ” Graduate Cameron enjoys writing well-organised, clean code in his new job. After graduating, Cameron got a job as a Software Engineer at Fiit. Above all, companies are looking for candidates like him, with an ability to learn quickly. They’ll see if you’re a good culture fit and have the right attitude. They’ll test your technical prowess. Don’t worry, you’re not always expected to be an expert in a specific code or programme. You should have a solid foundation in programming fundamentals, but you might not be tested on this theory. We’re confident that after bootcamp, you’ll learn whatever tech stack the company uses. You’ll pick it up with your new ability to learn fast and solve the problem at hand. Whatever your doubts about coding bootcamps, keep an open mind. Have a look at the evidence and ask your potential bootcamps for missing information, they should provide it. There are all sorts of ways to learn coding. We’ve dispelled a few myths here, but that’s not to suggest Codeworks is for everyone. Everyone has a different way of learning and our method is unique. Ask yourself what do I want from this experience? What do I want to build? When do I want to start working? If you’re up for three months of intense learning and a job at the end of it, think about Codeworks. Working on problems as a team will boost your skills far better than working remotely. Do your research, trusts your instincts. If you’re still interested in coding bootcamps, browse the program and talk to us, we’re happy to help.","['Programming', 'Codingbootcamp', 'Coding', 'Software Jobs', 'Full Stack Developer']",https://medium.com/code-words/5-common-bootcamp-myths-busted-ab5352b73c9c,8,[],0,7,codeworks,Unknown,Unknown,Unknown
Johannes Dube,,more need for coding programming and sex – Johannes Dube – Medium,2018-08-09 10:49:28,medium,more need for coding programming and sex#coding #crytosex . #cryptomoney #cryptostudios #cryptoshops #cryptomillions nude models i eat their pussies crypto island millions nude models working with laptops naked coding,"['Codingbootcamp', 'Coding Interviews', 'Coding Style', 'Cryptocurrency Investment', 'Nudemodels']",https://medium.com/@johannesdube/more-need-for-coding-programming-and-sex-80e2259c7ec8,0,[],0,0,johannes,M,0.0,1.0
Jenessa White,"Embracing the slash generation. A lover of technology, sports, development, personal growth and wellness. I love a great journey.",Levity in the midst of chaos – Jenessa White – Medium,2016-11-03 02:45:01,medium,"Levity in the midst of chaos Currently I am watching “ Meet the Robinsons”, scrolling through portfolio design ideas, and following the E S P N Gamecast for Game 7 of the World Series…all in the midst of still trying to process everything I’ve been trying to learn in the last 2 and a half weeks. Meet the Robinsons is the best for this situation that I am in right now. For context, here’s the short of it: “ Boy genius Lewis gives up hope of retrieving his latest invention, which was stolen by Bowler Hat Guy, then a young time-traveler named Wilbur Robinson arrives on the scene to whisk Lewis away in his time machine. ” ( Thanks Google) The Robinsons family motto for their invention company is “ Keep Moving Forward” I have never seen this movie before, but I couldn’t have picked a better time to watch it honestly. So often in the last weeks when I’ve felt overwhelmed, behind, quite honestly…dumb, I have forgotten to think about how all my failures now will make me so much better months and even just weeks from now. Just have to… Keep Moving Forward!","['Codingbootcamp', 'The Iron Yard', 'Personal Development', 'Jenessa White', 'Learning To Code']",https://medium.com/@jenessawhite/levity-in-the-midst-of-chaos-3d7a8c0745e6,0,[],0,3,jenessa,F,1.0,0.0
Rhys Woodberry,Web dev and video game enthusiast | rhyspec.me,My Learning Discovery – The Code Odyssey – Medium,2018-07-04 12:27:26,medium,"My Learning Discovery Getting stuck and finding the light It has been five whole months since I embarked on this journey. Five months in a land I was completely unfamiliar with. In that time I’ve built a simple terminal application using Ruby, a portfolio website with basic H T M L and C S S, and a two-sided marketplace with Ruby-on- Rails. It’s almost unbelievable looking back at where I was before I started this course to where I am now. Despite all this, there’s a looming feeling of dread. A fear that I don’t actually ‘know’ things, or that I am not ‘ready’ to enter the real world as a developer. It’s hard to fight against these feelings because I am still so new to everything and realise every day how much more there is to learn. It’s as if I am chasing a carrot on a stick. I’ve read numerous blogs and articles where others have shared a similar experience, which helps to reassure me in some sense, but I can’t quite shake this feeling completely. A lot of this feeling comes down to my learning being halted and becoming overwhelmed with a large list of things to learn how to use. Tutorial Limbo For a few weeks I have been stuck in a loop that is hard to get out of. There is new technologies to learn, and my first port of call is usually a brief look at the documentation. From there however, I find myself in ‘tutorial-limbo’. A state where I am constantly doing tutorials, following along and trying to take notes, but never feeling like I am ‘learning’ anything outside the environment of the tutorial. It’s such an easy loop to get into, because tutorials are plentiful and don’t take too much of your time. The thing is, they’re not always very useful for me. I can understand the concept in a vacuum, but never enough to be able to apply it to something real. It ends up taking me longer to learn a concept because I’m never exposed to the bigger picture. Learn By Doing An alternative to the infinite tutorial loop that I find myself constantly in or on the verge of, is learning by doing. That is, find something to make and make it. I remember being thrown in the deep end making my two-sided marketplace and what got me through was actually trying to apply things to something real, rather than an isolated example in a tutorial. Am I an expert at Ruby on Rails now because of that? No. But I was able to make something using the limited knowledge I had and finding help along the way, online and from classmates. It’s hard to start, however. I always find it much more daunting to start something that is completely in my hands, rather than being guided like the tutorials are. It can seem like an enormous task just to get started, which is why I constantly find myself going back to tutorials. Some people learn better in some ways than others. One method might seem more efficient for you, but for me takes twice as long to ‘get’. I think the main hurdle to learning anything without giving up is figuring out what ways you learn best and stick to those. It can be hard, I’m definitely not perfect at it, but the first step is to notice and be aware, then you can take steps to start implementing better methods for learning.","['Development', 'Personal Development', 'Codingbootcamp']",https://medium.com/the-code-odyssey/bootcamp-the-end-is-nigh-bb344b1a930d,0,[],0,1,rhys,M,0.06022150438394093,0.9397784956160591
Jacob Moore,,"Day 14 — HTTP, Promises, and I hate JS – Jacob Moore – Medium",2017-08-03 15:09:26,medium,"Day 14 — H T T P, Promises, and I hate J S Struggles: Let’s be clear with something. I get each different component of Java Script. I understand arrays, objects, while loops, for loops, etc. It all makes sense when broken down to it’s bare bone structure. The struggle I face is compiling these components into one. It’s like I get completely overwhelmed by the actual project that my mind shuts down and doesn’t go “well you need this so you should be putting it in a for loop”. Instead my brain goes “you could have just been a baker instead…isn’t bread nice?”. This definitely hit yesterday with our daily assignment of building a blackjack game. After an hour of putting out code after code I deleted it all, multiple times. What I truly got was: all the cards need to be in an array, you need a hand variable, aces need to be taken out as they have duel values, royalty should be 10. After that I was completely lost. Didn’t know where to go after that. Did I need a for loop? What for? To read through the entire variable and do what? Return them into arrays? Would it need arrays? Herein lies the struggle, not being able to take the larger picture and break it down. That’s been the struggle is combining it all together to get the output that I need. Understood: H T T P. This all makes sense. There’s a request (with types), commands, responses, etc. I get that. It all makes a lot of sense in regards to how servers operate and the information that is being passed back and forth. Looking forward to: The weekend. I need more time on Java Script with more examples. One week and expected to build something like we did yesterday in two hours? Kind of unacceptable. I plan to use the weekend to get caught up and review and review and review.","['JavaScript', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-14-http-promises-and-i-hate-js-c9d592e752c9,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Jeff Wong,Web developer,Into Tech And Beyond – Jeff Wong – Medium,2018-03-01 11:17:39,medium,"Into Tech And Beyond An C L I app that I built for my first major project in Coder Academy using plain Ruby Ever wondered how switching profession at mid-career would feel like? Yep, that is what I did. And trust me, it is an uneasy situation to be in, because of all the unknowns in the path ahead. Will I ever break into the industry? Will employers give me a chance? Am I too old to do this? No one would be able to yield definite answers for that. One thing is for sure, and that is I have to put in tremendous amount of effort to make this goal a reality. In early 2018, I made a life-changing decision — I enrolled into Coder Academy, a coding bootcamp college. Nevertheless, the journey started well before I became a student at Coder Academy. And like most decisions in my life, there are a couple of reasons I decided to start my journey into tech. The previous jobs that I had mostly revolved around the hospitality and retail fields — barista, bartender, shelf stacker, you name it. I don’t really hate these jobs, to be honest, and in fact, I considered myself lucky to be in the workforce, to be able to earn an income to provide shelter and food for my family. For that I am grateful. However, after years of grinding at these jobs, I have discovered that I desired to get something more out of my career. I needed growth, which I can’t get from these jobs. I craved to perform tasks that are more challenging than making coffees. I am fully aware that in order to achieve that, I need to crawl out from my comfort zone. But where to? Thinking back when I was a little kid, I was always fond of video games and computer programs. As a teenager, I possessed a strong interest in coding and programming. Things would have been different if I were to pursue tertiary studies after high school, but it turns out that I couldn’t afford college because of family reasons. And because I started working odd jobs straight after high school, these plans were well deserted from the back of my head. Now, things have changed. After a few years of working and saving, I finally have the flexibility to pursue a profession that I long dreamed of. At this stage, I realised that I am more than ready to switch career. After some extensive research, I found that the profession of software developer is precisely what I am looking forward to become. The seed has been planted. The fire in my heart has been ignited. Now bestow on me are the routes of formal education that I need to choose, in order to gain enough knowledge and skills and experience to break into the industry. There are two paths that I can embark on — sign up for a traditional university or join a coding bootcamp. From what I have explored, traditional university typically does very well on teaching fundamental subjects of computer science such as algorithms, time complexity and data structures; whereas coding bootcamp routinely focused on utilising the latest technologies as well as providing its students with hands-on programming experience. Coder Academy presents a unique opportunity — they offer a guaranteed internship in the last term as part of the course and they are the only accredited coding bootcamp in Australia that awards a nationally recognised qualification upon completion. This seems to sealed the deal for me, and I quickly found myself going through the enrolment process including a one-on-one interview with the school admission officer. Finally, I received my offer letter and all that was left for me to do was to undertake preparatory study right up until I began the course. The first day of the course brought me the feeling of excitement mixed with nervousness. When everyone arrived, I looked around and there were about 20 of us, eager to find out how this journey will unfold. Pleasingly, everyone in class is extremely friendly and after some introduction session, we found ourselves getting to know each other and working together in no time. We were off to a great start, and this road to tech became a journey that we are treading together now. Currently, I am in the midst of the course, indulging myself with programming and code challenges. The course itself is a good 40 hours per week, plus all the meetups, events and hackathons that we are encouraged to participate outside of teaching time. What I am trying to do is to fully immerse myself in this endeavour, working as hard as I possibly can to achieve my goals. Whenever I have spare time, I code, solve problems, improve my previous projects, learn new frameworks, read a textbook about algorithms, or even write a blog, just like this one. Propelling myself into an unknown territory is not what I am used to do, but I am grateful that I took this opportunity and dived straight into it. I am grateful for all the people that I met in the bootcamp and I can’t even describe how highly motivating it is to work with people that have the same goals as yourself. And of course, all the staffs and lead instructors are extremely supportive and helpful. I wish that upon completion of the course I will have the chance to work together with these amazing people again in my future career. As the coding bootcamp progresses, I will update this blog about things we learn, challenges, projects and basically anything interesting during the course. So, keep an eye on this space. Til then!— Jeff Wong","['Programming', 'Career Change', 'Software Development', 'Codingbootcamp', 'Ruby']",https://medium.com/@jeffmjwong/into-tech-and-beyond-f917f25e1718,5,[],0,65,jeff,M,0.002147423092289253,0.9978525769077108
David Yang,"Entrepreneur, hacker, teacher, starter of trouble.",5 Reasons Every College Student Should Attend a Coding Bootcamp This Summer,2018-03-20 19:18:16,medium,"5 Reasons Every College Student Should Attend a Coding Bootcamp This Summer Whether you’re coming from a computer science background or a different area altogether, coding bootcamps give you a wealth of advantages that you simply can’t get in a traditional classroom. Below, we’ll go over the top 5 reasons why you should head to bootcamp this summer instead of to the beach. 1. Gain Useful Skills Traditionally, most computer science curricula at the university level emphasize theory over practice. For example, classes dedicated to web development are relatively rare, despite the fact that many C S graduates work in the field. It’s quite possible for students to graduate with a C S degree without ever using Java Script or Swift, the most popular languages for web and mobile development, in the classroom. That’s not to say that a modern C S education is useless, of course. Classes about concepts such as data structures, algorithms, operating systems, and security will serve you well no matter what kind of development work you do. But many of the programming languages and technologies that you’ll need in order to work as a developer can’t be found in a traditional classroom — but only in educational settings like coding bootcamps. 2. Build a Portfolio of Projects There’s a famous catch-22 when job hunting, especially for your first position after college: you need experience to apply, but you can’t get that experience without having a job in the first place. And since, as mentioned, many C S programs focus more on theoretical and mathematical foundations than on the task of programming, it’s hard to get that experience through traditional coursework. Building an impressive personal portfolio is the best way to resolve this dilemma. By creating complex projects, deploying them online, and making your code open-source, you’ll have a way to empirically demonstrate your coding knowledge and prove your skill set. You can then include your portfolio on your resume and show it off to recruiters, making it easier than ever to stand out. Here are some great examples of projects created by Fullstack Academy bootcamp grads. 3. Practice Technical Interviews Once your portfolio has helped you get your foot in the door, the biggest barrier to actually getting hired is the technical interview, during which you’ll be faced with a series of tough questions and challenges. You’ll have to answer these on the spot, often by sketching or writing code on a whiteboard. Because this style of interview requires its own skill set separate from your programming know-how, it can feel unnatural and difficult for new graduates. At a top coding bootcamp like Fullstack Academy, the instructors and advisors know the ins and outs of technical interviews and will teach you how to prepare for them. You’ll practice coding challenges daily, which is a big reason that bootcamp students successfully get hired at big-name companies. For example, more than a thousand Fullstack Academy graduates have been hired at places like Amazon, Google, Facebook, and Dropbox. 4. Get Career Advice Coding bootcamps like Fullstack Academy and its all-female partner school Grace Hopper Program offer a built-in network of peers, but also a team of advisors to help you with your job search, something traditional graduate programs don’t have. A dedicated career services team will help you get hired at the company that’s right for you, whether that’s a big finance company, a start-up, or the most selective tech firm. They can give you advice on the languages to know and skills to have for a given role, plus how to market yourself to stand out. Career services will differ across bootcamps, but at Fullstack, for example, you’ll have lots of one-on-one time with counselors to help you revamp your resume, spruce up your online profiles, and bolster your portfolio. The team will also give you insider tips on things as broad as how to navigate a developer job search overall, all the way down to specific salary negotiation tactics. The connections you make with instructors and other students at your bootcamp will be your first steps in building a professional network as a developer. 5. Become a Creator Even if you aren’t planning a career in web development, the skills and knowledge you’ll gain at coding bootcamps like Fullstack Academy are broadly applicable across many career paths. Inventors, entrepreneurs, developers, artists, and more can all benefit greatly from learning to code. Whether you want to build a minimum viable product ( M V P) for your next startup, bring your marketing and graphic design ideas to life, manage dev teams as a project manager, create your own website as a freelancer, automate a task that’s sucking up too much of your time, or just create apps for your friends and family to use, a coding bootcamp like Fullstack Academy can help you achieve it. So while a tan sounds great right about now, spending the summer acquiring skills that can help you both succeed in the classroom now and be a more valuable hire in the long term — that sounds even better. And let’s not forget: coding is fun. If you’re lucky enough to enjoy it, you’ve found that rare calling that’s both personally fulfilling and pays well — and spending a few weeks at a coding bootcamp learning and growing with other tech aficionados will help you both discover your passion and hone the in-demand skills that will get you paid. Fullstack Academy’s Summer of Code immersive for college and graduate students runs from June 4th, 2018 through the week of August 20th, 2018. Applications are due by April 13th, so if you’re interested, apply A S A P. And hit me up if you’ve got questions. I *should* be able to answer ; )","['Programming', 'Coding', 'Codingbootcamp', 'Internships', 'Career Advice']",https://medium.com/@dyang/5-reasons-every-college-student-should-attend-a-coding-bootcamp-this-summer-eea32f393d89,6,['Fullstack Academy'],1,63,david,M,0.0035582779766708743,0.9964417220233291
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,The Coding Bootcamp Experience – Steve Bogucki – Medium,2018-05-16 03:54:50,medium,"The Coding Bootcamp Experience In Episode 7, the Path of Maximum Resistance discusses the in-person, web development bootcamp experience, providing a review as well as advice to potential coding bootcamp students. There’s some periphery introduction chatter; skip to the 8:00 minute mark to get to the beginning of the bootcamp “review”. Visit the Path of Maximum Resistance.","['Bootcamp', 'Review', 'Developer', 'Coding', 'Codingbootcamp']",https://medium.com/@sbogucki12/the-coding-bootcamp-experience-be0113565736,0,[],0,0,steve,M,0.0037574028300791295,0.9962425971699209
Jonathan Cespedes,Full Stack Developer,Why I chose Codesmith after attending a bootcamp & how I’m liking it so far.,2018-07-09 06:09:29,medium,"Why I chose Codesmith after attending a bootcamp & how I’m liking it so far. Hello world, my name is Jonathan. I am a resident in Codesmith’s 5th cohort in New York City. I’m writing this because I believe that my journey here and my experience so far may help people find a path of their own, or may foster discussion about the software intensive community at large. Some people might describe Codesmith as a bootcamp, Codesmith describes itself as a coding residency, I’d describe it as a socratic method code-tank. The best way I can describe what happens here is with an analogy. It’s like if someone showed you how to change the oil in your car, and then once you felt confident changing the oil on your own they ask you to change the engine of the car without their help. Naturally you struggle when the complexity of the problem you’re solving exceeds your comfort level. Eventually however, with small breakthroughs you begin to make headway on your task. Whenever I explain that to my friends they inevitably ask: “ Why pay $18k to go to a school that doesn’t really show you solutions?” It’s a valid question. Your average software intensive program teaches you every possible nuance about their chosen technology stack that time allows for. They hold your hand through each obstacle and do their best to make you confident in the tech they teach. Codesmith is a bit of a different beast and before I get too into it I’d like to explain how I got to where I am today. I am a full-stack web developer from Miami, F L with experience building applications in Ruby on Rails and node. I’ve been coding for close to two years. I’d recently finished college and was starting a career in education when I started coding using online tutorials such as codecademy and free Code Camp. As I continued coding I realized it was something I’d like to do for a living; so I left my fledgling career as an instructor to become a software engineer. I didn’t want to spend years on another degree so I began to research bootcamps. I wasn’t satisfied with what was available in the Miami market so I moved to New York to attend a program here. I was fortunate to have the help of my family in Queens without whom I’d have never been able to afford the move. In the end everything went exactly as planned and I emerged a full-stack developer. I learned H T M L, C S S, Javascript, routing, databases, view templating, and frameworks. I had the privilege of spending 14 weeks with some of the greatest & most colorful people I’ll ever meet. I exposed gaps in my knowledge I wasn’t aware of, made mistakes along the way in an environment where failure was a safe option, and emerged with the support of an institution. Sometimes I’m a little upset that I found out about Codesmith at all; because I was really satisfied with the bootcamp I chose, and the path that I was on. I was ok with being a junior developer and doing grunt work while other people delegated tasks for me to do. I figured well why not just grind away for a few years and work my way up from there; at least until I went to my first Hard Parts meetup. Attending Hard Parts I learned that the confidence I had in my abilities stemmed from ignorance. I was confident because I had no idea just how much there was out there to learn. My prior self-learning and bootcamp experiences made me very confident in the skills that I was practiced in. But if tasked with something outside of my comfort zone I had no idea where to begin. I needed someone to hand me the tools for success; I didn’t have the ability to start from scratch all on my own. It was at this point I realized I needed to change my approach. What does it matter if I’m good at one or two stacks when technology changes so rapidly. The stack I know today won’t be relevant in 10 years, and may not even be used in the next 20. I need to become proficient at any technology when called on to do so. I initially had no intent to apply for the program when I was going to Hard Parts, I just wanted to glean as much information as I could. However, that perspective started changing when I began to look at the graduate production projects. At the time I had no idea how to make software for other developers to use. I didn’t even understand most of the technologies that these projects incorporated. Eventually I learned that many of the instructors at Codesmith didn’t know the technologies used either. This is because in the senior portion of Codesmith you create your own projects using technologies that you learn yourself. It then dawned on me that all the graduates had been just like me before they entered. They were proficient within the confines of the technologies they were familiar with, and were now able to create novel tools using technologies that they taught themselves. I didn’t need to know more, I applied that same night. The easiest part of Codesmith is the application process. I applied using a code given to Hard Parts attendees that linked to a challenge. Upon completion of the challenge I was greenlit for a fit interview. Codesmith screens pretty hard for engineering empathy, they clearly state they only select people who they believe can communicate effectively and relate to their peers. Once I was past the fit interview I went on to a technical interview. It was in this technical that rubber really hit the road. I’d spent weeks studying Codesmith’s C S X prep material, practicing on codewars, and reconstructing built in Javascript methods. I knew that the technical interview was designed to stump you, to find the limit of your knowledge and see how you handle it, but there was no way I could have been ready for how I got stumped. I got stuck on a problem that required me to use the built in reduce method, something I had used many times before. However, I’d always used reduce to evaluate numbers and now I was tasked with implementing it on an array of non-numbers. I realized I didn’t understand the concept as well as I’d thought. My interviewer nudged me in the direction of M D N documentation, and I quickly learned that I didn’t understand how to read documentation either. Here I was a developer with a portfolio of full-stack applications under my belt and unable to read basic Javascript documentation. Eventually I interviewed again and got in. But the difference between the person who failed that first technical and the person who made it through the next time was the ability to gather information myself. That first guy needed to watch You Tube videos or ask a mentor to provide information for them, the second iteration of myself was able to find information straight from the documentation. During that second interview I got stumped again while being asked to use reduce in yet another novel way, but using documentation I was able to find an approach that worked. Now that I’ve rambled at length about who I am and how I got here, I can actually talk about my actual Codesmith experience. To put it succinctly every day at Codesmith has been more challenging than the most difficult parts of the bootcamp I attended prior. I am challenged, even with material that I am comfortable with, to push the boundaries of my abilities every day. But I look forward to going every single morning. The stress and frustration of wrestling with novel concepts is counteracted by an amazing space filled with amazing people. Arriving on the first day there was a breakfast meet and greet for our cohort; 12 strangers getting to know each other over muffins and croissants. That same week we were treated to Ice Cream on a group outing to Washington Square Park. Every Monday we have dinner together to talk about the week that came before and recognize all the special effort put forth by our peers. Most importantly every Thursday we have Codesmith drinks, which is basically a beer fueled social event that goes well into the night once the coding is over for the day. This is all separate from the actual curriculum, which is where the program really shines. If you remember my earlier oil changing analogy, I’d like to provide an actual example of what really happens. Codesmith separates instruction into 2-day units. For each unit we are paired with another member of our cohort and we have to problem solve together. If it is the first day of a new unit then there is an hour long lecture on the new topic. These lectures are usually pretty abstract conceptually, but can sometimes include examples of actual code. After the lecture is dismissed we are assigned material based off the day’s lecture. We have roughly one hour to complete this individual assignment before we are paired with our partner for the remainder of the 2-day unit. In one of the units we were tasked with making things move around the screen on the browser, D O M manipulation. The lecture itself went over basic Javascript methods such as create Element and append Child. From this cursory explanation we then had to create an interactive game on the D O M. These are the kind of challenges that happen on a daily basis, we’re given a general overview of a concept and then asked to expand on that general understanding and find out how to apply it with our paired partner. I’d manipulated many a D O M before but never actually made an interactive game using only Javascript. This challenge was the simplest one for me and it still took me the better part of two days to get the functionality I wanted. I could go on about the facilities or the curriculum but I credit the overall quality of my experience to the selective candidate vetting process. No amount of snacks or challenging material could make up for unpleasant company. I have been in rigorous programs before, and I have been in selective programs before. It is not strange for me to be in a room with outstanding individuals, but this is the first time in my life where I am in a room where everyone is a true standout. Beyond being paired with truly exceptional people everyday I am also impressed by the level of knowledge of the staff as well as their ability facilitate our own internalization of that knowledge. Note that I didn’t say a transfer of that knowledge. The help from the staff comes more in the form of questioning that leads you to the answer on your own. The best part however are your partners that you are paired with. You never know the experience level of the person you are going to pair with. They may match your skills, they may be less adept, or they may eclipse your abilities entirely. You still have to be able to take direction and give direction to your partner in a way that is concise, effective, and polite. It is the single-most important skill that I practice every day at Codesmith. When I work with a partner that matches my skill-set I get to practice my technical language. When paired with a partner less comfortable than I am, in a given technology, I get the opportunity to convey the concepts that I’m using through conventional language and analogy. When paired with a partner that is more skilled I get to learn from their process and see how they overcome problems in a different, and likely more-effective, manner than I would. Everyone here is very dedicated, not just to themselves and their own personal growth, but also to facilitating the growth of the people around them. We spent all day together (did I mention we’re here over 60 hours a week, 6 days a week and that it is awesome?) and still hangout on our free time. When 8 P M comes and the coding day is officially over we still hang and play ping-pong, sing karaoke, or just help each other tweak our code to make it a little bit better. So far Codesmith has been simultaneously the most difficult, stressful, and enjoyable experience I have ever had. I know I’m going to be a totally different version of myself when it’s all over. I’ll miss the people, I’ll miss the process, but not the old me watching You Tube tutorials.","['Programming', 'Bootcamp', 'Coding', 'Codingbootcamp', 'Codesmith']",https://medium.com/@jmilescespedes/why-i-chose-codesmith-after-attending-a-bootcamp-how-im-liking-it-so-far-7432a6e257ea,3,['Codesmith'],1,0,jonathan,M,0.0042130252697924414,0.9957869747302076
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Saturday’s a… – Emily Deans – Medium,2017-07-02 00:08:48,medium,"Saturday’s a… There was a time in my life when I would have unhesitatingly finished that call with an enthusiastic response of “ R U G B Y D A Y!”, though these days a more accurate finish for me would have to be “coding day” (admittedly not nearly as rousing a call to action as the former). One of the major takeaways for me this past week is that it’s absolutely critical during the bootcamp (and henceforth) to code every single day. That feels particularly imperative at the moment as I attempt to absorb and solidify my understanding of all the new languages/commands/concepts I’ve been exposed to over the last few days. Thus, I spent much of today re-visiting the readings from the past week and working on my weekly project. I was also able to get in a little time outside and at the gym, which felt good after a long week of being mostly sedentary. I’ve also taken to listening to coding podcasts while I cook/clean/run errands, which is nerdy as hell, but does feels helpful through increased exposure of language/concepts. Some of my favorites thus far are Course Report, Developer Tea, Take Up Code, Start Here: Web Development, # Code Newbie, and Learn to Code with Me. My main priority for the night is to get to bed early so I can wake up feeling refreshed and with an improved capacity to better tackle some of the more challenging concepts from the week. Hope everyone is having a fun Saturday night!","['Programming', 'Podcast', 'Women In Tech', 'Codingbootcamp', 'The Iron Yard']",https://medium.com/@emilyldeans/saturdays-a-cbd315eec600,1,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Ahmad Nurhadi,,ALPHA CAMP WEEK 01 – Ahmad Nurhadi – Medium,2017-05-06 06:36:03,medium,"A L P H A C A M P W E E K 01 The first week was heavy, heavy, heavy on information. There was a lot of new info that we needed to absorb in the first week. We started off with a focus on how to learn and the basis of tech & startups. After the introduction, we were exposed to computational thinking and how to solve a problem using computational thinking. The best key takeaway for this lesson was the 04 steps to solving a problem; 1) Decomposition 2) Pattern Recognition 3) Abstraction 4) Algorithm. This helps us look to a problem and break it down it small chunks so that we can better identify the ways to tackle the problem. The last 02 days of the week were basically us being thrown into the sea to try and swim. We were thrown 10 exercises/problems and were instructed to solve using ruby. It was really a challenge for most of us as we do not have much ruby language background nor used to solving a problem using computational thinking. Personally, it was a huge mountain to climb. I had to go back and forth googling ruby syntax and trying to make sense of my idea of solution using the ruby syntax. Even though it was really challenging and mind-numbing to solve each exercises, it gave a good feeling when you finally solve the exercise. It gives you motivation and confidence that you can actually solve a difficult exercise. Slowly but surely, i hope that i can be better and more efficient in solving the problems. I guess this sets the tone for the rest of the week. Its going to be more practice and practice and practice. Let’s Go!","['Coding', 'Education', 'Alphacamp', 'Codingbootcamp', 'Webdev']",https://medium.com/@ahmad_nurhadi/alpha-camp-week-01-40a4f6d5eacc,2,[],0,2,ahmad,M,0.0010633898505346489,0.9989366101494653
Dominique Robinson,Coding my way into the world of full stack web develoment. Currently working at @Uber with Uber Eats,"Wow, so amazed by this. – Dominique Robinson – Medium",2018-03-05 06:29:37,medium,"Wow, so amazed by this. Did you participate in the Hack Reactor Structured Study Program or did you opt to complete the free Hack Reactor self-guided course prep?","['Hack Reactor', 'JavaScript', 'Codingbootcamp']",https://medium.com/@domrobinson.dj/wow-so-amazed-by-this-af9a73627c67,0,['Hack Reactor'],1,0,dominique,F,0.6917320225339666,0.30826797746603335
Daniel Weiner,"""To learn, read. To know, write. To master, teach.""",Learning to Code like Billy Madison – Daniel Weiner – Medium,2017-05-16 18:57:02,medium,"Learning to Code like Billy Madison Start by being interested in tech and only gradually work your way up to college level C S courses What am I getting myself into?!?!?!? What does it take to transition into tech? Can anybody learn to code? I’ve read a lot of articles like this detailing how to become a software developer in 12 months, but how realistic is that timeline for the average person with no technical background who is studying coding while working full-time? Should that person even bother trying? Although much has been written about the futility of trying to learn to code, I am firmly in the opposite camp, and I think it is definitely worthwhile and achievable. The other questions are much trickier to answer because everyone has a different starting point and everyone has different goals, if he/she has any goals other than learning a little bit of code. Although any effort to answer these questions in a general way will be pointless, I do have some insight to offer from my efforts thus far. I think if you’re reading this article, then yes, you can learn to code. But it most likely will take much longer than 12 months, unless you have a strong math or engineering background or unless you do a really top end bootcamp at some point (but those are highly selective and require you to be intermediate level for entry). A more realistic timeline for transition to tech while working full time is 2–3 years. This assumes 1 hour a day of work; approximately 700–1000 hours of study time. If you want to pass a technical interview or have a portfolio of work to show this might be a conservative estimate of time required. Some articles, like the first article I linked to for instance, had the time spent at 2500 hours for comparisons sake… I, on the other hand, do not have a strong math or engineering background, and as of yet have not chosen to do a full time bootcamp. I was always good at math and puzzles in school (one of the reasons I was drawn to coding in the first place), but my skills are/were very rusty. My background is actually in law and business, which makes the transition to tech a near 180 degree move. I wasn’t even an early adopter of technology; things have changed a lot since I’ve started learning to code, but if anything I still am hesitant about trying out new devices or technologies for fear that I might “break something”. I like reading real paper books and I’m kind of stuck in my old tech ways. Truthfully, I got into coding because I don’t like my job ( I’m not yet employed in tech), I was curious about coding and tech generally, and somewhere deep down I always thought I might be good at coding. Plus, I didn’t want to go my entire life without learning how to code. The beginning of my coding journey was incredibly frustrating. I barely even knew where to look for resources to learn how to code, and when I found resources, a lot of them seemed way too difficult, or I wasn’t getting very much out of them. So I set out to write a guide that I wish I’d had when I was just starting out to help find all of the resources that were most useful to me, and maybe make the process a little less frustrating. When thinking about the best way to approach this guide, it dawned on me that my coding journey has been a lot like the movie Billy Madison, where Adam Sandler realizes he really doesn’t know anything at all, so he has to go way back to the start and learn everything from scratch. This has just been my experience, and I know everyone is different. As I mentioned, my background is completely unrelated to tech, so the transition has been huge. If you’re in a field more closely related to tech then maybe your journey will be different. For me, however, I had to go back to the drawing board and start from the beginning. For the most part, I’ve been studying while working full time. When I was first starting out, I was able to take a few months off to dedicate full-time to studying, and I also took a part-time night course on front end web development and Ruby on Rails. The vast majority of my study time, however, has been during lunch breaks or down time at work, at night after work, and on the weekends. Additionally, most of the resources I’ve used have been have been free online courses and books. I now feel like I’m at about High School level (described in more detail below), so that gives some insight into how long the journey has taken. In this article I’m going to attempt to lay out my Billy Madison Theory to not only getting a job as a developer, but overall learning about the tech industry. You might wonder why you should listen to me at all. After all I’m not even employed in tech yet, do I even know what I’m talking about? Well you might be right. But also consider this letter from Hunter S. Thompson written to his friend, giving that friend some advice on life. Hunter hadn’t made it yet, but still, he had a strong worldview and something profoundly important to say about how you should live your life. Maybe my approach to learning coding is similar- that I might have something to contribute to the conversation about tech education even though I haven’t made it in tech yet. Or maybe this is another example of first principles thinking. Or maybe I just give myself too much credit. I’ll let you be the judge. Step 0: Kindergarten You don’t know what you don’t know (good quote, bad man) At this point you are interested in coding, but you don’t even know what coding is, or what developers do, or even really what tech is. You have no idea what you don’t know. You’re basically totally in the dark. You can start by reading this long article/magazine called What is Code by the terrific author and developer, Paul Ford, who lays out a good foundation on what coding is at a high level. On a lighter note, try watching popular tv shows and movies related to tech. A few suggestions are Black Mirror, Mr. Robot, Halt and Catch Fire, and Silicon Valley. You should also be reading a lot of books and industry blogs like Tech Crunch, M I T Tech Review, Wired, Free Code Camp, etc. to start familiarizing yourself with the tech industry and to start learning important tech vocabulary. If you’re not already on Twitter, you should join and follow important people and publications in tech. Here are a few listserves and publications to subscribe to: Free Code Camp — follow them on Medium for articles about tech and learning to code M I T Daily Download - articles from tech and other scientific areas C B Insights- startup research firm with a popular newsletter Here is a list of books to learn about the tech industry and to keep you motivated ( I prefer Audible): The Lean Startup- book about the startup experience The Art of Innovation- from founders of I D E O the design consulting firm Grit- psychology book about how grit and perseverance can be more important than talent Whiplash- forward looking book by director of M I T media lab Algorithms to Live By- fascinating view of how algorithms are valuable to everyday experience In The Plex — history of Google Elon Musk- biography of Elon Musk by Ashlee Vance Podcasts are also great: Code Newbie- interviews with people who have transitioned to tech and noteworthy people in tech field Software Engineering Daily- newbie accessible software engineer podcast The Exponent- about tech impact on society Too Embarrassed to Ask- about new gadgets and other tech news I also recommend trying to become more “tech fluent”. Become a super user of whatever devices you own, whether that be your computer, smart phone, or even your coffee maker. Considering the recent cyberattack, go through some steps to protect your digital life. Become the person who knows about the new devices or the new phones that are coming out and how to use them. Maybe try to set up some smart devices in your home. Be the person who is interested in V R and A R technologies. In general — be interested and excited about technology. So you’ve graduated from Kindergarten, and you’re ready for elementary school. You’re ready for some actual coding, but you need some real hand holding. Let’s see what’s next… Step 1: Elementary School Back to school… O K, you know a little more, but not much. You’re still basically clueless, but you’re ready to code a little bit. Still, everything you’re going to do is going to be in the browser. You’re still in elementary school so you need a ton of assistance. Your main resources here are: Code. org — used widely in public schools to teach kids to code Scratch- use “blocks” instead of code to create games Woof. js- like scratch but in a simplified version of Java Script Khan Academy- Java Script based curriculum to learn coding Manual Guides — articles and interactive guides on Java Script, C S S, and more Codecademy- wide range of free and paid options Treehouse- the rest are similar to codecademy Code School Most of these are free, but a few have paid options. All of them, however, are very beginner friendly because you are completely coding in the browser. This means you just go to the website and they guide you through their exercises. You don’t download any software, you don’t really do any debugging; you generally just follow along with their instructions and you start “coding”. This doesn’t mean elementary school is easy. Especially around what I’ll call “4th and 5th grade” the lessons start to get difficult (try the 3 star woof. js games for instance). You can build complex Scratch and Woof. js games, or spend a lot of time working through the exercises on Codecademy, Treehouse etc. I just include these in Elementary school because they’re very beginner friendly in terms of getting started on coding. These lessons can be very useful to get your “math brain” working again and get you used to solving more difficult problems that will come up later on in the curriculum. In the meantime, keep reading and listening to podcasts and audio books. That lesson will continue throughout the entire curriculum. Step 2: Middle School So close, and yet, so far away… Now things are getting a little more serious. You need to break free from the comforts of just coding in the browser. You need to start using your computer to create and delete files and folders, and that means you need to become familiar with that little black box called the terminal. This is a very intimidating step, but that’s O K, we were all scared that first day we stepped into Middle School. Our main goals for Middle School are: Learn H T M L Learn C S S Learn some beginner Java Script Learn Git Basics / create Git Hub account Learn Command Line basics Here are some resources for getting started: H T M L and C S S Bootstrap — Bootstrap is the most popular H T M L, C S S, and J S framework for developing responsive, mobile first projects on the web. Head First Java Script — beginner friendly series of books with lots of visuals Free Code Camp- free Java Script-based curriculum Git Git Hub Command Line You’re going to be getting started on the world of web development using H T M L, C S S, and Java Script. Some people think that H T M L and C S S are easy, but for a beginner everything is difficult, especially C S S layouts and positioning, when you have a vision of how a webpage should look, but you can’t get it quite how you want. You’ll also get introduced to a web framework with Bootstrap. You’ll learn about version control and maybe even collaboration on Git Hub, so you’ll learn what it’s like to merge different versions of projects, with the joys and struggles that that can bring. You’ll also get the excitement of sharing your first projects live on the web with your friends and family. At this point you might want to consider a part-time in person program. Things are starting to get a little tricky. Having other people in the room will be helpful as you start to navigate things like the terminal, Git, H T M L/ C S S, etc. You probably aren’t ready for a full time bootcamp (and if you start a bootcamp now you will not be job ready in 12 weeks — just look at the job numbers) but a part-time program could make sense at this point. They’re more affordable, allow you to continue to work full time, and give you a boost in your learning journey. You can search for part-time night or weekend courses in whatever city you happen to live. Step 3: High School Chlorophyll?!? It’s time to take things up a notch. You know some basic web development, you have a Git Hub account, and you know some Command Line basics, but High School is where the shackles really come off. You need to build some real web apps, and you need to be introduced to some computer science basics. You may even need to start learning some math. You’re also going to have to learn a real object oriented programming language, and start developing small to medium sized programs with it. Your best bet will be Python. High School is definitely not easy. This is the stage where there will likely be a lot of dropouts, because it’s at this point that you start to learn about those “known unknowns”. You realize just how much you don’t know, and how long the journey really is going to be. Here are some resources to help you through High School: Free Code Camp — Java Script The Odin Project — Ruby on Rails Coursera Python Processing — Create graphics programs using simplified Java Intro to Programming Udacity — Python Beauty and Joy of Computing — A curriculum organized around C S Principles in addition to coding, meant to ease learners into C S and show C S value to many other fields C S50 Harvard — Harvard’s intro to C S course Stack overflow — where you’ll get most of the answers to your coding questions Some of these are college courses ( C S50, Beauty and Joy of Computing), but you can consider them like taking A P courses your senior year. You might also want to start studying some math. Although this is a debated topic, depending on your time and interest, it couldn’t hurt to at least brush up on some math skills. You don’t have to jump into Calculus or Linear Algebra; instead maybe try Algebra, Precalc, or even something more basic than that. Trying to solve math problems with code can be a good test of your progress as a developer as well. You can try: Khan Academy — free online math lessons Project Euler- popular resource for math challenges of increasing difficulty that you can try to solve with code Some people think you should just focus on one language and stick with that when learning to code. That may work for some people, but I liked to jump around and see all of the resources available to me. That’s why I listed so many resources that teach in different languages. Harvard C S50, for instance, starts with Scratch, then teaches C, then teaches Python and Java Script for web development, all within one semester…. I think all of the resources above are great, and at the end of the day just continuing to do something everyday is better than doing nothing. If you can stick with one language, then great, do that. If you’re like me and you want to jump around, then that’s great too. Just do something everyday and keep learning and moving forward. Step 4: College The beginning of the beginning Congratulations. You’ve made it this far. You can build some basic Rails apps. You know about classes and object orientation in Python. You have a decently active Git Hub account. You are starting to demystify Java Script (or at least you are less frustrated by a missing semicolon). Maybe you even started to brush up on your math skills. Now the hard work really starts. You need to leave home and go to college. You need to deal with things like algorithms and data structures. Maybe you dip your toes in Java (gasp!). You need to learn about testing and debugging. You need to learn about pair programming. You need to “think like an engineer”. You need to learn about databases. And this is just scratching the surface… Here are some resources to get you started: Stanford 106 A — Taught in Java but one of the greats M I T Intro to Computer Science — Python Intro to Programming Udacity — Python Google Interview University — algorithm and data structure prep for Google interview Free Code Camp — Java Script Hacker Rank — Technical interview challenges Books to prep for programming interviews Job Waffle — searchable collection of coding resources Free online textbooks This is just a sampling if all of the resources to “graduate” from college, which really means to get you job ready. In this context, job ready means having a portfolio of professional looking projects, and being able to pass a technical interview. Note that most of the resources from High School can also be used in College, so a few are listed in both sections. You have two important decisions to make at this stage: You have to choose your major. You can choose to specialize in front end or back end web development, or go in a different direction and start learning to use Python to analyze data for machine learning, among virtually infinite different options in your career as a developer. On the flip side, you now have to decide if being a developer is actually for you. It’s O K if it isn’t; tech is a big, diverse field. Maybe you want to be a user experience designer, maybe you want to be involved in research in the tech sector, maybe you want to be a sci-fi author. But this is a critical juncture and you need to decide if being a developer is actually what you want to do or not. You have to decide whether or not to do a full-time bootcamp. You now have the skills to get into a top notch bootcamp (the only ones worthy of the time and money in my opinion), so you need to figure out if this is worth it or not for you. There are many resources online to help research that decision, and that is a personal choice, but going to a reputable bootcamp can significantly shorten the learning curve if you are committed to a career as a developer. Conclusion: Lifelong Learning An infinite loop For a while, it seemed like every time I read a new article, or every time I started a new project, there were a million things I didn’t know. One door would open up five new doors, which would then open up another five… The comic above seemed to capture my feelings perfectly. I could have also written a section on Masters degree and Ph D, but the truth is if you want to be involved in technology, or any intellectual pursuit really, you have to be a lifelong learner. With the rate of development of technology, learning how to learn might be the most important skill of all. Here’s a great comic / Isaac Asimov quote about lifelong learning. This book and course are helpful in learning how to learn: Learning How to Learn — Coursera The Art of Learning — Written by Josh Waitzkin, from Searching for Bobby Fischer One final point. I’ve made my curriculum linear, but the truth is learning to code is really not a linear process. There are a lot of starts and stops. It is at times extremely frustrating. It’s really much more like an undirected graph, where all of the concepts are interconnected, in seemingly chaotic fashion. Learning to code can feel like this Eventually the pieces start to come together, but it can take a very long time. Until then you are wandering in the desert of despair, where everything seems difficult and new, and very little makes sense. But don’t despair. Find communities if you can through Meetup, Free Code Camp, or Code Newbie. Having other people on the journey helps get through difficult times, otherwise learning to code can be a very lonely process. Of course, if you’re really down, there’s always Shia Le Boeuf to help. Stay strong, you can do it!","['Coding', 'Learning To Code', 'Codingbootcamp', 'JavaScript', 'Ruby on Rails']",https://medium.com/@daweiner16/code-like-billy-madison-3aafc9d84606,14,[],0,3,daniel,M,0.004259946531406404,0.9957400534685936
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Staying Agile – Emily Deans – Medium,2017-07-30 21:33:24,medium,"Staying Agile I ended up deviating a bit from today’s initial plan of action. I started off working on my Weekly Project, as planned, but quickly realized that I was still (!) feeling kind of shaky on many of the concepts from the past week. Because I know the material and supplemental activities will only get more complex from here on out, I made the executive decision that the most useful way for me to spend my time today was by revisiting (yes, again!) the fundamentals from last week’s lessons. This involved re-reading through the week’s lessons/notes, revisiting previous assignments, and watching a few tutorials (mostly on Node. js and Express) on You Tube and Lynda. This was a tricky decision to make, as it meant I’d be falling a bit behind of where I’d hoped to be with improving past submissions and getting a bit of a head start on this week’s project before the new assignments start piling into the mix. I’m hoping making this call will enable me to move through the coming week on a slightly stronger foundation. Fingers crossed that ends up being the case… A critical factor in successfully navigating a high-stress, intensive environment such as a bootcamp — in which huge volumes of new material are being thrown at you constantly and it’s virtually impossible to stay ahead of the curve — is the ability to foster agility in your approach. This is relevant to your time management/scheduling, as well as to your chosen focus. As I’ve discussed here in a previous post, there is always so so much more to learn on any given topic, and you can end up wasting a T O N of time, unintentionally, by taking too deep a dive into all the resources/subject options instead of actually focusing and choosing to pursue a specific info vein (we can only do so much at once, right?). Having a carefully honed agility (something I by no means claim to possess) allows you to make quick assessments and reassessments of your overall approach at any given moment, and whether your course of action — while maybe a great jumping off point when you conceptualized it a few hours/days/weeks ago — is still serving you and your end goal. This allows you to be nimble and responsive — not reactive — in a strategic way. Hope everyone had an awesome weekend. See ya tomorrow! Song of the Day: “ Best to You” by Blood Orange","['JavaScript', 'Code Newbie', 'Lesbians Who Tech', 'Codingbootcamp', 'Women Who Code']",https://medium.com/@emilyldeans/staying-agile-f9879b8dfc26,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Ernest Semerda,Aussie in Silicon Valley. When not doing a baby freeze then you’ll find me floating in an isolation tank.,CodePath Bootcamp: Learning Android & iOS the Better way,2017-01-03 18:27:08,medium,"Code Path Android 2016 Alumni at Uber H Q Code Path Bootcamp: Learning Android & i O S the Better way I have been building products for the i O S platform since 2012. During that time I felt like I was missing something. It took some time to shed the i O S ego and acknowledge that 85% of mobile users in the world are on Android. Worse, I knew little about servicing that massive market segment. It was time to change that and learn Android. And so I began the search for a bootcamp that could instill new powers in me. Unlike self learning, it’s easy to fall off the wagon. I didn’t want to give myself the luxury of falling off the wagon. Among the noise of the internet I finally saw the light. Enter Code Path Code Path is a 8 week bootcamp program ran both online and offline. Classes are ran by experts in their respective fields — Code Path cofounder Nathan for Android and his cofounder Tim for i O S. Alumni also play a role contributing to weekly classes online and offline. It’s a nice tight network of professionals advancing education in hot fields like mobile development & design. There is an extensive and up to the date online resource of information for Android and i O S (links below). Unlike books or most online resources that can go out of date fast. Code Path’s online resources are always up to date since they also form the backbone of the offline classes. Classes are Free. Seats are Limited. But, don’t be fooled, this is premium education. Apart from applying to get in, successful candidates get phone screened and then have to prove their commitment with pre-work (coding project). I love this approach. It keeps the bar high! Code Path i O S 2016 Alumni at Facebook H Q Sponsored by Silicon Valley’s Tech Giants Each class is sponsored by a tech giant in Silicon Valley. Hello to other tech companies 👋 — pay attention. When I attended the Android bootcamp class it was sponsored & hosted by Uber at Uber H Q. Then later when I attended the i O S Swift bootcamp, Facebook was sponsoring it and hosted us inside their garden-roofed fantasyland (love that place!). Air Bn B also participated in sponsorship in S F. Tech Giants sponsorship provided me with insight into the vibe and energy of these companies and ability to speak to the folks that work there. Side note; if you want a job there this is a more qualified with less hoops method of applying. More companies should be doing this. If anything it demonstrates a level of commitment to S T E M education in Silicon Valley. This is why every tech company should be sponsoring such educational programs. Furthermore, what a brilliant way to enrich your existing and future staff with modern education that allows them to hit the ground running. I know Mobijutsu If you seen The Matrix you may recall Neo being uploaded with new knowledge, Ninjutsu code, and having his mind blown. This is how I felt at Code Path. You know you have to get your s**t together in the 1st week of Code Path when you are reminded the structure of the program and attendance requirements. The best way to summarize this is it feels exactly like when you get a personal trainer at the gym for the first time, get pushed and you then realize stuff you can do stuff you never knew you were capable of before. You move to a new bar! In the first 4 weeks I (and everyone who attended) built 4 apps and mastered mobile development. Life after Code Path Nearing the end of the 8 week program I got a sense of accomplishment and some sadness that the end was near. I made new friends, worked with & learnt from amazing people and pushed myself to new limits. . and I survived. Knowledge is Power. With Knowledge you can Create. In Silicon Valley this is what creates value. An ability to bring something to life just from an idea is uplifting. It is an ability to Execute. I now know Android and have few Android apps under my belt. I also understand the ecosystem and understand the lifecycle of building on the platforms of the future, mobile. Mobile is the future (we all know this) and this future is 1/4 owned by i O S and 3/4 Android. It’s no secret that nature gives and also takes based on utility. To maintain momentum and new knowledge, one needs a good plan to keep on executing. I plan to retain this new knowledge and continue developing it through; (1) giving back to the Code Path community — you’ll see me hovering around and (2) by applying my mobile skills to the road ahead in 2017. Thank you Nathan and Tim for your education, persistence and my flood of never ending questions. ~ Ernest Links Code Path website where you can apply for upcoming classes: https://www. codepath. com/ Android guides: https://github. com/codepath/android_guidesi O S guides: https://github. com/codepath/ios_guides My Gut Hub (my Android & i O S projects are open sourced): https://github. com/semerda Ernest is an Aussie Software Engineer based in Silicon Valley. When not doing a baby freeze then you’ll find him floating in an isolation tank. Follow Ernest on Twitter => https://twitter. com/ernestsemerda Originally published at www. theroadtosiliconvalley. com on January 3, 2017.","['Learning To Code', 'Education', 'Coding Bootcamps', 'Android App Development', 'Android']",https://medium.com/the-road-to-silicon-valley/codepath-bootcamp-learning-android-ios-the-better-way-f0a96f71b08d,6,[],0,3,ernest,M,0.006128564396179476,0.9938714356038205
Kalen Hammann,,"A New Beginning, Part 3 – Kalen Hammann – Medium",2017-07-04 21:26:57,medium,"A New Beginning, Part 3 N O T S O F A S T, C O W B O Y! It was now early January, 2017, and a lot had changed. Kari kept exclaiming over the change she saw in me since I had started exploring the technology world. “ You seem so much more A L I V E and confident, ” she said. “ I think this is right for you!” I could feel it too. When I told Kari about my Plan, she said, “ Sounds good. Maybe before you go ahead it would be good to talk with Shira (my daughter) and Bruce (another friend who has been working for Cisco for many years) and see if they have some ideas you haven’t thought of?” I was pretty sure I was on the right track and impatient to get started, but I knew it would be a good idea, so I called Shira. She wasn’t exactly encouraging. “ Well, yes, computer security is hot, ” she said, “but I’m not sure how many J O B S there are. I mean, there are probably jobs in consulting, but I don’t think there are that many companies that have a full-time computer security person. ” I told her about what I had discovered about the shrinking job market for computer programmers. “ On the other hand, jobs like Computer Systems Analyst and Web Developer are different — there’s a H U G E demand for them. ” “ W H A T?” She said. “ Web developers A R E computer programmers! And I think that’s something you’d probably like and be good at. ” Somewhat chastened, I went back to the Top Technology Jobs article and discovered something I hadn’t noticed before: although they were indeed projecting positive job growth for Information Security Analysts, the total new jobs projected for the next ten years was just 14, 800! On the other hand, the total new jobs projected for Software Developers was 135, 300. That sounded to me like lots better odds I’d be in demand as a software developer. I also dug a little deeper and found that the bureau of labor statistics the article was quoting considers “computer programmers” as just people who write code for apps designed by others, while Software Developers are also involved in planning what code will be written — which sounded like more fun anyhow. Back to the drawing board? T H E P A T H T O S O F T W A R E D E V E L O P E R: C A T C H 22? So what Certs would I need in order to be employable as a Software Developer? I called my computer-experienced friend Bruce and discovered he was away but someone named John was staying with his family who had experience as… a software developer! What John told me is that Certs don’t play as big a part in getting hired as a software developer as they do for people focusing on hardware. More important is being able to show not just that you K N O W something, but that you can D O something useful because you’ve D O N E it. That sounded like a catch-22: I couldn’t get hired until I had some experience, but how could I get experience without getting hired? I didn’t want to just volunteer to be someone’s gofer and hope to learn as I went — that sounded like it would be pretty hit-or-miss and likely take too long. So I started looking into other ways I could get experience without knowing anything F I R S T. What immediately occurred to me, after all the years I’d spent in school, was to check out online training and see if I could find some that would involve getting practical experience. That question led me first to ads for a bunch of universities and colleges with programs that would last one or two years or more. Too long! So I Googled “online coding bootcamps”. Bingo: an article comparing 10 online training companies. One of them, Flatiron School’s Online Web Developer Program ( Learn Verified) actually guaranteed that I’d get a job. That sounded G R E A T! So I worked my way through the first part of a free introductory course Flatiron school offered. T H I S I S F U N! Based on my experience with a several more Exam/ Cram books about the other Comp T I A courses and Cisco Certs I had skimmed at Barnes & Noble, I could see that this was a lot more fun than what I would have been learning if I had stayed focused on computer security. ( At least until I got ready to get my C I S S P certification to get deeply into the Security field: T H A T I liked. ) Anyhow, another article I had read about getting into computer security had said, “ Learn to code first. Otherwise you’ll always be at a disadvantage. ” So maybe getting trained and hired as a software developer would even be the best path to computer security if I eventually wanted to move in that direction. I was all set to sign up for the Flatiron School’s program but again didn’t want to jump before I’d really considered other options. Back to Google. Almost immediately I came across an article that offered High Impact Questions For Choosing a Coding Bootcamp. Just what I was looking for! And the questions made sense to me. Especially three of them: “ What starting salaries do your job-seeking students get in their job offer letters?” ( If the boot camp is focused on getting you just A N Y job then their incentives are misaligned with yours!), “ Do I have direct access to my instructor or code mentor when I need help?” ( I knew what it was like to be stranded on tech support :-( ) and “ Do your students work together on group projects where they build an advanced web application as a team?” I suspected this third question would quickly narrow my search down to the program offered by whoever had written the article, but that was O K because the rationale for “ Why this question matters” sounded solid: “ Working and coding collaboratively with other students will give you a real-world insight into how today’s top development teams work and interact with each other. Missing out on a collaborative coding experience, where you team up with multiple students is a big loss and makes you less competitive to any hiring manager. ” It turned out the article was part of a whole guide put out by a group called The Firehose Project. I liked everything I read. These guys seemed to have their heads screwed on straight. I went back to the article comparing online coding boot camps. The Firehose Project sounded good (though I later discovered that their prices had gone up as their program expanded since the article was written). Digging deeper, I found — no surprise — that their program passed all their “ Hard Questions” with flying colors. Besides the team project, I especially liked the idea of having weekly calls with a personal mentor who is actually working in the field. That same day I started The Firehose Project’s free two-week introductory program — actually R E Q U I R E D before I could sign up for their paid program. ( I liked that. Sounds like they want to make sure there is a fit before they take your money!) As I worked through their program, I was amazed by two things. First, I was amazed by how much I was learning. In under a week, I learned the basic structure of html — the magic language that makes things appear on a web page — and C S S (cascading style sheets, which determine what the things html puts on a page look like, including the color of text and whether it is aligned left, centered, or aligned right and what font it is in and lots more) A N D how to make html and C S S talk to each other. And I learned how to use html and C S S to create a real web page that looked pretty cool. Second, I was amazed by how much I enjoyed what I was doing. Each time I made a small change to the html and css code and then refreshed the web page I was working on, B A N G! something was visibly different. I felt like a wizard waving my magic wand. “ Let there be… white text!” I could say… and it was so! “ Let there be a P I C T U R E on the page” … and truly like magic, the instant the page refreshed, T H E R E I T W A S! I got a little “zot” of pleasure every time. And long before the end of my first week, there was something else I hadn’t expected at all…( More to come… click here!)","['Web Development', 'Career Change', 'Startup Lessons', 'Aging', 'Codingbootcamp']",https://medium.com/@kalen7/a-surprising-career-change-part-3-ec02fa6cf4f2,1,['Flatiron School'],1,3,kalen,M,0.2631194002559883,0.7368805997440117
Daniel Cross,,React.js: Weeks 9 & 10 – How I Learned to Stop Worrying and Love the Code – Medium,2018-08-28 16:11:50,medium,"React. js: Weeks 9 & 10 Weather App After 8 weeks of working with Java Script, for the next couple of weeks we got our teeth into the React. js framework. Our task is to create a live weather app that the user can set the town themselves. Before we got stuck in, the lessons this week were all about React. We had four in total, on the following: Async and Events Intro to React Stateful Components and Event Handlers React Lifecycle Methods I’ve been quite excited to start with React and I found myself quite motivated during the project and lectures. I found the lessons really useful and Ersel (our tutor) as always was great at explaining complex methods. Unfortunately, due to time restraints and workload, I’ve been unable to revisit and finish this blog post. However, if you’re interested in seeing the weather app in action, click this link and clone down my finished app from Github!","['JavaScript', 'Manchester Codes', 'Coding Bootcamp', 'React']",https://medium.com/daniel-cross-how-i-learned-to-stop-worrying-and/react-js-weeks-9-10-59ab7220793f,0,[],0,0,daniel,M,0.004259946531406404,0.9957400534685936
SwitchUp,"Discover the best learning path to your dream tech career. Course reviews, recommended career tracks, job search advice, and more at http://switchup.org.",Coding Fundamentals: The Best Programs – SwitchUp – Medium,2018-07-03 17:46:06,medium,"Coding Fundamentals: The Best Programs Skillcrush and other institutions are ideal for coding beginners. Learn more in our guide. Do think a tech career could be right for you, but you have yet to tackle code? Are you interested in making a career switch but aren’t sure where to begin? Or are you looking to one day found your own company? Learning to code is a great way to bolster your success and keep your skills relevant. Although many tech bootcamps are aimed at individuals who have learned coding basics, there are some programs such as Skillcrush specifically aimed at novice coders. We have highlighted these programs below to make sure you can master the fundamentals before attending a more intensive program. School Spotlight Skillcrush Skillcrush is a bootcamp that operates globally, in all 50 states and more than 127 countries. Skillcrush is designed for absolute beginners to learn all the skills they need to start making money within 90 days and to make a complete career change within 9 months. At Skillcrush you get: A curriculum designed and constantly updated by industry experts. Lifetime access to all of your courses. Support from your instructors in the form of emails, in-app feedback, and live online chat. Fun, bite-size lessons with real-life projects. The opportunity to meet, network with, and support your fellow students in our 24-hour online Slack community. Hundreds of code snippets, templates, cheat sheets, and downloads. Access to tons of career and job search resources. Rating on Switch Up: 4. 62 Stars (71 Verified Reviews) Courses: Freelance Business Building, The Break Into Tech Blueprint, Wordpress Development, Visual Design, Front End Development Alumni Review: “ Enlightening” This is one of the most enlightening experiences that I’ve had in quite a while. I never dreamed that I would be learning a new skill at this stage of my life path and was initially skeptical about trying the program. Within the first 30 days, I found myself drawn to the curriculum, atmosphere, and overall experience. The instructors are extremely helpful and responded to my questions right away. The community of colleagues provides great tips as well. I am very happy to be a student and to be a part of such a thriving community. Other Highly- Rated Programs The Odin Project The Odin Project is a completely free coding bootcamp and is best for absolute beginners (and those who have tried other resources without success) who want to work as a web developer, do freelancing work, build a startup, or learn to build a website homepage. Codecademy Codecademy is a great place for beginners to start coding. This interactive online platform offers real-time results to individuals who are just beginning to dabble. Their curriculums include H T M L & C S S, Java Script, P H P, Python, Ruby, Angularjs, The Command Line, and others. Coder Foundry Coder Foundry offers a 12-week immersive programming course that teaches in-demand technologies, such as . N E T, C#, Java Script, Angular J S, and M V C, with job placement assistance for all graduates. Coder Foundry’s immersive course is for anyone with the passion and drive to switch careers and learn to be a professional programmer. Coder Foundry is perfect for entrepreneurs, recent college graduates, web designers, and seasoned professionals looking for a kickstart to the next step in their career. Code Fellows Code Fellows offers full-time and part-time software development courses in Seattle, Washington. Since their first cohort in 2013, Code Fellows has taught over 1000 graduates and iterated on their curriculum and format to ensure students receive the most industry-relevant training as effectively and efficiently as possible. Students are immersed in their learning with daily lectures, pair programming, weekly presentations from professionals in the industry, one-week project sprints, and more. Code Fellows graduates work at Microsoft, Zillow, Expedia, X B O X, N I K E, Amazon, Starbucks, Nordstrom, and over 500 other companies. If you are interested in learning more about programs like Skillcrush, check out our comprehensive list of our best coding bootcamps.","['Programming', 'Bootcamp', 'Coding', 'Codingbootcamp', 'Skillcrush']",https://medium.com/@switchup/coding-fundamentals-the-best-programs-d89d981e8fee,1,"['Coder Foundry', 'Code Fellows']",2,0,switchup,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 45 - I'm so excited – conshus – Medium,2017-05-12 11:30:06,medium,"Day 45 - I'm so excitedliner notes: Yesterday was a good day. Finally got a chance to finish up a project and submit it. Worked on the pitch for my final project idea. Presenting it this morning. Also, we had an Iron Yard graduate come in to show us the production code that he is working on. That was cool to see. It consisted of things I’ve seen in class, just a lot of those things. It felt good to be able to follow what I saw. Neeeeew shiiiiirt! Pretty excited about today. Wearing a new shirt I designed. Got my final project pitch. It’s F O O D T R U C K F R I D A Y! Going to watch “ Guardians of the Galaxy 2” with some classmates. I was invited to a Happy Hour by some cool people I met. And I need to finalize some things for the radio show. I guess I was so excited, that I accidently locked myself out of the classroom. Haha I took off the lanyard were I keep my key card. So I’m writing this from the Medium app. Amazing what you can get done from a phone. The bad part about arriving early is that the next person doesn’t get here till about 8. Haha Have a great day and weekend. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Coding', 'Codingbootcamp', 'Hip Hop', 'Code', 'Orlando']",https://medium.com/@conshus/day-45-im-so-excited-779f0369a40f,0,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),Weather Mood Booster App. Yay! I made an app 🤓 – My Coding Journey – Medium,2017-06-04 22:12:18,medium,"Weather Mood Booster App. Yay! I made an app 🤓 Scroll down for demo video Update: App is now live here Video Demo: here So I’m about 6 weeks into the bootcamp, and I created an app. From scratch. In about 3 days. I thought that was pretty cool, and I had a lot of fun in the process, but more importantly, I learned so much in those few days. What? Why? and How? Let’s start with the why. ( If you just cant wait, you can scroll to the bottom for a demo video 🤗) We left off the last post at project week. Project week at the Dojo is a time when students get to put their skills to the test by creating a full stack web application and then present it at the end of the week. As I mentioned, I was unable to join the teams building the Zillow clone so I needed an idea. I was recently reading this new book on google search data (see below). Everybody Lies: Big Data, New Data, and What the Internet Can Tell Us About Who We Really Are Shared via Kindle. Description: Foreword by Steven Pinker Blending the informed analysis of The Signal and the Noise…read. amazon. com In one of the chapters the author uses the data to show just how influential the weather is on our happiness. His findings are quite remarkable and a bit terrifying if you live in a bad climate. So I set out to do my part to bring a bit more joy and happiness to folks in places where the weather sucks. What exactly is the app, and what does it do? The app is a weather app with a few twists, but it is pretty simple and straightforward. Here are the basics of the app. It allows you to view your local weather in a fun and welcoming design. If the weather is bad, it will show you a funny quote (via an api), funny G I F and some other cute messages. If the weather is good, it will show and inspirational/motivational quote plus some other bells and whistles. You can add a friends location (utilizing the google maps api) to track their weatherview all of your friends’ weather with different actions suggested based on the weather. login and register How? These are the technologies I used to create the app. It is built on Python/ Django and the sq Lite Database that comes in the package. I used the Open Weather Map A P I to fetch all of the weather (both the clients weather, base on the browser’s geolocation, as well as the friends’ weather based on the longitude and latitude given through the Google Maps A P I by the user. ) The Quotes are pulled (on user login) from the theysaidso A P I (https://theysaidso. com/api/#qod) App Demo Upon login the app fetches all quotes and weather and serves based on weather. Birchwood has good weather, so an inspirational quote along with a message to get out and get some sun, is served. App features from top of page :-scroll down for demo video Greet’s user by first nameoption to log outgif, with tooltip messages, funny or “go take a walk”, depending on weather Quote and its author (updated daily from the A P I) City, animated Weather icon, and temperature in Fahrenheit and Celsius A message based on weather Animated button (yellow) which opens modal to add friends Add friend form autofills Longitude and Latitude from G maps (and map is searchable with autocomplete). Longitude and Latitude are then stored in D B View friends’ weather along with either a message to “check up on them”, or a link to plan a weekend getaway if the weather by your friend is good. Ability to share the quote (not yet functional) Login and registration Demo Video You can follow my coding journey here. Feel free to comment or contact me leibelhecht@gmail. com","['Data Science', 'Data', 'Codingbootcamp', 'Coding', 'Web Apps']",https://medium.com/my-coding-dojo-experience/weather-mood-booster-app-yes-i-made-an-app-d144b8992147,1,[],0,0,leibel,Unknown,Unknown,Unknown
Himani S,An Engineer By choice // occasional Anthropology enthusiast // Stars-Moon Lover By nature,Simple steps to use instascan.js and build functionality similar to web.whatsapp.com,2018-10-07 15:59:22,medium,"Simple steps to use instascan. js and build functionality similar to web. whatsapp. com Note: I couldn’t upload my own video, but it will work something similar to this with opening your app in new window after done with scanning Q R code. Why this Blog? I wanted to use this mechanism similar to web. whatsapp. com (reading Q R code and opening its web app) for my project and unfortunately did not found any neat tutorial on the same, so I thought to create one for future users. Also, I struggled with the implementation, but I hope this post will help you a lot, and genuinely I have to jump from one link, pages, docs to another, to get this shit done. After reading so many docs, finding answers on Stack Overflow, researching on how this can be done, I found this tutorial on Youtube, Since it is in Portuguese, I had a hard time to decipher it, and that’s why I thought to publish this blog so that others can use this code with simplicity and reduce their time investment in hopping from one link to reading other docs. ( For the ones who would be still using this youtube link for implementation, this video series run the code in localhost, please note that it can be run simply without any npm support. ) Coming back to the cause and effect, Instascan. js is your go-to solution to implement the same mechanism if you wish to create something like web. whatsapp. com. Lets quickly dive into the steps you need to do without wasting much time into unnecessary details: Copy paste the U R L of the page you want to open after the scanning Q R here: https://www. the-qrcode-generator. com/, this will generate a little baby custom square Q R code. For example, I have generated Q R code for my Instagram page https://www. instagram. com/word_gambler/ : Qr code for the Instapage2. Download this instascan. min. js file from here: https://github. com/schmich/instascan/releases/download/1. 0. 0/instascan. min. js3. Also, Download this file: qrcode. html from here: https://github. com/techquee/instascan/blob/master/qrcode. html. ( This is my personal handle of Github, also contain the instascan. min. js file. )4. Put both the files (instascan. min. js and qrcode. html) in one folder. 5. Voila! and you are good to go, run qrcode. html in your browser. (go to the folder where you have saved these files, Right click on H T M L file(qrcode. html) > Choose open with > Google chrome(you can use any browser, as instascan. js support cross-browser compatibility. )done dona done, done. The Main Github Repository you will find useful:schmich/instascan H T M L5 Q R code scanner using your webcam. Contribute to schmich/instascan development by creating an account on Git Hub. github. com If you wish to generate Q R code on your own, you can download these two files from this repository https://github. com/rcarneironet/qrcode-jsqrcode. jsindex. html Thank You, Ray Carneiro, for the video series and Git Hub repo on this particular topic. I am one of your viewer of this video series and wanted to convert it into English so created this blog post, your content was really helpful.","['JavaScript', 'Programming', 'Programming Languages', 'Coding', 'Codingbootcamp']",https://medium.com/@himanis98.hs/simple-steps-to-use-instascan-js-and-build-functionality-similar-to-web-whatsapp-com-911a57acf7e6,0,[],0,20,himani,F,1.0,0.0
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,Why I’m Taking a Chance on 42 – Mike Brave – Medium,2018-08-06 07:04:49,medium,"Why I’m Taking a Chance on 42 Edit: This is part of a series that culminated here, Next post here. I’ve wanted to learn to code for a very long time, in some ways I’ve been trying to learn for over ten years. I’ve taken intro classes at colleges only to have teachers not actually teach, I’ve done online tutorials such that I can make hello world in over ten languages, but that doesn’t actually do much for me or my life. I’m constantly around it, reading along with hacker news, reddit feeds about A I and trying to get my brother to teach me as well only to end up learning more about databases than how to code. My life has been filled with false starts, almost happenings and not quite there yets while trying to learn this skill, which is why I’m fortunate enough to find myself in a position to finally do something about it. There is an old parable about an old man whose horse ran away, the people in the village lamented “what a tragedy, how sad”, “is it?” he replied. The next day his son found their horse with it’s reins tangled in a tree and next to it a second horse. “ How fortunate to find a second horse” the people said, again the old man asked “is it?”. On the third day his son broke his leg while trying to ride the new horse, “how unfortunate for your son to break his leg” they cried, again he responded “is it?”. Then on the fourth day the government came around enlisting all able bodied young men and his son was passed over due to his broken leg. Again the villagers said “how lucky is his broken leg to keep him from going to war” and this time the old man agreed. There is an idea, a stoic idea, one that may sound sort of woowoo on the surface but one that I find particularly beautiful. The idea that something negative could in fact be a gift if looked at in the right light or a longer time period. My life has felt particularly crappy the last couple of weeks, like everything was falling apart, but that very falling apart was what let me take a chance on something I normally would have ignored. Usually I would say to myself things like “ I’m too busy” or “they need me here” This particular slump gave me the freedom to take a leap and today I’m grateful. My life lately has been me working a graveyard shift at a hotel, averaging about 4 hours of sleep a day and living with the pain of it slowly wearing down in nearly every way. Strength waning, sanity slipping, weight loss stalling, I know in my heart I can’t continue to do this forever. Also the hotel is experiencing a corporate merger, so upper management is on high alert, new rules form everyday and software breaks every night as they patch it to be more compatible with the new parent company, frustrations abound both with management and with the hotel guests, stress is high, people are quitting and with every bit of turnover the stress only builds. Then my best friend felt the need to reject me romantically when I had yet to make a move, and my brother and his wife asked me to find a new place to stay (even though just weeks before were ecstatic about me moving in with them). This was my life lately, and I’m not thrilled about it. So I did what anyone who starts to lose hope would do, I put aside my fear, threw caution to the wind and took one those long shot chances that normally seem so far out there it would be crazy to try. I applied to the 42 School. For those unfamiliar with it, it’s a highly competitive free coding school paid for by french entrepreneur Xavier Niel. The Wikipedia page is probably the best description of it you can find. I often daydreamed about attending the one in Paris, because well how cool would that be, but I figured even if I did get accepted it would be hard enough learning to code without worrying about language barriers, so instead I applied to the one in Fremont C A. Somehow I got in, not officially into the program, but into the Piscine ( I think it means swimming pool) it’s also known as Intensive Basic Training. Essentially it’s a month long tryout to see if you are up to snuff to do a self directed learning program. It starts Aug 20th (15 days from now). I applied for a dorm spot as well. I’m still not sure if I’ll get the dorm spot, this being a bit short notice after all, but I’ve got enough saved that I could rent an Airbnb for the month if it comes down to it. Financially though I’m not rich, I mean 6 months ago I had no money and now I’ve only got a few thousand saved away, the dorms are free and would be a tremendous help if I could stay there. Time will tell. I want to do this right, I want to make sure I can pass the Piscine and not spend a month on nothing, to not have quit a job for nothing. So of course I did a bit of research to see what it takes to pass. While looking I found a blog that seems to have detailed day by day their experience with it, so I thought I should do the same ( I mean I did previously major in communications, so I know how blogging can help me solidify my knowledge and maybe help someone else down the line). On the whole though I’ve not found much info out there, even the one blog I found was about the one in Paris. So far the best advice I’ve found for passing it is to grit through it the way navy seals grit through their bootcamps, you will get overwhelmed but what matters most is being the type who doesn’t quit or give up. I wish there had been more useful advice out there, but I’ve yet to find it. I’ll post updates with links to what I find later. Mostly though, I’m excited, I wanted a chance and now I have one. I started in a crappy situation but now I feel liberated by it, free to actually pursue what I’ve been wanting to pursue, had my job been less crappy, my living situation more ideal or my love life actually existing I wouldn’t have taken the chance. This is so much better than if those other things had just turned out the way I initially wanted them to. So anyway, here’s to the journey, I’ll update as we go.","['Life Lessons', '42', 'Codingbootcamp', 'Ecole 42']",https://medium.com/@themichaelbrave/why-im-taking-a-chance-on-42-222a698761d3,2,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Justin Munn,Web developer at Microsoft. 2017 @firehoseproject graduate. Make things and go outside.,Pushing Through Errors – Justin Munn – Medium,2017-02-01 18:25:51,medium,"Pushing Through Errors Sometimes things aren’t as sketchy as they look. Climbing down from Three Fingers fire lookout in the North Cascades, W A. Firehose Project: Week 2 I began work on a yelp clone called Nomster. I had my first mentor Skype session with Ash. We pair programmed through a ruby challenge. I can already tell he will be a great learning catalyst in my coding journey. Upgraded my previous Muir Words to Rails 5 & Bootstrap 4 Upgrading to Rails 5 & Bootstrap 4 After finishing the Muir Words app I tried to update the gemfile to Rails 5. I try to go through a checklist to combat the errors. Check for typos, check for syntax error, check install documentation, restart the server. But I received constant error messages so I ended up rebasing to the last working version of the app. I knew the next app would be a fresh install with Rails 5 so I moved on, hoping to gain knowledge and revisit. Then it hit me, keep it chunky. I’ve been coding H T M L emails for the last 4 years and the table based code and deep nesting can get pretty messy. One thing it taught me was to break chunks of code until I find the problem. Replace it with working chunks of code and finesse my way to a solution. Now I had a working gemfile for a Rails 5/ Bootstrap 4 app. I compared the differences to the gemfile in my Rails 4 app using a diff tool. It wasn’t the install files that created the errors as I suspected. It was dependent gems that needed updating too. Chunk by chunk I updated the gems until I was error free. The site was back up and running on my local server but the layout was off. A quick inspect element and Bootstrap 4 documentation reference later, I realized I had to rewrite most of the layout classes. Bootstrap rewrote their grid class syntax so my legacy classes failed. Luckily this is a simple site with only a few pages. I could see how updating class names across a more complex site would turn into it’s own project. I guess that’s the downside of frameworks. They let you create sites quickly, but if the syntax changes your success or failure it tied to re-learning the new documentation. Customizing will_paginate gem Another challenge for the week was to implement pagination functionality into the new yelp clone app Nomster. I’m calling mine Brewster. After getting the will_paginate gem implemented I wanted to change the output to integrate better with Bootstrap. I was chatting with another student and realized that there were other gems that tied into will_paginate to do just that. Since “ Good Artists copy; Great Artists steal”, I decided to use the open-sourced work of others as a jumping board. This openness is what I love about the web. “ If you see a great master, you will always find that he used what was good in his predecessors, and that it was this which made him great. ” — T. S. Eliot There was an existing gem that integrated with Bootstrap 4’s syntax online created by Ivan Palamarchuk. This was a great start but I wanted to take advantage of a few other Bootstrap classes not implemented. I saw in the will_paginate H T M L renderer docs that the magic happened in the initializers/will_paginate. rb. Reverting back to my chunky iteration, I created a copy in my app that matched the will_paginate-bootstrap4initializer. I commented out everything I didn’t want to change. Drop in the desired extra Bootstrap classes to the element and voilà: Beautiful customized Bootstrap pagination. See the live work-in-progress here. Contemplating Complexity My final thought of the second week is a higher level one brought up by my mentor. He introduced the idea of Complexity in computer science. He encouraged thinking about it as I come up with solutions. Decreasing complexity can improve the performance of my functions and apps. I’ll be reading more on the subject and applying it to come up with a better solution to this reverse array challenge. One goal this week is to manipulates the original array instead of increasing complexity by creating a new array like my current solution: As I begin to dive into algorithms and more complex apps this will be a constant point of thought and opportunity for improvement. Until next week. Originally published on my blog: http://justinmunn. co/blog/pushing-through-errors/","['Ruby on Rails', 'Web Development', 'Firehose Project', 'Coding Bootcamps', 'Ruby']",https://medium.com/@jwmunn/pushing-through-errors-52fbc9335e54,0,[],0,1,justin,M,0.00487975038744523,0.9951202496125547
Jessica Alves,Brazilian woman living in Sydney. Changing career and discovering the huge coding world :) Studying at Coder Academy 👩🏻‍💻 www.jessicaribeiroalves.com,Your words cannot exercise their power if they remain hidden in your mind.,2018-08-26 13:24:34,medium,"Your words cannot exercise their power if they remain hidden in your mind. And that was what I thought and told myself every time I would think about start a blog. I love to write and I've been writing since I was 9 years old. But I always write for myself. It doesn't matter about what, I like to create stories, talk to myself about my feelings, my thoughts and I really like to use all this stuff to analyse my choices and attitudes. It sounds like a therapy and it is, in fact. However, today I was challenged twice: I needed to create a personal blog for school reasons so I cannot give any excuses to myself to not write. More than that, I'm going to talk about things that I'm still learning, things that I probably gonna make a lot of mistakes and these things are fun, crazy, scary and exciting. And when I sum up all these things in just one word maybe you understand: it calls C O D I N G. I am Brazilian graduated in biotech engineer with a short experience in logistics. I say short because my experience started with my internship in 2015 and stopped this year when I decided left my job in Brazil and decided moving to Australia along with my boyfriend. I wasn't too happy with the direction my career was taking, although I was learning a lot from what I was working on. Therefore the opportunity to go to another country and start from zero, a new career or whatever I'd want…well, it sounded rather attractive. But definitely it's not easy. Especially if you are an immediate and anxious person. Five months ago, what started with an unpretentious conversation between my boyfriend and me ended up in intense research on websites and apps like Hacker Rank and Grasshopper, and it motivated me to start a search for coding courses in Sydney. In April I attended to a Java Script workshop by the Node Girls group. It was only a Saturday learning a little bit about the Java Script programming language, some concepts and exercises that made me feel more excited about coding than I already was. I can say that on that Saturday I really had the feeling of finding the way I was looking for. I admire what the Node Girls team does for Australia trying to include more women in the coding area through free workshops. It's an amazing work and I'm sure that it’s a great opportunity for several girls — girls like me that end up having a chance to get to know a little bit about coding and the incredible things you can do with it. And today, living in Sydney and studying at Coder Academy which I had the opportunity to meet since it was the host of the workshop that I just commented, I've started an important phase of my life. Learning to handle the terminal of a computer, data types, control structures, variables, interpolation, Git, Ruby and some another words have been part of my vocabulary since then. So I hope sharing about coding on this new space that I reserved to talk about my new journey. Hope you enjoy it! :)","['Programming', 'Coding', 'Women In Tech', 'Codingbootcamp', 'Sydney']",https://medium.com/@jessalves/your-words-cannot-exercise-their-power-if-they-remain-hidden-in-your-mind-38eeb45ff1f7,0,[],0,47,jessica,F,0.9965885117632921,0.0034114882367078806
Fullstack Academy,"The world’s top ranked immersive software engineering school, based in NYC and Chicago. New courses start every 7 weeks. Y Combinator backed.",How to Conduct a Successful Job Search in 5 Steps – Fullstack Academy – Medium,2017-05-04 19:46:37,medium,"How to Conduct a Successful Job Search in 5 Steps Your job is your life. I know, this isn’t true, but the way you spend ten hours each day will inevitably occupy your thoughts, even when you’re off the clock. Finding the right company and role will drastically increase your overall wellbeing. ( In this piece I’ll review how to succeed in your job search no matter what position your going for, but it definitely pays to have the right skill set for your dream job. If you’re still undecided on what career is best for you but you want to make yourself as marketable as possible, I highly encourage you to study coding — it’s the most in-demand skill in tech right now, and it’s applicable to almost any role. If you’re interested, Fullstack can send you a vetted list of free online learning resources to get you started. You can access the ebook here. ) Now, as the head of career success at Fullstack Academy, I navigate the job search process constantly — I help hundreds of students get amazing jobs in tech each year, and I know what leads to success. I’ve also been a technical recruiter for both large companies and late stage startups, giving me unique insights into how companies evaluate candidates. I could write a lengthy novel based on every candidate I’ve interviewed and job-search-hopeful I’ve mentored, but the following are the essential points, from start to finish, when searching for your next amazing role. Step One — Figure Out What You Want The first mistake job seekers make is often fatal: You should not begin your search on Indeed. Start by thinking about what exactly you’d like to be doing and where you want to do it. It may seem strange to focus your efforts around specific companies rather than the ones you know are hiring today, but this specificity is key. Every step along the way, from resumes and cover letters to the questions you ask at the end of interviews, will require a lot of tailoring and forethought. It’s about quality over quantity, and you have a better chance of getting your ideal job by giving a ton of energy to a few positions than by giving minimal energy to everything you mouse-over. Also, now is when you should start thinking about salary. Not dreaming, demanding, or expecting a specific salary, but thinking about it in an objective, strategic manner. Conduct various online searches to see what people with your skill set and your desired job title make. Form an educated, realistic range of what you could make and put your ideal number in the middle. ( Some career coaches will say to put your ideal number near the top of the range, but I like the middle so that an eventual offer may still be higher than your “sufficient” amount. ) Step Two — Make Connections Never apply online. If you see an opening you want on a company website, look for connections. Do I know somebody who knows somebody? Search for connections on Linkedin — ideally first degree, but second degree connections can also lead to introductions. Start a conversation and exhibit your enthusiasm and knowledge about the company from the very first impression. This introduction, whether it’s coming from you or another person, should be meaningful, but also straight-to-the-point. Remember to include a link to your resume. If your qualifications don’t match any openings at one of your target companies, don’t despair. This is where you ask for a coffee-chat. “ I see you’re working at T H I S C O M P A N Y, and while I understand you aren’t hiring right now, T H I S P O S I T I O N would be perfect for me. I’m curious to know, from your perspective, how my qualifications match up. Do you foresee any future opportunities opening for T H I S P O S I T I O N?” Attach a copy of your resume and don’t forget to periodically check-in. You may feel this is annoying, but if the messages are brief and courteous, persistence will demonstrate your passion for the role. If the online application cannot be avoided, go ahead, but I can say from experience that the “applicant tracking system” is where many good resumes have gone to die. Speaking of resumes… Resume Tips Tailor each and every resume you send out. This is a perfect example of why you want to limit the number of companies you focus on. Read the job description very carefully. Make sure your first few bullet points (at least) clearly and directly address the primary qualities listed. You may even go so far as to use similar wording. If you’re worried your experience doesn’t perfectly match up with the role, highlight soft skills from your previous jobs that directly pertain. Serving jobs: superior customer service, sales experience, brand knowledge. Data-entry jobs: attention to detail, increased efficiency, productive work output, etc. Don’t include a “ Mission Statement” or “ Career Objective” unless you’re a career transitioner or applying for a senior position. Your worth to the company will be shown through your qualifications. Passion and abstract thoughts can be best told through your cover letter. And speaking of cover letters… Cover Letter Tips Is a cover letter important? Definitely. You can’t fit all your experience in a resume, and this is your opportunity to show how your passions align with the company’s objectives. Plus, you don’t want to be unprepared in case one is required! Cover letters should be short. Not three sentences short — but three paragraphs tops. You can’t assume recruiters or H R personnel will look at your cover letter first (they likely won’t), but if you make it past a resume screening, here is where you will make your pleading case. Make it honest and make it memorable, but please make sure you proofread! For those who aren’t linguistically inclined, you may make a template for your cover letters, just not a madlib-style one. The first paragraph should always be original and entirely focused on a specific company and role. Qualifications and experience may also need significant edits to better-match a job description. A general guide to follow is: why you’re interested in the company and role, why you’re a unique fit for the position, and (don’t forget) your contact information. Step Three — Phone Interview Prep Why do you want to work for this company? Why are you a good fit for this role? If you’ve properly narrowed your search to only a few specific companies (see step one), the answers to these questions should be honest and easy. However, it can’t hurt to continue doing research. You should pinpoint the top three or four requirements from the job listing that best match your skills/experience and make a concerted effort to showcase them. Initial questions about salary will come up. You should have prepared your range beforehand and be able to answer this question directly with little fanfare. There will also, inevitably, come a point in the phone call where your interviewer will ask if you have any questions about the role. Prepare these ahead of time and write them down. Anxiety often leads to forgetfulness. It may sound obvious, but hopefully you can find a quiet room with plenty of space. Background noise is distracting for you and your interviewer, and you’ll probably become a little nervous during the call. It doesn’t help to be out of breath, but slowly pacing helps me think and ignore the jitters. The tone of your voice also counts for double since your interviewer can’t see your energy — try to “smile through the phone. ” Step Four — The On- Site Interview First, some simple but important reminders: Don’t be late. Arrive in the area 20 minutes early and walk in 5–10 minutes early. Bring a pen and paper to take notes. If this is a technical role, bring your laptop. Have a portfolio of your work and references ready — there’s no need to share unless they ask. On-site interviews can be long. Packing a bottle of water and some light snacks can help you avoid distracting discomfort. Dress professionally, but not unnecessarily so. You can get a good idea of a company’s culture by looking at pictures on their website or employees’ Linkedin photos. Arrive dressed ½ step above the company status quo. Besides physical preparations, once again, the key to success will be research. Start by learning about your interviewers on Linkedin, and create a list of questions specifically tailored to that person’s role. This will display your interest in the company beyond the role you’re pursuing and help create a dialogue — the keystone of good first impressions. You can also use this research to predict the questions you’ll be asked. A product manager might ask you to talk about why you like certain products or how the company’s U X could be improved, while a marketing director might ask about where you’d look to see if a campaign was succeeding and how you would improve click performance. When asked about specific events or examples from your past, try to mention projects you’re proud of in order to demonstrate passionate and energy around your work. If a negative question comes up — Tell me about a time you didn’t meet expectations — it’s pertinent that you own the failure. Admit to any wrongdoing, but talk about what you learned from the experience and what changes you made to improve going forward. In general, try to consider the purpose behind the questions you’re asked. Behavioral interviews are about discovering your work process and how you’ll fit into the environment of the role. Use your answers to achieve a goal. Step Five — Accepting Offers and Negotiation Congratulations! You’ve done your research and successfully conducted a targeted job search. The final step is to (potentially) negotiate your offer to maximum advantage. One main point to remember: you shouldn’t negotiate unless you’re prepared to accept the offer. That is to say, only negotiate if you think you’re going to take the job, and when you do negotiate, do it respectfully. Remember the range you told the company rep during your phone screen and don’t go higher. This can be a turn off, and until onboarding is complete, offers can be rescinded. If you’ve received offers from multiple companies, it’s my professional opinion that you should only negotiate with one. Be honest with the companies; don’t upset your employer before you’ve even started working! The only situation in which you can ask for more than your initial range is if you unknowingly lowballed your expectations at the beginning. If new research tells you that you should be making more in this role than you previously thought, be honest and let the company know. Again — I must stress — be respectful and humble if this is the case. Regarding negotiation tactics, my one big recommendation is to not be bullied into a verbal acceptance on the spot. If this situation arises, let the company representative know that you’re very excited and grateful for the offer, and that you’ll get back within 24 hours. They should be understanding of the situation — this is a possibly life-altering decision after all.","['Job Hunting', 'Resume', 'Codingbootcamp', 'Coding', 'Software Engineering']",https://medium.com/@FullstackAcademy/how-to-conduct-a-successful-job-search-in-5-steps-9aaf93e4631f,2,['Fullstack Academy'],1,0,fullstack,Unknown,Unknown,Unknown
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",MongoDB – Emily Deans – Medium,2017-08-02 01:16:40,medium,"Mongo D B Today we made our first foray into the world of databases via Mongo D B. I’m going to be honest, working with so many callback functions that were being passed between so many routes R E A L L Y rattled my brain. Because I still need to focus on making more headway on today’s projects, I’ll just leave you with a few quick notes on Mongo D B: It’s a No S Q L Database, which means that it stores data in documents and collections of objects (i. e. , J S O N) It represents the ‘ M’ in the phrase ‘ M E A N Stack’ — the other letters representing ‘ Express’, ‘ Angular’, and ‘ Node’, respectively Organization in Mongo D B is primarily done via two categories — databases and collections. Databases are essentially a parent grouping that houses collections made up of documents It often uses ‘ J S O N’ ( Java Script Object Notation) for exports and ‘ B S O N’ ( Binary Java Script Object Notation) to represent those documents internally Tomorrow we’ll be tacking ‘ Mongoose’ on to the learning stack. Hoping it won’t feel quite as confusing as our Mongo work today, but have a minor hunch that may not be the case… Song of the Day: ‘ When I Needed You’ by Carly Rae Jepson","['Mongodb', 'Lesbians Who Tech', 'Code Newbie', 'Codingbootcamp', 'Women Who Code']",https://medium.com/@emilyldeans/mongodb-8942a76bc3f1,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Michael Milligan,"Executive Director & CEO of ABET, the global accreditor of college and university programs in the STEM disciplines.",Solving America’s STEM Shortage Requires More Than Boot Camp Education,2017-07-26 14:50:15,medium,"Solving America’s S T E M Shortage Requires More Than Boot Camp Education The Learn to Code movement. It’s hard to ignore. Politicians, nonprofit organizations such as Code. org and hundreds of top Fortune companies have lauded what they view as a necessary skill for tomorrow’s workforce: coding. And with more than 100 coding boot camps around the world that claim to transform students with zero to limited coding experience to fluent coders in a matter of 12 weeks, this movement is catching the attention of employers, academics and students. At A B E T, we agree that coding and a basic understanding of computers are critical skills for the 21st century and represent the language of our time. President Obama last year called computer science “a basic skill, right along with the three ‘ R’s. ” But employers must be realistic about the differences between learning to explore a new language and mastering a field of study. Coding is a very basic skill associated with Computer Science, so expecting boot camp graduates to have as much, or more, knowledge about computing than students who graduate with an associate’s or bachelor’s degree is unrealistic. According to a recent Mc Kinsey study, 87 percent of I T leaders rate themselves poorly in terms of their ability to bring new ideas to market quickly. Yet today’s 21st century businesses and industries demand a workforce that can evolve as quickly as the scientific and technological capabilities surrounding them. This, as well as the economic projections indicating a need in the U. S. for approximately 1 million more college graduates in science, technology, engineering and math ( S T E M) fields by 2022, is vital if the country is to retain its historical preeminence in science and technology. We have to provide our students what they need to thrive in dynamic, high-paying S T E M fields. But does the answer lie in a 12-week program? It’s true that coding boot camps can provide a critical boost for prospective employees by helping them develop some basic computer skills, but as a single solution, they fall far short of addressing America’s need to build well-rounded leaders in S T E M fields — leaders that have the knowledge, skills and experience to forge new paths for their organizations. But, what are the unintended consequences of investing too heavily in training future employees on single skill sets alone, given how quickly technologies emerge, evolve and become obsolete? Without a commitment to providing a well-rounded education and encouraging students to become lifelong learners, we will never develop the robust S T E M workforce we need for our country to succeed. At A B E T, we understand the key to meeting this demand is to allow education to evolve in response to market demands, while at the same time preparing our future S T E M leaders to succeed. The educational experience — experimentation, growth and collaboration — that comes with a two- or four-year academic program is key to developing employees focused on solving complex problems in a way that no boot camp can do. All over the world, institutions are developing innovative student experiences that are truly focused on meeting the needs of their local business and communities. Many of these programs will choose to pursue A B E T accreditation because they understand that accreditation will not only enhance the educational experience of their students but will also make them more attractive to potential employers. These institutions help prepare their graduates for entering a competitive, global workforce while providing them with both the necessary S T E M breadth and depth, as well as the leadership skills to drive innovation in their future workplaces — making them the flexible, adaptive leaders the S T E M industry needs. As an organization, we have also evolved and kept pace with these changes. We now have accredited programs in the emerging disciplines of cyber forensics and information security and electronics and computer engineering technology, to name a few. The disruption caused by the changing dynamics in industry and the popularity of boot camps has led some to question the value of a college degree. This disruption has also led many institutions of higher education to develop innovative approaches and new programs, which may provide us with the best chance to create the S T E M workforce that can deliver what 21st century industries demand.","['Education', 'STEM', 'Codingbootcamp', 'Coding', 'Higher Education']",https://medium.com/@ABETaccredit/solving-americas-stem-shortage-requires-more-than-boot-camp-education-3570e1fc0a6f,9,[],0,1,michael,M,0.004965539448960512,0.9950344605510395
Jaz Liu,Everything in the world is interconnected.,Coding Diary – Jaz Liu – Medium,2017-07-24 15:17:12,medium,"Coding Diary Author’s Note P C: Sanderson Welcome aboard, mate! :) Greetings, curious one. Welcome to Jaz’s Actualize Coding Diary. Here you will sail the ship with me to experience what it’s like to learn coding from Actualize bootcamp online to become a software developer. What is Actualize? Actualize is a rigorous, part-time full-stack web development bootcamp with cohorts located in Chicago’s Technology & Entrepreneurship Center, 1871, and just recently opened their first online cohort (which I am in!). They are proud to have teaching professionals who have experience in both education and software engineer. I chose Actualize for their mentorship style of teaching and apprenticeship experience. Curriculum calendar: Weeks 1–4: Prework. Individuals build their coding foundation by practicing coding exercises through video tutorials, narrated by Actualize founder Jay Wengrow himself! Weeks 5–17: In-class. Students and instructor meet online full day Sunday 9am-5pm ( C T) and Monday to Thursday 6pm-9:30pm ( C T). Weeks 18+: Apprenticeship. Students will work in teams to gain hands-on workplace experience through apprenticing at Actualize. This can be done online, and can span from weeks to months, it’s up to you. Get to know me Who am I? I am a millenial girl from Des Moines, I A actively practicing Mahayana Buddhism. I have been a vegetarian for life, and am also a fluent bilingual. The loves of my life: Taiwan: aka Formosa, “the beautiful island”, where I was born. It is a food haven. Interior design: Painting, decorating, renovating, moving furniture… I love it all! Plants: From choosing the right ones to growing and learning their names and personalities. Instruments: I’ve learned the Chinese violin “erhu” professionally, and like to play on the piano for fun. Family: My world. Charity: My purpose. Author’s Note You and I have more in common than you’d think. We eat, we sleep, we get tired and we have good days (and bad days). Furthermore, we have beliefs, feelings, and responsibilities. I am pointing out our commonalities because I used to think people who go through bootcamps are, well…superhumans. Seventeen weeks of hardcore training to go from zero to mastery didn’t seem humanely possible to me. From my lack of computer background, I wasn’t the least bit motivated to apply to coding bootcamps. …until I met Jay Wengrow at a coding info session. He told me that at Actualize, anyone can learn to code. Anyone. It was a bold statement and one that got me applying, even though I still thought someone like me wasn’t good enough to be in the program. At the time I am writing this to you, I am in the ninth week of the program and going strong. Mind you, it is by no means a breeze to get by. As someone like me, you will have to work twice as hard and spend your free time reviewing class notes and videos. But with hardwork, a positive outlook and a growth mindset, you can sail the coding world with courage and determination. In this diary, I will be blogging about things I learned from Actualize bootcamp, and sharing reflections on my growth as an individual. If you want to get a taste of what it’s like in an online coding bootcamp, click the follow button! :) To learn more about Actualize, visit their website Anyone Can Learn To Code. You can also see raving reviews of the program at Switch Up.","['Codingbootcamp', 'Online', 'Coding', 'Diary', 'Web Development']",https://medium.com/@jasliu2012/book-one-stepping-into-the-coding-unknown-8ceec8d927c3,2,[],0,0,jaz,M,0.328125,0.671875
Ari Kramer,,Taking the leap into coding was the best decision of my life,2018-05-06 14:38:55,medium,"Taking the leap into coding was the best decision of my life I’m a sports-writer-turned-software-engineer. I know. You don’t see that every day. When I tell people that I used to cover sports for Newsday, the most typical response takes some form of, “ Woah, that’s so cool!” and then “ Why did you want to leave?” This is my explanation. As a high schooler, I probably would have passed out if someone told me I would one day interview Robinson Cano and stand inside the Yankees’ clubhouse. I lived both those dreams as a sports reporter for Newsday and remained conscious to remember them forever. One of many stories I wrote in the Yankee Stadium press box. Journalism will always have a special place in my heart and memory. As a freshman at Binghamton University, I joined the student paper as a track and field beat writer and eventually ascended the hierarchy to sports editor as a senior. Binghamton did not have a journalism program, but I read constantly and incorporated styles and techniques I gleaned from my favorite writers as I wrote stories of my own. When I graduated in 2014, I landed a job with Newsday. I worked alongside reporters with degrees from the country’s most prestigious journalism schools, and I earned more demanding, high-profile assignments than them. I wrote more than 400 stories for the country’s eighth-most circulated paper. I am extremely proud of my journalism accomplishments. But my interest in journalism did not extend beyond sports, and if you want to cover sports, you need to work nights and weekends forever — that’s when the games happen. I did not realize how straining that would be until living through it for three years. There are also fewer and fewer full-time jobs each year. As a duo, those factors made long-term career prospects bleak. I was not willing to leave journalism for just any career, however. While working for Newsday, I seriously looked into transitioning to T V and marketing. I even got accepted into the N Y C Teaching Fellowship. None of those fields captivated me enough. Then I started writing Java Script on Codecademy. I got hooked instantly. As I spoke to my software developer friends and researched the field, I became even more passionate about a career as an engineer. I learned that the creativity, persistence and precision I cultivated as a writer would be required every day. That excited me. Those traits helped make me a great reporter, and they have propelled me through the early stages of my coding journey. I left Newsday in August just to take a Java Script prep course — working nights and weekends precluded me from collecting a paycheck during the day and learning to code at night. But I was all in. By October, I was a student at Fullstack Academy, widely regarded as one of the top coding bootcamps. I spent four months immersing myself in their full-time program and built apps with React, Redux, Node, Express, Sequelize and many more technologies. I built this!! I performed well enough that Fullstack offered me a Teachers’ Assistant position for the February cohort. Having the opportunity to teach Java Script frameworks and fundamental coding concepts has only made me more excited about my career change — I have found something I love. Diving headfirst into this coding journey was definitely daunting. It was hard to leave what at one time was my dream job, and, of course, the bootcamps are not cheap. If you’re reading this and considering making a similar leap, I imagine you’re somewhat apprehensive as well. I can only speak to my experience, but seeing how much I have learned and what I am able to build less than a year after leaving journalism, I can say with 100 percent certainty that this was the best decision I’ve ever made.","['Coding', 'Software Development', 'Codingbootcamp']",https://medium.com/@arikramer24/taking-the-leap-into-coding-was-the-best-decision-of-my-life-1ed40b6b347b,1,['Fullstack Academy'],1,0,ari,M,0.18343949044585986,0.8165605095541402
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,This is It – L.J. Yockey – Medium,2017-07-31 16:18:43,medium,"This is It Well, I have officially quit my job! This week will consist of frantically finishing up the last of Thinkful’s requirements so I can start focusing on looking for a job. What does that mean exactly? Routine, routine, routine! A strict routine helped me stay on-track while enrolled with Thinkful and working a full-time job. I’ve quickly realized that a routine will be even more important now. My days will consist of daily code challenges, being active in Thinkful’s Slack community, iterating over my projects, and applying for jobs. Of course, I have to pack at some point too, because I am moving to Los Angeles one week from today! In a lot of ways, the real work starts now. More than anything, Thinkful has taught me that I can do a lot more in a 24-hour period than I ever thought possible. A career in Web Development is something I’ve wanted to achieve for 2 years. Now that I’m at the brink of employment, I wonder what took me so long to get here (after all, Thinkful is only a 6-month program). I won’t get into the details of my personal journey, but I will say that timing is everything. I was not in a position to make Thinkful my first priority when I first gained interest in Web Development, so I don’t know if I would have finished. I also needed major motivation. Motivation (the “why”) comes in many forms for many people. For me, it was to get out of the Casino industry and out of Vegas altogether. Whenever I got frustrated with my job, my mentor, Rachel, always told me to channel that frustration into motivation. It worked for me! Working in the Casino industry was mostly a positive experience, but it was not where I wanted to be. Rachel definitely helped me stay focused when things got chaotic. I know I’ve said this before, but I can’t say it enough: I’ve learned so much more in the past 5 months than I did in the prior 18 months that I tried to learn Web Development on my own. I didn’t know how to learn prior to Thinkful. Looking at documentation was overwhelming and I didn’t know the basic foundations well enough to even know where to start. Here’s a quick recap of the stuff I’ve worked on since enrolling in Thinkful: With the Disneyland Quiz, I learned to structure my data in a more logical way by using a state object to hold all of my variables. In Kitty Opinions, I got comfortable with A P Is by using 3 different ones in a single, frontend app. The Sequelize Blog App was when I fell in love with building my own A P Is (and when I realized that I prefer S Q L over Mongo D B) The Hospit Alert Demo was my first full-stack app. The Hot-and- Cold game was my first React app. The updated version of Hospit Alert features a React client and a separate Node A P I. This was my first app with authentication using Facebook O Auth. Looking back at all of the work that I’ve done, work that I would have never been able to do 6 months ago, helps to combat Imposter Syndrome. Every single one of these projects could benefit over some iteration, which is great because it’ll help me keep my skills sharp as I look for a job. Having left the Golden Nugget, a major chapter of my life has officially ended. But you know what they say when one door closes… Thanks for reading!","['Tech', 'Learning To Code', 'Codingbootcamp', 'Coding', 'JavaScript']",https://medium.com/@Ljyockey/this-is-it-314973cd0129,5,[],0,3,l.j.,Unknown,Unknown,Unknown
Jake Metz,,Week 14/5/18 to 18/5/18: – Coding Bootcamp Diary – Medium,2018-05-19 11:43:57,medium,"Week 14/5/18 to 18/5/18: Let’s get back onto this horse shall we! Suffice it to say it has been a while since I have made a coding bootcamp diary entry but the time to get back on that horse is N O W. All the while I have found it very easy to blast out tweets of my tech experiences, musings, and learnings very easily. However, my goal here is as much to practice writing as it is practice and discipline to sticking with a side project even though my schedule is overflowed with learning. So, to put a quick disclaimer out there I may be going back in time a bit in my recollection to get this series back on track. Without further adieu let’s get back on track. C O N C E P T S C O V E R E D T H I S W E E K Enter Java Script into the equation. This week we have begun moved on from learning Ruby and Ruby on Rails to learning Java Script (vanilla J S to be specific). Differences and similarities between Ruby (1st language covered )and Java Script Data Types, functions, and objects Classes, _proto_, protoype, and using ‘this’ J S O N ( Java Script Object Notation) Callbacks D O M ( Document Object Model), B O M ( Browser Object Model), and Web A P Is ( Application Programming Interface) Discrete Math: Functions M E E T U P S/ E V E N T S A T T E N D E D Syd J S. S Showcase Meetup @ Atlassian Now that we have started Java Script I found it appropriate to attend a J S related meetup. The meetup ‘showcased’ a company active in the Sydney Java Script community to the Community at large. That company was Tok Box and it was truly amazing to see how quick they could get live streaming up and running in their React demo. M A N Y more J S meetups to come in the near future and thus far that was meetup #9 I have attended since starting school. C H A L L E N G E S/ H I G H L I G H T S O F T H E W E E K C H A L L E N G E: Getting back into the swing of a daily learning routine while coming off of a two week marketplace application project was tough. Callbacks were/are the toughest concept of the week for me to learn. H I G H L I G H T: Seeing very quickly how learning another language will be theoretically faster paced while at times reinforcing things I had learned in Ruby already. R E S O U R C E O F T H E W E E K B A S E C S ( M E D I U M B L O G P O S T): Exploring the basics of computer sciencebasecs Exploring the basics of computer science, every Monday, for a year. medium. com I L O V E this series and have been committing to reading 1 article every morning during my breakfast. It is especially important as a bootcamper to be covering as much of the C S theory as I can since it will be an area of weakness we have as compared to your typical 4 year C S degree holder. This resource is a great starting place for newbies to shed light and move these topics from an ‘unknown unknown’ category into a ‘known unknown’ category.","['Web Development', 'Codingbootcamp', 'Learn To Code', 'Lean Software Development', 'Programming']",https://medium.com/coding-bootcamp-diary/week-14-5-18-to-18-5-18-c660eff0f748,1,[],0,0,jake,M,0.0017803375257410552,0.998219662474259
Dex Mills,dexmills.com,"Interviews, and slacking like a champ – Dex Mills – Medium",2017-09-01 21:24:06,medium,"Interviews, and slacking like a champ Its been more than 48 hours since I submitted my last application and it feels like longer that I have put the effort in to craft something great, to send out. With that being said, I still don’t feel like that is a loss as I spent most of the last three days looking to better myself for interviews. I had the one with Silverton which is one that I feel super strong about as it is an area that I really enjoy at a place that I have worked at in the past. The only down fall is that I don’t quiet have the skills to fill out what they are looking for. Still I could fill it and it would allow me to grow in an area that I feel at home in. Well not comfortable but an area that challenges me to be better and work on myself rather than just meet the status quo. I have to build a proposal with what I would build for their back end and salary requirements. I will see where that one ends up but I am hopeful. I had another second interview at Black Diamond, and that one still baffles me as all of the talk that I have heard about their filling of job positions has been that getting a job requires an internal reference, and I went thru the front door to make it happen. Still even more baffling is that I managed to get a face to face interview, while knowing that I was short on the skills. I found it very useful in the long run as they did provide some much needed guidance on what to do, and applauded the path that I was on and to keep on it. While it does hurt to hear that I don’t have the skills( Y E T!), the win of just getting an interview (and second!!!) by walking thru the front door is more than enough to keep the fire stoked. More than likely going to spend this weekend just grinding out lessons as I feel like I am falling behind on that. Also planning on building a schedule for myself to follow the next few weeks to improve on my production and get some wins. Song of the Day “ Running out of Time” Pennywisehttps://www. youtube. com/watch?v=tv6w254fu Rw","['Interview', 'Codingbootcamp', 'Career Change']",https://medium.com/@dexmills/interviews-and-slacking-like-a-champ-78f0c69b1fa8,0,[],0,0,dex,M,0.0,1.0
Natasha Munasinghe,…Just another human on this blue dot…https://au.linkedin.com/in/natashakhema,Reflections from a 1st time Dev-in-the-making… – Natasha Munasinghe – Medium,2018-08-30 09:57:33,medium,"Reflections from a 1st time Dev-in-the-making… Coding has in equal parts fascinated and terrified me for a long time. It’s something I immensely admired in people who could do it (especially female coders :) — but when it came to thinking that it may be something I could do — there were/are some many reasons that it wasn’t for me. Few choice reasons…“ I am terrible at maths”“ My mind doesn’t think that way”“ It’s too late to learn”“ I don’t know where to start”…. and so on and so on…. I have previously professionally transitioned from a lawyer, to a stakeholder negotiator to now running a H R and training company for the last 6 years; and I have followed the tech world from the fringes. Until a week ago. A week ago; I started Coder Academy’s Fast Track Coding Bootcamp. It’s only 2 weeks and I feel completely out of my depth and exhilarated all at the same time. In such a short space of time, I have gone from barely understanding how a M A C works to now coding a small banking app using Ruby. 5 Few Key Lessons Learnt/ Re-affirmed Importance of having growth mindset ( We share this at my company when we teach budding entrepreneurs); it’s weird and so totally relevant to hear and apply it myself as I learn this completely new skillset! The coding community is A M A Z I N G. It’s awesome to see how authentically collaborative, supportive and helpful everyone is …from the students to the educators to the industry folk we have met. The point of a programming language is to actually provide guide posts for the programmers that come after you (and who have to work with your code) — so you build keeping them in mind. I found this point fascinating. Git and Git Hub are super important tools for budding devs. ( A blogpost to follow on this soon, I promise!) I am really, really loving coding. I am absolutely struggling at it but nevertheless, my brain is so ready to learn. Okay that’s it for now…. but I will keep updating on this Dev adventure as I go along.","['Tech', 'Ruby', 'Women In Tech', 'Codingbootcamp', 'Full Stack Developer']",https://medium.com/@nat_khema/reflections-from-a-1st-time-dev-in-the-making-177766bc3464,0,[],0,0,natasha,F,0.9970190155429576,0.002980984457042445
Hack.Diversity,"Program of @newenglandvc, tackling the under-representation of minority talent in Boston’s high-skill innovation economy.",Cohort Stories: Meet Maria Cristina – The Hack.Diversity Movement – Medium,2018-05-03 17:16:50,medium,"Cohort Stories: Meet Maria Cristinavol. 2, no. 26 — guest post by Maria Cristina Del Valle Maria Cristina Del Valle, Resilient Coders bootcamp graduate & 2018 Fellow After I completed my coding bootcamp, I realized that while I have built strong skills in coding, there is still a lot that I must improve upon to build a successful career. I applied to Hack. Diversity because I felt that this would provide an opportunity for me to build my professional skills, receive interview feedback, and help prepare me for accepting a permanent job. The opportunity to be around other people of color while also working with a product will not only allow me to be in a position where I can interact and learn from people’s experiences, but also provide a chance to get an inside look into how things work in the technology industry. Technology has always been around me. However, it wasn’t until high school that I realized my love for technology and the importance of it in my life. I have dyslexia, which has made reading and writing difficult. Because of this, I was given a computer to help me complete assignments in high school. The computer made the difference between me succeeding in school and not being able to keep up. My next major exposure was when I took a graphic design and animation class. I’ve always loved art and wanted to use technology to make art. I realized that I really enjoyed working with different programs and learning. I saw the unlimited opportunities that technology presented and embraced the chance to learn more about those opportunities. Through these experiences, I have come to understand that technology is the key to break down barriers for people and to lead them to unlimited opportunities. Internship matches will be announced May 2018. Stay tuned! Support, Website, Facebook, Twitter, Instagram, Linked In","['Web Development', 'Codingbootcamp', 'Diversity In Tech', 'Women In Tech', 'Career Paths']",https://medium.com/hack-diversity-movement/cohort-stories-meet-maria-cristina-69f19db459c3,1,['Resilient Coders'],1,0,hack.diversity,Unknown,Unknown,Unknown
Perry Eising,Tech | Advocacy | Diversity | Queer | Adventure. Whiskey - rocks - no chaser.,Death of a Whiteboard: How to crush any technical interview,2017-12-02 00:10:23,medium,"Death of a Whiteboard: How to crush any technical interviewit is true though. Today was not quite a typical day at the code school where I teach. Instead of helping students work through lessons, today, teams of four students pitched the M V Ps of apps they had been working on to our big room of students, faculty and staff. After a long week of prep, I was excited to be helping my class put the finishing touches on their Angular J S and Android apps. The room was buzzing with energy, and many groups presented work with built out capabilities and beautiful user interfaces that look as market-ready as their ideas. I have been teaching at a code school for two years now, and my students are frequently quite diverse, in both age, gender, and background: They are veterans, they are undocumented, they are first generation immigrants whose first language is not English. They are transgender. They are gender non-binary. Over 50% of them are women. They love solving problems. They love building things. They’ve completed hundreds of hours of practical, hands on training, and they are hungry for their first real tech job. B U T: They are super intimidated by whiteboarding — solving problems on a whiteboard with no computer, and technical interviews, where candidates get grilled on technical topics — because they know that despite their awesome, proven skills, they are especially disadvantaged by being nontraditional backgrounds and being minority students. And they aren’t alone: Many developers, whether they are from underrepresented groups or not, are intimidated by these kinds of interviews. But what is important to know is the following: Whiteboarding is not about how well you can code, it’s about how well you can think and explain. That’s a fantastic opportunity, if you use it right. And so today, I want to share with you some of the tips and techniques we practice with our students to allow them to show up well in whiteboarding interviews. These are not language, platform, or technology specific. Just the same way as there are reasonable approaches to succeeding on standardized testing, there are strategies you can use to improve your ability to make a good impression in any technical or whiteboarding interview you come across. Let’s jump right in. Know your acronyms One of the easiest ways to flunk any technical interview is to not know your acronyms backward and forward. Work with the material: If you are asked an acronym question, or a question featuring an acronym, be sure to spell out that you know what it stands for. Why? If you are only used to talking about R E S T or J S O N, you might balk at being asked to speak on the finer points of “ State Transfer” or “ Java Script Object Notation”. Work with the setting: When you are nervous, your brain doesn’t work very well. Pointing out that A P I stands for Application Programming Interface might very well jog your memory. Make a point of learning and knowing commonly used acronyms in your field of study. Get your setup right for phone screenings If you are like me, and talking on the phone is your version of one of those paralysis nightmares, you’ll feel better if you are getting your setup right. Prepare for it like the interview that it is. Make sure you are in a quiet, private environment with a good phone connection. Have a hands-free headphone situation with you so you can speak freely. Have a computer station nearby, as well as a pen and paper. Work with the setting: Take advantage of the fact that you are not visible during the interview. Pace, do savasana, or sit on the floor if it calms you down. Have paper notes, or sit at a computer. Have your teddy bear, dog, or grandpa in the room with you. Whatever helps, helps. Work with the material: Write down the person’s name who you are speaking to so you don’t forget it by the end of the call. Show interest. Ask questions. Write notes. Evaluate and Communicate: Ask yes/no questions to buy time and clarify contexts If you are asked to explain a technical concept or perform a whiteboarding exercise, make sure you ask any clarifying questions before you begin. Let’s look at an example: Write a function that accepts the following input:let input Names Array = [“ Dench, Judy”, “ Mirren, Helen”, “ Andrews, Julie”, “ Jolie, Angelina”]and returns the following output:let output Names Array = [“ Dame Judy Dench”, “ Dame Helen Mirren”, “ Dame Julie Andrews”, “ Dame Angelina Jolie”]; You might ask the following of your interviewers before you begin: Will the input array will always have a length of 4? Currently, the list isn’t sorted. Is this intentional? Can I write the solution in pseudocode? Can I assume that there will never be duplicate names in the array? And so on. Work with the material: Clarifying things before you begin shows you understand the complexity of the problem. Also, can likely rule out unexpected nuances that might trip you up later. Work with the setting: Asking clarifying questions gives your brain an opportunity to start warming up, before you begin responding or writing down code. It also kills a little bit of time, which is a good thing. Never say “ I don’t know”. Also Never: Make Stuff Up When you panic, hit a wall after being asked a tough question, and blurt out “ I don’t know” , you’d be forgiven to think you are just given an honest response. In reality, you might be showing your too much, and you are not giving your interviewer much to work with to turn things back around. Not knowing the answer is not necessarily a dealbreaker, not handling stress or pressure appropriately might well be. So stay cool. Whatever you do: Resist. The Urge. To. Allow. Streams. Of. Nonsensical. Rubbish. To. Exit. Your. Face. A crappy answer will be memorable in a bad way. Find a different way that shows you in a better light. This is how you get out of this pickle when you point blank don’t know: Take a deep breath. Calm your mind, and ask a few questions. Work with the material: If you thoughtfully ask your interviewer to clarify, specify, let you know concretely, or any other phrase you should practice beforehand, you may well get some useful information. It also, again, gives your brain some time to catch up. Congrats, you just showed grace under pressure. Work with the setting: If your interviewer seems friendly and casual, you might be able to carefully admit to not knowing the answer to a question. How you handle this situation is more important than not knowing. Verbalize and prioritize, plan, execute When you are asked to whiteboard a solution to a problem, you should verbalize what you are going to do before you do it, and write down a list of actions you are going to perform. Yes, with the pen you are holding. Let’s return to our earlier example: Write a function that accepts the following input:let input Names Array = [“ Dench, Judy”, “ Mirren, Helen”, “ Andrews, Julie”, “ Jolie, Angelina”]and returns the following output:let output Names Array = [“ Dame Judy Dench”, “ Dame Helen Mirren”, “ Dame Julie Andrews”, “ Dame Angelina Jolie”]; Given that we have an array, it seems like we willprobs need a loopmust declare and init out Put Names Array outside of loopsplit our array element in some wayremove commafix orderprefix with “ Dame”push to out Put Names Arrayreturn at the bottom. Cool. Now you have a plan, as opposed to running around like this guy. Work with the setting: Talking through your plan allows you to take the temperature of the room before you are wrangling lines of code. If your interviewer spots an error, they may give you a tip you can use to clarify your approach. Work with the material: You have a whiteboard and a pen — use them! Write the list down as you verbalize it — then, check things off as you code. Keep explaining out loud. Don’t make the interviewer guess your thoughts. Whiteboarding interviews are not about writing perfect code — they are about communicating your thought process as you solve a problem. So do just that! Wrap Up Give these tips and tricks a whirl. While you are still going to be nervous, having a structure and ideas in place can help you feel like they have options and maneuvering room as opposed to being painfully exposed in front of a giant empty whiteboard with no plan. Remember: Nobody expects perfect syntax, but they do expect you to show that you can communicate well. Don’t sweat the small stuff, focus on the big picture. Prepare as best you can, hydrate, and practice these tips before you dive in. Good luck — and feel free to share how things went! Perry Eising","['Interview', 'Whiteboarding', 'Codingbootcamp', 'Coding Interviews', 'Diversity']",https://medium.com/@perrysetgo/death-of-a-whiteboard-how-to-crush-any-technical-interview-2e83a8b2149,2,[],0,12,perry,M,0.03729615720973301,0.962703842790267
Lisa Shepard,,A Somewhat Deep Dive into FizzBuzz – Lisa Shepard – Medium,2018-05-07 02:18:13,medium,"A Somewhat Deep Dive into Fizz Buzz Fizz Buzz was (probably) the first problem I came across when I started programming, and unlike a bunch of other stuff, I haven’t forgotten about it. To be honest, I’d say I think about Fizz Buzz a lot. I don’t know why. Sorry, I got sidetracked. If you’re still with me — thanks, by the way–– I promise we can finally talk about whatever this Fizz Buzz thing is. So … what is Fizz Buzz? Nice, great question. To non-programmers, Fizz Buzz is a game that’s used to teach children about division and multiplication. Players count incrementally by 1, reciting a number or fizz, buzz, or fizz Buzz, according to that number’s value. In the world of tech, it’s a question that’s used during interviews to filter out developers who don’t really know how to actually produce code. A prospective employee’s qualifications and knowledge of data structures don’t always translate to competent code-writing. So, the question’s essentially a litmus test for determining coding ability. Due to its simplicity and notoriously high failure rate, Fizz Buzz is popular when weeding out candidates who might not be up to task. Sure, one question isn’t necessarily the best tool to determine whether someone should get the job or not, but it’s used nonetheless because it’s effective*. *according to those with actual Fizz Buzz experience. I am but a Fizz Buzz noob. Let’s see some Fizz Buzz! For whatever reason, I wanted my problem to return an array of numbers and strings, so that’s just what I did. Using Java Script, here’s the ruleset I made and thus followed: Return an array. Given a specific number and starting at 1, the array should include:fizz for multiple(s) of 3buzz for multiple(s) of 5fizz Buzz for a multiple of 3 and 5or number(s) if the previous conditions are not satisfied. Should look something like this. Here are some solutions in no particular order of importance or difficulty. Answer #1: Tried and True Probably my favorite answer. It’s readable and reliable! I like this answer. It’s unambiguous and the code is easy to follow. For-loops are straightforward and loyal. Say aye if you think they deserve better! Aye! I know that this code works *nervously knocks on wooden coffee table*. Answer #2: A Little Sexier Arrow functions do look cool. Arrow functions are pretty sexy, don’t you think? They’re kind of like your super hip-but-unreliable friend, I guess. Though I still like my if/else statements, so the ternary operators in this context don’t really do it for me, but I would probably grab a quick lunch with this answer. Answer #3: I Mean … I Had Fun I’m conflicted. I don’t know how to feel about this one. It’s neither cute nor sexy (one should always personify code) and honestly kind of dumb, but I don’t absolutely hate it. I probably should. I don’t know anymore. Answer #4: Go to Sleep I’m sleepy. Okay, this one’s pretty painful. This one’s telling me to go to bed (to be fair, it is pretty late). But, why did I entertain this possibility? Does it hurt you as much as it hurts me, or am I just sensitive because I’m tired. Don’t want to look anymore. Ah! Alright … that’s all the Fizz Buzz I can take for now. Thanks for the read! If you have any solutions of your own that you like in particular, please let me know! That’s it for now. But I’ll be back in a few with more. To be continued (with more solutions and their Big- O complexities!) …","['Programming', 'JavaScript', 'Coding', 'Coding Interviews', 'Codingbootcamp']",https://medium.com/@lisashepard04/a-somewhat-deep-dive-into-fizzbuzz-96b3e7851c41,0,[],0,209,lisa,F,0.9971191234199352,0.002880876580064706
Team Codebase,"We're a 9-week iOS Training Lab and app development firm in Savannah, Georgia.",Codebase to award Savannah Student Innovator Scholarship to a SCCPSS grad,2018-05-16 21:19:42,medium,"Codebase to award Savannah Student Innovator Scholarship to a S C C P S S grad Image from Flickr user Luftphilla, licensed under Creative Commons. Graduating this year and want to learn how to build mobile apps this summer? Have we got news for you! Codebase’s i O S Training Lab will award one full scholarship, valued at $6, 500, to a 2018 graduate of Savannah- Chatham County Public Schools. Codebase’s i O S Training Lab is a 9-week, immersive coding bootcamp offering students expert instruction in i Phone development with Swift. The 2018 summer cohort runs from June 25 to August 24, 2018, Monday to Friday, 9:30am to 5:30pm. Class will not be held on Wednesday, July 4. Students are expected to attend all class sessions and should bring a Macbook that runs the latest version of Mac O S (currently High Sierra). An i O S device such as an i Phone, i Pad or i Pod Touch is recommended but not required. Instructor Max Howell is a mobile app developer well-known globally for his contributions to open source projects like the Homebrew package manager for Mac. He has built high-profile mobile apps like Last. fm, Tweet Deck, and Poncho, which was featured on the television show Planet of the Apps in 2017. Those interested in applying for the Savannah Student Innovator Scholarship must be 2018 graduates of Savannah- Chatham County Public Schools and should submit the following application materials: Official high school transcript Three letters of recommendation, including at least one from a teacher. ( Referees should not be related to the applicant. ) A personal statement (500 words) that describes the applicant’s background and what they hope to get out of their Codebase education. Please include full name and phone and email contacts. Materials may be mailed or hand-delivered to: Codebasec/o The Creative Coast2222 Bull Street Savannah, G A 31401 All materials must be received by 5pm, Friday, June 8. Shortlisted candidates will be invited to an in-person interview the week of June 11. Any questions? Reach out to us at hello@codebase S A G A. com!","['Education', 'Scholarship', 'Savannah', 'Codingbootcamp', 'Public Schools']",https://medium.com/@codebasesaga/codebase-to-award-savannah-student-innovator-scholarship-to-a-sccpss-grad-3d67ada5a0aa,2,[],0,1,team,Unknown,Unknown,Unknown
Amy Henning,Full-Stack Developer and Educator,Maximizing Mentor Sessions – Amy Henning – Medium,2018-08-21 05:07:40,medium,"Maximizing Mentor Sessions Making the most out of 1 hour per week Note: This article is based on my experience with my particular mentor over the last 16 weeks. The things I cover here worked really well for me as I’ve progressed through the course with his support and based on our individual personalities and working styles— not all of these ideas will work for every mentor / mentee pair based on preferences! Mentor sessions were one of the things I was most excited and nervous about when I began The Firehose Project’s Full- Stack Web Development course back in May. I had a lot of questions about a lot of unknowns regarding the program, programming, and how I’d do with this blended learning experience. Over the last 16 weeks or so, my mentor and I have settled into a fairly predictable routine — I keep a running agenda of my questions, and we work through them together each week. He is great at taking the lead from me in terms of what I want to cover, and at times in the beginning, this made me a little nervous. “ What if I don’t have anything to talk about?!” was a frequent worry early on. I’ve spent some time reflecting on how exactly we’re using our sessions now, and I wanted to share some ideas here in case anyone finds them useful in talking with a mentor, a boss, a teacher, etc. Low- Lift Items These items are quick and easy to add to my running list of mentor session items. I call them “low-lift” because they require very little prep work outside of what I’m already doing to progress through the Firehose curriculum at the recommended pace. Things I don’t understand from the curriculum — This one is pretty self-explanatory. Sometimes it’s just easier to have a human explain things to you in real-time when you’re confused. Debugging error messages in apps from the curriculum — If I’m stuck because of an error and don’t know what to do, mentor sessions have been a lifesaver. Pro tip: Don’t forget to screenshot or copy and paste the entire error message so your mentor can see it. There have been a few times when I’ve forgotten to do this and my vague description of the error was insufficient for us to talk through a specific solution. Pair programming — Often, this looks like finding a random exercise on Codewars. com and working through it in a pair programming tool, like Coderpad (you need to sign up for an account to use this one). Pro tip: To extend this, I have occasionally worked through a problem out loud as if in an interview. My mentor gives me hints if I get stuck and offers feedback on my approach. Seal of Approval — found here Code checks — While the achiever in me always appreciates a (100% imaginary) “seal of approval” on my code from my mentor, it’s even more helpful when he quizzes me about why I did what I did or what certain methods I employed in my solution even do. This has helped me uncover gaps in my understanding of things or areas for further exploration. Medium- Lift Items These are things that require some prep work outside of the prescribed Firehose curriculum but have nonetheless proved excellent learning opportunities for me. Extending an app from the Firehose curriculum to make it my own or reinforce a specific skill or concept — I was recently struggling to parse through the j Query for an app, and after walking me through it, my mentor suggested I spend some time before our next session adding a new feature to the app with j Query to gain some additional practice. I added a mostly-working highlighting function to my to-do list app, and we worked together to fix the code in our next session. Reading up on an assigned topic and bringing my questions — This has helped me tremendously to solidify my understanding of basic Rails concepts like form helpers or callback functions in Java Script. The callback function article centers on minions from Despicable Me and is pretty entertaining, though I still needed some help to make sense of it all — and that is what my mentor did. Image from the original post. Heavy- Lift Items These certainly take the most time and effort on top of expected Firehose curriculum progress, but they have proven to be some of the most valuable sources of learning for me. Additional, supplemental tutorials — I’ve been using Ruby Monk to solidify Ruby fundamentals and have started exploring a couple of S Q L tutorials online to expand my knowledge base per the recommendation of my mentor. I’ll bring questions from working through these resources to our sessions and they usually wind up in long, very helpful conversations. My cycle of side project learning Questions from a side project — My mentor encouraged me pretty early on to develop a side project to extend my learning. In mentor sessions, I’ve shared ideas, asked questions on how to implement specific features (like bookmarks and query params for dropdown menus), and requested help debugging errors that I couldn’t have seen in the Firehose curriculum as they are specific to my project. Through this process, I’ve learned a T O N that I couldn’t have been exposed to through simply extending Firehose apps or working through tutorials. General Rules of Thumb I’ll add a couple of general points here that have allowed me to learn a ton from my mentor: Share your approach to solving something, then ask your mentor for feedback on that approach based on how they might solve it themselves. This has given me great insight into how an experienced developer thinks. Ask why things happen but also ask for help with setting boundaries on what you should spend time learning. This was one of the earliest lessons my mentor taught me: there are so many things to learn that you can’t learn them all, so asking the simple question of “ Do I need to know this / master this / fully understand this at this stage of my learning?” has helped me focus where the greatest opportunity for growth lies. Don’t be afraid to bring up a topic that may not result in a neat and tidy answer. I’ve learned a lot about the realities of being a developer from asking high-level questions about concepts I might see in this work or ways in which people work together. And that’s it from me! I still have several more sessions to go and I’m sure I’ll use many (if not all) of these in the coming weeks as I wrap up the course. I’m so grateful to have had this amazing 1:1 learning experience to supplement the Firehose curriculum and round out the program experience.","['Web Development', 'Codingbootcamp', 'Mentorship', 'Firehose Project']",https://medium.com/@henning.amy/maximizing-mentor-sessions-6b351f89f0ab,0,[],0,11,amy,F,0.9973327399667098,0.0026672600332901795
Connie Dang,"My adventures in the world of coding, data and career change! DANG, there is so much to learn.",Keep on trucking – Connie Dang – Medium,2017-07-11 17:50:04,medium,"Keep on trucking Recently, a friend of mine in L A told me that she was enrolling in a web development bootcamp on the West Coast to make a career change, just like I’m in the process of doing. She signed up for a free online lecture on basic H T M L/ C S S/ Javascript and sent the course to me as well. It was a course to create a simple Pacman game using only H T M L/ C S S/ J S aimed at beginners. Despite having completed a full stack bootcamp, I still watched it figuring that I could learn something from it. I’m glad I did. If I had done this project on my own, my approach would have been drastically different. It was interesting to see how another person thinks and their method for arriving at the same conclusion. To challenge myself, I skipped to the end after a few minutes to see their code and determine if I could understand what they were doing. ( They were explaining divs and declaring variables. ) I admit it. I was confused at first, almost questioning my own understanding of the basics. I had to study their work for some time before I started seeing their thought process. Afterward, I still watched the entire lesson to see how they presented the lesson to those with a limited coding background. This is probably the teacher part of me trying to study how one teaches coding. Also, my friend ended up leaving the lecture after 30 minutes because it became very confusing for her. I feel confident that I can help her understand every part of the video in beginner-friendly terms and help her along the project. Of course I offered to teach it to her! :) Even if you’re supposedly above the level of a beginner, it never hurts to have a refresher. There is nothing degrading about going back to the basics no matter what level you are at. Who knows. You might learn something new along the way whether it’s a new way of approaching things or presenting it to others. It’s all because you weren’t embarrassed to get off your high horse of “junior-web-dev-level” and re-enter the “complete-beginner” zone to brush up on the basics.","['Web Development', 'Codingbootcamp', 'Junior Developer', 'Learning To Code', 'Career Change']",https://medium.com/@cdang/keep-on-trucking-c196092ed070,1,[],0,0,connie,F,0.9745464392093149,0.02545356079068508
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),So that’s what RESTful means – My Coding Journey – Medium,2017-07-10 23:20:35,medium,"So that’s what R E S Tful means Ruby/ Rails day 6 plus the Binary Search Tree algorithmresting I’ve literally googled “what is a R E S Tful A P I” tens of times, but for some reason, none of the very tech lingo heavy definitions stuck. Today while learning rails it became clear: R E S Tful routing (or a R E S Tful A P I etc) is simply a convention used by programmers to keep their A P I routes universal. That might be an oversimplification, but I don’t think it’s that far off. The routes stick to the basic C R U D (create, read/retrieve, update, destroy) routes. In rails, using R E S Tful routes is basically a necessity, because rails does so much of the work work for you. Anyway, that’s my tidbit for today. Rails “magic” Rails has some really “magical” commands, and that obviously has some pros and cons. The important thing here is, that (especially) for a new programmer, it’s really vital to understand what’s going on under the hood. The coding dojo platform does a really good job of breaking it down. A couple of the super “magical” commands are: Scaffolding which basically creates a complete C R U D app based on a given model. Recourses. It’s slightly less magical than scaffolding but it’s still creates all of the C R U D routes in one command. Binary Search Tree In algorithms today, we went through the Binary Search Tree algorithm using nodes and the E S6 Class and Constructor keywords. We first went through a B S T and printed every value and then went on to actually searching it. Maybe I’ll type up the code if I have some time. That’s it for now. As always, happy coding! I am looking for an opportunity to join and contribute to a tech team, and I’d love to chat. I’m on Twitter, Linked In, Medium, Github or plain old email @ leibelhecht@gmail. com. My Portfolio is at leibelhecht. com","['Programming', 'Ruby on Rails', 'Algorithms', 'Codingbootcamp', 'Coding']",https://medium.com/my-coding-dojo-experience/so-thats-what-restful-mean-a0139de33a2d,0,[],0,0,leibel,Unknown,Unknown,Unknown
Modestas,,"General Assembly, Web Development Immersive — Week 2 Overview",2018-03-16 11:40:07,medium,"General Assembly, Web Development Immersive — Week 2 Overview Going into the second week, it was noticeable that the pace had picked up quite a bit. I guess the “first week” excuse had run its course and it was time for W D I ( Web Development Immersive) to live up to it’s name. This was also the final week before before we had to put everything we have learned so far and turn it into a nice working Front-end project. Curriculum For this week, the curriculum focused very much exclusively on intermediate Java Script and j Query. In terms of Java Script, we learned about the Document Object Model, which is Java Script’s representation of all of the elements on a H T M L page. We also learned about objects and object constructors which has further reinforced my understanding of how connected and related everything is in Java Script. Essentially, (almost) everything in Java Script is an object. Without a doubt though, the most obscure concept I had come across yet was how the date object works and all of its weird quirks and irregularities that make it difficult to grasp. I remember sitting there looking at my homework for the first time and just completely going blank. Though with anything, time and repetition will inevitably make it click ( I hope). Haywire On Wednesday, as we sat down in preparation for learning j Query; we get an urgent message from our instructor. Apparently, there was some kind of fault in the building which led to there being no running water and if that remained to be the case within the next hour, then we would all have to go home. I two conflicting feelings run through my mind. On one hand, I revelled in the idea of going home and taking a nice long nap to catch up on last nights poor sleep. On the other, I didn’t want to miss out on a whole day of learning. In the end, we did had to evacuate the build. It turned out however, that a bunch of General Assembly staff were making phone calls to nearby co-working spaces and universities and managed to land us a classroom at the metropolitan university Moorgate campus. I was genuinely surprised that they did what they can to ensure our lesson would go on and thought it showed a lot of care on G A’s part. props. Subsequently, we took a nice 20 minute walk to the campus and met up in the classroom after having lunch. I have to say I think London Met takes the cake for having London’s smallest elevators and in turn, the most most awkward elevator experiences I imagine. Now that we were in a fully classroom, we were finally introduced to our first front end Java Script library: j Query. I had never really played with j Query before in fear of becoming too reliant on it. I wanted to make sure I had the basics of vanilla Java Script down before moving on to any framework. However, I was surprised to find that j Query didn't really replace Java Script in the way that i thought it would. It seems more like an optional enhancement and in my project I used it almost exclusively for easily grabbing elements from the D O M along with using a few of it’s built in methods and that’s pretty much it. I still found myself using many of Java Script’s core functionally such as for loops and so on. With that being said, I would still definitely recommend anyone learning front end web development to get comfortable with the basics of Java Script first before using any j Query. On the whole, it was quite nice having one day learning in a different place. Not only did it make me miss and appreciate the lovely G A classroom that I took for granted, but also a funny thing I have noticed is that I find it slightly easier to recall what I learned that day because of the change in environment. Psychology I guess. Project Week On Friday we met up at a cafe in Spitafields market called the “ Canteen”. I didn’t have anything as I am still doing my intermittent fasting, but I heard the food was decent …ish. This was a special day because it was officially the beginning of the long awaited project week. The idea was to spend the day brainstorming realistic ideas for a game we could build in a week as a project, using all of the acquired technologies over the duration of the course so far. We stayed on campus drawing inspiration from passed W D I classes and then had to check our ideas with our instructor to determine how we would bring them into fruition. I spent literally the whole day trying to come up with something realistic. At first I had the idea of recreating the game “ Consumo” which was a mini-game within the (awesome) Play Station 2 game “ Canis Canem Edit” which is more commonly known as “ Bully”. However, the instructor and I agreed that such a game would probably be abit too ambitious, especially with just 6 days to complete it. For those curious here is the game: Bully: Consumo arcade game Back to the drawing board it was then i guess. The difficulty in thinking of a good project was that there are so many factors involved. You have to come up with something that is not too difficult and not too easy. Something that could be easily scalable and something you could add features to down the line, all the while while making it a somewhat original concept. After hours of deep contemplation, I had a chat with one of my classmates, Adam. We were having a conversation about Crypto Currency and then he hits me with an idea: “ Snakes and Ladders”. My instant reaction was that it was slightly juvenile but once I thought about it rationally (meaning I couldn’t come up with anything else if my life depended on it), I thought it was a great idea; and in the end I think it was a good shout. Thanks Adam! Now that I had an idea in mind, I felt pretty relieved and could finally begin to conceptualise how i would turn my idea into an actual working game that I could show off. It was time to plan and write some pseudocode.","['Web Development', 'Programming', 'Codingbootcamp', 'Technology', 'Tech']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-2-overview-7b162b33269a,0,['General Assembly'],1,0,modestas,Unknown,Unknown,Unknown
Chris Agius,"I crave knowledge and intellectual challenge and thus, I have far too many interests. Here, I talk about code, and sometimes security.",Quick and Dirty XML Parsing with XmlSimple – Chris Agius – Medium,2018-05-14 17:42:41,medium,"Quick and Dirty X M L Parsing with Xml Simple Recently, a classmate and I worked on an application that would allow a user to create trips involving the M T A subway, and get status information for the lines used for each trip. This required us to poll the M T A’s status feed. Obligatory subway photo. ( Jake Ingle on Unsplash) At first we struggled to understand the M T A’s feeds and their respective formats; the first real time feed we encountered used a protocol called G T F S Realtime, which is an extension of the existing G T F S format using Google’s protocol buffers (this is will probably be the topic of a future blog post). Ultimately, we realized that we spent a bunch of time trying to parse the wrong feed. The M T A’s line status feed uses a protocol called S I R I ( Service Interface for Real time Information). This protocol is based on X M L, which is easier to parse compared to the binary protocol buffers. At first, we tried using Nokogiri to parse the X M L. I started going through the documentation, but I had a hard time just figuring out how to traverse the structure. As we were in a time crunch, I wasn’t very keen on reading deeply into the documentation. I wondered if there was a gem that would convert an X M L document into a Ruby hash so that I could work with a structure I already knew. Enter Xml Simple. As a disclaimer, use of Xml Simple is generally discouraged, as X M L and hashes are somewhat dissimilar ways to structure data. However, for our purposes, it worked beautifully. Sweet, sweet M T A status updates. One thing to note is that Xml Simple enables an option called ‘ Force Array’ by default, meaning the resulting hash is a little bit ugly as it contains a bunch of single-element arrays. You can turn this option off, but this is also not recommended as it helps to retain the parent-child structure present in X M L. Once we had our X M L parsed into collections of collections, we traversed the collections using standard hash and array notation to get the relevant information. We then passed that information into status objects associated with subway line objects, giving us the structure and relationship information we needed to report back to the user.","['Xml', 'Coding', 'Codingbootcamp', 'Ruby', 'Transit']",https://medium.com/@ahjuice/quick-and-dirty-xml-parsing-with-xmlsimple-56bb84a13e86,0,[],0,0,chris,M,0.13713656176653735,0.8628634382334627
adam tropp,,CS 100.7: Dynamic Programming and Memoization – adam tropp – Medium,2018-05-16 21:43:52,medium,"C S 100. 7: Dynamic Programming and Memoization Today, we will briefly consider a few distinct but closely related concepts in algorithm design: dynamic programming, memoization, and the “greedy algorithm”. Another closely related concept is caching, which I will not go into detail about, but encourage you to study up on. The following material assumes that you have some familiarity with recursion, which I have not gone over, but assume you have seen at least a few times. The idea of recursion is to divide a problem into a series of subproblems and solve each one. It can be referred to as “divide-and-conquer” or “top-down”, and merge sort and quicksort, which I discussed previously, are examples of recursive algorithms. Right then, let’s consider an example to illustrate why dynamic programming is useful. The textbook example for considering a dynamic progamming algorithm consists of writing a function that computes the nth Fibonacci number (if you are not familiar with the Fibonacci sequence, I encourage you to look it up, it’s one of the coolest examples of math in the real world. See, for example, how Fibonacci numbers can be used to convert from miles to kilometers here http://www. catonmat. net/blog/using-fibonacci-numbers-to-convert-from-miles-to-kilometers/. Fibonacci numbers also pop up in numerous facets of algorithm design and computer science). Below is a recursive algorithm that does just that. function fib(n) {   if (n == 1 || n == 2) {     return n   }   else {     return fib(n-1) + fib(n-2)   } } The above is valid Java Script. Try it in your browser’s js console. It works. But try computing, say, fib(100), and watch your console sit… and sit… and sit. This algorithm is highly inefficient, and will take an enormous amount of time to compute large values. The problem is that in computing fib(100), you must compute fib(99), and fib(98). fib(99) relies on fib(98) and fib(97), creating a binary tree that will evidently become very large, very fast. Just imagine how many times we would have to compute fib(2)! Clearly, we are doing too much repeated work. Consider, instead, a D P algorithm that does the same thing, much, much faster:function fib(n){ let a = 0;	let b = 1;	let c;	let i; 	if( n == 0) {  return a; }		for (i = 2; i <= n; i++){   c = a + b;   a = b;   b = c; } return b;} This, too, is valid Java Script. Now try fib(100). Much better! Dynamic programming, then, is a technique for storing repeatedly calculated values (so are memoization, greedy algorithms, and caching, but we’ll get into the finer points momentarily). The principle is that we make a small tradeoff in space complexity for a substantial gain in time complexity, though incidentally, the above algorithm is optimized for space and time, and takes O(n) time and O(1) space. Dynamic programming can be thought of as the complement to recursion. If recursion works from the “top down”, D P works from the “bottom up”. In other words, in recursion, we solve a problem by checking a table for the values of any sub-problems involved in computing the new problem. If there are none, we add the new problem’s solution to the table. In dynamic programming, we calculate the values of sub-problems, then store them in a table to use when solving larger problems. In this sense, you could say that we use D P for storing values, and recursion for retrieving values. Both topics rely on the idea of overlapping sub-problems, i. e. the idea that the algorithm repeatedly solves the same sub-problems over and over, rather than working with new ones. Recursion can be used even when sub-problems are non-overlapping, in which case it is divide-and-conquer, ala merge sort and quicksort, but D P cannot. What we are discussing here are very nuanced and subtle differences, so don’t be discouraged if it doesn’t all click right away (it doesn’t totally click for me yet). D P and recursion are two of the most complex concepts for new programmers to grasp, and it takes many examples before they start to make intuitive sense. Dynamic programming problems can be incredibly complex, but they generally follow a pattern of dealing with optimization. The way to make change for a given monetary amount with the smallest number of coins, the fastest way to traverse between vertices on a graph, these are the types of problems that dynamic programming was made to solve. Now, for some more extremely nuanced definitions! Memoization is, in practice, almost synonymous with D P, but pedantic people will emphasize their differences, so it’s good to understand them. Memoization refers to the actual process of retrieving stored values. Technically, this process is used in top-down recursion, wherein the memoized results are returned to solve the top problem, recursing all the way down as needed. In bottom-up D P, tabulation is used, wherein the sub-problems are solved and stored one by one, all the way up. In this sense, memoization is to top-down recursion as tabulation is to bottom-up D P, but in practice, most people use memoization to refer to both concepts. It is important to understand that D P by definition solves all related problems to a given problem, because it starts at the bottom and computes every value on the way up. Conversely, top-down recursion already has access to the memoized values, so it only retrieves the ones needed to solve the specific problem at hand. Intuitively, this would make the top-down approach faster, and it can be, but for many problems (like the optimization problems previously discussed), D P is in fact faster, even though it requires more steps. No one will fault you for getting these terms confused, what is important is learning how to write algorithms that properly apply these concepts, and that takes A L O T of determination and practice. Now for one last concept, slightly more distinct from the aforementioned. Whereas D P and memoization find the globally optimal solution to a problem, greedy algorithms find a locally optimal solution at every step. In other words, they pick the best solution to every sub-problem, but do not necessarily (or often) arrive at an optimal solution to the top problem. They are used on problems of higher computational complexity, wherein an optimal algorithm would require too many steps to be feasible. For a good example, check it this algorithm on my github page https://github. com/ Adam T213/highest Product Of Three/blob/master/index. js, which finds the highest product of three integers in an array of integers (don’t be discouraged if you don’t think you could come up with a solution like this– I didn’t! I worked through this problem for hours and finally did little more than translate this solution from it’s original Python. P. s. — I find that to be a good way of internalizing algorithm knowledge: If you can’t come to an optimal or near-optimal solution to a problem, look it up, then translate it from the language it’s written in to one you are familiar with. This has several benefits: a) it gives you some familiarity with valuable system-level languages like Java and C, b) it forces you to understand the inner-workings of the problem and solution code, and c) it’s like punishment for not working hard enough to solve the problem in the first place!). Basically, this code works by iterating over the array once, keeping track of several values at each iteration, namely, the maximum product of three elements, the minimum product of three elements, the maximum product of two elements, the minimum produt of two elements, the maximum element, and the minimum element. It then compares these to the new value for each one calculated at each step, and determines if the new value or old value should be saved. This is “greedy” not “dynamic”, i. e. we are still making new calculations at every step, and are simply comparing them to stored values. Again, don’t be discouraged if these concepts seem tricky at first. T H E Y A R E! Just think, college C S students get like 45% on their exams and end up with an A in the class! Keep working through problems and all of this will eventually make sense. Today’s words of wisdom come to us from Antoine de Saint- Exupery:“ If you want to build a ship, don’t drum up people to collect wood and don’t assign them tasks and work, but rather teach them to long for the endless immensity of the sea” Til next time!","['JavaScript', 'Programming', 'Computer Science', 'Codingbootcamp']",https://medium.com/@adt6261/cs-100-7-dynamic-programming-and-memoization-29078c57500,1,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Himesh Patel,"Passionate about product design, mindfulness, personal finance. http://itshimesh.com","Hey Thomas, – Himesh Patel – Medium",2018-05-03 22:50:05,medium,"Hey Thomas, I think you brought up some very good points that a lot of the tech industry doesn’t want to face. In all the major cities, there is a shortage of tech talent but at the same time, there are lots of junior developers looking for jobs. The reason for this gap is exactly what you explained. Tech companies want “senior” talent because they don’t want to invest in the learning process. Coding bootcamps saw the shortage of tech talent and started churning out developers every month but they lacked real experience and training. I think your idea is the way to go. Spending 2–4 months working at a company that understands you are just beginning your journey and getting scheduled mentorship is a pretty good deal. It is better than working on personal projects to increase your portfolio because it will be real client work. Instead of unpaid internships, I would say that companies should provide a small stipend, possibly $1000-$2000/month because they are getting value and work done at the end of the day. What I see happening with the saturation of coding bootcamps is internships will start becoming a part of the curriculum and it will go from a 2 month program to a 4–6 month program as bootcamps try to get ahead and show that their graduates are the most skilled.","['Programming', 'Codingbootcamp', 'Internships', 'Hiring', 'Employment']",https://medium.com/@itshimesh/hey-thomas-f92d4667c7c9,1,[],0,0,himesh,Unknown,Unknown,Unknown
Tony Cletus,A JavaScript Lover | Best friend of React And Node.js Python and DB’s | YouTuber @TonyCletus TV | Tech Writer | Code Instructor @ CTC | Takes Garri As Coffee,HOW TO BECOME A SELF-TAUGHT PROGRAMMER | < YOU CAN DO IT />,2018-10-03 16:16:56,medium,"H O W T O B E C O M E A S E L F- T A U G H T P R O G R A M M E R | < Y O U C A N D O I T /> Over the years, I’ve been asked a lot of questions by people concerning my life as a programmer and how the whole journey has been. The most frequent questions I get all the time are questions like… “ How did you learn all these things by yourself?”, “ how did you start?”, “ Where do I start from?” and so on and so forth. Well, am here to tell you guys that they are no merlin’s spell about it, lols… I mean no magic about it. I didn’t study Computer science or software engineering or any course related to Computer Technology at the university when I first started, I was just a Microbiology student, oops… But drop out later. I was so fascinated and passionate about computer programming, practical experience, and the whole innovation thing and creativity of which university wasn’t the right decision for me at that time. In addition to that, I am also a long life learner, I so much enjoy learning and trying out new things for myself, I’m the type that loves challenges, a troublemaker, rule breaker, a talkative but the sweetest part of me was the value and motivation thing, I often find myself in places where I could add value to my life. And I feel so much joy when I motivate and inspire people to do things and think the mindset. Please don’t get me wrong, you can always become a regular programmer by studying computer science and engineering in school or even attending a Bootcamp training or fellowship programme, I’d like that too, but somehow, I was already doing my stuff so quickly and progressively well before I even got to hear of these various programmes. Now before anything else let’s take a quick look at some of the reasons and benefits of becoming a self-taught programmer. Why You Should Become A Self Taught Programmer Becoming a self-taught programmer is one of the best things that has ever happen to me and even the most creative part of my life, it gave me hope when everything was lost and when other people didn’t believe in me. And now I must confess that deciding to teach yourself how to code is the best decision that you can ever make for yourself as someone aspiring to make a difference, a positive impact in the world through technology and even as a student either in Secondary level ( High school) or Tertiary Institution. It is no longer a surprising fact that most great and successful computer programmers of today in one way or the other taught themselves how to code and some didn’t even get to finish their college degrees before building the great tools we use today. Take, for example, The Tumblr, Facebook, Alibaba, Apple, Microsoft, Github, Twitter, Oracle, Figma, Dell, Paypal, Space X, Napster, Spotify, µ Torrent, Mashable, Snapchat, Google founders to name but a few in one way or the other where either drop out or didn’t even see the four corners of the university at all. In Collage you have a set curriculum, rules and rigid old scheme of work guiding you throughout your studies, it is more or like a dogma. so much emphasis is laid on reading what you've been told to read and regurgitating facts from the book you’re being told to read to pass that particular exam and at the end, a point is being awarded to rate your potentiality, finally you get a paper designed with the name of the school written boldly on it with your, a grade to speak for you of which you can speak for yourself and act for yourself…. . You did forget all 90% of what you learned in school, obviously, you won’t even apply them in the real world, then it's your skills and vibes that speaks for you. hmmm… let me stop here… You’d sit and listen to someone repeating a topic he’s taught for over 5–20 years, you’re led by fixed and most times outdated curriculums that other people have set based things existing during their time, less emphasis is laid on practical experience, you do all the paperwork mostly and the theoretical aspect of everything, you study complex mathematics that you don’t even get to use in the real world or even know how to apply for 5 years, of which you can do in one year with a self-motivation and discipline using the ever growing internet and technology. The creative and the self-improving part of everything is neglected. Yeah! While this system may work perfectly fine for other majors in school and those who just wanna get computer science certificate it doesn’t work that way for a real computer scientist who’s aspiring is to become a software developer. Even the professors in school know this too well and that is why they encourage self-improvement and doing more than just what is done in the classroom. I get shocked at times a computer science student doesn’t even have a computer system or even a mini laptop for themselves and yet get to do all the paper stuff and graduate as a computer scientist with written hyped grad, without any practical knowledge, I tell you, “welcome to the new world my friend, open your eyes and wake up, this system doesn’t do well right now in this generation anymore. You’re sleeping, wake up and get skilled”. Some after 4 solid years in school still go to other I T training centers to get trained by someone who didn’t even study computer science at all. It’s shameful though but I don’t blame the system, I blame you that won’t think out of the box to realize the joy in exploring and experiencing things for yourself. The joy beyond studying to pass an exam in class but learning to create and innovate new ideas. In this our generation, this computer age, bro! you just need to take your destiny into your hands and do a whole lot of work on improving yourself, try something different and be more flexible at exploring things, taking a lot of risk and learning by doing what you’re most passionate about and not what someone thinks is best for you. You’re gonna fix your mind at the point where you can leverage and become indispensable. And don’t get me wrong, computer science and engineering don’t necessarily have to do with programming alone. Computer science also involves Networking, Data Science, Embedded system, System design and Analysis, Telecommunications, Statistics, Hardware, Maintenance etc. But in all, Programming still remains the ultimate and probably 89% of the computer science idea because it is the brain behind the creation of computer itself and software being the major focus in the world of technology today greatly needs some form of programming for its existence. In other to be good in programming you also need constant practice, inherent learning, challenging yourself to do things that are difficult, the ability to adapt to new skills, change and technology, to eat both the frog ant the chicken, to do it yourself, to break the rules, to be free like a dove and go beyond extra miles. The earlier you begin to do away with the myth that getting a computer science or a degree will make you a great software developer or programmer the better for you. Note: Programming doesn’t care about your course, your color, your gender, and your location. the first A B C of programming is a laptor/ P C and an internet access. 9 Concise Guides That Will Help You Become A Successful Self-taught Programmer Make sure you’re passionate or interested in codes Make the internet your best friend Find the right places and practice hardcodeacademy. org Lynda Team Treehouse Code School Udemy Edx W3 Schools Udacityfreecodecampstack Overflow G I T A N D G I T H U B Don’t get intimidated but be inspired to experiment Attend Meetups and Tech Invents ( Join Communities) Grow your networks ( Collaborate and Share Ideas with other Tech guys online either in from your country or abroad) Learn to solve problems Pick The Stack You Care About And Build projects You’re passionate about Find a mentor and expand your horizon Get stumbling! Learn from both success and failure Be a long life learner Finally, I believe learning how to code comes down to discipline and work ethic. No doubt, some people are naturally better programmers or developers than others. The concepts just make sense to them. But whether you’re “born with it” or not, nothing can ever compare to hard work and the hours put in. Remember this popular quote? “ Hard work Beats Talent” huh! remember that? Okay! just keep that in mind. Truth be told coding can be really freaking hard. If it was easy, everyone would be doing it. So just nod your head in an agreeable manner right now for even trying. Seriously! I leave you to start now! Begin immediately! Happy Coding! Reviews and quotes I’m convinced that the only thing that kept me going was that I loved what I did, you’ve gat to find what you love. Your work is going to fill a large part of your life and the only way to be truly satisfied is to do what you believe is great work and the only way to do great work is to love what you do. Steve Jobs, Co-founder and former C E O of Apple. ( R I P) I am a passionate and fun computer programmer. Lover of Java Script and its framework/libraries like React | Node. js | Jquery and Vue accompanied with of course H T M L5 and C S S3 which Credits me as a Webbie Guy…. . Read More","['Programming', 'Coding', 'Software Development', 'Codingbootcamp', 'Self Taught']",https://medium.com/tonycletus/how-to-become-a-self-taught-programmer-you-can-do-it-2bffea6615f,7,[],0,2,tony,M,0.011453008453505718,0.9885469915464943
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",Software Development & Design Scholarship for Veterans ,2014-11-07 21:50:57,medium,"Software Development & Design Scholarship for Veterans Here at Bloc we understand that unemployment rates for military veterans are at an all time high, which is why we are launching a developer bootcamp program for veterans. According to the Bureau of Labor Statistics. Bloc would like to help by providing U. S. veterans the tools and resources needed to launch successful careers in tech. That’s why we have created the Bloc Veterans Program, which will award ten active and/or retired U. S. military personnel a $5, 000 scholarship toward any of Bloc’s five online developer and design bootcamps. The scholarship is funded collaboratively by Bloc and its mentors, who have volunteered to donate their time to training veterans. Bloc’s online developer and design bootcamp courses will allow veterans to receive hands-on, job-ready training in 36 weeks or less. This will allow them to get into the faster-growing tech labor pool much faster than traditional education. The demand for developers is growing by leaps and bounds. According to the Bureau of Labor Statistics, in 2010 there were over 900, 000 software developer jobs posted, with an expected increase of 30% by 2020. There’s also the often-cited analysis from Code. org that underscored the widening gap between supply and demand (the yellow wedge below). Bloc is the world’s largest online bootcamp, with programs in Full Stack Web Development, Frontend Development, i O S, Android, and U X Design. We have helped hundreds of people launch new careers through a holistic program that combines a project based curriculum, continuous coaching from a seasoned mentor, and career coaching to ensure you are job-ready. If selected, you will gain experience and skills in the bootcamp program of your choice as you work on real projects in an intensive program alongside an experienced professional mentor. How to Apply to the Veteran’s Program All U. S. Military veterans are eligible. The scholarship application deadline is December 31st, 2014. If selected, program participants can choose any start date between December 20th, 2014 and March 2nd, 2015. If a participant does not start the program by March 2nd, 2015, Bloc reserves the right to offer the scholarship to another applicant. Bloc believes in accountability and outcomes. Program participation requires a commitment to 15, 25, or 40 hours per week of online training, attendance to all mentor appointments, and completion of all assignments. If program participant demonstrates low attendance or submits incomplete assignments, Bloc reserves the right to drop participants from the bootcamp. Veteran Graduates from Bloc’s Web Developer Bootcamp Christine is a West Point graduate and a veteran of the U S Army, who joined Bloc to learn web development and build a new career. Christine is a previous recipient of the Web Dev Scholarship for Veterans. Before enrolling in Bloc, Christine had enrolled in Creative Circus, an art school based in Atlanta that teaches design, advertising, and copywriting. While there, she realized she wanted to expand her technical skills so she could bring her designs to life. To read Christine’s entire story, head over to our Alumni page. Check out our News Segment on K R O N4http://www. youtube. com/watch?v=a Qxzb H K Flco","['Android', 'Angularjs', 'Coding Bootcamps', 'Design', 'Education']",https://medium.com/newsonthebloc/software-development-design-scholarship-for-veterans-e97bc1e87461,1,[],0,0,bloc,Unknown,Unknown,Unknown
Dick Ward,Full-stack web developer with a flair for the theatrical and a mission to leave the world a better place than I got it. DickWard.com,I Made a Game With Zombies in it! – Dick Ward – Medium,2017-09-01 00:00:00,medium,"I Made a Game With Zombies in it! Last weekend I created my first standalone project that I felt was worth showing off. It’s a multiple choice game with random elements that takes place in Java Script alerts. It’s pretty simple, but it’s also pretty cool. Go ahead and play it, then come back for the breakdown. Zombor: A Game by Dick Ward The Cool Bits This game came after I finished a Pluralsight tutorial and wanted to add more complexity to it. The version at the end of the tutorial would randomly select a weapon and then would roll a random number to see if the user would survive. I decided I wanted to add some complexity, like hit points for the zombie, weapon differences, and additional random elements. One of my favorites comes when the user selects to fight the zombies and then picks a knife as the weapon. if (weapon. to Lower Case() === ‘knife’){ for (i = 3; i > 0; ){ random = Math. random()alert (` You attack the zombie with your ${weapon. to Lower Case()}. `)if (random > 0. 75){ alert (‘ Critical Hit! Oh man, you slashed that zombor\’s face right off his heeead’) i = 0}else if (random > 0. 25 && i > 1) { alert (` You have hit the zombie with your ${weapon. to Lower Case()}! `) i– alert (` It will take ${i} more hits to kill the zombie!`) } else if (random > . 25 && i === 1){ alert (‘ You finish off the zombie with your super cool knifey moves. Such a badass. You. ’) i = 0}else { alert (` You swing the knife and it pierces the zombie\’s flesh. `) alert (‘ And it sticks there. ’) alert (‘ Aaaaand, the zombie eats your stupid head. ’) alert (‘ You’) alert (‘ Are’) alert (‘ Dead’)i = 0 So the way this works is pretty cool. The loop starts with the variable i assigned to the number three. This is my way of doing some behind-the-scenes hitpoints for the zombie. If a random number equals less than . 25 they instantly lose, and if it equals less than . 75 they instantly win. But when it’s between those two, it registers a hit and tells they player that they need to hit the zombie i more times before it dies. Not only does this give a cool countdown for successful hits, it also gives the player another chance to either critically hit or critically fail. Using this loop, a player can hit the zombie twice, but still critically fail at the end. I really like this sort of random nature. Where I Got Stuck There are two big places where I got stuck in this game, and the first was the both the most obvious and the most time consuming to solve. Basically, I had a curly bracket out of place. It’s an easy problem to have when writing a lot of code — and for me this is a lot. I have for loops inside of if statements inside of functions, and that got confusing fast. After wrestling with why the logic of my finale else statement wasn’t working, I took a hard look at what my program was doing, spoke some of it aloud, and found my extra bracket. Boom, solved. The second problem was that my random number generator was only creating a single random number and then using that through the entirety of the program, meaning that the cool knife fight from above would only go one way. My thinking was that each time I called the ‘random’ variable, it would generate a new random number. var random = Math. random() The above code doesn’t tell ‘random’ to get a new random number every time — it simply tells ‘random’ to be whatever number Math. random generates at that instance. To fix that in the knife fight, I put another random = Math. random() at the top of the for loop. This means that every time the program goes back up to the top of the loop, it generates a new random number for the outcome. I banged my head against the wall for a while on this one, and then on my commute to work I figured it out. I ended up having to record myself explaining the solution so that I could play it back when I got home. Oh, and mad props if you got the reference 🙂 Originally published at thedickward. com on September 1, 2017.","['JavaScript', 'Coding', 'Flatiron School', 'Codingbootcamp', 'Web Development']",https://medium.com/@TheDickWard/i-made-a-game-with-zombies-in-it-4e695fa1f2e2,0,[],0,0,dick,M,0.001637219455624531,0.9983627805443754
Yeri Bridgett,,Wow this is so awesome!! – Yeri Bridgett – Medium,2017-10-07 14:50:58,medium,"Wow this is so awesome!! How did you end the program, was it a great experience? I want to apply but can’t find out more regarding the job process at the end. I’m from the U S and planning on moving to spain.","['Ironhack', 'UX Design', 'Codingbootcamp', 'Barcelona']",https://medium.com/@yeribridgettdesigns/wow-this-is-so-awesome-77057950dd18,0,[],0,0,yeri,Unknown,Unknown,Unknown
Tracy Kaur,A mum that codes. Challenge the stereotypes. #diversityintech and #stemm. Teaching @CoderAcademy_au.,My first week at coding boot camp felt like jumping into the Tardis and going into a brand new…,2017-08-09 04:17:29,medium,"My first week at coding boot camp felt like jumping into the Tardis and going into a brand new world. Four weeks ago I quit my job of 12 years as a sales rep to learn to code with Coder Academy. Just as the world of social media was coming to terms with a female 13th doctor I finished week one, having undergone one of the biggest drastic changes in my life. So how did I end up here? Well, I’d worked weekends for 12 years in a commission only sales role. I was a qualified teacher but I’d had a career break to raise my children. I volunteered at school and helping students to code was always my drawcard. I researched I T courses but they didn’t seem to be as half as advanced as some of the games the students were playing. That’s when I found Coder Academy. I had no coding experience; I’d only played a few coding games. But I didn’t want to play; I wanted to create. I applied, I was accepted, I quit my job the following day. My work colleagues were fully supportive; many thought I already was a ‘“digital geek” as I would tinker with their tech problems all day. But fixing I Phones and Microsoft issues was the extent of my technical abilities and I knew it wouldn’t fool people for long. I knew I would be challenged; and I have been everyday. I learned that just like my previous sales job you get rejected, time and time again. The only difference is it’s the computer doing the rejecting. In fact, the difference between success and failure can ultimately hinge on how you handle rejection. My main lesson this week is that each failure should be considered as a learning opportunity for what doesn’t work and why. As Edison had said when he attempted making the lightbulb. He had tried a thousand different elements and all had failed. A colleague asked him if he felt his time had been wasted, since he had discovered nothing. “ Hardly, ” Edison is said to have retorted briskly. “ I have discovered a thousand things that don’t work. ” If he was alive today he would have said “welcome to coding. ” One week down and we have already covered creating Ruby files, terminal, hashes, arrays, interpolation. Initially, when the code was written on the board (that seemed so simple to everyone else) it looked like hieroglyphics to me. I started to learn that almost any answer for the quandaries of writing code was online, and instead of being considered an act of cheating or plagiarism, you are encouraged to build off of the work of others. The style of bootcamp is real-world, experiential skill building. Very much a practical, learn by doing (and failing) style. The instructors are industry professionals. They are supportive coaches who guide you to where to find the answers. I encourage all of you, whether old-timers or newbies, to be a newbie in something — learn how to code, or play golf, or make a meringue— something that will give you a chance to fail over and over again, so that feeling becomes familiar and you are no longer afraid. What I do know is if I don’t fail, I’m not doing something right.","['Coding', 'Codingbootcamp', 'First Post', 'Change', 'Failure']",https://medium.com/@tracykaur/my-first-week-at-coding-boot-camp-felt-like-jumping-into-the-tardis-and-going-into-a-brand-new-d5d88680b35e,2,[],0,48,tracy,F,0.8039213171932704,0.19607868280672958
Jessica Alves,Brazilian woman living in Sydney. Changing career and discovering the huge coding world :) Studying at Coder Academy 👩🏻‍💻 www.jessicaribeiroalves.com,"3 weeks of coding bootcamp, how I feel…and why I recommend it!",2018-09-09 03:57:45,medium,"3 weeks of coding bootcamp, how I feel…and why I recommend it!3 weeks and I feel like my brain is going to blow up. It's too much information, sometimes I feel like "" O M G, I have no idea how to do this"" and 5 minutes later I figure out that I can do it after trying. It sounds so obvious but the unknowing can be scary sometimes. I was wondering this morning about how I would start this post because, as I said, it's too much information in only 3 weeks but I'm so excited to tell everyone about the stuff I've learned. I've drafted some topics — my favourite ones — to focus my post on. Last week was awesome. I could say it was my favourite so far. We had to develop our ideas, turn them into a project to be executed in 3 days, and finally present it. The project purpose was to work in pairs so we could do pair programming. It wasn’t the first time, we already had to do this before during the second week, and it has been shown to be an effective learning method. Pair programming is basically when two developers work together on some project or task. One of them is the “driver” and the another one is called the “navigator”. The first is the one who takes the computer and is responsible for writing the code according to the navigator’s specifications. The navigator dictates instructions that the driver must follow. From time to time the positions are switched so that both devs can experience different perspectives. Besides that, the pairs talk to each other durings the projects development, asking questions and discussing anything that is pertinent to the code’s development in order to optimize learning and coding skills. My programming pair for this project, Ryan Sickle, was a great guy and I enjoyed working with him. His coding experience and the way he shared it with me contributed to my learning. … thanks a lot, Ryan! It was awesome working with you and I’m really proud of the project we’ve completed. We made a terminal application in Ruby language, of which the main idea was reading recipes, such as its ingredients and steps, intended for at-home cooks. The idea is very simple, but developing it into code was a big and exciting challenge. It was fun! Even though knowing that our code could be simpler and probably improved from the functional point of view, the most valuable thing was geting the opportunity to successfully translate our thoughts into code and develop the logic of our idea. Another important outcome with this project is related to Git Hub's workflow. We have been learning about this since bootcamp's first week, but it's much better to learn through practice. I still feel like a total beginner when it comes to Git Hub's website, but now I understand the logic of its workflow. Of course there are still a lot of things about Git Hub to learn and I'll plan to get better through practice. But for a beginner with a general understanding between git init, add, commit, push, pull, master and branches…well, I can say it was a good start. By the way, for anyone who wants to see more about our first project on Git Hub's website, here is the link for the repo. One more thing that I would like to highlight are some tools we used during the project's development. We had some classes talking about project management and its tools during the second week of bootcamp, and then we had the opportunity to use them last week. Trello is my favourite one! Not only because it has a cute and cool interface, but also due to the versatility that it allows me when it comes to organizing everything according to my preferences and to manage my activities or projects in a practical and adaptable way indifferent situations. For last week’s project, we created a Trello board with some lists to guide us along. Below you can see a screenshot of our project's board: Trello's board for the terminal application's project We also used Slack when we needed to communicate with each other, to send images, or any other necessary information. And actually this tool was used everyday by us, including bootcamp's students and educators. It's very useful and facilitates communication in teams — hence why is used by so many companies in whole world. One last thing: gems! We decided to look for open source libraries and use them in our project. This is another thing that Ryan taught me…how to search for it and how it works. So we used Kaggle's website and found a json file containing all the recipe data we needed to input in our code and run it. We also used a rainbow gem to make our code coloured and a terminal-table gem to build some needed tables. So basically gems are data libraries containing a reusable collection of files with a name and version that you can install and use in your code. Finally…after 3 weeks of coding bootcamp and a first project, I would like to share 3 important things that I've learned. ➢ Try it! And try it. Now try it again. It looks obvious, but it's not. Since I started learning to code, I freuqntly think about the possibilities or solutions for some problems or exercises. I catch myself wondering about certain solutions for a problem. So I type something, then delete it, and then type it again and delete it again…but wait. Why?! The goal is not to get it right on the first try. No now I've started to risk more on through my own attempts to make the code run, no matter if the solution seems overly complicated or wrong… T R Y I T is the key. ➢ Plan it. You can achieve a goal with no plan. But the path becomes easier when you plan your steps. Last week showed me this and we luckily had so many planning/management tools. We needed to use them and gain practice so that each time we use them, we can improve the next time. ➢ Document it. I had no idea about how to do that before last week, about how to start documentation. After seeing Ryan do this, I’ve learned a little bit about it. More than that, I’ve come to understand the importance about documenting, as it allows anyone reading your code to understand it. Comments and well-written documentation are both important and essential. I would like to tell you some another things about the last 3 weeks, but that is enough for now. See you next time! :)","['Programming', 'Coding', 'Codingbootcamp', 'Women In Tech', 'Project Management']",https://medium.com/datadriveninvestor/3-weeks-of-coding-bootcamp-and-i-feel-like-cdc5f244a434,0,[],0,19,jessica,F,0.9965885117632921,0.0034114882367078806
Marshall Pritchett,,Path to Programmer: Chapter 1 – Marshall Pritchett – Medium,2018-07-04 18:15:44,medium,"Path to Programmer: Chapter 1 Two years. It took me two years to figure out I shouldn’t be a nurse. Everyone talked about burn out in nursing school, but you never really consider it until you hit the floor. You put on blinders to get through school successfully, and, then, before you know it you’re a real adult having to go to a grueling job day in and day out. You have to deal with the reality of disrespect in the medical world and it hits you like a ton of bricks. Burn out is real. So, two years later, I find myself going back to what I wanted as a kid. Combing through all my interests through high school. Then, it hits me. Programming. That was my first dream job — working with computers, developing real world projects that everyone could use and enjoy. Now, when I was a kid, that meant game development. However, as my interest in video games somewhat declined as I got older, I let this dream fall away. But now, it didn’t seem so crazy. I had taken an intro to web development class at my high school. I remember learning about the basics of H T M L and some inline styling. It was fun. But that’s the only programming class my high school offered at the time, and I didn’t remember A N Y T H I N G. Fast-forward through the boring research phase… I found what I was looking for — coding bootcamps. At first the thought of learning a new career in 4–6 months sounded impossible. Not only impossible, but expensive. But, after much more research, comparative cost analyses, and more than a few phone calls and emails, I found Bloc. Bloc promised me a career or my money back. As a contract nurse, traveling to various nursing homes in upstate South Carolina, and making about as much money as a teacher, this guarantee was like finding a gold bar in a ditch on the side of the road. Well, not E X A C T L Y like that, but you get the point. So, I got approved for a loan and started Bloc in mid- June 2018. Yes, less than a month ago. Now, during my research phase, I used free Code Camp to familiarize myself with the basics of web development and to “test the waters” to see if this was really what I wanted to do with my life. So, starting out with Bloc I breezed through a lot of the material. I was on top of the world. Crushing it. Kickin’ ass and takin’ names. One week in, I hit my first road block. I came to a screeching halt with Java Script. No biggie, I think to myself, I’ll just move on to the next section and circle back around. B A M. Next roadblock. Frustrated, and somewhat defeated, I closed my laptop and walked away. Now, I wasn’t in a rage, but I couldn’t stop thinking about it. On vacation with my family at the time, I stood at the top of a lighthouse (no that’s not a metaphor), pouring over my code in my head trying to figure out how to write a working recursive function. Eventually, I let my mind wander off the subject and was able to enjoy our visit to Hunting Island State Park. And, when I got back to our beach house, I opened my laptop again, and, to my surprise, the answer came to me. Its amazing what a good distraction can do. I share all of this with you to make a point. No matter where you are in your life, you can always change paths. It will be a hard journey, but its one that anyone can make if they can commit. Continued in Chapter 2…","['Web Development', 'Nursing', 'Programming', 'Codingbootcamp']",https://medium.com/@mpritchett516/path-to-programmer-chapter-1-ada8dc65c827,0,[],0,1,marshall,M,0.012365503304385822,0.9876344966956142
David Armour,Aspiring web developer,First Days of Coding Bootcamp – David Armour – Medium,2018-08-21 01:57:46,medium,"First Days of Coding Bootcamp Hello World! This week I have taken the plunge to become a web developer. I am currently starting the Fast Track Web Development Coding Bootcamp offered by Coder Academy. Feel free to check out the link below for more information. Coder Academy | Learn to Code in Sydney, Melbourne or Brisbane Starts 25 March 2019 The Gen Tech bootcamp is for 17-24 year olds who want an accelerated pathway into tech. Whether you…coderacademy. edu. au My class consists of around 25 people that have come from all over the world with many different backgrounds. They all have very interesting stories and I spent most of the first day getting to know the rest of my cohort and teachers. I am looking forward to sharing my journey with them. From the very first day we were taught the importance of managing stress and the harsh effects it has on the body. Hopefully the relaxation techniques that were taught will be very useful in the future. The second day of bootcamp involved setting up our development environment and learning some basic terminal commands. I am starting this coding bootcamp with a small amount of experience in coding due to completing an online course in the 2 months before starting bootcamp. I completed C S50x from Harvard and I would highly recommend to anyone who is interested. For my final project I made a basic web app that can be used to create work rosters. See below for small video demo. Hopefully this previous experience will help jump start my learning. A lot of my cohort has little to no coding experience, so if you are interested in attending a coding bootcamp you shouldn’t be worried. Stay tuned for regular updates on my progress.","['Programming', 'Web Development', 'Codingbootcamp', 'Coder Academy']",https://medium.com/@dav.armour/first-days-of-coding-bootcamp-e8bb13f6e0b0,1,[],0,27,david,M,0.0035582779766708743,0.9964417220233291
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 39 — Never Learn – conshus – Medium,2017-05-04 11:39:53,medium,"Day 39 — Never Learnliner notes: We got introduced to Re- Base yesterday. A library the helps connect Firebase and React J S. Honestly, this is probably the thing that will make React J S useful and more powerful to me. A little closer to what I like about Angular. What we learned yesterday helps me with how I wanted to design H I P H O Pand C O D E. com I wasn’t too sure if what I wanted to create would be possible without some serious hacking. I think with Re- Base, I can get some cool interactivity accomplished. Again, I just wanted to post up another Brother Ali video…so to make it fit… You can “ Never Learn” too much. haha Enjoy the video, album drops T O M O R R O W on F O O D T R U C K F R I D A Y! Oh yeah, the shirts I designed came in… Rocking on right now! Got a couple of things I want to tighten up on some programs before class. Have a great day. peace piece Dwane / conshus H I P H O Pand C O D E. com","['JavaScript', 'Hip Hop', 'Coding', 'Code', 'Codingbootcamp']",https://medium.com/@conshus/day-39-never-learn-9aca999ebf0b,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Ethan R. Roberts,Full-Stack Software Engineer | NYC,Ruby’s Anonymous Eigenclass: Putting the “Ei” in Team,2017-07-07 03:03:19,medium,"Ruby’s Anonymous Eigenclass: Putting the “ Ei” in Team This week was my first real dive into the works of Ruby. I learned a T O N. But something about Ruby still bothered me: what is it? Hoe does it really work? We’ve been told that Ruby is an Object-oriented-language — but what does that even mean? Well it turns out, in Ruby, almost everything is an Object. In fact the whole of Ruby can be broken down into a handful of different Objects and how they interact with each other: Classes Some famous classes you may recognize: Hash. class = Class Array. class = Class Symbol. class = Class Integer. class = Class Class. class = Class( Yes, even Class is a class!) In fact even when you’re in your main environment in the Terminal you are still in a class. Let’s try these in I R B and check out the return values:self=>mainself. class=> Object Now what’s so cool about classes, you ask? Well, we can create an instance of a class that has all of the attributes and methods we’ve defined within the class! Even cooler is that while some classes are built into Ruby, such as the aforementioned classes, we Rubyists can create our own classes! Cool! Other parts of Ruby include Methods or, simply put: how Objects interact with one another, and finally: Keywords. For a full account of all forty-three keywords found in Ruby, check out this handy dandy keyword list. Keywords in Ruby are reserved words within the Ruby source code and are defined in relation to digital technology as follows:[ A] word used to classify or organize digital content, or to facilitate an online search for information: Search the database for the keyword “ Ireland. ”. — Dictionary. com The keywords are not objects but defined in the parser which can be found in parse. y in the Ruby source. — Stack Overflow Back to the Content! Okay so now that we’ve got a basic understanding of Ruby’s structure, let’s get back to that weird word that we’re interested in today: Eigenclass. You may have already heard this concept before and not even know it. It has been called many things and there is no formal consensus on which is correct. It’s been called the Singleton Class, the Anonymous Class, the Ghost Class, Virtual Class, Shadow Class, Metaclass, Object-specific Class… you name it. Literally. It has no formal name - so get creative and make it stick and maybe one day we could be naming this class after you, true believer! However, for the purposes of this blog and all things dorkly, I prefer to use the aforementioned “ Eigenclass” here. Coming from the german word eigen, meaning ‘own’, the Eigenclass is a metaclass within Ruby. We can take it to literally mean ‘the class unto itself. ’ Whoooah, meta! Scary, right? Nah. Lets take a peek under the hood:class << self    self  end This self here is an instance of the Eigenclass. We can even write a method to access this instance:def eigenclass   class << self     self   end end You’re probably saying to yourself now, “ Cool!” P S Y C H! You’re still saying, “ The class unto itself? What?! What does any of that even mean? Why do I even want an Eigenclass??” All valid points. So lets take a closer look at what this method might return. Lets imagine we have a class called Thing and within it we insert this #eigenclass method:class Thing def eigenclass    class << self      self    end  endend Now we’ll create a new instance of Thing and call the instance method of #eigenclass on thing1, creating a class unto itself that we can access:thing1 = Thing. new=> #< Thing:0x007fb1a99224c8>thing1. eigenclass=>#< Class:#< Thing:0x007fb1a99224c8>> Now remember, these instances have no other discernible differentiating features save for the unique object id with which they have been initialized. Let’s note that Eigenclass is a class type and that Eigenclass has a superclass — this superclass is the class it came from when initialized:thing1. eigenclass. class=> Classthing1. eigenclass. superclass=> Thing This class belongs to the Thing class it was initialized with and defined in. More importantly, like the object id we see in the return value, the Eigenclass is unique. Even though the #eigenclass method is shared throughout all instances of Thing, the Eigenclass of the thing itself is not shared. Don’t believe me? Lets try another instance:thing2 = Thing. new=> #< Thing:0x007fb1aa81d860>thing2. eigenclass=> #< Class:#< Thing:0x007fb1aa81d860>>thing2. eigenclass != thing1. eigenclass=> true So still going, “ B U T W H A T I S A N E I G E N C L A S S”, right? The Eigenclass, the class unto itself, is unique to the object instance and is always present. To clarify, when we define our #eigenclass method in Thing, we are not creating an Eigenclass — it is, was and will always be there with the Object; every Object has an Eigenclass. Our #eigenclass method merely allows us to see and access what was always there but what was always hidden from view. Think of it like a ghost or, for the spiritual folk, a soul: Sorry. Not that kind of soul. Once we have access to the class that is fundamentally unique to our instance, we can manipulate it, adding in unique instance methods that only the instance possesses depending on what we insert within the #eigenclass method’s “class << self” statement. Now, why do we care? Well, because we use the eigenclass A L L O F T H E T I M E without even knowing it. Let’s add another method to our Thing class:class Thing def eigenclass    class << self      self    end  end def self. what_am_i?  "" I'm a thing!"" endend Thing. what_am_i?=> "" I'm a thing!"" When we add a class method such as #what_am_i? to an Object here and call it with dot notation, we’re actually using the Eigenclass! Within Ruby is a method called #singleton_class that we can call and prove this: Thing. what_am_i?=> "" I'm a thing!"" Thing. singleton_methods=> [:what_am_i?] Thing. methods=> [:what_am_i?, :new, :allocate, :superclass, :<=>, :module_exec, :class_exec, :<=, :>=, :==, :===, :include?, :included_modules, :ancestors, :name, :public_instance_methods, :instance_methods, :private_instance_methods, :protected_instance_methods, :const_get, :constants, :const_defined?, :const_set, :class_variables, :class_variable_get, :remove_class_variable, :class_variable_defined?, :class_variable_set, :private_constant, :public_constant, :singleton_class?, :deprecate_constant, :freeze, :inspect, :module_eval, :const_missing, :prepend, :method_defined?, :class_eval, :public_method_defined?, :private_method_defined?, :<, :public_class_method, :>, :protected_method_defined?, :private_class_method, :to_s, :autoload, :autoload?, :instance_method, :public_instance_method, :include, :lm, :lim, :instance_of?, :public_send, :instance_variable_get, :instance_variable_set, :instance_variable_defined?, :remove_instance_variable, :private_methods, :kind_of?, :instance_variables, :tap, :define_singleton_method, :is_a?, :public_method, :extend, :singleton_method, :to_enum, :enum_for, :=~, :!~, :eql?, :respond_to?, :display, :object_id, :send, :method, :nil?, :hash, :class, :singleton_class, :clone, :dup, :itself, :taint, :tainted?, :untaint, :untrust, :trust, :untrusted?, :methods, :protected_methods, :frozen?, :public_methods, :singleton_methods, :!, :!=, :__send__, :equal?, :instance_eval, :instance_exec, :__id__] We can see here that the singleton_methods called on the class of Thing returns only our unique method! Whereas if we call the perhaps previously known method of #self. methods that is also built into Ruby, we’ll return all methods that can be called on this class and not necessarily the ones specific to it. Hm… What this is really stating is that the class method is not actually defined on the class itself but rather on the Eigenclass, or the class unto itself! To put it another way: This is effectively an anonymous class that Ruby creates and inserts into the inheritance hierarchy to hold the class methods (thus not interfering with the instances that are created from the class). — Mark Mc Donnell Senior Software Engineer @ Buzz Feed As Mc Donnell later puts it: The reason understanding the Eigenclass is important is because it helps to clarify how to make some methods private when they otherwise would seem impossible to make private. But when would we explicitly want to use it? Well, Mc Donnell points out the necessity for private methods:class Foo def self. bar  p "" I'm public"" end private def self. baz  p "" I'm private"" endend Foo. bar # => I'm public Foo. baz # => I'm private In the above example, Mc Donnell notes that although we’ve declared #self. baz to be private, we can in fact still call it. Why? Because private methods only apply to instance methods! And although class methods are instance methods (of the Eigenclass as we’ve now learned!), the delcaration of private in the above example applies only to the Foo class. Oh no! That means anyone can call #self. baz! Not to worry! We can use our knowledge of the Eigenclass to get around this:class Foo def self. bar  puts "" I'm public"" end class << self  private  def baz   "" I'm private""  end endend Foo. bar # => I'm public Foo. baz # => No Method Error: private method `baz' called for Foo: Class Here we’ve accessed the Eigenclass of Foo to place a class method as if it were an instance method (within the Eigenclass instance!) and now we can make it private! Awesome! Using this tactic we can even create attribute accessors. Attribute Accessors, also known as macros, are programs that read and write methods for us without us having to explicitly do so within our class — however, they only work for instance variables to create instance methods. They do not apply to class methods or variables. Based on what we just learned however, we can turn a class method into an instance method by placing it within the instance of the Eigenclass that we exposed and accessed! Lets insert an attr_accessor within Foo and try to call the variable “baz” using name spacing notation:class Foo def self. bar  p "" I'm public"" end @baz = "" I'm a class variable!"" class << self  attr_accessor :baz endend Foo. bar=> "" I'm public"" Foo::baz=>"" I'm a class variable!"" We can do this without specifying an instance using name spacing to declare that “baz” is defined within the Eigenclass instance of the class Foo! Lets check out some more documentation and another example: The secret is that self, in that context, refers to the object Foo, whose class is a unique, anonymous subclass of Class. This subclass is called Foo's eigenclass. — David Seiler, Stack Overflow Now let’s look at a different example from Stack Overflow:str = ""abc""other_str = ""def""class << str def frob return self + ""d"" endendprint str. frob # => ""abcd""print other_str. frob # => raises an exception, 'frob' is not defined on other_strfrob is defined, not on the String class, but on the eigenclass of str, a unique anonymous subclass of String. So str has a frob method, but instances of String in general do not. — David Seiler, Stack Overflow By the time we get ti Active Record and Active Support we will have moved past these concepts and into using things like “cattr_accessor” or class attribute accessors. But for now in pure Ruby, the secret sauce of the fundamentals can still be fundamentally fun :) The Eigenclass has nothing inherent to itself, and asks nothing in return; no arguments or parameters, no definition or even a thank you card. Silent, anonymous and constant, it provides that essential aspect of any individual or collective: a unique identity. B O N U S: Of course, Ruby being as wonderful as Ruby is, we already have another way to allow us to make class methods private. And of course, being the generous spirits that we are as Rubyists and following the code of Matz is Nice so We are Nice ( M I N S W A N), here is your shortcut that you’ve now earned:class Foo def self. bar  p ""im public"" end def self. baz  p ""im private"" end private_class_method :bazend Foo. bar # => im public Foo. baz # => No Method Error: private method `baz' called for Foo: Class Thanks for reading!","['Ruby', 'Programming', 'Eigenclass', 'Coding', 'Codingbootcamp']",https://medium.com/@ethan.reid.roberts/rubys-anonymous-eigenclass-putting-the-ei-in-team-ebc1e8f8d668,2,[],0,177,ethan,M,0.0016333670799214244,0.9983666329200785
David Yang,"Entrepreneur, hacker, teacher, starter of trouble.","Why Creatives Are Transitioning to Web Development - And You Should, Too",2018-07-09 14:21:01,medium,"Why Creatives Are Transitioning to Web Development — And You Should, Too Not everyone who attends a coding bootcamp has always dreamed of becoming a web developer. In fact, most of the students at Fullstack Academygot degrees in something other than C S, and either actively pursued, or intended to pursue, some other career before for transitioning to software engineering — and creatives are no exception. Actors, musicians, writers, visual artists, and more excel during bootcamp and then go on to be successful software engineers. So what draws creative folks to a coding bootcamp and a career in web development — and could their transition make sense for you, too? Creatives Don’t Have Time to Be Creative To afford classes, workshops, rehearsal space, equipment, etc. (not to mention basics like rent and meals), creatives have to pick up most any jobs that come their way. And working those jobs can leave little time for auditions, classes, rehearsals, and performances — basically all the reasons creatives get those survival jobs in the first place. They become trapped in this cycle, and realize that they only rarely get to do the thing they’re struggling toward. That’s exactly what happened to former actor Shannon Kendall, who says, “ Getting to actually act only happened once or twice a year, ” and that she woke up one morning to the realization that she was miserable. “ Chasing The Dream was sucking the life out of all the other dreams I had for myself. And I decided to stop. I decided I’d rather be actually happy, than spend my life pretending that the life of an actor made me happy. ” Read how Shannon went from this realization to enrolling in Grace Hopper, and how much happier she is now. Creatives Don’t Get Paid What They’re Worth Creatives are notoriously underpaid, and furthermore their work is irregular and unreliable. Their schedules change day to day, and it’s difficult to maintain relationships with others outside of the industry. All this instability takes a toll on a person, and most creatives begin to crave security as they get older and burn out on the creative roller coaster ride. Programming, on the other hand, is a burgeoning industry. Unlike the arts, a field with more artists than opportunities for those artists, the tech industry doesn’t have enough programmers to fill job openings. And as the industry gets bigger, there will be more and more room for more and more programmers. There’s also just more money in the tech industry than there is in the arts. Many theatres and independent labels and publishers are supported in part by grants and donations, the sizes of which will vary with each political upset and the whim of donors. The tech industry, on the other hand, sees a near-constant influx of investment money, so there’s more available to be paid out to employees. And salaries, even starting salaries, are good, with Junior Developers making an average starting salary of $80, 000. That’s far more than most creatives will make in a year. Read more about the developer salary landscape here. Kevin Kelly, a Fullstack Chicago graduate, shared this about his transition out of the creative world and into web development: “[ Theater]’s been an an exhilarating journey, with many ups and downs, but what I really crave is the kind of experience that very few performing artists enjoy on a regular basis: consistent work, creating professional, polished projects that lots of people enjoy. Learn more about his decision-making process and why he chose to attend Fullstack Academy here. Programming is Actually Creative Yep — you might be surprised to learn that coding is a creative pursuit, too, and that the problem-solving required can be just as stimulating and rewarding as finally getting a song arrangement, a book chapter, or a scene right. And the more versatile the coding language they’re working in, the more creative a programmer can get. Java Script, for example — the focus of the curriculum at Fullstack Academy and Grace Hopper — is one of the best programming languages to learn because it enables a developer to do either front- or back-end work, or any combination thereof. And contrary to the stereotype of the lone young man coding in a dark basement, programming is actually a very social vocation. Attending a coding bootcamp is a lot like being in a show or a band: Students have to learn to both rely on and provide support for their classmates, and by the time bootcamp ends, each cohort is more like a close-knit family than anything else. Eleni A. , a Grace Hopper graduate, was a frustrated graphic designer before her bootcamp experience turned things around. “ An incredibly satisfying part of software engineering is actually building something from nothing, ” she says. “ Now, I get to creatively solve technical problems… I’m in control of my own destiny. ” Read more about her search for happiness — and how she found it at Grace Hopper! — here.","['Programming', 'Coding', 'Codingbootcamp', 'Career Change', 'Career Advice']",https://medium.com/@dyang/why-creatives-are-transitioning-to-web-development-and-you-should-too-bdb98f01c11c,1,['Fullstack Academy'],1,3,david,M,0.0035582779766708743,0.9964417220233291
Rae Lambert,"Creator of Small Space, Big Taste. A digital magazine about a living large in small spaces. Learn more at smallspaces.co","There’s a cheaper, faster way to build skills than a conventional education",2018-10-05 21:08:27,medium,"There’s a cheaper, faster way to build skills than a conventional education The modern knowledge worker is learning faster than ever, but they aren’t turning to expensive, conventional degrees. Instead, they are building their skills on-demand through online classes and short-term intensives. More articles like this one can be found at Small Space, Big Taste. In this post I share: My own education and career experience. Survey results from 26 people in my network who are successful without a degree in the work they do. List of short-term education programs proven to build skills for less time and money than conventional colleges and universities. When I was younger I wrongfully assumed that my mediocre academic performance would lead to a mediocre career. I struggled with tests and graduated high school with a 3. 0 G P A and scored 1080 on the S A T (59th percentile). I fared slightly better in college where my writing and project work edged me up to a 3. 4 G P A. Three universities and five years later I earned a B. S. in Management with a concentration in Finance and minor in Economics from U Mass Boston. I’d like to say all of that hard work prepared me for the future, but it turns out that employers don’t administer multiple choice exams. Tony Wagner, expert-in-residence at Harvard University’s Innovation Lab, explains it best:“ The world of education revolves around tests and test scores. That’s not how the adult world works. ” Not to say I didn’t learn a lot in college. I learned how to stick with it even when it doesn’t come naturally. I learned how to meet deadlines, manage my time, and get along with all kinds of people. But after 6 years of being in the real world, the particulars of my coursework proved unimportant. This became even truer when I left finance to work in marketing (obviously this doesn’t apply to careers in science and medicine). Now I earn over six figures as a part-time marketing consultant (the rest of my time goes to this blog) and I’ve never taken a college-level marketing course. This isn’t unique to me. In my experience, some of the most talented people I know didn’t go to a conventional school for the work they’re doing now: Tim studied History, went to Shillington and now works as a brand designer. Matt studied English Literature, got a Cisco Certification, and currently works as an Infrastructure Engineer (he’ll be helping to live-stream this year’s Super Bowl). Maddie studied Linguistics, attended App Academy, and is now a Product Engineer. Dan studied Psychology and is now a Tech Lead. With technology changing so fast, many job skills are acquired on-demand, outside of a conventional degree program. The best job performers I know confront questions or problems by Googling it first. Then, if they need to learn more, they take an online class or attend a workshop or bootcamp for a fraction of the time and money of a traditional degree. To understand this more deeply, I conducted a survey and shared the results below. Scrappy Education Survey I conducted a survey of 26 people in my network who have attended a bootcamp or short-term intensive program. 16 people reported earning more after the program, many of whom earned significantly more. Most of those who earned the same or less were happier with their new line of work and believe their lifetime earning potential is now higher. Programs attended by survey responders (links in program list at the bottom of this post): App Academy Dev Bootcamp Cisco Networking Bootcamp Hackbright Metis Datascience Bootcamp Praxis Shillington School of Graphic Design All respondents said the program they attended was really hard work. They also noted that it is the beginning rather than the end, and plenty of hustle will be required to continue building skills to get the job you want. Average program length How people described their experience How would you rate the resources they provided to help you find a job after? How well did the program prepare you for real-world work? What was your yearly income before you started the bootcamp? What was your yearly income after the bootcamp? Income change after the program: Advice from survey responders: A P P A C A D E M Y“ Stay there late. Work through everything and learn as much as you can. ”“ Be ready to fully devote yourself to the program. Try to focus and work the hardest you’ve ever worked in your life, as it’s a fairly short thing in the grand scheme of your life, and the payoff can be huge. ”“ Know that it’s not a magic ticket to a new career and that the job market for junior developers is not what it used to be. You need to hustle hard, be creative, and find ways to differentiate yourself to employers. There are thousands of bootcamp grads out there and employers may have preconceptions if they’ve come across only mediocre ones so far. ” C I S C O N E T W O R K I N G B O O T C A M P“ The certifications you end up with after the program get your foot in the door; the real world experience you gain through years of hard work pays off. ” D E V B O O T C A M P“ Research deeply into the program you’re interested in, there are some very niche types now. A lot of the stuff they teach you is available online in free courses, but I know the type of learner I am, I need a classroom/teacher experience and pushed to be more disciplined. ” M E T I S D A T A S C I E N C E B O O T C A M P“ The program is just the start of your new journey to develop new skills! To stay relevant in the industry, you’ll have to continue your learning afterward. ”“ The bootcamp itself does not guarantee a job. It is the work you put in afterward and outside of the course that distinguishes you from other candidates. ”“ Try hard: set ambitious goals, learn as much as possible in the limited time available. Expect/embrace failure: realize the limitations (time, knowledge, resources) of the experience and also realize if you never fail, you’re failing. Ask for help, and help others when asked. ”“ You must be prepared to learn at a fast pace. There isn’t time for you to cover material enough to feel comfortable with it, and if you are somebody who needs to feel like you’ve 100% mastered material before moving on, then you’ll quickly be overwhelmed. ”“ Do A L L of the pre-work. ” S H I L L I N G T O N S C H O O L O F G R A P H I C D E S I G N“ Go all in! Throw yourself into it. It will be hard but worth it. Think of it more as a stepping stone to a new path rather than an end all. But it gives you a huge leg up into finding a job within the creative world. ”“ Go for it. Worth every penny. If you’re making a career change and you’ve never used any of the Adobe programs, go for it. ” Income change from a much larger sample of coding schools Source: Course Report, Coding Bootcamp Alumni Outcomes & Demographics, 2017 Course Report, the leading authority on immersive technology education, surveyed graduates from 73 qualifying coding schools and received 1, 450 qualified graduate responses in 2017. The average salary increase was 51%. The average post-bootcamp salary was $71 K and the average salary lift was $24 K. Education Programs Here’s a list of scrappy education programs to help kick off your research. T E C H N I C A L C E R T I F I C A T I O N S Cisco Networking Academy Online and in-person learning for Internet of Things, Networking, and Security. A highly reputable program that’s been training people in technology since 1997. Udacity Online programs and classes in technology with the option of earning a Nanodegree — skills-based educational credential program. C O D I N G B O O T C A M P S App Academy12-week web development program available in San Francisco and New York City. Hackbright Academy Women’s only in-person coding program with campuses in the San Francisco Bay Area. Metis Data Science Training3-month in-person data science bootcamps available in San Francisco and New York City. Evening part-time professional development courses, online learning, and corporate programs also offered. G E N E R A L C O U R S E S & W O R K S H O P S Coursera Online courses covering a wide range of topics including Arts and Humanities, Business, Computer Science, Language Learning, and more. General Assembly Offering online and in-person (31 cities) training in tech, data, design, business, and more. I personally took a storytelling workshop and still use some of the tactics I learned. Lynda ( Linked In) Online classes and bite-size lessons covering a wide range of topics such as 3 D + Animation, Audio + Music, Video, and Photography. Master Class Online classes taught by people famous for their craft — Gordon Ramsey teaches cooking and Margaret Atwood teaches creative writing. M I T Open Course Ware2400 M I T course materials made public. Udemy Online courses covering a wide range of topics. D E S I G N I N T E N S I V E S Open Campus ( The New School) Shillington School of Graphic Design What program did you participate in? I’d love to make this list more comprehensive. Let me know about your experience at a non-conventional education program by taking the survey or leaving a comment! More articles like this can be found at Small Space, Big Taste.","['Education Reform', 'Codingbootcamp', 'Technology', 'Career Change', 'Career Development']",https://medium.com/@raechel.lambert/theres-a-cheaper-faster-way-to-build-skills-than-a-conventional-education-6f987dfcdce5,17,"['App Academy', 'Dev Bootcamp', 'Metis', 'Hackbright Academy', 'General Assembly']",5,32,rae,F,0.9602625666328913,0.039737433367108686
Michael Cacciano,Student at Grand Circus' C# .Net coding bootcamp. Code is love…and coffee!,What 4 weeks of code bootcamp has really taught me – Michael Cacciano – Medium,2018-08-11 17:10:22,medium,"What 4 weeks of code bootcamp has really taught me As I come to the end of week 4 at my coding bootcamp, I thought I would share some of my thoughts on this wild adventure. I suppose I’ll start by saying I’m not the smartest of people, but I’d say I get along decently well. My lady might call it selective comprehension but that’s a different story (love you lady!). Now making the choice to commit to something that was going to take a solid 10 weeks of my time from 9–5 Monday through Friday was no easy choice. I’ve been working since I was old enough to push a lawn mower around town, and if you’re anything like me, just the thought of not bringing in a paycheck for 3 months still makes me cringe. I was completely at the end of my rope with my current career path and very, very much under challenged. I had been teaching myself some front end web development and had a what I’d call an advanced beginner knowledge set, which has helped me immensely through this experience, and I stand by that. Now only four weeks into bootcamp and I know this was the right choice. I am actually comfortable with calling myself a developer, albeit a junior, but still…. I A M A D E V E L O P E R. No matter how large the problem solved!! I think getting to a point where you can look yourself in the mirror and say with comfort and confidence that you are what you tell yourself you are going to be, is something truly priceless. I’ve learned so much in such a short time and there’s still six more weeks to go! So to actually make some kind of point through all of this, I would say that you definitely will get out what you put in. I was ready to make a meaningful change in my life. That dedication and self-realization is what I believe to be proving the most rewarding. Just be honest with yourself, and then you can carve the path you were really want!","['Programming', 'Developer', 'Codingbootcamp', 'Coding', 'Junior Developer']",https://medium.com/@michael.cacciano/what-4-weeks-of-code-bootcamp-has-really-taught-me-bf011325a5cd,0,['Grand Circus'],1,0,michael,M,0.004965539448960512,0.9950344605510395
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Why You Should Attend a Part-Time Online Coding Bootcamp,2018-03-06 14:11:01,medium,"Why You Should Attend a Part- Time Online Coding Bootcamp If you’re someone interested in attending a coding bootcamp but don’t have the ability to attend a full-time coding bootcamp, you may want to consider attending a part-time program instead. Here are 6 reasons why you should go to a part-time online coding bootcamp:1. You don’t have to quit your job One of the greatest prohibitors to attending a full-time, immersive bootcamp is having to give up your job to attend. For many people, this simply isn’t a viable option — whether they’re taking care of their families or can’t afford to give up a steady income for an extended period of time. Choosing a part-time coding bootcamp allows you to uphold your responsibilities while learning to code. 2. You can attend from anywhere in the world Coding bootcamps tend to be located in select major cities. If you don’t live in a big city like New York or San Francisco, it may not be possible for you to relocate to attend a bootcamp. With an online coding bootcamp, you have the freedom to attend lectures from the comfort of your own home — regardless of if you live in a bootcamp’s hub city. 3. There’s a structured learning environment Many people who attempt to teach themselves coding give up or taper off after just a few weeks. If you’re someone that learns best in a structured learning environment but there are no classes near you, an online coding bootcamp is a great solution. You’ll be able to follow a guided curriculum online with the accountability of a classroom environment. For 3 more reasons to attend an online coding bootcamp, read our original post. — Ready to learn to code? Check out Hack Reactor’s online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Coding', 'Codingbootcamp', 'Remote Working', 'Online Courses']",https://medium.com/@hackreactor/why-you-should-attend-a-part-time-online-coding-bootcamp-2baaee4cf207,1,['Hack Reactor'],1,12,hack,Unknown,Unknown,Unknown
Simon James Brady,,< At Journey’s End /> – Simon James Brady – Medium,2017-10-06 02:22:33,medium,"< At Journey’s End /> End of a Project, and the end of a Bootcamp After countless hours, innumerable cups of coffee, and yet only a week, our project is complete. It is bittersweet, as even though our final product is functional, it marks the end of my time at the Dev Bootcamp in N Y C. It has been a considerable pleasure to work and learn with my greatly talented cohort. We have struggled together, and thus learned a great deal about ourselves as programmers. R Spectacle, our week long effort, is finally complete. It is polished, functional, and ready to be presented. However, now is not the time to rest on our laurels. We consider this iteration of R Spectacle to merely be the stepping stone to something better, being the implementation of a social aspect and linking accounts to Git Hub. Further, we initially set out to build this sandbox into more of a game, allowing users to gain points on passing their code/tests. We believe that such features will help to reinforce good coding practices with young developers by making our product more interactive and goal oriented. Alas, we have far to go, but it is bolstering to see the proverbial distance we have covered. Most of us began this course illiterate in Web Design, or even coding in general. However, thanks to the tireless guidance of our mentors and more experienced peers, we have built a myriad of C R U D web apps, touched on and explored different technologies, and most importantly, learned how to quickly grapple with new concepts and leverage them properly and effectively. In the end, I heartily thank the Dev Bootcamp for all that it has offered, but I would also like to thank my team and my cohort. I consider you all my good and stalwart friends, and I could not have achieved what I did without you all. Thank you, and thank you to the readers who have taken this short stint in project oriented coding, it has been a pleasure and I look forward to the next undertaking.","['Programming', 'Web Development', 'Codingbootcamp', 'Tdd', 'Rspectacle']",https://medium.com/@simonjamesbrady/at-journeys-end-e6d22adc25b8,0,['Dev Bootcamp'],1,0,simon,M,0.002634710181879993,0.99736528981812
David Clark,Mindfulness | Humans | Animals | Earth | Coding | IG: the.coffee.smith,First App from Scratch – L2Code – Medium,2018-05-19 23:40:58,medium,"First App from Scratch Well, I did it. It took me six days and roughly 24 hours to complete. To give you an idea, Thinkful says it should take 7–8 hours. This really shakes me. I had a lot of issues. I’m not strong with Java Script, j Query, or C S S, and I feel like the curriculum hasn’t given me the opportunity to practice those enough. It’s not like I could just Google “j Query D O M event delegation practice” to find things to help me bone up, either. I wish it was that easy. The completed app can be found here. Going forward, I have a mock interview, which I am about 5% ready for. My mentor did a very simple mock-mock interview with me, in which he gave me a simple drill. I had the hardest time, and I feel like an idiot… Here’s the drill we did://find sum of values in arrarr1 = [1, 900, 24];let current Sum = 0;function sum Arr(){  for (let i = 0; i < arr1. length; i++){   let current = arr1[i];   current Sum = current Sum + current;  }} This should be pretty easy, right? It sure looks easy. Unfortunately, I had the hardest time after that first line. I started with:arr1 = [1, 900, 24];function sum Arr(){} And I watched the cursor blink. It took the next 15 minutes and several mistakes for my mentor to coax the rest out of me. So, I have a lot of work to do. This is why I haven’t been maintaining this publication as well as I wanted to. I don’t know how folks who’ve never coded before have and do write blogs while learning. Pretty crazy!","['JavaScript', 'Learning To Code', 'Web Development', 'Codingbootcamp']",https://medium.com/l2code/first-app-from-scratch-4d6d9b34378,0,[],0,0,david,M,0.0035582779766708743,0.9964417220233291
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu (Voyage launch remix) – Chingu – Medium,2017-07-24 12:17:38,medium,"Overheard in Chingu ( Voyage launch remix) Random lines taken out of context from the Chingu coding cohorts! I am poised to start building a project and overcome the fear of failure. The enthusiasm is through the roof in Chingu. my coding journey has been - oh lets make this - hold up i gotta make it look good come on now. so ive learned Sass, flexbox, just to make projects look half-decent before the logic even comes in lmao P S: Suilad mellyn is elvish phrase for Hello friends ^^ Your team is like I K E A furniture: we give you the essentials and you A S S E M B L E it yourself! ;p How can I help?just set goals for yourself, and push forward to them, right now my goal is to learn more about node. js so i can send emails with nodemailer in my reactapps. So while i’m learning about that i’m making 2 different projects that use that, so I will H A V E to learn it. :slightly_smiling_face: Got a response from the maintainer of the module I’m using, at least I’m pointed in the right direction now. What I was trying to do is impossible so that would explain why I couldn’t do it lol I told one of my teachers about Chingu, he said it was one of the most exciting projects he had ever heard of I couldnt get to check all the messages here yesterday, but I really like what I saw regarding the number of nationalities we have here and the intro you guys are posting Make amazing things, we will — Growth in skills, happen it will — :relieved: we need a Yoda bot… Good morning! So I am supposed to speak at a conference in the fall, and I’ve been struggling with what to talk about. ( This is the first time someone has invited me out of the blue to speak. Normally I submit a proposal and know my topic ahead of time. ) I think I’d like to speak about my experience with Chingu in an effort to encourage more librarians to learn how to code. Do you have any objection to that? Would you be O K with an onslaught of chatty, and potentially, confused librarians? Totally. Everywhere you look in here there’s someone working super hard at all times of the day. There’s motivation around every corner. I love it here. Have something to strive to and you will find yourself at the end at somepoint. Just help others along the way as you get there, it helps you and them. :slightly_smiling_face: I actually created the app [random team-name generator Temere] cause we could not find a name for our team in the rhinos cohort Wow, I am overwhelmed by the excitement and diversity of the people here. We come from different backgrounds and cultures but share similar goals. It’s amazing… You guys are awesome! Go Chingu! Hey there ! . . If I stop responding at some point, it’s because I’ve crossed the German border . . On my way to see an old Viking settlement I embrace “ I don’t know what the Hell I’m doing’ because that means I’m learning and if I’m learning I’m having fun. Especially when that “a-ha” moment arrives when I do get it and I can start all over in a new subject area. Anyone has experience with oauth? Unable to login through github on a local setup? Gym has made my confidence high, I talked with a random person today and didn’t die…. At work we tend to have the philosophy of strong opinions weakly held, or in other words, don’t be afraid to have an opinion and feel strongly about a piece of tech or a working methodology etc. but leave your ego at the door and be open to other points of view, seems to work really well for us as a company So, I am working on this bot, that takes a Direct link(http/ftp) and converts it into a torrent and then gives you the torrent file. When you start that torrent, The Torrent Downloader will start downloading from the webseed. In simple words, I take a link, Download that file on server, Create a torrent file and then serve it to you. And heroku some how thinks that I am doing Peer-to-peer stuff and would not allow me to upload my code there. :disappointed:our code is starting to get slim, optimized, documented (for the most part) and uses the latest specs, also I’ve been removing npm crappy modules like there’s no tomorrow I love spending time looking at crappy code and finding way to refactor it. spend my weekends doing that, find it relaxing@channel Just dropping this here — I wrote a Medium article on how @belcurv and I improved Whobot, based on some advice at the Node meetup I went to last week. I’d love feedback (and, of course, :heart:s) from y’all! https://medium. com/@peter. j. martinson/how-to-crush-a-programs-bottleneck-double-loops-28ffc8ff7379 My dream for the distant future is to have my own tech company ( I really want to develop tech for the future )[@usernamehere] … you’re a chingu … it’s impossible for you to be boring!","['Nodejs', 'Chingu', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/chingu/overheard-in-chingu-voyage-launch-remix-3ee77e4711d0,2,[],0,9,chance,M,0.024461428631419813,0.9755385713685801
Patricia Morad,,From Biology B.S. to Coding Bootcamp BS – WWDD – Medium,2017-12-03 21:25:38,medium,"From Biology B. S. to Coding Bootcamp B S This is less of an autobiography and more of a how to successfully apply to and get acceptance into a developer bootcamp. Even if you don’t know what you’re doing. I recently finished my undergrad degree in Health Science. My job history includes things like tutor, baby sitter, waitress, and pathology shadow. So how did I get into coding bootcamp? Research You can’t be lazy here. Take an hour a day for a whole weekend and find the different bootcamps available to you. There are full-time intensive bootcamps, part time bootcamps, online only, classroom only, hybrids, you name it. I chose a bootcamp that allowed me to still work full time so classes are scheduled on evenings and weekends. Check the reviews (good and bad), curriculum, timeline, and costs. There are tons of websites that break down the information for you! Apply Seems a little obvious but seriously just apply. Earlier this year I was struggling to complete my Biology degree knowing very well I had no clue what to do after. What did I do? While in school I applied to a tech internship as a leap of faith. Boom! I was hired. So I figured the same could be done for bootcamp. I chose a bootcamp and applied. Boom! I’m in bootcamp right now. There was no tech experience on my resume in either case. I just made sure I did a few key things: Pointed out my transferable skills (communication skills, being meticulous, ability to learn quickly, knowing how to ask questions, etc. ) Planned out and verbalized a clear path/goal. Even if you’re not 110% sure. For now, say that’s your plan. You can diverge a bit once you have one foot in the water. Graduate with a B. S. → Learn to do Q A at my internship → Dive into more complex tasks like learning S Q L or Javascript Remained transparent! For my internship and for bootcamp I was honest about my lack of experience in tech. Instead, I emphasized how willing I was to learn and how determined I was to get to my end goal. Those interviewing me seemed more drawn to my potential than my immediate skillset. Look for Scholarships There are scholarships for everyone out there. Developer bootcamps can be pricy and run in the $10, 000–20, 000 range. Don’t let that deter you. I was making $15 an hour, had no help from parents or a spouse, and felt overwhelmed. Y O U W I L L B E O K A Y! Find a few scholarships and apply to them. I communicated interest in scholarships to the mentor interviewing me and he lead me to some helpful resources. Ultimately, I won a diversity scholarship through a partnership between Women Who Code & Actualize. So speak up and ask around for financial assistance. There isn’t just one way to do things. Scholarships are out there! Be Positive Cliche or not I will never support negative thinking. If you come into an interview doubting yourself you’re going to give those vibes off to the people in the room. Just like we can read when someone is angry or excited, we can read when they’re insecure or pessimistic. Remain confident in your abilities even if they’re not directly correlated with tech. In that case, you bring diversity and any classroom or team can benefit from individuals that make the group as a whole more well rounded.","['Programming', 'Bootcamp', 'Web Developer Bootcamp', 'Codingbootcamp', 'Coding Interviews']",https://medium.com/wwdd/from-biology-b-s-to-coding-bootcamp-bs-141b0b6e0ec5,3,[],0,0,patricia,F,0.996852828838794,0.0031471711612059464
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,So you’ve been placed in a Chingu developer team? Read this FAQ.,2018-05-20 11:55:22,medium,"So you’ve been placed in a Chingu developer team? Read this F A Q. Photo by Joshua Earle on Unsplash1 — How are teams formed?2 — Optimal groupings vs. The Perfect Team3 — What does success look like?4 — How do we get started?5 — What is Chingu not good at?6 — How can I get support during the Voyage?7 — Voyage Deadlines8 — How can I contribute to Chingu and its mission?9 — Extras1 — How are teams formed? The average Voyage has 200–400 developers of all levels from 70+ different countries, who all have different time-commitments, life circumstances, and tech-stack familiarities. We organize teams based on the following criteria (listed in no particular order): current tech-stack familiarity, tech-stack preference, availability, weekly commitment level, timezones, location, experience level, submitted projects, interest in leadership, meeting-type preferences, reliableness in past cohorts, & specific requests. The complexity that arises is pretty wild. For example, the tech-stack preference criteria alone has 20+ different points of differentiation. We aim to optimally match people to the best of our ability on the above listed criteria. Team sizes are 3–4 for Bears and Geckos teams & 2–4 for Toucans teams (see below for what the animal names mean). We’ve found these to be the most optimal team sizes based on past Voyages. 2 — Will the teams always be perfect? No, the teams will not be perfect. Chingu is not a coding bootcamp where members pay thousands of dollars to join. Chingu is free and facilitated by volunteers who believe this opportunity should exist in the world. We strive to do the best we can with the resources we have, but we’ll inevitably make mistakes ( I apologize in advance for this). Also, I believe the best skill you can learn in this Voyage is how to adapt. See below → Why do we strive for “optimal groupings” and not The Perfect Team? The perfect team is an illusion and does not exist. You don’t get a job and walk into a perfect team. You get a job and join a group of people with different experience/skill levels, personalities, past histories, and schedules. Learning to navigate and find success in teams is a crucial meta-skill that will benefit you throughout your life and career. The above skill is not easy, but the best way to learn is through practice, failures and overcoming those failures. “ Success = Resilience/ Failure” — Scott Galloway3 — What does success look like? Success in Chingu = leveling-up your skills. Finishing the project is icing on the cake (and your portfolio), but ultimately the skills (both hard and soft) you learn while building the project, as well as the experience working in a team are most important. 4 — How do we get started? When your team chat is generated, the first thing to do is to talk to each other! Say hello! Express enthusiasm for the project! (this builds momentum for the team) Read the project the Project Roadmap Important to note: D O N’ T let yourself have the mindset of “ I’ll just wait for my team-mates to do X. ” Don’t wait until your team-mate says hi to say something. S A Y H I. 5 — What is Chingu not good at? A) We are continuously growing & improving, which means things will sometimes break. We believe continuously getting better to offer more opportunities for tech-learners is worth it, but I’m super sorry for when things don’t always work perfectly 🙏). Also, Chingu has been growing quite fast and… B) Unfortunately, we can’t force people to follow through on their commitments. People will get jobs, have family emergencies, give up occasionally, etc. Circumstances will change in teams and it’s best to go into the team ready to adapt. It’s best to go into your Chingu project with a resilient mindset: expect that your team will look different at the end than it did at the start and that you’ll have to overcome roadblocks. In every cohort we have a few teams where others dropped out but one person showcased grit and finished the project himself/herself. These people gain confidence (for tech-learners with imposter syndrome this so valuable), skills, and earn spots in top teams in the future cohort (we’re a meritocracy). Even when teams don’t work out, the resilient find a way to succeed!6 — How can I get support during the Voyage? Learning is hard. In the Voyage we have many ways people can get support: Slack channels: #code-help, #community-chat, #resources-treasure, #chingu-news/#announcement These are the main channels in Slack where you can get support. Weekly Check-in: Each week we’ll send out a weekly check-in form (3 mins) to all members (can be found in your weekly Chingu email as well as #chingu-news/#announcement). This check-in is how we support teams and is mandatory (we message everyone who doesn’t do it and those who don’t may be subject to removal — yes, we consider team support that important). Chingu ticket system: If you ever have an issue, feel free to make a ticket and the Voyage- Facilitators will help you when we can! The ticketing link can be found in the #announcements (or #chingu-news) channel at the top. Pair-programming: In the weekly check-in form there’ll be a question “ Do you want to be matched with someone for a pair-program session this week?” This will allow you to practice algorithms, work on mini projects, or get help with your team project!7 — Deadlines Part of the benefit of team projects is that it gives you experience working with deadlines and overcoming roadblocks to reach those deadlines. There are 3 major deadlines in the Voyage: Act 1 — Project Setup: See your weekly checkin form for due dates M V P ( Minimum Viable Project) aka basic project finished: See your weekly checkin form for due dates. Weekly Checkins (done each week)8 — How can I contribute to Chingu? Chingu is building a global collaboration capital for tech-learners — developers, data scientists, designers & digital marketers. Our mission is to create a place where tech-learners from all over the world, from all stages of their career, can come to level up their skills for free. There are 2 main ways to help make this a reality: For those who want to contribute their time: Every so often we put out a form for experienced members to get involved in some way. This could be as a Chingu- Facilitator, doing talks, etc. Keep your eye out in the Weekly Checkin for more information. For those who want to donate to Chingu🙏 Chingu’s Patreon (for small monthly donation)🙏 Chingu’s Paypal (for one time donations)9— Extras Extra questions that you may have What do we build? Here are the Project Prompts we suggest: Team- Project Prompts Do we have to follow the Project Prompts exactly in the project prompt article? No, teams can choose what projects they want — though we suggest teams be V E R Y careful not too try to build something outrageous if they aren’t experienced in team development. It is easy to let scope get out of hand and the project fails. Team development is a skill and it’s harder than most think. What if no one wants to be a Team- Lead? Most teams will have someone who indicated on their application that they are open to being a Team- Lead, but we won’t always be able to ensure this. It is up to the team to decide on a Team- Lead. If no one is willing to help lead the team, either the team tries to do it without one or the team disbands. What if I have to leave the team? How does that work? Communicate with your team, try to sort out a solution to ensure they can still be successful without you, and make a ticket to let us know. When do we get added to our team’s github repo? We’ll be adding people in the first week. It usually takes about a week to get everyone in because of github’s daily invite limits (we launch a lot of teams 😂). N O T E: The invite will go to the email connected to your github account. What are the animals about? ( Toucans, Geckos, Bears)? Each animal represents a tier, which is how we organize teams. Each tier represents generally where coders are focused on (as selected in their application). 🐦 Toucans [ Tier-1]— H T M L — Basic Javascript — Basic Algorithms ( L A N D I N G P A G E S)🦎 Geckos [ Tier 2] — Intermediate Algorithms — Front-end Projects ( F R O N T- E N D & sometimes full-stack)🐻 Bears (tier-3 — Advanced Projects — Data Visualization — Back-end ( F U L L S T A C K) What if my team-mate disappears? What do we do then? Try contacting him/her in a Direct Message ( D M). If you still don’t hear back, please make a ticket to let us know. We can’t guarantee we can find a replacement, but we’ll try to support teams as best we can. What if I don’t know what I should be doing in my team? No worries, that is completely natural! Communicate with your team-mates and Team- Lead. Let us know in the Weekly Checkin. Communication is key! Has Chingu noticed any patterns among people learning to code? In the past few years I’ve overseen a few thousand tech-learners and a clear pattern has emerged for those who succeed. Successful developers see roadblocks (whether it be with code or team-dynamics-related) as challenges that can be overcome and adapt to changing circumstances. For those who fail to reach their goals it’s usually related to a lack of grit and tendency to quit when circumstances change, get hard or don’t fit with their preference. Think less “make it perfect for me” and more “adapt to changing circumstances to persevere”. Chingu provides you with a network of coders with shared goals to help you with motivation, code questions, and for some, access to jobs. It is common for members to do 3–4 different Voyages and it’s worth keeping in mind that Chingu is a meritocracy. The people who are dependable and show grit tend to find themselves with better opportunities and teams after each cohort. What about that Slack message limit thing? The slack message limit will be an issue in this cohort. We’re exploring different options (most notably Discord), but that won’t happen for this Voyage. Members should be saving important documents and info in a separate location. Your team’s chat history will disappear a few times a week during the start of the Voyage (when people are talking like crazy) and then it will relax later on. Like with workflow tools, we encourage teams to decide on whether they want to stick with slack or create a discord for their team to communicate and have meetings. Quick tip: In slack the D M with yourself (click your username in the Direct Message section) never gets deleted and serves as a personal notes storage place. What is the Wizard bot? The Wizard is a bot built by the Chingu- X team to help teams stay on track. It brings up the Project Roadmap and links to each milestone to learn more about it. How can I use the Wizard bot? Type /map in any message box in the Voyage slack and it will magically appear. It is hosted on a free tier of Heroku so sometimes it may require to type /maptwice or three times to wake it up.","['Chingu', 'Codingbootcamp', 'Team Development', 'JavaScript']",https://medium.com/chingu/so-youve-been-placed-in-a-chingu-developer-team-read-this-faq-53e3303c23b0,2,[],0,228,chance,M,0.024461428631419813,0.9755385713685801
Claudia Maniscalchi,"reader, cook, music lover, coder","Pry, Pry, and Pry Again – Truthy or Falsy – Medium",2018-07-05 03:51:45,medium,"Pry, Pry, and Pry Again I am new to programming. Like, brand spanking new. My educational background is in music and literature, and for the past 10 years I worked within the world of public media. That’s why diving into the nitty-gritty of Ruby in the first few weeks here at Flatiron School has been a humbling experience, to say the least. I find myself having to adjust to new ways of thinking in order to meet the demands of my coursework — work which would have been more or less meaningless to me just a few months ago. The learning curve can be a steep one, and I find myself actively cultivating new habits and adopting new tools to make my daily learning really take root. One of those tools which has especially helped me to adapt is Pry. What’s Pry, and why should I care? Pry is a R E P L gem, or Read– Eval– Print Loop, created by John Mair, Conrad Irwin, and Ryan Fitzgerald, with the aid of the greater Github community. If the concept is new to you, a R E P L: Reads (or accepts) a user input, and stores it in your computer’s memory Evaluates your input , meaning it processes whatever data you’ve inputted Prints the evaluated result Loops, then exits out of the process — the above R, E & P represent one loop In short, a R E P L lets you test out and explore your code in a private, interactive environment. Use it to see if that method you just built elvaluates as true or false, to see how many elements exist in an array, to dissect some really complicated nested hashes, or even just to do some simple math. There are many web-based R E P Ls available, but for my purposes I’m working in my terminal, and without Pry I’d be dependent on I R B to test my code. I R B is Ruby’s built-in R E P L, it’s short for Interactive Ruby Shell. That wouldn’t be the worst situation to be in, but as I’ve learned, Pry has a wide range of functionality which I R B doesn’t support, and it can make all the difference in troubleshooting your code. Pry vs I R B When compared side by side, a few major differences between Pry and I R B are readily apparent: Pry supports syntax highlighting, while I R B is completely monotone, and Pry has more uniform indentation formatting. Let’s take a look: The same code entered in Pry (above) vs. I R B (below) These examples are a bit messy, but intentionally so. I’ve found working in your terminal can get messy, unless you’re clearing it all the time. The advantage here to Pry I think is obvious — those strings, hashes, arrays, and return values pop right out in the middle of an otherwise dense chunk of code. It’s also less busy; in I R B that “2. 3. 3 :001 >” over and over again is not especially beautiful or helpful. Pry simply indicates where you are in your pry session with a [3] for line 3, followed by pry(main), which indicates where you are within the scope of your pry session. Okay, Pry looks nice, but what can it do? In the very short time I’ve been at Flatiron I’ve used binding. pry countless times. It’s one of the first applications of Pry we learned, and with good reason. How you use it is simple — in any document you want to run, first make sure you “require ‘pry’” at the top, then drop in a breakpoint with “binding. pry” anywhere you want to inspect within the body of the document. When you run your program, pry will open up at the precise moment you put in your binding, allowing for some really precise, targeted troubleshooting. This is called Runtime Invocation. Here’s a simplistic example: Because I put my pry in the middle of a block, I’m able to see what |num| represents, in this case a 1, then if I loop through again a 3, and so on. I can test out the program at this point and confirm the return values I’ll be getting: [3, 21, 30]. One of the most impressive uses of Pry I learned from You Tube, and it’s a game changer: you can go inside self. If I start a pry session with the command “pry” then set a variable lucky_number equal to 17, I can move into the scope of that integer with the basic shell command “cd lucky_number. ” From there, if I call self I’ll see a return value of 17. If I input self. class, I’ll get Fixnum. The command prompt “ls” returns a list of methods I can call on myself (i. e. 17). Here’s how this all looks:self. positive? => true This kind of functionality is called State Navigation. As Pry’s documentationon Github describes: Taking inspiration from the unix command shell, Pry provides commands to make navigating around your program’s runtime state both familiar and natural. I just used shell commands “cd” and “ls ”within Pry, and I was able to inspect self and pull up a list of methods. Not only that, but they’re clearly organized into categories. Here we see Comparable, Numeric, Integer, Fixnum, and local methods. If I want to get back outside of this object, I just re-enter “cd” and I’m back at my pry(main) input. It doesn’t stop there. By using a period, I can actually navigate and execute tasks within my computer’s command line without ever having to exit pry. Here you can see I looked at the files in my current directory with “. ls”, changed directories with “. cd Development/blog-posts”, created a new file with “. touch”, and then opened it in Atom, all within my Pry session. The Pry documentation is extensive, just like the functionality. I’ve only brushed the surface here, and I expect Pry will only grow more and more useful to me as a tool the longer I use it. I know that even as a beginner, Pry is a life saver, so I can only imagine the benefits that’ll come with time and loads of practice. I look forward to prying and learning for many years to come!","['Ruby', 'Rubygems', 'Coding', 'Codingbootcamp']",https://medium.com/truthy-or-falsy/pry-pry-and-pry-again-62f3f774c4b8,3,['Flatiron School'],1,6,claudia,F,0.9940265852372445,0.005973414762755484
Wendy Lee,Former tech giant bean counter turned digital nomad & tech-extrodinarie-in-training.,"Le Wagon Week 3: Stay Humble, Stay True – Wendy Lee – Medium",2018-03-18 00:00:00,medium,"Le Wagon Week 3: Stay Humble, Stay True In grad school, I once had a professor said that in economics, we have complicated terms to describe everyday phenomenon. The ability to speak this language earns us the big bucks. But if I no longer want my life goal to be about making the big bucks, what do I do with this language? Only three weeks into my coding education, and I am feeling similarly about programming. None of the logics we learn is that difficult, but there are A L O T of complicated terms. Despite Ruby’s effort to humanise codes, there exists plenty of non-intuitive computer speak. They call computer codes languages for a reason. Thankfully, with four languages under my belt, learning computer speak isn’t too different than say, learning English or French. The process is always 1. Learn the basics, 2. Apply the basics to different contexts — over, and over, A N D O V E R again. In week 3, we finished learning the basics of Ruby, and putting the concepts together in object-oriented programming. We learned the M V C ( Model- View- Controller) framework, then assembled the pieces of the puzzles together by building a simple food delivery app. In human speak — it means laying out your app into puzzle pieces, where each piece has a specific job, then put them together. The words have been strung into sentences, and stacked to make paragraphs. It is wildly rewarding to see a program run from lines of codes that I wrote from scratch. Just another experience to prove that nothing is impossible to learn. It simply takes time and effort. With the sheer amount that we’ve learned, it’s hard to believe we are only 3 weeks in. At the same time, we are 1/3 of the way finished, and have begun to think about ideas for final projects. For me, I naturally wonder about next steps after the camp, and hence raises the existential question of what is my “passion”? The tech world is a distracting place, filled with so many buzzwords and hot trends. I often feel I’m back in that final semester of grad school, surrounded by eager souls filled with angsts. People all seem to be after the job-du-jour, and you are trying to remember what you’d told the school in you application essay what you’d do with this degree. You can feel it in the air among fellow Wagoners. Everyone is slightly on edge trying to figure out how to put this new skill to good use. Unlike in grad school, I am no longer under heavy financial pressure, and for the first time in my life can go after what interests me. Amidst various networking talks, I realize the deep reflection necessary for soul-searching and dot-connecting is crucial in order to truly identify that next project, rather than being swept away by the next-big-thing. And with that, comes my week 3 takeaway: learning a language is good and well, but what do you do with that newfound skill to impact the world, that is the question. Staying grounded is hard, and harder still when people all around are chasing trends. So rather than staying hungry & foolish, I’m finding it increasingly more important to stay humble, and stay true. Originally published at wanderlustwendy. com on March 18, 2018.","['Le Wagon', 'Codingbootcamp', 'Ict4d', 'Women In Tech', 'Meaningful Work']",https://medium.com/@wanderlustwlee/le-wagon-week-3-stay-humble-stay-true-758d27ec0c3a,2,[],0,0,wendy,F,0.9963612040133779,0.0036387959866220738
chibueze ukaegbu,,"LearnFactory Internship: Day 13 (May 16, 2018) – LearnFactory Nigeria – Medium",2018-05-17 06:35:22,medium,"Learn Factory Internship: Day 13 ( May 16, 2018)“ But this I say, He which soweth sparingly shall reap also sparingly; and he which soweth bountifully shall reap also bountifully. ” 2 Cor. 9:6 When code is all… Episode 8 ( A C T L I K E I T) of B E P H E N O M E N A L O R B E F O R G O T T E N, from Eric Thomas, was deep. Average is so average that most people don’t recognize they are acting average. It is only when we realize W E A R E P O W E R F U L B E Y O N D M E A S U R E and start A C T I N G L I K E I T, that we will become phenomenal. Most people put in average performance and expect phenomenal rewards; life only pays for what you put in. Average people don’t respect time (they are not punctual), they don’t do what they say they will do (don’t realize the power of words; that your word is your bond). If I want to blow up, I must be where I said I will be when I said I will be there. I C A N’ T D O B I G T H I N G S I F I C A N’ T E V E N K E E P T O M Y W O R D S. Until you transform your paradigm, you cannot grow: Y O U N E E D T O S T O P A C T I N G A V E R A G E A N D A S K I N G F O R W H A T T H E G U R U S A N D E X P E R T S G E T. Average people want to get paid but don’t want to do the work; average people expect more out of the boss than they expect out of themselves; average people don’t care, they live by their feelings and only do things they feel like doing. Get in the game; and give it everything I’ve got; bring my A-game every-time all-the-time. I’ll wrap up with a quote that shows how he made the transition from average to phenomenal: The way I approach my work was the difference between being a busboy for the rest of my life or me telling the world how being a busboy was a part of this amazing journey that began years ago. B E P H E N O M E N A L B E C A U S E Y O U A R E, A N D A C T L I K E I T. Matthew, with the assistance of Isaac, took them through a review of the assignments and then left them to do some practice and personal reading for the rest of the morning. Later in the afternoon, he continued lessons on if/else, switch and arrays. The interns were made to sit according to their teams, and we observed a growing synergy amongst them. Before the end of day, the mentors interacted for the first time with their teams, and it was good watching them. Slack just caught fire this evening. The guys and gals are engaging their mentors, with some review meetings running well into the night. And yes, the assignments got a little tricker; it inspired a most hilarious conversation. Look at them :) Just negodu :), the last comment had me collapsing in laughter; the boys have toys and the toys are not user friendly, lool. S P O T L I G H T F O R T H E D A Y Our spotlight today is on Rutherford Ejimonu. Cool and dapper An indigene of Aba, Abia State, I am the first son from a family of 3. A 2011 graduate of Computing from the prestigious University of Portsmouth, Portsmouth U K, I am also an Alumnus of General Assembly London Campus F E W D Course and Cc H U B Nigeria Code Camp 2015. I am also a Frontend Web designer/ U X D enthusiast with strong S E O and Digital/ Social Media Marketing skills. Over the years, I have worked variously as a Software tester for a global software testing firm, a Web/ Social Media Manager for a top Nigerian health institution, Digital Marketing Officer for a leading Construction firm and as an I T Officer for a Real Estate Firm among others. A sport fan ( Chelsea and Enyimba F C Supporter which also informs my choice of color blue and green ) and a book collector, you can find me reading a book (spiritual and biographical books), mocking up in Adobe Illustrator, coding websites from scratch using H T M L, C S S, or building with Word Press making them S E O friendly. I am I T I L V3 Foundation in I T Service Management and I S E B- I S T Q B Foundation in Software Testing Certified. I am adaptive, disciplined, ambitious, highly motivated and passionate about the thing I believe in. Awesome, Awesome, Awesome; it can only get better. Today is done and dusted; I’ll see you tomorrow. i C Chief Code Smith","['Life', 'Internships', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-13-may-16-2018-aa3f7ee4c6ef,0,['General Assembly'],1,93,chibueze,M,0.0,1.0
Brooke Ann,,"Hello, Universe – Brooke Ann – Medium",2018-09-04 22:58:43,medium,"Hello, Universe Hello All! This is where I will be posting updates from life as a coding bootcamper & where I will be sharing articles and websites that have proven helpful along my own journey from tech support → software dev :: #codenewbie #codingbootcamp #bloc #womenintech #diversityintech","['Code Newbie', 'Women In Tech', 'Bloc', 'Diversity In Tech', 'Codingbootcamp']",https://medium.com/@tinyinkling1/hello-universe-de027592f545,0,[],0,0,brooke,F,0.9894519521486473,0.010548047851352696
Bona Lee,"An aspiring web-developer, world-traveller, fitness guru, and pineapple enthusiast",%CASE-sensitive% – Bona Lee – Medium,2017-07-23 18:57:12,medium,"% C A S E-sensitive% Imagine this. You are a Junior S Q L developer at a company that mainly deals with online retail. Your company uses a Postgre S Q L database that will hold a lot of information about each of your customers, products, and each customer’s purchase history. Your manager comes by and gives you a list of people they would like for you to find. They want you to find all of the people that have ever purchased an item produced by a specific company made from polystyrene, which can lead to be a potential human carcinogenic. The company wanted to recall a few of their products that fit within this criteria and it is your job to notify those consumers who have gone home with a recalled product as soon as possible. So you attempt to do the following search: S E L E C T * F R O M Orders I N N E R J O I N Products O N Orders. product_id = Products. id W H E R E Products. material L I K E ""polystyrene""; However, it returns no customers because it is looking for “polystyrene” exactly, all lowercase. You must account for all products that have polystyrene anywhere in the list of materials. Sometimes it might be all capitalized, sometimes it will be all lowercase, other times you will have just the first letter be capitalized, “etc. ” In order to account for all of those instances, you write the following line of code: S E L E C T * F R O M Orders I N N E R J O I N Products O N Orders. product_id = Products. id W H E R E Product. material I L I K E ""%polystyrene%"";“ I L I K E” helps look for any products that has polystyrene within the material list while the “%” helps looks for all instances of the word whether each individual letter is capitalized or not. And it quickly returns a list of 375 people who have purchased water bottles and tumblers made from polystyrene. Good job! Now time to go warn them about the recall!","['Postgresql', 'Coding', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@bonalee/case-sensitive-10651ebbe0a9,0,[],0,9,bona,F,0.946236559139785,0.053763440860215055
Rhys Woodberry,Web dev and video game enthusiast | rhyspec.me,First App – The Code Odyssey – Medium,2018-03-04 13:17:47,medium,"First App The second week of bootcamp came and went so quickly! It’s hard to to think that just 2 weeks ago I knew little to nothing about coding. This week, or should I say from Wednesday afternoon until Friday morning, we were tasked with building a terminal app in teams of two. The whole process was a cool experience, from the conception of an idea, to the planning and communication of ideas, and the execution. I won’t lie and say it was a walk in the park, it was far from that in fact! Trying to come up with an idea that wasn’t too simple nor too complicated for the time frame was difficult. It’s easy in these situations to aim very high and end up having to roll back plans because they don’t fit the time frame. This was a small problem for me as well, although not as big as it could have been. My team decided to make a quiz app. We started first by trying to split the problem up into logical parts. What would the program need to do, how would we go about implementing such things, and what will the flow of the program look like? These were all questions we attempted to answer as we planned out the code. We tried to implement modules for our app, but encountered a few hiccups. Our confidence in using modules wasn’t the highest, as we had just learnt about them a few days earlier, and were finding the concept hard to wrap our heads around. We decided it would be best if we just wrote out the code in the most basic way we knew how, and figure out how to format and make it less repetitious later, once we had a working app. This was a good choice because it allowed us to get the app to a point were it would run and we could clearly see the bits of code that would need to be tidied up. We tried to get our code into methods, but found it quite difficult. In the end, we had to present and submit our less than ideal, but 100% working, code. The whole experience, no matter how frustrating at times, was very eye-opening. Firstly, it allowed us to experience what a team development environment would be like (we even used github for our projects), and not only that but it really allowed us more insight into what our strengths and weaknesses are.","['Coding', 'Self Improvement', 'Codingbootcamp']",https://medium.com/the-code-odyssey/first-app-128d958fd392,0,[],0,40,rhys,M,0.06022150438394093,0.9397784956160591
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 36 — Move B…. – conshus – Medium,2017-05-01 11:44:23,medium,"Day 36 — Move B…. liner notes: What a weekend. Let’s start on Friday. We got our weekend assignment, build a photo gallery in React J S and implement Routing which we just learned. Got it. Created my starter app with React J S (which is S U P E R simple), formatted my layout using Materialize C S S and got my hardcoded photos to work. Great. I was even thinking I could incorporate authentication since I wanted to use Firebase anyways. There would even be time during the weekend to implement some of the services Cloudinary offers. That’s what I thought……haha Before leaving to start my weekend, I decided to start working on the router, cause it be something real quick , right? Nope. For some reason, when I would route to another state, it would lose the material box (light box) and modal box functionalities. I thought that maybe I missed something and would be a simple fix in the morning before the radio show. Wrong again. haha Saturday morning…. I searched everywhere for an answer. The problem was that I wasn’t getting an error in the Console so I didn’t have anything specific I could search for. Then apparently, the router we are using is pretty new so a lot of the things I would find would refer to the older versions. Since it was the Materialize C S S components that also used j Query that weren’t working properly, I npm installed j Query. . Nope. Maybe it was something behind the scenes between Materialize C S S and React J S. I installed a Materialize C S S x React J S from Git Hub… Nada Then it was time for the radio show. You can listen to it here: k N Ow B E T T E R H I P H O P. com ( I created it with Angular, by the way) So after taking a break to do my show, I got back right into coding. I determined that it wasn’t j Query, React J S or Materialize C S S…it had to be something with the React J S router. Long story, longer at 5am Sunday morning I got it to work. For some reason, when the router goes to another route, it wasn’t initializing Materialize C S S so that it would work properly. Note to future self if this happens again, < Router force Refresh={true}/> Finally got it figured out, so it’s all cake from here on out. Strike 3. Apparently, I’m not exactly sure, but it looks like the force Refresh interferes with the state, because I couldn’t get the code to function the way it was before. It seems like everything I tried, React J S would just in the way with some random error… All of Sunday, this song kept running through my mind: Considering this is only the 2 second project I’ve ever done in React J S, it’s not so bad. A bunch of us did meet up at Starbucks worked on assignment. That helped. In conclusion, I was able to get most of it working again, but what’s even more important is that I have specific questions, I can ask Brian (the Instructor). We’re starting week 8. Looks like we’ll be learning Firebase (which I’m a big fan of) and Redux. Got some reading to do to prepare. Have a great day. peace piece Dwane / conshus H I P H O Pand C O D E. com <- React J S remake coming soon. hopefully","['JavaScript', 'Reactjs', 'Code', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-36-move-b-34a4a53ca756,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Kalen Hammann,,"A New Beginning, Part 9 – Kalen Hammann – Medium",2017-07-24 15:04:41,medium,"A New Beginning, Part 9 W E E K F O U R: I T N E V E R G E T S O L D I continued to love the experience of making a small change in my code, then refreshing the page of my app and watching a change in what I saw there appear as if by magic. Creating a map for a new page on my app that at first was a map of Australia and then — Abracadabra! — it morphed to show where the place actually belonged! E R R O R M E S S A G E S A R E M Y F R I E N D Something else that was helping had come out of my first session with my mentor. When I got an error message, I no longer had an automatic “ Oh Sh*t” reaction. Instead I looked to see what the message said, and learned that not only did it tell me which line of my code was probably causing the problem, but even gave a hint about what the problem was. “ No Method Error” meant it couldn’t F I N D any method defined for what I was asking it to do. “ Undefined variable” meant it couldn’t find any place I had told it what that variable meant. And so on. M E L T D O W N! The lessons leading me through creating my Nomster app were humming along. Watching each new change appear on my screen continued to give me a little zot of pleasure each time. But then came lesson 39, where I was given the challenge of adding a whole new functionality — the ability for users to upload photos — with only a few hints about how to go about it. At first everything went smoothly as I adaped the steps I had used to enable users to add comments to their description of places. But then I got to a point where something flat out didn’t work, and I couldn’t figure out why. In parallel, I had begun working on the second big challenge, Blur2. To prepare to solve Blur2, I was instructed to solve a bunch of simpler coding challenges at a site called codewars. When I began looking at those challenges — at the end of a long day of working on Nomster — I couldn’t solve A N Y of them! I scarcely understood what they were even asking for. This was not good, because I only had two days before my next meeting with my mentor, and I wanted to be able to show some real progress on Blur2 by then. I realized I had probably “used up” my creative ability for one day and decided to do something simpler: to read the documentation for Google Chrome’s developer tools so I could figure out why my navbar code was being over-ridden. At least I’d be able to go to my mentor with S O M E T H I N G I had accomplished. It turned out that was a mistake. The documentation for the developer tools was enormously complicated. The more I read about what the tools enable web developers to do, the more hopeless I became that I would ever get to the point where I would even U N D E R S T A N D all that stuff much less be looking for tools that would help me D O it. And I couldn’t solve the simplest problems at codewars. Maybe this whole idea of becoming a software engineer was a mistake. Maybe this was simply something I couldn’t do. Maybe I just wasn’t cut out for this! I was used to being able to learn to do anything I set my mind to. But this felt different. Looking at those codewars challenges, I had N O I D E A what to do. I started to panic — a new experience for me. What if I coldn’t get through this? What if all the time and money I was puttting into this ended up with no job as a software engineer? What if I had to give up? What would my wife think? How would I feel about myself? I had just enough perspective left to realize I was simply feeling overwhelmed at the end of a long day, so my feelings were N O T a good guide to action. Not even a good indiction of the real situation. I shouldn’t quit, or even go on thinking about whether to quit. All my feelings of hopelessness and dismay meant was that it was time to take a break! So I stopped for the evening and watched an old V H S of Lawrence of Arabia. :-) W E L L, W H A T H A V E I L E A R N E D? The next day I went back to codewars and solved one challenge right away. Whew! Maybe I C O U L D do this. With the second, I saw what I would need to know to solve it and I recalled that I had learned it during the Firehose pre-work. But I couldn’t remember how it worked at all. I could see that while I had gone through the steps the Firehose folks led me through, I hadn’t really L E A R N E D the things I would need in such a way that I could call on them when I needed them. So I went back and began reviewing what I had learned, creating my own “cheat sheets” of code I’d be likely to need later. This felt really good — like now I was building a solid foundation. ( More to come… click here!)","['Programming', 'Web Development', 'Careers', 'Startup Lessons', 'Codingbootcamp']",https://medium.com/@kalen7/a-surprising-career-change-part-8-752d85fe9541,0,[],0,0,kalen,M,0.2631194002559883,0.7368805997440117
Harrison Spain,I am a software development educator and entrepreneur. My current mission is to train and mentor the next generation of software developers.,The case for hiring junior developers – Redwood Code Academy – Medium,2018-08-24 00:23:49,medium,"The case for hiring junior developers Where is all the talent? Hiring managers understand the current struggle to find competent, professional, and passionate developers. It often takes dozens if not hundreds of interviews before finding that right fit. The talent pool shortage is real, and growing teams are feeling it. Why not expand that pool significantly by opening your doors (and your A T S) to those who are just entering the industry? Recently trained software developers are some of the best hires a business can make if they are looking to create amazing, modern products and services. This often overlooked goldmine of a demographic can add immediate value and impact to a software team. Why Junior Devs? There can be difficulty in convincing some businesses to hire junior developers. The alumni at coding bootcamps such as Redwood Code Academy have had marked success in launching their new careers, but there is room for more companies to open their minds to the possibilities. First of all, junior developers can do the job. Not every newly trained dev is created equal, but overall, the bar is very high for schools like ours and the graduated alumni are some of the most competent developers you will meet. I have seen folks with 12 weeks of experience able to code circles around seasoned and highly respected senior developers. Once that is accepted, it really comes down to what you want your company culture to look like. This is the #1 reason why new developers will be the best hire you can make. These traits are something every company will be looking for in their software team, and junior devs have them in spades: Passion Latest Skills Commitment Good Habits — Your Habits And by the way, you can get employees with these traits for a fraction of what a senior developer will cost. Passion Some of the most passionate developers I have worked with had less than 1 year of professional experience. The typical burnout of seasoned devs was nowhere to be found and every new project, commit, and code review was something to be savored and enjoyed, rather than dreaded. Bring a fresh brain and bright eyes into your team. Inject a new life into your projects both technically and emotionally. Your team will thank you for it. Latest Skills In the software world, what is in vogue in tools, technologies, languages, frameworks, etc. changes so often, keeping a team up to date can be a real hurdle to success. New developers bring those skills to your team. Often, I have seen junior devs teaching the seasoned devs on their new teams how to use the latest and greatest. It is the biggest advantage that junior developers have. They don’t need to know how things were done 10 years ago to be a fantastically productive developer today. Commitment You want developers with drive on your team. Someone who needs and wants the team to be successful just as much as you do. New developers are “unproven” and are dying to prove themselves. Software development can be a work of long nights, interrupted weekends, cancelled plans and working lunches. Junior devs don’t mind! They are just looking to work as much as possible and provide the business with as much product as possible. Good Habits — Your Habits Businesses can mold new developers to doing things the way you want them to be done. Code styles, tool preferences, process decisions. All of these things can be major points of contention and flat out conflict among senior developers. Junior developers don’t have that issue. They will do things the way that you want for the above reasons and also because they have not yet had time for the “clay to set”. It’s easier to teach someone new habits than to change old ones. Invest Hiring newly trained developers is an investment guaranteed to increase in value. The investment comes in time to help train in company practices, advanced techniques, and any experience gaps that may need to be filled. That time pays off in multiples, however. I have first hand knowledge of the power of investing in these new developers at previous companies I had been the hiring manager and had nothing but success. Each of the junior developers I have hired or helped to place has become a go-to developer at their respective businesses. Had we or those businesses passed them over for more senior (more expensive) developers, we would have missed out on an amazing resource at an amazing value.","['Codingbootcamp', 'Programming', 'Junior Developer', 'Hiring', 'Software Development']",https://medium.com/redwood-code-academy/the-case-for-hiring-junior-developers-a2125e9777d9,1,['Redwood Code Academy'],1,50,harrison,M,0.003321272344332235,0.9966787276556678
Kelvin Mbugua,,Unfamiliar Territories – Kelvin Mbugua – Medium,2017-07-18 07:13:33,medium,"Unfamiliar Territories Courtesy of glee. wikia. com‘ World- Class’ the term that racked my mind when i was applying for Andela. I’ve been to many make-shift organizations invoking the term, but this one felt different. Rigorous were the assessments, could break a heathen god’s spirit. Now it did not feel different, I knew there was a pot of gold at the end of the rainbow. After hard-work and tireless learning of new and unfamiliar terminologies, i made the cut. The boot-camp. Every programmers play ground to write insane code to bring sanity to the world of the unaware consumer. Day one, started chilly and i felt hype. Had a video chat with our facilitator Angela, very calm and welcoming. She gave us an introduction of what is expected of us. Some of my fellow cohorts had trouble setting up video chat. That’s when it dawned on me, it was time to wipe the grin off my face and acquint myself with the said platforms. Had to create accounts for blogs and other chat platforms. Some strange and others friendly. When I least expected it adrenaline kicked it and confusion took me captive. Undeterred i decided to seek some help from our facilitator. Amazingly i got it, unfortunately, my delocalized sense of concentration was no longer delocalized, it was M I A. Blankly staring at the screen i started typing. I had no clue that i was now in the zone. Felt good to zoom out of my surroundings and get wired. Debugging my js and styling my html. Anytime i got stack i asked my team mates and whoever had a solution would promptly put it up. It was like a harmonious barley of oiled cogs. Though not all would keep up due to the deadline, we made it at the end of the day, sweating of course. Day two, here we are feeling confident to handle the day’s task. I’ll let you know how it goes. ~ Kelvin M. ~","['Andela', 'Coding', 'Codingbootcamp', 'Programming', 'Funny']",https://medium.com/@kevtech08/unfamiliar-territories-b79a3a8ba06a,0,[],0,0,kelvin,M,0.006099028970387609,0.9939009710296124
Sharon Kaur,Medical Technology/Coding/Software Programming/SchoolofCodeBootcamp. Multilingual. Dancer & Choreographer.,Let the School of Code Bootcamping commence…. – Sharon Kaur – Medium,2017-09-03 21:47:50,medium,"Let the School of Code Bootcamping commence…. Hi everyone I’m Sharondeep: I’m a recent graduate & postgraduate medical engineer. After completing my P G C E S teaching course in Science & working in S T E M education for a few years, I decided that working in technology was the way forward for me. I’m hoping to work in the medical technology & artificial intelligence field: maybe I could start my own global business, who knows? I think that the School of Code Bootcamp will help me to achieve my future career goals, whilst also showing me how exciting coding can be! My hobbies/interests include dancing, choreographing, learning languages & jet-boating! Wish me luck…. Here goes!","['Codingbootcamp', 'Technology', 'STEM']",https://medium.com/@ssht3jsbkk/let-the-school-of-code-bootcamping-commence-eece3e2ba151,1,[],0,50,sharon,F,0.9957212460835599,0.004278753916440076
SwitchUp,"Discover the best learning path to your dream tech career. Course reviews, recommended career tracks, job search advice, and more at http://switchup.org.",Ruby vs Javascript: What Should I Learn? – SwitchUp – Medium,2018-08-07 07:29:45,medium,"Ruby vs Javascript: What Should I Learn? Ruby & Javascript are top programming languages. This preview of our guide is here to help you get started. Ruby vs Javascript: The Basics Ruby and Javascript are both object oriented programming languages that appeared on the tech scene in the mid-1990s. Ruby and Javascript are similar in that they are scripting languages that are also dynamic and general purpose. Essentially, it is easy to change and edit the code in both Ruby and Javascript. They are extremely responsive and easy to translate across a multitude of sources and platforms. Ruby vs Javascript: Which is easier to learn? When talking about Ruby vs Javascript specifically, Ruby is considered the easier programming language to learn and use. These reasons include: Simple syntax: Ruby is easier to read and understand. A great way to get started: Ruby is a solid way learn how to code because of its simplicity. Ruby is fun: It was developed for people to enjoy coding while they create functional materials. The argument for Javascript: Employment: Most jobs and companies would like you to have at least a basic understanding of the Javascript framework. Responsiveness: Javascript provides you with the ability to see what you’ve created immediately. If you are on a web page, you can use Javascript to see what you are building as you build it. Popularity: Javascript is use everywhere. According to Stack Overflow’s Annual Survey of 2018, “for the sixth year in a row, Java Script is the most commonly used programming language. ” Why attend a Java Script Bootcamp? Java Script acts as the foundation for much of web development. It allows programmers and developers to alter various parts of web pages without compromising the entire site. It is also used for the backend of apps and games. Why attend a Ruby Bootcamp? Because Ruby is a minimalist language, it will be possible to start using coding in a short period of time. This learning model aligns well with coding bootcamps, where Ruby programmers will be able to quickly develop responsive code. Plus, it can help you land a job at a major tech company. Companies that use Ruby include Hulu, Twitter, Zen Desk, Shopify, and Git Hub. Best Bootcamps to Learn Ruby and Javascript Our bootcamp ratings are based on verified alumni reviews. We’ve compiled a short list of the most highly-rated bootcamps to learn Ruby and the best bootcamps to learn Javascript below. Top Ruby programs: Flatiron School Rating on Switch Up: 4. 89 stars Ruby classes offered: Coding Bootcamp Prep, Software Engineering Immersive Location(s): N Y C, Houston, Online, Washington D C, London Wyncode Rating on Switch Up: 4. 97 stars Ruby classes offered: Full Stack Web Development Location(s): Miami Altcademy Rating on Switch Up: 4. 86 stars Ruby classes offered: Back-end Web Development Nano Major Location(s): Online Top Javascript programs: Le Wagon Rating on Switch Up: 4. 99 stars Javascript classes offered: Full Stack Program Location(s): Paris, Sydney, Melbourne, Casablanca, Buenos Aires, Brussels, Milan, Chengdu, Mexico City, Amsterdam, São Paulo, Barcelona, Bordeaux, Copenhagen, Lille, Lisbon, London, Bali, Nantes, Rio de Janeiro , Marseille, Montreal, Shanghai, Belo Horizonte, Berlin, Tokyo, Lyon, Tel Aviv, Kyoto Ironhack Rating on Switch Up: 4. 91 stars Javascript classes offered: Full-time Web Development Bootcamp Location(s): Berlin, Mexico City, Amsterdam, São Paulo, Paris, Miami, Madrid, Barcelona App Academy Rating on Switch Up: 4. 76 stars Javascript classes offered: Bootcamp Prep, Full Stack Web Development Location(s): San Francisco, N Y C, Online Have you decided which programming language you would like to start learning? If you still need to compare programs, check out our full article here: Ruby vs Javascript: What Should I Study?","['Coding', 'Codingbootcamp', 'Ruby', 'JavaScript', 'Javascript Tips']",https://medium.com/@switchup/ruby-vs-javascript-what-should-i-learn-7dd69e81b302,1,"['Flatiron School', 'Wyncode', 'Ironhack', 'App Academy']",4,0,switchup,Unknown,Unknown,Unknown
Edilson Hernandez,Currently an Iron Yard student in DC.,The End of The Iron Yard… – Edilson Hernandez – Medium,2017-07-25 12:27:50,medium,"The End of The Iron Yard… It is sad to say, even after a few days that it was announced, The Iron Yard will be closing it’s doors at the end of this cohort(in October to be a bit more precise). As many of you may know, it was a decision made by the board members. The staff at my campus didn’t have much more detail about the closure other than the aforementioned. When it was announced, I felt rather upset. The Iron Yard provided me with so much within these short 4 weeks so far, and I believe they should continue providing for future students. Unfortunately, everything is said and done. On a lighter note, the instructors and staff say there is a silver lining for us. They will be dedicated 110% for us since they have no other obligations for any future cohorts. As for me, I will continue working extremely hard towards the completion of this cohort. Life is full unexpected surprises and life goes on. This is just one of those instances. Even though The Iron Yard will be closing, at least I can say I was part of the last class, and I am proud of that! :)","['Coding', 'The Iron Yard', 'Closing', 'Washington DC', 'Codingbootcamp']",https://medium.com/@edilson.hernandez1/the-end-of-the-iron-yard-4eae8c4640e6,0,['The Iron Yard'],1,1,edilson,M,0.0,1.0
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 20 — (EvalExpr) – Mike Brave – Medium,2018-09-09 02:22:45,medium,"42 Piscine Day 20 — ( Eval Expr) Edit: This is part of a series that culminated here, Next post. Previous post. Today seemed to have a palpable lull to it. Everyone and their grandma (really someone is taking it with their grandma, it’s sweet) was procrastinating more than usual, showed up later than normal or decided to take it easier today. Nobody really discussed that happening, but the mood sort of struck everyone all at once. I had wrongly assumed that most people didn’t really want to work on the group project, well my group does, so I have something to work on at least. There is the personal project of Eval Expr as well, which is mostly to build a calculator, well a more complex calculator. I’ve not gotten much done today at all, a bit of studying, a bit of figuring on how to solve the group project, a few hours watching youtube tutorials while I simultaneously looked at paintings on pinterest. Then again while I browsed books on amazon. Due to people chilling out and/or quitting our peak students in the lab today was around 57, a big contrast to the usual 85–90. When I came in at 8 am there were 4 compared to the usual 13. A lot of us are talking about going into town to watch a movie, it will be a nice break, nice to do things like normal people instead of just solid work in front of a screen as we have been. I’ve had a few people approach me about my blogging today, some to complain to a sympathetic ear, others just to discuss my thoughts on how the program works. Others to pass along sympathy for my failure yesterday, others still to laugh about how they relate to what I wrote. It was an interesting position to be in as my main point of doing the blogging was to provide a gist of what the piscine is like, as I struggled to find much info on it before coming, you know marking the trail for those who follow. I guess some of my old boy scout attitudes never truly go away. “leave things better than you found them, ” and equally the entrepreneurial mindset “if something doesn’t exist that you wished existed, create it”. So here we are. Ironically it’s ended up being similar to a small town paper, people reading to see if they were mentioned, reading to relate to the sentiment, to feel less alone. It’s been a pleasure to be here, a pleasure to learn, to grow and to write as I have. The final is on Friday, it is also the last day, there are only 6 days left, the home stretch. I wish us all luck and that we find the outcome we deserve and hoped for. I may not get in this time, and if I don’t I would understand due to the mistakes I’ve made, no hard feelings on my end, but I’ll be damned if I don’t go down fighting, studying my ass off until the very last day, what other option is there, to quit? unacceptable, it would be acceptable if I didn’t actually want this, if I somehow discovered that I don’t love making things with code, but that’s not what it is, I’ve just been slower on the uptake than I’m comfortable admitting, I still very much want to be here. Until tomorrow.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-20-evalexpr-73a3b37f8377,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Jacob Moore,,Day One — First Review – Jacob Moore – Medium,2017-07-17 16:49:44,medium,"Day One — First Review So far the most we have really done is review the weekend assignment that we did prior to the beginning of class. Oddly this has been helpful as I struggled a bit with using Terminal, Shell, and Git. At this point during the break I understand Git, even though Git Hub Desktop is available, and can probably actively use Git within Terminal. Terminal I mostly understand and will likely struggle a bit through this as I start to learn the command codes. Shell…whatever. I know the basics to some degree so I know I’ll get there at some point soon-ish. We’ll see how long it takes to pick up the new stuff. And on that note…individual assignments are looming over the horizon.","['Git', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-one-first-review-5beea78adeba,1,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Rohan Jadvani,,Building a Nice Dev Environment – Rohan Jadvani – Medium,2017-07-31 14:33:34,medium,"Building a Nice Dev Environment My current setup. Before I start, a disclaimer: I’m by no means an expert at a lot of the technologies included in this post. In fact, I’m probably still in the same boat as a lot of beginners. But, as someone who has coded a decent amount over the past few years in college courses and in internships, I’ve learned how helpful having a nice setup can be. I believe that dotfiles are the most important files on a machine for a developer — they allow you to customize preferences to your liking, give you a chance to share and learn, and make you a more productive coder. So for those of you still reading, let’s go! Getting Started I’m going to assume you have a Mac. If you don’t, I strongly recommend using one for development. O S X, I believe, is one of the strongest operating systems out there — it offers better cross-platform compatibility with other operating systems and bridges the gap pretty well between commercial software and Unix functionality. Part 1: Xcode When using a Mac, you need to set up a bunch of command line tools. You can do this easily by running the following in your terminal:$ xcode-select --install Part 2: Homebrew Homebrew is a package manager for O S X. This tool allows you to easily install packages that aren’t available in the default Apple configuration. You can find instructions and more here. Part 3: Git Git is a version control system ( V C S) that allows you to properly maintain file changes and coordinate work with other people. Most tech companies I know use Git, and it’s essential to know when working with large amounts of code. While the system itself is pretty dense, knowing the basics (around 10ish commands) is usually enough to get you by. This is one of my favorite interactive tutorials if you want to get started. Part 4: i Term2i Term2 is a terminal emulator for O S X. It’s pretty great and offers a lot more useful features than the built-in terminal. You can install it with Homebrew or from here. Vim Vim is a text editor, and it’s awesome. I know there’s a large community of people out there who are used to other editors such as Sublime Text, Atom, and Notepad++ (some even go as far as Emacs!), but I remain a fan of Vim. Not only is Vim super efficient and powerful, but it’s also quite ubiquitous — the editor is available on many platforms as well as ssh terminal sessions. I pretty much use Vim for coding everything — low-level C code, assembly, Verilog, and web development. Here are some tips: Learn how to take advantage of the different modes and keyboard shortcuts. If you want to learn how, this is a great tutorial. You can also simply type vimtutor in a shell. Start maintaining a . vimrc, or a configuration file for your preferences. This part is mostly Googling and looking at other people’s configurations to figure out what you like. You can play with tab settings, make custom shortcuts, mess around with your cursor, and more! Use a plugin manager. I personally use Vundle. Find plugins you like. This website offers a great selection that is both categorized and ranked in popularity. Some of my favorite ones include: N E R D Tree, vim-airline, and syntastic. Change the default colors. This step is probably optional, but I really don’t like the original configuration. I recommend Solarized if you like the screenshot above. Zsh I made the switch over to zsh a few years ago. For those of you who don’t know, zsh is a Unix shell that includes some features of Bash with some changes. So why use it? Here are my top reasons: Better Completionzsh has tab-based completion for basically everything (files, ssh hosts, git commands, and more). When you are in the middle of typing something and click < T A B>, zsh will display suggestions conveniently and cleanly below the current line in your shell without taking up additional screen space. What this means is if you change your mind about what you want to tab-complete, zsh will simply replace the text below the current line, while Bash prints additional shell prompts. Screenshot of syntax highlighting and completion in zsh. Highlighting I used to make a lot more typos in my shell commands when I used Bash. zsh conveniently adds highlighting for commands, files, environment variables, and more. Loadable Moduleszsh makes it super easy to add functionality to your shell. It’s like importing a library you want to use when coding. How to Switch First, run this in your shell to change your current shell to zsh. $ chsh -s $(which zsh) Next, start building a . zshrc. Like the . vimrc, you will need to do some research to find what preferences you want in your shell. I would recommend getting started with oh-my-zsh and zsh-syntax-highlighting. After you do this, you should look online for additional functionality. tmux Splitting panes in tmux. tmux is a terminal multiplexer which allows you to switch effortlessly between programs in your terminal, detach them to the background, and then re-attach them into a different terminal. Basically, it’s amazing. Installation You can easily install tmux with Homebrew by running:$ brew install tmux Commands There are a lot of keyboard shortcuts for tmux. I’ve found this cheatsheet to be really helpful. Customization Just like Vim and zsh, I find it super useful to customize my tmux setup. Here are some quick tips when building your . tmux. conf file: The default prefix is C-b, or < C T R L>, b. My index finger actually started to get annoyed with this configuration, so I would recommend switching b for something else. I use f. The default splitting keys are % for vertical and "" for horizontal. These keys aren’t really intuitive, so I’d recommend changing them. I use — for a horizontal split and \ (this is the same key as |) for a vertical split. Give tmuxinator a try. My mentor at my last internship recommended it to me, and it’s super useful in managing sessions. sshssh stands for Secure Shell, which is a set of network protocols most commonly used for remote login to other computers. When I was a student or working, I was using ssh multiple times on a daily basis for remote connections. I quickly learned that typing the commands out can get annoying. Let’s suppose we have a server called unix. jadvani. com, and I want to connect using the user rohan. The way to traditionally do this would be$ ssh rohan@unix. jadvani. compassword: ******* One common way to get around this is to set an alias:$ alias unix='ssh rohan@unix. jadvani. com'$ unix # connects to server I used to set aliases a lot because all that needed to be done was to add the alias lines into a . bashrc or . zshrc. With more hosts and different configurations, this can get annoying quickly. There’s a much cleaner solution to all of this that will keep everything more organized. All you need to do is maintain an ssh config file, located at ~/. ssh/config. In order to add the previous host, add the following lines:# ~/. ssh/config Host unix  Hostname  unix. jadvani. com  User    rohan You can add as many hosts as you’d like into this file, and all you need to do to connect is$ ssh unix Configuration Maintenance I believe it’s incredibly important to take care of your dot files. This means keeping good style, organized file structure, and including documentation. The Golden Rule You should never write a line in your configuration files that you don’t understand. It might require additional online research, documenting every single line in a . vimrc, and take more time than you’d like, but believe me, it’s worth. Not only do you become more knowledgable about your setup, you are more confident when guiding others and gain a deeper understanding of how everything works. Version Control One thing that I’ve found to be really useful is maintaining a Git repository with my dot files. From hopping around computer clusters in college to using different machines at internships, I always found it really annoying to re-create my set up. The easiest way to do this is to create a folder for a repository in your home directory (mine is ~/. dotfiles). Next, I would strongly recommend using R C M. Instead of having a folder and copying your . *rc files from your home directory after each update, this suite creates symlinks. Conclusion Hopefully you’ve found this tutorial helpful. The tools mentioned here are just the tip of the iceberg, but I think these are some of the essentials in getting started. I’ll leave the rest to you!","['Programming', 'Technology', 'Coding', 'Codingbootcamp', 'Development']",https://medium.com/@rjvani/building-a-nice-dev-environment-bf8949019407,3,[],0,1,rohan,M,0.002172788411795137,0.9978272115882049
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 20 — Own Light – conshus – Medium,2017-04-07 11:24:17,medium,"Day 20 — Own Lightliner notes:“ You ain’t got to get me lit, I got my own light” If you only have time to either read this or watch the new Brother Ali, press play! Instead of writing a post and the finding a song to accompany it, I’m reversing it. Brother Ali (the first guest on the first episode of my radio show) pretty much embodies my ideals of H I P H O P and C O D E. (nice plug, right? haha) Regardless of who you are, what you look like or your background, if you put in the dedication and work, you can be successful. Discussing weekend plans. 6:35am Good morning. Just a quick post so I can get back to the weekend homework assignment. There’s also another networking event later today that I want to attend. Also, going to meet up with Brian, the instructor, later to discuss things I can do to improve my code. Other than that, going to finish up working on the radio show tomorrow. You can check out more on that at http://k N Ow B E T T E R H I P H O P. com Have a great weekend!peace piece Dwane / conshushttp:// H I P H O Pand C O D E. com","['Music', 'Brother Ali', 'Hip Hop', 'Coding', 'Codingbootcamp']",https://medium.com/@conshus/day-20-own-light-b2d34bbf34f9,1,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Blake Schlin,,my first T.I.L – Blake Schlin – Medium,2018-03-04 19:31:31,medium,"my first T. I. L At first I didn’t get why I needed to be a good writer or blogger to be a good coder. That sentence didn’t even make sense. After some time, I realized that I had it all wrong, I didn’t need to be a good writer, just a good thinker. I realized that to better articulate my thoughts when it came to problem solving some code, putting my thoughts into words was absolutely necessary. In turn, employers could see that I was actively thinking about what I was doing rather than a basic plug and play approach. Creating T I Ls( acronym for “ Today I Learned”) was my way of articulating my programming thoughts to myself as well as to the public. Blogging isn’t just for self consumed narcissists, but rather for intelligent thinkers to express new ideas, provide alternative ways to think about somethings, or just help others who are stuck. So today I will post a simple T I L on how to use Git to create repositories from directories and move them to Github. Git repositories are great tools to easily maintain and organize code as well as collaborate with your peers on coding projects. Before you start, make sure to have your terminal open and you’re in the folder that you want to create the repository in… Here I have my terminal open I navigated to the folder that my Git repository will be created in. Ready to accept Git commands!(inside the folder/file you want to create a repository)git init 2. steps to commit changes to repository( After making changes to a file)git add — allgit commit -m “message about change”3. steps to push repository to Github(because it is stored locally on your computer)git remote add origin “file U R L”git push -u origin master","['Git', 'Today I Learned', 'Programming', 'Coding', 'Codingbootcamp']",https://medium.com/@blakeschlin/my-first-til-935e6104b939,0,[],0,20,blake,M,0.05138465760944147,0.9486153423905586
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Interview: GitHub’s Danielle Leong on Consensual Software,2018-08-27 14:40:43,medium,"Interview: Git Hub’s Danielle Leong on Consensual Software Source: Pixabay Danielle Leong, Engineering Manager of Community & Safety at Git Hub, recently spoke at Hack Reactor’s Telegraph Track speaker series. Her presentation focused on consensual software and building consent into tech as a part of the product workflow. H/ R: What brought you to learn coding in a coding bootcamp? Danielle: I started in marketing prior to teaching myself how to be a front-end engineer. I was working at Twilio, where I was for three and a half years. Being a self taught engineer, I felt I needed to catch up with everyone. I didn’t have the same vocabulary and vernacular as those with a C S degree. I felt my education needed a little bit more. After I left Twilio, I joined Coding Dojo for a month-long accelerated program. I built Feerless while I was there. Feerless is a crowdsourced app that provides crowd-sourced content warnings for people with P T S D while watching Netflix. H/ R: What did you choose to do after bootcamp? What are you doing now? Danielle: After that, I maintained Feerless. I saw a job posting for Git Hub for the Community & Safety team. I applied and got the job after interviewing at other places. I’m the engineering manager for the same team. As a manager, it’s my job to make sure engineers on my team are happy and challenged in different ways, technically and interpersonally. I make sure there are process in place to support them. As an engineer, one’s day to day is you get a ticket or you get a feature, you fix that, you test it, you deploy it, you repeat. The last thing you want to do is sit in meetings you don’t need to be in or be involved in discussions about hiring or performance and processes. It’s my job to make sure my engineers can focus on what they do best. I handle the people and process problems and work with product managers and product designers to make sure everything runs smoothly on the team. To see Danielle’s advice for underrepresented folks in tech, check out our original post. Interested in starting on the same path? It all began at Hack Reactor. Learn more about Hack Reactor’s full-time and part-time programs in San Francisco, Austin, New York City and Los Angeles. Online programs also available. Originally published at www. hackreactor. com.","['Coding', 'Codingbootcamp', 'Consensual Software', 'Hack Reactor', 'Github']",https://medium.com/@hackreactor/interview-githubs-danielle-leong-on-consensual-software-62e72f3c3ee8,2,"['Hack Reactor', 'Coding Dojo']",2,1,hack,Unknown,Unknown,Unknown
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Structure and Flow – Emily Deans – Medium,2017-08-01 00:09:17,medium,"Structure and Flow We were back at it first thing this morning with another heavy lecture day to kickstart our second week into back-end (!). Unlike last week’s right-off-the-bat code/language/program intensive intro (see image below for a listing of just a few of last week’s concepts) , today’s discussion was more focused on some theories and approaches to developing and organizing your programs. A few of last week’s new topics We started the lesson with a bit of review from last week, and then jumped straight into a conversation on M V C. For the uninitiated — aka, me about 12 hours ago — the M V C ( Model View Controller) can be thought of as a sort of architectural/structural approach to building your programs. The ‘ M’ (i. e. , ‘ Model’) represents the database, and contains the majority of a program’s stored data. It handles most of the interactions pertaining to your data and communicates only with the ‘ Controller’ (‘ C’). The Controller, in turn, processes all of the C R U D requests (‘ Create’, ‘ Read’, ‘ Update’, ‘ Delete’) and handles all server-side logic. It acts as a sort of “middle-man” that takes information from the user, interprets that information in order to make appropriate requests of the database ( Model), and then processes the response from the database and uses that to communicate to the browser (i. e. , ‘ View’) on how it should display the content. The ‘ V’ (‘ View’) listens only to the Controller, and is the only component of this triad the user ever sees. Many back-end language frameworks — including ‘ Rails’ (for Ruby), ‘ Django’ (for Python), and Cake ( P H P) — use M V C, and it’s an extremely useful approach for structuring your files to improve the organizational flow of your programs. After doing a few exercises, which mostly involved us reworking our code from previous submissions to follow M V C principles, we moved into a discussion on running code tests for all our programs. While there are many approaches to testing your code, we focused today on the concept of ‘ Test Driven Development’ ( T D D). One of the foundational principles of T D D is that you write your tests B E F O R E you write your software. We went through a few programs together as a class to practice creating code tests using the ‘ Jest’ npm, which contains a comprehensive library to assist you in running your own customized program tests. Tomorrow, we’re gonna be testing it up even more (!) and also working with Mongo D B for our first taste of working in a real database program. Can’t wait! Song of the Day: “ North Side Gal” by J D Mc Pherson","['Mvc', 'Dctech', 'Women Who Code', 'Code Newbie', 'Codingbootcamp']",https://medium.com/@emilyldeans/structure-and-flow-81f8942e8263,1,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Jeremiah Diboll,Developer in training at The Iron Yard in Tampa/St. Petersburg.,Day 6 – Jeremiah Diboll – Medium,2017-07-05 00:49:42,medium,"Day 6 Well, day 6 was actually this past Monday. More C S S. C S S is one of those things that I don’t enjoy. I get the concept, it’s just so much! There are too many options and I’m always searching for just the right thing to make my H T M L do what I want it to. It’s infuriating! At the same time, I get so engrossed that I lose track of time. I get excited when I finally get that one little element to move over a smidge and line up like I want it to. It’s the language of small victories. After a day of coding C S S, I feel like front-end just isn’t going to be for me. But we shall see.","['The Iron Yard', 'CSS', 'HTML', 'Coding', 'Codingbootcamp']",https://medium.com/@jdiboll_83817/day-6-2ca74a2f99e9,0,['The Iron Yard'],1,0,jeremiah,M,0.0034060765242323247,0.9965939234757677
stephen hutchens,Architect. Engineer. Entrepreneur. Mentor.,Musings For The Aspiring Developer – stephen hutchens – Medium,2017-07-17 02:30:22,medium,"Musings For The Aspiring Developer Over the past four years I’ve had the pleasure and opportunity to mentor numerous people who wanted to code. I have helped people go from knowing absolutely nothing about programming languages, environments, and tools to being competent entry-level developers who are considered rockstars in the eyes of their employer. Getting into the tech industry can be a daunting task without a guide helping you to navigate all the complicated jargon and information overload. That is why I consider myself a coding bootcamp evangelist. I wanted to share the most common questions I have been asked when mentoring and advising people who want to transition into the rewarding field of software. Hopefully, this can demystify a few things for newcomers. Which programming language should I choose? First of all, you cannot go wrong learning any programming language. They will all expand the way you presently think. But the more important question here is definitely what type of product you want to help create. It’s important to know that each programming language was designed to address specific issues. So each comes with its own strengths and weaknesses. You will certainly get a lot of value from learning Java Script due to it’s dominance in web applications. You can work with J S in a very broad capacity. Everything from client-side animations to real-time chat applications with Node J S. I personally picked Java Script because intuition told me that my job prospects would be much higher. The reason behind this thought was that you could contribute to any type of web application. Regardless if the team was working with C# or Java, the front-end uses the same programming language ( Java Script). Python is also a strong choice for many different reasons. In fact, it’s the de facto in many specialized areas of software including machine learning, data science, Io T, and artificial intelligence. I think it’s a great first language to learn because the syntax is so straight-forward and doesn’t get in the way of learning algorithms. People often knock Python because it uses indentation to enforce a clean coding style (sounds crazy, right?). I think this is an especially useful language feature for newbies because it promotes good habits from day one. Rails is still a viable option for developers interested in working with startups. You might hear that Ruby is a thing of the past, but this is only because Java Script frameworks and Golang have cut into a significant portion of the rails market share over the past few years. Let’s be clear though, it isn’t going anywhere for a long time. C# and Java are great options if you want to work with enterprise-level companies. Think along the lines of Microsoft or The Home Depot. The brand and reputation of these companies offer immediate value to your resume. The most valuable advice I can give here is that you should learn multiple programming languages and paradigms if you want to lead the pack in terms of skills. Don’t fall in love with any single technology because languages gain and lose popularity as quickly as the seasons change. Learning any language is highly rewarding. Never. Stop. Learning. 2. Should I go back to college? No, absolutely not. The reason coding bootcamps are sustainable businesses is because colleges aren’t able to keep up with the rapidly changing landscape of software. When you combine that with the increasing cost of tuition, you get minimal value. I know it can be easy to succumb to the thought of traditional wisdom, but I can assure you that learning antiquated technologies for four years is not going to help your career. Don’t go back to college just to learn code — opt to save your time and cash instead…enroll in a solid coding bootcamp. You can complete a typical program within less than a year. Get the most bang for your buck. 3. What kind of company should I work for? I recommend getting a wide-range of experience with companies that are in different phases of their development including startups, mid-size, and enterprise. Each size company comes with its own set of challenges and this will offer learning opportunities you cannot simulate in the classroom. With experience this diverse, your knowledge and skills will be more versatile than your peers. I also advocate taking the higher salary you are offered because this typically translates into more responsibility. However, you should place the highest value on learning potential earlier in your career. Don’t take the high paying job where you cannot build your skills. This will haunt you later down the road. In enterprise companies you will receive more mentorship as they have larger, more mature teams that have greater tolerance for training debt. For this reason, I implore junior developers to pursue these opportunities in most cases. Find the best support system. 4. How can I expedite the learning process? There is really no secret formula here. Hard work pays off. Expect to put a significant amount of time each week into learning and building your skills. Getting a tutor can be extremely helpful. It never hurts to have an experienced professional on your side who has a vested interest in your success. Practice makes perfect. 5. How do I select the right coding bootcamp for me? It is important to consider how the coding bootcamp is going to assist you in career placement. Ask them how long they will continue to support you after the bootcamp is over. Ask them about placement statistics, with an emphasis on how many people actually got placed in coding positions. You would be surprised how many coding bootcamps inflate their statistics. Knowing their definition of placement is important because someone getting a job as a real estate agent or banker isn’t relevant and offers you zero R O I on your time and money. Another trick the majority of coding bootcamps use is hiring their own graduates. Look into which local companies they are partnered with. This will speak volumes to the curriculum and quality of students graduating from the program. Lastly, ask them to explain their value proposition. If they cannot answer this with confidence and detail you should keep looking. A good coding bootcamp will exude passion in helping you improve your career. Do your homework. I’m always willing to help quality people reach their goals. If you are looking to get into software and have any questions, please don’t hesitate to reach out via Linked In or in the comments! If I receive the same question multiple times, I will publish it here. https://www. linkedin. com/in/sbrhutchens/","['Codingbootcamp', 'Programming', 'Learning To Code', 'Learn To Code', 'Web Development']",https://medium.com/@stephenhutchens/musings-for-the-aspiring-developer-9affd6f493a,4,[],0,3,stephen,M,0.0034105039333625683,0.9965894960666374
Drew Campbell,Unity Developer | Game Developer | VR | Blogger | Pixel Art Enthusiast | Lover of the Planet and all things Tech,An introduction to Theoretically Evaluating Algorithm Efficiency with Asymptotic Notation,2017-08-12 10:39:38,medium,"An introduction to Theoretically Evaluating Algorithm Efficiency with Asymptotic Notation Don’t get scared away by the title; what we are going to talk about isn’t all that complicated. In a previous post I introduced the concept of an algorithm, and gave a brief description into how an algorithm is deemed to be efficient. This article will take this further by discussing techniques available to us for testing the efficiency of our algorithms before we go about implementing them in code. Before we get started, lets first go back over efficiency. An algorithm can be efficient if it meets the memory or running time requirements imposed. Basically, our algorithm must use less than a maximum amount of memory, or run no slower than an amount of time specified. The restrictions imposed are dependent up on the problem we are trying to solve. In order to test for efficiency, an algorithm must go through a theoretical analysis, using asymptotic analysis, before the algorithm is implemented. The reason for this theoretical analysis is that simply without it our algorithms could only be tested through implementation. Why is this bad? Well, firstly, we have to perform the implementation before we have any idea of how the algorithm will run. Meaning you could spend a long time developing something to realise that this algorithm will not run the way you want it to. Secondly, by testing an algorithm through implementation we are making our algorithm dependent upon a specific platform, programming language, and hardware configuration. Altering any of these variables could result in a different result. Given the shear amount of variation we could never test our algorithm for all possible configurations. Having a way of analysing our algorithm before we start implementing it allows us to save time, but more importantly allows us to judge efficiency independent of any hardware or software. As described by Wikipedia, asymptotic analysis is the field of mathematics for describing the limiting behaviour of functions. A limit of a function is the value a function approaches as the input of that function approaches some value, usually zero or infinity. Therefore, we are looking at the output of our function against a specific value, based on the values we are passing into the function. If we have the function f(x) = e^x we could look at the output of that function as x tends towards infinity. Basically our function output grows exponentially as the value of x gets larger. Asymptotic notation is a language that describes the type of behaviour of a function respective to the growth of that function. What I mean by this is that given a function f(n) = 2n² + 600n + 200 we are only concerned with the most significant term, n², because as n tends towards infinity the other terms and constants become irrelevant, as shown in the graph below. As you can see from the graph the n² term results in a significantly larger output as the input size increases. There are a few different types of notation and in the next article we will go into a lot more detail about one of them, but for now lets talk about how all this relates back to algorithms. This idea can be applied to our algorithms, whereby the input of our function is the size of our input of the algorithm. Input is the metric we use as algorithms are designed to work with inputted data because an algorithm is useless without it. A search algorithm requires elements in which to search, as does a sorting algorithm needs input to sort. As the input increases in size we can see that an algorithm might take longer to complete, or require more memory. It would take a lot less C P U cycles, or steps to search through a 100 items as it would do to search through 100, 000. This leads us onto the output of our function, which is what we want to measure for within our algorithm. If we are measuring the time it takes to run then we would like to see how long our algorithm takes to complete as the input amount increases. If we want to measure against memory, we would want to see how much memory is used up as the amount of input increases. Therefore asymptotic analysis is required to measure the running time or memory capacity required by our algorithms as the input size increases. Asymptotic notation is where we describe our function as a rate of growth using the most significant term, and removing any insignificant terms or constants. We end up with an independent method for determing the efficiency of an algorithm. In the next article we will look at a specific form of asymptotic notation, Big O notation, which is commonly used in computer science for measuring an algorithms performance.","['Algorithms', 'Computer Science', 'Software Development', 'Programming', 'Codingbootcamp']",https://medium.com/@dr3wc/an-introduction-to-theoretically-evaluating-algorithm-efficiency-with-asymptotic-notation-c05b8a99021c,0,[],0,5,drew,M,0.0864588857780683,0.9135411142219317
Brittany Beheshti,Ryerson University — Film Studies,Coding: The Language of the 21st Century. – Brittany Beheshti – Medium,2018-04-02 20:32:45,medium,"Coding: The Language of the 21st Century. Coding seems like a very taboo exercise. Before trying codecademy. com my experience of coding was only from the movies, where a nerdy character would spaz the keyboard. S O U R C E After completing my first coding course I am beginning to understand that it is just a language, with rules that need to be followed in order to run. I signed up on the website, and it asked a variety of questions in order to get an understanding of my knowledge level. Did I want to level up my career, work on a project, learn for school, or play around and have some fun? The website then attempted to get an understanding of which area of coding I wanted to learn most. The three they focused on were Web Development, Data Science, and Programming. Was I more interested in front-end or back-end development? As this was my first time ever trying to code, I chose the “ I’m not sure where to start” option. It proceeded to suggest I learn the basics of H T M L. H T M L is the skeleton of all web pages. It stands for Hyper Text Markup Language and is used to create the structure and content of a webpage. Essentially H T M L tells your browser where to position content, i. e. images, text, videos, ect. S O U R C E Codecademy’s lessons are very user friendly. They have the instructions and hints panel on the far left, the H T M L panel in the middle, and the browser panel on the right. As you hit “ Run” at the bottom of the H T M L panel, you are able to see what effect your coding had on the actual webpage. The instructions were well explained and easy to follow even for a beginner such as myself. The lesson began enforcing the idea that most H T M L elements contain opening and closing tags with raw text or other H T M L tags between them. One of the main take-aways from this course is that organization is important. Any visible content should be placed within the opening and closing <body> tags. <p>, <span> and <div> tags specify text or blocks. These tools are great for grouping elements, and keeps you as the coder organized. There were also tools to deal with the aesthetic of the page. Headings and sub-headings, <h1> to <h6>tags, are used to enlarge text. The <em> and <strong> tags are used to emphasize text. <em> typically italicises words, where as <strong> usually makes the font bold. The next step in the lesson that was taught was the use of ordered (numbered) and unordered (bullet-point) lists. Ordered lists utilized <ol>, where as unordered used <ul>. It was also quite simple to add a break in the lines of the website by inserting <br> tag to signify a line break. The final tool taught in the lesson was how to place images and videos. This I found to be the most difficult section of the lesson. Images had self-closing tags, which was unlike any of the other tags learned, and the video tag required the dimensions, the links, and the controls. If you ever got stuck at any point of the exercise, you could ask for the solution, however the website would replace your code with the correct one without showing you the differences. I did find this frustrating because in order to learn I want to see my mistakes. S O U R C E S O U R C E Overall, the site easily walked me through the steps to create a simple page about Brown Bears. It was quite interesting and a site I will definitely visit again!","['Web Development', 'Coding', 'Codingbootcamp', 'Beginner']",https://medium.com/@brittany.beheshti/coding-the-language-of-the-21st-century-4d77dd831f7e,0,[],0,0,brittany,F,0.9969992038704146,0.0030007961295854
Yan Wang,,My Favorite Atom Shortcuts – Yan Wang – Medium,2018-08-20 01:57:39,medium,"My Favorite Atom Shortcuts We have survived the first two weeks of the Flatiron’s coding boot camp. It feels like two months of learning to me. We got to know different models, methods and relationships which I had never heard of before. With all the dedication and hard work, we are about to utilize what we learned to build our very first project. It is challenging but I am sure we are all excited for this. Who did you spent the most time with? If you spent most time with Learn. co, I would consider you as a “getter”, as you must be getting a lot of information from there. If you choose Atom, I would consider you as a “setter’, as you constantly setting up models and methods. If you say both, congratulations, you are honored as an accessor! You now have the power of both getting and setting methods. As I go through different labs on Learn. co. There is one piece of information that gets repeated most on Learn. co. — — — — — — — — As programmers, we are L A Z Y — — — — — — — — — Learn. co repeatedly tells us “don’t repeat ourselves”. We better remember always looking for a better way or easier way to solve problems. Here are some of my favorite Atom shortcuts. I hope this would help you be more efficient and stay lazy!1. Multiple Cursors One of the most impressive features of Atom is its multiple cursor support. This enables to you type many things at once, on multiple lines, anywhere in the document. Just hold cmd ( Mac) and click in every place you want to type. 2. Select the next matching characters Cmd + D ( Mac) This command allows you to select the next matching word or characters to that which is highlighted. You can then (using the auto generated multiple cursors) delete, edit or update the highlighted values. This is particularly helpful if you want to update only a couple of values or properties, without resorting to find and replace. 3. Unselect the next matching characters Cmd + U ( Mac) If you’re selecting the next matching characters, sometimes you go too far. This shortcut will unselect the most recently selected characters in reverse order. 4. Duplicate line Cmd + Shift + D ( Mac） If shortcuts got medals, this would be the one to win gold. I use this one constantly. It allows you to place your cursor anywhere on the line and duplicate it. 5. Move the current line Up or Down Cmd + Ctrl + Up (or Down) Arrow ( Mac) This keyboard shortcut is great in conjunction with the duplicate line one above. Wherever your cursor is, this shortcut will move the current line above or below the lines around it. If you have selected multiple lines, it will move the whole block (and auto indent) as you move in and out of tags and brackets. Try it out and get used to it It might feel awkward or takes even more time for the first couple times you try out these shortcuts. However, once you get used to it, it would become part of your muscle memory. I am sure you would appreciate Atom for creating those shortcuts to improve your work efficiency.","['Web Development', 'Atom', 'Shortcuts', 'Codingbootcamp', 'Flatiron School']",https://medium.com/@wangyan6783/my-favorite-atom-shortcuts-f969ceced3db,0,[],0,47,yan,M,0.12359550561797752,0.8764044943820225
Kalen Hammann,,"A New Beginning, Part 4 – Kalen Hammann – Medium",2017-07-17 15:26:59,medium,"A New Beginning, Part 4 A N E W I D E N T I T Y Those clever people at The Firehose Project had been teaching me to make not just any page, but the home page of my web developer portfolio. That’s the page I would direct people to after the training was done (or even before!) every time I applied for a job. That’s where I would showcase my experience so that hiring managers would see what I had D O N E and be able to get a good idea of what I could actually do for them. And right there at the top — one of the first elements I created — was a picture of me, my name, and my new title: Software Engineer! Then my assignment was to put that page up, live, on the web. So now I was announcing to the world not “ I’m G O I N G to be a software engineer, ” but rather “ I A M a software engineer!” Every time I refreshed the paga and saw that, it became more real to me: I really A M a software engineer right now. Like every other software engineer there is quite a bit I know how to do already. And like every other software engineer I’m learning more every day. Almost immediately I could feel a shift in how I was thinking about myself. A shift that felt good and surprisingly right. I had a new identity. “ R U B Y, D O Y A K N O W W H A T Y O U’ R E D O I N G T O M E?” Once I had the basic page built, I started learning a computer language I had never heard of called ruby. Ruby, it turns out, was created (according to the guy who created it) to make programmers happy. It makes a lot of things easy to do that are harder or more covoluted in other languages, so it’s a good place to start. And apparently once I’ve learned one language others will be pretty easy to add, because the structure of what I’ll be doing wil be the same no matter what language I’m coding it in. I learned Ruby by writing code, and then immediately was given problems to solve. Problems like these:“ What code would you use to ask a user to submit a temperature in Celcius and then output the temperature back to the user in Fahrenheit?”“ How would you convert a plain number entered by the user to the ordinal of the number? For example, if the user enters 2 it will display 2nd, if the user enters 3, it will display 3rd, etc. ” How can you teach the computer to display a foobar sequence?” ( In the children’s game Foobar, children say the numbers in order beginning with 1 except that when they come to a number that is 3 or a multiple of 3 they say “foo, ” when they come to a 5 or a multiple of 5 instead they say “bar, ” and when they come to a number that is a multiple of both 3 and 5 they instead say “foobar, ” so the first few terms the computer has to spit back are “1, 2, foo, 4, bar, foo, 7, 8, foo…”) And I D I D it. The first time Kari tested my Foobar Displayer she told the computer she wanted a foobar sequence for 93 items and B A N G, there they were on the screen. What a rush! B E Y O N D C A T C H-22 Then we went back to my portfolio page. Ken, the Firehose guy (he was beginning to feel like a friend even though I had never met him exept via video), had me add descriptions of the real problems I had solved by writing real code to do real things a user might want to do. And he had me include M Y code, the code I had already written to do those things. Now hiring managers would be able to actually S E E some of what I knew how to do because I had D O N E it. Knowing that, I felt a new kind of confidence. I was solving the catch-22: I’d be able to get a job that required expereince without having to first get a job so I could get the experience. Knowing that felt wonderful. :-) Then came the really impressive part of my portfolio. ( More to come … click here!)","['Programming', 'Codingbootcamp', 'Aging', 'Startup Lessons', 'Career Advice']",https://medium.com/@kalen7/a-surprising-career-change-part-4-5391af44ff52,0,[],0,2,kalen,M,0.2631194002559883,0.7368805997440117
Roscoe Bass III,Foodie + Boxer + Software Dev = me in a nutshell,Boxing Coach to VR/AR Developer – Roscoe Bass III – Medium,2017-07-31 00:06:41,medium,"Boxing Coach to V R/ A R Developer Don’t let the title fool you. I’m not a Virtual/ Augmented Reality developer (dev. )…. yet. Actually I’m a boxing coach with a passion for software development, and being a V R/ A R dev. is one of my goals in life. This blog is just a brief telling of what steps I’ve taken so far in order to accomplish this, and advice to get you started on your journey. For me, it all started with an awesome mobile app called Solo Learn. This app was my first introduction to code and coding environments. Of all the coding tutorial apps on the mobile market, this one is by far the best I M O. Not only is it easy to pick up and easy to use, it’s also ad free! If you’re interested in learning to develop software, of any kind, I highly recommend checking out Solo Learn first. With this app I found my introduction to code syntax and logic. After working with the app for a little bit I ran into some blockers, in that I wasn’t sure how much I was truly learning from working with only tutorials. I started branching out looking for instructors or coaches that could help in my journey. In my searching I found out about coding boot camps. These are specially designed schools for teaching people, with no official technical training, how to become software and web developers. At the time I couldn’t dream of affording the tuition for one of these schools, so I decided to stick with self study a while longer. After a few more months of self study I found an exciting opportunity with the Apprenti program. This program was a new apprenticeship being offered to anyone who could pass their aptitude test with a high enough score. If a participant scored high enough, they would have all of their schooling paid for by the program, and be set up to work at a major software company for one year as a paid “on-the-job trained” apprentice. I took their test and managed to score one of those top spots. I’m now in the program as I’m typing this article, currently attending the Code Fellows coding boot camp. This high intensity training environment proved to be exactly what I was missing from self study. I’m in the middle of taking my second class, and in this class I was given the task of attending a tech meetup. A meetup is a scheduled event for bringing people of a common interest together. If you have any interest in learning more about the tech field, attending a meetup has strong benefits. Most are free, and are one of the best ways to start networking and talking with people in the industry. The meetup I decided to attend was based around a game engine known as Unity. Unity is a “freemium” style game engine which can be used to create 3 dimensional (3 D) environments for V R and A R devices. What’s nice about it is that it’s incredibly easy to just pick up and start building environments right away. It also features a number of great tutorials to help familiarize you with its set up. So far I’ve only gone through the first tutorial on Unity, which teaches you how to create a basic “roll a ball” game. During that tutorial, expect to learn: how to create 3 D game objects, move and set objects around a play field, add animations to objects, add physics (like gravity), manipulate lighting in a given play area, and much more. Now I’m by no means a V R or A R game developer yet, but after just 1 hour, I was able to code a basic animation for my first 3 D game in C# shown below:void Update () {  transform. Rotate (new Vector3 (15, 30, 45) * Time. delta Time);} This script essentially rotates the attached game objects in a circle at a continuous rate. Granted this is a very basic few lines of code, but it helps set the scene for the game. Although I still have a long way to go in becoming a V R/ A R developer, I have already created a functional 3 D game. An accomplishment I was able to achieve within my first 2 months of schooling. If I can do it, I truly believe A N Y O N E can succeed at this as well. If you’re interested in following the same path as mine, start by studying as much as you can. Find a teacher to fill in the holes, and begin experimenting with a game engine as soon as possible. It is my belief that through study, mingling(meetups), and experimentation any dream of being a V R/ A R developer will become reality.","['Virtual Reality', 'Augmented Reality', 'Mobile Augmented Reality', 'Coding', 'Codingbootcamp']",https://medium.com/@DocJek/boxing-coach-to-vr-ar-developer-1990e64dbd74,1,['Code Fellows'],1,0,roscoe,M,0.0002317926846228733,0.9997682073153771
Fred Ma,,I would say community is definitely very important.,2018-07-02 23:15:45,medium,"I would say community is definitely very important. I actually had considered Thinkful at one point (since I live in Maryland), but I’ll be honest. Going to their meetups in D C, I was not really impressed with what they were teaching ( I have a C S degree mind you). When I had left the group on meetup. com, I told them that. Like all the stuff they were teaching, I felt like I could research on my own. Like free Code Camp exists and it’s free. I wanted more than free Code Camp. That being said, I understand everyone comes from different levels. Thinkful to me appears to me to appeal to those who are at a beginner level, which is fine as everyone starts somewhere. This is just one experience, but I felt that Thinkful wasn’t at the level I wanted, and factoring in both time and cost, I didn’t feel it was worth it. At the end of the day, my goal was to get a job offer. So time, money and technology stack does matter if you’re interested in getting a job. I personally decided on Fullstack Academy. I would say they have a really great community of people who care about each other. I’ve made some really great friends along the way. But also I felt my time and money was not wasted. The cost is somewhat similar to Thinkful (slightly more expensive) but they teach a lot more. So they teach Node. js, Express, Sequelize, React and Redux. Basically the N E R P ( P stands Postgres, which is what we were using with Sequelize) stack. That being said, they expect you to come in at a somewhat more intermediate level though. I would say their admissions is pretty decent in terms of gauging level. There was a group in my class that created a banana game you could play on your phone for their capstone/final project. It utilized Augmented Reality. This is an example of how A R could have a practical use. For our capstone/final project, my group made something like http://repl. it but collaborative (like Google Docs) that would run Javascript code and show the result of running the code. You can visit here if you’re interesting it testing it out. So it only prints out whatever you put in console. log(); statements but it works. It may take a few seconds after you hit the play button, because I implemented encryption for Docker as someone was using it for cryptocurrency mining. I don’t feel like I would have gotten an offer so fast (it has been barely a month since graduation) if I had attended Thinkful instead of Fullstack Academy. When I interviewed in N Y C, the interviewers were pretty impressed with my projects and my knowledge. I mean you can say time, cost and tech stack doesn’t matter, but I think it matters just as much as community does. If I’m not impressed by a bootcamp, why would employers be impressed, you know? That being said, I think Thinkful’s great for people who are trying to get their feet wet. I’m just skeptical that it would have been worth the time and money for me. I really liked how much structure Fullstack’s program had. Like, I can tell you how Fullstack’s schedule worked. There was 1 month of pre-work which was related to Javascript basics. Then 6 weeks after that we learned a tech stack ( Node. js, Express, Sequelize, React, Redux). We would pair program every single day. Each day ran from 10am-6pm. I mean they explain it on the site. And then there would be time to be review the workshop. It was very very very intense. There were checkpoints along the way to make sure we were doing okay with the material. After those 6 weeks there was 1 week off but I worked on a mandatory tech blog post we were supposed to submit in the upcoming weeks. In the next 6 weeks we worked on projects. There was 1 group project where everyone did the same thing, then there was a solo project, and then another group project where your group decided what to do. At the end of the day, employers are looking to see if you can do the job they need and if you have the skills they need. Networking and coffee chats are important but beyond that you need to be able to show employers that you have the skills. This confirms my original suspicions about Thinkful. Having said that, this course would be great for early beginners. Though, when it comes to job application time, you will not be prepared to land a job. The skills you gain in this course are insufficient for being employed and the projects are too simple and too superficial to be of any use for anyone or to showcase necessary skills. The other thing about Fullstack is they really really helped with both Linked In and my resume. “ It’s a myth that you can’t get a job without experience; but it’s not a myth that you won’t get a job if you pitch yourself as having no experience. ” Also, I think it was good for me to actually target the N Y C area rather than the D C area. Because N Y C is a tech hub, like S F. Developers are in demand. I feel like there’s a lot of protocol when it comes to getting government jobs so I’m not really interested in dealing with that.",['Codingbootcamp'],https://medium.com/@fredma_43446/i-would-say-community-is-definitely-very-important-48e84209398f,1,['Fullstack Academy'],1,0,fred,M,0.00588274520377957,0.9941172547962205
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",First Week Rails – Emily Deans – Medium,2017-09-02 23:22:31,medium,"First Week Rails Our first week in Rails has been an adventure. I continue to be amazed by how quickly the framework enables you to get a full-stack app up and running, but also recognize the importance of peeling back the layers as I go to better understand what it’s actually doing for me and how to better utilize its potential. We went through a list of some of the major folders that default ship with every new Rails app, which I tried to sum up here: Assets: Contain static files ( C S S, J S, etc. ) Channels: Contains Web Sockets — a computer protocol that allows users to communicate back and forth. These are used for chat features and other useful communication features in your app. Controllers: Handles the request/response cycle Helpers: Groups of methods that are primarily used to abstract logic from your view Jobs: Units of work that do things for your program but act in the background Views: Provide a visual representation of the data in your system Models: Represent the data and database layer inside your system Mailers: Controllers that send email instead of request/response cycle A few other Ruby/ Rails things I’ve learned about/worked with this week: Naming Conventions: Models → singular and lowercase; Pascal Case| Controllers → class name is plural and followed immediately by ‘ Controller’ (i. e. , ‘ Books Controller’); Pascal Case | Database Schema and S Q L table names→ lowercase and pluralized; snake_case | Attributes and Methods → snake_case | Active Record subclass names → singular and camel Case | Column Names → snake_case Active Record: A Rails component that automatically ships with new apps and is responsible for interacting with relational databases Sessions: A way for web applications to store info about each unique browser and have that info persist between requests ( We’ve also worked with these in our back-end programming in Node. js) Gem Files: Packages of code that you can pull into your app to create certain functionalities within the program (similar to npms in Node. js). Scaffolding: Away to quickly generate substantial pieces of your Rails application (you can create the models, view, and controllers for a component of your program in a single operation) Partials: Files that allow you to reuse and organize code for your views This weekend, I’m working on the latest weekly project, ‘ Recipe Box’. For this, I’ll need to create an app that stores recipes (surprise, surprise) and other associated information, such as ingredients and steps. To get this working well, I’ll have to create a few models in the database layer and store associations so I’m able to filter selected information for the user’s views. I’m creating this program without the use of scaffolding, so it’s a little slower-going, but I’m having fun in the process getting to know Rails a little better. Song of the Day: “ Stay Up Late” by Talking Heads","['Ruby on Rails', 'Code Newbie', 'Codingbootcamp', 'Girl Develop It', 'Women In Tech']",https://medium.com/@emilyldeans/first-week-rails-3eee67c5a764,2,[],0,10,emily,F,0.9979317746535663,0.002068225346433675
Gabriela Contreras-Cisneros,"Maker of things, drinker of coffee",Attending Grace Hopper Celebration as a Bootcamp Graduate,2018-10-06 20:35:12,medium,"Attending Grace Hopper Celebration as a Bootcamp Graduate Jessica O. Matthews giving her super empowering keynote address Last week I attended Grace Hopper Celebration in Houston, Texas. Grace Hopper Celebration is the biggest conference for women in technology. This year, 22, 000 women from the U. S. and from around the world attended the 3-day conference, about 4, 000 more attendees than the previous year, which took place in Orlando, Florida. Before I left to Houston, I did some research on the conference. I knew there were sessions (workshops or talks), the Career Fair (company booths), and the Interview Hall (where interviews are held if you are invited to one). I had a long list of sessions that I wanted to attend, I knew I wanted to network in the Career Fair, and I had one interview scheduled. I figured I would solidify my schedule once I was at the conference and had a better sense of the flow. So, I arrived to Houston bright-eyed and bushy-tailed with a half empty suitcase for all of my new t-shirts and swag. I was ready for an empowering start to my new career. I had just finished my coding bootcamp, Hackbright, the week before and had changed my title from “ Software Engineering Student” to “ Software Engineer” on my Linked In. I was ready to learn and mingle. On the first day, my friends and I made our way to the opening event, which took place at the arena next door and consisted of opening remarks by the C E O of Anita B. org, Brenda Darden Wilkerson and keynote addresses by Padmasree Warrior and Jessica O. Matthews. The opening remarks by Brenda D. Wilkerson made me feel like I belonged there. She welcomed every woman from all paths, whether they got into tech with a Computer Science degree, a coding bootcamp, or courses at a community college. This conference is for me, I felt it deep in my bones as she talked. After the opening remarks and keynote addresses, I felt energized and ready to take on the world. We made our way to the Career Fair where hundreds of companies awaited us and the other thousands of attendees. There were two massive lines with rows of people waiting to get inside. Walking into the Career Fair felt like walking into Disneyland with tall, colorful displays and long lines all around me. The start to the Career Fair The disappointments I enthusiastically made my way to the companies that I really wanted to talk to first. Yet my enthusiasm was rarely reciprocated. Company booth after company booth, I could sense the disappointment at the recruiter’s realization that I did not have a Computer Science degree, especially when the rest of the people in line were university students or soon to be graduates with Computer Science degrees from distinguished universities. Some of the companies that I talked to do hire bootcamp graduates, but only after they have already gained experience elsewhere. I got the impression that many companies are not willing to take the first step in hiring bootcamp graduates, but will hire them once they have been successful elsewhere. After a few hours at the Career Fair, I left drained and disenchanted. I did not step in again that day. The following day I had my interview scheduled, so I went back to the Career Fair an hour before my interview to meet the recruiters and to share that I looked forward to the interview. The recruiter had e-mailed me the weekend before to express interest in interviewing me. I was pretty excited that a recruiter had e-mailed me, so we set up an interview. Fast forward an hour later, while sitting in the interview booth, it became clear that the recruiter had no idea that I was no longer a university student. I wondered if she had even taken a look at my resume. We still went through the interview and at the end she told me to look online at their careers page to find relevant job positions, which was her polite way of saying they would not be moving forward with me. Defeating Imposter syndrome After the interview, I realized I had to reassess how I wanted to spend my time at Grace Hopper. The whole first day and a half I felt an intensified imposter syndrome, which made it difficult to enjoy the conference. So, I decided to shift my mindset. Most of these companies were not ready for women like me from non-traditional paths. I was not missing out on them, but they were missing out on me. The rest of the conference I focused on building connections by attending sessions, receptions, and recharging with my friends. I attended the Latinas in Computing reception where I got the chance to meet Latinas from New York, Los Angeles, and Philadelphia. I also attended a session on smart devices and privacy where I met a woman starting her Ph D at the intersection of philosophy and science on Smart Cities. I also spent a lot of time at the Google on the Green tent, which offered games, food, lounging areas, as well as a towering birthday cake for Google since it was turning 20 that day (yes, people did sing “ Happy Birthday”). Aside from meeting and making new friends, some highlights were the Ladies Who Launch fireside chat featuring Arlan Hamilton, Founder of Backstage Capital and April Underwood, Slack C P O. Arlan said, “ Don’t compare your chapter 2 to someone else’s chapter 30, ” which resonated deeply with me that morning. As I sat there in the room surrounded by women of color engineers and founders, I knew I would be okay on my journey. When I think about how far I have come these past few months, I have come a long way and I am excited for what my next chapter holds. T L; D R I attended Grace Hopper right after my bootcamp ended, so right at the start of my job search. It was discouraging speaking to a lot of the companies at the Career Fair since I did not fit the profile they were looking for (although I did get a pretty sweet headshot from Indeed at the Career Fair). I would not discourage other bootcamp graduates from speaking to company booths, but do go in knowing that the Career Fair is targeted toward university students and new graduates. If I were to attend again, I would spend more time attending sessions and workshops. Some other highlights were Jessica O. Matthew’s keynote address, the Women of Color Hop Up hosted by Google, and every word Brenda D. Wilkerson said. At the end of the conference, she stated, “ A woman’s job is any job she chooses. ” I choose software engineering. :)","['Women In Tech', 'Grace Hopper Conference', 'Ghc18', 'Codingbootcamp', 'Diversity In Tech']",https://medium.com/@gabrielainsf/attending-grace-hopper-celebration-as-a-bootcamp-graduate-f4e4fc69032,4,[],0,38,gabriela,F,0.9952923213944908,0.004707678605509256
Tony Mputhia,,BOOTCAMP Day 3 – Tony Mputhia – Medium,2017-04-05 17:13:46,medium,"B O O T C A M P Day 3 Well I can tell you for a fact that the pressure is getting to me. The assignments keep piling up because I was late meeting the first deadline, so I am playing catch-up. These deadlines are like Floyd Mayweather… they’re hard to beat. :-) I almost gave up because for a moment everything seemed too hard and i had lost hope. Two phone calls later, I had managed to pick myself up and decided to give it everything I’ve got. The first was to our group’s facilitator, Ben Kanyolo. He advised me to keep at it and also said that so long as I give it my best shot, I’d feel better about myself, whatever the outcome, and still stand a chance to make it past week 1 of the bootcamp. The second was to a fellow bootcamper, Dominic Motuka. We forged this friendship the first day of the bootcamp and seeing us together, you would think we’ve known each other since childhood. He is another reason I didn’t give up, so shout out to you Dom ‘mrefu’. This blog will be short for there is still a lot of work to be done. I just stocked up on sachets and sachets of coffee so there’s a chance I will be pulling an all nighter tonight. ‘ Wapi nduru ya usiku sacco’. Catch you on the next blog. Peace.","['Andela', 'Andela Bootcamp', 'Inspiration', 'Motivation', 'Codingbootcamp']",https://medium.com/@tonymmputhia/bootcamp-day-3-ddc789056a27,0,[],0,0,tony,M,0.011453008453505718,0.9885469915464943
Max Lowe,,Coding Bootcamp? Forty-Year-Old Man Says “Don’t Let Diet and Exercise Slip.”,2018-05-22 20:51:52,medium,"Coding Bootcamp? Forty- Year- Old Man Says “ Don’t Let Diet and Exercise Slip. ” At age 39, I had looked and listened in every place I could think of in an effort to facilitate and optimize the largest professional transition of my life. Family, friends, the internet, and the coding community in general all came through with more insight and guidance than I could have ever hoped for. Confidently, I signed the papers for the on-line Web Developer Track with Bloc and began to prepare myself for what I’d heard referred to many times already as a ‘rollercoaster. ’ I’d been warned about inevitable instances of ‘keyboard-pounding frustration. ’ I’d been assured that if I found myself needing to freeze my program because ‘life happens, ’ I’d be able to do so. Wouldn’t you know it, about a month into my program, ‘life happened. ’ It wasn’t anything tragic. I write this fully aware that my recent instance of ‘life happened’ is likely yawn-inducing for countless others who’ve encountered and persevered through M U C H M U C H worse. I’m not trying to inspire anyone with an amazing story of triumph over adversity. I just hope others might identify with the shakeup I encountered and can learn from the mistakes I’ve made so far. I’ll rewind a bit to give you some backstory. About a year ago, I realized I had no desire to continue my career in restaurant management. I’d been with the same company for 7 years, had been in hospitality my entire life, and the thought of staying in the industry until retirement was growing less and less attractive by the day. It was time to forge a new path for myself and my family. Something inside told me I’d fare better trying to change careers at my age if I got into decent shape. ‘ Healthy body=healthy mind’ of course but it also couldn’t hurt to establish a better health routine if I’d likely end up sitting at a desk much more often. I replaced the routine of a couple beers after work with very regular trips to the gym. Burgers and pizza on my breaks and at home were replaced with salads, brown rice, grilled chicken and fish. To find more revolutionary tips on diet and exercise, google “diet and exercise. ” The point is, I established a pretty solid health routine which really helped me stay energized and motivated. We’ll get back to this in a bit. A number of factors convinced me to pursue web development, not the least of which was the enthusiastic support of a handful of friends already working in tech. I informed my team at the restaurant that I’d be pursuing education on my own time for the next 8 months or so and everything seemed workable enough. Restaurant hours are long and varied but 7 years in the same place gave me the confidence that I could make time for Bloc and move toward web development. Within less than a month, sales at the restaurant were down and the decision was made to reduce my hours and pay ( Same deal for 2 other managers. I didn’t turn into a jerk. I don’t think. ) for the foreseeable future. I decided that instead of pursuing a new hospitality management position which would require a lot of time and energy, I’d find a bartending gig that would meet my financial requirements while requiring less time and offering more opportunity to focus on coding. Fortunately, an old friend soon reached out hoping I could recommend a capable bartender and I pounced on the opportunity. In retrospect, this would have been a prudent time to freeze my program at Bloc as I chose to begin training at the new job while finishing out 2 weeks at the old job(my friend was desperately understaffed). It’s not too tough to learn a new menu and set of drink recipes within a few days but it eats into your ability to retain the proper syntax for J S formulas. Hindsight. Fortunately I didn’t fall too far behind but in the transition to a new job and schedule with more late nights, more physical labor (kind-of exercise but not the same as actually working out), scarce breaks with not the healthiest of foods, and the general stress of a new work environment, my health routine took a hit. I justified skipping workouts, eating less-than-healthy meals and snacks, and taking sleep where I could get it as reasonable sacrifices/byproducts of my job transition. As long as I was putting in the hours I could toward coding, I figured I’d be ok. A month later, I felt like a different person. I was lethargic. My overall ambition was suffering. I was aiming more at completion of checkpoints rather than information retention and quality work. I was also earning more money than I had in a decade and meeting all kinds of fun new people but I felt blown off course. I was a little panicked that I’d fallen behind and that I was having trouble motivating myself to do the work I needed to. Add a nice dash of the frequently occurring Imposter Syndrome and the anxiety levels started to read pretty high on the chart. Thankfully, my family helped me realize that my discipline had slipped on the health front and they gently encouraged me to get back to the gym and to eat some lettuce. I had somehow convinced myself that shorting my health routine would help me do better in school. I thought my success was directly correlated with the amount of time I forced myself to devote to coding. Turns out, diet and exercise are pretty important and it’s much easier to motivate yourself to code at 8: A M when you’re not full of burger at 3: A M. Who knew? For more helpful tips on diet and exercise, check out the “ Health and Wellness” section of your local Barnes and Noble. Anyway, if you’re in a bootcamp and you feel like you might need to talk to someone at the school because “life happens, ” I recommend you do so. A little breathing room can help you keep things on-track and optimize your overall education. More importantly, prioritize your health!! I’m sure most people either stopped reading at “ Forty- Year- Old Man Says” or “restaurant management” but if there’s just one other person who gets something from this, I’ll feel like I can reward myself with a pizza.","['Codingbootcamp', 'Exercise Motivation']",https://medium.com/@maxjlowe/coding-bootcamp-forty-year-old-man-says-dont-let-diet-and-exercise-slip-51b0b5eec2b1,2,[],0,0,max,M,0.004684549053344715,0.9953154509466553
Altcademy Team,The team behind Altcademy.com,Student Stories: Christl Tiu – Altcademy – Medium,2018-08-20 03:00:30,medium,"Student Stories: Christl Tiu Christl is currently studying Full-stack Web Development Nano Major Q: Tell us about your background I am a medical student in the Philippines. I have to attend school from 8 to 5. Sometimes, I have crazy schedules. I am planning to become a neurologist, something to do with the brain. Q: Why do you want to study coding when you’re a medical student? For me, coding is like a language. If you understand coding, you can leverage it to get your messages across society. There’s this book called Hacking Your Education. I learnt that you have to learn 2 things in life: learn how to code and learn how to write. You need to know technology, and you need to know communications. I found coding very fun because it’s so logical. Learning how to code is like learning about how to think logically and clearly. It’s empowering to have the capacity to understand code, and coding can be tremendously useful in the future. The future of medicine is also leaning towards tech. You have to write code in many medical studies. You also have to collaborate with engineers. What do you like about Altcademy? The best value from Altcademy is the mentorship. I always ask my mentor for help while I am working on challenging projects. I like the curriculum structure at Altcademy. Structure goes first, and the specifics go after. It’s good to be able to see the big picture and the “why” before digging into the details. With Altcademy, I’ve learnt the necessary train of thoughts when it comes to coding. You have to be logical and creative at the same time. The “ Aha” moments always happen when I am working on projects and talking to my mentor. Why did you choose Altcademy? I am already self-motivated enough to learn. You can actually get a lot of content online for free, but it’s hard to consolidate these content. I want a curriculum that’s already well consolidated. I also want a program with flexible schedule and mentorship because I have a packed schedule with medical school, and I want to save time. Altcademy’s online Nano Majors turn out to be quite affordable and flexible! What’s the next thing for you? I have just started learning Java Script. I aim to complete my Full-stack Web Development Nano Major and finish my medical degree at the same time! Altcademy is an online coding bootcamp with 6, 000+ students from 80+ cities. This story is from https://www. altcademy. com/stories/@codingforhealth","['Programming', 'Student Stories', 'Learning To Code', 'Codingbootcamp', 'Coding']",https://medium.com/altcademy/student-stories-christl-7956878169f2,2,[],0,0,altcademy,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 8 — (05) – Mike Brave – Medium,2018-08-28 07:57:39,medium,"42 Piscine Day 8 — (05) Edit: This is part of a series that culminated here, Next post. Previous post. I made a mistake, wasted most of today and only just realized the mistake as I was heading to bed. I let my ego get in the way of progress. I see everyone else figuring things out and I wanted to be one to come to conclusions on my own as well, I wanted to feel smart, to have discovered or learned on my own, then later to help others understand. Ultimately this was stupid as I had the resource that other people not being used. Not using the resources at hand is dumb. So this is how today went. I would spend 20 minutes working on code, filling in as much as I knew and understood, then I would get stuck stare at the screen for ten minutes, half heartedly ask my neighbor if they solved it yet (usually a no, not yet) then stare at it again until the frustration morphed into procrastination. Then I would daydream about some game I’d love to make, You Tube music would be listened to, memes looked at, email checked and articles read. Then stare at code in frustration again, watch a video about what I think I’m stuck on and still feel stuck afterward. Rinse and repeat and that was most of today. I did go to town for groceries and a haircut also the servers were down (meaning the lab was down) for a couple of hours before noon so I took the time to do laundry but otherwise my day was frustration and procrastination and what’s worse is I realized what I could have done to fix it as I was heading out. I was trying to solo what aught to have been collaborative. By not seeking out help from others (which I’ve been good about until now) I handicapped my learning for the day. Because I was proud and wanted to feel smart rather than actually learn. This was maybe one of the dumbest things I could have done. Also there was a meeting this morning about 1. How getting a high score on assignments but not tests shows either a lack of understanding or cheating so it’s not the way. 2. We need to understand pointers, arrays and recursion. 3. Keep going some people don’t have it click until days before the end. Other hints given at the meeting: look up c array syntax sugar, look up file descriptors for the write function, pointers are values also. I for one was grateful for the slight clarity of process, encouragement and direction. Lots of others interpreted differently. Some saw it as a warning to pay more attention, others still thought it was a waste of time. Another theory was that the group was too small so they need to increase the pass rate while not lowering quality ( I find that doubtful). I really think it was just to help. Some of the guys who are a bit better at coding started working on a script to calculate how many of us haven’t quit yet, I bounced some ideas with them for possible solutions but I don’t have time to help more than that. It’s cool to see a small personal project emerge though. I’m writing this on my phone so I don’t have access to the assignment list but I will say the first 3 are the hard assignments from previous days, they don’t count for points but have to be correct to get any points on the other assignments. There were a lot of other assignments as well. I’ll do details tomorrow. Edit: as promised here are the assignments for day05(not for points but needed to continue) put string function(not for points but needed to continue) put number function(not for points but needed to continue) atoi clonestrcpy clonestrncpy clonestrstr clonestrcmp clonestrncmp clonefunction to transform every letter of every word to uppercasefunction to transform every letter of every word to lowercasefunction to capitalize the first letter of ever word and lowercase the restreturn a 1 if a string is only alphabetical characters, a 0 if there are othersreturn a 1 if a string is only numbers, 0 if there are othersreturn a 1 if the string is only lowercase characters, 0 if otherwisereturn a 1 if the string is only uppercase characters, 0 if otherwisereturn a 1 if string contains only printable characters, 0 if otherwisestrcat clonestrncat clonestrlcat clonestrlcpy cloneputnbr_base — displays number in a base system onscreen, shape of int and in radix of shape of a string(what?), contains only useable symbols, must handle negative numbers, if invalid display nothingatoi base ( I don’t understand what it’s asking for at all)if non printable character display as hexadecimalfunction to display memory area onscreenhope this helps someone in the future.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-8-day05-590316073ec4,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Sean Sutton,,Graphs in JavaScript – Sean Sutton – Medium,2018-10-01 13:49:47,medium,"Graphs in Java Script To start off graphs are super powerful data structures used in Java Script to show the flow of computation, data organization, etc. One example would be the structure of a website with the pages being nodes and the links between those pages being edges. In this article I’m going to show you how to set up one of these graphs. First step to making your new awesome graph is the constructor. All we’re going to put in there is a object called node List. it’ll contain all of our nodes you’ll add. Now that the constructor is set up. We need to make a away so that we can add new nodes. In this function the node is a value and its being declared a key on our node List object. A object is assigned at that key with a val property assigned to the node value and a edge List property assigned to a object which well hold all of the nodes edges. Since our graph now has the ability to take in new values we’ll need a way to test if a value exist on our graph. this is where a contains function comes in. It takes a target value as a parameter and we return a ternary phrase based on if node List contains a key === to the target. So were able to add things and find things but what if we wanted to delete nodes. This remove node just like the contains takes a target value as a parameter. remove Node’s function body starts off with a for in loop in which we take every key in the target’s edge List and delete that keys reference to the target node. After the for in loop as ended we delete the target node and all references to and from our target node have been deleted. A graph without edges isn’t much of a graph. Edges allow us to a references/ connections from one node to another. They allow values within our graph to have relationships. The function above allows to do this. add Edge takes two parameters a from Node and a to Node . They two lines of the function body are mirrors of each other. The first makes a reference to the to Node in the from Node’s edge List . While the second makes a reference to the fron Node in the to Node’s edg List. Now both nodes have a refernce pointing to the other. Just like our contains function above this has Edge function allows us to find out if a particular value resides with in our graph in this case the function well be looking for edges. The has Edge function takes two parameter from Node and to Node and returns if the value at fron Node in the nodes L Ist has a edgelist and Does it contain a key to Node. Finally we need to be able to delete a edge. this remove Edge takes two parameters from Node and to Node. Sort of like our add Edge we have flip floped lines . The first deletes the to Node reference in the from Nodes edge List and the second deletes the from Node reference in the to Nodes edge List Now our graph is fully built we have the ability to add, find, and delete edges and nodes . This super powerful data structure is becoming more and more prevalent in the tech industry. The more comfortable we get with them the better they serves us in our coding careers","['JavaScript', 'Coding', 'Codingbootcamp', 'Javascript Tips']",https://medium.com/@seancsutton1/graphs-in-javascript-d00b95585cff,0,[],0,0,sean,M,0.007009713460080397,0.9929902865399196
Jacob Acosta,,I’m featured in a game! – Jacob Acosta – Medium,2018-03-07 07:21:38,medium,"I’m featured in a game! One of our projects is the Snake Game. In it, we track a cell and track down another cell and make something happen when they collide. In the snake games some might be familiar with a snake cell chases down apples. Each time it ‘eats’ an apple in a collision the snake gets larger by adding a cell to it, and the apple reappears somewhere else in the screen. A year or so ago friends debated whether I should be ‘ Jake the Snake’ or ‘ Jake from State Farm’ for Halloween, and the names collided and ‘ Jake from Snake Farm’ ultimately received the most endorsements. My Slack name for the Slack channel is Jake From Snake Farm, and after seeing that and me buying carrots from the nearby farmer’s market my cohort-mates made this version of Snake. Big shoutout to Philip and Joseph! haha Instuctions: Use the up, down, left and right arrows to move my face over the carrots. Crashing into the walls means the game is over. https://jake-the-snake-game. firebaseapp. com/",['Codingbootcamp'],https://medium.com/@acosta.jacob.d/im-featured-in-a-game-93d0d06364ad,0,[],0,50,jacob,M,0.0024356479040408972,0.9975643520959591
Darrell Silver,Co-founder & CEO of @thinkful.,Dev Bootcamp got acquired too early. Now it’s out of business.,2017-07-13 14:25:11,medium,"Dev Bootcamp got acquired too early. Now it’s out of business. Last night we learned that Kaplan Test Prep is shutting down Dev Bootcamp. Maybe this means bootcamps are dead? I mean, Kaplan has infinite money and D B C was the pioneer of a now nearly billion dollar industry that’s only five years old. Why shut it down? It wasn’t incompetence, though that’d be easy. D B C, Kaplan, Kaplan Test Prep, and Graham Holdings are all run by career educators with a keen understanding of how to build successful education companies. Dev Bootcamp failed because it was acquired too early. Kaplan, with its regulatory infrastructure and 80 year old brand, couldn’t justify the big risks necessary to innovate in this competitive market. In the three years since the acquisition D B C had to keep to only one web dev program (imagine the finances of a college if it only offered one major) despite clear adjacent opportunities in design, ux, etc. D B C had to stay only with rails while many of its peers moved to full stack Java Script. D B C couldn’t report student outcomes despite pleas from C I R R and others. D B C couldn’t offer any form of money-back promise or guarantee, alternative funding, or test corporate sales. In the end, two great forces came together for an amazing opportunity and the result was less innovation. Startups in education have to walk a very thin line: Take risks to innovate (as all startups do) but don’t ever E V E R put students on the line for those risks. So where an Instagram can add a feature and cut it a month later, schools adding a new program must commit to every student who enrolls for the year(s) it takes them to succeed, even if that means it’s a major financial loser for the business. If Kaplan had made the acquisition five or ten years later D B C would have had the chances to work this stuff out on its own dime and oversight. Dev Bootcamp will not be the only school closing this year. Coding schools are pretty mainstream but the space is still crowded and only a few schools have the combination of talent, reputation, and investors necessary to innovate fast enough.","['Programming', 'Codingbootcamp', 'Coding']",https://medium.com/@darrellsilver/on-kaplan-closing-dev-bootcamp-30e568677f40,5,['Dev Bootcamp'],1,70,darrell,M,0.007425897426272788,0.9925741025737272
Rai Lee,,Using APIs – Rai Lee – Medium,2017-06-06 15:23:30,medium,"Using A P Is What are these things called A P Is? I might be completely wrong, but an A P I ( Application Program Interface) is a way for an application to send out data to its users, the data is usually sent in J S O N or X M L. The data in J S O N format looks something similar to the first picture below. Getting started Most A P Is will require a verification key in order to use it. This protocol is to ensure that the A P I isn’t abused. In addition to that, it’s always a good idea to read through the A P I’s documentation. Let’s take a look through Authentic Jobs A P I documentation. From the picture above, you can request an A P I key through the green link. The base U R L is ‘https://authenticjobs. com/api/’ and parameters will go after it (parameters are usually separated by ‘&’, but always read the documentation to make sure). If our A P I key was ‘a446a0eefe6f5699283g34f4d5b51fa0’, method was ‘aj. jobs. search’, and we wanted the A P I response to be in J S O N format, then our request url would look like this (the url below probably will not work because it’s not a valid api key):‘https://authenticjobs. com/api/api_key=a446a0eefe6f5699283g34f4d5b51fa0&method=aj. jobs. search&format=json’ After this, you’ll receive some data back and you can use it as you please. Code on!","['API', 'JavaScript', 'Coding', 'Codingbootcamp', 'Computer Science']",https://medium.com/@railee_68271/using-apis-75ca5d09b8db,0,[],0,0,rai,M,0.3049645390070922,0.6950354609929078
Ed Daniels,,Feeling Okay – Ed Daniels – Medium,2016-08-04 02:37:55,medium,"Feeling Okay It’s the middle of week 3, and I feel like things are starting to come together. The things we are learning are still really difficult to grasp, but I feel happy to complete the assignments (to the best of my ability). A class mate told me that it usually takes people 1 year to learn the material that bootcamp graduates learn in 12 weeks. Usually that ratio, I have learn 3 months of material. I get really fried and I most of the time, I feel my brain is at full capacity. I have to keep reminding myself that, it’s supposed to be hard. “ Nothing worth having comes easy. ” — Scrubs One thing that keeps me going, is that fact that I don’t hate what I’m doing. It feels nice building things from scratch, finding solutions to problems, and helping my classmates when they have an issue. It’s great that they can help me when I have problems. There’s some real power in coding.","['Web Development', 'Codingbootcamp']",https://medium.com/@eddanieles/feeling-okay-11d0ceee89a7,0,[],0,0,ed,M,0.006266616027345234,0.9937333839726548
Sven Waweru,,This is NOT Another “My Bootcamp Experience” Post – Sven Waweru – Medium,2017-07-26 18:33:33,medium,"This is N O T Another “ My Bootcamp Experience” Post July 6th marked the one year anniversary since I made the decision to attend a coding bootcamp and change my career path. No, that was not my first at the bootcamp, but rather the day I concluded it was the path for me. I spent the next five months planning and saving so I could quit my job and begin the journey to my career. That said, the goal of this post is not to provide a dive deep into my experience at a coding bootcamp. A quick Google search of “my experience in coding bootcamp” will yield a plethora of blog posts and You Tube videos that provide numerous versions of such a deep dive. My goal here is to leave you with five pertinent (and candid) takeaways for you to keep in mind as you vet the viability of attending a bootcamp yourself. All coding bootcamps are N O T created equal Remember that Google search I recommended before? If you look through enough of those search results, you are bound to come across a couple of people who did not have a positive bootcamp experience. Bootcamps are expensive. Many onsite options range from $10, 000 — $20, 000. When you factor in the opportunity cost of not working for three to six months, its true cost is even higher. You should thoroughly vet bootcamps before committing to one. This may seem like an obvious move to some, but in the excitement of making such a major commitment one can sometimes lose sight of performing their due diligence. Consider multiple bootcamps. There are a lot of bootcamps to choose from today. Not all of them are created equal. I came across numerous bootcamps during my search including Zip Code, Coding Dojo, Betamore, and General Assembly. I ultimately decided on Coding Dojo as their program offered me not only the opportunity to learn the Python and M E A N stacks, two stacks I had an interest in learning to further my newly evolving programming skills, but also because their focus is also centered on learning how to learn how to code. I did not want to go to a bootcamp where the focus was simply on lecturing you on the coding standards of today. I wanted, and needed, a place where I could cultivate my ability to learn and apply new skills and technologies. While Zip Code, Betamore, and General Assembly all provided strong programs, Coding Dojo was the best fit for me. Make sure you diligently vet all bootcamps you are considering. Be unapologetic about the due diligence you perform and select the option that is best for you. Prepare Prior planning and preparation prevents piss poor performance. Piss poor performance produces pain. The Twelve P’s is a great mantra to remember when embarking on this journey. There are two key ways you need to prepare for a coding bootcamp; set your financial plan, and do pre work. I am of the opinion that this process is best completed when you commit 100% of your time to it. I approached this with that perspective and am even more biased towards that mindset since finishing. Additionally, many coding bootcamps also strongly recommend this approach. The price tag you see for the program is just an aspect of the total cost for attending a coding bootcamp. Committing 100% of your time to this process means you will need money to live. If you are like me and have a family to support, then you will have to also factor this into your calculus. Consider your normal budget when planning your finances. Trim budgetary fat where possible. Unless you are fortunate enough to not have to worry about money then frugality will be your best friend here. For some, financing this journey means borrowing money to attend bootcamp. While I did consider this route, I do not have a particular affinity for student loans and settled on saving the money myself over a 6 month period. While there is no shortage of lenders willing to finance your bootcamp journey, the most important aspect of loans often lost in the excitement is the reality of having to pay them back. It is also important to complete work prior to starting your chosen bootcamp. I have seen the perspective of bootcamps regarding this span across the spectrum. Some recommend it while others have an established and required process for pre work. I recommend utilizing any one of many free resources available on the internet. This helps accomplish two key things. First, it gives you the opportunity to ensure this is truly the road you want to take. If spending an hour a day learning something new about coding or development seems like torture now, it will be unbearable during a bootcamp. It’s much better to find this out before investing thousands of dollars and countless hours of time on a bootcamp. Second, it gives you some level of foundational knowledge going into your bootcamp. Any help reducing the intensity of the learning curve will prove helpful. free Code Camp is a great resource for this. Udemy also provides access to some good resources. You will get a great foundation to build your new career An increasing number of employers are hiring bootcamp graduates. I believe at least part of this trend is owed to an appreciation for the level of practical and provable knowledge bootcamp graduates are bringing to the table. After attending a bootcamp you are armed with both the knowledge of not only how to write code, but also the ability to architect full stack web applications. This is no small feat; especially given the timeline of many coding bootcamps. You will not come out prepared for every job opportunity (and that’s okay) Armed with my new skills, I attacked the job market in dogged pursuit of my next opportunity. During this process I ultimately had a technical interview that I utterly bombed. I am talking about an interview that went so bad that I knew 10 minutes into it that I would not be continuing in the interview process. Did this mean that I was a terrible developer who wasted thousands of dollars and 20 weeks of his life trying to be something he could never be? Absolutely not! The reality is that if you go on enough interviews you are bound to run into a situation where you are interviewing for a role you do not have the knowledge set to enter into. The reality is also that the job market is flush with opportunity and the chances of you landing a role where they can contribute appears to be pretty high. Those that are geographically flexible will likely have an easier time landing that first role. You literally get out of it what you put in A bootcamp can only provide you with the structure, you have to invest the time into making the most of the journey. The reality is that much of the value that can be derived from attending a coding bootcamp is a function of time. Time learning. Time coding. Time debugging. Time coding some more then refactoring your code. Time. Time. More time. There will be some long days in front of your laptop much to the detriment of your social life. It’s best to set the proper expectations with your friends and family before you begin your journey. This not only helps them understand how life will be for you over the coming weeks but also helps you understand the gravity of what you are undertaking. What to take away Remember that this is your journey. It has to be worthwhile to you for it to be worthwhile. Do your research when vetting bootcamps. Don’t be afraid to ask them the difficult questions you may have. This is your time, money, and future. Be deliberate in your vetting then select the bootcamp that is the best fit for you. Prepare for your journey. Once you begin, always remember that there is light at the end of the tunnel. Invest into it what you expect to get out of it. Enjoy the ride. Be challenged, not stressed. Most importantly, have fun. Happy coding.","['Programming', 'Codingbootcamp', 'Coding', 'Career Change', 'Career Advice']",https://medium.com/@svenw/this-is-not-another-my-bootcamp-experience-post-63db1d3fa85,2,"['Coding Dojo', 'General Assembly']",2,1,sven,M,0.0,1.0
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,K.I.S.S. (Keep it Simple: Sequelize) – L.J. Yockey – Medium,2017-07-16 19:50:45,medium,"K. I. S. S. ( Keep it Simple: Sequelize) My time in Vegas is coming to a close. I have booked all of the necessary arrangements for my move back to Los Angeles. In 3 weeks, I’ll be a Californian once again! I’m about as happy as a dog on a surfboard. Of course, with great excitement comes great anxiety. I’ll be staying with family and have a decent amount of money saved up, but the idea of moving out-of-state without a job lined up is still frightening. Thankfully, the team at Thinkful provides career services after graduation. My portfolio is just about finished, as I had already done some work on it while I was taking Codecademy courses. Most importantly, I have to finish my final Capstone prior to moving so that it can be on my portfolio, too. It feels a little bit like a race against the clock, but I like the pressure. Of course, one problem with the somewhat-frantic approach to finishing a project, is that it may take a little longer than normal to take a step back and realize that I’m over-complicating things. For example, in my S Q L database, I have two separate tables: Friends and Users. When making a G E T request for Friends, I wanted to access some information from the Users table, using data from Friends as a parameter. I thought the best way to do that was to have a G E T request for Users nested inside of the response from my G E T request for Friends. Here is actual (not really) footage of Amy Poehler holding a visual representation of the route I tried to build:…. and here is an actual screenshot of the route I tried to build: This is actually a relatively clean version. The further I got into troubleshooting the issue, the uglier the function became. I didn’t take any pictures of the function at its worst. Trust me, it was bad. After playing with it for a little while with Elias, I concluded that there H A D to be a simpler way to do this. I figured I could structure the model to to pull the corresponding information from both tables. I was wrong about the models, but I was on the right track. Thanks to the wonderful, amazing Sequelize docs, I found what I needed. Here is a screenshot of my G E T request now: I’m getting much more comfortable reading documentation, which is great! But it also makes it that much more frustrating when the documentation doesn’t provide the answers I need. For example, my Nav component was rendering a bunch of extra white space, which I probably would have overlooked if it wasn’t severely altering the design of my page. The “react-text” comments and “&nbsp;” only appeared in the Nav component. Long story short, I learned the hard way that copying/pasting code from Apple Notes into Visual Studio Code translates into funky character encoding. The issue was fixed by redoing all of my indenting. The last hurdle is authentication, which, admittedly, I’ve been avoiding. I have my routes setup to protect certain endpoints and I’m confident that I know what to do with the state. The primary hurdle is making a proper A J A X call from the client. I’m using Passport J S with both Basic and Facebook strategies. I told Rachel that I might ditch the Basic Strategy and require users to login with Facebook, but she wouldn’t allow it. Moments like this, I’m really glad I joined Thinkful. It was so tempting to try to take the easy way out of projects when I was learning on my own. Rachel keeps me accountable. Rachel (as well as countless other students and mentors at Thinkful) help give me pointers when I’m stuck, which keeps me motivated. The temptation to take the easy way out has mostly vanished, for now I have the confidence to find the answers that I need and help others who are also stuck. I even answered a Stack Overflow question for the first time! I truly feel like I’m part of the Web Development community now. Thanks for reading!","['JavaScript', 'React', 'Sql', 'Codingbootcamp', 'Nodejs']",https://medium.com/@Ljyockey/k-i-s-s-keep-it-simple-sequelize-a8ceebd0f561,0,[],0,1,l.j.,Unknown,Unknown,Unknown
Jacob Moore,,Day Two — Learning by People – Jacob Moore – Medium,2017-07-18 13:17:04,medium,"Day Two — Learning by People Yesterday afternoon/early evening we finally received our first four assignments and assessments, mainly focusing on H T M L. I know the assessments and the assignments were pretty long and would likely take some people a good chunk of time to complete. Fortunately I took the Web Development Basics class that covered H T M L, C S S, Java Script, and j Query. I say fortunately because everything in the night’s work I understood and could probably teach to someone pretty easily the use of tags, different types of tags, and nesting. There was fortunately some new items that I got to grasp that I had seen but didn’t understand so that’s helpful. Also I think it would be helpful to record what I struggled with, understood (simply), and what I’m looking forward to. So I’ll try to keep that structure going forward. Struggles: Git. We spent a good chunk of the day yesterday getting everything set up correctly and I really struggled with Git. Not the commands or even merging. That was easy enough. What I struggled with was actually setting up my Git locally and pushing to Git Hub. Turns out I had an issue with S S H Keys. Then I struggled with connecting a local repository with a remote repository (ie. Git Hub). Turns out I needed to use $ git push remote add url and then $ git push remote add origin. Lesson learned. I’m sure with more practice I’ll pick it up faster. Understood: H T M L. Honestly because of the Web Development Basics course it makes sense. Sure Attributes and how they are being used is still relatively new I was however exposed to them. Fortunately we got a list of Attributes sent to use that should be really helpful going forward. Looking Forward: The next few weeks we do swapped learning and students teach each other. In previous experience I loved this so I’m kind of excited to see how it all works out. There’s something about showing someone how to do it and asking questions of them on how they did it. It makes it easier to digest as you have to teach someone that knows just about the same amount of information as you.","['Git', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-two-learning-by-people-cc67bdb2bc29,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Haseeb Chaudhary,Cyber Security Architect https://www.linkedin.com/in/haseeb-chaudhary-07695938/,The Beautiful Struggle – Haseeb Chaudhary – Medium,2018-07-08 08:42:33,medium,"The Beautiful Struggle It’s been four months since I left an amazing job as a cyber security architect at one of the worlds largest ecommerce platforms to enrol in the worlds best coding bootcamp according to Switch Up. I’ve been very lucky to have worked in cyber security for nearly 20 years now (network security, secure design and appln security engineering) in different cities across the world for some of the most well known global banks. However, I always I had this nagging feeling that I really should learn how to code properly…for a number of reasons which I’ll describe shortly. What about learning during the evening, a night class? I tried to pickup up C and Java during evening classes and studied on my own, the problem was my professional life was just way to busy — so by the time I got to evening class I was completely wiped. “ I’ll do it during the weekends” I thought to myself. I learnt little bits but never enough to actually code anything of note. “ I’ll learn during work” I promised myself. Well I knew scripting languages enough to get by with, mostly Perl, and was exposed to snippets of orientated programming ( O O P) but trying to get my head round O O P really needed time. The spark that lit the flame What initially sparked my interest was a conversation with a younger cousin back in 2015 who described the all immersive experience of a coding bootcamp in San Francisco. He was describing Hack Reactor, a well known coding bootcamp that aims to cover the latest coding techniques and methods within three months. The reason I was interested can be summed up as the following: Taking time out of my professional career every 5 to 10 years is important to me Understanding object orientated programming ( O O P) was going to help me professionally, as within Cyber security we think about hacker attack techniques and cunning bits of tech we engineer to stop these attacks. Being able to understand O O P and work with Dev Ops teams to improve their S D L C as well as write specific code to test our security controls applied really is the next frontier within Cyber Security in my view. It was exciting to think what I might do with my new skills…the unknown. I researched bootcamp options further and decided upon Iron Hack. It sounded like a complete nightmare: starting at the basics and then getting students to understand the current trends, weaving together bleeding-edge tech and finally building a real useable web application. I was hooked. Anyway, life took over. My prized possession was a high performance Porsche Carrera 911 that out of the blue developed an engine problem. After some diagnosis it was a worst case scenario: complete rebuilt of the engine that was going to take months to complete due to the intricacies involved. As a consequence, I found it hard to justify leaving work with an expensive repair bill on the horizon. Would I ever make it to the bootcamp? The months passed and I was enticed into other exciting Cyber Security work. Before I knew it two years had rolled by, I was keen as ever to learn O O P and was based in Barcelona. I finally took the plunge during winter 2018 and left what felt to me was the best job in the world. I contacted the bootcamp and was about to pay the deposit fee. As an act of due diligence I double checked the other bootcamps in Barcelona: I emailed them all to confirm the syllabus and availability. I got an email from Le Wagon and had an interesting conversation with the school’s owner, an interesting fellow called Gus. Le Wagon seals the deal I visited the working environment of Le Wagon Barcelona and was impressed, lots of natural light in a nice part of the city. In-addition, for me attitude is super important — after meeting Gus it seemed the school was genuinely interested in helping students learn to code with a strong emphasis on teaching practical skills, so that students can actually build well designed web applications. I signed up as quick as I could! You define your reality A few days after the bootcamp started it was clear I’d made one of the best decisions of my life. The daily routine was roughly as follows: I travelled to Le Wagon from my home in Tibidabo (mountains overlooking Barcelona) on my Intruder 125 cruiser, a breathtaking daily commute; morning lecture sometimes up to two hours long; a quick caffeine injection at a nearby cafe in which we became the regulars, and then onto practical coding exercises to cover the course material. The pace at which we were going for me was horrific, way too fast to really understand and digest the core principles; however, there is no other option as its a bootcamp that aims to cover a lot of ground. I did find the live code sessions at the end of the day very intense so I chose to concentrate on going through the day’s exercises more thoroughly instead. In the evenings I would try and go for a mountain run, have dinner with my beautiful wife and then back to coding again at my home desk. The Beautiful Struggle on my Suzuki Intruder 125. A number of times I was reminded by the teachers that I may find the pace too fast and not to freak out. Personally, that wasn’t an issue whatsoever. I was used to feeling like a complete moron both in my previous academic and professional life. As an undergraduate Chemistry student and then later as a Masters Physics graduate, not having a clue about what was going on was second nature to me. I felt very much at home. Also I had the added benefit of my professional life where I would routinely go into emergency meetings with engineers, developers and architects from dispersed global teams to discuss real technical problems that were costing us a million euros a minute (until they were fixed), so living under the barrel of a gun was the daily grind for me and I loved it. There were no breakdowns, no moments of get me out of here, of why don’t I understand this? Being humble and accepting there is only so much I can take in during one day helped me avoid any such drama. Instead, I can only describe it as a beautiful struggle defined by lots of inspiring conversations during coffee breaks, meeting new people and learning a lot of web application tech and architecture principles …. very, very quickly. We have a verse in Islam “there is one reality but reality and you define your own reality”. This is written in Arabic all over the Alhambra in Spain and reminds us that our limited time in this world is beautiful, if we choose to believe it. Birth of Ceziam and the future During the last phase of the bootcamp we work on a personal project and pitch it to the class. I proposed of a web application that was cyber security focused and was lucky enough to have fellow students who also wanted to work on it with me. We discussed it through, developed our ideas and within a few days Ceziam was born. The domain name was bought and we got coding. Ceziam is a feely available and easy to use web application that identifies core Cyber Security risks. What really stood out during this period was how well we all complimented each other, I really could not have hoped for a better project team. We were a real team with a shared vision and importantly there was a very healthy level of respect and trust between us. Our core principle is let’s make a great Cyber Security product and have fun doing it…only good things will follow. So, here’s to living with the wind in your hair, taking a chance in life and trying to reach higher. I don’t know if Ceziam will be widely used by developers and engineers, I don’t know if it will democratise Cyber Security but I do know I’ve learned a lot, met many inspiring people and am a better person today. If there is one life lesson I really do believe in: it’s never too late to try! If you have that thing in the back of your mind you know you want to try and you feel it will make the world a better place, then take that first step. Early version of Ceziam","['Coding', 'Codingbootcamp', 'Cybersecurity', 'Code', 'Barcelona']",https://medium.com/@haseebchaudhary_98209/the-beautiful-struggle-f7df22c7500d,1,['Hack Reactor'],1,93,haseeb,M,0.0,1.0
DevMountain,DevMountain is an industry-leading tech bootcamp teaching code & design. Our community loves sharing our craft & empowering the next wave of makers. #devmtn,How to Succeed in a Tech Job Interview – The DevMountain Blog – Medium,2017-01-03 21:46:12,medium,"How to Succeed in a Tech Job Interview Tech job interviews aren’t quite like interviews in many other industries. Due to the fact that tech jobs are very technical and require specific skill sets, and because starting salaries are fairly competitive, employers will want to be very confident in your qualifications before signing off on you. So how do you convince interviewers that you are right for the job? Here are a few tips on how to succeed in a tech job interview. 1. Come in With a Strong Resume Most of the legwork for this part will be done before you even get the interview. Make sure that your experiences, education, and references are in line with what you want to be doing with your career. It’s difficult to impress an employer as a self-trained coder because you only have yourself to back you up. Getting an education and a degree will give you credibility from the get-go, and makes it easier for you to get an interview in the first place. Dev Mountain’s coding bootcamp is the ideal solution, giving you a quick way to gain valuable experience and qualifications from an incredibly reputable organization. You’ll pick up great references in the form of your professors, who are themselves coding professionals who have worked in the fields you’ll be applying for. You’ll also have an impressive keystone project that you can show to potential employers so they can see the skills you’ve gained firsthand. Having an impressive resume will help you get more interviews, and will paint your interviewer’s impressions of you from the get-go. 2. Understand the Company and Position Thoroughly Prepare for the interview by making sure you thoroughly understand the company and position you are applying for and the expectations the company has for a prospective employee. You should be able to confidently explain why you are an excellent fit for the position, and why you are excited about it. Likewise, knowing what the company’s goals and challenges are can help you focus your responses to things that you know the company will find most useful. 3. Be Ready to Demonstrate Your Abilities A big way that tech interviews are different from many other types of job interviews is that you may be asked to demonstrate your abilities to your interviewer. This may come in the form of a test, or they may ask you to show them a portfolio or previous work. Before heading to an interview, prepare a flash drive with impressive and relevant work that you have already completed. 4. Leave a Good Impression No matter how unique tech job interviews are, there is one way in which all interviews are the same. You want to present yourself as professional, likeable, and a team player. You’ve probably heard many of these tips before, but they are important and worth repeating. Make sure you arrive to your interview early. This ensures that you won’t be late because you couldn’t find the building or office you were supposed to arrive to. It will also help you calm your nerves before the interview. Arrive well dressed and well groomed, and treat everyone you meet with respect. Our appearance and manners have a larger impact than we sometimes think. Ask thoughtful questions during the interview. This could include questions about specific needs the company has or if there are any concerns the interviewer has about your resume. Before you leave make sure to thank the interviewer for his or her time and consideration at the end of the interview, and then again in an email or letter after you leave. While jobs in the tech industry are plentiful, competition for the positions you want may still be fierce. Arm yourself with the experiences and qualifications that will make you stand out as a valuable candidate by getting your education from Dev Mountain’s coding bootcamp. Our expert team of coding professionals has worked in your industry before, and they know what it takes to be a successful and competitive tech industry employee. You can learn more about our program and meet our team on our website.","['Interview', 'Jobs', 'Technology', 'Coding', 'Codingbootcamp']",https://medium.com/devmountain/how-to-succeed-in-a-tech-job-interview-5a6072769971,4,['DevMountain'],1,10,devmountain,Unknown,Unknown,Unknown
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18","JavaScript ""This"" - Advanced – J.Lim – Medium",2018-05-29 10:19:04,medium,"Java Script “ This” — Advanced J L’s Coding Bootcamp Story #6[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”5.  Summary of Code School’s “ Try j Query”6.  Java Script “ This” — Advanced( Current)7.  Java Script “ Code Reuse” — Part 1–1: Decorators8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes P A R T 1. Misconceptions of “ This” The keyword this is an identifier for values (similar to a variable or function parameter), this is designed to support object-oriented programming. Rather than assigning values explicitly in your code, you assume this gets bound to “the right object” automatically. Nevertheless, you have as much control in your code over the binding for this as you do over the bindings for function parameters. Also, you can’t always rely on the interpreter to bind this to the object that seems like it should be the “most focal. ” C O P Y R I G H T © 2018 Code States This behaves almost exactly like a parameter. Rather than being bound to a value supplied in between call-time parameters, this is bound to the object on the left of the call-time dot. P A R T 2. The Parameter “ This” Rules of how this gets a binding resemble rules of how positional function parameters get their bindings. C O P Y R I G H T © 2018 Code States C O P Y R I G H T © 2018 Code States Let’s assume you’re running your code with a debugger and paused on a line that refers to this. Scan outward from the keyword this and look for the closest enclosing braces that represent a function body. (* Ignore braces that don’t represent function bodies like braces for object literals and if blocks) After finding the function definition where this appears, look for where the function is called. (* In the debugger, you can find that place by looking one step down in the call stack. ) Inspect the syntax of how the function is being called to see which pattern is being followed. (* There are only five different patterns for how the keyword this can appear in your code. Each of these patterns is associated with a specific rule, which the interpreter uses to determine what this gets bound to inside the function for the invocation. After invocation pattern is used, you can predict which interpreter will bind to this. ) C O P Y R I G H T © 2018 Code States[ Note] This blog post is written based on a lecture from Code States. Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['JavaScript', 'This', 'Codingbootcamp', 'Binding', 'Tech']",https://medium.com/@j_lim_j/javascript-this-advanced-961e650a11f2,0,[],0,10,j.lim,Unknown,Unknown,Unknown
Kevin Ho,Software Engineer,How Fullstack Academy Prepared Me To Be a Software Engineer,2018-08-11 20:23:18,medium,"How Fullstack Academy Prepared Me To Be a Software Engineer During my senior phase at Fullstack Academy I’ve taken some time for self-reflection and found that my experience at Fullstack has helped me develop many virtues that have made me a better software engineer: Passion Before attending Fullstack Academy I had already coded in high school using Scheme and Python. However, it wasn’t until I started studying computer science in college did my passion for programming ignite. The world suddenly became lucid, I now understood the way that computers worked, inside and out, but also realized that things that I normally took for granted actually had complex programmatic underpinnings. At this point in my life I thought that I had reached the apex of my love for computer science, but little did I know how wrong I would be. Coming to Fullstack has amplified my love of coding and led me to an epiphany: The reason why computer science is beloved is because it’s an extremely dynamic field with a built-in positive feedback loop. There is a never-ending amount of content to digest and the assimilation of that newfound knowledge results in a greater appreciation of it. Each framework that I learned, Node, Express, Sequelize, React and Redux, contributed significantly to my appreciation of programming and inspired me to continuously learn new frameworks and technologies. My passion for programming coupled with my desire to benefit my community is what I find so alluring about computer science, it serves as a versatile tool that can be used to solve virtually any of the world’s major problems. Upon graduation of Fullstack Academy and Fordham University, I will dedicate myself and my life to making the world a better place, whether it’s by using blockchain to push for the mainstream adoption of clean energy, or utilizing artificial intelligence to make healthcare more efficient and affordable. Self- Discipline You’ll only get out of bootcamp what you put in. The material taught in Fullstack is fast paced and I’d never done any web development beforehand so to learn the most that I possibly could, I had to carefully plan my time. I needed to keep up with the labs and workshops, while also learning new material after class. Learning coupled with exercising and getting enough sleep initially proved to be very difficult. However, with each passing day my routine got easier and easier until one day it became automatic. I’d wake up before my alarm clock, work hard in campus, work out and then code for a few hours before getting my 7–8 hours of sleep. Because of this routine I went from:console. log(' Hello World!'); To: A coding challenge from Codewars Cooperation Before Fullstack, I’d never pair programmed in my life. I always thought that programming was something that was supposed to be done alone. However, during the program we pair programmed every day with a new partner and doing that completely changed my perspective on it. I realized that each partner of mine came with their own strengths and weaknesses and that I would have to change my style of programming and method of explication to be the best partner for them. Learning this skill and practicing it has been a major boon for myself and my partners. I realized that when both myself and my partner made the extra effort to help each other and guide each other through the workshops, our productivity and grasp of the material skyrocketed. From there I’ve gone on to build an e-commerce site selling digital Rick and Morty characters with three fantastic group members and am currently working on a progressive web application that aggregates restaurant reviews from multiple review websites with another great group of programmers.","['Fullstack Academy', 'Codingbootcamp', 'Coding', 'Programming', 'JavaScript']",https://medium.com/@kho9/how-fullstack-academy-prepared-me-to-be-a-software-engineer-e7245d0be8b3,3,['Fullstack Academy'],1,0,kevin,M,0.0045407502903025716,0.9954592497096975
Cristian Perez Ramirez,,My Bloc Journey – Cristian Perez Ramirez – Medium,2018-07-01 22:36:29,medium,My Bloc Journey Hello everyone. I will be documenting my experience with Bloc and learning to code via this blog. I will be posting weekly updates about my progress through the web Developer program and related topics. I’m excited to share what promises to be a challenging and rewarding journey with you.,"['Bloc', 'Codingbootcamp']",https://medium.com/@cristiangp777/my-bloc-journey-b31d6d17efd7,0,[],0,0,cristian,M,0.017876506984754736,0.9821234930152453
Carmel 6000,Leading The Revolution In Social Tech Innovation,Week 5: FINALLY Coding – Carmel6000 – Medium,2018-10-07 10:09:55,medium,"Week 5: F I N A L L Y Coding!! We returned from Sukkot on Tuesday and we have finally moved into our real office. We split up to teams, and each team got their own working room and project (or projects) for the upcoming two months. Each team was requested to pick themselves a name inspired by a inspiring woman. My team haven’t come up with a name yet, so right now we are called: ‘ Temporary positive name’. Each team has it’s own mentors, and my team’s mentors are Eran and Michal. Our P O is Reut and S C R U M-master is Ronnie. We had our first stand-up meeting and planning meeting, and we start to understand how to run the team work. We thought we will start working on Wednesday, after installing mobx and sass. So we were wrong. Eran decided that as his team we must use linux. Therefore, a quick installation on the team’s computers ended our relationship with windows. Welcome, Ubuntu. Eran taught us basic commands and we installed V S Code. Its Thursday! And we finally start to code. Everyone knows their task and tries to complete it. Its a good feeling to work on a real project, and to finish the week knowing we have a lot of work for the further weeks. Reut Schremer — 2018/2019 Carmel Participant","['Coding', 'Codingbootcamp', 'Tech', 'Women In Tech']",https://medium.com/carmel6000/week-5-into-the-real-cisco-offices-4d88756ff08d,0,[],0,10,carmel,F,0.8404368989671138,0.15956310103288615
Mike Grandinetti,"Serial VC-backed Entrepreneur, Sr.Lecturer MIT Sloan School, Advisor to Global Start Ups & VCs, Global Innovation & GTM Expert, TechStars Mentor, Public Speaker","Rise of the ‘self-taught’ developer disrupting recruiting, education",2016-09-01 14:29:04,medium,"Rise of the ‘self-taught’ developer disrupting recruiting, education This article, with my commentary, first appeared in C I O Dive, by author Justine Brown. http://www. ciodive. com/news/rise-of-the-self-taught-developer-disrupting-recruiting-education/416869/ Impressions: 6, 678 Programming languages can rapidly shift and evolve, leaving many a developer and company scrambling to keep up. But software developers and engineers do not rely on dated coding skills they acquired in school. Instead, 69% of today’s developers are primarily self taught and do not hold computer science degrees, according to the a 2016 developer survey from Stack Overflow, a online forum where developers can ask for and provide coding advice. Of the more than 50, 000 developers from 178 countries that responded to the survey, 13% said they were completely self-taught. Another 31% said they had no formal college or university training. Instead they had learning to code through boot camps, industry certification program or by teaching themselves, according to the survey. The trend of self-taught programmers appears to be on the rise. The programmers who indicated that they were self-taught increased from 41% in 2015 to 69% this year. As more self-taught engineers appear on the job market, some companies have to modify their recruiting efforts to keep up. “ The pace of technological evolution requires us to think beyond traditional recruitment and learning models and redefine talent, ” said Narayanan Nair, chief people officer at Ness Software Engineering Services. “ Those without a degree have taken the initiative to learn coding” and can have determination and grit. “ Education and previous experiences tell an important part of the story, ” Nair said. “ However, to remain current, software engineers today must also constantly adapt their skills to a changing technology landscape and business needs, ” which calls for equal parts critical thinking, attention to detail, and personal motivation when “learning and reinventing their skill sets. ”“ The future of work is changing profoundly, ” agreed Mike Grandinetti, chief marketing and corporate strategy officer at Reduxio. “ Tech companies must look far beyond conventional approaches in the war for the best programming talent. ” Changing recruitment practices for some companies has become the rule rather than the exception. “ Given the demand for developers, tech companies have re-examined the way they recruit and have gotten very creative, ” said Amir Pirnia, vice president of engineering at startup Hixme. “ This includes opening their candidate pool to self-taught engineers or even those that have learned in boot-camp settings. Actions, experience and reputation go further in this industry than a degree alone. ” Creative new recruiting approaches may soon be the rule rather than the exception. For example, Uber is sending people a coding game to play during their rides in an effort to find new software engineering prospects. If riders accept the test, they get three coding problems to solve. If they score well, riders are then prompted to get in touch with the ride-sharing company. Jason Aramburu, C E O and founder of Edyn, said companies absolutely need to emphasize these sorts of coding challenges during the hiring process. “ At Edyn, we don’t hire any engineers without a thorough technical evaluation first, ” Aramburu said. Not just for startups The propensity to hire self-taught programmers may depend somewhat on the type of company and how long it’s been around, however. Pirnia said for his startup, it was important to begin with a solid foundation, and hiring candidates with a few years of experience and proven success was important. “ The pace of (tech) evolution requires us to think beyond traditional recruitment and learning models. ”tweet this quote“ We don’t recruit right out of school, and because we want to establish a foundation for the company, we are less likely to hire self-taught developers in the company’s early days, ” said Pirnia. “ This solid foundation is critical to grow a startup, otherwise you run the risk of having to re-engineer everything when the company is ready to scale, and most organizations do not have that luxury. ” Pirnia said Hixme’s approach to recruiting is consistent to experiences he’d had with other startups, including Legal Zoom. But as the company grows , their hiring approaches could change. “ Once things are up and running, however, there is absolutely value in adding and mixing-in a wide variety of backgrounds for diversity and to keep fresh perspective on thought process, ” said Pirnia. “ For startups in particular, at the right time a self-taught person could end up being an ideal fit, because they had the drive and commitment to teach themselves what they need to learn and then seek to make the most of their investment. ” Drive over degree Self-taught programmers could prove particularly appealing to companies because they demonstrate a high level of drive and ambition. And in development-rich environments there’s always an aspect learning new coding languages and skills. “ When engineers join a company, they have to learn to use new tools and apps specific to that company, ” said Monika Fahlbusch, chief employee experience officer at B M C. “ Those who are self-taught will have an advantage in adapting to a new environment over those who were not self-taught. ” Almost 70% of today’s developers are primarily self-taught. tweet this quote“ Those without a degree have taken the initiative to learn coding, and often have the determination and grit we look for when recruiting, ” added Pirnia. Even those who have a degree need to be lifelong learners because programming tools can rapidly change and evolve. “ To remain relevant, you have to stay current — and that means regularly taking courses, ” said Grandinetti. Forcing a change in education The trend toward self-taught programmers has the potential to disrupt the traditional education model. Pascal Babin, director of engineering at Talend, said that while there are some fantastic engineering schools out there, there is still a dearth of good computer science courses. And those that do exist have a hard time keeping pace with emerging technologies such as Big Data and the Internet of Things. “ The long-term solution is really about schools having a more dynamic and flexible curriculum that can keep up with innovation and changing employer needs, ” said Babin. “ Perhaps we’ll even see more schools like the new Open Source School in France popup to address very specific market talent gaps. ” Babin suggests companies more proactively work with the education sector and directly with high schools and colleges to help build out and shape curriculums while contributing to course development. “ New approaches to I T education is increasingly important as there is an increasing perception that people with traditional degrees are too ‘academic’ in their approach relative to their more non-traditionally educated peers, ” said Grandinetti. As an example, Georgia Tech, a top 10 ranked program, expects students to work in the field while earning their degrees, Grandinetti said. Companies need to ask themselves how they can foster top talent and build from within. “ Not enough talent coming out of traditional colleges and universities means that companies need to create other methods to grow their current engineering teams, like internal bootcamps, ” said Fahlbusch.","['Programming', 'Education', 'Codingbootcamp', 'Coding', 'Developer']",https://medium.com/@mikegrand1/rise-of-the-self-taught-developer-disrupting-recruiting-education-a3e7c5a14ea,20,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
chibueze ukaegbu,,LearnFactory Internship: Day 3 – LearnFactory Nigeria – Medium,2018-05-03 05:57:50,medium,"Learn Factory Internship: Day 3 The journey of a thousand miles, begins with a step. Team L F Our rank of beautiful I T ladies increased today, with the delectable Grace Onoja joining us this afternoon, all the way from Benue state. I could see the extra twinkle in the eyes of the gents; they had better have some assurance o, :). Zoe, doing her thing… After morning prayers, we started off with another dose of Steve Harris’s Life is a Week series, listening in on Wednesday — the Season of Performance. He sure is addictive, and his words truly inspiring. We followed it with another fascinating video by Les Brown on Keep Digging. Our own dashing lady, Zoe, took them through several lessons drawn from the 2 audio programs; she was just outstanding. Lawrence completed the lectures on Git and Gitlab in the morning class; and then gave the interns their first taste of sleeplessness: they were given 2 tasks on bash programming —the first to debug a bash script which when given 2 parameters (a U R L and a destination folder), was to download the contents of the U R L to that folder. The second was to write their own script which would take 2 arguments (source file and destination location) and then copy the file to that directory. Bash script, for the crazy dudes :) And the sweetener: they are required to submit it by the morning, lool. I can’t wait to see what they come up with. These had them on their toes; in fact we had to chase them home by 7:30pm because they refused to leave; diligently focused on completely their assignment. Me, looking good :) After lunch, I spent 15 minutes to walk them through the Code of Conduct that would be our guide for this internship. It’s now beginning to shape up into a Boot Camp. Some had smiles, some had frowns, but all knew we are in for serious business. Matthew and the crew Matthew then took over and did an intense deep dive into using Visual Studio Code. Wow. We believe that an effective developer must clearly master his tool. Like the great Abraham Lincoln saif, “if you give me six hours to cut down a tree, I’ll spend the first 4 hours sharpening my axe”. They were really intrigued; you could see them twiddling with their editor to get the best settings that works for them. Late afternoon, our own Isaac then took them on another whirlwind tour through Advanced H T M L5, focusing in on Forms. They built a semi-complex form, beautifying it with C S S. He also had a takeaway task for them to complete. Selfie mode Remain a part of our journey; the heat is definitely getting hotter. I’ll see you tomorrow. i C Chief Code Smith","['JavaScript', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-3-f1d149dfda31,0,[],0,103,chibueze,M,0.0,1.0
chibueze ukaegbu,,LearnFactory Internship: Day 2 – LearnFactory Nigeria – Medium,2018-05-02 03:08:30,medium,"Learn Factory Internship: Day 2 Another day of fun; we deserve some accolades :) Fail Forward We were joined today by one of ours, Andrew Miracle, who came in from Uyo. He’s is another handsome face added to our team of awesome people. We began the day listening to the velvety voice of Steve Harris on day 2 ( Tuesday) of the Life is a Week series; followed immediately by the very challenging “ Will you please fail”, also by Steve Harris, a clarion call to be a doer and not a talker. If you have not listened to this, P L E A S E G E T I T A T T H I S L I N K (https://soundcloud. com/iamsteveharris/will-you-please-fail) A N D L I S T E N T O I T. From the intense faces of the interns, it was very easy to tell they were paying rapt attention. Steve Harris is no joke; with words searing your soul like a whiplash, he can get you off your butt and pursuing your goal. Lawrence doing his thing Today was Lawrence’s day, and boy, did he make us proud. During morning lecture hours, he took the interns on a journey through advanced Linux. By lunch break, they were all sweating but smiling. In the afternoon, after the break, he commenced with version control using Git and Gitlab. Already, the interns are feeling the heat, the fire is getting hot. And we are still yet in reviewing the pre-requisites, lool. After classes, some of the interns refused to go home; they stayed back practicing and digesting all the goodies unloaded on them today. My greatest lesson today: Rep until it hurts; fail your way to success. We will not stop, we will not be stopped, until we hit our goal. Interns, intense and coding And for the curious, this is our curriculum for the week Week 1 Curriculum I’ll see you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Apollostack']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-2-855b2509b8e7,0,[],0,74,chibueze,M,0.0,1.0
Robert Furtado,Founder of CourseCompare.ca,The “Half-Life of Knowledge” – Robert Furtado – Medium,2018-03-02 03:18:23,medium,"The “ Half- Life of Knowledge” Credit: Politico When an economist named Fritz Machlup first described the “half-life of knowledge” — the time it takes for half of someone’s expertise to become obsolete — he probably didn’t fully anticipate the race against time that had already begun. Machlup talked about the half-life of knowledge in the early 1960s, when an engineer could spend at least a decade in the workforce before he had to re-skill or build upon his existing education. Information technology has shrunk that number to fewer than three years for software engineers today. New Education Centre At Course Compare, we’re helping Canadians keep up in the race against time with a brand new education centre focused on school reviews, tech and business knowledge, career resources, and student success stories. Here are a few of our latest posts: Digital Marketing 101: Essential Reading For Beginners Product Management 101: Essential Reading for Beginners How To Find Canadian Tech Scholarships Can I Really Learn To Code in Six Weeks? New Schools and The Latest, Greatest Courses Course Compare is excited to welcome Lighthouse Labs, a Vancouver-based coding bootcamp (with a 95 per cent job placement rate for full-time bootcamp grads!) to our education platform this month. L H L helps expand our i O S course offerings with full- and part-time courses in Toronto and Vancouver. If you’re on the west coast, check out Canada’s leading coding bootcamps in Vancouver. We’ve also added new coding classes in Toronto and part-time digital marketing courses focused on S E O, content marketing and analytics. The Full- Life of Knowledge Information is now so cheap and abundant it practically floods over us through smartphones, television screens and email and text messages. This makes it more critical than ever to pause from time-to-time and think about what not to learn as we consider where to invest our precious mental energy. As with any platform, Course Compare is only as good as it’s ability to curate access to the best, most relevant information. For us, that means connecting you with courses that’ll help prepare you for tomorrow’s greatest job opportunities. So, stay tuned for new courses and, next quarter, two new subjects to sink your keyboard fingers into. Until then, happy learning!","['Programming', 'Digital Marketing', 'Codingbootcamp', 'Startup Life', 'Tech Education']",https://medium.com/@robfurtado/the-half-life-of-knowledge-75837185ec7,3,['Lighthouse Labs'],1,51,robert,M,0.004157260262072859,0.9958427397379271
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu (Voyage remix #2) – Chingu – Medium,2017-07-31 06:00:03,medium,"Overheard in Chingu ( Voyage remix #2) Random lines taken out of context from the Chingu coding cohorts! Let’s plan a meeting next week when I get back from Vegas My weekends are pretty open in general. We have a single 3 year old and my wife is very accommodating of cohort worki know a bit of german. :slightly_smiling_face: english and our language tagalog our dialect is bisaya Owls on fire :fiesta_parrot:@channel shall we schedule a session to discuss the user stories? The only thing holding you back is yourself and perhaps an empty walletworking, then working out, busy busy yo! Inspire bot says “ No matter how brilliant your mind or strategy, if you’re playing a solo game, you’ll always lose out to a team. ” - Reid Hoffman I generally find that just trying to jump into projects and then googling when you break things/can’t figure something out works pretty well. Right now I am doing Ph D in the field of Food Science in Zurich. but I have background in Physics I am camping this weekend and have been on data. I’ll be on a lot more on Monday! I’m camping at the moment as well. I’ll be around much more tomorrow. :doge: In india if you make anything compulsory it starts a black market zone on sidewhen you get to close that 3 browsers of 20 tabs open — theres nothing sweeter Great! if we have trouble communicating in English, Chinese could be a backup :slightly_smiling_face:[ Google hangouts?] There’s also skype. Disclaimer though, if the baby starts crying I’ll have to listen and mute til he settles down. he is obviously a mixture of several animals: tanukis (the Japanese version of raccoons), cats (the pointed ears and the facial expressions), and owls (the chevron markings on their chests and the “ooo”-ing sound they make with their ocarinas at night). ahhhhhhhhh we decided on a project!!! divided the tasks more and now got some A P I to read up!! this is fun!!! and scary at the same time :joy: Breakfast toquitos are both evil and the most awesome creation on earth. G O O D M O R N I N G, V O Y A G E R S! Hi! Our team project for Voyage is the Jobbatical clone. We are creating a Chingu Projects board where cohorts members will be able to add their project idea and form a team to build it. Members who want to join a project will be able to find one according to their skills or languages of choice. Huge shoutout to teammate @napstablook who’s been moving so fast on the app he’s almost impossible to catch up. The front end seems to be almost done and I’m almost done on the database stuff. I’ll update here soon 🙂hard coded a dummy beer database with the categories name, style, origin We do not accept your apologies @chance. You just interrupted a multi-billion dollar project meeting :wink:ive actually screamed out ‘fuck yea!’ and clapped really loud not realizing ive been coding for hrs and it was like 3am Instead of studying for my final I went and got a pedicure. Because…. priorities. I gotta say I have been enjoying this so far. I have been stringing together spaghetti code for years(even though C S helped me tame it a little bit) I feel like the biggest thing you get from these types of projects is how to think about making R E A L production ready code. That is why I feel pretty lucky to be working with you as P M because you bring the experience of the production process. @channel great first meeting guys super pumped to see this project through with you all!when i grow up i want to also build a bot Starting work on my Team’s Imgur Bot Today. I applied for 11 Freelance gigs on upwork today and got selected to work on 4 of them, 3 were related to linux system administration and one was to build a web scrapper and alerting service. Just got insanely lucky today… :slightly_smiling_face: It was fun…retaking test… wanna become I N T J…. I guess that is the beauty of the Internet Fun fact: This is actually the 3. complete overhaul of the app If we’re doing our “job” correctly it shouldn’t be hard to contribute to dev Gaido in the future. The codebase, even if a bit messy atm (because of the overhaul and no refactoring run yet), is pretty flexible and shouldn’t be too hard to understand once you have at least some idea of React. The trick is — don’t look at the whole thing, just look at the “next thing”. Please don’t eat elephantsthanks so much for taking a look, i will work on fixing those two bugs tomorrow. and thanks for your suggestions on the set State on unmounted component error too, that one has been plaguing me for a month. The biggest thing I am taking away from this project, is re-igniting my passion for leading and mentoring people. Something I have never had the opportunity to do in my career, but in other avenues of my life ( I used to be in Air Cadets and was and trained umpires). haha 7am isn’t even that early! I woke up at 5:30 this morning. I’m totally a morning person though :stuck_out_tongue: Your username make me want to eat miso, lol Guys anyone needs some help with local environment? I was thinking, that maybe if is useful for someone I could create some repos with empty Docker projects, with Mongo D B or My S Q L services, so you guys can consume it locally without the need of installing it on your machine. With a small readme we can put it up and running on localhost Real programmers don’t sleep, they pass out I am finally in Harvard!! Just kidding, i mean i just subscribed to Harvard C S You Tube videos :joy:. . Maybe with this mentality I can re-tune my mind to become abetter problem solver… So the lecture starts this week with Week 0. . Wish me luck!. . Atleast i will not dropout! heheh Lots of great discussion and ideas flowing here today. Time for me to start sifting through it to harvest action itemsand btw, my past chingu experience is just great — i discovered that my written English is good enough to write articles. p1xt guides was a treasure for me as wellheh, at the moment we have new-tab chrome-extension not just ready but(!) it is published in google chome webstore. it’s terribly simple, but if it was 31 of august today — i still could say that we accomplished somethingoh, another mistake a lot of people make on their resume, it’s not listing out and showing how/where you took ownership on a project. Apparently that’s what a lot of employers are looking for on a resume. It’s also why, I’ve asked you both to take ownership of a feature :slightly_smiling_face: Commitment is one thing, but I think you also have to be a little fearless. Yay! :slightly_smiling_face: I love the fact that I am getting a grip on git. Before this project I knew only the simple `add, commit, push` procedure, now it seems to be a lot more professional with all the fancy things :smile: Me too. Now I’m constantly checking what branch I’m on. My path right now is learning about reading M V C → learning/practicing modular programming → Webpack → React. Once I have that down I will start coding. I’m thinking 2 days. I might work on design in the meantime, at least a prototype. Yeah, shall we get together on screenhero? Tomorrow sometime? I can go through node with you and how I use it I also vote for chemok78. Chemok for the president!","['Programming', 'Chingu', 'Codingbootcamp', 'Freecodecamp']",https://medium.com/chingu/overheard-in-chingu-voyage-remix-2-35845df4504f,1,[],0,28,chance,M,0.024461428631419813,0.9755385713685801
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,I have a place in the dorms at 42 – Mike Brave – Medium,2018-08-09 08:49:07,medium,"I have a place in the dorms at 42 Edit: This is part of a series that culminated here, Next post. Previous post. Fantastic news, I got a spot in the dorm during the piscine. This saves me a little bit of my scant amount of cash but mostly it puts me close to the lab and saves me a ton of hassle. I’m so excited. I’m allowed to show up the day before the piscine, and checkout is the day after at 6 P M. They got back to me about it in less than 5 days, which is amazing especially on such short notice, I mean I signed up just over two weeks before the start date. Some details for anyone who follows this later on: This means living up to academic criteria and following the general policies. There will be roommates, between 4–6 per room. One bathroom to share between them. No kitchen, but yes cafeteria, don’t bring cooking things, there are microwaves. Free laundry machines. No guests. Bring sheets, blankets, towels, pillows and toiletries. Something to lock things up was recommended. I read somewhere to bring hangers and toilet paper as well. Drugs not allowed. Drinking in dorms not allowed. Weapons not allowed. There is a canteen, movie room, multipurpose room, gym, and study rooms. Other things of note, there was a deposit, but it was affordable (less than $50). If you don’t show or something it’s not refundable. If you trash the place you lose it, if your stay goes fine you get it back. Acceptance into the dorms seems tied to your ability to show that you are allowed in country, I sent a scan of my passport and it worked fine. I hope this is helpful to someone later on.","['Travel', 'Ecole 42', 'Dorm', 'Codingbootcamp']",https://medium.com/@themichaelbrave/i-have-a-place-in-the-dorms-at-42-3b1fc9c4e2c0,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Max Berger,,Make the most of Hack Reactor by taking good notes – Max Berger – Medium,2017-03-01 16:25:41,medium,"Make the most of Hack Reactor by taking good notes In a school like Hack Reactor, your time is valuable. You have a lot of work to do, and it’s easy to get overwhelmed. In order to keep up, note taking can be an effective tool. But if you’re not careful, your notes can turn into a jumbled mess, leaving you just as confused as before you started. By following this guide, you’ll be able to take clean, organized notes, which will help keep you sane in the following weeks. There are good reasons to take notes. If you are studying a topic that is new to you, and you’re not sure you understand something, write down what you think it means in your own words. This has many benefits. Now you can easily compare what you know with what you’re learning, and correct anything you got wrong. It also helps you when you need to explain the concept to someone else, such as in an interview. Notes are also useful when coding. When working with a large framework and trying to understand the flow, draw a diagram to figure it out. Write down how your algorithm should work before you start pseudocoding to make sure you understand it. It’s easy to understand why we should take notes, but the important thing is figuring out how to organize them. If your notes are disorganized, they won’t be much help to you. The simple answer is to separate your notes. You should have a section for the subjects you’re learning and a section for the projects you’re working on. In those sections, keep each of your individual subjects and projects separate from each other. I also like to have a section for jotting down random ideas and problems. When you finish a subject, it’s helpful to look back at your notes and see if you still agree with what you wrote. If not, go back and make some changes. If you know that you need to continue working on a particular subject, make a note of it. I like to keep a section where I keep track of all the topics that I need to research further. If you follow these tips, you should be able to take notes and keep them organized. This can be invaluable to making sure that you are really taking in what you’re learning. It also helps you to efficiently manage your time, since you will know exactly what you need to study. So if you don’t have a notebook yet, go and get one! Any notebook will do. You’re now ready to take great notes and enhance your learning!","['Productivity', 'Coding', 'Hack Reactor', 'Codingbootcamp']",https://medium.com/@maxberger_89970/make-the-most-of-hack-reactor-by-taking-good-notes-3f7024cec380,0,['Hack Reactor'],1,1,max,M,0.004684549053344715,0.9953154509466553
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",From Ski Instructor to Support Engineer – News on the Bloc – Medium,2018-02-01 21:02:23,medium,"From Ski Instructor to Support Engineer Blair took Bloc’s developer program and is now working towards her dream career as a Software Developer. We recently checked in with Blair to see how her new career is going and get her take on Bloc. Read on to learn more about Blair’s journey! Interested in learning how to code like Blair? Check out our career-changing developer program, the Web Developer Track, and talk with one of our Student Advisors. Tell me: what were you doing before Bloc? I was a Ski Instructor. Before that, I was a Chemistry Graduate Student. Why did you end up taking Bloc? I was looking for an industry to get into after leaving graduate school because of a bleak job outlook. I realized that the tech industry was growing and after taking some basic online coding courses, I knew development was for me. How did Bloc prepare you for your first job in a technical role? I think the best takeaway from Bloc is the ability to work independently on a technical project. Because Bloc is all online, students need to learn self-sufficiency when working on a development project and troubleshooting bugs. I learned persistence and research skills through Bloc, which I’ve utilized in my current position, and those skills have impressed my coworkers. How’re you liking your new career after being at your new job for a few months? I am beyond excited for my career in tech. I decided to take Bloc because I wanted a more fulfilling career where I could leverage my problem-solving skills and my passion for learning. I’ve achieved all that and more in tech, and I’m hopeful and positive about my career in a way that I wasn’t before Bloc. What’s your favorite thing about your job? My favorite thing about my job are the constant learning opportunities. I always leave the office for the day having learned something new. Whether it’s learning more about our specific product, developing Saa S applications in general, or how to communicate more effectively with coworkers, I get to soak up new knowledge every day and it’s exactly what I want out of a job. What’s the most challenging part of your job? The most challenging part of my job has been reading and troubleshooting legacy code. This is a task that I didn’t get experience with at Bloc, but makes up most of my day. Though the learning curve has been steep, I am getting confident in this task, and it’s the most useful skill I’ve learned at my job so far. What was the most challenging part of Bloc’s curriculum? The most challenging part of my curriculum was the first application I built on my own, without Bloc’s step-by-step instructions. For my program, it was a real-time chat application that used an Angular front-end and the Firebase backend-as-a-service. I remember looking at the user stories thinking “where do I even start?” and “maybe I’m not cut out for this” but once I started on the project, and got through some troubleshooting hurdles, I knew I was capable of developing applications from scratch. Did you find that Bloc offered a good amount of support throughout your program? Bloc offers an amazing amount of support. For me, my weekly meetings with my mentor were great support, and I really appreciated being able to speak to a full-stack developer twice a week. I’ve been pleasantly surprised at the amount of support I’ve received since I ended my Bloc program and started my job. I’ve gone to meet ups in my area with fellow Bloc students, and I’m still on the Bloc Slack channel. Bloc does a great job of making you feel part of a supportive community. What was your job interview process like? My job interview process was definitely rough at first. Being put on the spot to answer technical questions is very daunting — and I’ve even taken graduate school oral exams successfully. It took me a couple interviews to become confident speaking about development concepts. After I gained this confidence, I was more successful with the interviews. Do you think you got a good return on your Bloc investment? I do indeed! I can see an immediate return on my Bloc investment, more so than my undergraduate degree. I’m utilizing and building on the skills I learned at Bloc every day at my job. Bloc gave me the confidence and ability to pursue a career in tech, and I’ll be forever grateful because of that.","['Programming', 'Happy Alumni', 'Web Development', 'Codingbootcamp']",https://medium.com/newsonthebloc/from-ski-instructor-to-support-engineer-4316917be211,2,[],0,2,bloc,Unknown,Unknown,Unknown
Abdoul Diallo,// Love. Learn. Code. Blog.,Internet != Google || Facebook || Instagram – Abdoul Diallo – Medium,2018-05-16 18:04:46,medium,"Internet != Google || Facebook || Instagram Just surfin’ the internet …“ Internet” is actually just a shortened name for “ Interconnected networks”. The internet is a global collection of networks that are linked together in many different ways. Computers can connect to the internet through a modem (and wifi), and internet service provider, or a local area network. Every time you visit a your favorite site (favorite_site == learn. co) or send an email, data is being sent and received through an intricate cable system that stretches around the globe (literally). The first transatlantic cables were laid in the 1850s ( W H A T?!) to send telegrams between the Americas and Ireland. Currently there are over 300 cables stretching over 550, 000 miles of fiber optic cables constantly transmitting data between continents and countries. The cables are less than 3 inches thick and contain several fiber optic cables which transmit 99% of all international data. Laying a single cable across an ocean tables months and costs H U N D R E D S of millions of dollars. F A C T: That’s enough to circle the world 22 times (the F L A T Earth! :) H O W D A T A M O V E S Whenever you transmit data via the Internet, it has to be broken down, directed, and reassembled. Every time you send a message online, in the half-second it takes to deliver your message, there’s a lot going on behind the scenes. The first step is that the data you send is broken into “packets, ” or small data files that travel roughly two-thirds the speed of light, or 122, 946 miles per second. The second step is that your router uses transmission control protocol ( T C P) to direct your packets to their destination. But there’s one problem — T C P isn’t good at actually sending packets itself. It can write where it goes, but it can’t actually deliver the “message”. Hence why our modems use Internet protocol ( I P) to send the data packets to their destinations. They have to work together in order to send packets of data through the Internet universe. The third step is that after the modem, the packets go to the local Internet Service Provider ( I S P), which directs it to the long haul provider. The fourth step is for the packets of data to go through border gateway protocol to a collection of enormous data exchange hubs. The fifth step is that the data packets go to the destination’s long haul provider and their local I S P. Then the data packets also move through the modem and router of the destination location before getting reassembled. Lastly, once they’re reassembled, the information sent finally arrives at the receiver’s device, and they can see your message N O T E: No matter how quickly you can see information online, that data has a L O O O O O O N N N N G G G G G way to go. T H E D N S S Y S T E Mjean claude D N S’ing The Domain Name System allows the use of domain names. There are hundreds of D N S servers that direct local and global. There are 13 zone authorities in total and some control multiple locations. The D N S system is the way that everyone navigates the Internet. D N S associates I P addresses with specific domain names to make it easy to remember and navigate. W H O C O N T R O L S D N S?21 people in the world control D N S, which gives them the authority to maintain its integrity, to update it and ensure that we can use domain names instead of this: 45. 55. 127. 20214 “primary key-holders” have the authority to rewrite the D N S system within a coded machine. 7 are west cost and 7 are east coast. 7 “backup key-holders” have keys to remake a key-generating machine. D N S managers meet every three months in highly-secure, closed “ceremonies” to update D N S (hmmmm…). I E P Internet Exchange Points ( I E P) are huuuuuuge data hubs that process and direct packets of information. At any given second, they’re moving gigabits of data, shooting it around the world with pinpoint precision. There are hundreds of of I E P hubs scattered around the world. The United States controls more than twice the number of I E P hubs than any other country. In fact, it would take Brazil, Russia, and France combined — the next three countries on the list — to beat the U S in terms of I E P count. I N S A N E! B U T that does N O T mean that the U S has the fastest Internet connections in the world. The fastest are South Korea for desktop and Vietnam for mobile. T H R E A T S Just curious According to a research by Pew Report, there are four main threats to the internet. The first is the prospect of more nations cracking down on access to the Web and mobile apps, like Turkey’s recent Twitter ban and China’s long-standing “ Great Firewall. ” The second is a backlash against government surveillance programs in the wake of revelations about the U. S. National Security Agency ( N S A) and its British equivalent, the Government Communications Headquarters ( G C H Q). The third is the “pressures businesses are under to monetize the Internet” — especially when it comes to “net neutrality” and restrictive patent laws that could hinder innovation. The fourth threat to Internet freedom could be that we share too much information, making us reliant on the algorithms of companies like Google and Facebook to find information, filters that are often set with business considerations in mind (over people). However, T H E G R E A T E S T of all (which Pew missed), according to Prof. Tim Campbell at the Flatiron School and Tech Crunch, is S H A A A A A R R R R R R R K S! Why do sharks want to destroy_all(:internet_access)? If you say: “ Well, they’re sharks, and sharks want to maim anything in their path. ” That may be the most convenient response, but sharks are a carnivorous species so they do not consume cables and a shark would normally leave alone anything that it can’t eat. Besides, these cables are all the way all the way at the bottom of the ocean where sharks do not normally frequent. The leading theory, according to T C, is that shark can detect magnetic fields and therefore confuse the magnetic fields projected by the cables for the same kind of fields projected by a school of fish (aka foooooood!). This theory is reaffirmed by the fact that sharks almost never attack cables made out of copper, which don’t project the same magnetic fields. Some also hold the belief that sharks are just simply curious animals. They may not necessarily be biting at the cables for consumption, they just quench their curious thirst to know what the wiry things on the ocean floor are. T H E F U T U R E O F T H E I N T E R N E T A. K. A N O M O R E C A B L E S Google’s got Project Baloon Facebook’s Drones Space X’s Satellites References: Techcrunch. comicannwiki. comroot-servers. orgoneweb. worldhttp://www. businessinsider. com/animated-map-global-fiber-optic-internet-cables-2015-9root-servers. org","['DNS', 'Codingbootcamp', 'Internet', 'Sharks', 'Data']",https://medium.com/@diallo.abdoulrahime/internet-google-facebook-instagram-d0e8881ec894,0,['Flatiron School'],1,0,abdoul,M,0.0,1.0
Kyle Combs,Software Engineer | CS Resident | Music Nerd,Hard Learning: Everything’s Difficult Until You Know How to Do It,2018-10-07 20:09:40,medium,"Hard Learning: Everything’s Difficult Until You Know How to Do It Photo by Laith Abuabdu on Unsplash While waiting for my daily cold-brew coffee at Starbucks one morning this week I was transported back in time when the radio began playing a song I hadn’t heard in years: More Than Words by Extreme. Now say what you will about that song, but if you grew up in the 90’s and try to tell me you don’t know every word to it, I’m calling B S! Silly as it may sound, I have a special connection to that song, and every time I hear it I’m immediately transported back to a summer in the early 90’s when I locked myself in my room determined to learn how to play it on my pawn shop acoustic guitar. I was certain that it would have the ladies beating my door down. Up to this point in my quest to learn the guitar I had stuck to the simple 3 chord strumming patterns that everyone starts out with. More Than Words though, required fingerpicking and string slapping which at the time was a B I G stretch for me technically. There was no Internet. There were no You Tube tutorials to hold my hand through the learning process. I had to do it all by ear. It took me a couple weeks, a lot of hard work and dedication, but I can proudly say I did it! This morning as I sat down at my computer I was greeted with the following quote from my start-up page:“ Everything’s difficult until you know how to do it. ” — Anonymous As we wrapped up the second week at Codesmith’s Software Engineering Immersion, these words rang truer than ever. This week we moved from Java Script fundamentals to the front-end of web development: H T M L, C S S, and React J S. Front-end development is how the design you see on a website actually gets implemented on the web. While I had a decent bit of front-end experience coming into this program, this week taught me that there is always so much more to learn. This week wasn’t all fun and games, but we had fun, and there were games. We started the week out recreating the classic Snake game. Now if you’re like me and ever had a Nokia phone, I’m sure you have played A L O T of Snake. Simple as it may seem, let me tell you, just like a snake in real life, it was not easy to get it to move where we wanted it to. Later in the week was the real challenge for me though. We had to build a Tic- Tac- Toe game from scratch using React, something I had heard of, but never even seen before. Here at Codesmith, nothing is easy. If you aren’t struggling, you aren’t doing it right. This is part of the way they teach. Codesmith C E O, Will Sentance, calls this the “hard learning”. Many coding courses take the more conventional approach with tutorials that end up giving you the answer without making you work for it. I went through another coding course online earlier this year, and while I learned a lot from it, in the end, I didn’t really have a real comprehensive understanding of very many of the topics covered. At Codesmith, we start each new unit with a brief lecture about the concepts we need to complete the challenges, but then we are set free to figure it out on our own. After a few hours of struggle, we come back for another lecture where we get a few more tips on how to solve the problem, but then it’s back to the trenches. One night this week I stayed way after hours trying to break down one of these barriers in my Tic- Tac- Toe game. I told myself I wasn’t going home until I could solve this one thing. Around 10 p. m. as I stared at my laptop trying not to pull my hair out, our lead instructor, Phillip, came and sat down next to me for a bit of moral support. He didn’t say much more than “hmmm” or “that’s a very good question, what do you think” when I would try to elicit his advice. He was gonna make me work for it, but just his presence let me know he was rooting for me. After another hour or so I finally worked it out and man did it feel good! Phillip gave me a smile and I could tell one of his favorite things about being a teacher here Codesmith was seeing how excited we get when we finally break through that block. It’s been at least 25 years since I taught myself to play More Than Words, and while it never really helped me out with the ladies the way I hoped it would, I guarantee you I could still play it note for note if you put a guitar in my hand. I struggled to learn it, and because of that, it stuck with me. It’s imprinted in my memory and my fingers just know what to do. Only time will tell, but after that late night with Phillip, I have a pretty good feeling the next time I have to implement state in a React app, my fingers will know what to do then too. If you enjoyed this article, please give it some Claps and Follow me to get notified when I post something new!","['Programming', 'Codesmith', 'React', 'JavaScript', 'Codingbootcamp']",https://medium.com/@kylecombs/hard-learning-everythings-difficult-until-you-know-how-to-do-it-4966ac12448b,0,['Codesmith'],1,503,kyle,M,0.017754788200754927,0.9822452117992451
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 38 — Rewind – conshus – Medium,2017-05-03 10:45:00,medium,"Day 38 — Rewindliner notes: Yesterday turned out to be a kind of review / catch up day. Didn’t really go over anything new. We got together as a group and helped each other with any problems we’ve been having. Other than that, not much to report. Later, I went to the Code for Orlando meetup. I haven’t been as active since starting the bootcamp, but I try to attend so I can keep updated on the progress of the project. Today, I believe we are learning Re- Base. Supposed to be an easier way to integrate Firebase into React Js. Going back to this reading and working on this project. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Reactjs', 'Firebase', 'Coding', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-38-rewind-7511f6083210,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Preface — What is a W3Develops “Cohort”? – W3Develops – Medium,2018-10-03 01:27:40,medium,"Preface — What is a W3 Develops “ Cohort”? The single most important factor to your success in life is F O C U S. — Bill Gates & Warren Buffet Table of Contents What is a W3 Develops “cohort”? [2 min] What can I expect? [2 min] What to do if things do not work? [2 min] Conclusion1 — What is a W3 Develops “cohort”? The easiest way to think of each cohort is like this: A) W3 Develops designs, facilities and launches collaborative cohorts. B) A ‘cohort’ is a smaller group of motivated people who are working towards the same goals. What everyone shares in common is a desire to learn a skill and collaborate. C) An easy way to think of the cohorts is to compare it to a science laboratory. Science laboratories usually have a lot tools you can use to create an experiment. It has microscopes, chemicals, computers, etc. If you do not use the tools, you will not get the desired results. Science labs are like a Build- Your- Own- Adventure game. You take your theory to the lab and you build with what ever tools you want to use depending on your goals. In the same manner, if you want to improve your portfolio and learn how to work in a team, you can sign up for a project. Check out the Side Projects. We have P1 X T Study Guide Support Group, F C C Speedrun Challenges, Git Training, and much more… D) Each cohort lasts 5–12 weeks, and you can join another cohort after. Most people learn to get the most out of the cohorts by the second session. After about 3 weeks, we send out a way to signup for the next cohort session. E) The objective of each cohort is to provide a learning environment that people can use to accelerate and broaden their skills. By joining a W3 Develops cohort, you’re investing in yourself by working with others. You should come out of each cohort having made progress toward your overall goals and built a friendly network of friends. The metrics of success will be different for everyone. Some people get jobs, others finally find the motivation to code on a consistent basis when they see what others are building. Some people get their first experience working in a remote team, others get their first interesting project to put in their portfolio. And many others greatly improve their soft skills working with others, which is a fundamental skill developers rarely get the opportunity to practice prior to working. Everything about the cohorts is flexible and will always be a working experiment. We’ll always be improving things. What this means is just as you are constantly learning new skills and expanding your opportunities, so is W3 Develops cohorts. 2 — What can I expect? So you’ve joined a W3 Develops cohort? Congratulations! Now you can begin accelerating your learning, develop in-demand collaboration skills, and contributing to W3 Develops mission of building a global collaboration community for tech-learners. A place where developers, designers, data scientists and digital marketers with shared goals join teams to learn & build! 🚀 In your cohort you can expect a super friendly/supportive community of developers, designers and data scientists with shared goals. From across the globe (we’re talking 100+ countries). You’ll share resources and knowledge with each other, keep each other accountable, and of course, B U I L D in teams. Let’s also not forget: you will be challenged to level-up your skills. This is not a tutorial where you lazily follow through. Learning the basics of team collaboration is not easy, and it will bring you out of your comfort zones at times, but it’s a super power in today’s global economy. On that note: you can also expect that if you show grit, you’ll also come out with a shiny new project for your portfolio (some teams even build nonprofit projects or projects that create value for others). Here are the main routes to accelerating your learning: New friends & your a supportive coder network A W3 Develops Cohort is a global community of active learners with similar goals building and learning together. No more being alone in your coding journey. In W3 Develops, you’ll be surrounded by super friendly learners from around the world who are on the same journey as you. You’ll motivate, help, and push each other to reach your goals. Friendships, level-ups and hijinks ensues. 🚀 Build-to- Learn This is one of the guiding principles of a W3 Develops Cohort and also what we call our team developer projects. In W3 Develops, you will learn through building. No more running on tutorial treadmill without purpose. In W3 Develops you build/learn with a team and purpose. Events During each Cohort we host Talks, makeshift workshops, and nonstop collaboration opportunities. Subscribe to updates and keep current with W3 Develops news. It’s the perfect way for us to keep in touch! Also, if you’d like to get involved in these events (got an idea? know someone who would be great in an A M A? want to get involved in another way?) feel free to reach out!3 — What to do if things do not work? Sadly not everyone will make it across the finish line. Some people will sign up for a Cohort and for whatever reason won’t be able to commit. Essentially, life happens. People get jobs, go on vacation, lose interest in coding, all kinds of different things. Also, the above challenge is kind of the price paid for not charging a price. No one has to pay to get access to the opportunities, but we’ve noticed that the people who donate are usually the ones most committed to learning to code. Being financially accessible to anyone in the world — no matter their economic situation, where they’re from, or what their background is — is a big part of why W3develops exists and how the cohorts have been able to accomplish so much. For more info on how we have fix these issues please refer to the F A Q. Not all projects are going to go 100% smoothly. In fact, most team projects are going to be a challenge, as most people who join have never worked in a remote team before. This is a good thing, as these projects are a low-pressure way to get experience that can help you greatly in the future. Employers want to hire people with hard skills, but also people they can trust will work well with their team. What Happens If N O T H I N G Works? W3 Develops is not a school, it’s a coding network, collaboration platform and diverse learning environment. We are organizing these to the best of our ability because we believe they should exist and know it can help people get to places they might not otherwise get to. That being said, we all code, eat dinner, have jobs, hang out with friends, and other such things. The Stuff won’t always work perfectly, but please don’t get too mad — just know this is why we have the Ticketing System and Weekly Check- Ins. We are always trying to find ways to improve the cohort. Some of the best most brilliant projects were built from teams were only one person remains coding in their team to build the project across the finish line. V E R Y I M P O R T A N T: Sign-up for activities that are aligned with your main focus. The cohorts are intentionally flexible so that you have the freedom to shape the cohort to what works for you and your situation/schedule. That being said, make sure you sign-up for activities that you can commit to. If you are coding part-time, it’s not a good idea to sign up for having an accountability buddy, pair-programming, and a Build-to- Learn project. You probably don’t have enough time. 4 — Conclusion Now you know what W3 Develops Cohorts is all about. We can finally pass you the tools that will help empower you to level up and reach your goals. You can mix and match them however you like. I’m serious when I say it’s a Choose- Your- Own- Adventure! The choice is yours, but if you are unsure on how to get involved in any of the above tools, feel free to reach out to me and ask questions. :) Back to the Tables of Contents Chapter 1 — Team Projects Lineup Chapter 2 — Schedule Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 4 — Standards & Builder’s Pledge Chapter 5 — Finished Projects & Other Cohorts Comments Chapter 6 — F A Q","['Web Development', 'Pair Programming', 'W3develops', 'Codingbootcamp', 'Freecodecamp']",https://medium.com/w3develops/preface-what-is-a-w3develops-cohort-ea15c158605f,2,[],0,0,jonathan,M,0.0042130252697924414,0.9957869747302076
OKILIPA ANTONY (aokilipa),,My Most Recent Challenging Experience – OKILIPA ANTONY (aokilipa) – Medium,2018-05-28 13:35:17,medium,"My Most Recent Challenging Experience In the recent weeks I struggled much with learning how to code, the thing which affected me the most was the fear to start because I had a mind set that programming is hard, and its only meant for the smart ones . Because of this I always kept doubting my every move or decision and feared that I might fail in the long run. This affected my progress so much. “ There is only one thing that makes a dream impossible to achieve: the fear of failure. ” ~ Paulo Coelho, The Alchemist. Why was I afraid? Well for those who have tried to code before, you know how most tutorials use complex terminologies to explain concepts, this makes an average person like me feel inferior and dumb. Similar to how younger siblings feel less powerful and less smart than the older siblings when growing up. Another factor was the coding environment itself, as you know, writing code is very different from any other human skill: so much that I face difficulty understanding many concepts, because I had no baseline reference to build this new knowledge on. Writing code is more about solving problems and breaking down complex problems into small units so that you can solve them at that state building up. This brings me to the third challenge which was How do I break down complex features into atomic units which are easily solvable. At this point I was almost giving up until I attended Andela Bootcamp and just on day one, my spirits were lifted and energy reignited by a powerful session on Growth mindset by Muthoni. It is in this session that I learnt I have a fixed mindset which made me afraid of progressing because I was in my comfort zone and not up to the challenge. From the session I learned how powerful a growth mindset can be, and the amount of potential I can unlock just by having a positive vibe and openness to learn new thing. This inspired me to continue with my dream and not only to dream, but also work towards achieving it by constantly putting in the work, and tapping the power of communities to learn more, because together we can do more. How I planned to resolve my fear and change my mind set. From the session I resolved to go ahead and find resources that use simple terminologies, learn concepts that build knowledge using analogies, since using analogy is the fastest way to learn new and difficult concept. And lastly I resolved to learn how to break down large tasks into smaller ones and solve them at their simplest state. I resolved to always give my best and constantly better it. As Oprah once said “ Doing the best at this moment puts you in the best place for the next moment”.","['Codingbootcamp', 'Andela Bootcamp Nairobi', 'Growth Mindset']",https://medium.com/@aokilipa/my-most-recent-challenging-experience-b641c2363c7b,0,[],0,0,okilipa,Unknown,Unknown,Unknown
Sean Sutton,,XSS: what is it? Why is it a problem? How you can stop it.,2018-08-20 17:55:31,medium,"X S S: what is it? Why is it a problem? How you can stop it. X S S, or cross-site scripting, refers to client-side code injection. This means that a founder can take over and execute scripts into legitimate website or apps. If a website or app allows unvalidated user input, X S S can be used against the site’s users. During a cross-site scripting attack, an attacker does not attack a victim directly. Instead the attacker uses a web application or website to deliver a malicious script to the victim’s browser. The hacker only has to insert a string that the webpage interprets as code and affects the victim’s browser. As it is one of the most common web application vulnerabilities, it is essential to take steps to minimize this risk. In this article, I will discuss a few notable examples X S S attacks and some ways to prevent these attacks. In 2014, when Twitter had 248, 000, 000 users, users found a vulnerability on the website’s Tweet Deck. All users were susceptible to account hijacking, but luckily most “hacks” were minor pranks. In this instance, one of the most popular uses of X S S spread to 38, 000 accounts in just two minutes. It changed all characters on the Tweet Deck to the often-mocked font Comic Sans. In 2015, Facebook security researcher Jack Whitten reported a massive vulnerability that left the site’s entire user base vulnerable to attack. The attackers hid malicious script in . png idat chunks. He was paid a mere 7, 500. 00 and the issue was fixed within 24 hours. As of writing this article, there are currently two exploitable bugs in Instagram’s Wordpress plug-in that could allow Instagram profile bios to act as payloads of script code. All of these vulnerabilities could have been prevented by using the following techniques: escaping data, validating input, and sanitizing. Escaping data ensures user-input data is secure before rendering it for other users. This way personal data cannot be passed to other users. Validating input allows users to input only properly-formed data. It is best to apply input validation on the the syntatical and semantic levels. Syntatical data includes dates, currency amounts, and phone numbers. Semantic validation ensures that start dates are before end dates and only allows for values within an expected range. Finally, user-input data should be sanitized by removing H T M L tags. There are various methods that can be used to remove H T M L tags that I hope to address in a future article. ” In conclusion, these strategies work best when used in combination. With mindful coding that incorporates sound security practices, you can allow user-input data in your websites and applications while minimizing the risk that this data can be accessed for malicious or disruptive purposes.","['Security', 'JavaScript', 'Coding', 'Codingbootcamp', 'Javascript Tips']",https://medium.com/@seancsutton1/xss-what-is-it-why-is-it-a-problem-how-you-can-stop-it-b0b70c76449c,0,[],0,0,sean,M,0.007009713460080397,0.9929902865399196
Tyler O'Brien,,My Journey To Becoming A Developer. – Tyler O'Brien – Medium,2018-03-15 22:34:36,medium,"My Journey To Becoming A Developer. It had been on my “ New Years Resolution” list for the past 3 years, but I never got around to learning how to code. I had already had a background in H T M L5, C S S3, P H P, and Word Press for the past couple of years working in the Digital Marketing space. Though I still had not got around to coding my own programs and creating web apps, which is what I had always wanted to learn. 2018 was different. It was the year that I would finally learn how to code once and for all! I had finally saved up enough money to enroll in a coding bootcamp, and found the one that I wanted to join. After researching different bootcamps online using Course Report, I narrowed it down between Thinkful and Bloc. io. I ultimately decided to go with Bloc. io since it was 100% remote and seemed to have some of the best reviews out of the remote Bootcamps that I had researched. It also offered the programming languages that I waned to learn, primarily Ruby and Ruby on Rails. I’m currently working through the first module in Bloc’s Web Developer track, while doing some consulting work on the side. So far I’ve brushed up on my H T M L and C S S skills that I already have a pretty good grasp on from my prior work. Though it has been great diving into more advanced topics of Java Script and really seeing how all of the parts of the internet work together in the D O M.","['Programming', 'Code', 'Code Newbie', 'Codingbootcamp']",https://medium.com/@tylerobrien/my-journey-to-becoming-a-developer-6ad0c78e8d4a,1,[],0,0,tyler,M,0.02733675202290966,0.9726632479770904
Code Platoon,"We transform #Veterans into software developers through an immersive, hands-on, educational process. Learn more and apply today! http://bit.ly/jointheplatoon",3 Paths (and resources) for Veterans Interested in Becoming Software Developers,2017-02-02 21:37:45,medium,"3 Paths (and Resources) for Veterans Interested in Becoming Software Developers For people interested in becoming software developers, it may seem as if there are infinite ways to embark on that path. Which is great, because having so many options means anyone can learn to code, but this is also bad, because you can get seriously bogged down trying to get there. To reduce this complexity, let’s take a look at the three major forks you can take, and how to navigate them. They vary in investment (think time A N D money), expediency and outcome. ( The goal here is to narrow your focus, not provide an overwhelming list of possibilities, so this is hardly an exhaustive list of options. ) Path #1: Traditional: Get a degree in Computer Science This is the most traditional way to enter the world of software development, but it is also expensive and takes the most time. Bachelor’s degrees take four years, a master’s degree typically takes two. Fortunately, many veterans have G I Bill funds that they can use at universities. If you go this route you may as well use the top ten programs as a starting point. This is most tried-and-true way to enter software development, and no hiring manager will thumb his or her nose at your background (although there is by no means a guarantee of a job). Moreover, if you do attend a prestigious program, you will also enjoy the benefits of having access to the alumni network, not to mention a thorough knowledge of, well, computer science that can take you in a lot of directions. Despite its advantages, a C S degree can be a daunting and expensive undertaking. For people who are changing careers or with families to support, being out of the workforce for several years might not be practical. And these days companies often fault C S graduates for not having much practical experience. Bonus tip — possibly the best deal on a C S degree is offered online by Georgia Tech, which happens to be a Top10 program, for $7, 000. Path #2: Nontraditional: Coding Bootcamp The premise of ‘coding bootcamps’ is to take a deeply interested beginner and, in a matter of months, teach all of the practical skills to qualify as a junior software developer. These schools are named bootcamps, because many follow an ‘immersive’ philosophy, which requires students to work 60- to 100-hour weeks. The cost, too, is usually under $20, 000, and pales in comparison to the cost of traditional higher education, The bootcamp model is reasonably new, but has exploded in popularity as a way for career changers to learn the skills to fill the growing need for software developers. Today dozens (hundreds?) of coding bootcamps, in all shapes and sizes, dot the country, with some of the schools offered wholly online. Some factors to consider while comparing these schools: technology stack, location, length, cost, reported outcomes and curriculum. Course Report is a good starting point for this research. One simple guidepost: Look for coding boot camps that offer at least 1, 000 hours of instruction/coding/project time. For veterans, there are a few additional points to consider. Some coding bootcamps are eligible to accept the G I Bill. Operation Code, a nonprofit organization whose mission is to help the military community learn software development and break into the tech industry, keeps a list of these coding bootcamps. Code Platoon (disclaimer, I’m the executive director), is a Chicago-based non-profit coding bootcamp exclusively for veterans that offers its students $10, 500 scholarships. Other reasons to go to a coding bootcamp instead of college? The slide in this article says it all. Much less time spent out of the workforce, and, for the better bootcamps, pretty good employment outcomes. You’ll see a greater emphasis on building products, rather than theory (not unlike learning to be a carpenter versus studying to be an architect). The fast pace can’t accommodate the rigorous study of algorithms and problem solving that a C S program can, of course, and some employers are still skeptical about hiring bootcamp grads. Bonus tip — probably the best deal in coding bootcamps is online Free Code Camp. It’s rigorous. It’s long. It’s well designed. It’s F R E E! Get through that and perhaps supplement with this algorithms class. Path #3: Self-paced online learning If you want to explore your options, to try as many different things as possible, and have the time, you can try to learn on your own. There are many, many ways to do this. If you want to pursue this path, please: Don’t stress about which language/framework is hot. Start with Java Script (widely used), although Ruby on Rails (which we teach) and Python are great too. Nothing wrong with picking other big ones like C# or Java — they just have a longer learning curve. Get on an online guide. Bento. io and The Odin Project are two examples of free sites that will guide you, step by curated step, down the road to learning web development. They gather lots of different resources to help you learn and remove the guesswork as to what you should learn, in what order, and from where. Of course, to just get a feel for the business or explore its many facets, you’ll find a boggling array of resources. Codewars. com, Hacker Rank and Codingbat have lots of free programming challenges, as well as some guidance on how to go through them. Alternatively, you could pick a project that you are interested in, either something you want to build (a website, app, etc. ) or that someone else has suggested. And then go build it! Additional resources Operation Code — for all kinds of feedback for veterans who want to enter software development — join the Slack channel Not necessarily free, but good resources include: Team Treehouse, Codeschool, Udemy, Upcase, Flatiron, Thinkful, Coderbyte, Learn Code the Hard Way, https://automatetheboringstuff. com/, Interview Cake","['Programming', 'Web Development', 'Veterans', 'Software Development', 'Codingbootcamp']",https://medium.com/@codeplatoon/http-www-codeplatoon-org-3-tracks-for-veterans-interested-in-becoming-software-developers-9ae682c02ed2,9,['Code Platoon'],1,0,code,Unknown,Unknown,Unknown
Ronald Walker,Learning Web Development,Learning Web Development: Why Pay? – Launch School – Medium,2017-05-08 19:52:31,medium,"Learning Web Development: Why Pay? A few days ago, I passed Launch School’s 109 interview assessment, so I thought I would reflect on my journey to become a software developer. Many paths can lead to a career in software development, and for several months I tried the self-education route. On this path, everything was free except for my time. I hoped that the material I gathered from different sources was accurate, relevant, and comprehensive, but I had no guarantees. Crossing my fingers and hoping for the best was as useless as it sounds. Instead of forward progression, I felt trapped in a feedback circuit. For example, I would be exposed to something fundamental, such as loops, and move on to the next topic. I would soon find myself struggling with inner loops, which made me realize that my previous exposure to the concept was insufficient. Followed by my learning experiences, back to loops I went. The process of acquiring software development skills became a puzzle that consumed more and more of my time. Finally, I decided to begin searching for a paid software development program to break out of the loop. I learned to value paid programs because I felt the free alternatives were not properly incentivized to create, maintain, and update the best possible material. Most of the well-known coding bootcamps were far out of my budget, but my research eventually led me to Launch School. At $200 a month, this software development program’s price is low enough to fit my budget and high enough to act as a motivator. Unlike many mentor-led courses, this program is self-taught and T A supported. As a bonus, Launch School teaches mastery-based learning! By leveraging Launch School’s curriculum, I can focus on learning software development and retire from my “material quality check” career. Completing the first interview assessment solidifies my confidence in Launch School’s ability to transform me into a software developer. I spent more time studying for the assessment than I did completing the course material. In addition to finishing countless coding exercises and attending the suggested study sessions, I conducted several practice interviews with two different classmates. Through the study sessions, I adopted a method of writing out my logic in plain English before testing it with code. On the day of the assessment I did well. The interviewer (and the instructor who reviewed the recoding) was assessing my ability to complete and explain small coding exercises. Launch School does a great job of getting their students ready for their interviews. As the assessments are partly intended to prepare us for job interviews, I consider myself lucky to have found Launch School.","['Programming', 'Web Development', 'Codingbootcamp', 'Launch School', 'How To Study']",https://medium.com/launch-school/learning-web-development-why-pay-af72d0e93e9b,1,[],0,5,ronald,M,0.0035577616327436084,0.9964422383672564
Jacob Acosta,,We’re standing on the shoulders of giants – Jacob Acosta – Medium,2018-03-05 16:36:05,medium,"We’re standing on the shoulders of giants A year ago a coworker gave a high-level presentation on the world of programming. The first thing he said was emphasized: “ We are standing on the shoulders of giants. ” The programs and applications we are familiar with are certainly taken for granted, and the complexity they entail is overlooked and taken for granted. Prep work for this coding bootcamp gave me a sense of the complexity, but each day here gives greater insight into just how complex the world of programming and Java Script in particular are. Codesmith emphasizes a deep understanding of the language, or as we call it here ‘under-the-hood’ understanding. For example Javascript has special keywords that when used with a data type will perform some unique functionality. The code line here from the Mozilla Developer Network ( M D N) have so much work built into their meaning and capacity I can’t quantify it:let long Words = words. filter(word => word. length > 6); We are beyond lucky to live and work in a time when all of this has been built for us. There are so many levels under the hood of that code it is a Masters’s course in it’s own right. And still each day we delve deeper and explore new topics. It is an interesting to try and anticipate the feeling of being overwhelmed. If you prepare incorrectly it turns into anxiety or something else that produces stress, and it serves as a base-layer for the overwhelming thing(s) and compounds the anxiety and (help/hope)lessness. We had a talk this week (more like a round-table) with the seniors ahead of us in which we were reminded that the goal here is to make progress. It resonated deeply. I’m here to change my career path. I’m here to gain a skill set I can use beyond a career. I’m here to learn a new language, about a body of work, and mode of working. And progress happens by the hour more or less. Every day is hard, but incredibly rewarding. The more I consider the rewards that have come after every day the more I see they are bound to the people here. The staff read the room well when they present to us, whether a formal lecture, briefing, general meeting or whatever else. They don’t just dispense wisdom and information — they make sure it gets to you. The seniors and fellows have been tremendous. We have a sense of their workload and know it is greater than ours, but they still make it a point to check in on us. The Codesmith program explains engineering empathy is component they look for in candidates, and naturally it sounds like a great thing. We see it play out here though. When we work on problems or assignments seniors and fellows come by at assigned times and of their own volition to check on our understanding of the concepts and how we’re implementing them. My cohort crew has been tremendous, too. We all met one another for the first time Monday, and have spent 60+ hours together already learning new topics, reviewing others, and learning how to adapt to work with a variety of approaches. Each person comes with a unique set of experiences, background, and importantly introduction to Javascript. Some (like me) are learning it as a first programming language, and others have some experience with it, and some have a great understanding of it and other languages as well. Together we all provide unique insights in problem solving. Those with deeper knowledge have been wonderful, patient teachers and those without the technical background provide different ways of approaching problems they see for the first time. I have a tendency to lean towards efficiency (here I mean the fewest lines of code, which doesn’t necessarily consider time/space complexity) and if I think an approach involves more steps than necessary I want to scrap it in favor of another that is more efficient, even if I don’t know how to code the efficient approach. This is a pitfall I’m trying to avoid — it is better to solve a problem and refactor for efficiency later. As the first week ends I find myself physically and mentally exhausted, but am incredibly grateful I’m here and am eager to see what next week has in store for us.","['Programming', 'Codingbootcamp']",https://medium.com/@acosta.jacob.d/were-standing-on-the-shoulders-of-giants-6ea0de02b743,3,['Codesmith'],1,105,jacob,M,0.0024356479040408972,0.9975643520959591
Jacob Moore,,"Days 19/20 — LinkedIn, Projects, and APIs – Jacob Moore – Medium",2017-08-11 17:17:04,medium,"Days 19/20 — Linked In, Projects, and A P Is So a big part of The Iron Yard has a career focus. A couple of the components for the focus is networking and connecting with others via Linked In. I personally struggle with networking. Striking up a conversation with someone I know is…uncomfortable. I’m an introvert. I actually own the t-shirt below with some pride. I would rather end up going home on a Friday night and watch an old episode of Parks and Rec than go to a meet up. But I’ve been trying to push myself to get to know more people through networking and unfortunately I just haven’t had the time to go to many events and meet tech people in Indianapolis other than the one event with Indy Hackers. I actually made sure as I was leaving to shake hands and personally thank one of the co-founders of Fretless for presenting and running the event. For an introvert, that was a lot of effort for me. Not just because I would have rather eaten glass than talk to a stranger but also because I loved what their company does and their attitude is in regards to doing things. So beyond trying to grow as a person I have also been trying to make connections via Linked In. It’s a bit easier as: I don’t have to talk to them face to face If they don’t have anything to say who cares I can do it on my own time So my Linked In network has grown considerably because of those interactions, and in general, has been pretty pleasant. Even today I sent out a message to someone that presented to us and they responded back with kind words. There have been a few other great interactions this way as well that only Linked In has really allowed. I follow the Linked In C E O and he was mentioned by another C E O, Allen Gannett, in regards to Linked In’s video posting. I loved his pitch about getting early access and commented on his pitch. He in turn personally messaged, and connected with me, about the fact that I liked his post. Talk about a class act. That one small action has made me look into his company and made me want to work for someone that makes a small effort to do something so classy and kind. If only I could work remotely… In addition to Friday being a lab day it was another day to discuss projects for Cohort 7. So we were able to see their pitches and what they were planning on working on going forward. Now I’ve already had a project idea for a couple weeks that is super boring but would be incredibly helpful for my family. The idea is simple: an application that is a list item built for grocery (retail down the line) stores that updates with product listing within the store. So if I have on my shopping list: Pepperidge Farm Potato Bread, Kraft Mac and Cheese, and Sweet Baby Ray’s Barbecue Sauce and I end up going to the local Meijer it will sort my list by what aisle each item is on making my visit easier. It would also update based on the store I went into, because not all of them are alike. The updates would be done by the local stores Wifi pushing the updates and could even show sales on each aisle in relation to the item on the list. Maybe the Pepperidge Farm Whole Wheat Bread is $0. 10 cheaper and the app could push that. So that was my original idea and maybe I’ll do that later on as a side project. What came out of discussion with other people came about because I homebrew and brought in some beer that I didn’t label. So now it looks like we’ll likely build out an application to store recipes, add calendar reminders, and an in app timer. There’s a lot more that can be done with it that maybe I can reach out to a local supply store to use their data to build something. I’ve been working on an A P I issue for what seems like three days. Maybe I’m just not figuring out how to do a dynamic search on an A P I that others have figured out but I’m not completely understanding it. Ideally I’ll get some time with an instructor to go over the proper search logic with the A P I. Right now I’m able to fetch the data and do a event listener focused on the Enter key returning a result. Those two just need to connect. Struggles: A P I query with user input. Once I can figure this part out I can really focus on the layout of the results. Understood: Career focus. A lot of the items we’ve covered in career search I’ve heard of and been a part of so that’s beneficial. Looking forward to: Completing this one project so I can start on the weekly project.","['Startup', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/days-19-20-linkedin-projects-and-apis-44417e758ff7,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
The Rauzarian,,"Hello World, says Rauzr Code School – Rauzr – Medium",2018-03-14 06:18:13,medium,"Hello World, says Rauzr Code School Those who understood the title will know what this post is about. And those who didn’t, please continue reading it because you will need this important skill in the very near future. Let’s start with the introductions — We are a coding bootcamp, primarily focused on training students in product development. Our prospective students include fresh graduates, professionals looking to transition into a technical career, entrepreneurs and career boosters. In other words, if you are reading this, we sure have something for you. Coding bootcamp is already a famous concept in other parts of the world and it has started gaining traction in India as well. So you may ask the most obvious question — How are we different from others? For starters, we don’t wish to be a training institute who just teaches you to write “ Hello World” programs in ten different languages. No, that’s not who we are or what we aspire to be. We want to teach you how to build real world products. Because you see, building a product is a totally different ball game compared to learning to code in a language. It involves front-end, back-end, Dev Ops, testing, marketing your product and much more. Yes! That sounds more like what we want to teach you. You all must have heard about this survey by Aspiring Minds which throws few numbers to describe the technical skills scenario in India —4. 77% can write correct logic, 60% can not write code that compiles, only 1. 4% can write efficient code. Well, all we are trying to do is to improve those numbers, one very small step at a time. We believe that skill is the new best currency in the world. Cryptocurrency fans — please understand we are not trying to wage a war with you guys :). Whatever industry you end up in, three important skills — soft skills, technical skills and marketing skills will definitely help you in the long run. Learn. Code. Collab. Deliver. That’s our motto at Rauzr Code School. Throughout the course of the bootcamp, you will breathe code. You will gain the ability to build products. You will understand how a typical day in a software job feels like. You will acquire soft skills to work in teams. You will do pair programming with your buddy. You will showcase your work, learn to market and sell your product. Sounds exciting, isn’t it? We will provide you career counselling to help you find your right fit in the software industry. Unlike other bootcamps, we are not going to guarantee you any x number of interviews after the bootcamp is over. We strongly believe that with the skills you are going develop during the bootcamp, you will surely succeed in securing a job in the software industry. Our team boasts of professionals having ~40 years of experience working in fortune 100 companies/startups, building products and mentoring/training ivy league students. So, do you wanna be a Rauzarian? Do visit Rauzr Code School and contact us if you are interested. Please follow this blog space to find out about all the interesting stuff we are doing.","['Programming', 'Codingbootcamp', 'Startup', 'Code School', 'Coding']",https://medium.com/rauzr/hello-world-says-rauzr-code-school-5bb1e1f19cdf,0,[],0,151,the,M,0.0,1.0
Kris G,,The top 5 free online coding boot camps – Kris G – Medium,2018-10-06 21:58:04,medium,"The top 5 free online coding boot camps So you've took the plunge and decided to learn how to code but don’t have the time or money for a boot camp to attend? Scurrying around for resources and having trouble connecting the dots? No, worries I have curated a list of the Top 5 free and Online — completely remote coding boot camps. Freecodecamp. org — Online only aside from an optional local meetup in your city, freecodecamp’s curriculum is one of the best when it comes to giving an up to date, structured and organized curriculum on what you need to learn to become a web developer in today's time. 2. The Odin Project. com — A very good web development program that actually helps you think like a developer, by taking the “here’s what you need to learn, now build this project”. This is definitely one of my favorite curriculum due to the “go out and figure it out approach”. 3. Bento. io- One of the best I M O at giving a beginner a complete overview as to how the internet works and to full stack web development. Contains up to date and trending articles, information and guides. 4. Codingphase. com — An online coding boot camp that gives you the content week by week, to incentive you complete everything in order as if you were actually at a coding boot camp, so no skipping . The content in this course is all explained by clear, concise and easy to follow instruction. 5. G A Dash — General Assembly’s free online learning platform. This is an Entirely project-based program. You build projects that walk you through the basics of front end development. … And there you have it. Top 5 resources for learning to web development, all, completely free. On a side-note, most of theses projects are open source , so donations and contributions are greatly appreciated.","['Web Development', 'Learn To Code', 'Codingbootcamp', 'Freelancing']",https://medium.com/@romane71193/the-top-5-free-online-coding-boot-camps-6726a9f29c2a,0,['General Assembly'],1,0,kris,M,0.49104542807221896,0.508954571927781
Ryan Wang,Writing code at Ironhack Miami. Full-Stack Javascript Developer,"How I Prepared for My Coding Bootcamp, Ironhack – Ryan Wang – Medium",2017-08-10 00:00:00,medium,"How I Prepared for My Coding Bootcamp, Ironhack Average life expectancy of an American: 78. 7 years. After subtracting 18 years for childhood and 10 years for retirement, you’re realistically left with 50. 7 years of your “prime”. Every second of your life is a resource. Every activity pursued is an investment of that resource. Time is money, except much more valuable. Therefore, any activity that requires any significant amount of time or money deserves a realistic cost/benefit analysis. And an earnest effort (from you) to make sure you get the most out of that investment. I learned this the hard way … It took me 4 years and hundreds of thousands of dollars (in the form of scholarships, debt, and money from family) to learn this lesson. This is the annual cost of attendance for the University of Miami. Multiply by 4. 4 years of this gave me a Bachelor’s of Arts in Biology and no job prospects I’m excited for. Why? Because I didn’t put my 100% into college. I didn’t pick the right school, the right major, the right social circles, the right internships. I coasted. Now that I’m here, making the decision to invest 9 weeks and $11, 000 into Ironhack coding bootcamp, I will not make this mistake again. And neither should you. If you decide to enroll into a coding bootcamp, give it your all. Before, during, and after bootcamp. Anything less will ruin your return on investment. Tools in my arsenal Please note: This is not an exhaustive list, though these resources are 90% responsible for getting me where I am. Use google for the other 10%. Hardware Laptop — This is a windows computer running Ubuntu ( Linux). It works perfectly fine. You absolutely do not need to buy a $2000 macbook pro. Save your money. Noise Canceling Ear Muffs (for gun ranges): block out all distractions and maintain focus Earphones: wear these under your ear muffs for music Resources Codeacademy — start with this. It’s a great introduction to programming Lynda. com — awesome in-depth programming tutorials Codewars — this will make you a Java Script ninja Learning how to learn — skim through this free online course. This will give you the strategies to make your study time more efficient Thought leaders with great advice Simple Programmer Haseeb Qureshi Engineered Truth Prep work for the technical interview & Day 1 of bootcamp Bootcamps constantly maintain a difficult balance between how much they want your money and how selective they want to be. Being selective allows a bootcamp to boast higher job placement rates and lower dropout rates. The point of the technical interview is to make sure you are able to learn how to code and complete the course. The difficulty of the technical interview will give you a general idea of how selective the bootcamp is and what kind of students you will be surrounded by. To pass the technical interview, all you need to know is how to code in your main programming language. For Ironhack, that’s Javascript. I followed these steps: Complete the Codeacademy tutorial for Javascript. Look up a more in-depth video tutorial ( I went with Lynda). Take what you learned and sign up for Codewars Codewars is a website with thousands of coding problems, allowing you to code in any language. This website will make you a Javascript Ninja because you will be able to review the best solutions to each problem. Study the top solutions of every question, look up any methods you’re not familiar with, and re-solve the problem with the new solution. Do this without looking at the answers. Day 1 of bootcamp, my rank on Codewars was only 6 kyu, yet I felt leagues ahead of many students in my cohort. Last but not least, complete your bootcamp’s prework to the best of your ability. Write down any questions you couldn’t answer on google and use your instructor as a resource. Provided that you’re not completely socially inept with zero professional experience, if you pass the technical interview — congratulations, you’re in! Last week, I wrote about why I joined Ironhack in the first place. You can read about it here. Originally published at ryancommits. com on August 10, 2017.","['Programming', 'Codingbootcamp', 'Ironhack', 'Coding']",https://medium.com/@ryancommits/how-i-prepared-for-my-coding-bootcamp-ironhack-17f148e8ab04,2,['Ironhack'],1,2,ryan,M,0.024172097739259983,0.97582790226074
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,"If you get any of these 5 Chingus on your team, you just won the remote dev lottery",2018-05-19 02:19:12,medium,"If you get any of these 5 Chingus on your team, you just won the remote dev lottery And why you want them on your team ( V5) Photo by jens johnsson on Unsplash Below are examples of excellent team-mates who deserve to be applauded. There are many more who deserve to be in this article. This will likely be a series of sorts, so stay tuned. Dan (@ ziggysauce) Country: U S A Admirable traits: G O A T of teamwork, passionate about coding, always willing to help his teammates (regardless of circumstances), strong communication skills, history of getting things done. In the Voyage-4 we added a question to the Weekly Check-ins for members to give a shout-out to a team member who deserves one. Dan got the most shout-outs in the entire Voyage and was mentioned by several members in every Check-in! Needless to say, he is the epitome of an admirable team-mate and leader: reliable, adaptable, gritty, and leads by example. 💯 If you find yourself in a team with El @ziggysauce, I recommend doing this: Francesca (@lilgangwolf) Country: U S A Admirable traits: highly professional, kind, gets stuff done, reliable, strong communicator, thoughtful If you’re lucky enough to have Francesca on your team and you put in the work, you will have both a great experience and a great addition to your portfolio. Francesca is a caring leader who has a variety of skillsets and experiences (she’s been a Project Manager, Roaming Designer for various Chingu projects, and avid coder). As a learner, Francesca brings a thoughtfulness that allows her (and her team) to be continuously improving how they do things. I can’t begin to describe how important this is in teams! If you ever land on a team with Francesca, here is the appropriate response: Sonam (@sosodope) Country: Bhutan (but living in Bangkok) Admirable traits: person of action, creative, leadership skills, reliable team-mate, finds opportunities where others may not Sonam Dolkar Penjore has only been in one cohort so far, but definitely made her presence felt. She was consistently mentioned by her team-mates in the Weekly Checkins for being an awesome developer to work with. Annnd guess what her team built in Voyage-4? A nonprofit project! They went out of their way to find a nonprofit to work with and not only got team development experience, but also experience working with stakeholders on a professional development project. If you find yourself in a team with Sonam, here is an apt reply: Allistair (@fancy Action) Country: U S A Admirable traits: Reliable, incredible perseverance, organized, adapts to get the job done Allistair is an excellent driver of code — he is a hungry learner and builder who will stop at nothing to finish team projects. If he has to reach out to people and organically form his own team, he will (and has). He’s a leader in the Chingu community and we’re lucky to have such a great exemplar of determination! Unfortunately for new members, you won’t have the opportunity to be in a team with @fancyaction in Voyage-5, as at the end of Voyage-4 he brought together a reliable team for Voyage-5 (making my life easier too! 😜). If in future Voyages you find yourself in a team with him though, here is a reasonable reaction: Van Tabbert (@vannya) Country: U S A Admirable traits: electric personality, S A V A G E coder, kind leader, highly organized, gets results Vannya is an absolute legend in the Chingu community and is a walking exemplar of Grit. Whenever Vannya is on a team, I automatically classify the project as finished because if Van’s on the team, the project will be finished, full stop. She’s helped many people from around the world and has also been a mentor (shout-out to all the React people she’s helped) to many-a-chingu! Sadly for members of Voyage-5, she’s starting a new developer job this session and won’t be in a team. But she will be hanging out in Voyage-5 and I’ve seen someone already trying to convince her to do another Live Talk so fingers crossed! If in a future cohort you ever find yourself matched with Vannya, the only sane response is the following:","['Chingu', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/chingu/if-you-get-any-of-these-5-chingus-on-your-team-you-just-won-the-remote-dev-lottery-5037521e1da3,0,[],0,284,chance,M,0.024461428631419813,0.9755385713685801
Ryan Newton,,The incomplete guide to finding a job after a coding bootcamp,2017-06-08 23:01:21,medium,"The incomplete guide to finding a job after a coding bootcamp A while ago I started writing about my experiences with finding a job after App Academy. I had intended to complete sections about different types of interviews, hence ‘incomplete’, but haven’t got around to it yet. People frequently ask me about my experiences and I point them to these blog posts, which I believe are still mostly relevant. Intro Setting expectations Demonstrating passion Application strategy Creating opportunities Personal profiles The most important lesson","['Startup', 'Codingbootcamp', 'App Academy', 'Finding A Job']",https://medium.com/@vonkunesnewton/the-incomplete-guide-to-finding-a-job-after-a-coding-bootcamp-e2ada032ca2c,0,['App Academy'],1,1,ryan,M,0.024172097739259983,0.97582790226074
Krista Schnell,"Sociologist, engineer, bodyworker, athlete",My Research on Coding Bootcamps – Krista Schnell – Medium,2018-07-11 01:51:12,medium,"My Research on Coding Bootcamps Would you like to participate in an interview? My name is Krista Schnell, and I am a Ph D student in the Sociology Department at U C Berkeley. As part of my master’s research, I am conducting interviews with people who have previously attended a coding bootcamp (graduation not required). The project centers around the motivations behind and reasons why people attend coding bootcamps. An interview typically lasts about one hour. Mostly, I will ask you about your education and your decision-making process up to and through attending a coding bootcamp. The interview can take place at a time and place most convenient to you. If you are in the California Bay Area, I would prefer to meet in-person; however if you live elsewhere, a video call can also be arranged. As with most sociological research like this, I will never use your name or any identifying information in my master’s thesis or anywhere else. Please check out my website if you have any questions or are interested in participating! My website: https://www. kristaschnell. com/research","['Programming', 'Codingbootcamp', 'Coding', 'Learn To Code', 'Web Development']",https://medium.com/@kkschnell/my-research-on-coding-bootcamps-515eb7de0eba,2,[],0,0,krista,F,0.9979845847972328,0.0020154152027671104
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",Should I Enroll In A Bootcamp Over the Holidays? – News on the Bloc – Medium,2016-11-02 18:17:16,medium,"Should I Enroll In A Bootcamp Over the Holidays? As we head into winter, one of Bloc’s commonly asked questions becomes “ Should I enroll in a bootcamp over the holidays?”. It’s a fair question. On the one hand, people start thinking about traveling home for the holidays, spending time with loved ones, or perhaps getting away and finding someplace warm. At the same time, we’re ambitious folks who want to invest in our future, and for some, the down-time at work creates a great opportunity to start getting serious about developing technical skills. If you’ve been thinking about enrolling in a developer bootcamp, but aren’t sure how to tackle the holidays, we have the solution. As an online bootcamp, we can offer flexibility that in-person bootcamps can’t — like give every student an optional two week winter break, so you can take some time off and then finish the program in the new year. Don’t Let the Holidays Stand In the Way of Your New Career To help students who are considering a bootcamp but don’t know how to handle the winter holidays, Bloc offers a holiday freeze option. How does it work? Bloc’s standard freeze program works like this: If life happens — a serious illness, an unexpected life change — you have the option to freeze your program in one-week increments for a total of four weeks. We’ll save your progress, and when you return you’ll pick-up where you left off. We do not offer extended freezing so make sure to save this option for only when it’s necessary. From December 1st to January 10th, you may freeze a maximum of two additional weeks. These weeks don’t count toward your 4-week total. Just let your mentor know when you’d like to freeze for the holidays, and you’ll be on your way. When you return, you can pick up where you left off and finish up your program in time to launch your new career in 2017. ( If you celebrate religious holidays outside of the above dates, you can discuss these with your mentors. These holiday freezes will not count towards your freeze maximum. ) Check out other commonly asked questions on our F A Q, and as always, email us hello@bloc. io with any remaining questions!","['Career Track', 'Coding Bootcamps', 'Full Stack', 'Resources']",https://medium.com/newsonthebloc/should-i-enroll-in-a-bootcamp-over-the-holidays-a37ba35f50f7,0,[],0,0,bloc,Unknown,Unknown,Unknown
Ryan Desmond,,How Learning to Code Changed My Life – Ryan Desmond – Medium,2017-01-05 23:29:32,medium,"How Learning to Code Changed My Life You know that feeling you get when you have a few bucks in the bank but you can’t get it out because the A T M doesn’t dispense single dollar bills? It was like that. I was working at a restaurant in Costa Rica earning about 85 cents an hour. I got paid once a month, and payday was always a long way away. I was surviving off the meals I could eat at work and the very fortunate abundance of delicious tropical fruit. Back home I had intermittently taken classes at various community colleges and stayed afloat through odd jobs painting houses and bussing tables. I’d save a little money, take a semester off and go travel somewhere, then return home and repeat the process. I was living the backpacker dream, but I had a (bad) habit of always getting back to the States with very little money in various forms of non- U S currency. Traveling the world is amazing, but being flat out broke is undoubtedly not. Then one day, in a hammock, in this context, the idea came to me. If I could learn to code, I could work from anywhere. Not only could I work from anywhere, but I could probably build pretty neat stuff and make pretty good money doing it. Maybe one day I could even return right here to Costa Rica and bring my job with me. With this epiphany my path was set. I went back to the States, and a few years later I graduated with a degree in Computer Science from Southern Oregon University in the lovely town of Ashland, Oregon. Ashland, Oregon — Photo: http://www2. sou. edu/ Not long after I graduated I packed my things and headed towards San Francisco. After several failed interviews and too many nights sleeping on the couches of gracious friends and family, I finally landed my first “big” job. It was with a small technology startup building energy and sustainability software. It was basically a paid internship, but it was something. It was something great actually. The mission was inspiring. The office was in downtown San Francisco with a view straight down onto Market St. from the 11th floor. The lobby was so fancy, and there was a huge fountain in the plaza just outside the front door. It was both incredibly exciting and incredibly intimidating. I felt like I had to wear slacks and a collar every day, and nice shoes. I sold my old, barely-used guitar to pay for gas and some business socks. Seriously. ^ Business socks ^ It took all of 10 minutes on the job for me to realize I was woefully underprepared. I had no idea where to even start. Not only with the subject matter of the company, but with the subject matter of what I thought I had specialized in during school. I had to google everything. It felt like I had to learn it all from scratch, on the fly, in the moment. It seemed 100 times more complicated than what I had seen before. I dreaded the first few client meetings. During these meetings I kept repeating to myself, “smile and nod, take notes — smile and nod, take notes…” I feared one of them would ask me a question and I would have literally no clue what they were talking about, and no clue how to respond. For several months I would go home, make dinner, then brew a cup of coffee. I’d keep working well into the night just to feel like I could show up to work the next day having accomplished something meaningful. It wasn’t fun. That said, after a few months I started to get the hang of it and everything started getting easier. I started to get better. I could do things faster, think more creatively, define the goals and roadblocks. I didn’t have the answer to every problem, but I knew how to find it. It was 3 months into the job that I had my first review with the C E O, and she told me that she thought I deserved a raise. Sweet relief. At that point I finally considered myself an actual software engineer. Since those days I have had the opportunity to work with many innovative companies on an array of fascinating projects. I’ve helped make the world’s largest distributed solar monitoring network more precise and robust. I’ve worked with the world’s largest financial institutions to enhance their fraud detection systems, and their ability to rapidly deploy these systems at massive scale. With a few friends I launched a company where we very seriously tried to create a new way to search the internet. It didn’t take off, but we learned a ton. The Sudo Search Founding Team I’ve worked in downtown San Francisco and throughout Silicon Valley for the better part of the last decade, but I’ve also been able to take my job just about anywhere I want to go. I have worked from Europe, South America, Southeast Asia, back through Central America, all over the great States and beyond. It’s nothing short of incredible. It was with a bit of luck that I got the opportunity to start teaching advanced programming topics at my previous job. While working as a Solutions Architect for the company behind Cascading and Driven I was tasked with teaching both publicly available courses as well as private courses inside a number of Fortune 100 & 500 companies. During these training sessions I learned how much I really enjoy teaching and sharing these skills I had learned. Last spring my wife and I spent a few months in Costa Rica, and I just kept working at my job in San Francisco without missing a beat. I left the office on Friday in San Francisco and showed up for work on Monday (online) in Costa Rica. I could be just as productive, if not more, working remotely than when in the office. I also met plenty of other travelers and locals alike that could just as readily do what I do, but didn’t know where to start. At that moment I started thinking that everyone, everywhere should have access to these skills. When I look back on how the decision to learn to code has affected my life I am amazed. It has given me economic opportunity, as well as location independence. It has given me the ability to continue traveling the world, while solving exciting engineering problems and generating income from my computer. If it changed my life for the better, it could change others’ lives for the better too. El Garrapatero, Isla Santa Cruz, Galapagos, Ecuador While continuing to travel over the last year, my wife Kim and I continued meeting more and more people that wanted to learn to code. We knew that with my software/training skills, Kim’s marketing/bizdev skills, and both of our travel chops, we could build something incredible to help people learn valuable skills, and keep exploring. We got to work, building a curriculum and website while still on the road — renting a house overlooking Lake Atitlan, Guatemala. The traveler’s version of a garage start-up. Now we’re excited to share Coding Nomads with the world. At Coding Nomads we specialize in two things — teaching people how to code, and traveling the world. As both of these two things have so positively affected our lives, we are naturally compelled to share them with as many people as possible. Our mission is to help people of all backgrounds improve their skills to improve their lives, and we do this through hosting coding bootcamps abroad. Our first course is this March in Bali, and we couldn’t be more thrilled about the response we’re getting so far. Both learning to code and world travel have radically altered the course of my life for the better. It’s our goal through Coding Nomads to share both. If you interested in learning with us, teaching with us or traveling with us, we’d love to hear from you! Learn more about Coding Nomads. Learn more about Ryan Desmond.","['Travel', 'Coding', 'Learntocode', 'Codingbootcamp', 'Adventure']",https://medium.com/@ryandesmond/codingchangedmylife-97b2c72c1ac5,3,[],0,12,ryan,M,0.024172097739259983,0.97582790226074
Jacob Moore,,Week One — General Recap – Jacob Moore – Medium,2017-07-23 15:15:33,medium,"Week One — General Recap In general I’ve faced some setbacks and frustrations for pretty much the latter end of the week. I sort of expected that for a couple of the days. It’s just learning what I need to know to ask the right questions and how to learn in coding. It’s a weird thing to that I need to learn how to learn. I have a B A, M P A, lived in another country…and I need to learn how to learn for coding. It’s a bit remarkable. I can say the biggest setbacks for work has essentially been the following: finding time. It’s not a lack of a desire to do the work. It’s just finding time. I’m not spending 20 hours this week watching television. It’s just basic day to day things for a family life. If I didn’t have a toddler it would give more time. If I wasn’t married I would have more time. If I didn’t have dogs I would have more time. I’m not blaming my family at all for the lack of time, I mean I’m doing this for them, it’s just learning to adapt our family life to me doing this course work. It’s rough. Yesterday I spent three straight hours working on code and had no idea how late it was. It’s just plugging away and wanting to get the stuff done. I’m learning though and I feel as though I’m getting it. Struggles: Friday was…terrible. So basically the way our schedule works is the following: Monday — Thursday: Morning we review previous nights reading and a group activity (usually a pairing) Midday lunch Afternoon we work on our daily activity Evening we read for the next day Friday: Morning stand-up Morning huddle Lunch Daily activity So basically Friday is a catch up day for all the weeks daily activities and then start on the weekly project. My latest daily activity was acceptable so I didn’t have to play catch up. So I looked at the weekly project and got start. Went through lunch struggling with the code. Then I deleted it as I hated it. Then I spent more time with the code and got to the same wall a lot faster with better code. Then I deleted it. Then when both groups were supposed to close down and go do social hour I, along with several others from our cohort, stayed behind. At this point I said screw it let’s just put it on a whiteboard to do a better markup. I worked with a couple other students to do a pretty thorough markup and left feeling pretty good about it. Saturday I built up the markup…and then deleted it. Originally for the markup I put all my images in C S S and used <div> for practically every image. Then I said screw it and made unordered lists and used C S S for sizing. Worked a lot better. But I deleted a L O T of code. Understood: Primary axis and cross axis. I finally finally get it. The problem is when I apply a flex direction I forget what axis its on. Looking forward: Practice. Doing this weekly project gets me a ton of practice and that’s desperately needed.","['Web Development', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/week-one-general-recap-837981cf9428,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
DevMountain,DevMountain is an industry-leading tech bootcamp teaching code & design. Our community loves sharing our craft & empowering the next wave of makers. #devmtn,5 Reasons Why Experienced Programmers Are Attending Coding Bootcamps,2017-01-03 21:03:17,medium,"5 Reasons Why Experienced Programmers Are Attending Coding Bootcamps Dev Mountain trains a lot of amateur and newbie coders that have little or no previous experience, but we’ve also had students that already knew how to code coming in. You may be wondering to yourself, “ Why would an experienced coder attend a coding bootcamp?” If you’re an experienced programmer, you may not have thought much about returning to school. We’ll explain why our veteran students are here, and how learning modern technical skills is easier than you think. 1. Coding Bootcamp Updates Your Skill Set The world of technology moves forward quickly, and if you’re not revisiting your skill set every once in awhile you may get left behind. Dev Mountain coding boot camp allows you to learn up-to-the-minute languages and software from real world professionals that know what you need to know now. Check out our course options on our website, and discover what new skills you could learn from a return to coding boot camp!2. Coding Boot Camp is Accelerated / Fast- Paced As a coder, programmer or entrepreneur you can’t afford to take your time learning new skills. Dev Mountain’s boot camp allows you to get the training and information you need quickly, with options for full time or part time learning. It’s faster than going back to school, and faster than self-teaching. At Dev Mountain, we know that your time is valuable and that your schedule can be hectic, so we do everything we can to make our courses as accessible as possible no matter your circumstances. 3. Coding Boot Camp Helps You Make Connections If you’ve been at this for a while, you may already know the importance of having the right connections. Our boot camp program gives you the opportunity to work side-by-side with coding professionals as well as up-and-coming coders. You’ll also have the chance to network at our many events and conferences. 4. Give Your Resume a Serious Facelift Resume looking a little lackluster? Here, at Dev Mountain, our reputation as one of the highest rated coding schools in the country makes it an impressive addition to any job application. As well, working closely with our expert staff will ensure that you leave bootcamp with stellar references. 5. Rediscover Your Passion for Coding Dev Mountain is the perfect place to find renewed inspiration in your chosen career path. We foster an environment of creativity and discovery, where you’ll be surrounded by like-minded people striving for success. Such a dedicated space has helped many students ignite their passion for their careers. Don’t take our word for it though- hear what our students loved about our programs on our testimonials page. So what are you waiting for? We’ve got everything you need to upgrade your resume and take your career to new levels. You’ll be able to get the skills you need to have in today’s market, obtain them quickly, and make new connections while you’re at it. It’s a valuable opportunity for you to get the most out of your time and education. Request a syllabus to get an idea of what you’ll be learning at Dev Mountain. You can even meet our team and see their credentials. We can’t wait to help you achieve more and continue to grow your career.","['Programming', 'Coding', 'JavaScript', 'Codingbootcamp', 'iOS App Development']",https://medium.com/devmountain/5-reasons-why-experienced-programmers-are-attending-coding-bootcamp-1d390ff10a30,1,['DevMountain'],1,0,devmountain,Unknown,Unknown,Unknown
Tyrell Gordon,,Be More Like Goku (a flatiron experience) – Tyrell Gordon – Medium,2018-08-30 18:25:06,medium,"Be More Like Goku (a flatiron experience) Alright so, In case you haven’t heard about it, Dragon Ball Z is an anime that became a pop culture phenomenon. It’s story follows the character Son Goku, a Martial Artist that defends the planet Earth from dastardly foes; most of which are of the extraterrestrial variety. Although Goku is a mighty warrior, he is also optimistic with heart of gold. He loves to eat, have fun with his friends and help anyone who needs a hand. Goku finds out that he is a member of an alien race known as the Saiyans, an intergalactic band of warriors that pride themselves on their strength and their combat prowess. Early on in the series; our Protagonist comes into contact with the Prince of this warrior race, Vegeta. Vegeta is a Saiyan, but he was born in to what is known as the “ Elite” class. From childhood he had demonstrated remarkable abilities and seemed to be destined for greatness. Vegeta was extremely aggressive and cold-blooded. Since his childhood, Vegeta had proven himself to be a ruthless killer, merciless like most Saiyans. He has consistently contested with Goku both of them striving towards this ideal of a Super Saiyan. From Vegeta’s perspective, Goku is always one step ahead and at first that infuriated him. Vegeta was supposed to be the greatest Saiyan alive but a “low-born” Saiyan consistently bested him time and again. His arrogance, anger, and constant comparison to Goku leads him down to some very contemptible mistakes in the series. However, his opinion of Goku always being one step ahead of him, even though Goku is a lower class Saiyan, runs the gamut from contempt to rivalry, and later to respect and friendship. It was only after he acknowledges Goku’s abilities as a fighter and accepted him as an ideal to strive for as opposed to something to conquer that Vegeta starts coming into his own. So what the hell does this have to do with programming? Well in Flatiron School, we’re all students aspiring to this ideal of becoming a “ Software Developer”. We’re each training (or coding) day and night to accomplish this goal. Early on I’ve found myself comparing myself to others who I perceived to be doing much better than me; which is extremely toxic. Like Vegeta, it sent me down a spiral which made me bitter and do very stupid things. But like Vegeta I am starting to make a change. Rather than compare myself to others, I pick out the traits that I like and attempt to emulate them to become a better me.","['Anime', 'Codingbootcamp', 'Flatiron School']",https://medium.com/@tyrellgordon/be-more-like-goku-a-flatiron-experience-b3393c274412,0,['Flatiron School'],1,0,tyrell,M,0.009480222294867604,0.9905197777051324
Alan Hong,"Programmer / Developer-in-training, former Air Traffic Controller, Pilot, Entrepreneur.",The Iron Yard Houston Week Three – Alan Hong – Medium,2017-06-10 03:45:24,medium,"The Iron Yard Houston Week Three What a week it’s been! We started this week with the basics of Java Script. We have all learned so, so much this week alone, holy shit. From for-loops and conditional statements to manipulating the D O M and arrays. Our new week three project is to design a calculator that displays on a H T M L page, is styled by C S S, and is run completely with J S. Before I decided on the Iron Yard as my choice for the coding boot camp to attend, I researched many many other schools around the country but also in Houston. The way I gauged the level of instruction and the amount of progress the students made during the entire course, was by asking the school to see some of the graduates’ Capstone or end-of-course projects. Most schools were able to provide examples. Other schools were showing me the “design a calculator” project as their students’ final project… and here I am in week 3 of 12 at the Iron Yard, doing the same project. Either other schools are seriously slow, or the Iron Yard is pushing us amazingly hard, or both! But to be clear, I do not feel super stressed or like the work load is unmanageable. Yet, lol. I feel like I’m just barely keeping my head above water most days. Which is totally intended from what I understand lol. But I enjoy it very, very much. Coming to this field from the F A A and Air Traffic Control and a government job in general perhaps, gives me a unique perspective of this new industry. I think I appreciate the overall culture of the tech field like 1000% more than my fellow new entry. In stark contrast, life in the F A A and as an Air Traffic Controller was completely opposite. The atmosphere in the control center was oppressive, completely pitch black in the radar room without any windows, close-minded, and had terrible and mandatory shift changes. Most of the older controllers hated their own existences and refused to talk to any newcomer at all. And most of the controlling itself was mind-numbing 95% of the time, punctuated with 5% of sheer panic and frustration during those weird emergencies or weather problems. Now compare that to most of the companies in the tech field. Look at the campuses and culture of Google, Apple, Facebook, Snapchat, etc that highly promote creativity, forward-thinking, open and accepting culture. As you can imagine, I couldn’t be happier with where I am right now and the change I’ve made :)","['Coding', 'JavaScript', 'The Iron Yard', 'Programming', 'Codingbootcamp']",https://medium.com/@xiupan/the-iron-yard-houston-week-three-ea60afeedd6d,0,['The Iron Yard'],1,2,alan,M,0.0030826743350107835,0.9969173256649893
Tyler Knight,,Learning To Code – Tyler Knight – Medium,2017-07-05 04:48:18,medium,"Learning To Code Learning to code is not easy. At least not to me. And unless you’re some kind of half-robot cyborg I imagine learning to code has it’s challenges for everyone. But I think given the correct circumstances way more people have the potential to learn than we realize. Everybody obviously has different styles of learning and I feel like I have dabbled with quite a few. Previous to attending the Flatiron Bootcamp I worked at a very small web development company. At first I was hired on as just a designer, creating web layouts and various other small design projects. Because the company was so small I was able to take on more of a front-end developer role by teaching myself in my spare time. I used tools like Code School, Team Treehouse, Lynda and a whole bunch of Google. What I liked about some of the online classroom resources was that everything was very straightforward and objective. They more or less gave you the exact steps to complete a particular task. I also liked the freedom of working on my own time and pace. If there was anything I didn’t quite get I would just go over that section again. It offered a certain flexibility that I needed to operate around my work and personal schedule. Of course there are many disadvantages to learning on your own. As nice as straightforward objective tasks and tests are they don’t really mimic how fluid real web design and development can be. Not every website is going to have the exact same structure or functionality as that one particular example you worked on. And as much as I like the freedom of learning on my own, I reluctantly admit that on some occasions I forgo the idea of self-discipline. You also don’t get the advantage of another person who can answer more specific questions and help work through small things you might get stuck on. I can’t count the amount of hair I’ve pulled out of my head over something as simple as a comma being out of place. Me weekly. I can say that I learned the most simply by doing. I was lucky(or unlucky) enough to be in a position where I just had to get the work done for clients. I was in a unique spot at the company where I was really the only one who knew C S S and responsive design. So they relied pretty heavily on me to just figure things out. Again, I often would be pulling out my hair, but once I solved the issue it made it that much easier the next time. Over time it all became second nature. Now I am a little under two weeks into a coding bootcamp. It’s a lot of material in a short amount of time. I thought this style of learning incorporated all the ways that I had learned previously. It has a certain aspect of completing objective problems, working through more complex real world examples, all while having that huge advantage of an instructor to keep you on pace. While you do lose the flexibility and freedom, you have far less opportunity for those oversights in self-discipline. So I guess at the end of all this rambling my point is this: if you want to learn to code you may have to try a few different ways to get it to stick. And the more you practice and just do it, the better you get every time. Through my previous experiences things that seemed very difficult at first, now take basically no thinking at all. Jake the Dog from Adventure Time puts it a little more eloquently: So real Jake. So real. I keep that thought in the back of my mind as a struggle through this bootcamp and learn new things. It keeps me positive as I work through inevitable challenges of learning to code.","['Programming', 'Coding', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@tknight31/learning-to-code-74cd3ae51df5,0,[],0,2,tyler,M,0.02733675202290966,0.9726632479770904
TychZoe,"Bridging Africa’s IT gap, one child and one language at a time.","At exactly 0900 hours, the doors to the Aerocode boot camp opened as promised.",2017-08-08 10:18:06,medium,"Credit: Aero Code Boot Camp, 2017 At exactly 0900 hours, the doors to the Aerocode boot camp opened as promised. It wasn’t long before students started trickling in one after the other including some last minute registrations. I’d confess that the turn up was more than anticipated, that’s not to say we had bitten more than we could chew. Far from it, the encouraging numbers only further ignited our passion to achieve the tykezoe vision of training 100, 000 young African tech experts. But to our surprise. The venue had already been spruced up for the arrival of our young future software developers. The orientation began as our able Cognitive/creative director welcomed them in his usual animated and spirited manner and before long he had all aerocoders relaxed and interacting as all shyness and first-time timidity were dispelled. The orientation proper began as the founder, Kurios Shaba gave his whole welcome address and read out other information regarding the bootcamp. Kurios V and Kurious Cephas were both on hand to integrate the students into the different tech trainings on offer and present a brief introduction to the courses. The enthusiasm shown by everyone, students and tutors was enormous, far beyond comparison and from the first moment it was obvious to the blind that it won’t be the normal training they are used to. I’m happy to say our boot camp is officially open and the future looks as bright as can be…","['Technology', 'Programming', 'Codingbootcamp', 'Aerocode Bootcamp', 'Afrotech']",https://medium.com/@tychzoe/at-exactly-0900-hours-the-doors-to-the-aerocode-boot-camp-opened-as-promised-8fa36f5f8915,0,[],0,0,tychzoe,Unknown,Unknown,Unknown
Amarachi Agbo,"Tech enthusiast, lover of knowledge, aspiring developer",My Experience in Andela’s Boot camp so far… – Amarachi Agbo – Medium,2017-05-09 15:52:46,medium,"My Experience in Andela’s Boot camp so far… Today has been yet another day of researching, coding and testing. Believe me when I say boot camp is literally like military training camp except in this case mental strength is what is exercised. Learning is quite fast-paced and independent (you basically own your own learning). Consequently, I have learnt to go with the flow which means less sleep, more hours on the computer, quick study of resources and timely delivery of required output. In all honesty, it has not been an easy task. There have been fleeting moments when I have questioned my ability to push through but then I recall that people with a growth mindset don’t quit (thank you Victoria for emphasizing that at the soft skills session yesterday). As I complete each task and mark it off on the Trello board, I get reinvigorated and excited to move on to the next. I wouldn’t trade that feeling of accomplishment for an extra hour of sleep!!!. Having concluded today’s tasks, I am really looking forward to tomorrow’s. Challenging as it may be, I am ready to take it on and tick it off on the board just as I have done today. With each activity accomplished, my confidence level has been upped and I hope to continue building it up until I am no longer afraid to encounter coding problems. A big appreciation goes to Andela for just being awesome. It is amazing, the transformation that has taken place in my mind and in that of the other campers in the space of 48 hours. I am already on my way to becoming a world class developer and I am excited about that.","['Andela', 'Andela Bootcamp', 'Tech', 'JavaScript', 'Codingbootcamp']",https://medium.com/@amarachukwu.agbo/my-experience-in-andelas-boot-camp-so-far-a9e4112cf18c,0,[],0,2,amarachi,F,1.0,0.0
Jacob Acosta,,Challenging the Programmer Paradigm – Jacob Acosta – Medium,2018-03-13 06:53:59,medium,"Challenging the Programmer Paradigm College and formal education ended long ago. My dual degrees in philosophy and comparative religion taught me a lot about the world, how to see it, and how to live in it. In pursuing those degrees I wanted to answer more of questions about who I am and what is important, and a career was never really a consideration. I had hopes to pursue a more advanced degree but it didn’t pan out. Soon after graduation the bills started calling and the need for a full-time job that could silence their calls was a matter of urgency. Retail presented itself as a possible solution, and I went for it. Retail would take care of me for a few months while I found something more meaningful and paid better. The other opportunities did not present themselves, and retail treated me better than I thought it would. Promotions came annually as I hopped from one store to another and was given more responsibility each time. It finally paid well, and I was comfortable. The desire to pursue the meaningful career waned as I worked more hours and reaped the rewards of O T pay. Time went on and once the retail world stopped offering advancement opportunities I decided to pursue a career with more intention, and one that would provide more opportunity. Talks given by coworkers at my old office sparked a new interest, and I found myself asking for more resources and doing more research at home. Code Academy was the starting point for the step-by-step tutorials and intro to H T M L and C S S, but it didn’t quite cut it for Java Script. J S was the next step because of it’s prevalence, power, and the multitude fo resources. Codesmith came on my radar because a few brilliant coworkers had come out of the program, and a friend/mentor forwarded me a link to an in-person series they host on Thursday nights called Java Script The Hard Parts. The series details an under-the-hood explanation of several concepts beginners tend to struggle with, and introduces many to the concept or paired programming (which I highly recommend if you decide to purse coding!) Pursuing a coding bootcamp was daunting (and still is at times) because I worry that my experience/background has not set me up to be a programmer. Happily, I find myself in a program that does not require years of formal education in computer science. Several cohort-mates have varying backgrounds in C S and other areas that give them a better starting point, but the program suggests this is a career path anyone can pursue. In a brief survey filled out by 16 I found: Half have been coding for less than a year, and another 40% for less than 3 years. For half Java Script is our first programming language, and another 25% are familiar with one other programming language. Half of us have worked one field other than programming, and 35% of us have worked in 2+ fields. I wanted to do this quick survey because it is important that people are investing so much in themselves to do this. The idea that a substantial career and life change can happen in 13 weeks is a lot to take in once you find yourself here. But it’s true, and I eagerly await the opportunities that lie on the other side of the effort.",['Codingbootcamp'],https://medium.com/@acosta.jacob.d/challenging-the-programmer-paradigm-f4bef7e9b4e6,9,['Codesmith'],1,50,jacob,M,0.0024356479040408972,0.9975643520959591
Dan Byler,"Martial artist, instructional designer, trainer, entrepreneur developer in the making, health and nutrition enthusiast",The joy of learning JavaScript – Dan Byler – Medium,2018-03-01 19:03:13,medium,"The joy of learning Java Script Learning how to Java Script is brutal — brutally hard and brutally awesome. Right now I’m on the slope of the Java Script mountain and the wind is blowing and all I want is to just go back to my regular life and not worry about it. But I made this little program work and man did that feel good. In fact it’s a very similar feeling to the first Jiu- Jitsu tournament I won. Or the first time I got an A from this really hard professor I had in undergrad, Dr. Armstrong. Making things work is a rush. It’s like summiting a peak, or learning a new combo and hitting it in sparring. I just organized all these letters and numbers in such a way that something new exists. And every improvement after that is another wave of satisfaction. Now it works but with half the code. And now it works and anyone who looks at it will understand what’s going on. And now it works in a single object that can be put into any program. Just amazing. The process of planning and making a program is analogous to creating other — non code programs. To make a program work, it’s a lot of time upfront planning in tiny little steps how the program is going to work. Then it’s actually doing the steps, and re-working the plan at every step. I found that attention to micro details was a big blind spot for me. A lot of the programs I build (in my current job) suffer from lack of attention to detail. If I walked away from coding right now, I would still have gotten my moneys worth just by discovering that blind spot. Meticulous planning, attention to micro detail, execution, and re-working the plan makes the program go `round. Expanding my usefulness is exciting. Being able to predictably solve problems with code together with my other skillsets makes me so much more useful to the people around me. At work I can be a much better team player. I can improve the digital presence of my friends, family, and organizations whose mission I care about. For my own projects I can take steps forward. Learning Java Script is super alien to me — I should say ‘was’ alien to me. Now I can predictably make some things happen. It might not be the things I want all the time, but I’m getting closer and closer to being really good at it. And I’m loving the journey to being a master.","['Self Improvement', 'JavaScript', 'Bootcamp', 'Codingbootcamp', 'Code']",https://medium.com/@danbyler/the-joy-of-learning-javascript-70d7449a6234,1,[],0,0,dan,M,0.005124154984533513,0.9948758450154664
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,The W3Develops Medium Publication Editor Handbook – W3Develops – Medium,2018-10-03 01:08:45,medium,"The W3 Develops Medium Publication Editor Handbook The W3 Develops open source community runs a technical publication on Medium. Each week, we publish more than stories on development, design, and data science. For the moment, I serve as the publication’s sole editor. I edit and publish all submissions. But we may receive way more high-quality story submissions than I have time to publish. So I finally admitted to myself that I needed help. Even though W3develops reaches thousands of people each month through Medium, You Tube, and our coding platform, we’re a small donor-supported nonprofit. We lack the resources to hire professional editors. This said, a lack of resources hasn’t stopped us in other areas. We have hundreds of volunteers beginning to local study groups, contributing to open source projects, and moderating forums and chatrooms. So in late August, I published a call for volunteer editors. Now we wait for responses. And from those respondents, I will assemble and train a small team of editors. At the same time, Quincy Larson drafted what would ultimately become this Editor Handbook. This is our guide to how our volunteer editor team edits stories. And in the spirit of transparency, I’m making this public. You may find this helpful if you edit a technical journal or Medium publication. Or — if you’re one of the writers who’ve been published in the W3 Develops publication — you may just be curious what goes on behind the scenes. Either way, I hope you’ll find this living document to be interesting and helpful. How we evaluate, edit, and publish stories We receive submissions each week, and are protective of our readers’ time. We seek to only publish stories that are:well-writtenrelevant to our audience of developers, designers, data scientists, and similarfactual, and not primarily written to hype up a product or company","['Technology', 'Programming', 'Technical Writing', 'Codingbootcamp']",https://medium.com/w3develops/the-w3develops-medium-publication-editor-handbook-f45effd9b02b,0,[],0,0,jonathan,M,0.0042130252697924414,0.9957869747302076
chibueze ukaegbu,,LearnFactory Internship: Day 5 – LearnFactory Nigeria – Medium,2018-05-05 13:18:41,medium,"Learn Factory Internship: Day 5 To my Rockstar Code Smiths, may you blossom forever… Rockstar Code Smiths It’s a wrap; Week 1 is done and dusted. Can’t believe the week passed by so quickly. Zoe took the interns on a journey through all the lessons of the week; the goal was to reinforce all they had learnt during the life lessons for the week. Each intern was given opportunity to discuss his takeaways from all the lessons by Steve Harris, Eric Thomas, Les Brown et al. Hands-on Practice Session Lessons continued with Isaac taking them first on advanced H T M L5, discussing Drag and Drop. This was a very hands-on lesson as they did a class challenge where each intern was required to come to the board and write Java Script code that will enable them drag and drop an image from one div element to another. There was laughter, there were cheers of delight, and definitely there were groans of disappointment too :). Their camaraderie is to die for; they have bonded in a cool friendship even I begin to envy. After the H T M L5 class, Isaac continued on the Bootstrap 4 journey they began together yesterday. The core of the lesson was to complete the One Page website they started building yesterday, adding in the About Us section down to Contact Section. Guys, dapper and cool Ladies, ahaaa…. . Learning, as it should be… About Saturday… Sacrifice… Guess what, we got to the office early today and guess who showed up a few minutes after 8am? Shalom, our youngest intern. Since then, she’s been focused on her code. They were given a weekend challenge to build out the user interface / landing page of Konga (www. konga. com), one of the leading e-commerce platforms in Nigeria, using Bootstrap 4. Konga was recently acquired by Zinox Group, one of Nigeria’s largest tech companies. Shalom, doing her thing… Before 9am, 5 more interns joined Shalom: Bernadine, Grace, Raymond, Chibuike and Ezekiel. Instead of taking a break, or watching movies, they made the decision to master their craft a little more over the weekend. This is Sacrifice; this is the Commitment that makes me certain they will succeed. Bernadine, all smiles Ezekiel, seeking counsel from Isaac They all are my Rockstars, they make the effort and personal sacrifices of my team and I worth it. Who would have believed this would be possible. Building an ecosystem where it was deemed impossible is one of the craziest things to do, but we are crazy, and that’s why we are changing the world. Looking forward to Week 2 with utmost expectation. Have a lovely weekend, I will see you on Monday. i C Chief Code Smith","['Nigeria', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-5-d387ffce2805,0,[],0,161,chibueze,M,0.0,1.0
Connie Reinholdsson,Software Engineer (Android) at comparethemarket.com,Ruby on Rails — A trip down mystery lane – Connie Reinholdsson – Medium,2017-05-15 19:34:17,medium,"Ruby on Rails — A trip down mystery lane Makers Week 8 Since starting at Makers Academy two months ago, I’ve been introduced to new languages, frameworks and fascinating technologies on a daily basis. But despite that, this week really stood out from the others. It was the week that I was finally introduced to Ruby on Rails, the web application framework I’ve wanted to get my teeth into for so long! And why is that? Because since I began my friendship with Ruby in June 2016, everyone around me seemed to know this friend as Ruby on Rails. Every time when I mentioned Ruby, introduced someone to Ruby or wrote about Ruby, everyone kept referring to her as Ruby on Rails. Had I ever had an acquaintance with rails? Nope. Opened a rails application? Nah. Run a single bit of code in rails? Umm, let me think… no. Since I started learning Ruby, Rails has been like a book with random pages hitting me from left, right and centre hinting that I should read it. Every time I’ve looked for a ruby solution, people on Stack Overflow seems to think it should be for Ruby on Rails. And this week, I’ve finally had the chance to sit down, open the book and slowly read it from the beginning to the end. And it’s safe to say - good things come to those who wait. Time to open the book of Rails… This week’s challenge was to build a web application similar to Yelp, a website where you can add, edit and delete restaurants, leave reviews and give ratings. Spinning on last week’s theme (read blogpost: News for Ewes), we decided to create Meals for Seals, a website for seals to help them review restaurants in the ocean, including Silky Salmon and Happy Hake. Welcome to Meals for Seals! So what was it like to build a website using rails? The funny thing is, now that I’ve built about three rails applications, I’m struggling to remember what I did before rails. Yes, I understand that this sounds ridiculous seeing as I’ve known Ruby for almost a year and rails for a week. But I honestly had to go back and look at my old programs and do some research to remind myself. But now I can’t remember… Anyway, how to get started with rails? Let’s start from the beginning. All you have to do is run ‘rails new directory_name’ in the terminal and a big tree of files will be generated. Rails then sets up the model-view-controller ( M V C) framework and provides structures for a database, a web service and web pages! C R A Z Y. As soon as the files are generated, you can run ‘bin/rails s’ to run the local server and ‘ Yay! You’re on Rails!’. It’s that simple! We then started building the application, using short simple commands to generate models, controllers, databases and paths. A model generated with one command? Yes, you heard me right. Within a couple of hours we had set up a website, where you could add, edit and delete restaurants. We then added ‘sign in’ functionalities with a couple of quick commands, something I spent hours learning how to do manually. And despite being completely new to rails and taking in this whole new concept including Facebook authentication which was a new feature, we had a fully functioning website in a couple of days. If we did this from scratch in Ruby, I reckon we would have barely got halfway in that time. So if rails does so much of the work for you, can you really call yourself a programmer? Of course. Don’t you worry, there’s still lots of coding and logic involved and learning ruby before learning rails, has so far proved a big advantage. What rails does is simply cut out all the lengthy admin parts, like installing gems, setting up the file structure and create database tables. This also eliminates a lot of small but potential errors including typos, requiring files and setup issues. And that in itself saves so much time. ( Although I have to say I do miss debugging!) Rails did take a couple of days to get my head around, simply because I wasn’t used to the way models, controllers, paths and database migrations were generated. But as it got to the weekend, I felt comfortable with it and all I could feel was gratitude for this fantastic web framework. So is there a catch? Yes, there is one. The only problem I came across was that when you do get an error (which is nowhere near as frequently as when using ruby only), it’s often harder to solve because there is a lot (and I mean a lot) of magic happening behind the scenes. And when you haven’t written all the code, it can prove somewhat tricky to get to the bottom of it. We found this particularly around database relationships, where there was a whole new level of mystery behind the interface. But we managed to solve it, learn from it and as we got used to it and it got much easier! So here’s a summary of this week: What went well: Rails set up: It was super easy to get going! Super quick: Rails sped up the programming process x 10. Eliminated potential errors: Rails eliminated potential small errors e. g. typos, requiring documentation and installing gems which can end up taking long if you’re not careful! Documentation: There’s so much of it! And I can finally use everything mentioning rails! Weekend Challenge: We were asked to build Instagram and I managed to set up a website with the basic functionalities in one day. I made Hamstagram, seeing as I love animals and searching for funny hamster images made the challenge much more fun! Challenges: The magic behind the scenes: Felt strange not knowing everything that was going on … Fewer but bigger errors: When we did get stuck on an error, it was often harder to solve seeing as we hadn’t built it from scratch and had to do some deep digging! Tree structure: It took a while to get my head around the document structure and where everything was located, but after building three applications I feel much more confident! Facebook authentication: I’m so glad we learnt this because I have a feeling it will be useful, despite it being quite difficult to get my head around. Lack of time for side-projects: I have even more side projects I want to do now I can build them with rails, but so little time. The list is getting longer and longer. My priority when I graduate will be to build my own C V / portfolio website. Can’t wait! Learnings: Rails: Building an application in rails from setup to finish. Tick! Model-view-controller ( M V C): Understand the structure much better and where to locate all the files / look for potential errors. Database relationships: Got stuck on two big problems during the Weekend Challenge with migrations and relationships, but I managed to solve them and realised the importance of singular and plurals when creating migrations… Rails console: You can use this both on the web and in the terminal, love it! I’m a big fan of I R B/ P R Y so I loved using this tool for my understanding and debugging. Solving rails errors: Going back through the commands, understanding what we did when, searching through the files and using the web and the rails console to solve the errors. Overall, it was a great week! We had lots of fun and I loved learning rails. And I now know how to build a web application super duper quickly. Y A Y. Can’t wait to get started setting up my own websites. Is it bad that I want a job that starts a month later so I can spend a month working on all my ideas…?","['Ruby on Rails', 'Programming', 'Rails', 'Codingbootcamp', 'Coding']",https://medium.com/@connie.reinholdsson_2152/ruby-on-rails-a-trip-down-mystery-lane-268b15dad8fb,0,[],0,6,connie,F,0.9745464392093149,0.02545356079068508
Re:Coded Team,We train conflict-affected youth to become the tech leaders of tomorrow.,"To our supporters, – Re:Coded – Medium",2018-03-02 08:00:00,medium,"To our supporters, Last week marked the graduation of our Erbil cohort. So, we wanted to thank you for supporting us. Over the last 5 months, these incredible youth have not only become great developers, they’ve become great leaders and friends. We have no doubt that these fellows will be the next tech leaders of Iraq — helping to build the tech ecosystem and digitizing the country. Our Erbil Fellows developed some fantastic apps which we wanted to share with you all, you can find them here. So, if you, or a friend you know, are looking to hire an amazing Android developer with international client experience, drop us a message. Within the next month, we’ll be launching our bootcamp in Istanbul. From there, our fellows in Urfa will be working hard to finish their client projects in time for their own graduation day in late- March. Our achievements and successes are equally yours. All of this would not be possible without the continuous support from our wider Re: Coded community, such as yourselves. We wanted to especially thank our partners Udacity for the coding curriculum, and our main sponsors in Iraq, G I Z and Zain, for the continuing support. Whether you’ve been a long-time supporter, or have recently joined the family, thank you for being on this journey with us. We look forward to sharing with you what we have planned next. Ali, Marcello, and the Re: Coded Team. Originally published at www. re-coded. com.","['Tech', 'Tech For Good', 'Coding Bootcamp', 'Iraq', 'Refugees']",https://medium.com/re-coded/to-our-supporters-9dc23d5b1541,0,[],0,11,re:coded,Unknown,Unknown,Unknown
Mighty Minh,"I have nunchuk skills, computer hacking skills. Minh of many talents.",UCSD Coding Boot Camp + Projects – Mighty Minh – Medium,2017-07-10 17:34:16,medium,"U C S D Coding Boot Camp + Projects It’s been an exciting time in San Diego, C A. When I moved here with my fiancé from Madison, W I seven months ago, I immediately decided to take up this intense 6-month coding boot camp program through U C S D- Extension. Last Saturday, I am proud to say that I have finally graduated! This took a lot of sacrifice including time away from my friends, family, and fiancé, and playing Pokémon/competing in state and national tournaments. The program was intense and I do recommend it for anyone who is serious about learning how to code and building programs/websites/apps. There are so many coding boot camps out there now, but U C S D- Extension is particularly unique because it partners up with Trilogy, has a career counseling component and extra help available from T As and instructors who are experts in the tech industry. I was putting in 30+ hours a week learning how to make websites and applications from scratch. This includes H T M L, C S S, Javascript/j Query, my S Q L, Mongo D B, R E A C T, Node. js, and so much more. The instructors also made us do three group projects throughout the program. I had the pleasure and honor to work with the same awesome people throughout the three projects. Thus, R E M Y was found. It stands for our names: Radhika, Erin, myself, and Yoursa — together we make up an amazing multicultural, multinational, and women-powered team! The first project was to get us familiar with the front-end of the website. This means that no login is necessary and we weren’t going to store any data. We called it Piky Film. The idea behind the app is that we want to make the app fun. We used Microsoft’s Face A P I, which has algorithms to determine users’ ages based on their selfies. Then, using a Movie A P I, the app returns back movies that were released the user’s guessed birth year. So the next time you don’t know what to watch, use this app! The second group project was to build a full-stack program. Erin pitched the idea of an app that lets user share their belongings with one another, building on the growth of the sharing economy industry. Check out Remy’s List here. Our last final project was the one that took the most work and had to be built with a M E R N stack, which stands for Mong0 D B- Express- R E A C T- Node. js, Radhika was the star V I P of this show and R E A C T wizard (someone give this woman a job!). I’m also the most proud of this project because it is driven by our sense of social justice. Giving Good(s) app lets caseworkers from non-profit organizations and shelters post items their clients need. My team and I trust that the internet has good samaritans who will look at the website and donate to those specific shelters. But it needs your help to push it forward! The website is currently undergoing beta-testing and any (constructive) feedback is welcome! R E M Y will soon become an L L C and we will continue to make apps that are fun, meaningful and that can spark social changes.","['Web Development', 'Codingbootcamp', 'Coding']",https://medium.com/@minhtuyen/ucsd-coding-boot-camp-projects-63e3127d4f88,0,[],0,3,mighty,Unknown,Unknown,Unknown
Anders Wood,front-end developer | adventurer | mountain lover,Open Source Contribution?… Do It – Anders Wood – Medium,2017-07-20 03:13:16,medium,"Open Source Contribution?… Do It A tale about open-source contribution as part of a Turing project. For those short on time, the short story: our Turing project required us to submit a P R to an open-source project, we were scared, the developers were friendly and welcoming, we submitted a P R, and it was merged… we did it!contribute to open-source code, we did it, high five! The long story involves 3 junior devs, a unicorn and arson crimes. Actually no unicorns, and it was 4 junior devs until Adam got a job and ventured into the wild to contribute to society. We embarked to contribute to the crime data explorer repo, a public repo that ‘aims to make national, state, and local crime data more accessible and understandable to the public. ’ The app allows users to search by state, crime type and time period and provides visualizations of the data that are published by the F I B and come from ‘over 18, 000 city, university and college, county, state, tribal, and federal law enforcement agencies voluntarily report crime data. ’ First we cloned the repo and installed it locally. The readme file provided excellent instruction on setting it up, including a command for copy and pasting the . env file: `cp env. sample . env`. The readme even provided a link directly to the api generator site. We dove in to the large, polished and unfamiliar code-base. To this point we had dealt mostly with our own codebases and those of our peers. We hadn’t dealt with familiarizing ourselves with a giant and unfamiliar code base. We started exploring and clicking on everything. It seemed straightforward. The app has a few routes and displays- not so different from other projects that we’ve done. Then we took a peek under the hood to familiarize ourselves with H O W the app does what it does. This part was eas… no… this had us feeling. . when you take a peek under the hood of unfamiliar and big code Terrified. We felt terrified. The app had M A N Y nested directories and used libraries that we’d never heard of . It was difficult to understand where the html code displaying on the app came from within the code because of all the different sections and libraries. A small number of the libraries include D3, Basscss-sass, lowdash, js-yaml and swagger… all new to us. After exploring the code, we figured we’d pick off some low-hanging fruit and address the easiest issue posted in the repo. We settled on issue #1136: change subhead type style. This seemed like something we could do in our sleep: change the font of the heading from Georgia to Arial. We dove in, found the font variable buried deep in the S A S S code and updated it to remove Georgia. We then refreshed the page. Nothing. We refreshed it again, restarted the server and refreshed it again. Nothing. Our confidence drained… we weren’t really coders, we were imposters trying to code. We couldn’t even change the font. “ How bout service workers?” Spencer suggested. . Genius! Spencer identifying service workers F T W! We unregistered the service worker, deleted the cache in the “application” section of the dev tools and selected “ Bypass for network”. This cleared out the cached information and prevented caches going forward so that changes we made to the code would reflect in the app. That did the trick and the font updated to Arial! We hopped on to github to submit a P R to the issue to make the update and… someone had self-assigned the issue… it was no longer up for grabs. The confidence bank had been filling, and now. . full withdrawal. Back to square one… we needed a new issue to resolve. . but as we dug into all the issues and figured out how to address them, one by one they were assigned to a user and resolved without our intervention. The timing on these assignments was frustrating- the issues had been open for over a week and were just now being assigned. We went back to the readme and reviewed the process for setting up the repo. The readme provides some validation steps one can take to ensure the server is running correctly and the wires are all connected. We noticed that some of validation steps were slightly off- the urls were incorrect for navigating to some of the routes. This was something that needed updating… and we were the three junior devs for the job. We drew straws and had Spencer reach out to the head collaborator to introduce ourselves and get the green light to submit a P R. Several minutes after a nerdy introduction from Spencer, he responded with an incredibly friendly and encouraging welcome. With our ticket to P R, we whipped up an issue and then submitted a P R to it. With bated breath clicked, submit… literally all three of us clicked submit…submitting our first open-source contribution- a truly collaborative effort Twelve minutes after submitting the pr, one of the repo collaborators merged the P R… we had done it. . our updates would forever live in this public code. I got a lovely chill down my spine and just felt kinda…that really happened… it feels so. . . good The moral of the story is : contributing to open-source code is intimidating, but in our experience the community is friendly and you can start small and still make a contribution.","['Open Source', 'Junior Developer', 'Github', 'Turing School', 'Codingbootcamp']",https://medium.com/@anderswood/open-source-contribution-do-it-a56c099719b1,1,[],0,2,anders,M,0.0,1.0
Jay Ching Lim,"I learn, code, and teach.",How I think about a Computer Science Education – Jay Ching Lim – Medium,2016-07-03 17:30:56,medium,"How I think about a Computer Science Education Awesome stuff! I like the way how you apply Human Computer Interaction to what’s going on around us at the same time link it to concepts such as mental models and abstractions. However, I feel that your thoughts are targeted towards a group of people who wants to build products with existing technologies like Rails and Ember, or aims to disrupt industries. You mentioned that Computer Science education is about teaching abstractions and programming literacy, but I feel that it’s more than just those. Computer Science itself is about computational thinking. It’s a new way of solving problems, just like how computers think — step-by-step. It’s considered a field of Science, where people should learn how to think and create new breakthroughs that will push the progress of our existing technologies, or even identifying the potential problematic solutions in technology. Sure, one could argue that they could use the skills obtained through Computer Science to solve problems in other industries, but truthfully in this case, the thinking process is applied to the external field (e. g. trying to get more users, pivoting, etc. ), and not the internal ones (e. g. optimizing a program to make it load faster). C S is not like any other fields like Arts, Communication, Business, or Management in which you could learn skills through applying them in the industry (internships, jobs), and the ones that will change the way how people communicate, do businesses, or even manage people are case studies, which are results of experience, not science nor research. People these days have misinterpreted the notion of Computer Science and they think that it’s a field in which you could learn how to program and build cool products. Why not just call it Computer Technology, or Programming, or Startup Engineering? Well, it’s a fact that the current trend in our world today is about startups and disruptions, and people figured out that the best (and easiest) way to disrupt an industry is to do it through technology due to various reasons. Maybe no one is doing it yet for that specific field, or maybe they feel that everything should go on the cloud, or maybe they feel that everything should be converted into something that could fit into an electronic device like a mobile phone. Perhaps that is why bootcamps work really well in terms of attracting students as they market themselves as a place to learn how to program and build cool projects in X weeks, or learn how to become a software engineer in Y weeks. I strongly disagree with this statement: “ Speaking of context and reality, there is an even bigger problem with the traditional C S program. ” There’re no problems with the traditional C S program. The problem lies on the group of students entering C S with a different (and wrong) expectation, hoping to become good software engineers who can work in a top-notch tech company, or entrepreneurs who can create an app and apply what they have learnt in classes by the time they graduate. I would say that if they enter solely because of those reasons, then they are in the wrong program. Eventually, they will become very disappointed because they can barely apply what they have learnt just like what other students learn when they are in a pure science or mathematics course like Biology, Chemistry, and Pure Mathematics. Do you see any aspiring Physicist complaining after entering a Physics program, or any aspiring Mathematicians complaining after entering a Pure Mathematics program, or any aspiring Computer Scientists complaining after entering a Computer Science program? I don’t think we do because these groups of people who want to study these programs or aspire to become one of these professions are very low. Even if we do, it’s very likely that they finally figured out something that they are passionate about, but they just couldn’t change their major or program due to specific reasons and hence the frustration. We see a lot of aspiring entrepreneurs or software engineers complaining after joining a C S program. These people will feel that bootcamps are a much better place because they get to apply what they have learnt, and by applying I mean creating products or join a company that build products (and requires those skills learnt from bootcamps). If all a person care is about learning a specific skill and applying it, then he or she does not need a C S degree. Just self-learn or join a bootcamp; anyone can do this, even a 12-year old kid could do this after going through some tutorials or reading some books. So why C S then? Technology is a field that is rapidly changing. Look at what happened over the past 20 years — several languages were born, new frameworks were created, and new ideas have been postulated. Today, everything is moving towards Machine Learning, Artificial Intelligence, Big Data, A R/ V R, and everyone is crazy about them. I F Computer Science education is about learning new tools, then students would only know those-and-only-those that were taught specifically and will struggle when it comes to newer ones. And one thing about them: they know how to use tools, but they do not know how to create tools. This is just a generalization, and there’re definitely outliers who can do better than this. People always ask me, should I use X or Y to do Z? Honestly, if you know your concepts well, it doesn’t matter what you use; just use the one which best suits your task. A hammer for a screw? I always like to use this analogy: there’re two tools on the table, a screwdriver and a hammer. You are required to fix a loose screw in a wood without looking at any references. If you’ve gone through a “bootcamp” or some tutorials which only teaches you how to use that hammer, you’ll just use it anyway because you know how to use it and it fixes your problem (after spending some time hammering it with a greater force of course). But was that the best solution though? I could also say that people can create bootcamps for Chemistry, Physics, or Pure Mathematics, just to “produce” more Engineers or Financial Advisors. Or even bootcamps for Accounting or Medicine just to produce more Accountants or Doctors. All these are just trends. People are not teaching the newer generations how to think, but they are just creating more skilled workers which will be replaced by robots one day. If by any chance the field of Chemistry or Physics starts to boom, the same thing will happen, just like what happened to technology which led to the rise of C O D I N G bootcamps. ( Note the name, coding, and not Computer Science. ) Coding bootcamps are great if one wants to learn something new (and I think that everyone should join if they don’t know how to code, or require more guidance in learning how to code, considering the fact that there are tons of free resources out there like The Odin Project, Free Code Camp, Udemy, etc. ), but they shouldn’t neglect the journey of learning how to think by going through a traditional university. It’s actually those homework and exams that will teach students how to eventually think computationally and become problem solvers academically (because it’s a field of Science). If everyone doesn’t do that, we won’t have anymore people who will invent newer technologies which will beat self-driving cars or robots, or even creating a better search algorithm that will eventually create the next Google. ( Although Peter Thiel once said in his book, Zero to One, to avoid creating the next Google, I hope you get my point. In order to start from scratch, you need to understand how things work. ) No matter what you do, it all goes back to the fundamentals and linking them all together with your experience regardless of where it came from, which is a result of thinking. It really is just about how people manage their expectations. But if one truly wants to go for a Computer Science education, go for it if and only if he or she is interested in exploring beyond just learning how to program, and hoping to build something new that will contribute to the advancement of technologies in our world today.","['Programming', 'Education', 'Computer Science', 'Computational Thinking', 'Coding Bootcamps']",https://medium.com/@imjching/how-i-think-about-a-computer-science-education-250656ffba4e,5,[],0,13,jay,M,0.013045137745151862,0.9869548622548482
Rebecca Townsend,Software engineer & challenge seeker.,An Unofficial Guide to doing a Coding Bootcamp — Part 1: Fundamentals,2018-07-07 22:41:04,medium,"An Unofficial Guide to doing a Coding Bootcamp — Part 1: Fundamentals I currently work as a software engineer for a tech company in San Francisco, on a team that builds mobile apps with React Native. It’s a dream job, especially for someone like me who discovered my passion for coding pretty late in the game. Since successfully making the transition from analysis and non-profit management to software engineering, I’ve been contacted by many people who are curious about doing the same thing. They all have a lot of the same questions as each other, and a lot of the same questions I had when I was starting out. I’ve loved sharing my experience with them, and I thought it might be helpful to put it out as an ‘unofficial guide’ for anyone else who’s got the same questions. So, without further ado, let’s jump right in to… Part 1: Fundamentals When I first began learning how to code, I came across a lot of new terminology. What follows is a simplified collection of some of the important terms and concepts that I wished I’d known in the early days of my self-education, and as I began to research what it would take to become a software engineer. Q: What’s the difference between backend, frontend, and fullstack development? A: Generally, frontend development refers to the code that determines the way the application or program looks and behaves. Backend development refers to the code that handles the retrieval, processing, and storage of data. Fullstack developers do frontend and backend development. In practice, most people focus more heavily on one or the other, and have a decent working knowledge of both. *common misconceptions resolved: Frontend developers are not synonymous with designers, and backend developers are not synonymous with data analysts. Q: So, should I do a frontend, backend, or fullstack bootcamp? A: My philosophy on this is that you should study the full stack if you don’t already have experience working with one or the other. You’ll be able to figure out for yourself which end of the stack you like the most and want to focus on down the road, and you’ll get a comprehensive understanding of how a full app works. Q: Back up for second. What’s a ‘stack’? A: ‘ Stack’ just refers to all of the libraries, frameworks, and tools, from frontend to backend, that make up an app. Q: What’s the deal with ‘frameworks’ and ‘libraries’? A: The easiest way to think about this is that there are certain operations that need to be done frequently, and that aren’t straightforward to do with pure code. Libraries are collections of functions for these operations that abstract away the complexity of writing the function all on your own. Frameworks are a little bit different, but the concept is the same — they’re an abstraction of a given language that provides cohesive functionality for building a program. Q: What even is an app? A: When I started programming, I was kind of confused, because I thought an app was a thing on my phone, but I heard the term being used to describe websites too. App is just short for ‘application’, and it’s commonly used in reference to any dynamic and interactive program, whether a mobile app, a website, or a piece of software downloaded to your computer. Q: What are A P I’s? A: A P I’s are rules for interacting with an application’s resources, and ‘ A P I’ is interchangeable with ‘server’. Let’s say you’re making a website and you want it to show what movies are in theaters based on a user’s location. You would make a ‘request’ to an A P I that says “hey, can I have all the movies that are showing in Wisconsin?” and the A P I will either say “nah, I don’t have that information” or “sure thing, here they are”. It’s a bit more complex than that in real life, but that’s the gist. Q: What’s an I D E? A: I D E stands for integrated development environment, which is really just anything you write, and possibly run and test your code in. Q: What are Git and Git Hub? A: Git is a version control system, and Git Hub is a web based hosting service that uses Git. When you work on projects, especially on teams, version control helps your team work on the same files without interference, and allows the team to keep track of changes to the code at different points in time. I hope this provides a clear, high-level overview of some of the terms and concepts you’ll come across during the early stages of your exploration. Let me know if you’d like to see any additions or clarifications, and check out Part 2: Choosing a Bootcamp and Part 3: Preparing for Success.","['Web Development', 'Beginners Guide', 'Codingbootcamp', 'Full Stack', 'Coding']",https://medium.com/@rtownsend/an-unofficial-guide-to-doing-a-coding-bootcamp-part-1-fundamentals-e134decea6de,1,[],0,85,rebecca,F,0.9971803645500265,0.002819635449973499
Altcademy Team,The team behind Altcademy.com,Student Stories: Nicole Zhang – Altcademy – Medium,2018-08-17 08:06:37,medium,"Student Stories: Nicole Zhang Nicole is currently studying Full-stack Web Development Nano Major Q: What were you doing before studying at Altcademy? I was a Ph D student in Theoretical Chemistry at the University of Hong Kong. Q: What were your reasons for learning at Altcademy? I did a startup during my studies, and back then I used Word Press for prototype, and there are so many problems with that. So I get how important it is to have the ability to build a quality website, and I decide to learn Full- Stack Web Development. Q: How was your learning experience at Altcademy? What did you like the most? I like the experience that I can be very independent while learning: reading the materials, finishing the exercises, and doing the coding assignments, but when I have any problem, my teacher is online to help me instantly. Q: What are you working on now? I’m working in Deloitte Consulting now under this new initiative called Future of Work, and we have so many new projects all the time. On one hand, I help our clients build interactive digital playbooks and build platforms to educate our Deloitte practitioners about our products; on the other hand, I work as a data scientist and build models for actuaries, as well as some data mining projects. I wouldn’t have got this job if I hadn’t learnt Web development, as they really need a talent to fill in different roles. Q: What aspect of the learning experience at Altcademy has helped you with what you are doing now? The most important part is definitely the front-end. Altcademy taught me how to build fully responsive websites and follow good coding practice. If you are good at that, it’s not hard to get used to Cordova or even React Native to make beautiful apps. Java Script specifically was very important, as it helps me with writing animations which can really impress clients. By the way, check out my portfolio website. Q: Any advice for other budding programmers? I actually appreciate all the hardship while completing the assignments. I was always hoping to get as many exercises as possible. One slight let-down is that most corporates don’t use Ruby, but picking up P H P was quite quick and it’s sufficient. But I do think I can use Ruby in future for my own projects. If possible, including Angular or React would be very helpful too. This story is from https://www. altcademy. com/stories/@nicolezhang","['Web Development', 'Learning To Code', 'Codingbootcamp', 'Student Stories', 'Coding']",https://medium.com/altcademy/student-stories-nicole-zhang-e7ca19e684f5,0,[],0,0,altcademy,Unknown,Unknown,Unknown
Isaac Weinbach,Product Manager / UX Design,"Advice for Coding Bootcamp Students (Pre, During and Post Bootcamp)",2018-05-15 20:10:10,medium,"Advice for Coding Bootcamp Students ( Pre, During and Post Bootcamp) With software development being a highly demanded skill, attending coding bootcamps are becoming very popular. Back in 2014, I attended Wyncode, one of the first coding bootcamps in Miami. This alternative form of education was extremely eye opening and valuable. Being a few years out of a coding bootcamp and now fully involved in the technology industry, I would like to share some pointers to those thinking about attending, are currently attending one, or have recently graduated. Pre- Bootcamp See if you have interest in software development It’s a big decision to dedicate 10 full weeks and spend about $10, 000 on a course. Whether you are leaving your current job to start a new career, or seeking an alternative to traditional university, I highly recommend you do your research. Start reading about software development, do some online lessons, and see if you are intrigued to find out more. A software developer learns, researches, and experiments for the rest of their career so the passion towards bettering your craft needs to be there. I’d recommend getting your feet wet by reading the first section of The Odin Project and doing some lessons on Code Cademy. Consider the self taught route Great news for those not looking to spend the thousands of dollars on a coding bootcamp! Everything taught in a bootcamp is available online! The only way you’ll really save the admission fee is if you have the discipline and time to teach yourself these difficult concepts. Prepare as much as possible The classmates who usually excel are the ones who have more of an understanding going into the course and are looking to advance their current knowledge base. There’s a lot of time you can save by spending months in advance familiarizing yourself with the beginner concepts and understanding the parts that make an application work. During the Bootcamp Grind I know it sounds cheesy but you have to “love the journey”. The best software developers are the ones who geek out over code. If you are going to spend the time and money, give it your all. Remove yourself from your social circle, stay late into the nights, study on weekends. During these weeks, your life should be eat, sleep, code. Take advantages of the resources offered You just paid thousands of dollars and are taking a chance on propelling your career. Why not make the most of it? The resources bootcamps offer are a great learning environment, classmates you can collaborate with, knowledgeable teachers, a network of past graduates, and hiring partners where you can land a job. Post Bootcamp Bet on your future Congrats! You just completed the course and feel you can get that high paying job as a software developer. Guess what, you are still V E R Y G R E E N. There is so much more to know before you can start contributing to production codebases and working with other engineers. Look for the job with the best mentors and for the one that offers you the most upside to grow. In terms of dollars, it’s far more valuable to bypass a higher paying salary where you will be doing maintenance code, have a lack mentors, and use outdated tech V S working in a place where the culture is great, the learning opportunities are high, and you have great mentors. In the long run, your skill set will earn you an even higher salary. Be involved Go to meetups, attend hackathons, see what’s happening in the community. Getting out there is always beneficial to collaborate, learn new things and meet a future business partners, employers or friends. The journey is a long, hard, but fun one. Technology moves fast and it’s up to you to develop this skills to pick up the latest tools to implement. If you have any questions feel free to tweet me @i_wein.","['Programming', 'Software Development', 'Codingbootcamp', 'Learn To Code', 'Code']",https://medium.com/@isaacito/advice-for-coding-bootcamp-students-pre-during-and-post-bootcamp-e54e858c4d41,1,['Wyncode'],1,13,isaac,M,0.00265371556531412,0.9973462844346859
Randy Goldsmith,Web Developer that loves to document my experiences and journey into new things.,My first month’s Experience as a Bloc Student – Randy Goldsmith – Medium,2018-07-12 06:13:02,medium,"My first month’s Experience as a Bloc Student“ Be visible to the job” — Mark Carpenter ( Mentor @ Bloc) That quote sums up the number one lesson I have learned. It isn’t some sort of technology like React or Node J S, a programming language like Ruby or Java Script, or even algorithms. The number one goal above all else in our Apprenticeship (just another word for Program that Bloc gives us), is to get employed. Sure, gaining the technical skills is important. But the main reason M O S T coding bootcamp students join a program is to start a career in software. Bloc’s curriculum is a part time, self-paced, mentorship program. You don’t have to quit your full time job to be a part of the program and it won’t cost you an arm and a leg. There are four main modules followed by a Capstone project that challenges you to build something from the skills you have learned while being in the program. Mentors are the cornerstone of the curriculum. They are there for anything you need. Much like in the real world that you may have a mentor whom you listen and talk to, the mentors at Bloc are also there to listen and talk to. I am currently on Module 2, so I am on my second mentor. I have talked about everything from course related work to python, java, ruby, where to learn Object Oriented Programming, how to write resumes, psychology, where to apply for jobs, football and more. Mentors are very much there to help with our overall development as well as keeping us on track in our apprenticeship. Mark has sparkled a different way of thinking for me. Instead of focusing on my current goals, I should be focusing on the end game. In fact, in Stephen R. Coveys book “ The 7 Habits of Highly Effective People”, one of his key points to master yourself is to “begin with the end in mind. ” Imagine we are on a very tall ladder leaning against a very tall skyscraper. Your wearing knee pads, a helmet, and goggles of course, and when you get to the very top you have a feeling of overwhelming excitement. When you finally stop celebrating and look, you notice that no one is around. You look across the street and see that everyone is on the other skyscraper, not the current one your on. We forgot to lean the ladder against the R I G H T skyscraper. We went through the motions without thinking about the end in mind. In my case, that is successfully getting a job as a web developer. In order to do this, Mark suggest being visible. Start crafting or updating your resume, go to meet ups, create a portfolio, push more code to Git Hub, attend hackathons, create projects, start blogging, or contribute to open source software. All of these things are putting you out there and giving you more exposure to the industry. They are making you more V I S I B L E. It is telling a story about you and people love stories. Stories show people that you have experience and show a deep passion for whatever it is that your storytelling about. What? It shows experience and passion? Aren’t those the two things that employers want to see the most? If you don’t have experience in the industry like me, there is a way to get it by being visible to the job. Of course I have learned a lot at Bloc such as Java Script E S6, using classes in Java Script, understanding inheritance and prototypal chain, and learning React J S but first I need to make sure my ladder is leaning against the right building before I make the climb. I need to make sure I am setting myself up for getting the job. Everything will be so much easier the higher I climb. When I finally get to the top, I will have all those options of people to get me to land job offers because I was visible to the job. So what are you waiting for, go be visible.","['Programming', 'Bloc', 'Coding', 'Codingbootcamp']",https://medium.com/@rgoldshz/my-first-months-experience-as-a-bloc-student-5f8e86d4364a,0,[],0,0,randy,M,0.015008787980931285,0.9849912120190687
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Mustache and More – Emily Deans – Medium,2017-07-26 20:42:04,medium,"Mustache and More We’ve been flying through quite a bit of material over the past few days, and — to be perfectly honest — I’m feeling a bit overwhelmed at the moment. Been reflecting back appreciatively on that prophetic video we watched Monday on our Brain’s A P I, and have found myself repeating the line “confusion is a sign that you’re about to learn something” over and over in my head. Today we spent more time working in Node using a few new package managers — including ‘express’, ‘mustache’ (named for its curly-brace {{ }} formatting and not, presumably, because it was the creation of a hipster), ‘body-parser’, and ‘express-validator’. We’re definitely adding on the layers V E R Y quickly but I’m still feeling pretty shaky on some of the concepts. Just going to keep pushing ahead and practicing as much as possible until I can get them to stick. I’m determined to get there, but any spare words/thoughts of encouragement you could send my way would be hugely appreciated! I still have quite a bit of work to do on my daily and weekly projects, so intentionally keeping this brief today. Instead of a lengthy goodbye, will leave you with the adorable libuv logo. Isn’t it cute? Song of the day: “ Strangest Thing” by The War on Drugs","['JavaScript', 'Code Newbie', 'Lesbians Who Tech', 'Women Who Code', 'Codingbootcamp']",https://medium.com/@emilyldeans/mustache-and-more-e0c1fe675d59,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
TJ Oyeniyi,Lift as you climb.,Dev Bootcamp: The Job Search Pt. 1 – TJ Oyeniyi – Medium,2017-01-02 16:58:00,medium,"Dev Bootcamp: The Job Search Pt. 1 Via Great On The Job I graduated the Dev Bootcamp Austin, T X program on September 2nd. The two weeks following graduation were dedicated to career preparation, as we had various workshops to help us get ready for the job search. I missed a whole week due to travel, but I still had two major takeaways from there that’ll stick with me forever. One, how to craft an effective email/cover letter; and two, the power of technical mock interviews with hiring managers in the industry. I took some of the advice given to us during Career Week and put my own spin on things. For starters, contrary to popular advice, I didn’t write a custom cover letter for every job application. Job searching is a numbers game in regards to applications, and it’s hard to get your numbers up if you’re trying to customize your cover letter for every application. Plus, most people don’t even bother to read it. Instead, I wrote a standard cover letter that spoke to my value proposition, and since I was applying to nothing but software development roles, my value proposition was the same. Here’s the letter, along with my resume. Sidenote: I used Creddle. io to create my resume; another takeaway from the Career Week. I used a Trello board to keep track of my applications. After applying to a job, I’d send a follow-up email/ In Mail between 9:30 A M and 11: 30 A M. The goal with that timeframe was to get my email at the top of their inbox, when they’re more settled in at work. And, I usually sent emails between Tuesday and Thursday. Monday, people are just getting into the office and their inbox is usually swamped. Friday, no one’s paying attention to their inbox. To find who to email, I would look on Linked In (using the Job Seeker free trial) for someone with a title I thought represented the manager of the I T department; basically, whoever I thought the hiring manager was. Whenever I couldn’t pinpoint that person, I just messaged the C E O directly. Having the C E O forward my email/ Linked In message to the I T manager always ensured my application got seen and that I talked to the hiring manager directly. So, if the person’s email wasn’t on Linked In, I just sent them a Linked In In Mail with my cover letter and resume attached. Now, as opposed to a lot of bootcamp grads, I was quite strict in the jobs I applied to. I only applied to Ruby or Ruby on Rails software development jobs. I didn’t waste my time applying to any other roles, including front-end roles or roles in other programming languages. My thinking there: I paid to attend a bootcamp in order to make the switch to software development, I wanted to work in Ruby, so why apply to non-development jobs or jobs in other programming languages. Plus, I didn’t want to be doing tutorials on other programming languages while job searching. I will say though, when push came to shove, and shove almost turned into an upper-cut to the face, I started rethinking that strategy. For more context, I gave myself three months to find a development job in the language that I wanted, and if I didn’t get it by that timeframe, I’d be less strict in my job criteria. I got a job t0wards the end of that timeframe. Now, in regards to the jobs you apply to, pay close attention to the date of the job posting. I wasn’t paying attention early on, and ended up applying to job postings more than 2 months old. S M H. Soon as I realized my error, I only applied to jobs that were no more than two weeks old. Three weeks, if the stress of being unemployed made me desperate that week. Trust me, you’ll have those days. With the above strategy in tow, I applied to jobs on all the major sites: Indeed, Linked In, Github, and etc. I got interviews from all of them. Them, referring to jobs I applied to on those sites. To now prep for those interviews, I would read over my study sheet, then read over the solutions to common coding problems. In regards to my study sheet, I didn’t bother reading anything after the Ruby on Rails section, meaning I didn’t spend time reading my notes on Java Script. My interviews were Ruby specific, so I never got any Java Script questions. After that, I’d read over the solutions to the first 5–10 problems in this problem set. I had quite a few projects on my Github, and I worked through a couple coding problems on Code Wars or Hacker Rank every now and then, but when it came time to prep for an interview, I just read through the solutions. Familiarizing myself with the thought process needed to solve coding problems was the goal, and reading through solutions helped me speed that process up. When I did the above and got an interview, there was nothing technical I was unprepared for. In Pt. 2, I’ll write about my experience during the actual interviews. For now, the template and resources provided in this post will help you be prepared for any Ruby roles. Leave any questions or feedback below.","['Job Hunting', 'Jobs', 'Coding Bootcamps', 'Ruby', 'Ruby on Rails']",https://medium.com/@tjoye20/dev-bootcamp-the-job-search-pt-1-137baed85cff,2,['Dev Bootcamp'],1,8,tj,M,0.005271481286241434,0.9947285187137586
Jacob Moore,,Day 15 — What did I do wrong day? – Jacob Moore – Medium,2017-08-04 13:34:03,medium,"Day 15 — What did I do wrong day? Fridays at The Iron Yard are…interesting. Typically a week day is composed of the following:9:15: Standup9:30 — Noon(?): Group activity covering the previous nights’ reading. Noon — 1pm: Lunch1pm — 2pm: Review group activity or continue with a group activity. 2pm — 4pm(ish): Work on daily activity with it due around 4:30 pm. Then a reading is assigned for the evening. So then we repeat. Except for Fridays. Friday is a day of “catch up”. What that actually means is if you didn’t complete the daily/weekly assignment to the correct specifications then you get to work all day on Friday on making it work O R start working on the next week assignment. Cool. Up to this point I haven’t had to put too much effort into correcting daily/weekly assignments. That is until this week. I’ve followed the entire structure to basically submitting whatever I have at due time. Basically to show “ I don’t get this”. I think my Wednesday assignment I just basically said “this is terrible…here you go… I need help”. Fortunately I wasn’t alone with that. Although I know it hasn’t been graded yet, it’s awful. Really really bad. It kind of clicked last night as to why. I literally see the work required and go “ I have no idea how to do this” and clam up. I can’t function. I write code to say I’m doing something. I put a lot of effort into the code and then delete it. How I feel about working with Java Script Then I stare at my computer some more. Start entering a massive amount and then delete it. Next thing I know it’s an hour and a half later and I’m staring at a function that was given for the problem an array that I built, that spoilers I S N’ T N E E D E D, and a single variable that I don’t know is needed. So that’s my problem with coding at the moment. I dive in head first not getting it and freaking out. So I decided last night to try a different approach based on sage advice. Do one thing. Does it work? No, okay why doesn’t it work? It worked? Cool let’s add one other thing. Then another. Basically go against D R Y ( Don’t Repeat Yourself) until I get it long hand. Then go back and clean it up. Kind of repetitive to what the head instructor has as his motto: Make it work. Make it fast. Make it pretty. In that order. Right now I’m so concerned with making it pretty that it’s not even close to working. So if I have to be repetitive to get it to work, cool. I’m doing that. So for today it’s time to work on fixing what’s not working, asking questions, and then do a full plan for the weekly project of everything I need to get it done. Struggles: Java Script. At some point I got some of it. It’s just a matter of trying to get it all fit together. Somewhere at the moment in my mind it works, I just haven’t gotten it to fit together. Understood: Manipulating the D O M. It actually makes sense. It totally does. I can do that. I can grab a line of code in H T M L add some things and put it back. Looking forward to: Getting through this one last assignment so I can work on the weekly and figuring out Java Script. My current mode.","['Tech', 'Codingbootcamp', 'Code', 'JavaScript', 'Amateur']",https://medium.com/@jacob.w.moore/day-15-what-did-i-do-wrong-day-9fe66ddd3b2b,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Modestas,,"General Assembly, Web Development Immersive — Week 8 Overview",2018-03-22 21:04:02,medium,"General Assembly, Web Development Immersive — Week 8 Overview It was time for our third project of the course, but this time there was a twist. For this project we had to work in a team of three, giving us our very first real taste of collaborative programming. We had previously engaged in pair programming activities during labs and such, but this was taking it to the next level. After being briefed on the project, we were assigned our groups and were tasked with the homework of coming up with an idea for our project. Now this may sound like the easiest homework ever but for some reason whenever I’m tasked to come up with something my mind usually goes blank and It takes me sometime to come up with an idea I feel excited about executing. Though I guess i’m just particular. Nonetheless, this was a group project so there were two extra minds that could contribute to thinking up a brilliant idea . . and thats exactly what happened. We spent the evening brainstorming and discussing potential projects and eventually ended up landing on a Holiday app that allows users to create a trip, invite their friends and log any bills that were spent to determine how much money was owed across the group. Planning After coming up with our idea, we decided to start the planning process. We used a free project managment tool called trello to split the project into different tasks and assign a task to each one of us. We then dicussed the logistics of our project in a little more detailed. Our App was going to be a M E A N stack app and we decided on using “ Bulma” as our C S S library, as we were more familiar with boot Strap and wanted to give another library a shot. We also decided on a mobile first approach, as we felt it would be much easier to make the webpage responsive and upscale the app to larger devices than vice versa. For our wire-framing, We got together in a small classroom and decided to sketch out the wireframes on a white board in order to map out the layout of our app and get a good sense of what it will look like. wire-framing with my group Stand Up Next morning, we started the day as usual with a standup routine whereby each person had a chance to briefly discuss their blockers and wins; expect this time we were to disclose our project ideas. It was quite a weird standup in that every group basically echoed what their other team members befroe them said so we essentially heard three versions of the same story across each group. What was even more weird was the fact that, pretty much…… Every group more or less had the same idea Yup. Somehow across 21 students and 7 groups we all had the sudden desire to create a holiday themed app. It was back to the drawing board for many of the class, though we stuck with our idea because we felt that our main selling point of “splitting bills” seemed unique enough and I was longing to build a travel based app. Main process The hardest thing initially about working as a team was getting to grips with the seemingly long and convoluted committing process which involved like 7 different steps. Nevertheless, with the help of constant repetition and writing the process down on a white board, we were able to get the hang of it fairly quickly. Group Committing Process The main process of working on the project involved each of us picking a task from our Trello board and working on it. For example, my when my classmate Phil would be working on the Google Maps A P I, while I would be working on the filtering and sorting functionality of the app. Once we finished a task, we would move it in the “done” section of the Trello board, and picked another task to work on. Rinse and repeat. We generally sat next to each other incase we got stuck and needed each others help or needed to fix a merge conflict. Sometimes I liked to work in complete isolation because it helped me concentrate but nonetheless if need be, we were always connected on slack. The nice part of working together was that if there was a really complicated task we were implementing (such as our kittysplit calculator), then two of us would pair program; whilst the other would continue working on another feature. In this way, it felt like we were always making progress and that the app was continually advancing. Generally, I felt like the Process went very smoothly and everyone managed to do what they were supposed to do. There was only one disagreement in the group and that was during the design phase at the end (figures), where we couldn’t agree on a background colour. In the end we decided to stick with white haha. Presentation The following Friday, we spent the whole afternoon collectively as a class, seeing and presenting each other’s work. I was genuinely surprised and really impressed with the projects that people managed to execute on. We also each had to pick an an intro song to walk out to and there were some pretty shockingly bad picks. Probably the worst one but also the most suiting was Rebecca Black Friday. When it came to my groups presentation, we gave a demo of our app and discussed what it was like working in our group aswell as the challenges we faced and overcame. For me probably the biggest challenge was keeping track of all of the changed being made to the app, especially those that I was not working on, and familiarising myself with its constantly evolving functionality. Overall I really enjoyed working in a group and was pleasantly surprised at how much fun it was to actually collaborate on a project. It felt like there was less overall pressure and stress working in a team and it felt as though we could accomplish much more. I look forward to collaborating on projects in a real workplace environment.","['Design', 'Web Development', 'Tech', 'Coding Bootcamp', 'Programming']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-8-overview-1aa9cc46848d,1,['General Assembly'],1,8,modestas,Unknown,Unknown,Unknown
Laura Meehan,,About Time I Figured It Out! – Laura Meehan – Medium,2018-08-20 06:58:26,medium,"About Time I Figured It Out! Archaeologist, actress, teacher, librarian, midwife, obstetrician, personal financial advisor, stockbroker, and countless others. What do all these things have in common? These are all careers I’ve considered pursuing at some point or another to no avail. I’ve always envied those who seem to have it all figured out. Those who at age five, already knew they wanted to become a firefighter or a teacher, pursued their dreams after high school, took the leap and made a beautiful landing. I’ve always dreamed of becoming successful and making my parents proud. But the “how” was fuzzy. Fast forward to today, I am currently a student in Bloc’s Web Development course and loving it! It’s both challenging and rewarding. You should see me after I finally figure out a very complicated problem. It typically involves triumphant yells, pumping fists in the air, and gyrating to no music because music is not necessary. But on some nights after a long day at work and finally being able to carve out uninterrupted time for myself to complete my assignments, I have to keep my exuberance down to a minimum since I have two sleeping babies sleeping in the other room and a husband who has to get up early. These handful of people are my “why” I wish to become successful and my journey here. Once I got my “why” down the “how” just fell into place. I originally looked into web development for my brother a few years ago. He too was in the need for some direction and has always been pretty tech savvy. Funnily enough though, the more I looked into it, the more I discovered I enjoyed it. I started off with checking out books from the library and attempted to learn html, python, Java Script, and ruby that way. I lost interest pretty quickly because I’m too hands-on of a learner. I then discovered codecademy and other free resources from a developer friend at my work who told me how he started out. Then, and this is where I am really fortunate, my brother in-law is a developer and he started mentoring me on Git Hub and Java Script after telling him I was interested in this field. This was a great experience because I learned how valuable having a mentor is since mentors can explain to you the harder to get concepts and help you get unstuck. After some time though, I realized that if I kept at this pace it would take me years and years to get where I needed to be. If I was in my early twenties, this wouldn’t have been a problem. But now? I work and have a young family to raise that need my time and attention. Enter Bloc. I researched and looked at all the coding boot camps. At first, I thought about joining one of the local in-person boot camps, but they require at least 40 hours of your time which I cannot afford to do since I have to work. Then I weighed the pros and cons of all the different online boot camps and Bloc came out as the winner. I particularly liked the job guarantee, the emphasis on mentoring, and the fact that I could do this part time to fit my schedule. I also really liked the fact that it would take roughly eight months to complete the program which in my opinion is not too quick and not too long either. I’ve been a student roughly a couple of months now and am so happy with the progress I am making. I’m doing something that I enjoy, that challenges me, and I know will give me the success that I have been looking for.","['Web Development', 'Coding', 'Codingbootcamp']",https://medium.com/@lmariemeehan/about-time-i-figured-it-out-d83e3876ae5d,0,[],0,12,laura,F,0.9967663073814239,0.0032336926185760465
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",The Campaigner – Emily Deans – Medium,2017-07-09 23:08:22,medium,"The Campaigner Something that honestly wasn’t much of a consideration for me during my bootcamp selection process was the importance of choosing a well-rounded program that emphasized personal and professional development in addition to strict coding. Oxford Dictionaries defines the term “soft skills” as follows — “ personal attributes that enable someone to interact effectively and harmoniously with other people. ” In a context such as a bootcamp (as well as in many jobs) you’re spending a huge amount of concentrated time with a group of people and are often responding to challenging or stressful problems alongside that group. The ability to interact with your peers/colleagues/classmates in a way that is, at the very least, respectful and supportive, and ideally also interesting and enjoyable, is H U G E. The variability within possible team configuration and dynamics makes all the difference in the world as to whether a team is successful or not. When people feel seen, appreciated, and included, they are more likely to bring forth their best selves/contributions, and the energy that brings to a collaborative dynamic improves both the quality of work and life for all involved. This means that a healthy, thriving work environment depends on soft skills to have any kind of sustainability. I have had many experiences working in both functional A N D dysfunctional teams, and I’m pretty sure it’s obvious which was the preferred scenario… Knowing all this, it feels embarrassingly shortsighted of me not to have viewed this area of development and focus as a critical component of my education and growth as I work toward becoming a developer. Fortunately for me, I ended up selecting a program that does indeed emphasize the importance of identifying and developing soft skills and regularly commits time to build these out with fun individual and team exercises. Last week, we were asked to participate in an online personality assessment, and during Friday’s huddle spent time discussing the results together as a group. I’ve taken a few of these tests before and always end up with a slightly different analysis, but on the whole think they’re pretty accurate and useful. We broke into groups based on certain aspects of our results and then answered a few questions about how our various personality traits impact communication styles and our preferred methods of working. Pretty interesting to get a little more exposure to my classmates’ experiences and insights, and I feel like these kinds of activities really do help strengthen how we work together as a class and how we can better support each other moving forward. I’m excited to see what this week’s huddle activity entails, and in the meantime, I’ll be doing a bit more sleuthing into the particulars of this “campaigner” personality ;)","['Education', 'Codingbootcamp', 'The Iron Yard', 'Dctech', 'Women In Tech']",https://medium.com/@emilyldeans/the-campaigner-f9db605b6cc8,1,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Osei Bonsu,CTO of the College Consortium and Instructor at the UT Coding Bootcamp,What Does the Rise of the Coding Boot Camp Mean for University Programs? A View from the Front,2018-05-09 19:07:42,medium,"What Does the Rise of the Coding Boot Camp Mean for University Programs? A View from the Front Series: How is the Digital Revolution Coming to Higher Education? By Osei Bonsu Robert Manzer, Ph Dof the College Consortium We are colleagues at a new company called the College Consortium. Osei serves as the Chief Technical Officer, and has previously worked in tech startups while teaching at Coding Bootcamps. Rob serves as the Chief Academic Officer, and has previously worked as a professor, a dean and provost at four independent colleges and a larger online university. The goal of our collaboration is to bring our perspectives together — on tech and higher education — to try and see more clearly how the digital revolution is coming to higher education. Our combined perspective begins with an awareness that higher ed’s digital revolution has been less abrupt and violent than those occurring in industries like music, retail and publishing. While the arrival and spread of online learning is historic, traditional models still largely hold sway, and the messianic enthusiasms for educational technologies like adaptive learning and “big data” have ebbed, relegating true believers to futuristic education summits while leaving most of higher ed relatively untouched. The digital revolution in higher ed is going to take some time. A traditional university classroom. Photo by Antenna on Unsplash More on these themes later; today we look for clues as to where we’re headed in the rise of the Coding Boot Camp — a development widely heralded as an “alternative pathway” to a university degree program and so well-regarded that the U S Department of Education accommodated it through a new student aid option ( E Q U I P). Undergirding such enthusiasm is the long-standing critique of the Ivory Tower as insufficiently interested in the “real world, ” career skills and jobs. Along these lines, the new Boot Camps are part of an ever-widening divide between more practical majors and traditional disciplines (especially in the Humanities) and the concomitant steep, accelerating and shocking decline of the latter. Do Coding Boot Camps presage the future of higher education — more practical, industry-aligned and of shorter duration? A typical coding bootcamp classroom. Not surprising, Coding Boot Camps ( C B Cs) have occasioned a lot of F U D ( Fear, Uncertainty, and Doubt), but let’s begin with what they can and can’t do. C B Cs exist to help fill entry-level web development roles that exist in the workforce. After going through a 12-week fulltime program or 24-week part-time program, students can obtain jobs as software developers. Compared to much longer 4-year trek to a computer science degree, this new pathway may seem like a much faster route to the same career, but it really isn’t. C B C programs and Computer Science ( C S) degrees give students very different skill sets that are valued differently in the marketplace. Like vocational programs or trade schools, C B Cs give students a practical set of skills directly related to using a set of tools to perform a task and solve problems while C S degrees give students an understanding of the fundamentals required to build the technology that underlie computer systems. A C B C student learns how to connect to and query a database system, while a C S student learns how to build a database engine. C B C students learn how to use a programming language while C S students learn how to make programming languages. Javascript code in Microsoft’s Visual Studio Code Editor. Consistent with their reputation, C B Cs are great at launching technology careers because they give students a strong reference point for understanding technology and its use. These students are a great fit for most companies, because these companies are more concerned with applying current technologies to solve problems (building a website to support their business) rather than creating new technologies. As a result, there exists a large space where C B C students can find jobs, and the availability of these jobs raises the question of whether universities should do more to incorporate C B C skills into their degree programs. The problem here is that such incorporation is much harder than it first seems. Technology, specifically web technology, changes at such an amazing pace that the typical course/curriculum approval process would make it difficult to keep the curriculum relevant. Long short-term memory diagram for a neural network. Principles of C S are 20–50 years old, while web development changes dramatically every few years. It’s more an issue of culture than anything else. Apart from schools like Stanford and M I T, universities don’t have the culture (or resources) necessary to make sure they are teaching web development skills that are relevant in the marketplace. There are always exceptions, and any talented professor with enough influence could create a course that would be relevant, but keeping that curriculum up to date when you are not directly involved in the industry or located in a tech hub is very difficult. The homepage for React, a modern Java Script framework. So, what should universities do in the face of the market’s demand for skills like those taught in C B Cs? First, they should take some solace in the fact that companies that actually build new technologies — rather than applying current ones — will continue to focus recruiting on C S graduates. More difficult is what universities need to do to stay abreast of how technology is changing other practical majors like marketing. In this one case, technology has made marketing more immediate, more dynamic, and more directly measurable. An example of a Facebook Analytics dashboard used to monitor advertising campaign campaigns online. One can create an advertising campaign on Facebook and instantly measure its impact. Moreover, the fantastic amount of data that one can collect and process about consumers means that the ability to pair strong technical/data analysis skills with traditional marketing skills is invaluable. As a result, what many universities are realizing is that to make their graduates relevant to the marketplace, they must provide them with an ever-increasing array of technical abilities. Bottom line: If you are given the choice of hiring a traditional marketing major or a marketing major that is capable of architecting and evaluating an online campaign, as well as assessing how different changes to your website will result in increases or decreases in revenue, which would you pick? An example of a Google Ad Words Analytics dashboard used to monitor the effectiveness of online campaign spending. In sum, Coding Boot Camps highlight key skills of the Digital Economy, and they thereby raise the question of whether universities should focus on creating these skills. Rephrasing this slightly, should universities focus more on preparing students for entry level employment? In the past, such a question would have been met with a resounding “no. ” But now the answer seems less certain, for the very condition of the Digital Economy — its radical and profound pace of change — puts a premium on having the skills to adapt to such change. This condition necessarily points to a more nimble if shallower education — one that prepares students to get a footing in an ever shifting landscape. Unfortunately, this radical pace of change also means universities will really struggle to be good at such an education, and many will thus question their value. Such is what we see through the clarifying lens of the Coding Boot Camp. Photo by Annie Spratt on Unsplash","['Education', 'Technology', 'Codingbootcamp', 'Academia', 'University']",https://medium.com/college-consortium/what-does-the-rise-of-the-coding-boot-camp-mean-for-university-programs-a-view-from-the-front-e89e64f77d98,17,[],0,9,osei,M,0.0,1.0
Maddy King,Education x Tech,Gurgl: Growing a baby business – Enspiral Dev Academy – Medium,2017-07-12 22:09:28,medium,"Gurgl: Growing a baby business Enspiral Dev Academy is a coding school in Auckland and Wellington, N Z, that teaches students of all levels of experience how to become web developers in just 18 weeks. Beverley Walter is a recent graduate from Enspiral Dev Academy. Enspiral Dev Academy teaches the skills of junior web development through an at-home precourse module, and a 9 week intensive in-class bootcamp. Using the skills she learned on the programme, Beverley is in the process of launching Gurgl, a clothes-swap web platform for growing babies. Gurgl is in its formative stages, so we asked Beverley what her dreams were. “ Gurgl will provide a fun, easy platform for recycling your children’s wardrobes, and borrowing more. With everybody’s help, we can save perfectly good clothing from going to waste, and give it back to growing children who need them. ” Beverley is an ex-creative designer who emigrated from Britain 8 years ago. She started learning web development on Dev Academy’s programme in February. Her idea for Gurgl came out of the project-based part of the programme. “ I suggested the idea in a pitch session at E D A. We pitch for a personal project, and this is how Version One was born. Then, with encouragement from the head teacher Joshua, I started Version Two. Later I needed a pitch for the final group project, one of the other students suggested I use Gurgl again. He said “ If you pitched it, I’d vote for you”. I was blown away by the fact that he wanted to work on my idea with me. Thus Version Three — the best iteration — was created, and in June it went up at www. gurgl. nz! We’re now looking for early adopters to sign up and give us feedback on the service. ” Beverley is passionate about Gurgl because it enables her to help the families around her with small children. “ I was walking to E D A up Cuba Street, past all the op-shops, and it suddenly struck me that the babies around me A L L grow so fast. What if you can’t afford or don’t want to buy new mass-produced clothing every few months? What if you got gifted heaps of clothing for a newborn and now your bub is 3 months old and fits nothing? Why are there no op-shops for newborns, babies and toddlers?!” Dev Academy showed Beverley how to build the web platform, but also helped her with her social mission. Photography by Bob Zuur“ It’s easy to tell people about your ethics, but it is entirely different to live them and breathe them. At E D A I found a group of people who truly want to make a difference, in education, in the tech industry and in workplace culture. Without exception every person I have met who is affiliated with E D A, as staff, teacher, alumni etc. is amazing. It is one of the best things I have ever done — I’d do it again in a heartbeat. ” Beverley found a culture at E D A that suited her own goals. “ Apart from providing me with the tech knowledge to make Gurgl and whatever other projects may come, Dev Academy gave me an awesome cohort, and safe place to play, and break things, then fix them and break them again. Their unwavering support and encouragement. A network of likeminded people and the confidence to follow my heart. ” Beverley is grateful to the other students in her class who worked with her to develop the project and take it live. “ The support from them and other students is really what has motivated me to keep going. ” She looks forward to the future, when Gurgl can stand on its own two feet. “ I want to make life easier for new parents. I think it’s crazy to believe you can do business today without treating your customers like they are family. I’m actively seeking and collecting clothing from parents, because it gives me a chance to talk to them and ask for feedback. ”“ The plan is to develop a service that parents want. I know I can build the tech, what I want is to build what they need. ” Register now for Gurgl’s clothes-swap service at http://www. gurgl. nz/. If you dream of having the skills to make your business ideas a reality, apply today for Dev Academy. Campuses are in Auckland and Wellington, and study options are designed to suit you. Apply now: http://www. devacademy. co. nz/apply-now.","['Tech', 'Business', 'Entrepreneurship', 'Startup', 'Codingbootcamp']",https://medium.com/enspiral-dev-academy/gurgl-growing-a-baby-business-a63f68de82bb,1,[],0,14,maddy,F,1.0,0.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Algorithms Informal – Emily Deans – Medium,2017-07-14 01:42:14,medium,"Algorithms Informal Today we finally broached the elusive, yet omnipresent, subject of algorithms. This is a concept I’ve heard a lot about — mostly in the context of web programming (i. e. , the algorithms that determine your customized playlist on Spotify, or the ones that fire out content to fill you Facebook newsfeed. Because it’s always sounded super computer sciencey and highly technical — and thus a bit beyond my purview — I never really sought out a solid explanation for what an algorithm actually was and what it was comprised of. An elementary, low-level overview of an algorithm is the following:a detailed set of instructions established to produce a specific outcome. ??? That’s it? Really?! At it’s most basic level, the answer seems to be ‘yes’. An algorithm is a map. It’s a recipe. It’s how to tie your shoes. So what do algorithms contain? - Input: this is what goes into your algorithm. These are the ingredients you use to make that new Ottolenghi dish you’ve been dying to try. - Steps: these are the detailed, precise instructions that guide your algorithm to its desired outcome. This is the recipe. - Output: this is the result of your algorithm. Everything is cooked and plated and you’re F I N A L L Y ready to sit down to the meal. Of course, the recipe example is a simple one. Of course, there are algorithms that are so complex and multi-faceted that they will have your average home cook (or home programmer) crossing their eyes. The point I’m trying to make is that while it’s true that many algorithms we hear referenced in professional and/or social settings are enormously complex and take a good amount of syntactical and structural training to understand, they are not necessarily wildly complex or technical. Algorithms in practice are not elusive. They’re not irrelevant. A N D they make our lives better. Can’t wait to learn more.","['Algorithms', 'Code Newbie', 'Codingbootcamp', 'Lesbians Who Tech', 'The Iron Yard']",https://medium.com/@emilyldeans/algorithms-informal-c150fc662049,1,[],0,5,emily,F,0.9979317746535663,0.002068225346433675
chibueze ukaegbu,,"LearnFactory Internship: Day 17 (May 22, 2018) – LearnFactory Nigeria – Medium",2018-05-22 19:49:16,medium,"Learn Factory Internship: Day 17 ( May 22, 2018)“ Challenges make or mar a man; they come to test our mettle and rattle our resolve. Only the strong stand steadfast”. i C, 2018 With my people The pressure continued today; but we are built to grow under pressure. It is only through pressure that carbon becomes diamond and gold is formed in the depths. I was still absent today, but dropped in by 5pm to say hi; I felt loved by the warm welcome they gave me. We had some banter, took some pictures, I asked some questions on functions and was happy with their clarity and understanding; even though some still had cobwebs to completely clear up. I looked at the work they had done on the P V C challenge and I was surprised by what the different teams had come up with. For the final sprint on this project (with the results due on Thursday), I paired the teams so we have 2 final groups; I can’t wait till Thursday. Matthew continued the class on functions and then moved into objects. We are a bit behind on our schedule, but we will definitely catch-up. There were cheers when I announced Eric Thomas’s T G I M ( Thank God It’s Monday) Season 7 resumes tomorrow. They are making progress, and nothing makes me more happier. More pictures below Panorama S P O T L I G H T O F T H E D A Y In the spotlight today is our man with an awesome attitude: Chidera Ugwuanyi Dera My favorite color is green, maybe this is because of my affinity with nature and wildlife. The uniqueness in diversity, and specialization inherent in this supposed “chaotic world” is, amongst other factors the core of my proximity with the simplicity and orderliness of green nature. I am Chidera Paul Ugwuanyi, a brother to three other siblings raised in a Christian home who, at age eighteen discovered God for himself. Listening to great guys like Pastor Chris Oyakhilome, Apostle Joshua Selman, Bishop T. D Jakes, Pastor Mathew Ashimolowo, Pastor Biodun Fatoyinbo etc. In the convention of the pentecostal denomination, I would say that my body is from Enugu state, Nsukka local Government to be precise, although I have residence in Aba. A school leaving certificate from Seat of Knowledge school Aba and W A E C certificate from same school, I had my tertiary learning at Federal University of Petroleum Resources Effurun, Delta state with a degree in Mathematics. During this period I have developed a keen interest for variations of music. Most times, as is customary with my choice, “sound-beats” makes more sense to me. Yanni is such a great artist. My taste for food had changed when I had a hook up with “bole (roasted ripe plantain) plus beans plus fish plus sauce”, and this has placed this delicacy at the focal point of my priority in food. My dislike for every and any form of animal cruelty is easily felt; foul languages are a no-no for me, they irritate me; discrimination, the holier-than thou attitude and every form of human degradation are some of the things I can’t stand. I have cycled for sport and for hobby. Reading is a great sport for me. I have read and continue to read novels, with authors ranging from Dan Brown, Michael Crichton, Chimamanda Ngozi Adichie and a host of other beautiful writers. My most beautiful moments are always around children or pets. Nothing is as lovely as feeling a baby’s fingers wrap around yours. Have you stroked the fur of a dog? How about a cat? The long gash (– a dog bite) on my right hand will always remind me of the ‘essential’ terror of wildlife. If I must be glued to the television set, it, very often always has to be the Nat Geo or Discovery channel. I have great inspirations from the Bible, one of my favorite scriptures being that “…all things work together for my good”. And, this has been the foundation of my hopes and stands in challenges. I have learnt how to remain at peace. As a lover of God, I have by experience valued people-gift. Knowing that every man has the right potential, and irrespective of the individual, I am convinced beyond all reasonable doubt that there is something great in you, and so I don’t take men for granted. I expect the best from people, however I am also prepared for their worsts and disappointments. I believe that life is spiritual and governed by ‘spiritual laws’ too and in as much as you operate in this terrestrial realm, you must by all means also follow the ‘natural’ laws meted out by the Almighty. Such as gravity, no matter who you are, if you jump from a height, gravity will tend to pull you down. How about the natural law of giving before receiving, it is just there, there is, in my opinion, no two ways about it. I believe in hardwork, consistency, character and attitude. Cool, always He’s the man; one of the last to join the crew. I’m happy I gave him the opportunity. Have fun. See you tomorrow. i C Chief Code Smith","['Christianity', 'Internships', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-17-may-22-2018-6c8d638d2c56,1,[],0,147,chibueze,M,0.0,1.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.","See Ya, Seven! – Emily Deans – Medium",2017-08-11 19:52:12,medium,"See Ya, Seven! Can’t believe we’ve hit another Friday. This one marks the end of week S E V E N, which means that we have only one more week of back-end before launching into the curriculum for our track of choice. We’ll be jumping into our final week of required back-end on Monday with a huddle discussion on how to select our program focus for the final month of the course. The way The Iron Yard‘s current cohort is structured is a full-stack approach that has us all evenly splitting our time between front- and back-end technologies (one month for each) and then a third month where we’re able to choose a track that’s focused on either front-end or back-end. There’s also a final (optional) fourth-month that offers career services and a focus on our final independent project, which the third month should gear us up to better tackle. The D. C. campus offers Java Script and the React library for the front-end program, and Ruby with the Rails framework on the back-end for the third month. Ruby or React? I’m currently leaning strongly toward Ruby, but will hold off on my final decision until the instructors and Campus Director have had a chance to present on the options and associated curricula. That being said, both of our main instructors are pretty devoted, passionately self-identified “ Rubyists”, which gives me a hunch they may not be strong at swaying me in the other direction… Guess we’ll find out! I’ve made a good amount of progress on the weekly “ Gabble” project today, which I’m grateful for as it’s a bit of a beast. I’m hoping I can keep chipping away this weekend and early next week to get it where it needs to be by Thursday. I’m also planning on updating my resume and doing a bit more research into companies and the types of jobs that are available in this line of work so I have a little more clarity and focus when I begin the job search in earnest upon graduation (5 weeks!). Happy Friday to all. Song of the Day: “ King of Spain” by Tallest Man on Earth","['Web Development', 'Code Newbie', 'Codingbootcamp', 'Lesbians Who Tech', 'Women Who Code']",https://medium.com/@emilyldeans/see-ya-seven-31db594974d0,0,['The Iron Yard'],1,1,emily,F,0.9979317746535663,0.002068225346433675
Ian McAteer,,So i enrolled into a coding bootcamp… – Ian McAteer – Medium,2018-03-04 00:58:20,medium,"So i enrolled into a coding bootcamp… So i enrolled into a coding bootcamp at coder academy in Brisbane. Before the course started I kept questioning whether this was the right decision for me. Should i be making a career change into the tech industry? Is it too late to change? Is this the right path to take? Many of these thoughts were in the forefront of my mind when i applied for the course. So what made me decide to go for a career change? After completing a five year law/business degree at university and working in the legal industry i felt like what i was doing was not aligning well with my interests. After a long while of self discovery i discovered the world of programming, something i had never done before. Although i went to a great school, they had never offered any computer science lessons. This was all new to me. After completing some free online courses in C S and delving into some programming languages i knew this was the right path for me. A lot of aspects of programming attracted me. I liked the problem solving aspect involved, how you are given a problem and it is your job to come up with a viable solution by breaking the problem into its components. As a programmer you constantly find new problems and you find new solutions. I like that feeling of self accomplishment after solving a difficult problem. I also liked how create programming can be. You come up with your own rules in your own world and the end result is whatever you make it, you truly are only limited by your imagination. My passion had been developed and all i could think of was how could i get involved in and work in this industry? There were a couple of options for me. Self study, go back to university or undertake a bootcamp. From my thoughts and what i have read, a computer science degree or similar would teach me programming concepts really well but may not teach the latest industry standards. A university degree would also take a couple of years and university costs aren’t cheap. The time and cost factor rules this option out for me. Self-education i think is a great tool. In fact one of my favourite quotes is by Elon Musk: “don’t confuse schooling with education. I didn’t go to Harvard, but the people who work for me did”. I will never stop self-learning, even while enrolling in a bootcamp i will always be learning new things, attempting new projects and challenges outside of the “classroom”. I will say that at times i found it challenging to go through all the online resources that is available. It’s also easier for me to get overwhelmed, demotivated and confused when studying on my own. What attracted me to Coder Academy is that they are the only accredited bootcamp in Australia and they offer a nationally recognised certificate after completion. Not only that but they also offer you a one month internship upon completing the course. These factors and the fact that i would be studying in a structured environment with teachers encouraged me to take this option and enrol. So what are my thoughts after the first two weeks of bootcamp? So far the course is going really well. I’m learning a lot more than i would on my own. The syllabus is fast paced/high impact but well structured and planned. The instructors/mentors have been great, always guiding us and giving advice whenever needed and motivating us. There are also other students from all different kids of backgrounds and we have all gotten to know each other and have been helping each other. From working with all these people i’m able to see things from different points of view/perspectives and expand my thinking. Collaborating with others in a team environment is an important skill to develop if i am to work in the tech industry. Coderacademy offers me so many opportunities and in the first two weeks i feel i have accomplished a lot. At the end of the two week period we were all given the project to design a ruby application inside the terminal and then present our project to the class. It was amazing to see all the different projects everyone came up with, after only two weeks of programming. I plan to update this blog weekly so i can talk about the bootcamp, the things we have learned, the challenges, projects and my reflections. I’m excited to share with you my journey into the tech industry!— Ian Mc Ateer","['Programming', 'Bootcamp', 'Coding', 'Codingbootcamp', 'Career Change']",https://medium.com/@ianmcateer/so-i-enrolled-into-a-coding-bootcamp-8fff548b1517,6,[],0,24,ian,M,0.0033550123346041713,0.9966449876653958
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Learning How To Learn Again – Joseph Cardillo – Medium,2018-03-08 12:31:55,medium,"Learning How To Learn Again Two steps back before taking three steps forward Photo by Jess Watters on Unsplash In Tuesday’s workshop we were tasked with creating a modal which popped up on our website after three seconds. Up until this point it was fairly easy to search for solutions on Google, and to understand the solution to a degree. But Tuesday was much different. None of the ‘stock’ solutions fit into the problem we were trying to solve. And I realized quickly that I did not understand the problem sufficiently enough. One of the things our teacher has been encouraging us to do is write out the problem and possible solutions in long-hand format. He’s also been good about not giving us the answer when we ask questions, but helping us to think of the next logical step on our own. Wednesday the school was closed due to the snowstorm. So I had time to jump into what the workshop would’ve been: creating a digital clock using H T M L, C S S and Java Script. This time, before diving into Google, I sat down with my notebook and pencil and tried to break it down into questions and steps. After scribbling my notes onto the second page, a few things seemed to stand out. So I started with those. I thought it would make sense to set variables for hours, minutes and seconds, to lay those variables out on the page using document. write. To create an id or class for ‘hhmmss’. To figure out how to get the time to start at the current time of day. To use document. get Element By Id() to capture the ‘hhmmss’ id or class. To possibly run a for loop on each variable, and somehow use set Timeout to make the seconds change every second, minutes every sixty seconds and so on. Then to tie the hex code (#hhmmss) to the background color. Through doing this, I realize how much I like the process of problem solving, even if it can be frustrating. Of being given a problem to work on, and the freedom to work through it. Of being given freedom to make mistakes. It certainly would be a lot easier to Google “how to create a clock using javascript”, and to copy the code. But I find that the more I do that the less I understand what I’m actually doing. For this exercise I began by setting the following variables in my script tags:var hh = 1;var mm = 1;var ss = 1;var num Sign = '#';var clock Format = [num Sign, hh, mm, ss]; To see this on my screen I used:document. write(clock Format); Which produced:#, 1, 1, 1 Obviously not the intended result. But I wanted to find a way to get the 1 in the seconds column to increase by one every second. To try and keep things simple, I decided to branch off and just work with one variable to see if I could make it increase by 1 every second. I wrote in my notebook:var x = 1; I want x++set Timeout ((for var i = 0, i < 10, i++), 1000) In other words, can I get the for loop to execute every second? When I write in my notebook, I try not to worry about syntax (such as using commas where I should be using semi-colons), but to just get the basic idea out of my head. I tried a few iterations of the above, like:function hexclock () { set Timeout((for var i = 0, i < 10, i++), 1000)}…without success. So here I turned to Google to search for a way to run a for loop every second, rather than immediately. I wanted to print the result to the console every second. I found a thread on Stack Overflow where someone was trying to get an alert to pop-up every 3 seconds. I reworked this for my function:function hexclock () { set Timeout(function () {  console. log(hh++);  i = 0;  i++;  if (i < 10) {   hexclock ();   }  }, 1000) } I reloaded the page and ran the hexclock () function in the console. 1, 2, 3, 4… on and on. Past ten. I didn’t want it to run on indefinitely. Ideally, it would go to 59 then start over. As I continued to work through the problem, I realized it wasn’t the most efficient or elegant solution. So I kept asking questions of my classmates. Turning to Google again. Trying something new. Stepping away for a walk or a break. I find that this process forces me to slow down. To ask questions in a more intuitive way. To not be afraid of trying something new, because the worst that can happen is that I get an error in my code. This class is teaching me how to learn. How to ask questions. How to think through problems. One of the alumni encouraged us by saying that we aren’t expected to get it all yet. That we’re drinking from a firehose, and our job is to take in as much as we can. And that by the end, we’ll be surprised at how much we’ve learned. That much I can do. One step at a time. One day at a time.","['JavaScript', 'Codingbootcamp', 'Learning', 'Web Development', 'Coding']",https://medium.com/@josephcardillo/learning-how-to-learn-again-ed034226da99,2,[],0,17,joseph,M,0.004069495880582216,0.9959305041194177
Shadi Jam,"Obsessed with back end development, particularly .Net/C# && all things coding at The Iron Yard Houston.",Fear is the Devil – Shadi Jam – Medium,2016-11-08 04:39:15,medium,"Fear is the Devil Let’s start with Sass. I actually really love using C S S. It’s logical, fairly straight-forward, and I was feeling pretty comfortable with it until S C S S became a thing that we were supposed to do. For whatever reason, I just cannot get my head around it. The “&” functions, the @media queries, and the ::before/::after stuff just isn’t getting through. On Thursday I went back to the beginning. Did the C S S course on Codecademy. com all over again, then read Learn Layout. com then watched every single Ato Z C S S video. I went to bed early enough to get about six hours of sleep and I felt like I understood the underlying principles of position, layout, etc. Of course, when I woke up and started messing with the homework, N O N E of the rules I had memorized the night before worked! Frustrated, I spoke to Matt and he said the only way to learn it was to use it in practice, over and over and over. So the only thing that’s going to get me there is time and practice…or at least that’s what I told myself. I took a break Friday afternoon, took a walk, visited a girlfriend, and was in bed by 9:30 P M. I spent all of Saturday messing with the T Shirts assignment and although I’ve got the general layout down, I cannot get the @media queries to work! Hence the fact that I’m awake at 5:44 A M today! Our homework assignment over the weekend was to create a rough draft of our portfolio website. I was pretty excited about this. In class, on Friday, Matt showed us how to use Bootstrap, he even made a draft and said we could clone it. I did so, saved it to my ‘ Bootstrap’ Github repository and left with the following thought in my head: “ I got this. ” After an entire day of feeling as though I was a failure on Saturday dealing with Sass/ C S S, I woke up Sunday telling myself I was going to focus on Bootstrap first and deal with the T Shirt assignment later. By 11:00 A M I was on the verge of tears. For whatever reason, I could not get the cloned files to show up in Github nor could I open them in Visual Studios. Of course, I immediately called my badass cousin Javad, who did one of these coding bootcamp courses, in Chicago, a couple of years ago and has been encouraging me to do this. He walked me back from the ledge, informed me that senior developers who’ve been in the industry for 10+ years still ask him for help with C S S and that it’s never going to be a deciding factor once I get to the point of looking for work. That made me feel so much better! I felt calmer, laid in the grass and stared at the trees for a few minutes, and decided that I was going to start from scratch on the Bootstrap project. Instead of cloning Matt’s work, I would create a brand new project, use the C D N in my H T M L code, and if I really wanted to I could just copy and paste the body of his example later. It worked! So what have I learned? That there are 9483738495 ways to do these things and that one week into this course is not the time to be freaking out. I’ll have plenty of time to do that in the next 11 weeks…and despite the frustration I still L O V E the entire process. In fact, it’s the moments when I figure out how to do something after hours of struggle that I feel the most relief and elation. On Friday, Brian Dorton, the T I Y campus director, gave a little talk about how this is all normal and that our highs and lows will be extreme over the coming weeks. I kind of knew what he meant considering what I went through on Thursday, but it wasn’t until this weekend that I really understood what he was saying. I guess the thought that’s causing the most paralysis is that if I can’t figure out this one thing, I’ll fall behind, and if I fall behind, then I won’t be able to learn the next thing, and if I can’t learn the next thing, I won’t finish the course, and if I don’t finish the course, I won’t get a job doing this thing which I’ve discovered over the last several weeks that I enjoy and love so much. Which brings me back to something an Uber driver told me months ago that hasn’t stopped replaying in my head throughout this process:“ Fear is the devil. ” I knew the woman was right when she said it. I’d experienced how fear could control your body when I was learning how to ski. I’d be going along just fine, and the moment I remembered that I was flying down the side of a mountain and had no real control, my body would tense up and of course, I would fall. It wasn’t until I fell so many times that I was no longer scared to do so, that my mind let of the fear and I started improving. It seems the same concept can be applied here. My fear of accidentally committing my changes to Matt’s cloned file was preventing me from moving forward on the Bootstrap work, and it wasn’t until I created a completely new project and knew that no matter how many commits I made, it wouldn’t change anything on Matt’s repository, that I could move forward.","['CSS', 'Web Development', 'Codingbootcamp']",https://medium.com/@shadijam/fear-is-the-devil-7bdc522169c4,0,['The Iron Yard'],1,0,shadi,M,0.2668845315904139,0.7331154684095861
Cristian Perez Ramirez,,"First, a Little Background – Cristian Perez Ramirez – Medium",2018-07-03 14:53:44,medium,"First, a Little Background My fascination with technology started pretty early for someone of my generation, at least in my home town of Mexico City. My father was always a gadget lover and early adopter. First came Pong, Intelevision and the Atari 2600. A Commodore 64 soon followed. growing up I became an avid P C gamer, my favorites being flight sims and F P S. In high school I considered going for a computer science degree like my cousin and fellow gamer, but then something happened. I discovered surfing. I was a pretty decent skateboarder through my teenage years but the constant injuries had turned me off. Surfing was different. While it can be dangerous and injuries definitely happen most falls a just rolling around in the water for a bit as opposed to eating concrete every time. Finding what I consider to be one of my passions led to twenty years of following the waves and working whatever jobs would keep me close to the surf. Everything from waiting tables and bartending to doing maintenance on empty vacation homes and construction. I have no regrets but watching my cousin become a successful software developer I always wondered “what if?”. I was starting to tire of the unchallenging jobs and low wages. I still loved surfing but was beginning to feel like I wanted more satisfaction from my work. A few years ago I started to hear about coding bootcamps but they seemed too good to be true. Then I started hearing about acquaintances that had landed good jobs after completing bootcamps so I started to look into them. They seemed great but quitting my job and moving somewhere too attend school full time for months seemed like a pipe dream. After a little more research and I came across Bloc and well, here I am.","['Programming', 'Bloc', 'Codingbootcamp']",https://medium.com/@cristiangp777/first-a-little-background-822ce5963b2a,1,[],0,0,cristian,M,0.017876506984754736,0.9821234930152453
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 42 — It Ain’t Easy – conshus – Medium,2017-05-09 11:07:32,medium,"Day 42 — It Ain’t Easyliner notes: Redux, woah. Haha So if I’m understanding it correctly, it takes the idea of states from React and goes one step further. Instead of component based states, we have one global state. Then you dispatch actions to the global state to make things happen. I think I got that right from just one day in. Definitely need to explore it more. Went to the Open Code Meetup. Shouts to Jenell for organizing them. Someone was having some trouble setting up a Mongo D B. I put them on to the magic of Firebase. I think I may have converted him to the Light Side. haha Still have no clue what to do for my final project. Got some ideas, but nothing solid. It Ain’t Easy, but Totally Worth it! I noticed that the past few post have been Brother Ali themed. haha The album is S O G O O D! Back to coding. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['React', 'Redux', 'Codingbootcamp', 'Coding', 'Hip Hop']",https://medium.com/@conshus/day-42-it-aint-easy-f13295eb7e58,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Kimberly Lowe-Williams,CEO/Executive Director of The Difference Engine. Providing real life software development to nontraditional developers and nonprofits. #PipelineBuilder,The Future is Now! – Kimberly Lowe-Williams – Medium,2017-12-02 11:01:01,medium,"The Future is Now! For years we have heard about technology being the wave of the future. Everyday programs and initiatives are created to help youth and young adults prepare for working in S T E M. It has been clearly identified that there is a pressing need to get the next generation ready to contribute in these fields. Tech has been identified as a low barrier career that young people from various backgrounds can enter and succeed — providing a more level playing field for opportunity and life changing impact. Computer Science is the most rapidly growing S T E M field. According to Code. org co-founder Hadi Partovi, “ Although only 10 percent of schools teach computer science, even one hour of exposure can be enough to change a student’s life, as it did mine. In the 21st century, this isn’t just a course you study to get a job in software–it’s important to learn even if you want to be a nurse, a journalist, an accountant, a lawyer or even a president. ” We know programming is a vital skill for today’s youth. So do Bill Gates, Mark Zuckerberg, Sheryl Sandberg, Will. i. am, and other notable figures. What about nontraditional adults that are actively seeking full time employment as developers? How can we help the increasing number of adult career changers that fall outside the mold a typical developer? Competent professionals with the potential to fill the gap of technical talent through the U S that struggle to secure entry level positions as developers. Forward thinkers that have answered the call for more U S based skilled developers. People from underserved communities trying to transform their lives and those of their families — today. There is a present and real need for a diverse workforce in tech that will not only build the future software applications, technologies and devices but the current technologies trying to make it to market. Current tech startups are often strapped to find local development talent they can afford. While coding bootcamp graduates lack support in securing real jobs as developers as well as transitioning into their new industry. We created our organization to support the current and present lack of diversity in tech, support for nontraditional developers, bridge that gap for startups and access to tech for organizations without funding. While most grants, foundations, programs and initiatives are understandably looking towards the future — we are addressing the present. Just imagine the impact empowering adults will have on the youth in this country. We should not underestimate the domino effect of providing today’s adults with real technical skills and opportunities that will influence our youth. Let’s stop waiting for the future when we can truly engineer a difference now.","['Diversity', 'Diversity In Tech', 'Coding', 'Codingbootcamp', 'Future']",https://medium.com/@TDEkimberly/the-future-is-now-e4f34924e164,1,[],0,0,kimberly,F,0.9949202597529464,0.005079740247053596
Techloy Reporter,"Covering news and reviews about startups, apps and gadgets in Africa. Get in touch with techloy.com@gmail.com",This boot camp organised by Fidelity Bank will teach kids how to code for free,2018-04-03 04:12:09,medium,"This boot camp organised by Fidelity Bank will teach kids how to code for free Image courtesy: S P A R K I T Bootcamp All around the world, kids are learning how to code, whether or not they have coding experience. In Nigeria, there are code learning programmes and activities designed for pre-teen and teenagers, but these are mostly organised by educational and training outfits. So when we learned about a coding boot camp for kids being organised by Fidelity Bank, one of the leading financial institutions in Nigeria, we thought it was worth applauding and covering here on Techloy. Image courtesy: S P A R K I T Bootcamp According to Fidelity Bank, the 5-day training programme is specially geared towards preparing children (kids between the ages of 10 and 17 years) for software development, software optimization and solution design; thus enabling kids with little or no coding experience understand coding concepts and immediately apply these skills to their academics and daily interactions. The free coding workshop, which kicks off today, will cover various fields of software programming in two streams between April 3 — 7 and 9 — 13, on a first-come, first-served basis due to limited spaces. We hope to bring you updates about the coding boot camp in the coming days. Follow the # Fidelity Kids Empowerment hashtag on Twitter for updates.","['Programming', 'Nigeria', 'Codingbootcamp', 'Fidelity Bank']",https://medium.com/techloy/this-boot-camp-organised-by-a-nigerian-bank-will-teach-kids-how-to-code-for-free-1f288d868d97,1,[],0,31,techloy,Unknown,Unknown,Unknown
Le Wagon Tokyo,Coding school for creative people & entrepreneurs #startup 🚀Intensive 9-week #FullStack #Bootcamps http://bit.ly/1VQNB08 👀,Laws & regulations: how Revolut is set to shake up Japan’s banking industry,2018-05-28 01:35:40,medium,"Laws & regulations: how Revolut is set to shake up Japan’s banking industry Some stereotypes about establishing a business in Japan die hard: the market is impossible to enter, the level of bureaucracy is overwhelming, most services are extremely regulated… Imagine now that the industry you’re trying to address is itself probably the most regulated around the world: banking. How to navigate the intricacies of Japan’s regulations, and fill form after form, in Japanese, in order to obtain the right to operate? Enters Revolut, and our guest today, Rishi Stocker. Listen to him, and you’ll feel that all of the above is as easy as buying groceries from the next door konbini. With only 2. 5 years of existence and already 1. 8 M users, Revolut is coming to Asia, and positioning itself to shake up the seemingly impossible-to-enter Japan. And guess what? It is happening in Q3 this year. Wait, what’s Revolut? In short, it is one of the fastest growing fully online bank of the past couple of years: “ Our value proposition is very straightforward. When we started, sending money around the world through traditional banks was setting you back 5 to 8% of the total amount you were wiring. Transferwise was already in the market, and managed to lower that to 1. 5–2%. So we came in and said: why not create an app and a card that allows you to spend and send money anywhere in the world with absolutely zero fees?” Rishi starts, “and that was basically our M V P. A handful of people started using the service, when travelling abroad or wiring money to relatives around the world, and just by word of mouth, we now have a little less than 2 M users. The interesting part is, over 2. 5 years of existence we haven’t spent any single dollar (or any other currency, for that matter) in marketing. ”“ After that, we started adding services mostly by listening to our early adopters: insurance, savings, loans… Loans are a pretty funny example of how broken traditional banking is for international people. We ran an experiment in our multicultural London office, asking employees to apply for loans via traditional channels, and the result was abysmal. Practically nobody could get a loan, including our C E O (laughs). That’s when you realize the system is a bit broken. So we started looking at customers’ usage data: where do they spend money, how money friends do they have, what do they do on the week-end. And based on that, we we were able to a create a credit scoring system much more reflective of someone’s creditworthiness”. By now you’re probably wondering how Revolut makes money: “ It’s a question we often get. The thing is, users come in for the fee-free spending and transfers, and after that, because they really like that service, they’re ready to try our other disruptive products and pay for them. We actually had our first break-even month recently”. Exploring Asia After that initial phase, it was also obvious that Asia was strategic for us. We started looking into the main hubs, like Singapore and Hong- Kong. But those supposedly transparent markets are not as straightforward as people make out. On the other hand, we felt that Japan was a very underestimated market: inbound tourism is much talked about, but what most people fail to see is that the number of outbound tourists is also growing fast, with over 20 M people traveling abroad every year, going to the U S, China, Italy…”. If you’ve been living in Japan for a while, you’ll probably argue that most people still heavily rely on cash though “ That’s true, and when it comes to traveling it becomes a pain-point to solve: people are queueing and sometimes wait for an hour just to exchange currency”. “ Now for the purely local market, there are a few hindrances that we need to address carefully: for example the payment method field is saturated, with 100 ways to pay at your local konbini. So we know we don’t want to create a new payment method. Also, as mentioned most people are still carrying a lot of cash around, and we’re probably not the go-to service for cash-only transactions at home (maximum monthly free A T M withdrawal amount is roughly 60, 000¥). Lastly, among the first things we hear is ‘you will need supreme customer support in Japan. ’ Now believe it or not, but we found that group of Japanese-speaking people in Krakow who’ll handle our customer enquiries at first (laughs)”. Four tips to enter Japan“ So we’ve been working on the Japan launch for 6 months now, and these are a few pieces of advice that I collected — some may seem counter-intuitive, some you just don’t think about”. Sort of the Rework of market entry, in short. Meet the regulators“ We started by talking to lawyers, and when they hear ‘market entry’ their faces lighten up, it’s kind of a dream situation for law firms. So they quoted us for three different licenses we apparently needed. In the meantime we went directly to the regulators, explained our service, and figured out together a way to quickly get our license — It turned out we only needed one”, Rishi shares. “ Another thing we managed to deal with regulators is that our customers will be able to do a few things before we actually need to confirm their identity fully: create an account, do a few small amount transactions and get used to the product”. Apply for grants““ That part was more straightforward: for our kind of industry, we were eligible for a 70, 000$ grant from the government”. Many companies I’ve met in Tokyo didn’t know about this and missed out so you have to make sure you dig around for this type of support. In fact if we hadn’t received this support initially who knows whether we would have looked at the market seriously”. Don’t underestimate integration with local partners“ Initially we thought it would be easy to integrate with local banking partners, since most A P Is are very well documented now. So we received A P I docs, and obviously we first had to translate them from Japanese to English. That’s when problem started (laughs). We ended up needing one person working full-time with these folks to understand the nuances of these integrations, and explain them to our tech teams”. Focus on your M V P“ One last advice I would have is to go back to basics when you enter a new market. As I said our initial value proposition was very simple, and that’s what attracted users in the first place. After that we added new services and developed our offering, but we have to accept the fact that whatever services we offer in new countries, we’ll probably be one step behind our more mature markets. ” Saving the best for the last… How about Crypto?“ We get that question a lot too (laughs). Japan is one of the largest markets for cryptos, and we think we have a very differentiated offering, providing the easiest way out there to get exposure to the likes of Bitcoin or Litecoin with just a few clicks”. Well that was dense, thanks a lot Rishi for the talk!","['Fintech', 'Codingbootcamp', 'Le Wagon', 'Medium Japan', 'Cryptocurrency']",https://medium.com/tokyo-fintech/laws-regulations-how-revolut-is-set-to-shake-up-japans-banking-industry-1c204a76fcb4,0,[],0,144,le,F,0.5308343409915357,0.46916565900846435
Serin Paul,Product Manager | Technology / User Experience,"Story of nerdzz, how we started a new revenue stream, solving a real problem",2017-08-08 12:33:54,medium,"Story of nerdzz, how we started a new revenue stream, solving a real problem Getting job ready candidates right out of the college has been a challenge many companies face. The impact of it is millions of dollars spend on training and a large pool of jobless candidates. Some Numbers Number of engineering colleges in India — 3, 345 in 2014–15 Which produces 1. 5 Million Engineering Pass Outs In India Every Year Percentage of Engineering graduates employable — just 3 % in software, 7% in core technology. This is the story of how we recognized this problem, used a framework to find a solution and made revenue out of it. The whole idea was to reduce this gap and increase the employability percentage. It took us 5 simple steps to come up with the first build… The framework used here is the famous design thinking framework. 1) Empathize Who is my user ? What matters to this person ? During our hiring journey , we had to constantly engage with various Educational institutes & participate in Campus hiring programs. During these hiring programs as recruiters we gathered the following insights about the graduating students. We find only 2 % of the candidate with the right development mindset, knowledge of new technologies Most of the students are unaware about the industry and its way of working. Projects and activities done are purely for scoring marks in academics. Practical application knowledge was lacking. The only thing mattered to most of them was to get placed and land a job somehow. Define What are their needs ? To be equipped with hard + soft skills which will make them job ready. To be aware of the opportunities and get a job. To get a job immediately after they pass out. This phase gave us valuable insights on what their needs are. Ideate This is the phase for brainstorming and a stage to come out with as many ideas as possible, wild ideas are encouraged :) Considering the above core problem, we decided to ideate on different solutions to fulfill the above needs of students. Here are some screenshots of initial ideas jotted down and the mails send to validate these solutions. Mail send to check if how the users respond. Campus connect programs Programming bootcamps at office Slack channel connecting to developers Hackathons One on one session with developers A curriculum was developed and it was focused on filling the gaps that existed for the students. Prototype Build representation of one or more of your ideas to validate. How can i show my idea ? We then decided to prototype these ideas to check out in the real world. We created a simple website and asked students to signup if they are interested. We invited a small group of students to come and intern with our team. We created a slack channel and added students and developers. We added open slots in our google calendar and shared with students. We created a website to see how many hits we got , and students were willing to signup We created a slack channel and opened the appointment slot in google calendar to connect with our users Test Share your prototyped idea with your original user for feedback. What worked ? What didn’t ? The prototypes created above was tested and feedback gathered We did look into google analytics data too to gathering insights into our user behavior . We used inspectly to check where the users are getting stuck, what area of the website excited the user more. Repeat … We then iterated the above steps again and again to cater to different personas within the student community. We then tied a business model to it by coming up with different pricing plans. Conclusion & Moral of the story Problems are out there, you need to have an eye always open to find them. When you find them, just use the existing frameworks out there to start validate and experiment if the problem is real. Once you see a traction, tie it to a business model Voila, you have created a new revenue source Now keep improving on it. If you enjoyed this, please promote me with a clap :)","['Design Thinking', 'Popular Posts', 'Bootcamps', 'Codingbootcamp', 'Side Hustle']",https://medium.com/learning-curve-in-my-life/how-we-applied-design-thinking-to-solve-a-real-problem-out-there-34f352a47e51,2,[],0,0,serin,F,1.0,0.0
Chiara Cokieng,"Startup generalist. CrossFit. Strength, mind and body. I read a lot and sometimes write. Email me at chiara@chiaracokieng.com","Q&A with Jeffrey Wan on Turing School, Flatiron School, and coding bootcamps — reasons people fail…",2018-08-09 19:32:09,medium,"Q& A with Jeffrey Wan on Turing School, Flatiron School, and coding bootcamps — reasons people fail, how to prepare, minimizing regret, and more I’m researching programming schools / bootcamps (mostly decided on either Flatiron School or Turing School). I reached out to Jeffrey Wan because of his insightful responses on Quora: Is the Turing School of Software & Design a good school? He generously responded with comprehensive and honest answers. Thanks so much, Jeffrey! What are some reasons people fail or drop out? I can think of a couple of people who dropped out… Here are some possible reasons: They didn’t do any prework before the bootcamp to become familiar with programming fundamentals. It’s tough to learn how to code from scratch and I think doing some prework to at least become familiar with strings, integers, conditional statements, and basic syntax of the language is really useful to give your brain a sort of head start before the bootcamp. They didn’t have good study habits and conditions: a quiet place, some baseline of focus, few distractions, and a clear mind. I would definitely read Learn to Code by Chris Pine and maybe do the Michael Hartl tutorial beforehand. If you’re in the frontend program, find a good Java Script/j Query and C S S tutorial before the program. 2. How did you prepare for Turing? Knowing what you know now, what could you have realistically done to prepare for it? When I was in Turing, the front-end program and back-end program were one. I learned Rails and Java Script/j Query/ Ember. I prepped for it by reading Learn to Code and doing the Hartl tutorial. They helped tremendously. I think doing the rubymonk. com tutorial is great prep. Learning some Ruby/ Rails and coding something like a tic-tac-toe command line application before Turing is a good way to prep too (you can easily find a tutorial on this). 3. What alternatives did you consider? And why did you end up choosing Turing? I chose Turing because of the length of the program. I thought longer was better. I considered Flatiron too but I really just wanted to get out of N Y C for a while. 4. What do you like versus don’t like about Turing? I like the length of the program, the people I met, and the location ( Denver is cool!). I would have liked to see more reusable written materials or tutorials versus lectures to be honest. I think some more experimentation with different learning/teaching methods is being done though which is great to see and hear about. I did really like their focus on project-based learning and peer learning!5. What questions should I be asking before making the decision to (1) transition to software development and (2) proceed with Turing in order to minimize regret? Is there something in your life that makes you want to learn how to code? Something in your career? For me, I worked in professional gambling and H F T (high frequency trading) prior to Turing and I really wanted to learn to program as a means to an end. That drove me. What drives you to learn how to code besides the money and career stability? I think that helps a lot for long-term sustainability of a career. I think all of the major bootcamps are practically the same. You’ll learn how to code anywhere I think and honestly most of the effort is going to be on you. Turing will certainly help your cause but a lot of the heavy-lifting so to speak is going to be done by you. Do you want to live in Denver for 7 months and write a lot of projects? If so, go to Turing. Another option to consider is finding a scholarship for women. . . I know a lot of bootcamps are encouraging women and minorities to enter tech (a field littered with high-paying and stable work) which is great to see. With the scholarship, your cost will go down by maybe half? You could use the saved money to take some inexpensive computer science classes online like a formal course in databases, O O P, or several in the emerging field of data science. Your end goal project is to show off to employers your understanding of web software and design in a single page application with a separate backend (e. g. , a Rails backend on a server + React and Redux frontend consuming the backend’s A P I on another server) with ample unit and integration testing (use Rspec for Rails and Jest for React) with maybe some utilization of an external A P I to incorporate some real data (maybe make an application that utilizes a free public A P I like Spotify. e. g. , your Rails backend can consume some Spotify data, run some analysis on it (how many people listen to Taylor Swift in each country), and have your React application display these findings which your backend will expose via some A P I. Just a thought. If you can do that and show it to employers, you can get a job and learn more on the job, and the wonderful cycle continues of learning and producing code. You’d be all set. I think concepts to learn well are: Databases and database architecture O O P (polymorhpism and reusing code) Consuming and exposing A P Is Testing (watch Sandi Metz’s videos) Books: Learn to Code by Chris Pine Sandi Metz O O P Michael Hartl tutorial Clean Code Code","['Programming', 'Codingbootcamp']",https://medium.com/@chiaracokieng/q-a-with-jeffrey-wan-on-turing-flatiron-school-and-coding-bootcamps-reasons-people-fail-how-to-67289d470bb6,2,"['Turing School', 'Flatiron School']",2,1,chiara,F,1.0,0.0
Amirata Khodaparast,,Flatiron Mod 2 Project — Student Management System – Amirata Khodaparast – Medium,2018-09-06 17:20:22,medium,"Flatiron Mod 2 Project — Student Management System Our mod 2 project was a student management service but of course with a lot less features than a real world version of it should have. Overview: First of all there is no sign up page. Because people can’t manually register for the school. They have to go through the lengthy procedure of application, placement testing, and etc. We assumed that this step was done already and student accounts are on the database with their default usernames and passwords. There’s two types of users: Students and professors. Student abilities: Look at all the courses offered by school and be able to register for the course on the same page. Look at the courses required for their major in particular and be able to register for the course on the same page. Look at the courses they’ve taken before and see their grades and professors. Look at the courses they’re currently taking and be able to drop them. see their progress toward graduation and how many courses left to fulfill the major. Professor abilities: See the courses they’re teaching this semester. See all the students registered for the course and be able to grade them Models: Course , Professor , Student and Major can exist by themselves and don’t depend on other models for creation. Course and Major have title and description attributes. Professor and Student have attributes describing the person such as first_name , last_name , and dob and etc; Plus username and password . To create a class, we need the professor and the courses. So that’ll be an instance of Professor Course . Professor Courses represents a class so it has location , start_date and end_date attributes. (e. g. , Room 103, 9/1 – 12/25) Section is another model that has day , start_time , and end-time attributes. (e. g. , Monday, 5:00 – 7:00) Professor Course has many Section s. (usually two) Professor has many Student s. How? Professor has many Professor Course s. Professor Course has many Student s, through Student Professor Courses. Therefore, Professor has many Students and vice versa. Each student can have only one major. Which means that students have the foreign-key of major_id. Therefore, the rails association would be Student belongs to Major. Major has many Courses through Requirements and vice versa. Security: We designed the app such that professors (once logged in) cannot navigate to the students page and vice versa. We implemented this feature by adding two key-value pairs to our sessions upon login. class Sessions Controller < Application Controller def create  ### Find the user using the username  @current = ( Student. all + Professor. all). find{ |inst| inst. username == params[:username] }  #### If the username is found, authenticate using the entered password redirect to the correct page.  if @current && @current. authenticate(params[:password])   #### If authentication is successful we add the following keys to ours sessions.   session[:user_id] = @current. id. to_s   session[:position] = @current. class. to_s. downcase   redirect_to @current  else   flash[:errors] = ["" Please enter a username and a password. ""]   redirect_to login_path  end end def delete  session. delete(:user_id)  session. delete(:position)  redirect_to login_path endend In our Students Controller and Professors Controller we have the authorized method and we run that before doing any of the actions. This method blocks the user from accessing unauthorized pages by redirecting them to their homepage. It does so by checking the sessions[:user_id] and sessions[:position]. class Students Controller < Application Controller before_action :authorized . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . def authorized  if session[:user_id]   if session[:position] == ""professor""    redirect_to professor_path(session[:user_id])   elsif session[:user_id] != params[:id]    redirect_to student_path(session[:user_id])   end  else   redirect_to login_path  end endend And we have the same authorized method for our professors controller. There’s another validation that we run upon creation of Professor and Student So we would never have the same usernames. If we had a single user table that stored all the usernames and passwords, we could have done this validation as easy as this: validates :username, uniqueness: true. But since there are two tables, we implemented it as follows:class Student < Application Record has_many :student_professor_courses has_many :professor_courses, through: :student_professor_courses has_many :professors, through: :professor_courses has_many :courses, through: :professor_courses belongs_to :major has_secure_password validate :cross_table_uniqueness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . def cross_table_uniqueness  condition1 = Student. find_by(username: username)  condition2 = Professor. find_by(username: username)  errors. add(:username, ' Username already exists') if condition1 || condition2 endend","['Ruby on Rails', 'Codingbootcamp', 'Coding', 'Web Development', 'Web Design']",https://medium.com/@amiratak88/flatiron-mod-2-project-student-management-system-cd887fba28bb,5,[],0,12,amirata,Unknown,Unknown,Unknown
hanna soloman,,Step by Step guide to setting up a Sinatra framework for your app,2018-07-03 11:39:04,medium,"Step by Step guide to setting up a Sinatra framework for your app A beginners understanding of a step by step guide. As a beginner roaming the world of web development, I’ve started out by exploring Sinatra, the lightweight, bare-bones framework, written in Ruby with only the most essential parts of Ruby on Rails. It’s simplicity creates a great learning environment. Here’s a brief history of Sinatra Created in 2007 by Blake Mizerany, who together with his team was looking to create a new framework using only the most bare-bones essential parts of Ruby on Rails. Sinatra is a lightweight open source web framework for generating web applications, written in the Ruby programming language. The two main functions of Sinatra are routing browser requests to code that can handle those requests and render templates back to the browser as a response. Or as some might think of it… the leanest possible version of Ruby on Rails. The Sinatra framework strips out all of the non-essential parts, principally a browser sends a request to the web server which then sends a request to the routing and then the routing sends a request to the template or the view which is then rendered back to the web server. Sinatra is seen as great tool for lightweight web applications, because it’s simplified which makes it fast and having low memory requirements, only adding additional features as needed or allowing you to create your own custom features. Step by Step Guide Lets get started creating our simple app framework, first lets take a look at Corneal — A Sinatra app generator, helping you to swiftly generate a template https://thebrianemory. github. io/corneal/ to install type the following command in your terminal:gem install corneal Using our newly installed Corneal lets generates all the files for our app template in the terminal by typing the following:corneal new cupcakes We now have the template files we need to get started, we’ll go to our cupcake/app/models folder and start by setting up our model, create a new file called cupcake. rb. Open the file and create a class in Ruby and have it inherit from Active Recordclass Cupcake < Active Record:: Baseend Back to our terminal navigate to our cupcake folder and type bundle install once that’s completed and you’ve got all you need lets create the migrationrake db:create_migration N A M E=create_cupcake_table Navigate to cupcake/db/migrate/create_cupcake_table. rb add the following code to your tableclass Create Cupcake Table < Active Record:: Migration  def change   create_table :cupcakes do |t|     t. string :name     t. string :price   end  endend Back to the terminal to run the migration for the table you just created aboverake db:migratecheck your schema cupcake/db/schema. rb make sure you have something that resembles the following code Active Record:: Schema. define(version: 20180702182620) do create_table ""cupcakes"", force: :cascade do |t|  t. string ""name""  t. string ""price"" endend Navigate to cupcake/ Rakefile and all the following code which allows us to run rake consoledesc "" Console"" task :console do  Pry. start end Back to the terminal to go into rake console and manually add some of those yummy cupcakes to our tablerake console Here’s a few I made earlier Here we can call on our cupcake and establish a connection which then allows us to create cupcakes with our given name and price parameters, making sure that the name is in a ""string"" and the price is an integer. As illustrated above the new cupcakes created are also automatically given an id number too. What we want to do now is create this functionality in the User Interface. let’s run our application, in our terminal enter shotgun to see something similar to== Shotgun/ Thin on http://127. 0. 0. 1:9393/ Thin web server (v1. 7. 2 codename Bachmanity) Maximum connections set to 1024 Listening on 127. 0. 0. 1:9393, C T R L+ C to stop Now we’re up and running lets make our controller just for cupcakes. Navigate to cupcake/app/controller and create a file called cupcake_controller. rb adding the following code in your Rub file, please note here cupcakes is plural as it’s not a class for an individual cupcake but for all the cupcakes. class Cupcakes Controller < Application Controllerend Go to config. ru and aboverun Application Controller add the following code to make sure we can run our appuse Cupcake Controller Back to our cupcake_controller. rb and lets add a controller action (method) which corresponds to one request, we’ll start off with the index (homepage) that displays all of our cupcakes. We’re creating instance variables @cupcake so that the variable is made available to the view, then specifying the page it should go to at erb :""cupcakes/index""class Cupcakes Controller < Application Controller get ""/cupcakes"" do  @cupcake = Cupcake. all  erb :""cupcakes/index"" endend Make a new folder in views folder called cupcakes and create a file inside it called index. erb creating a title for your page, a link to the edit cupcake page you’ll be making soon, iterating through cupcakes in an unordered list and rendering out each cupcakes name and price as a list item<h1> All the Cupcakes your heart could desire</h1><a href=""/cupcakes/new""> Create new Cupcake</a><ul> <% @cupcakes. each do |cupcake| %>   <li><a href=""/cupcakes/<%= cupcake. id %>""><%= cupcake. name %>   </a> | <li><%= cupcake. price %></li></ul>go back to cupcake_controller. rb and create the following action which enables us to choose one id or say one cupcake from our table, again we save our call in a variable to make it accessible to our viewget ""/cupcakes/:id"" do  @cupcake = Cupcake. find(params[:id])  erb :""cupcakes/show""endback again to our view/cupcake folder, now let’s create a show. erb which is a convention that is used in rails files. Creating a title for our page of whichever cupcake is called, and giving some information about it to our user such as the price, at the bottom we’ll add a link to our index page to view all the cupcakes and another link to our soon to be created edit page<h1><%= @cupcake. name %></h1><p> Yummy! This is a delicious cupcake and it's £<%= @cupcake. price %>. </p><a href='/cupcakes'> View All Cupcakess</a><a href='/cupcakes/<%= @cupcake. id %>/edit'> Edit this Cupcake</a>back to our cupcake_controller. rb now let’s add an action called new above get'cupcakes/:id this will be the action that leads us to the form that allows our user to create a new cupcakeget ""/cupcakess/new"" do erb :""cupcakess/new""end And now lets create the form that will allow our user to create a new cupcake, again lets create the new. erb file in cupcake/views/cupcake and give our page a title, a link to help the user go back to the index page, a form to create a new cupcake allowing the user to name and price it and finally a submit button to bring our new cupcake into existence!<h1> Create new Cupcake</h1> <a href=""/cupcakes""> Go back</a> <form action=""/cupcakes"" method=""post""> <div>  <label for=""""> Cupcake Name:</label>  <input type=""text"" name=""cupcake[name]"" /> </div> <div>  <label for=""""> Price:</label>  <input type=""text"" name=""cupcake[price]"" />  </div>  <input type=""submit"" value="" Create new Cupcake"" /></form> And again back to our cupcake_controller. rb now let’s add the action that allows the user to add the new cupcake they’ve made to our list of cupcakes, creating a post action that allows our user to add a new object to our collection. Also we’ll create an action that allows us to edit our existing cupcakes say if the price changes or we wan to change the name again we use this action to get the user to the page that allows for editing of the cupcakespost ""/cupcakes"" do  cupcake = Cupcake. create(params[:cupcake])  redirect '/cupcakess/#{cupcake. id}' endget ""/cupcakes/:id/edit"" do  @cupcake = cupcake. find(params[:id])  erb :""cupcakes/edit"" endyep you’ve guessed it back again to create the edit. erbfile in cupcake/views/cupcake . This is the file we’ve called above in our edit action which leads to the page that allows the user to edit whichever cupcake. Again creating a title for our page and a link allowing the user to go back to the main index page, and the main attraction a form that allows us to edit a cupcake, both it’s name and price but also at the bottom functionality is added to allow our user to delete a given cupcake<h1> Edit Cupcake</h1> <a href=""/cupcakes/<%= @cupcake. id %>""> Go back</a> <form action=""/cupcakes/<%= @cupcake. id %>"" method=""post""> <input type=""hidden"" name=""_method"" value=""patch"" /> <div>  <label for=""""> Name:</label>  <input type=""text"" name=""cupcake[name]  ""value=""<%= @cupcake. name %>"" />  </div> <div>  <label for=""""> Price:</label>  <input type=""text"" name=""cupcake[price]""   ""value=""<%= @cupcake. price %>"" /> </div> <input type=""submit"" value="" Edit Cupcake"" /></form><form action=""/cupcakes/<%= @cupcake. id %>"" method=""post""> <input type=""hidden"" name=""_method"" value=""delete"" />  <input id=""mysubmit"" type=""submit"" value="" Delete Cupcake"" /></form>we now need to create the actions to allow us to both edit and delete a given cupcake so alright then back to cupcake_controller. rb it is. Here our patch action allows us to edit the given cupcake and go to its page once the user has edited it. Also we have a delete action which allows us to get rid of the given cupcake, so it’s no longer in our listpatch ""/cupcakes/:id"" do  cupcake= Cupcake. find(params[:id])  cupcake. update(params[:cupcake])  redirect ""/cupcakes/#{cupcake. id}"" enddelete ""/cupcakes/:id"" do  cupcake = Cupcake. find(params[:id])  cupcake. destroy  redirect ""/cupcake""end So to allow the user to both edit and delete the cupcakes and we are back in configure. ru to add use Rack:: Method Overrideuse Rack:: Method Override use Cupcakes Controllerrun Application Controller We now have a simple one model app framework to start our journey exploring Sinatra and to go further we can add more models, you can refer to http://sinatrarb. com/documentation. html for further reading and documentation. But for now let’s enjoy the cupcakes we’ve created…","['Ruby on Rails', 'Sinatra', 'Ruby', 'Beginners Guide', 'Codingbootcamp']",https://medium.com/@hanna.soloman/step-by-step-guide-to-setting-up-a-sinatra-framework-for-your-app-2997ad9d5642,0,[],0,0,hanna,F,0.9964830948765087,0.0035169051234913277
Sean Sutton,,"An Incredibly Simple, Basic, Bare-bones Explanation of Javascript Functions",2018-08-12 19:30:56,medium,"An Incredibly Simple, Basic, Bare-bones Explanation of Javascript Functions As I get further and further into the Immersion Program I’m currently enrolled in , I find myself losing touch as to how inexplicably rough the beginning stages of learning to code were. A fellow student recently said “ Please stop talking to me like i understand this stuff” so for this post, I won’t . I’ll attempt to explain functions in a way I wish someone would have for me. Let’s start with what functions are. You’ll hear again and again and even again that functions are “reusable blocks of code that may take parameters and may accomplish some task and or return a value. ” While that’s true, that definition doesn’t really say anything at all. If I were asked to describe what functions are to someone who has zero experience coding, I would simply say they are specialized tools because a shovel is all fine and dandy but with no dirt to dig they don’t really serve a purpose just like a function without data to act upon serves no purpose. Just like a shovel, you can only use functions for their intended purpose. Above is a break down of a simple function “add Stuff” which will return the sum of its parameters. However, it can be explained in even simpler terms. The keyword “ Function” literally tells the computer you’re about to start writing a function. “add Stuff” is a name I’ve given this function. Try to name functions in ways that indicate their purposes. Parameters such as “value1” and “value2” have zero value. They are just stand-in variable names for whatever input you feed to the function when you later “invoke”it, or run it later. It is good habit to name your parameters something representative of the kind of data that will normally be used with your function. The curly braces signify the body of the function. The return statement is the real meat and potatoes of a function — a function’s entire value resolves to its return statement. Finally we actually call/invoke/run/ our function. The values in the parenthesis are called arguments. These values serve as the input to our function. I hope your main take away from this post is a clearer view of functions and a renewed confidence in your ability to learn to code. You won’t be writing the next viral app tomorrow but with time, practice, and bit of kindness to yourself, there is absolutely no reason why anyone can’t learn to code in Javascript.","['JavaScript', 'Javascript Tips', 'Javascript Development', 'Codingbootcamp', 'Coding']",https://medium.com/@seancsutton1/an-incredibly-simple-basic-bare-bones-explanation-of-javascript-functions-799458ed64bb,0,[],0,0,sean,M,0.007009713460080397,0.9929902865399196
Jamie Bort,"Software engineer, philomath, traveler, and bibliophile.",I’m back. – Jamie Bort – Medium,2017-11-03 19:01:56,medium,"I’m back. When I first created this blog the goal was to post to it roughly once a week with content relevant to my career; specifically and most often, what I was currently learning. However, since learning was the primary objective of The Iron Yard and since it quickly monopolized my time, I choose to let this blog slide until I graduated. Well, I have since graduated. So stay tuned!","['Learning To Code', 'Computer Science', 'Codingbootcamp', 'The Iron Yard', 'Rejuvenated']",https://medium.com/@jamiebort/im-back-5511aa4c1ec8,0,['The Iron Yard'],1,0,jamie,F,0.7582899308015347,0.24171006919846527
Develop Me,"We are a talent and digital skills accelerator. Our core learning programmes are a 12-week Web Developer Bootcamp, UX Design Bootcamp + one day tech workshops.",Meet the Instructor: My Life in Code – Develop Me – Medium,2018-05-09 09:26:02,medium,"Meet the Instructor: My Life in Code Mark Wales has been an integral part of Develop Me from the beginning, running some of our very first one-day workshops and short courses. We had no doubts whatsoever about making him a major part of the Coding Fellowship when it launched and he now teaches five out of the 12 weeks on the bootcamp. He is a fountain of knowledge, an excellent instructor, creator of How Secure is my Password, co-runs Code Hub and teaches the programming fundamentals, Java Script, React + Redux and Laravel modules on the bootcamp. Here’s his story of a life in code… I first realised the potential of code when the family computer started saying “ There is an error in W I N. I N I”. The idea that a single file could stop a computer from working intrigued me. I decided to delete the errant file from the computer only to be presented with a blank screen the next time the computer booted. It turns out it was quite an important file. My Mum took the computer back and got it fixed and, with a fresh install of Windows 95, my journey into coding began. I initially played around with C and then, finding the command line rather unappealing, moved onto Visual Basic — which was a popular way to make Windows apps at the time. This was all around 1996, so the web was just starting to take off. I decided to create a website, with neon green letters on a black background. I honestly can’t remember what it was about. My main recollection is spending about a week trying to get it to work online before realising that I needed to rename my ` Index. html` file to `index. html`. By the time I was 16 I’d decided that I would do a Computer Science degree at Cambridge University once I finished my A- Levels. This, however, was not meant to be. It turns out that if you spend all of your free-time teaching yourself how to code, you don’t have much time for homework or revision. There was no way I was getting into Cambridge with my grades. Around the same time, having already applied for six different Computer Science degrees on my U C A S form, I discovered that Computer Science didn’t actually involve much programming and was mostly electronics and maths. It turns out that if you spend all of your free-time teaching yourself how to code, you don’t have much time to do the most minimal research about how to spend the next four years of your life. Or at least that’s what I told myself. I took a “year out”, which consisted of sitting at home programming. I was still keen to go to university, but, no longer wanting to do Computer Science, I threw around various ideas including animation, psychology, and philosophy. I think largely due to a Douglas Adams reference in my personal statement, I was offered an unconditional offer to study Philosophy at the University of Aberdeen, so the decision was made for me. So, five years later, with an undergraduate and masters degree in Philosophy, I decided it was time to enter the real world. I moved home and started looking for jobs. But this was near the end of 2008 when even someone with a useful degree might have struggled to find something to do. After not finding anything to do for a few months I started doing a few websites for mutual acquaintances. And so began my life as a freelance web designer. I’ll be honest, it wasn’t a great start. I spent almost the entirety of my first year’s earnings on a copy of Adobe Photoshop. Partly that shows how much Photoshop cost, but also that I really didn’t earn much that first year. The next two years weren’t much better. It was only in my fourth year that I made more than minimum wage. If it hadn’t been for my Mum letting me stay at home rent free for three years I don’t know what I’d be doing now. I learnt a lot during these first few years by taking on projects that I was ludicrously unqualified to take on. There’s a lot to be said for throwing yourself in at the deep end: it really focusses the mind. I took on projects involving technologies I’d never even heard of and then spent the first month of the project trying to work out what I’d signed up for. I’m still not entirely sure how I got away with it; but ever since I’ve always taken the attitude that I’ll only take on projects that involve some technology I’ve not worked with before. I moved to Bristol in my fourth year as a freelancer and started charging more for my work. It was around this point that I moved more towards web-development as opposed to web-design. I love a good typeface, but design was never my strong suit. I realised that programming was both where my skills lay and also what I enjoyed doing the most. By my fifth year as a freelancer I’d given up the design side of things, although I was still writing H T M L and C S S. Moving to Bristol turned out to be a really good decision: the tech-scene here is really thriving and after making a few good contacts early on I never needed to search for work again. One of my first big projects with a Bristol company was working for Aardman. They make lots of educational games for the B B C and they were struggling to get one of their first non- Flash based games working well. On my first day I got lucky and spotted a single line of code that was causing the game to run about 100 times slower than it needed to. Having impressed them with a 100x performance increase on my first day they offered me a 9 month contract to work on a new game from scratch. Those nine months were really amazing. As you can imagine Aardman is a really fun place to work and they were a very friendly bunch. When we were done we were all proud of the game we’d created. I worked for various agencies in Bristol over the next few years on all sorts of different projects: some simple websites, some games, and some Web G L experiments. I also continued doing work for the University of Leeds, who had been one of my first clients. A few years ago I started doing some one-off workshops for Develop Me and a year later we began discussing running the Coding Fellowship. I taught a couple of weeks on the very first cohort of the Coding Fellowship and nowadays I teach five of the twelve weeks. In my spare time I’m mostly writing Haskell and mac O S applications and studying for a maths degree with the O U. I also help run Code Hub, which runs hack nights and workshops in Bristol for people trying to get into coding.","['Programming', 'Meet The Instructor', 'Coding', 'Tech', 'Codingbootcamp']",https://medium.com/@develop_me_uk/meet-the-instructor-my-life-in-code-664c45c32844,10,[],0,10,develop,Unknown,Unknown,Unknown
Swift Snacks,,The difference between Constants and variables. – Swift Snacks – Medium,2018-08-28 13:54:39,medium,"The difference between Constants and variables. Once you declare a constant you cannot change it’s value. age, days, month, years are things that changes. If you declare a constant “age” and assign the value “10” trying to change it to “11” will throw an error because you cannot change the value of a constant. Here are a few examples. Tho fix this change “let” to “var” to get rid of the error. When writing code the value of certain properties will need to change base on certain conditions. On a calendar App days of the week changes on a 24 hour basis. if the value of a property need to change when certain conditions is met use “var” instead of “let. ”","['Swift 4', 'Swift Programming', 'Mobile App Development', 'Codingbootcamp', 'Software Development']",https://medium.com/@createwithcodes/the-difference-between-constants-and-variables-ffc2177eba70,0,[],0,0,swift,M,0.0,1.0
Sarah L,,My Introduction To Three.js – Sarah L – Medium,2018-03-19 02:31:33,medium,"My Introduction To Three. js One of the most satisfying things about learning to code is that you often get instant feedback about whether or not the code you have written is working. This comes in the form of logs, tests, and even error messages! While learning three. js, the instant feedback I got was in the form of shapes, colors, and animation. That was really satisfying. With this tutorial, I hope you can get some simple takeaways that will make your own foray into three. js just as enjoyable as mine! Three. js is built on top of Web G L, which allows rendering of 2 D and 3 D graphics in the browser. Web G L works well for image processing because it takes advantage of the computer’s G P U, instead of operating on the C P U. Web G L is one of the reasons that three. js is so great- it is fast, and runs directly in the browser without the need for a plugin. Read more about Web G L below:https://webglfundamentals. org/webgl/lessons/webgl-fundamentals. html I was pleasantly surprised at how simple it was to get started with Three. js. The documentation is very clear in terms of the basics that you need to set up before you start customizing the images. The information is all laid out in the documentation, but I felt that it was helpful to have an understanding of what each piece of the puzzle was doing before I started changing things on my own. You can think of each building block as an aspect of a movie in production: each item has a particular purpose, and all are necessary to make the show go on! The first thing you’ll need is an index. html file, with a script tag where your three. js code will actually go. I’m struggling to come up with an analogy for this one, but let’s call it the film that the movie ends up on. You can’t play a movie if you can’t get it from the camera to the projector. The index. html is what gets your Java Script to the browser. I promise my metaphors will get better! Rotating Rings The code snippets I show in this article are going to be from my Rotating Rings project, which was the first thing I ever made in Three. js. Check it out on Github: https://github. com/sjlaine/ Rotating Rings. <! D O C T Y P E html><html> <head>  <meta charset=utf-8>  <title> Rotating Rings</title>  <style>   body { margin: 0; }   canvas { width: 100%; height: 100% }  </style> </head> <body>  <script src=""threejs/three. js""></script>  <script src=""shapes. js""></script> </body></html> Instead of keeping all of my Java Script in my index. html file like the example in the three. js documentation, I decided to write it in a separate file. I felt that even on a simple project, it was better to just keep this good habit going. When you’re doing this, don’t forget that your first script tag should be a reference to the three. js source code, which you should have downloaded and added to your project directory. You can’t do anything in three. js if you haven’t included three. js! Here comes the Java Script… Now we can get into the basic building blocks of any three. js project. Let’s go back to talking about that movie we’re making. Renderer: this is the function that actually makes use of Web G L, in the sense that it renders everything that you tell it to. The renderer gets appended directly to the D O M. You can even have more than one three. js scene rendered by a single Three. js renderer! In my mind, the renderer is analogous to the director for a movie, making sure that all the moving parts are coming together, and making sure that the work gets done. const renderer = new T H R E E. Web G L Renderer(); renderer. set Size( window. inner Width, window. inner Height ); document. body. append Child( renderer. dom Element ); First, you create an instance of the renderer, then you set its size. The size will usually be dependent on what else you have going on in your webpage. You’ll often just want your three. js to take up the whole window, so that’s what I did here. Finally, you append the new renderer to the D O M. We’ll tell the renderer what it is actually going to render later on. 2. Scene: I like to think of this as the stage where all of the action of our three. js movie takes place. If this is the case, then a scene in three. js really is like a scene in a movie. It’s where all of the actors (geometries), lighting (three. js lights), and setting (background color/images) will be presented to the viewer. The name actually makes a lot of logical sense. const scene = new T H R E E. Scene(); Wow, that was pretty simple! All we have to do is instantiate a scene for now, but we will be adding a lot of great things to it as we build them. One more thing about my scene: it’s purple! So now’s a good time to talk about colors. Three. js gives you a separate constructor function to create colors to add to your scene. I first found this to be a little bit annoying and unnecessary, but now I really like it. I’m pretty sure this isn’t the best practice for the future, but for the sake of my experimentation I’ve gotten in the habit of creating some variables for colors I’d like to use in each project at the top of my code. That way when I’m changing the color of anything I can just pass the color’s name instead of having to think in or look up hexadecimals. Here’s what I did in Rotating Rings: const pink = new T H R E E. Color( 0x F F33 F3 ); const blue = new T H R E E. Color( 0x3049 F C ); const purple = new T H R E E. Color( 0x A200 F F ); const indigo = new T H R E E. Color( 0x6600 F F ); That way, when I changed the background color of my scene, all I did was:scene. background = purple; Let’s get back on track. 3. Camera: Last but not least, what would a movie be without a camera to capture the action? Without a camera, you may have a scene with plenty of beautiful, exciting images, but no viewer will be able to see it to give you credit for that. const camera = new T H R E E. Perspective Camera( 75, window. inner Width / window. inner Height, 0. 1, 1000 ); The perspective camera takes in four parameters: the frustum field of view, frustum aspect ratio, frustum near plane, and frustum far plane. Each of these are responsible for altering what the camera can see on the screen. There are other options for cameras in three. js, but the perspective camera is meant to mimic what the human eye sees, and is the most commonly used in three. js according to the docs. You can also set the position of the camera like so:camera. position. z = 50; Now for the fun part! The next step is to code the fun shapes that will be placed in your scene. These are called Three. js meshes, which are each made up of a geometry and material. Geometry: The geometry is the shape that you specify in three. js. The nice thing about the library is that it comes with some predefined geometries for you to use right off the bat. I started with a cube (called Box Geometry in Three. js lingo). const geometry = new T H R E E. Torus Geometry( 10, 1, 100, 400); const geometry2 = new T H R E E. Torus Geometry( 17, 2, 100, 400); const geometry3 = new T H R E E. Torus Geometry( 25, 3, 100, 400); This is the code that specifies the shape and size of my objects. In three. js, a ring is made with a torus geometry. This geometry requires specifying three parameters, respectively: the radius of the geometry as a whole, the radius of the tube, the number of radial segments, and the number of tubular segments. The more segments the torus has, the more rounded it becomes. Fun Fact: The minimum number of tubular segments a torus can have is three. That makes a tubular triangle 😉2. Material: this is what specifies how your geometry will actually look on the screen. It takes an options object as a parameter. This allows you to specify a variety of values, such as the roughness and metalness. These are fun to play with because they make the objects you render look like they are actually made of different materials. Just like geometries, three. js gives you some materials to choose from right off the bat. I started off trying to work with the Mesh Basic Material, but ended up finding that Mesh Standard Material was more fun because it interacts with/reflects light in the scene. I also changed the color of the material by dotting off of it and setting it to one of the colors that I set higher up in my code. I made three different materials (one for each ring) but here’s just one as an example:const material = new T H R E E. Mesh Standard Material({wireframe: false, flat Shading: true, metalness: 0. 7, roughness: 0. 01});material. color = pink; Now let’s mash them together! Or should I say, * Mesh*? The geometry is the actor in our film, and the material is the costume. Put them together, and we get our character! The mesh is just the combination of a geometry and material. Thus, it takes those two as parameters. const ring1 = new T H R E E. Mesh( geometry, material ); Don’t forget to add the mesh to your scene!const ring1 = new T H R E E. Mesh( geometry, material ); Lights! Camera! Oh wait… We haven’t done our lights yet. I made a lights array and put each of my lights in that. I used point lights, because it seemed intuitive how to position them in the scene and get the effect I was looking for. In point lights you can specify the color, intensity, and distance as the three parameters. const lights = []; lights[ 0 ] = new T H R E E. Point Light( 0x3049 F C, 3, 0 ); lights[ 1 ] = new T H R E E. Point Light( 0x F F6060, 3, 0 ); lights[ 2 ] = new T H R E E. Point Light( 0x F F F F F F, 1, 0 ); lights[ 3 ] = new T H R E E. Point Light( 0x A200 F F, 2, 0 ); lights[ 4 ] = new T H R E E. Point Light( 0x F F F F F F, 1, 0 ); Next was specifying where the light would be coming from: lights[ 0 ]. position. set( 0, 200, 0 ); lights[ 1 ]. position. set( 100, 200, 150 ); lights[ 2 ]. position. set( -100, -200, -200 ); lights[ 3 ]. position. set( -300, -200, 200); lights[ 4 ]. position. set( 300, -200, 300 ); Finally, adding them all to the scene: scene. add( lights[ 0 ] ); scene. add( lights[ 1 ] ); scene. add( lights[ 2 ] ); scene. add( lights[ 3 ] ); scene. add( lights[ 4 ] ); Action! The last piece of the three. js puzzle was pretty valuable to me because it introduced me to the function request Animation Frame, which I had never been introduced to before. This is a pretty useful function, kind of similar to set Timeout or set Interval. It takes a callback that it calls repeatedly, usually 60 times per second. We use it in three. js to make our meshes come to life!function animate() { request Animation Frame( animate ); ring1. rotation. x += 0. 009 ring1. rotation. y += 0. 035; ring2. rotation. y -= 0. 01; ring3. rotation. y += 0. 03; renderer. render( scene, camera );}animate(); The function animate is one of the many big building blocks provided to you in the three. js documentation. Its first line calls request Animation Frame on the animate function itself, which means that the function is being called recursively at the rate request Animation Frame runs. Next, the positioning changes are set, on the x and y axes (can also be set for z). As you may have guessed, the bigger the number, the faster the rotation. You can do some trial and error with these to see what values you want to set. Finally, renderer. render is called! The renderer takes in the scene and the camera as parameters. That way, every time the animate function is called, the scene and camera are at your service! There you have it, now you can make things in three. js! It’s pretty simple to get started. Three. js is a great tool to learn if you want to make cool images in the browser. The three. js website has tons of sample projects to give you some inspiration and an idea of what you could aspire to make with tons of practice. Feel free to check out the code for my Rotating Rings project on Github — the first thing I ever made in three. js. Happy rendering! Resources:💫 Here are some related resources that you might find helpful 💫three. js - Javascript 3 D library Edit descriptionthreejs. orgmrdoob/three. jsthree. js - Java Script 3 D library. github. com The Web G L A P I: 2 D and 3 D graphics for the web Support for Web G L is present in Firefox 4+, Google Chrome 9+, Opera 12+, Safari 5. 1+, Internet Explorer 11+, and…developer. mozilla. org Feedback I’d love to hear what you thought of this overview! Feel free to comment below to let me know your thoughts.","['JavaScript', 'Threejs', 'Coding', 'Codingbootcamp', 'Webgl']",https://medium.com/@sjlaine624/my-introduction-to-three-js-46e684f3f3bb,3,[],0,25,sarah,F,0.9969179783051666,0.0030820216948334363
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Something that broke my brain – Emily Deans – Medium,2017-07-08 00:52:12,medium,"Something that broke my brain A thing I’ve come to accept and recognize as a constant in this program is that — at least once every day — something seemingly innocuous will come across my path and it will break my brain. Actually. It’s good though. It forces me to push way outside my comfort zone and then to scale back to approach problems beginning with my most fundamental, base-level acquired knowledge. This helps build and reinforce layers of understanding, which I hope will assist me in this process as I move toward increasingly challenging problems and exercises. Today, the thing that finally did it was: This one definitely had me stumped for a good couple of hours. The upshot? After receiving a visual breakdown for a few solution approaches with a very patient instructor (thank you, Michael), I finally understand and can replicate and explain. Which I will do tomorrow. Tonight, I’m going to check off a few items on my personal to-do list, and get to bed at an unreasonable hour for a Friday night.","['Life', 'Codingbootcamp', 'The Iron Yard', 'JavaScript', 'Women In Tech']",https://medium.com/@emilyldeans/something-that-broke-my-brain-3618f6473f12,0,[],0,2,emily,F,0.9979317746535663,0.002068225346433675
phavor sparks,Building solutions through software and technology,A week-out with UI/UX – LearnFactory Nigeria – Medium,2018-05-12 10:46:07,medium,"A week-out with U I/ U X Fay_ Portfolio designed by phavor It was a beautiful week filled with awesome and exciting projects. That moment when you discover that you are on the edge of eviction… and all of a sudden you become densely doped with inspiration. No other company could have brought out the best in you as Learn Factory Nigeria. From Monday through today, we’ve been building web designs, what you would call a U I… and I must add this… we’ve been building capacity, morals and mindset to balance the skill-set. M O N D A Y Jumia came breezing through on Monday through Tuesday… after our instructor Obidi Isaac had taken us on a long interesting and excruciating journey of H T M L5 and bootstrap. So men went to work and built this as the class project. beautiful jumia design by phavor W E D N E S D A Y Our day of reckoning was fast approaching and we had to prove our desire by pursuing to book a place for the next phase… The world of Java Script… by the time our instructor was done with us, the next class projects took us through to Thursday. beautiful naijagist U I by phavor F R I D A Y Not only did we have it up to our waists and eyes… we had it to our hands too… but the will to do the extra-ordinary had overtaken us… we were coding it all out as we built the contact us page on Friday. contact us U I designed by phavor A N D T H E W I N N E R I S: Well to be in the Java Script ecosystem and master it, we would have to master H T M L5 & C S S3… I did find this project and it has just been interesting and inspiring… this is a little display of what Learnfactory Nigeria impacted… now I present Fay_ Portfolio… U I/ U X come alive design by phavor Watch this screencast… Find more at my public repo @ gitlab. See you next week.","['Design', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/a-week-out-with-ui-ux-62dc8a619052,0,[],0,211,phavor,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 81 / Early to Rise – conshus – Medium,2018-08-03 10:28:35,medium,"Day 81 / Early to Riseliner notes: Professional: Finally finished the Angular Tour of Heroes tutorial. Learned quite a bit of what it takes to put together an Angular app. The projects I made before really didn’t use the full power of Angular. I started diving into the more of the fundamentals like Architecture, Ng Modules, Dependency Injection, etc. Personal: After work, a group of us went to the U C F Coding Bootcamp presentation of graduate projects. Had a good time and saw some cool projects. Most important to me, I got to talk to some other coders. Got home pretty late. Watched some ‘ Dragon Ball Super’ and went to bed early. Super short update. Got a full day of interviews for new programmers. Early like starting at 8am early. There’s that, and finish putting together the radio show for tomorrow. Also going to check out the new space some friends have for their startup. Full day ahead so let’s get started! Have a great day and weekend!peace piece Dwane / conshusdwane. io / H I P H O Pand C O D E. com","['Angular', 'Hip Hop', 'Code', 'Coding', 'Codingbootcamp']",https://medium.com/@conshus/day-81-early-to-rise-d34e2f1791cb,0,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
The Software Guild,"Jump starting the career of aspiring software developers. We teach Java & C#/.NET languages. Akron, Louisville, Minneapolis & online. www.thesoftwareguild.com",TEST-DRIVE THE GUILD – The Software Guild Blog – Medium,2017-07-06 18:34:28,medium,"T E S T- D R I V E T H E G U I L D“ Everyone should learn to code. ” It’s a popular thing to say in the media, but I don’t really agree with such a blanket statement. Not everyone will work in jobs that benefit from being able to code. Not everyone even likes to write code. In fact, most people don’t, and that is O K. However, The Software Guild believes that everyone should have the opportunity to try coding. So now you can get started and learn to code for free in the four modules that make up our Introduction to Web Development online course! Now, we realize that there are other options for getting started with coding, so the real question is why someone who is interested in coding should use our free course. There are a few compelling reasons for getting started with the Guild. We have years of experience creating materials. We have been teaching learners to code since 2013. In that time, we have learned a lot about how to present material and provide users with enough information to get them started, but not so much information that they can go on autopilot and not be challenged by the materials. Too often, beginner materials attempt to encourage learners by telling them exactly what to type and take a paint-by-numbers approach to learning. While this gives the illusion of learning, many people find that once they finish the lessons and the guardrails are removed, they are not capable of using the skills they felt they should have learned. We have an online community to help you. After signing into the course, you will receive a link to our Slack server. Slack is a great tool for online collaboration, and you will find other learners, our alumni and even some Guild staff members on the server. This gives you an opportunity to ask questions about concepts in the materials and get the extra help and motivation that come from being part of a community. While we try not to overtly give out answers, we will try to steer you in the right direction. Learning how to troubleshoot your issues is a key developer skill for success in the field. So we like to simulate learning as closely as possible to that environment. It prepares you for auditioning into the Guild. The Guild is one of the most successful and selective bootcamps in the world. Our employer network partners rarely hire just one graduate; they come to the Guild for current and future hiring needs. The way we keep our employers happy is by giving them access to alumni who have proven their aptitude, drive and preparedness. Also, it is our goal to keep our graduation rate high because that is what is best for our students. Enrolling in a learning program that you are not ready for is a waste of time and money. Our audition process helps us identify whether you are a good fit for our program, which helps protect you as a consumer and helps us have the maximum impact on people who are ready for our intensive programs. The audition is solely based on materials we cover in Introduction to Web Development, so to maximize your chances of acceptance, we strongly encourage you to complete the course. We look forward to seeing you in Slack and giving you the opportunity to get started on your coding journey! Interested in learning the in-demand skills required to become a developer? The Software Guild’s coding bootcamps help apprentices like you gain experience building full-stack applications from start to finish using . N E T/ C# or Java. With locations in Akron, Minneapolis and Louisville, we provide an intensive learning environment to teach you the hands-on skills required to begin a successful development career. If you are ready to learn more, check out our guide to The Software Guild for an in-depth look at the curriculum, format, application process and everything else you need to know.","['Programming', 'Coding', 'Codingbootcamp', 'Web Development', 'Software Development']",https://medium.com/the-software-guild-blog/test-drive-the-guild-e4698913451a,1,['The Software Guild'],1,0,the,M,0.0,1.0
Jason M. Grigg,"Web Developer @The Iron Yard, Durham",HTML… – Jason M. Grigg – Medium,2017-05-14 21:17:53,medium,"H T M L… Ok so I’ve got one module left on the pre-work H T M L training, and at first I was feeling really intimidated. After trading a few emails with my future instructor Sam I have to admit that I feel a lot better. There are so many different terms that you have to learn that I thought I would never figure it out. Basically, the point of this pre-work is to learn the structure and to just get practice. I am definitely more comfortable looking at the code now than I was when I first started. We have our get-together next Wednesday to just kind of get things kicked off before we start the class on the 22nd. I am really looking forward to getting started with this class, I think this is my chance to really be good at something!","['The Iron Yard', 'Codingbootcamp', 'Coding', 'Html5']",https://medium.com/@jasonmgrigg/html-329d0d05b7d0,0,['The Iron Yard'],1,0,jason,M,0.004847072024143468,0.9951529279758565
Brennan Blair,,Ruby Gems Basics – Brennan Blair – Medium,2018-10-02 01:21:48,medium,"Ruby Gems Basics What is a Ruby Gem? Similar to a majority of programming languages, Ruby has a vast and wide-ranging number of libraries that can benefit developers on a day to day basis. Rubyists love to use puns so we uniquely refer to these libraries to as Gems. These gems each contain specific pieces of functionality and individual methods that can be called. Examples of functionality can range from processing payments to restricting user access to testing code for errors. They often work together to become powerful tools while building a program or application. Often you will see gem requirements for some programs well into double digits. On the whole, gem authors and maintainers make our lives much easier by building these libraries that provide more functionality while eliminating the need to type complicated lines of code from scratch. Where do gems come from? While most gems are considered third-party libraries and anyone can host their own private gem server, Ruby has a huge open source gem community. Ruby Gems. org is the most popular gem hosting service. It was started in 2009 as Gemcutter and has been maintained by partnerships throughout the Ruby community and through the contributions of nearly 300 Rubyists. Currently Ruby Gems. org is hosting 146, 000+ gems and has tallied over 26 million gem downloads. Anyone who wants to create a gem to help the community or to solve a unique issue is welcome to do so. On Ruby Gems. org there are straightforward instructions and a pattern guide to assist in the process. Once a gem is complete, it can be pushed up to the Ruby Gems hosting service directly from the command line and is usually available in under a minute. Some developers also prefer using bundler (a popular gem itself) to create their own gems. Where can I find new gems? Trying to determine what gems to use as a new developer can be a daunting task. Outside of poring over Stack Overflow posts, there are several options for research. The most obvious source of information is Ruby Gems. org. The site has charts of the most downloaded gems where you will see highly common gems like rspec, bundler and rake. Each gem has its own page with relevant documentation and a link to its github repository. There is a search bar but few advanced search options for filtering. As a result, finding a more specific use gem can be difficult at times. For further filtering, Ruby- Toolbox is another great option. It allows you to browse over 100 different categories of gems and displays popularity ratings gleaned from Ruby Gems. Other information provided on Ruby- Toolbox includes release info and how active contributors/authors have been fixing issues with the gem. Lastly, if you are truly glued to terminal you can search by using ‘gem search’ and regular expression characters similar to below. Technically speaking, what makes up a gem? There are six major components that make up a gem:1. R E A D M E — Like any good developer working with a new tool, we should refer to this important documentation first to understand what exactly a gem can do for us. This file often contains instructions and examples for how to implement the gem without breaking any of our code. When a gem is installed from the command line, it automatically creates documentation for you to refer back to (or a quick Google search usually does the trick). 2. lib — A directory which contains all of the under-the-hood Ruby code that makes the gem function3. spec/test — A directory which holds any associated testing files4. Executable — Each gem has a bin directory that loads a run file into the user’s P A T H upon installation. By putting this file in the user’s P A T H directory, it allows the computer to know where to search when the gem is called to run from the command line. 5. gemspec — A file that holds all of the important details about a gem like version numbers, compatible platforms, test information, other gem dependencies and the author’s contact information. 6. Rakefile — Although it is not a hard requirement, most gems contain this file. It allows us to automate tasks and write commands to be performed by the shell/command line. E X A M P L E S O F H E L P F U L G E M S Ruby Money — 15, 172, 327 downloads Under the Ruby Money umbrella there are several gems that work together to provide functionality for dealing with all types of currencies. The Ruby Money- Money gem focuses on currency conversion and handling formatting that is specific to money. It provides developers with a new Ruby class called ‘ Money’ which allows us to encapsulate currency details, pass monetary values as integers without having rounding issues, and it provides A P Is for converting money between different international currencies. As a result, this can be a very useful group of gems for e-commerce sites that serve global customers. Active Merchant — 5, 634, 894 downloads Active Merchant comes from e-commerce site Shopify and is a common gem used to deal with simple financial transactions. It centralizes hundreds of payment gateways, like Paypal, Stripe, and Barclays, to process user credit card payments within Ruby applications. Carrier Wave — 18, 954, 134 downloads The main function of the Carrier Wave gem is to enable file uploads by users on a given application. Specifically, Carrier Wave is great with photos and can be used to validate and resize photos upon upload. It is a crucial gem if you plan on creating a photo sharing platform. Devise — 39, 960, 930 downloads & Omniauth — 24, 226, 500 downloads Devise is a gem solution comprised of ten separate modules making it a powerful tool for Rubyists. Its functionality revolves around user permissions and access controls. Some of the main functions of Devise include:- Hashes and stores passwords to authenticate with a database and validate the user’s sign in attempts- Validates user info and sends confirmation emails when a user initially registers for the application- Allows the user to reset their password and can send password reset. instructions- Helps user register and/or delete their account- Tracks sign in details for each account- Can timeout sessions that have been logged in past an adjustable length of time- Locks an account after a set number of failed sign-ins Combined with the popular Omni Auth gem, Devise can also sign in/validate users by using their login information from an array of other popular sites (i. e. Amazon, Facebook, Twitter, Instagram, etc. ). Rubo Cop — 40, 164, 128 downloads & Ruby Critic — 1, 110, 989 downloads These two gems both fall under the category of static code analyzers. Purely by running Rubocop from a chosen directory it will check all Ruby source files in that directory and compare the code to the community guidelines in the Ruby Style Guide. You can choose to have it auto-correct these errors or print a report to the console. It is very flexible and can be configured to do as much or as little as you prefer. Similarly, Ruby Critic is a gem that can wrap around other static analysis gems like Reek or Flay, to find code smells and put out a more detailed and easier to read report. Capybara — 46, 704, 868 downloads Especially when bundled with R Spec or Cucumber (two of the most popular testing framework gems), Capybara is a time saving tool to automate user input and test application functionality. Capybara can simulate a whole host of user interactions within a given webpage such as data entry, checkboxes, drop down menus, form completion and clickthroughs. In sum, this is only a brief look at the power of Ruby Gems. There is a massive collection of gems online specifically created to help developers save time and be more efficient. Sources:https://github. com/rubygems/rubygems. orghttps://rubygems. org/https://www. ruby-lang. org/en/libraries/https://www. ruby-toolbox. com/https://teamtreehouse. com/library/what-are-ruby-gemshttps://rubygarage. org/blog/best-ruby-gems-we-usehttps://github. com/ Rubymoney/moneyhttps://github. com/activemerchant/active_merchanthttps://github. com/carrierwaveuploader/carrierwavehttps://github. com/omniauth/omniauthhttps://github. com/plataformatec/devisehttps://github. com/rubocop-hq/rubocophttps://docs. rubocop. org/en/latest/basic_usage/https://github. com/whitesmith/rubycritichttps://github. com/teamcapybara/capybara","['Ruby', 'Programming', 'Development', 'Coding', 'Codingbootcamp']",https://medium.com/@bblair_/ruby-gems-basics-9c3bb120c5a8,2,[],0,0,brennan,M,0.061499426085905876,0.9385005739140941
Jacob Acosta,,Another week in the books! – Jacob Acosta – Medium,2018-03-21 06:26:00,medium,"Another week in the books! The days seem to craw and the weeks fly by now. The information barrage continues and I’m trying to absorb as much as I can every day. They tell us at the outset that the program can seem daunting once you realize how little you know compared to the vast world of programming out there, and I for one am really feeling it. The trick here is to not feel bad about how much you don’t know. Persistence will pay off. Admittedly it is easier to tell others than feel it for myself. Each time we a new concept is introduced we have an intense 8–10 hours with it where we apply what we learn, do further research, and build/augment/deconstruct as needed to get a better grasp on it before moving on to another application to do the same. The introductions to everything come first, and then we start building larger-scale projects with our new toolkits and produce something cool and hopefully useful. In addition to all that we are reminded of the human element that persists — some friends in the cohort had me tag along to the rock climbing gym which I have missed, reminders to get out and enjoy the sunset from the balcony, and other shenanigans that go along with being next to the same people for 70 hours/week. I’m incredibly grateful for all of that this week. In addition to all the projects we have going on we have ‘tech talks’ that we do as well. My talk is tomorrow, and I will delight my audience with a 10-minute briefing on Universal Internet Access. A handful of people/companies decided to set out and expand access to those around the world that don’t have reliable internet access. My interest was piqued when I saw this article https://www. wired. com/story/maybe-nobody-wants-your-space-internet/ I read about Google’s attempts a few years ago when it was first made public (or at least when someone first wrote about it) and my interest interest in the topic remains even though I have not actively pursued updates until recently. It is fascinating that these lofty goals suggest the greatest possible good in this world is internet access. It is the panacea for potential ailments physical (healthcare access can improve!), social (everyone you want to see and hear from are seconds away!), financial (think of the home-grown potential untapped business opportunities!), etc. Early on in research for the talk I found articles and charts that bemoaned ‘only’ 2/3 of the world has internet access. Clearly the authors/designers are in the camp that believes everyone ought to have it. The title of the article reminds me that there are populations in the world that wouldn’t know what to do with it. I suppose it is interesting that the collective global push for universal internet access believes the good that comes with its presence will outweigh any harms that may come. Here’s a tidbit — One Web is lobbying to limit Space X’s growth here ( One Web is making 900 satellites and Space X plans for 7, 000):“ For their part, One Web and other competitors have filed their concerns with the F C C that Space X’s massive Starlink constellations will endanger other satellites in orbit. Space X has responded that its plan meets all safety standards and allows for adequate buffers of space between other satellites. ” https://www. cnet. com/news/spacex-falcon-9-internet-satellites-sunday-launch/ As far as I know the internet will the first thing create by humans we will impose on all other humans. Kinda weird, right? My talk will outline the way companies are going about it, and I wanted to get these thoughts on the subject down somewhere. Sorry to ramble! :)","['Space', 'Codingbootcamp']",https://medium.com/@acosta.jacob.d/another-week-in-the-books-59233845d92f,0,[],0,50,jacob,M,0.0024356479040408972,0.9975643520959591
Derick Castillo,,4 Tips on Tackling Javascript for the First Time! – Data Driven Investor – Medium,2018-09-09 14:42:54,medium,"4 Tips on Tackling Javascript for the First Time! Gotta love those lightbulb moments!!! I’m halfway through my coding bootcamp and I can’t believe how much Javascript I’ve learned in 2 weeks! Having never learned this language before, this was no easy task. I’ve learned more than just the language, I’ve learned how to struggle well, how to study in a way that works for me, how to deal with stress better, and how to keep learning even when I keep failing and it feels like I’m not progressing. 1. Getting Used to Being Uncomfortable What the heck, Javascript?!!! So much easier said than done! I remember being told early on that learning a new language is hard and that you have to get used to being uncomfortable. You’re going to make mistakes, misuse things, and get it wrong several times…but then you’ll start getting it right too. Progress will sometimes be a flat line, but then it might be up and down like a roller coaster. There were many times I hated being uncomfortable and became very frustrated, but I remember being told that the “uncomfortable” place is where you learn. It’s where you get stretched and challenged the most, and if you can stick with it, you’ll grow. So even though my functions were failing, I forgot semicolons, and I couldn’t understand how to properly append my elements, I stuck with it, eventually figured it out, and with enough repetition, it became second nature. 2. Embracing Study Groups…but Avoiding Them Too! I need you, but I don’t need you! At first I exclusively only wanted to study in groups. I wanted to be able to learn from others and have strength in numbers. But then I started to see that I also needed time to struggle with the material myself and figure it out on my own. In fact, I found that I needed more moments like that where I learn on my own. While a group setting can be helpful sometimes, there’s also the possibility that you won’t be able to struggle and learn it on your own because someone else already knew the answer, quickly went through it, then moved on. There’s also the possibility of the group moving too slow or too fast and it’s not always a perfect flow every time. To summarize, I personally lean towards more self study, utilizing study groups if I know the direction they’re going and believe that I would actually benefit from it. 3. How to Deal With Stress Better I’m a sucker for sunrises!!! There was so much information to take in and learn. So many small projects, labs, and it was overwhelming at times. Not to mention, getting used to messing up and trying to understand all the major concepts. I had moments where it was hard to sleep and moments where I just felt overwhelmed and stressed. I knew I had to manage my stress or I’d go crazy. R E S T and R E L A X A T I O N! That’s the best way I can answer this. I needed to get adequate rest and I needed to do whatever works for me in regards to relaxing. So for me it was exercise, listening to music, taking breaks with friends, and enjoying the sunrises I was fortunate to see every morning. I was able to relax and rest and that was very helpful to my self care. It might look different for someone else, but do whatever is necessary to relax and get rest…you’re gonna need it after all that coding!4. How to Get Better at It From Plank Club squats to this! Every time I asked others how I can get better at Javascript, they basically all said the same thing in different ways…just keep building stuff! Keep using it! I had several small projects to keep me busy and when I encountered something that didn’t make sense, I re-watched recorded lectures, looked at my notes, asked someone, or reviewed the online docs. When I had lectures or labs, I tried to code along so that I’d get used to the syntax and how it works. Ultimately, it’s the constant repetition of coding out small projects that helped solidify major J S concepts and led to my passing my major J S exam!","['Web Development', 'JavaScript', 'Javascript Tips', 'Codingbootcamp', 'Coding']",https://medium.com/datadriveninvestor/4-tips-on-tackling-javascript-for-the-first-time-94a81bdc1e97,3,[],0,5,derick,M,0.002083667254367687,0.9979163327456323
Harriet Ryder,"Software engineer. Enthusiastic about the life-improving merits of yoga, good beer and JavaScript. Once I was a librarian.",7 tips for better bootcamp learning – northcoders – Medium,2017-07-20 14:38:58,medium,"7 tips for better bootcamp learning In the fast-paced environment of a coding bootcamp, it can feel like you’re barely keeping your head above water with the amount of content and concepts being thrown at you every day. Here are some of my top tips for making your learning more productive. 1. Get a Note-taking App Get yourself a good note-taking app, ideally one that’s designed for programmers. It needs to be lightweight and have the ability to create code snippets. This is so important. Trying to open up Microsoft Word and at the beginning of a lecture, and desperately trying to get the indentation right and stop autocorrect ruining your code is going to waste you so much time. I use Quiver, but Evernote and Bear are also popular choices. 2. Learn Markdown Markdown is a lightweight markup language often used for Readme documents and instructions. It’s simple to learn and is the best format to use if you want to make notes inside a code project. A little time spent studying a markdown cheatsheet will pay dividends. Make sure your text editor has a markdown previewer and you know how to use it, so that you can see either the raw or the formatted version of the file. Markdown also allows code snippets with correct syntax highlighting for different languages. 3. Use Github Gists Github gists allow you to save files, snippets or code examples in isolation. You can make them public or private. One great feature is that gists can be inserted into Medium articles, preserving code formatting, which looks really nice. But a more common use is to store snippets and examples of useful code, configuration files, etc. Having a selection of gists for anything you might quickly want to refer it is much easier than having to trawl through all your projects trying to remember which one had that example of error handling middleware you want to copy. 4. Sort Our Your File Organisation Adopt a sensible way of organising your work from the outset. A lot of students begin by organising code week by week, but I find this method gets harder to manage as the course continues and you forget what you did every week. If you work in sprints or mini-projects, using sprint names and core technologies in your directory names (e. g. redux-shopping-cart) can save you a lot of time spent trawling through code trying to find what you’re after. Use git commits and branches properly to keep track of code in different states, rather than ending up with copies of the same projects in lots of different stages of completion. This is exactly what git is for!5. Plan your reading It’s common to end up with bookmarks all over the place, 100 tabs open in 3 different browsers and Slack messages with useful links being lost behind days’ worth of conversation. Decide on a way to organise your reading — apps like Pocket or Instapaper allow you to save articles for reading later, and Wakelet allows you to organise collections of bookmarks, videos, files and images. If you find you save a lot of documentation pages in your bookmarks, you might find an app like Dash useful which is an A P I documentation browser and snippet viewer. 6. Make use of Snippets Snippets are pieces of reusable code that can be dropped into a file with just a couple of keystrokes. A code editor will allow you to define what snippets you want available, or you can use a program like Dash to manage your code snippets. For example, I write React components all the time so I defined some snippets in V S Code to save myself some work. All I have to do is begin typing comp-stateful, comp-stateless or comp-functional in my editor and I can choose to insert a React component template. Once the benefit of typing the same block of code out by hand multiple times begins to wane, create a snippet and free your time up to focus on what isn’t already second nature. Share snippets with your classmates and help everyone out!7. Write! The process of writing can help your mind organise all those nebulous, cacophonous thoughts into something coherent, which is a really valuable exercise. Trying to explain something you’ve learnt helps you clarify the core concepts, and quickly identify areas that you haven’t fully understood. I would encourage you to blog about your learning journey, perhaps setting a goal of writing once a week. Reflect on what you’ve learnt, acknowledge what was difficult and identify what you want to work harder on in the coming weeks. The process of being conscious and reflective in the learning process — called metacognition — is a widely recognised technique for helping students learn more successfully. In addition, having posts to look back on in the future can help you remember how far you’ve come at times when you’re feeling low. If you want to start blogging, Medium is a great place to start! Do you have any other tips for effective learning? Have you been writing about your bootcamp experience? Let us know on twitter! Harriet is a tutor at Northcoders.","['Tech', 'Codingbootcamp', 'Learning', 'Learning To Code', 'JavaScript']",https://medium.com/northcoders/7-tips-for-better-bootcamp-learning-1bd9136221d3,0,[],0,11,harriet,F,0.9986337563795673,0.0013662436204326814
Patricia Eunice Miraflores,,"Founders of twenty-million dollar start-up offer “study now, pay later” coding bootcamp to aspiring…",2018-03-05 15:37:31,medium,"Founders of twenty-million dollar start-up offer “study now, pay later” coding bootcamp to aspiring Filipino programmers Entrepreneurs Tomohisa Kato and Mary Shemuel Balaibo- Unida founded coding bootcamp Tuitt in 2016 with the mission of equipping passionate Filipinos with the necessary skills to jump-start their programming careers. Tuitt offers an intensive training course covering modern innovations in full-stack development and coding practices to increase employability. This is the second venture spearheaded by the business partners. In 2007, Kato and Balaibo- Unida pioneered Filipino-based online English learning with Rare Job Philippines. Their goal was to help ten million Japanese achieve fluency in English through tutorial services provided by home-based Filipinos. Kato, familiar with Filipino hospitality and their proficiency in the language, saw great potential in the idea. But since most Japanese were unaware of Filipinos’ English capabilities at that time, it took a while before the concept was warmly received. Now a billion-peso company, Rare Job was declared the №1 Online English Tutorial Service Provider by the Tokyo Stock Exchange in 2014. The idea of Tuitt developed from Rare Job’s difficulty in finding I T manpower for back-end support. As an employer, Balaibo- Unida realized that the local workforce falls short in meeting the needs of innovative ventures. In 2015, Rare Job sponsored its own program to hone promising Filipino individuals’ coding skills. The pilot bootcamp proved effective when its graduates scored full-time jobs and garnered positive feedback from their new employers. Rare Job is proof that untapped talent, once realized and refined, can lead to uncontested markets. The robust B P O industry in the Philippines provides the perfect landscape to test the waters. At worst, global demands would change drastically until the local workforce can no longer keep up. At best, it may just be the next hotspot for high value-added I T skills if efforts like Tuitt can overcome the skills gap and shorten the learning curve. Finding your niche through comprehensive full-stack training Angeli Lanuza graduated from a reputable university with a degree in Information Technology. She later realized that a strong base in I T does not ensure work readiness in this fast-paced environment. “ Although my school gave me a solid foundation in I T, I felt that I needed to learn more to be able to cope with the I T world, ” she recalled. Lanuza, now a web developer and lecturer at Tuitt, was part of the pilot batch of Rare Job bootcampers. She is convinced that low employability among fresh I T graduates is partly caused by a lack of specialization. “ I think one of the main problems of I T graduates is not knowing what specific track they will take because I T is such a broad field, ” she explained. “ Web development itself can branch out into front-end and back-end. Then front-end [development] can further branch out into U I design, Interaction design, Java Script, etc. Programming in, say, Java or Cobol is also a different world. ” Ironically, discovering one’s niche in programming requires a thorough navigation of the entire terrain. Indeed, acquiring expertise increases any professional’s market value. But when it comes to web development, gaining a foothold in all aspects is essential. This is because dynamic platforms and languages incessantly beget new skill demands, job types, and markets. To remain valuable, web developers must continuously upgrade their skill-sets. It is this capacity to learn and unlearn that enables good programmers to persist through changing times. Tuitt stresses the importance of well-rounded coding skills by offering intensive training in full-stack web development. Divided into six modules, Tuitt’s curriculum consists of guided learning in H T M L, C S S, Java Script, Git, P H P, J Query, My S Q L, and Laravel. Full-time bootcamps at Tuitt are three months long, with a comprehensive syllabus integrating fundamental skills, modern technologies, and best practices fit for the current industry standard. Even the most basic aspects of coding are taught using a modern approach. For instance, bootcampers are instructed to design responsive web pages such that they fit various sizes, matching not only desktop platforms but also modern devices such as smartphones and tablets. Part-time bootcamps are also available. Spanning a total of six months, classes scheduled under part-time are held at night, making it the ideal option for those who wish to work and train simultaneously. This is the perfect opportunity for Filipinos who can’t afford to risk their current employment while improving their employability. As a founding staff member, Lanuza is glad that she gets to experience a little bit of everything. “[ I’ve done] graphics design, social media marketing, blogging, web development, curriculum development, hardware troubleshooting, research, and admin tasks, ” she added. This comprehensive experience helped her realize where her strengths and weaknesses lie. “ I’m definitely more into the front-end development side of things — creating sketches, wireframes, visual design converting them to codes — than the back-end, ” she shared. As for her advice to aspiring Filipino programmers, Lanuza said, “ It’s okay not to understand things the first time. You are not alone. I realized you don’t have to know everything to be able to start something. We can always learn by doing. ” Study now, pay later This rings true for many career shifters like Tuitt alumnus Christian Geroy who worked in the call center industry before deciding to pursue web development. Geroy attended the pioneer batch of night classes at Tuitt and graduated with highest marks despite his minimal tech background. He holds a bachelor’s degree in Business Administration but if given the chance to do school all over again, Geroy admits he would have chosen to major in I T. “ Back then, I never really had a clear perception of what I wanted to do in life until I got my first job, ” he said. “ I easily find whatever it is that I’m doing boring when it’s not challenging. This is what I realized after working in two companies. ” Sensing a paradigm shift in the business landscape, Geroy started to take an interest in the I T industry. Upon identifying web development to be the next big trend, he was motivated to shift careers. However, the cost of forgoing stable employment made him hesitant to take the leap. After all, only a relative few have the boldness to relaunch one’s career in developing countries like the Philippines. “ One of my biggest worries then was the financial burden if ever I chose to enroll in a web development course. I’ve searched on the internet and found that it’s expensive. I am the breadwinner of my family and I am sending my sister to school, ” he explained. “ But, the study-now-pay-later scheme helped me pursue it anyway. I think it’s the best because I did not have to stress out for the training fee and I was able to focus on study[ing] first. ” Acquiring competence in full-stack development takes more than just earning a degree. It entails a gradual learning process induced by rigorous hands-on experience and consistent practice. Interruptions caused by financial concerns only defeat the purpose of bootcamps because they diminish this learning curve. Having managed home-based Filipino employees before, Kato and Balaibo- Unida possess an acute understanding of what holds back aspiring programmers in the Philippines from bridging the skills gap. Tuitt offers the study-now-pay-later option to alleviate this financial pressure. That way, even the most financially-challenged trainees can fully allot their time and energy to the learning process. “ The training was rigid and intensive, ” Geroy recalled. “ But it was enough to [make you] realize what you really want to pursue in web design or development. It’s enough to make you realize [whether or not] front-end, back-end or full-stack is for you. You’ll be surprised and proud of yourself towards the end of the training. ” Geroy is currently with a U S company and is likewise being trained for promotion. By easing the financial pressure, trainees are enabled to pursue and complete the course with distinction, which Geroy can attest to. And since Tuitt does not impose a training fee upfront, it relies solely on their graduates’ chances of getting hired, reflecting its advocacy of prioritizing its trainees’ best interests. Portfolio-building capstone projects Tuitt alumnus Kevin Chavez pursued I T as his first major in college. After five semesters, he was removed from the program due to failing grades. Chavez later graduated from a media-related course but became increasingly dissatisfied with his career. “ I felt like my acquired skills were not enough to land a job because there [was too much] competition in media and I felt [as if] I will not be able to reach my dreams if I continued to work in the same industry, ” he recalled. After quitting his first job, he took the risk of starting his own photobooth business which became a huge success. Two years later, Chavez found himself drawn to programming once again. “ It dawned on me that what I’m currently doing is not enough, and I felt [as if] I am part of something big and yet unknown, ” he explained. He later met a like-minded friend who planned to pursue a second bachelor’s degree in I T. He convinced him to do the same. But Chavez already held doubts at that time. “ I wasn’t so sure if I was ready mentally and emotionally because it would take another four years before I graduate, and that’s a long shot considering my age and the career pressure, ” he shared. A month before they were supposed to enroll, he discovered Tuitt and was immediately on board. Tuitt bootcampers in training must produce at least three fully functional capstone projects. This will enable them to showcase their technical skills and expertise to prospective employers. Generally, applicants armed with a working portfolio are far more likely to be hired than those without. Portfolio-building capstone projects are concrete outputs of the intensive training Tuitt graduates underwent, allowing potential employers to gauge their work readiness. This gives bootcampers like Chavez the edge that dispels the anxieties of re-entering the industry. “ It made us confident and competitive while applying for jobs in the I T industry, given our jam-packed curriculum from front-end to back-end web development, ” he remarked. Opportunities for everyone, everywhere Beneath their obvious differences, Tuitt and Rare Job share the same entrepreneurial D N A. Both uphold accessibility that transcends the rigid methods of employer-employee matching in the Philippines. In this vein, Rare Job produced high-performing English tutors out of college students, housewives, and everyone in between. Similarly, Tuitt vows to make competitively employable web developers out of passionate, hardworking Filipinos regardless of their I T background. By paving the way for career shifters and re-entering I T majors, Tuitt emulates Rare Job’s success in creating opportunities for everyone, everywhere. For a huge, talented workforce plagued with supply-demand mismatches, such efforts are invaluable. Attesting to this is recent Tuitt graduate Nico Salvador who worked in marketing for five years before deciding to explore web development. Armed with years of problem-solving experience, he sought to apply his learnings in the programming context. “ I wanted to explore programming as a path that would allow me to better exercise my love of solving problems creatively. Web development is basically a way for me to do that in an enormous scale, ” Salvador said. “ Bootcamps like Tuitt are a great way to bolster the I T workforce with those of us who are interested but didn’t come from formal study in computer science. ” When asked about the most valuable insight he gained from Tuitt, Salvador replied, “ Early on, I was impressed by the level of care placed by the community in making code readable by other people, not just making it perform the intended function. ” Writing readable code is considered best practice in web development because it makes revisions, updates, and debugging easier when the need arises. Fully functional code may still need further edits upon recommendation of software engineers or quality assurance, to name a few. Thus, it’s important for aspiring web developers to remember that writing code is only the first step in a multilevel, iterative process. Kato and Balaibo- Unida’s legacy exemplifies what becomes of an entrepreneurial mindset fueled by bigger-picture advocacies. Their empathic attunement to the needs of the Filipino workforce is a key ingredient to the success of their ventures. At the hands of these innovators, the future of web development in the Philippines is looking hopeful.","['Codingbootcamp', 'Philippines', 'Startup', 'Front End Development', 'Backend Development']",https://medium.com/@patriciaeunicemiraflores/founders-of-twenty-million-dollar-start-up-offer-study-now-pay-later-coding-bootcamp-to-aspiring-fef0903d23,12,[],0,8,patricia,F,0.996852828838794,0.0031471711612059464
Hack Reactor,,Hack Reactor & the Largest Coalition of Coding Programs Commit to Truth in Advertising,2017-03-01 17:05:05,medium,"Hack Reactor & the Largest Coalition of Coding Programs Commit to Truth in Advertising By Shawn Drost, Hack Reactor Cofounder and Chief Innovation Officer The Biggest Bootcamp Dilemma In 2016, Coding House, a coding bootcamp advertising numbers typical for the industry — 95% hiring rate at a $91, 000 average starting salary — was shut down by regulators for false advertising. Reporting after the event revealed that Coding House was essentially scamming their students. The story underscores a deeper problem in the coding bootcamp industry: there was no way for Coding House students to know ahead of time that the school’s claims were illegitimate. Transparency in Outcomes Reporting & Truth in Advertising The Wall Street Journal reports on the changes in bootcamp reporting transparency. Today, a coalition of leading coding bootcamps are joining forces to solve the industry’s most pressing issue: outcomes reporting (story covered by Wall Street Journal and Tech Crunch). Since the outset of coding bootcamps, student outcomes have often left more questions than answers. When a school advertises a 95% hiring rate and a $91, 000 average starting salary, how did they arrive at those numbers? Do they count students in part-time roles? How about the ones that aren’t responding to their post-graduation calls and emails? Does that salary figure count everyone or just the graduates who readily disclose salary information? Before today, students were essentially in the dark on these questions, and had a hard time knowing who or what to trust. Introducing C I R R That’s why we are joining forces with 14 other leading bootcamps (see below) on the Council on Integrity in Results Reporting ( C I R R). C I R R is the industry gold standard for educational outcomes reporting. All students who are interested in attending a bootcamp can 1) trust the data presented by C I R R-member schools, and 2) question graduation and job placement data of those programs who do not abide by C I R R’s standards and methodologies. Also joining this movement are Course Report, the leading media source focused on coding bootcamps, and Skills Fund, a lender that works extensively with coding bootcamp students. Every coding bootcamp in C I R R will use a unified outcomes methodology, allowing for apples-to-apples comparisons between schools. Instead of optimizing the image of the bootcamp, under C I R R our outcomes reporting will optimize for the interests of the student. Initial 2016 outcomes data will be reported in accordance with C I R R methodologies on March 29th. We are joining 14 other leading coding bootcamps to fix student outcomes reporting. The Key Difference with C I R R The key difference between C I R R and every other coding bootcamp’s reporting methods: no exceptions. If you enroll in a C I R R school, you count in their placement rate, regardless of graduation status or personal decisions. This means we can skip the fine print: under C I R R, placement rate is students who accept a full-time software engineering job within six months of graduating, divided by the number of graduates. The graduation rate is on the same report. This is simple, straightforward and telling. How is this different from other schools? C I R R drops all exclusions used by other bootcamps, some of which are understandable and some of which are clearly there to game the stats. How Does S S O M Compare to C I R R? Our previous outcomes methodology, the Standard Student Outcomes Methodology ( S S O M), is already aligned with C I R R’s basic framework. Where S S O M differed is an accounting for cases such as students who start businesses or have a medical or family emergency during the job search. We are now even stricter: C I R R makes the bold decision to standardize on zero exceptions for all enrolled students. Can You Trust Your School’s Claim of Student Success? Many coding bootcamps haven’t joined C I R R yet, but we hope to collaborate with them. Our goal is to end the opaque mix of reasonable and unreasonable exceptions, and work towards a future where applicants can trust the topline number. We hope you won’t stand for it any other way. Schools that are doing right by their students should not fear transparency. Under C I R R, the true stars of the industry will come out, and students won’t have to wonder if their claims are real. Sign the “ No Exceptions” Petition Please join our call for integrity and consistency in results reporting by reading and signing our Open Letter to Bootcamps, Alumni, and Prospective Students. The more noise we make as collective members of the coding bootcamp world, the more accountability and trust will be required from A L L coding bootcamps. Code on, Shawn Drost Hack Reactor Cofounder and Chief Innovation Officer","['Programming', 'Web Development', 'Coding Bootcamp', 'Learn Coding', 'Coding Program']",https://medium.com/@marketing.accounts/hack-reactor-the-largest-coalition-of-coding-programs-commit-to-truth-in-advertising-250cce1ebf72,1,"['Hack Reactor', 'Coding House']",2,1,hack,Unknown,Unknown,Unknown
William A. Mooney,Christ Centered Dev. || Developer || Blogger,8th Week — Vivixx: Withdrawment – William A. Mooney – Medium,2017-08-08 05:52:47,medium,"8th Week — Vivixx: Withdrawment An amazing resource I used for learning Ruby on Rails 5 After working on several project’s in Rails I’m starting to not feel totally lost but I still have more work before I’m competent working with Ruby on Rails. Class Log — Monday 7/31/2017: Worked on Twitter Clone. Ran into a Bug while trying to add a Modal to the top right Tweet button. Unsuccessful in resolving so far. Moved on to Instagram Clone. . did some initial work then the Head Instructor told us to drop everything and work on Air Bn B Clone Worked on Air Bn B Clone… Initial Commit Added Devise & Custom Columns Next?: Update Routes Omni Auth Facebook w Devise During the evening I decided I wanted to get a better understanding of Rail’s before moving forward with the Air Bn B Clone so I decided to study from The Rails Tutorial 4th Edition. Afternoon Log — Monday 7/31/2017: Studied & Followed Michael Hartl’s Rails Tutorial 4th Edition Chapter’s 1-2 Created Hello World Rails App from The Rails Tutorial ( Chapter 1 ) Created Toy App from The Rails Tutorial ( Chapter 2 ) Updated Github Repositories with Documentation Another great resource for learning Ruby on Rails Class Log — Tuesday 8/1/2017: More Documentation Updated on Github Started a new project from The Rails Guide 4th Edition ( Chapter 3 ) Added Gem files, updated Documentation, Setup Hello World, Heroku Deployed Read thru Rails: Novice to Ninja 3rd Edition ( Chapter’s 1–4 ) Afternoon Log — Tuesday 8/1/2017: Watched Three — Hour Long Video’s of learning to Proficiency vs Awareness I’m really doubting my foundational skills at this moment…. Class Log — Wednesday 8/2/2017: Studied & Followed Michael Hartl’s Rails Tutorial 4th Edition Thursday and Friday I did not attend class so that I could think thru some thing’s. I have come to the decision to drop from Vivixx Academies Coding Bootcamp… I have enjoyed my time with fellow classmates and the staff at Vivixx Academy were very passionate & encouraging but I don’t feel it is the right fit for me. I don’t intend to go into specific’s but my concern’s have been conveyed & I hope the program will benefit from it. I fully intend to continue in programming & web development and am looking into additional online resources ( Team Treehouse, Udacity, Launch School, Flat Iron’s Community Powered Course…to name a few) to further my learning. Christ Centered Dev. || Former Coding Bootcamp Student || Blogger","['Ruby on Rails', 'Codingbootcamp', 'Web Development', 'Programming', 'Coding']",https://medium.com/@williammooney/8th-week-vivixx-withdrawment-369326aa9efa,0,[],0,2,william,M,0.0038724765712618,0.9961275234287382
Joy Phua,"Bringing technical skills to Tel Aviv creatives, one bootcamp at a time.",Why Tel Aviv is the place to be for entrepreneurs – Le Wagon – Medium,2018-03-20 18:52:50,medium,"Why Tel Aviv is the place to be for entrepreneurs And why we decided to bring Le Wagon here. Tel Aviv boardwalk The American Dream is the belief that every U S citizen should have an equal opportunity to achieve success and prosperity through hard work, determination, and initiative. The Startup Nation Dream is the belief that every Israeli boy and girl can be the founder of Israel’s next billion-dollar startup. After all, it was a neighbour/ high school friend/ army mate/ brother of the neighbour of the ex-girlfriend who shares the same butcher as you who founded Waze, Wix and Mobileye. Azrieli Towers When I came to Israel 5 years ago, I thought I knew the trajectory of my career path. I would graduate from University and either join some humanitarian organisation or go on to join a big corporation, rise through the ranks and stay there till I retire, with a healthy and sizable retirement fund. Either way it would be a stable rice bowl that I would not have to worry about as long as I worked hard and hit all my K P Is. But living in Israel changed me. It made me dream. It made me believe I could jump into my first business (with Rabea) straight out of University and succeed. I joined the ranks of the young and fresh-faced Israeli youths who were truly convicted that their ideas can change the world. When Rabea and I were taking a much-needed breather from an intense year and a half of running our first company, he moved to Berlin and stumbled across Le Wagon. Le Wagon Paris Le Wagon is currently the highest rated coding bootcamp in the world with 27 offices operating in 27 cities all around the world. We are a product-driven bootcamp teaching Ruby, Ruby on Rails, Java Script, H T M L & C S S, A P Is, Github, Heroku (among other things). The program brings coding skill to creative entrepreneurs to make them able to build their own application, find a job in the tech industry (as junior developer or product manager) and collaborate efficiently with their future dev team. It’s also one of the best entry tech communities for life, with more than 2400+ talented alumni worldwide that keep sharing tips, resources, job & freelance opportunities and learning together after the 11-week bootcamp. Despite being a computer engineer by training, Rabea took the plunge. He called me at the end of Week 1 saying it was so easy. Lol. I didn’t hear from him for 9 weeks after. By the time Batch #111 ended, he was convinced that Tel Aviv needed Le Wagon and surprised it wasn’t here yet. It seemed a most logical and necessary pairing. It didn’t take him long to convince me. This is just one of the many reasons we decided to bring Le Wagon to Tel Aviv, and why if you are an aspiring programmer, you simply have do it here. I’ll try to keep it brief. Yalla. Silicon Wadi (that’s Valley in Arabic) Bahai Gardens in Haifa At approximately 1 startup per 1, 000 inhabitants, Tel Aviv alone is the most startup-dense city in Europe. Israel has the highest density of tech start-ups in the world, attracting more venture capital dollars per person than any country — 2. 5 times the U. S. , 30 times Europe, 80 times India, and 300 times China. Israel has more companies on the tech-oriented N A S D A Q than any country outside the U. S. , more than all of Europe, Japan, Korea, India, and China combined. Almost every major tech company — Intel, Microsoft, Google, Cisco, Motorola, Facebook and so on — has Israeli talent and technology playing a major role in keeping them on the cutting edge. ( Start- Up Nation: The Story of Israel’s Economic Miracle by Dan Senor and Saul Singer) Culture of entrepreneurship Negev Desert The great irony of this country that is only seventy years old and in a constant state of war since its founding, is that it has transformed the challenges it has faced into assets that form the bedrock of its culture of innovation. Adversity of all kinds, such as being under attack, small, isolated, with no natural resources, have forced Israelis to be resourceful, to do more with less, to innovate, and to be global from day one. This is how a modern metropolis (and Israel’s cyber capital Cyber Spark) came to be established in the middle of the Negev, a barren but magical desert that takes up over 50% of Israel’s land mass. The miracle of Startup Nation is best exemplified by how Israel has successfully made the Negev desert the world’s only desert which is reversing the global trend of desertification. True to the vision of David Ben- Gurion, she has made the desert bloom. How? Israelis don’t mind failing at all. They get back up, dust themselves off, and start all over again. And again. And again. It’s in their nature. In fact, their attitude to life is to live for today, because it could all end tomorrow. If things don’t go well, that’s life. Just start again. The need to be global from inception Tel Aviv beachfront You see, in a small country of only 8. 5 million of which 5% live in Tel Aviv, and of which half of that 5% are considered consumers and even fewer still to have access to capital, one thing is clear: you don’t launch your startup counting on any local measure of success. In the U. S. , many apps and services start out being available only within the country. In Israel, many startups launch outside the country by default. It is this mindset that has enabled Israeli social trading platform e Toro to scale massively, and after $73 million of funding become one of the defacto stocks, commodities, and currency trading platforms globally (it’s not even available yet in the U. S. ). It helps that Tel Aviv is such a diverse city. It embraces people from all walks of life, all countries, all backgrounds, and all religious (or non-religious) persuasions. Although divisions and disagreements are commonplace on the streets of Tel Aviv, the startup community embraces diversity. You can find talented people speaking almost every language in Israel — not the final reason Tel Aviv and Jerusalem are so successful despite their size. Chutzpah This also falls under Israel’s culture of entrepreneurship but I decided it deserves a category of its own. Chutzpah is hard to define. Something like supreme confidence. According to Yiddish scholar Leo Rosten, chutzpah is “gall, brazen nerve, effrontery, incredible ‘guts, ’ presumption, plus arrogance such as no other word and no other language can do justice to. ” Guy Kawasaki, who was Steve Jobs’ original marketing man, “described chutzpah as “calling up tech support to report a bug on pirated software. ” The time is now Israel’s hi-tech industry is hungry for quality engineers. The Israel Innovation Authority is kicking off a new N I S 10 million ($2. 8 million) incentive program to combat the acute shortage of quality engineers and computer programmers in the hi-tech workforce. As of April 2017, market demand for programmers exceeded those available by 2. 5 times. By the end of this decade, the industry will lack more than 10, 000 engineers. The goal is to create an alternative route (via coding bootcamps) to joining the high-tech workforce, focused on market needs. There is no better moment than now for the №1 coding bootcamp in the world to arrive on the sunny shores of Tel Aviv. If you’re joining our bootcamp from overseas, there will be a few challenges you’ll have to overcome but soon learn to embrace. Two of them are Israelis’ very direct communication style and their passion to be on call 24/7. Don’t get me wrong, they do a mean happy hour, but right after that don’t be surprised to find them back on their work emails arguing with a client. You’ll come to toughen your skin. You’ll come to love this people who can be so hard to work with. Old City of Jaffa Well, it’s time for Shishi ( Friday) drinks with my friends in the Old City of Jaffa (whaaat yes, amidst all this hi-tech talk Israel is still a charming country of tradition and religion and arguably the most significant place in history. Take Jerusalem — a city that has been destroyed and rebuilt (at least) two times, attacked 52 times, and besieged 23 times. Jerusalem is a reminder of our human condition — the divisions, wars, and differences that perpetually pull us apart, even when we want to come together. Jerusalem is a reminder that life is non-stop invention, endless innovation. ), yalla bye. Sunset over Jerusalem Applications are now open for our inaugural batch beginning April 22! Don’t miss this unique opportunity. Register now. P. S. If you’re an Israeli reading this: Achi/ achoti, don’t waste your life. Statistics show that hi-tech wages are 2. 5 times higher than the average Israeli salary. If you ever wondered how you can have a chance of living the dream of Startup Nation, this is the moment. Le Wagon Tel Aviv is your chance. We promise you that by the time you finish our 11-week bootcamp, you’ll be ready for the hi-tech workforce. You’ll be able to create any product you want or easily learn any new coding language you desire. Lehitraot.","['Israel', 'Tel Aviv', 'Codingbootcamp', 'Startup', 'Full Stack']",https://medium.com/le-wagon/why-tel-aviv-is-the-place-to-be-for-entrepreneurs-d0c1f471d15c,3,[],0,118,joy,F,0.9818062301427893,0.01819376985721068
E,,Cali homie in NYC – E – Medium,2018-10-01 02:12:24,medium,"Cali homie in N Y C So, I joined a coding bootcamp in N Y C Hello world! So I recently took a jump and joined an immersive coding bootcamp. Why would I pay thousands of dollars to put myself under an intense amount of pressure with 15 other shenanigans? Well, I began seriously considering bootcamps when I was advised in my performance reviews to learn new technologies and languages (e. g. become more technical) if I wanted to progress my career as an agile product owner. I had also picked up a habit of reading tech news every morning (the Daily Hustle) and read some product management books (note: I recommend Gayle Laakmann). The more I read, the more I began to envision where the next 5, 10, etc. years were going, and the more clearly I saw my weaknesses and gaps. Technical skills and an understanding of current technologies are critical for success in this digital age. I realized that experience on the other side of the table was the best way to understand, and coding bootcamps were a perfect solution for my needs. Tips for applicants and new admits: So in order to get in, you do need to pass a technical interview, where you complete challenges in a code editor while explaining your reasoning. I recommend attending bootcamp meetups to get a good feel for what you’ll be getting yourself into. Many bootcamps have similar free prep courses that introduce you to coding! Codesmith’s C S X was a really great resource for preparing for their interviews. I also used Flatiron’s prep course, which was really fun. As a basic introduction I read Jon Duckett’s Java Script book (which you can probably find via your local library’s overdrive). Technical communication is huge in interviews. C S X actually had excellent videos that demonstrate exactly how to talk through (e. g. psuedocode) and then code out a challenge. I was fortunate enough to have a friend to practice pair programming with in preparation for my interviews— because honestly having to solve challenges on your own is one thing, but talking it out in front of a stranger is another! Once you’re in, you have to do homework ^^. It was actually really fun to do, and if you have time, I recommend practicing solving challenges on Codewars. I would also look through your bootcamp calendar and watch intro videos or read articles to get familiar with the topics you’ll cover. ( Unfortunately, I was personally on a huge time crunch, so I didn’t get to do any of these things!) Personal impressions of N Y C: So I’ve been mostly in Los Angeles since I was 3 years old, and honestly my first impression was: New York is chilly! It was much colder than I thought it would be for late September. I flew in over the weekend and pulled out my warmest jacket on Day 1 of class… but actually toward the end of the week, it warmed up and the weather has been super nice, perfect even! It rains a lot, and the weather is super fickle! I could always count on the weekly weather forecast in L A (haha where it rains like 5 days a year) but you really need to check the forecast on a daily basis here, because you never know when a rain cloud will appear! And apparently you can’t carry around a paper bag in the rain, because the bottom will give way. :’( Things are crazy convenient. I can’t wrap my head around how quickly you can get lunch or shopping done. In L A, I usually needed to drive 15–20 minutes to pick up lunch and then head back. I totally dig it, and this is probably the best thing about N Y C so far— I could even shop and explore the city a bit during my 1 hour break. While N Y suburbs aren’t too far from what I’m used to, the architecture is different. In the city, because everything is built upwards, it can be hard to find a breath of fresh air. The classroom can feel like an airplane cabin at times. Maybe I’ll try the rooftop next time. People’s styles are pretty different here (hipster in a different way than West L A). Many couples walk hand in hand on the streets. The mix is super eclectic, and I don’t feel short anymore, but there are also absurdly tall people on every corner as well! It is very interesting, and I can’t explain it. Jaywalking on steroids. I think jaywalking is the first thing I learned to do here. It’s next level stuff. Yikes, I’m out of time! Next time I’ll blog about Codesmith week 1 and week 2 combined.","['Programming', 'Codingbootcamp', 'Codesmith', 'NYC']",https://medium.com/@eternally/cali-girl-in-nyc-40c01bcbc86,0,['Codesmith'],1,3,e,Unknown,Unknown,Unknown
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,A Swift Transition – L.J. Yockey – Medium,2017-08-05 23:28:07,medium,"A Swift Transition I thought that life would be easier once I quit my job and got an extra 40 hours a week to get stuff done. I was wrong. I had grown so accustomed to juggling work and Thinkful that I could do it in my sleep. This week consisted of packing, finishing up the rest of the Thinkful curriculum, doing coding practice challenges, getting my resume together, meeting with career coaches, and applying for jobs. All the while, random people were coming over to my house to pick up various pieces of furniture I gave away for the move. Yeah, needless to say, this was one of the most hectic weeks I’d had in a long time. Amazingly, I’ve finished packing and most of my furniture is gone. The one thing that I haven’t been able to do as much as I wanted to do was coding challenges. I’ve worked on a few algorithms involving arrays and linked lists, but not as much as I’ve wanted. As with everything else I’ve learned since joining Thinkful, I’m sure I’ll get better at it with time. In less than 48 hours, I will be making the leap and moving back to California. I would have never gotten to this point if it wasn’t for Thinkful. As someone just entering the field, I am definitely experiencing a certain level of Imposter Syndrome. If I didn’t have the structure of a curriculum, I would have never felt “ready” to start applying for jobs, no matter how many personal projects I complete. Ready or not, here we go! This week may not have gone quite according to plan, but when do they ever? I made progress in applying for jobs and I know what I need to work on to get my coding interview skills up to speed. I won’t get much computer time between Monday and Wednesday this week, but once I’m settled in California, I’ll be ready to hit the ground running with a new routine. I can’t say this enough, but I owe a lot to my mentor, Rachel and my dear friend, Elias, who encouraged me to join Thinkful and has been super supportive. Thanks for reading!","['Learning To Code', 'Codingbootcamp', 'Web Development', 'Coding', 'Moving']",https://medium.com/@Ljyockey/a-swift-transition-e4b8c23334ee,1,[],0,7,l.j.,Unknown,Unknown,Unknown
Yasin Shuman,Blockchain Engineer with a passion for learning and sharing knowledge with others.,"Again and again, I am blown away by Austen and Lambda.",2018-08-02 19:51:24,medium,"Again and again, I am blown away by Austen and Lambda.","['Codingbootcamp', 'Lambda', 'Software Engineering']",https://medium.com/@yasin0424/again-and-again-i-am-blown-away-by-austen-and-lambda-17ee9c06608a,0,[],0,0,yasin,M,0.0027609055770292656,0.9972390944229708
Kapua Tong,island girl with big city dreams,failure – Kapua Tong – Medium,2018-05-17 19:27:45,medium,"failure Welp today I have all the feels. I woke up early to go through an assessment I had scheduled for 6:30am. An assessment where I need 7 points out of 10 to pass. This girl right here got 6. 6. Meh. I only needed 0. 4 more points to pass. Do you see how frustrating this is? You know what is more annoying? I got tripped up on the easy stuff. The most basic of basic. But I did great in the harder things. I want to be positive about this, I really do. B U T 0. 4 P O I N T S! Really? You couldn’t answer one more question right? J U S T O N E would’ve made all the difference. I knew every question that came my way. I just didn’t take the time to to process what was being asked. I was so nervous I wasn’t going to have time, I was rushing through the “easy” stuff to get to the “goods”. And now I just hate myself. I feel like a failure. Even though I did “okay”. It wasn’t good enough. Not good enough. How many times have we heard that in our lives? Too many. And where do we hear it the most? From ourselves. Our inner thoughts speak to us the absolute most. As much as you may talk to so many people in one day, you are the only one in your head. All day, all night, every day. See I can deal with my code failing. I can debug and move forward (most times). But how do I deal with not passing a test I thought I prepared for? How do I debug this? I guess I just have to look back at what went well and what didn’t. U G H. Analyzing myself is such an uncomfortable feeling. Like can I just be great already? And never be wrong. Ha. Okay, that was a stretch. Speaking of uncomfortable, meeting with a stranger over a lovely Google Hangouts video call was not my favorite. I am great with people, like really great. I make new friends all the time. But when some strange new face is staring at you watching your every move, you get a little nervous. I honestly don’t even know where my train of thought was going with that last part. I’m just so angry and sad that things didn’t go the way I wanted them to. I can’t think straight. It literally slipped through my fingers. Like I held it in my hands and it just turned into sand and dropped to the ground. Now this means I can’t start on the next section of my program until I take this assessment again and pass. What if I never pass? What if they don’t let me go on? I’ll just be stuck here forever knowing I was inadequate for the part. All my dreams are crushed. Ok not all. But I have zero optimism, at the moment. Longer in the program means longer that I’m not in the career I want. Also more money. I don’t like spending money. I think I am done for now. Can’t feel sorry for myself forever. Just need to study and do better the next time. I was just so sure I was going to pass the first time around. I’m shattered right now. I’ll be back with a more positive attitude. Hopefully. Just keep swimming my friends. Aloha. Kapua","['Life', 'Failure', 'Learning To Code', 'Codingbootcamp', 'Testing']",https://medium.com/@kapua.tong/failure-45599f1d250b,0,[],0,0,kapua,Unknown,Unknown,Unknown
Mauro Gestoso,Carbon based life form. Angry cyclist. JavaScript nerd and jokes debugger @Northcoders.,Avoid Losing Your Sanity Working with Dates in JavaScript,2017-11-02 14:28:04,medium,"Avoid Losing Your Sanity Working with Dates in Java Script One of the most common and feared tasks in programming is working with dates and time. The way dates are normally stored in databases or provided by 3rd party A P Is is very different from the way you’d like to display them to your users. Moreover, if you have to make calculations such as scheduling dates in the future (e. g. send this email two weeks from now) or displaying relative time (e. g. this happened 2 minutes ago) things start to get tricky. And let’s get it out of the way early: to say that Java Script’s Date A P I is quirky is to be kind with it. That’s where Moment. js comes in to the rescue! You can bring in Moment. js into your project depending on where you are running your code: If you are running your code with Node. js, you can install it with N P M by running npm install --save moment and then requiring it into your file like so: const moment = require('moment'); (see docs for the moment N P M package) If you are running your code with a web browser, you can download the Moment. js library from their website and include it in your H T M L document with a script tag like so: <script src=""path/to/moment. js></script>. Let’s go over some examples of the most common operations I generally use Moment. js for: Parsing and Formatting Let’s say that you are given a bunch of objects with timestamps in a non-standard format, something like “29–03–1989”. Let’s also say that we want to display this in a more user friendly format, something like “day of the week, but just the first three letters, then the month, then the date with its corresponding ordinal, a comma and the year”. Moment. js allows us to parse and format dates on the fly by using format strings: Those weird strings with all the Ds, Ms and Ys are format strings and once you get used to the syntax, they allow you to go from any format to any other format with the change of a simple string argument. Extremely useful if you have an indecisive client! You can find more about parsing and format dates on this page of the Moment. js documentation. Manipulating Dates Any application that needs some sort of scheduling could greatly benefit from the date manipulation methods Moment. js offers: We can add or subtract any unit of time We can calculate dates to the start or end of any unit of time We can even offset dates according to U T C/ G M T (e. g. Japan is on G M T+9)","['JavaScript', 'Learning To Code', 'Coding', 'Codingbootcamp']",https://medium.com/northcoders/avoid-losing-your-sanity-working-with-dates-in-javascript-36f3c9a77be4,0,[],0,43,mauro,M,0.0,1.0
Charlie Coggans,,Our brand new podcast… – Mayden Academy – Medium,2017-08-10 13:30:19,medium,"Our brand new podcast… So we’ve started a podcast! With the next cohort of students soon to begin training, Mike and I have been having lots of conversations about all things academy. We quickly came to realise that lots of the information we were chatting about could be useful to people learning to code and to potential new students. So we decided to do it in front of a microphone. So here it is — Our ‘ Mayden’ voyage into the world of podcasting! We love feedback so let us know what you think and what topics you want to hear about in the future.","['Podcast', 'Learning To Code', 'Development', 'Software Development', 'Codingbootcamp']",https://medium.com/mayden-academy/our-brand-new-podcast-2f57a66c91e3,0,[],0,2,charlie,M,0.12067729187930178,0.8793227081206982
adam tropp,,CS 100.6: Basic Binary – adam tropp – Medium,2018-05-16 21:42:23,medium,"C S 100. 6: Basic Binary Today, I will introduce the concept of the binary numeral system on which computers rely. Please note that this is a V E R Y basic introduction to binary numbers, their purpose and uses, and the operations that can be performed on/with them. Until very recently, I had almost no experience working with binary, and my knowledge is still a work in progress. Bit manipulations such as bit vectors etc. are complex topics, and as a junior engineer, you will need to have only a very surface-level understanding of bits and the like. That said, I encourage you to study further on the topics I introduce today, since understanding how computers work at the lowest level can only help you as a programmer. Okay, that aside, let’s get cracking. As a coder, you likely have some concept of what binary is, and that idea that everything a computer does is based on a series of 1’s and 0’s. You may be familiar with 32 and 64 bit operating systems, and you likely know that there are (generally) 8 bits in a byte, 1, 000, 000 bytes in a megabyte, and 1024 megabytes in a gigabyte. But why are these values what they are? Binary refers to the base2 numeral system. In our everyday lives, we deal with the base10 numeral system, wherein every number from negative infinity to infinity can be represented as a series of 10 digits (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), and, reading a number left to right, each place is a power of 10 (100’s place, 10’s place, 1’s place, etc. ). From this understanding, it is very easy to move to base2, wherein every integer can be represented as a series of 2 digits (0 &1), and reading left to right, every place (or bit) is a power of 2 (the 16’s bit, the 8’s bit, the 4’s bit, the 2’s bit, and the 1’s bit, assuming a 5-bit unsigned integer). Today, I will show all examples using only 8-bit unsigned integers, because 8 is sufficient for the purposes of demonstrating how basic bitwise operations work, and because using signed and negative integers complicates things immensely. That said, once you are comfortable with very basic binary, I encourage you to study up on the representations of signed and negative integers, and particularly the two’s-complement method of representing them, which is nearly ubiquitous in modern computers and programming languages. Okay, so on to representing 8-bit unsigned integers in binary. It’s really pretty simple, once you get the hang of the pattern. 1 is 00000001, i. e. , the 1’s bit turned “on” (1 always means on, 0 always means off), and all other bits turned off. 2 looks like 00000010 (the 2’s bit turned on, all other bits turned off). With this pattern, we can represent 27 as 00011011 and 135 as 10000111. Great. Also note that, from these examples, it is easy to see why, with n bits, we can represent a max unsigned integer of 2^n -1, in this case, 255 (128+64+32+16+8+4+2+1). Also note that, when dealing with unsigned positive integers, it is very easy to convert from binary to base10 and vice versa. The javascript implementation for both is below. This code becomes considerably more complicated with signs/when representing negatives. function convert Number To Bin(num) {   return Number(num). to String(2) } function convert Binary String To Number(bin) {   return parse Int(bin, 2) } Okay, now let’s tackle the basic bitwise operations. In any programming language, there are only a few different operations that can be performed at the bit level: | (or), & (and), ^ ( Xor), ~ (not), « (left shift), » (right shift), and »> (logical right shift). The first few behave almost the same way they do when used on regular data. | returns 1 (true) if any data passed to it is true. For example 0 | 1 returns 1, and 0 | 0 returns 0. & returns 1 (true) if all data passed to it is true. So 1 & 1 returns 1, 1 & 0 returns 0. Xor means exclusive or, and it works by figuring out if the bits passed to it are different. So, 1 ^ 1 returns 0, 0 ^ 0 returns 0, and 1 ^ 0 returns 1. ~ works like the bang operator, negating the value of a bit. ~1 is 0 and ~0 is 1. The shift operators are used for many bit manipulations, as we will see in a moment. « shifts a bit a to left a specified number of positions, and pads 0’s on the right to make up for the loss. So, 9 « 2 becomes 36 (left shifting 2 is equivalent to multiplying by 2, twice), like so 00001001 ~> Right shift shifts the bit right a specified number of positions, and bits shifted off the right end are discarded. So, 9 » 2 yields 2 (right shifting by 2 is equivalent to dividing by 2, twice, then rounding towards negative infinity), like so 00001001 ~> 00000010. Note that these are known as arithmetic shifts, meaning that the bits shifted off either end are discarded. There are also logical shifts, wherein the discarded bits are replaced with 0’s. This happens already in arithmetic left shift, leaving no need for a logical left shift, but there is a need for a logical right shift. This has no effect on positive numbers, so 9 «< 2 still yields 2, like so: 000010001 ~> 00000010. For signed negative ints this is not the case, but we will not go into detail on that at this time. Just note that »> is better for unsigned binary numbers. Okay, now let’s see what these operators allow us to do. Let’s say we have a binary input string, and we want to set a given bit to true. We can use the shift operators to create what is called a bit mask. The java Script implementation for this is below. function set Bit(x, position) {   let mask = 1 << position   return x | mask } The code works like this. Say x is a binary string like 0000110 (6), and you want to set the bit in position 5 to true. You would pass in a binary string equaling 5 as position (0000101), and since the mask shifts 1 to this position, it would look like 00100000. X or mask then does a bit by bit comparison, like so, 0000110 | 0010000resulting in 0010110 and successfully setting the bit in position 5. Clearing a bit that is set works similarly. function clear Bit(x, position) {   let mask = 1 << position 		return x & ~mask } The mask is created in the same way, with a 1 in the position you want to manipulate, and 0’s everywhere else. You then take ~mask, which has a 0 in the position you want to manipulate and 1’s everywhere else, and & it with x. Since 1 & 0 is 0, this clears the bit. Flipping a bit is even simpler, the java Script looks like this:function flip Bit(x, position) {   let mask = 1 << position 		return x ^ mask } Here, we set the bit in the position, then return 1 for all the bits that are different in mask and x, successfully flipping the bit at position x, regardless of its initial value. Beyond these basic manipulations, I will show you how to add binary strings. For positive unsigned ints, this is fairly simple, and works much like base10 addition. 00001100 (12) + 00100001 (33) = 00101101 (45) You simply add up each column. If they were both 1’s, you would put a 0 and carry the 1, just like base10. Okay, that is a fair introduction to binary and bits. Keep learning and practicing with them, they never go away. Today’s words of wisdom are of a slightly different vein, and they come to us from the legendary Hunter Thompson:“ Life should not be a journey to the grave with the intention of arriving safely in a pretty and well preserved body, but rather to skid in broadside in a cloud of smoke, thoroughly used up, totally worn out, and loudly proclaiming “ Wow! What a Ride!” Til next time!","['Programming', 'Computer Science', 'Codingbootcamp', 'Binary']",https://medium.com/@adt6261/cs-100-6-basic-binary-5031a6da0530,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Kevin Lai,,The Things I Learnt in ThoughtWorks Level Up Program (Other Than How to Code),2018-05-21 11:36:53,medium,"The Things I Learnt in Thought Works Level Up Program ( Other Than How to Code) After completing my software development course at Coder Academy, I was over the moon when I got accepted for the Level Up program provided by Thought Works. For those who did not know, it is a not-for-profit initiative run by industry professionals at Thought Works. I knew that was going to be awesome! And it turned out to be beyond awesome! The whole experience revolved around a lot of teamwork, T D D, pair programming, continuous delivery to agile project management. Some of the soft skills I had acquired along the way included working collaboratively with other team mates and the ability to be flexible and systematic when things don’t go as expected. The Aim: Our team worked on a project that would facilitate access to emergency services for the elderly living alone, and help health carers who visit them regularly at their home. It was a wonderful opportunity for me to develop my knowledge with Javascript and Jest. Our team also successfully built a working prototype from the code base that they provided. While some of the patterns had already been fixed, we managed to develop features on top of the existing codebase. Looking back, as someone who was still a beginner in Javascript, I achieved more than I could have imagined within such a short timeframe: taking in all of the framework, producing something that would very be influential and meaningful, as well as presenting in front of the mentors and other teams. The Process: I was blown away by what our team had built within 7 weeks at Thought Works. Each team was supported by one Product Owner and two to three Thought Works mentors. In our team, my mentor Katrina and my team mate Maddie had helped me climb up a steep learning curve as a Web Developer. Everyone in the team wanted you to get up to speed and contribute to the project fast. This gave me an insight into what it was like to work in a fast-paced environment like Thought Works. It did not matter if you did not know everything needed for this project because everyone had their own strengths and weaknesses, and we were all in this together! That said, it was also important for each of us as an individual to be proactive and not to hesitate to ask questions for clarification. The Challenges: However, it could get a bit challenging at the start as the Business Analyst and Experience Designer had to deliver a few User Stories based on the acceptance criteria within such a short timeframe. So we discussed how to produce a better experience for our targeted users. We were encouraged to experiment with a few new ideas. Apart from working on my technical skills, I also had to reconcile with the new way of doing things. I learnt to enjoy the idea of making the M V P up and running. The Takeaways: How do we know if our product achieves the definition of success? The short answer is that we don’t! The product we were building did not have to be perfect to be deployed. Let’s just say, it is impossible to describe exactly what our final product would look like. One of the biggest takeaway is that we should constantly adjust our product by gathering feedback from our Product Owner and implementing the changes without compromising the long term benefit. Final Thoughts: I would encourage anyone who is interested in getting practical experience, whether it is Web Development, Business Analysis or User Experience, give it a go and attend the Thought Works Level Up Program, and I guarantee you this will be a truly rewarding experience to tackle interesting problems and learn new skills! Funny story, we were required to take a photo with a bride in the first day, May suggested that we should take a photo in front of Bridge Street. So we used our hands to hide the letter ‘g’ and the word ‘street’ . Thoughts? Please leave a comment! Want to hear more from me? Follow me on Twitter.","['Agile', 'Web Development', 'JavaScript', 'Thoughtworks', 'Codingbootcamp']",https://medium.com/@kevinkmlai/the-things-i-learnt-in-thoughtworks-level-up-program-other-than-how-to-code-7b8598d53f08,0,[],0,151,kevin,M,0.0045407502903025716,0.9954592497096975
Ryan David Workman,"Lead engineer at Airbo. Turing School of Software and Design alumnus. Lover of food, beer, bash. :(){ :|:& };:",Getting the Most Out of a Coding School – Ryan David Workman – Medium,2017-02-01 23:33:48,medium,"Getting the Most Out of a Coding School Turing School of Software and Design If you’ve read any of my previous posts, you probably know that I am a recent graduate of the Turing School of Software and Design. After five years working as news producer for stations across the country, I decided to turn all of my energy into pursuing my passion of technology and problem solving. I enrolled in Turing without really knowing what I was getting into. Granted, I did my research, sat down with staff members and knew that I wanted to learn how to code, but that didn’t fully prepare me for the exciting journey that lay ahead of me. Coding schools, also known as “coding bootcamps, ” are all about shoveling as much information into your brain to get you ready for an entry-level job in the tech field. While the schools are a form of adult-education, they operate completely different than any formal education I have ever received. The speed and intensity of what you learn is at a whole other level, and unless you are wholly committed to growing and learning, success will be near impossible to achieve. Before diving into some of the techniques I picked up to succeed, let me quickly lay out some of my education history to give you a basis. I was never a “straight- A student. ” While I always enjoyed school and had a passion for learning, the standard education system did not work well with my personality. I worked my way through high-school as a pretty average student and proceeded to take five years of college to get my journalism degree. It wasn’t until I hit my mid-twenties that I gained a real hunger for growth and knowledge, and thankfully, Turing’s teaching style and curriculum provided exactly what I was looking for. My point being, you don’t have to be a “smart” or “straight- A” student to succeed at a place like Turing, you just need to want it… Which leads me perfectly until some of my acquired techniques. Remember Your Passion — All of us have different reasons for making a career change and dumping tens-of-thousands of dollars into learning a new skill. Some of us have families to support, while others just simply want a career that has more sense of meaning and contribution. My reasoning is more of the latter. Producing news was great, I just didn’t have the passion that others did in my position and wanted to feel like I was making more of an impact on the community. The first few weeks after starting Turing, it was easy to spend 18 hours a day reading, coding and just consuming knowledge. I just recently quit my job, the whole experience was brand new and my brain couldn’t get enough of it. As months go by, however, it’s easy to fall into the trap of “routine. ” I noticed more and more students complain about the amount of work they were given and the amount of time they were spending at school. While I understood and empathized with their gripes, I had to step-back and remind myself the feeling I had weeks before starting and the overall goal of attending school. One of the main reasons I started this path is because I wanted more work and to learn, with that comes the tireless hours of studying and working through exercises. Write Code — Okay… I know what you’re thinking… “ Duh, I’m at a coding school, of course I have to write code. ” And yeah, you’re right, but that doesn’t make it any less of an important technique to succeeding at a coding school. I think this point goes pretty much hand-in-hand with “remember your passion, ” but while it’s easy to fly through hundreds of lines of code during the first month-or-so, more complex concepts and projects will quickly slow you down. What used to feel relatively easy, will become difficult and your pace will change significantly. At this point, I would find myself staring at a screen and getting frustrated that I’m not knocking out programs at the rate that I was initially. Do not let this feeling stop you from writing. If you hit a block while working on a project than find drills to work on or, better yet, head over to Exercism and bust out one or two of its tasks. Not only does this keep you fresh on the basics, it also helps your brain step back from your one problem and work on something else. After getting a break from your prior project, you can head back and have a completely different perspective, possibly helping you get past that blocker. So… you kept writing code and now have this completed drill on your computer, what should you do with it? Delete Your Code — This one’s weird, I know. This is one of Jeff Casimir’s, the founder of Turing School of Software and Design, favorite philosophies. When he first told us he wanted us to delete our code on a regular basis, I thought he was nuts. I’m there to learn how to write code, I wanted to keep all of it that I wrote. It wasn’t until I was reaching the middle of the program that I realized the genius in his logic. You’re never dumber and less skilled than you are today, and tomorrow you’ll look back at what you wrote and think there are at least ten other better ways to write this… so, go ahead and delete that crap and re-write it. Coding is no different than learning any other skill, it takes practice, time and dedication… did I mention practice… Check Your Ego At The Door — We finally hit the one skill that I struggled with a lot. Everyone who enrolled in the school is there to learn, and despite what others say or what you think, all of us are new and none of us know what we’re doing. As you progress through the program, you will learn a lot and, if you’re anything like me, you’ll think you “figured it all out. ” I can tell you, no one on this planet has figured it all out, that includes students who have only been coding for a few months. Keeping your ego in check will allow you to accept that there is more to learn, opening you up to asking more questions and learning from other students and instructors. I can’t emphasize this enough, in order to get the most out of your experience and education, you have to learn from others and know that you are far from being an expert. Enjoy It — One final point I want to make is enjoy every second of it. Yes, it will be difficult at times and you may shed some tears, but learning is one of the greatest things anyone can do for themselves and every tear is worth it. Despite all of sleepless nights and stress induced by some of the bugs I have encountered, I have not once doubted my decision. Coding is tons of fun and can lead to great things for the world and your community. Love the learning experience and you’ll go far. I enrolled in Turing back in June of 2016 and graduated a little less than a month ago. I can tell you, going to Turing was one of the best decisions I ever made. If you are like me and decide to take the plunge and change careers, commit whole-heartedly and you will not be disappointed.","['Programming', 'Coding', 'Learning', 'Coding Bootcamps']",https://medium.com/@rdavid1099/getting-the-most-out-of-a-coding-school-bd1a9a130188,9,['Turing School'],1,0,ryan,M,0.024172097739259983,0.97582790226074
Anthony Delgado,"I’ve been a developer for over a decade. From transforming start-ups into multi-million dollar organizations, to helping nonprofits solve problems with software","Anthony Delgado Interview in San Juan, Puerto Rico – Anthony Delgado – Medium",2018-07-02 04:15:46,medium,"Anthony Delgado Interview in San Juan, Puerto Rico Puerto Rico is a blank slate ready to reinvent itself. Offering tax incentives for new businesses, a strong internet, and a young, passionate population, the island is looking to drop its tourism-centered economy and become a hub of the new digital world. Taking the opportunity to help is Disrupt, a media agency based in New York City that focuses on innovative products that change the world.","['Puerto Rico', 'Anthony Delgado', 'San Juan', 'Disrupt', 'Codingbootcamp']",https://medium.com/@anthonydelgado.me/anthony-delgado-interview-in-san-juan-puerto-rico-def006625636,0,[],0,0,anthony,M,0.004907680596533925,0.9950923194034661
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Alumni Spotlight: Cornell Grad Jennifer Wang – Hack Reactor – Medium,2018-09-13 14:11:01,medium,"Alumni Spotlight: Cornell Grad Jennifer Wang Jennifer Wang majored in Business at Cornell with a minor in Information Sciences. A fan of programming since high school, though, she was unaware programming was a major that she could go into. By the time her interest in programming outgrew her interest in her major, she was already half way through pursuing her 4-year degree:“ I found it really interesting and cool but by that point I was going to study abroad for junior year and I didn’t want to graduate late so I stayed a Business major. ” Upon graduating from Cornell, Jennifer looked towards getting into management consulting:“ Epic, which is a software developer for hospitals, recruited me as a tech support engineer. If they hadn’t come along, I would probably be doing consulting right now. It was a good opportunity to explore more of a technical side that I was formerly exposed to. ” As someone who grew up on the East Coast, Jennifer had never been to California before starting Hack Reactor. But taking Hack Reactor at its San Francisco campus was important to her:“ San Francisco has the strongest tech scene so I felt that was a great place to start. I’m glad I did so. Everyone in that location was talking about tech, and it made me feel like I was going to accomplish great things. ” But Jennifer underestimated how tiring it was going to be. To find out what happened once Jennifer started at Hack Reactor San Francisco, check out our original post. Interested in starting on the same path? It all began at Hack Reactor. Learn more about Hack Reactor’s full-time and part-time programs. We’re online in S F, Austin, N Y C, and L A. Originally published at www. hackreactor. com.","['Coding', 'Codingbootcamp', 'Hack Reactor', 'Alumni', 'Alumni Stories']",https://medium.com/@hackreactor/alumni-spotlight-cornell-grad-jennifer-wang-de2c2729aeef,5,['Hack Reactor'],1,1,hack,Unknown,Unknown,Unknown
Varinder Singh,Fullstack Web Developer,The Modern Python 3 Bootcamp with 200 exercises and quizzes,2018-05-26 18:51:31,medium,"The Modern Python 3 Bootcamp with 200 exercises and quizzes The Modern Python 3 Bootcamp course is the most modern and up to daye course on Python language. This is absolutely outstanding course created by the best Udemy instructor Colt Steele. He teaches this online course in very effective and simple way. This course covers :- Data types Lists Dictionaries Functions Classes Web Scrapping Crawling Regex And much more The most important thing about this course is you will learn it with 200 exercises and quizzes. The Modern Python 3 Bootcamp I highly recommend this course of Colt Steele as it has very good rating(4. 7 out of 5). More than 14, 000 students have been enrolled in this course already. It is 28. 5 hours course with 115 articles. It is full lifetime access course and after completing it, you will get certificate.","['Python', 'Coding', 'Codingbootcamp', 'Programming', 'Programming Languages']",https://medium.com/@compsci/the-modern-python-3-bootcamp-with-200-exercises-and-quizzes-68193e73a005,0,[],0,2,varinder,Unknown,Unknown,Unknown
Chloe Condon,Musical theatre actress turned developer evangelist.,Finding your “Gimmick” – NewCo Shift – Medium,2017-04-06 16:35:01,medium,"Finding your “ Gimmick”- How a Song From a Musical Helped Me With My Job Search A still from “ You Gotta Get a Gimmick” from the film version of Gypsy. Let me set the scene: it was Demo Night at Hackbright Academy in late 2016 and I was S O E X C I T E D. If you don’t know much about software engineering bootcamps, “ Demo Night” refers to the night where students present the projects they have been diligently working on for several weeks to prospective companies that are looking to hire junior engineers. The process varies by school, but our Demo Night consisted of 3 minute presentation from each student, and then 3 minute speed-dating style interviews with each company. It’s an exciting, yet stressful, night for all; for many students, it’s their first time interviewing as an engineer! Nerding out over my poster being in Union Square. As I looked around the room, it was apparent that many of my fellow classmates were terrified, but I was thrilled. As a former musical theatre performer, speaking in front of a crowd was second nature to me. I had been performing in front of an audience since age 4, so “stage fright” wasn’t something I had experienced in over 20 years. In fact, a year ago to the day, I was performing at the venue in which we were holding Demo Night. A large poster of me as Rosemary in “ How to Succeed in Business Without Really Trying” was on the side of the building for months at the Marines Memorial Theatre/ Hotel. It was a wonderful yet bizarre moment of happenstance where my old and new life were colliding. Instead of a 1960s secretary costume, I was wearing an “engineer” costume. I felt very much at home. This was a sort of a cartoon light-bulb moment for me where I figured out where my skill-set fit in the engineering world. I thought to myself “ I’m an engineer who loves to talk in front of a crowd… this is clearly not the norm”. I could hardly wait for Demo Night to begin, while many other women could hardly wait for Demo Night to be over. “ That’s my gimmick”, I thought to myself. If you’re not a musical theatre nerd, like myself. You’re probably not familiar with the wonderful musical “ Gypsy”. The T L D R version of plot is: ugly duckling child grows up being overshadowed by her much more talented sister/their stage mom forces them into vaudeville/ugly duckling ends up being a famous burlesque performer. It’s a true story based on the memoirs of Gypsy Rose Lee, and one of the best pieces of American musical theatre ever made (it also, has the most beautiful overture ever written, but I digress). Natalie Wood in the film version of Gypsy. So, what do a musical about burlesque and a software engineering bootcamp Demo Night have in common? Well, I’ll tell you! Me at Demo Night- sporting sparkle glasses. As I mentioned, Demo Night (and interviewing, in general) is stressful. Everyone is the room is vying for the same jobs, everyone has made an app, and everyone has completed the same bootcamp curriculum. The only real things that differentiate you are your app, your background, and maybe the sparkle glasses you decided to wear that night (see photo above). So, as I prepared what I would say while I was onstage introducing myself and my app, it became apparent that standing out and being memorable was important. In other words “ You Gotta Get a Gimmick”; which is not only a fantastic song from Gypsy, but also great words of advice for the job search. So, What’s a “ Gimmick”? As Tessie, Mazeppa, and Electra explain: a “gimmick” is what makes you special. In my case, it was that I was a musical theatre actress pre- Hackbright. For my other classmates it was a variety of things: a degree in Molecular Biology from U C L A, a former teacher, a previous life as an environmental engineer, etc. While presenting yourself and submitting your resume to companies- showcasing your gimmick is key. Recruiters and hiring managers see hundreds of resumes and cover letters- but if your gimmick stands out, it may be a great way to get your foot in the door. Ridiculous photo of me from “ Gypsy” at Broadway by the Bay. How Do I Leverage My Gimmick? During my three months of job searching as an engineer, I noticed a significant change in responses once I started showcasing my gimmick in my cover letters, Linked In, online presence, and resume. Instead of hiding my background as an actress, I decided to highlight it. Developer Evangelism was a role that I had great interest in. If you’re unfamiliar with the job title of “ Developer Evangelist” (also referred to as “ Developer Advocate”, “ Dev Rel”, etc. ), it is “a spokesperson, mediator, and translator between a company and both its technical staff and outside developers (thanks http://developer-evangelism. com/ for the great description!). In other words, it’s a much more front-facing engineering role that often involves speaking at conferences/meet-ups/events, writing blogs, working with documentation, and dealing directly with developers. It requires a unique blend of engineering knowledge, but also the ability to communicate effectively and have “stage presence” so-to-speak. As an experienced performer who had just graduated from a software engineering bootcamp, developer evangelism seemed like a pretty great fit for me. As I applied for these roles, I made sure to highlight my theatre background “gimmick” in my applications… and guess what? It worked! Turns out people want people with a good stage presence to represent their companies. I went from an empty inbox to getting a significant spike in responses almost overnight. Have Some Examples? Natalie Wood in “ Gypsy”. Of course I do! Here are a couple examples I have seen from other people using their gimmicks to their advantage: As a former admin or office manager, you likely used quite a bit of scheduling, sign-in, catering, and H R applications. Are any of these places hiring for a role you’d be suited for? Product knowledge in a niche space is extremely valuable at companies, and can be a great gimmick to help you get in the front door. Often times with products that have a very specific demographic of users (let’s say, an office catering app, for example), insight and background into the product itself can be a fantastic gimmick. Or, let’s say you’re applying for a drone company and you love drones. In fact, you fly them all them in your spare time. Why not mention that in your cover letter to that drone company you’re applying for? In fact, why not send them that video you have of you flying one in Corona Heights? It not only shows that you know the product/industry, but it makes for a memorable application. Natalie Wood’s gimmick is twirling, clearly. How Do I Find My Gimmick? It can sometimes be difficult figuring out your gimmick. The art of subtle humble bragging can be awkward, but the key is to own your awesomeness. If you don’t have a gimmick that immediately comes to mind, ask a friend! Or, if it’s too weird to ask your friend, brainstorm by writing down your hobbies, previous jobs, and passions; with a little bit of digging it’ll be easy to spot that thing that makes you stand out (hint: usually something that you think is boring or “not that cool” is probably really cool and interesting). Maybe that time you spent as a flower arranger can land you that front-end role at Bloom That, or your experience as a mother of 2 can get you an interview at Leap Frog. As the ladies in “ Gypsy” (and Stephen Sondheim’s brilliant lyrics) wisely say, “ You’re more than just a mimic, when you’ve got a gimmick”. Stand out from the pool of talent by showcasing your gimmick; I highly recommend it to help you get noticed! You finding your gimmick. The New Co Shift Management channel is brought to you by Work Market, the leading labor automation platform. Work Market empowers businesses and skilled professionals to unlock new levels of productivity, engagement and growth across the entire lifecycle of work. Learn more here.","['Resume', 'Coding Bootcamps', 'Job Search', 'Theatre', 'Management']",https://medium.com/newco/finding-your-gimmick-57c7e87aace1,5,['Hackbright Academy'],1,23,chloe,F,0.9984440266822427,0.0015559733177572387
Michael Brown,A software engineer and above average ping-pong player.,Starting the [coding] Journey – Michael Brown – Medium,2018-03-16 00:36:59,medium,"Starting the [coding] Journey As I write this, I am 33 years old, working as a teacher in Japan, and finishing my first week in a coding bootcamp. The journey started when I was in 13 and requested my mother to pick me up a book on coding. I don’t know where the interest originated - probably it was growing up in Silicon Valley, perhaps it was just another fad. I didn’t know any programmers at the time but I tried to give the book my mother gave me, a book on the programming language “ C. ” I didn’t get far. Fast forward to college, I’m taking a Fortran class to satisfy a requirement for my mechanical engineering degree (later changed to business). The teacher never once explains or demonstrates what you can do with a program. Just endless for-loops. I get a D. Decide programming must not be for me. Luckily, the interest somehow persisted and I decided to start doing some coding exercises for fun through various free sites and validated it’s something I really want to do. I explored a little J S, Python, H T M L, C S S, and now I’m diving deep into web development via Ruby. I explored, researched, met with a lot of programs and I finally found the right one for me. The bootcamp I chose enables me to affordably pursue programming at a pace that is right for me (about 30 hours a week over six months). I feel like spending the extra time researching for the right recipe for success is paramount. As Tim Ferriss puts is, “ If the recipe sucks, it doesn’t matter how good of a cook you are. ”","['Codingbootcamp', 'Coding', 'Programming']",https://medium.com/@michael.entr/starting-the-coding-journey-7f0231771413,2,[],0,1,michael,M,0.004965539448960512,0.9950344605510395
Techtonica,Free tech training and job placement for local women and non-binary adults in need.,Congrats to Our Graduated and Placed Apprentices! – Techtonica – Medium,2018-08-06 17:35:51,medium,"Congrats to Our Graduated and Placed Apprentices! We can happily share that Techtonica’s 2018 graduation event at Checkr was a huge success—this was our sendoff event, as our apprentices are headed into their placements with sponsoring companies! Michelle Grover and Michelle Krejci, a board member and sponsoring enthusiast, spoke about their connections to Techtonica, and filled the room with irreplaceable, thought-provoking questions and ideas that encouraged meaningful reflection. Our Founder & C E O, Michelle Glauser, then spoke a bit about the program and introduced each apprentice, who shared their final projects one last time, showing a plethora of world-changing ideas and motivations that signal positive progression to come in their upcoming careers. Overall, the night served as an enjoyable time with endless and infectious positive energy. You can watch the video of the project demos and placement announcements here. All 8 of our participants were successfully placed at the following companies: Pantheon: Zhenzhen Redfin: Vivian Ancestry: Ta Lea Huge: Ashley Mixpanel: Stephanie and Michelle Rally Health: Zaire Colark: Lian We are very proud of what they have achieved. We will continue to support our apprentices, and look forward to seeing them grow. Thank you to all the supporters who made it to the event to support our apprentices as they # Bridge The Tech Gap! If you were not able to attend, we hope you can make a future graduation event, as we hope to hold many more in the future! To continue this model, we are actively seeking funds and sponsors to help bring our next cohort to reality! Some dates to keep in mind: October 13th: Fundraising Event October 19th: Sponsorship Deadline","['Women In Tech', 'Codingbootcamp', 'Software Engineering', 'Women Empowerment', 'Social Impact']",https://medium.com/techtonica/congrats-to-our-now-graduated-apprentices-747a0f7b4f3,1,['Techtonica'],1,16,techtonica,Unknown,Unknown,Unknown
Gus Kemenyfy,Software Engineering student at Suncoast Developers Guild. Here we go...,<h1>Computer jargon</h1> – Gus Kemenyfy – Medium,2018-08-07 03:29:50,medium,"<h1> Computer jargon</h1> Week 2 of my coding journey. I’m feeling good. It all started a couple weeks ago when I took my family to Honeymoon Island at Caladesi Island State Park. It all started as a fun beach day with my kids and wife. It has changed a lot of things… Greg enjoying summer in Quebec (from a Floridian perspective at least) Sitting down in a nice shade I notice my good friend Greg Georges, a really cool Québécois with an infinite knowledge about computers, cloud services and web development. I strike up conversation about I T stuff and minutes later, there I am, all hyped up about it all, listening about Amazon Web Services… And then I guess he notices something in the way I listen and he starts talking about the guys at the Suncoast Developers Guild and how they were doing a great job switching you into a high geared path of coding skills learning and after a couple of minutes of me asking questions there I was signing up for what feels like has changed my life in a very positive way, the S D G’s Bootcamp. www. suncoast. io In these two weeks we’ve learned H T M L5, C S S3, J S and how they work together to create great user experiences. I was so excited to create from the ground my own websites and even deploy them to the web. All excited of sharing my links with family members for support. Of course, I was greeted with some enthusiasm and by some meeeeeeeeeh, let’s say, unimpressed reactions. I guess from the user standpoint, it’s tough to understand how much effort we newbie coders put into a simple website. Coming from another field and without any iota of coding experience in my name, I am pretty satisfied about how things have developed, and one of the things I’ve liked the best is definitely H T M L5. But what is it? H T M L has always been about interconnection. In the ’90s, the web was full of 15-page specifications, all in a single file. You scrolled through those massive documents just like you paged through an encyclopedia. Much of the early versions of H T M L were intended to deal with this, widely considered a detriment to the readability and usability of the web. So early on, H T M L was not primarily about displaying those documents with lots of formatting. Most fundamental to H T M L was the simple a tag. It gave a document the means to link to another document. Suddenly 15-page documents were reduced (mercifully) to 15 one-page documents, all linked together. Bye bye scrolling; hello useful linking. This is all pretty standard fare, and if much of this is new to you, then the waters are going to get deep quickly. Fast forward to the present. The ability to connect things on the Internet is the primary feature of H T M L5. It’s just that now, we’re starting to realize the original vision of H T M L, and connect a lot more than hypertext with static images. So now you can pull in images, audio, and video directly into a document. More importantly, because those items now have first-order elements, you can easily manipulate the audio and video from Java Script. That’s a big deal. So while the audio and video elements are new, their purpose isn’t. H T M L5 allows you to integrate more assets into a single document, all while keeping the integrity and separation of those assets into place. So what, then? Why is this such a big deal? Well, largely for three reasons: Web pages no longer need to look (and act) like web pages. Web pages no longer need to represent one person/organization’s content. Web pages can function intelligently and easily across display devices. H T M L5 and C S S3 provide for Java Script a pretty solid working set of tools and effects. And the upside is enormous: text is again selectable, bookmarking works without lots of weird tricks, and of course website owners can actually update their own sites, rather than relying on some overly busy programmer to help. The result is that H T M L5 is again the most usable and indexable tool available for web content; but that content is richer than ever before. Further, that content no longer has to be owned to the degree that older web pages had to be owned. If you feel all of this is strange talk, well, I got you. I felt kind of that the day I started my S D G Bootcamp. I am looking forward to see what’s in store and where will this amazing journey take me.","['Web Development', 'Suncoast Developers Guild', 'Codingbootcamp', 'Programming', 'HTML']",https://medium.com/@gus.kemenyfy/h1-computer-jargon-h1-5150c18f6acb,1,[],0,15,gus,M,0.00026739397828760895,0.9997326060217124
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18","JavaScript ""Code Reuse"" - Part 1–1 : Decorators – J.Lim – Medium",2018-05-30 06:08:14,medium,"Java Script “ Code Reuse” — Part 1–1: Decorators J L’s Coding Bootcamp Story #7[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”5.  Summary of Code School’s “ Try j Query”6.  Java Script “ This” — Advanced7.  Java Script “ Code Reuse” — Part 1–1: Decorators( Current)8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes When writing software, code reuse is the practice of writing generalized code that can be relied upon to address a variety of similar goals. Whenever you notice that two parts of your code have similarities, there’s an opportunity to factor out similar aspects of it into some reusable library code to avoid writing repeating codes. Let’s assume that we need to create a program for keeping track of how far along the street each car is and the name of one of the drivers is “ Amy. ” (* F Y I: What I explain in this blog post is a ridiculously oversimplified version of the program). To keep track of how far along the street Amy’s car is, her object could include a location property and that property will point to a number reflecting her position. ( The number is an object as well just like nearly every value in Java Script. )[run. js]var amy =      { location : 1 }; When the program tries to move Amy’s car further along the street, we could show the change on the next line. [run. js]var amy =      { location : 1 };amy. location ++; Also, let’s create a second car object. [run. js]var amy =      { location : 1 };amy. location ++;var ben =      { location : 9 };ben. location ++; In the code above, the . location property is repeated. So, we could write a function that does the work for us. [library code] var move = function(car) { car. location ++ };[run. js]var amy =      { location : 1 };move(amy);var ben =      { location : 9 };move(ben); The reason that it’s valuable to factor a repeated code into a function is that you can make all edits you want to apply in one place. Without a function, you’d be forced to edit all places that old logic exist and could easily miss editing one of the many places you repeated the old logic. Also, the code that adds a . location property to a new car object is repeated. [library code] var carlike = function(obj,  location) { obj. location =     location; return obj;};var move = function(car) { car. location ++ };[run. js]var amy = carlike({   }, 1);move(amy);var ben = carlike({   }, 9);move(ben); When a function accepts an object and augments it with some extra properties, the function is called a decorator. It’s common to use adjectives as names for decorators. We can rename our decorators “move(amy) & move(ben)” to clearly shows that the decorators have the move capability is an aspect of each car by using a “method calling syntax” instead of a “function calling syntax. ”[library code] var carlike = function(obj,  location) { obj. location =     location; return obj;};var move = function(car) { car. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); When a function is designed to operate on a specific object, “method calling syntax” allows us to express the object’s significance in that function in a more effective way. To provide an access to this function via “dot notation” on Amy & Ben, we’ll add a move property to each car as they’re being built and assign the function to that property. [library code] var carlike = function(obj,  location) { obj. location =     location; obj. move = move; return obj;};var move = function(car) { car. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); We’re no longer planning on passing a car in as an argument to this function. Instead, we’ll see the target object appearing to the left of the dot when the function is called. Javs Script supports the automatically-bound this argument, which refers to the object on the left of the call-time dot. Rather than providing an input variable for the argument, we can use this. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = move; return obj;};var move = function( ) { this. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();[ A quick recap of this] : this behaves almost exactly like a parameter. Rather than being bound to a value supplied in between call-time parentheses, this is bound to the object on the left of the call-time dot. [example. js]var obj1 = {}, obj2 = {}obj1. example = function(arg1) { console. log(this, arg1);};obj1. example(obj2); // obj1, obj2/* obj1. example(obj2); */obj1 // this parameter binding. // call-time dot() // call-time parenthesesobj2 // 1st parameter binding In this code, it is like the following:[library code] var carlike = function(obj, location) { obj. location =     location; obj. move = move; return obj;};var move = function( ) { this. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();/* amy. move(); */amy // this parameter binding. // call-time dot() // call-time parentheses // no positional parameter binding We’ve now made this function a method of every car-like object. In addition to clearer invocation syntax, the method provides “encapsulation” of behavior. But, we’re no longer planning on passing a car in as an argument to this function. Instead, we’ll see the target object appearing to the left of the dot when the function is called. That’s good for conserving memory. But, there’s a downside. Whenever you use a “shared function” like this, you can’t reply on it always knowing which object to use as its this argument. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = move; return obj;};var move = function( ) { this. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();set Timeout(ben. move, 1000);// runs with the this argument bound to the global object, where there is no global . location property. It works just like passing the original move function would have (before we refactored move to be a method). Like car, this is a parameter, and set Timeout has no way of knowing which value to pass in. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = move; return obj;};var move = function(car) { car. location ++ };[run. js]var amy = carlike({   }, 1);move(amy);var ben = carlike({   }, 9);move(ben);set Timeout(ben. move, 1000);// runs with the ""car"" argument bound to undefined, where there is no global . location property. Let’s move the method’s code directly into the decorator function and remove the global variable declaration entirely. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { this. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); Our new code feels easier to read than before when move was defined outside the car-like function. All the code is on one level of indentation and we’re using the same syntax to assign the . location & . move properties. But, even though our code is all together in one place, we’ve paid a price for that simplicity. In the new code, every time we run the car-like function, we create a new function to add as the . move property of the input object. C O P Y R I G H T © 2018 Code States The old version of the code created only one function object for all car-like objects to point their . move property to. In addition to avoiding duplicated code, this pattern avoided duplicating in-memory function objects. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = move; return obj;};var move = function( ) { this. location ++ };[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); C O P Y R I G H T © 2018 Code States People are often confused why this code would bring a new function into existence for every call of “car-like. ” You can improve your intuition around this point by examining a more obvious situation that is completely equivalent. [maker. js]var make An Object = function() { return { example : 'property' };} This simple “maker function” builds & returns new object. [maker. js]var make An Object = function() { return { example : 'property' };}var obj1 = make An Object();var obj2 = make An Object();log(ob1 === obj2); After calling it twice & storing the results, would you expect the two objects it produces to be different objects or the exact same object in memory? In other words, would they pass a strict comparison of identity?log(obj1 === obj2); // false Even though the same line of code generated both objects, they are different objects taking up different spaces in memory. Making changes to one will not affect the other. [maker. js]var make An Object = function() { return (){};}var obj1 = make An Object();var obj2 = make An Object();log(ob1 === obj2); What if the maker function had returned a function object instead of a plain object? Would you expect the two results to be the exact same object, or would they be two different objects?log(obj1 === obj2); // false Just like the previous version of the code, which generated two different plain objects, this new code will generate different function objects every time make An Object gets run. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { this. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); So here, every time the interpreter visits the middle line of the car-like decorator, a new function will be generated in regard of the car’s . move method. Depending on how many cars we make, this could take a lot of memory. But, there is a slight advantage to putting the . move function inside the body of the car-like decorator function. Because a new . move function is being created every time, each with an access to a unique closure scope, we don’t need to reply on the keyword this anymore. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { obj. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move(); Instead of referring to this argument, which gets bounded to a new value whenever . move is invoked, we could refer to the closure variable obj, which will always refer to one particular car object. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { obj. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();set Timeout(ben. move, 1000);// runs with the obj variable bound to the ben object In addition to avoiding all confusion with this argument, now our . move method can never lose binding to their target object when passed as callbacks or called in other ways. [library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { this. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();set Timeout(ben. move, 1000);// runs with the this variable bound to the global object, where there is no global . location property. C O P Y R I G H T © 2018 Code States[library code] var carlike = function(obj, location) { obj. location =     location; obj. move = function( ) { obj. location ++ }; return obj;};[run. js]var amy = carlike({   }, 1);amy. move();var ben = carlike({   }, 9);ben. move();[ Conclusion] : The example explained in this blog post is so simple that we’re passing an empty object. Generally, you’d use a decorator to add some functionality to an object that had some other functionality in it already. [ Note] This blog post is written based on a lecture from Code States. Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['JavaScript', 'Code Reuse', 'Decorators', 'Codingbootcamp', 'This']",https://medium.com/@j_lim_j/javascript-code-reuse-part-1-1-decorators-f62c0056745b,0,[],0,2,j.lim,Unknown,Unknown,Unknown
Kalen Hammann,,"A New Beginning, Part 14 – Kalen Hammann – Medium",2017-08-06 15:16:41,medium,"A New Beginning, Part 14 J U S T O N E M O R E E V E N T O F N O T E I N W E E K 6 — B U T I T W A S A D O O Z Y! As I mentioned, the sessions with my mentor had been getting better. Still, when the folks from Firehose reached out to ask about how things were going — Kudos to them for doing that! — I had to admit that my mentor relationship wasn’t exactly great. Although I had thought about asking for a different mentor, I had decided not to because things weren’t that bad, but I wasn’t nearly as enthusiastic about my experience with my mentor as I was with the rest of the Firehouse program. The next day I got an email that I would soon be getting a new mentor. I felt relieved and cautiously expectant. After an exchange of texts — I liked the feeling of the texts, but you can never tell — it was time for our first Skype session. The session was everything I could have imagined, and more. My new mentor was smart, of course, and very experienced. He’d had a number of jobs and was even C E O of his own startup. And he’d done a lot of coaching, too. But on top of all that, he was P R E S E N T. He picked up quickly on what I knew and what I didn’t know. He was a terrific teacher. He had real scope and depth. During that first session I learned things at all levels, from the simple and immediately practical (like how to get my terminal to auto-complete when I was entering commands) through how objects work in object-oriented programming and some key insights about how they can be used in Ruby, all the way up to the differences among the three main types of programming languages. He helped me feel well-grounded pride in how I approached solving problems and what I’d accomplished with my first apps, enthusiastic about the Firehose approach of challenging us to solve real problems and challenges on our own, and eager to get on with meeting the more complex challenges that lay ahead. When the session was over, I yelled, “ Yay!” and then walked into the living room with a huge grin on my face and told Kari, “ I feel like I just got out of a prison I didn’t even know I was in. I’ve got a M E N T O R! A Real M E N T O R!” W E E K 7: T R O U B L E S H O O T I N G A N D J A V A S C R I P T M A G I C The first part of week 7 I continued working on my “ Flixter” app, creating an online place to host video-based courses, and worked on a challenge called “blur2” (modifying an array within an array). Both involved lots more practice troubleshooting. As before, I found that my main source of error messages when following along through the Firehourse lessons was typos. Things like typing “before_action: authenticate_user!” instead of “before_action :authenticate_user!” which feels backward but is the only code that will work. At my next session with my mentor I learned some other things to look for and a couple of useful tricks I learned that any code I include in a class O U T S I D E a method will never get run, even if it appears before a method I want to use. I have to put it I N S I D E the method if I want the method to benefit from it. ( Duh!) And I learned how helpful it can be to run just P A R T of my code to see if that chunk works to isolate where an error message is getting triggered — or to put in several lines after various blocks of code asking the program to show a message on the screen (like puts “ I got this far!”)(puts “ I got this far too!”) so I’ll know when I run the file that the program got at least that far before it bombed out. And at the end of the week I got to watch some videos introducing a whole new computer language — Java Script! The thing I find most exciting so far about Java Script is that it runs little programs right in a user’s browser so, for example, when the user clicks on something (“the date for the next course”) the text magically changes right there on the page to something else (“ March 14”)! I can hardly wait to find out what else I can do with Java Script… W E E K 8: A D V I C E F O R A N E W B I E A N D M O R E J A V A S C R I P T M A G I C First the advice… Someone even newer than I — just working with The Firehose Project for a week — asked for advice on the forum and I found that I had a couple of things I thought might be helpful. Here’s what I wrote:“ In my experience, the sooner you get used to the idea that not everything is clear immediately and that it is O K to ask for help the better you will do. When you hit an error message, look at it first, then reach out with a question right away through the forum. Then stand up (good to do F R E Q U E N T L Y anyhow!), stretch, walk around the house or around the block. By the time you come back you’ll probably have an answer. These folks are F A S T and usually come back with very helpful, targeted advice. After a couple of times you’ll begin to recognize what some of the common error messages are telling you. “ Also two more tips: If something isn’t working, try copying and pasting a whole block of code from the lesson in place of code you wrote. Save the file and refresh. If it works, you know you had a typo. Then go back to sublime [the editor we use to write code] and hit command-z (“undo”) to put your code back and then copy and paste one line of code at a time from the lessons right under the line of code you wrote and look for typos character by character- the most C O M M O N source of problems!” Beyond that:- Save the file! Amazing how the computer doesn’t know what I’ve written until I do that. - Restart the server. I don’t know why, but at seemingly random intervals ( N O T mentioned in the lessons) I will be S U R E my code is fine but I’ll get an error message. Then when I remember the last time this happened and restart my server — voila! The code that didn’t run a minute ago now magically does run. Even more magic: A Countdown Timer in under ten minutes! The first bit of Java Script magic I really enjoyed as I watched more videos this week was the ability to put a button on a page that would say “ Click me!” and then as soon as I clicked it, the button would change to say, “ I’ve been clicked!” I felt a little like Alice in Wonderland. But that was just the beginning. It turns out that just as Ruby has Ruby Gems — special mini-programs that enable us to do common tasks without having to write the code ourselves — Java Script has something very similar in special libraries. One library used a lot is called called j Query. Say, for example, you’d like to put a countdown timer on your page to tell people how long it will be until… well, anything. The video showed us how to Google “j Query countdown timer” and then, yes, put the countdown timer on the page in less than ten minutes. I put up a timer listing the number of days, hours, and minutes until my wife Kari’s birthday. ( Good to be able to show her something “practical” and fun coming out of all this studying. )( More to come… click here!)","['Programming', 'Web Development', 'Codingbootcamp', 'JavaScript', 'Productivity']",https://medium.com/@kalen7/a-surprising-career-change-part-13-2b932d360126,0,[],0,0,kalen,M,0.2631194002559883,0.7368805997440117
Abi Travers,Junior Software Engineer. Self-taught growth hacker. Back in the UK after working in Tech in Vietnam & Indonesia. http://lebrunblack.com/,Regular Expression Resources | Regex – Abi Travers – Medium,2017-07-28 11:01:18,medium,"Regular Expression Resources | Regex Howdie Reader, or mum as I otherwise call her. So week 4 of Makers Academy Pre-course and I am still working away at my codewars kyu ranking. Since the last challenge proved too much for me I decided to go for a simpler one. One with a ranking of 7 Kyu. The one I chose was on regular expression and this lead me to discovering some very useful resources. A Quick reference for regular expression Terms: The site this was on also has a way to test regular expressions you are creating. A series of Video Tutorials on Regular Expression. You can skip to the one’s you find most useful: From this set of videos I could clarify a bit more of the quick reference table. I got the \d any digit \w any word character however I found the following information chunks very useful:. matches any character E X C E P T a line break\b a space which proceeds or follows any word? zero or 1 repetition of whatever code proceeds it* zero or more reps of any code which proceeds it\d{5} 5 digits in a row\d{1. . 5} 1–5 digits in a row. Some characters require escaping which means followed by a /. Examples:1. ' Jenifer\s\w+\s' Can be explained as;' Jeniferthe combination of letters which matches exactly ‘ Jenifer’\sfollowed by a space\w+followed by one or more characters (could be surname . . )\s'followed by another space. 2. \$\d*\. \d{2}\$\an actual $ sign as it has a \ before it which means we want it instead of it’s denotation of the end of a line. d*any number of digits\. \a full stopd{2}two digitsso $245. 98 would be found with this code. . . I can search through any sites quickly for a price?? W O W this is beginning to look like it is a very powerful tool!! It looks like it could be a key part of building a web-scaping tool. . which as a previous growth marketer is something which is extremely exciting to me . . Even if my reader (mum) doesn’t quite get why that may be so useful!! Here is the initial codewars task I was given, the one that sparked off this whole blog post: Return the number (count) of vowels in the given string. We will consider a, e, i, o, and u as vowels for this Kata. And here is the solution:def get Count(input Str) input Str. count(""/[aeiou]/"")end The . count method is used to count the number of occurrences in a string. The optional parenthesis, (), after it are to give the count method an argument. This argument allows you to count whatever is instead the () within the string. The regular expression:""/[aeiou]/""means any characters which are equal to a, e, i, o, u. It is within quotes “” because when I didn’t do this I got an error message from irb which stated there was no conversion of Regex to string. This must be done so it can count those characters within a string not within a regular expression. The // are used to capture any regular expression. The [] denote a “character group”. The () is to group the string together. Another Example While perusing stackoverflow, I found A useful explanation of a more complicated regular expression:/([^. ]*)\. (. *)/ I have re-worded the explanation a bit into my simpler beginners language:// mark the start and end of regular expressions. ([^. ]*)() are to group a string together and to let ruby know the expression within is related. [] denote the character group. ^ reverses the groups meaning. . is a fullstop (or period if American). So the ^ means to match any character which is not a fullstop. * is a wildcard, which means anything within the square brackets before it can be matched zero or more times. \. is an escape period. Fullstops in regex have a special meaning they match everything. The \ before it cancels this meaning out so that it literally means match fullstops. (. *) is a new sub-group. The . takes on it’s special meaning so that it matches any character and the * wildcard means it can be repeated as many times as it needs to be. So what does this mean the whole expression is doing? It finds any sequence of characters (that isn’t a fullstop), followed by a single fullstop, followed then by any character. Another way to look at it is this: Split this as:[1] ([^. ]*) : It says match all characters except . [ period ][2] \. : match a period[3] (. *) : matches any character For a full list of all the types of regular expression head over to Microsofts site H E R E. So there you have it, my short but sweet experience with learning the basics of regular expression, then using this to complete a codewar’s kata challenge. And by ‘you’ I realise I am writing this for myself, as a way to solidify my learning. Sadly I known even my mum doesn’t read these . . because I can see no traffic coming from France . . This isn’t actually my mum I just wanted to show off a picture I took while living in Indonesia. If you like to support the local independent blogs you can find this original post H E R E.","['Regex', 'Regular Expressions', 'Ruby', 'Codingbootcamp']",https://medium.com/@abi_travers_/regular-expression-resources-regex-559784feb345,0,[],0,1,abi,F,0.9588785046728971,0.041121495327102804
Gregory Schmitt,,Newby on Ruby on Mac – Gregory Schmitt – Medium,2018-05-24 13:06:08,medium,"Newby on Ruby on Mac This is my first post. I am a software engineer. Started in my late teens, got a degree in Computer Science, coded for about 20 years, and then focused on running my own company. I had that company for most of my career, but recently closed it, and am now embarking on a new adventure — software engineer! I guess “full circle” is the appropriate term. Things have changed a little since I was “hands-on”. Anyone ever heard of Epsilon? That was one of my first editors for writing code, before I D Es became popular. Atom reminds me of it a lot. Oh, and another important point — I am a lifelong P C guy. After acceptance to Coding Camp the congratulations email stated that I needed to bring a Mac because “ The Mac interface, which is Unix-based, is the gold standard among professional programmers. ” Okay. P C versus Mac has always been a little like a religious debate. I did not think anyone much cared anymore. Most people by now have adapted to more than one digital interface, starting with their first mobile device, which we all switched from pre-smartphone to Android to i Phone or whatever. And then there is the quirky reality today that the Apple ecosystem embraces both i O S and mac O S. What’s up with that? And it appears the branding geniuses at Apple are preparing us to live with both for some time — the name “mac O S” is further away from i O S than O S X was. I love to write but hate to type. My dad was a clerk in the army and his typing skills likely kept him off the front lines. He always exhorted me to learn how to type in high school, but then he also told me I did not need a college degree to become a computer programmer (that’s what he called it). We saw how that worked out. But all the way through I knew he had a point about the typing thing. Which brings me to the main point of this blog — cheating. No, not while taking a test, but while trying to get a task done. How do I get things done quicker while I am coding? With a cheat sheet, of course! How boring. Okay, for everyone who has been entertained so far but now is thinking — reading further is a waste of time (which I am trying to save), refer back to the title of this post. The first word is “ Newby” ( I know, it’s more common to spell it like “newbie” but my spelling goes better with Rub Y in the title. ) So if you are still in my target audience, please continue reading. Keyboard Shortcuts We all know copy and paste, but navigation and other shortcuts are also real time-savers. And for many of you in my Coding Camp cohort, who are also moving from P C to Mac (show of hands, please? I have yet to ask this question of one of you who is N O T a P C person!), adapting to the lack of Home, End, Pg Up, Pg Dn keys (and what’s this “option” key for?) may have been one of your biggest impediments to getting any sleep in week 1. This is a short list, just what I have found most valuable. If you don’t see what you need, check the Apple Support page here https://support. apple. com/en-us/ H T201236 Finally, here is a somewhat complicated one (at least for me) I learned on about the 7th day of camp, and has been a real time-saver, especially making sure I get long variable names or literal strings copied exactly right from a lab to my code. Sometimes I find it a little challenging to highlight using the Trackpad more than a few characters or words that I want to copy. Instead of the using the Trackpad and dragging, try this: hover cursor over the first word that you want to copy, Ctrl-click, Esc (to get out of a context-menu if it pops up), shift-option-right arrow to highlight additional words to the right (or left arrow to go left). And here are a few for the Atom editor. And when you are in Terminal, typing a few letters and pressing Tab will auto-complete file and folder names, to the point of their uniqueness. Lingo Here are some words and phrases that may help to impress on others that you are not just a budding (you know, like a flower, it’s spring while I am writing this) software engineer. And understanding their meaning may actually help you write better code! Code This is not meant to be a beginner guide to coding Ruby, which is way out of scope for this post. Just a few code snippets as a reminder of syntax and useful stuff that maybe you haven’t coded often enough to commit to memory. Looping Arrays Add the bang operator ! to reverse, sort, uniq, flatten to perform the action in place (instead of returning a new array). Miscellany I especially like the last example for making variable assignments. I puzzled over this for some time, reviewing operator precedence in about five different places and parsing various Stack Overflow posts. My takeaway is that the construction nil || nil = something makes no sense to Ruby, so it throws its hands up in the air, and fudges, doing something analogous to hard-coding, resulting in a nifty way to assign a variable. Nothing in life is perfect. Parting Words If your take on this post (for anyone who I have not already put to sleep) is that it reveals nothing dramatic and is pretty basic, that was my intention. After about two weeks, my classmates at Coding Camp are now seasoned veterans, but maybe there is still some little tidbit to be gleaned here. My new Mac laptop and I are getting along pretty well. I admit it sat in the box for a couple days as I debated the value of Coding Camp, and the shocking prospect of switching to a Mac. But on both counts I am happy to say there is no turning back. I know I will continue to use my Surface Book, but as I have more time to transition my stuff, I may just eventually forget it. ( Or, at least until the end of Coding Camp!) I have adapted quickly to the Mac in large part because Apple controls the hardware and software, helping them to create amazing products. And after continually trying to touch and swipe on the screens of demo Mac Books in the Apple store, I now understand why the Mac Book has no touch screen. The Trackpad just works better, and integrates better with the O S. I don’t know why, it just does. It just works. And that should be your goal as a software engineer — for your users to say “it just works”. And I hope that for you Ruby on Mac newbies out there, this post will help you to get more quickly toward that goal!","['Software Development', 'Codingbootcamp', 'Ruby', 'Keyboard Shortcuts']",https://medium.com/@gjschmittg/newby-on-ruby-on-mac-bdf09634b7a9,3,[],0,2,gregory,M,0.004031769384482268,0.9959682306155178
Amber Wilkie,"Software developer: Ruby (Rails), Javascript (React). Photographer. Professional dabbler. Entrepreneur at heart.",Craft Academy: One Month of Bootcamp – Craft Academy – Medium,2016-09-01 15:54:28,medium,"Craft Academy: One Month of Bootcamp Lots of people have been asking me: “how is bootcamp?” And it’s honestly a somewhat complex question to answer. If bootcamp is going really great, you’re probably not being pushed hard enough. That’s why they call it bootcamp — if you’re legitimately enjoying yourself, you’re doing it wrong. The biggest enemy right now is time. Every night I look up from my computer at 10-something (even though I promised I would get offline at 9:30), think just a few more minutes, and have to pry myself away from a solution that I would swear is so close. The next day, I work at the same solution for hours. One of the most gratifying things about this adventure has been the incredibly rapid pace of growth I can see in myself and my cohort colleagues. When we walked in on Day One, we were anxious, excited and a little scared. Now we’re anxious, excited and a little scared, but we can sort a P S Q L database, program a B M I calculator and parse J S O N data. We can write simple programs in Ruby and Javascript. We can use tools like H A M L and Datamapper and Sinatra. It’s been crazy. It’s supposed to be crazy. It’s going to get harder. My favorite part of this month has been building personal projects. On the weekend, I often find myself with a little extra time and a burning desire to get better at the concepts and tools introduced over the week. I irritate the hell out of the coaches by asking them to evaluate and help me code my non-sanctioned projects. I’ve built a Javascript Blackjack game that mostly works, and a journalling app written in Sinatra, because I found Evernote to be “too much”. No, I haven’t really seen my husband in a month. No, I really haven’t appreciated that it’s “summer” here in Sweden. No, I have no idea what any of my friend are doing. My house is a mess. I have eaten more pizza in the last month than the previous seven combined. I am incapable of discussing anything other than code. Laundry is piling up. My neck hurts. I’m fucking tired. So how is bootcamp? It’s a pretty wild ride, man.","['Programming', 'Coding', 'Bootcamp', 'Codingbootcamp']",https://medium.com/craft-academy/craft-academy-one-month-of-bootcamp-8307240462ca,0,[],0,19,amber,F,0.9973576287684124,0.0026423712315876606
Horizons,,"Horizons, Chapter 7 – Horizons School of Technology – Medium",2016-08-04 20:19:28,medium,"Horizons, Chapter 7 At the beginning of Week 7, Horizonites took part in their final formal lessons with our excellent teachers — Moose and Lane. Moose emotionally taught his final lesson on React Native, remarking at the end how much he had enjoyed teaching the class. Students created their final project for the class of the program — Ho Ho Ho, a Yo! Clone. Horizonite Cole Ellison’s Ho Ho Ho app After completing this project, students picked what teams and projects they’d like to start work on for the next week or so. Some students were asked to undertake real client projects, ranging from a health insurance app to a scholastic gaming app to a social media app. Some students chose to continue their hackathon projects and make them great, viable products to release. Horizonite Louis and Horizons Founder Edward brought some of the class to a Bastille Day celebration on South Street. Speakers this week B O B M O U L — C L O U D A M I Z E C E O Bob is in many ways the mayor of the Philly tech scene and has had decades of experience as the C E O of several successful companies of all sizes. He’ll have a whole lot to share. Bob Moul is a Philadelphia tech C E O with 35 years’ experience ranging from start-ups to Fortune 500 companies. Bob is currently C E O of Cloudamize, a leading cloud infrastructure analytics company. Previously he was C E O of Artisan Mobile, creators of the industry’s first mobile experience management platform (acquired by T U N E), C E O of Boomi, pioneers of middleware for cloud computing (acquired by Dell), and president of S C T’s $300mm global education solutions business (acquired by Sun Gard). He also enjoyed a 19-year career at E D S where he held senior management positions including director of operations in Hong Kong and China, and executive director of its federal government business in Australia. Bob is an active advocate for entrepreneurship in Philadelphia. He is aformer chair and president of Philly Startup Leaders and serves on the board of directors of the Philadelphia Industrial Development Corporation ( P I D C), the Philadelphia Alliance of Capital and Technology ( P A C T), Ben Franklin Technology Partners of Southeastern Pennsylvania, Philadelphia Academies Inc. , and U S A250. He was named a 2011 Ernst & Young Entrepreneur of the Year finalist for Philadelphia, the 2013 Small Business Person of the Year by the Philadelphia Chamber of Commerce and one of the most influential business people in Philadelphia by both Philadelphia Magazine and the Philadelphia Business Journal. Bob came to Horizons to speak about his experiences in tech. From an early age, Bob knew that the conventional education process was not for him. He did not attend college and instead found a job at a top tech company of the time. His relentless willpower and determination to succeed brought him from a low, non-technical position in the company to a senior level position over the course of his 19 years there. Since then, Bob has moved on to found numerous companies. Entrepreneurship in Philadelphia Bob started with an Edtech startup. After some time, he sold it. When the check came, he couldn’t believe that he had created so much value and that someone had actually bought it. Next, he created Boomi to solve on the big problems in cloud computing. He built the first middleware layer in the cloud and sold it to Dell in 2010. Shortly after, he started another company called Artisan Mobile. This, however, was a spectacular failure. Since then, he’s worked as the head of the Philly Startup Leaders, an organization that brings startups in the Philadelphia area closer through events, panel showcases, and collaborations. He became the head of P S L just one year ago, and for the past 6 months has worked tirelessly as the C E O of Cloudamize, a platform that helps you leverage actionable analysis that empowers you to make data-driven decisions with confidence and ease throughout your entire cloud journey. Thoughts on What Makes Highly Effective Entrepreneurs Unrelenting positive attitude High energy / strong work ethic High pain/stress/risk tolerance Supremely confident but self aware (people who are tuned into themselves and can learn) Wildly optimistic but always questioning Tenacious but willing to pivot Focus on results vs being right (are we solving the problem? Are we getting results?) Accept full accountability Some career thoughts Generalist (athlete) vs specialist (looking for generalists if hiring) Smart vs effective Trade experience for salary every time Take the hard jobs no one wants — that’s the fast way to learn Be a learner not a knower (ability to ask the right questions) Get experience selling (all of you should get the experience selling) Keep your burn rate low! For tech folks Tech (coding languages, databases, frameworks etc) come and go Develop your business skills as well as technical skills Everything is not black and white — decision making often involves constraints and compromises Interview Advice When Bob interviews people, he asks situation questions — What have they actually done? On day, I took my team out to lunch. I noticed the waiter, James, was very good at his job. Very personable, hard working. I asked him “ What are you doing waiting tables? What was your major in college?” He answered that he was an international music history major, or something worthless. I asked, “ Have you ever considered a career in tech?” His response: “ Well, what do you have in mind?”. I knew I loved this guy. He became one of the top performers in my company very soon. He crushed every set of goals I set for him and quickly earned numerous raises, surpassing what he ever could have made as a waiter. Bob feels that the internet has truly eliminated all non-value add people in the supply chain. The premium that we place on degrees is only to the extent that employers put on it. Experience as a C E O Bob has learned a lot while C E O of a few companies now. He has learned how to manage his time very, very well. He has a daily planner where he disciplines himself to write down his to-do list every day. He rewrites things from the previous day so that he has to keep track of not only what he gets done but what he wasn’t able to do the day before. He has learned that he is most creative in the morning, so he works on all of the creative things he has to do in the morning. He saves all calls for the afternoon and batches them all together. However, even as a C E O, he takes meetings from every person that asks. He is not the kind of guy to have ideas in his head all the time but rather is open to hearing ideas. When he hears a good one, he’s the guy that wants to help you run with it and says “ Let’s do it”. He stressed the importance of “ The Power of Now”. If something comes up that you can easily get done in a few minutes, do it. Don’t worry about it — just get it done. That’s one more thing to cross of your list for the day easily and painlessly. Lessons in Company Management Annual goals/objectives(company, team, individual) are critical Quarterly reviews Monthly status Weekly Schedule Reviews Daily Standups Board Mtgs/ Monthly Calls K P Is/ Dashboards Bob has learned that it is critical to check in with people at intervals keeps people on task and productive. Lessons in Hiring/ Firing Bob has learned a lot along the way in the hiring and firing process. First, he must set goals and objectives for hiring people and how he wants them to perform in the company. He keeps feedback on all his hires in a folder. He has tough discussions before he hires them and makes expectations clear for the job. He creates performance plans for them, and if they severely underperform, he has learned that firing fast is the best way to do it. He has a defined process in firing people. When he sees early indications, he has the tough conversation — “ You need to improve in this or you’re fired”. If they do not improve, the process is much easier. He has learned that giving people warnings has worked well for him. Ex-employees have commented that “ Even though Bob fired me, I’d work for him again”. The reverence that his employees have seem to be a direct result of the respect that he gives each and every one of them. Thoughts on the Philadelphia Startup Scene Bob loves Philadelphia for startups. There is a very vibrant scene here that is extremely underrated. The city has a fund called “ Startup P H L” that has around $6million that they use to fund startups brought to Philly. If you want to learn more about the Philadelphia Startup Scene, to go www. phillystartupleaders. org. Everything you need to know is on that website. Philly has the highest ratio of quality of life to business opportunity. You can actually have a life here and a family, while running your own startup or finding new and exciting business opportunities. Book Recommendations The Drunkard’s Walk: the Commoner’s Guide to Randomness Brunicelli’s Dom: How He Built a Duomo in Italy D A N I E L L E S T R A C H M A N — 1517 F U N D Danielle invests in great young entrepreneurs as a General Partner at 1517 Fundand was previously at the helm of the Thiel Fellowship. Danielle is a General Partner at 1517 Fund, which supports teams with pre-seed and seed funding for technology startups. Their focus is on makers, hackers, and scientists interested in working outside tracked institutions because they believe that the path geared towards higher education is not for all. 1517 motivates people to work on what they’re passionate about, to learn by doing, and to create new technologies. In 2010, during the founding of the Thiel Fellowship, Danielle joined to lead the design and operations. She is the visionary behind the Thiel Summit series that has been attended by some 2000 young entrepreneurs. Previous to her work with Peter Thiel, Danielle founded and directed Innovations Academy in San Diego, a K-8 charter school serving 350 students, with a focus on student- led project based learning and other alternative programs. Her Story Danielle Strachman grew up pretty poor, and despite her work with the Thiel Fellowship with Peter Thiel, she did go to college. She was passionate about teaching, but she knew that she didn’t want to be a typical teacher. She started a tutoring business and loved it, but when her boyfriend moved to San Francisco, she decided she would move with him. Shortly after arriving in S F, she realized she didn’t know if she could make it work. She ended up crying most days. She saw a post about the Thiel Fellowship and thought, “ Wow, that looks cool”. She interviewed and got the position. After some time in the foundation and after she had become a leader within the organization, a friend called her, “ You’ve got to get over here. The Thiel Foundation has lost their mind”. Danielle learned that if you see something you really like (a company) contact them. Don’t ask them that they have everything they need. When she went to interview for the position with Thiel, he came to the interview in a 3-piece suit because he had a board meeting about an hour later. It was very unexpected. At the time, they only had an application online. Danielle inquired about this. Thiel, “ Well. We are figuring that out. ”“ How about I go home and write up a needs assessment. What you’re going to need for that program?” Shortly thereafter, she started Thiel foundation summit to bring more people into the community of entrepreneurs and innovators. At the last summit, there were 450 people in attendance. Danielle felt that there was still more that she could do. So, she went to Peter Thiel. Pitched the idea to fund young entrepreneurs. Everything has been starting up. Penn Apps, Horizons, etc. Way more programs would be afoot. She founded the 1517 fund. She gives $1000 to young founders to start something. They also have a larger grant program. Already, she works with 50 founders. Success Story One person that she funded was Max Locke. He brought an idea for freight shipping to her. After a few weeks, she checked in with him. He had built a landing page and had the opportunity to pitch in front of Tech Crunch Disrupt. He got to pitch in front of big people like Marissa Mayer and Keith Rabois. Today, his office has over 12 people and always accepts her calls. What to Look For Danielle stressed a past history of execution. Is this person coach able? Has this person had internships in other places? Have they had any mentors? How jazzed is this person to do something? The best founders are part A D D and O C D. Someone who likes to bounce around and do a lot of different things but also seeks a high level of perfection and excellence. She looks for people who are easy to work with, because it isn’t enough to be able to build something, you have to be able to work well with other people in order to build truly brilliant things. To the day, she will answer any question that young founders may have. She believes that this synergy is what will lead to great success. The fact that the biggest tech companies of today, Snapchat, Facebook, etc. were all started by people under the age of 22. “ If you’re young and you’re starting a company and it doesn’t workout, youcan learn a lot from the process. ” Advice to Young Entrepreneurs She’s found that success is a longer term thing. Not sharing what’s not going well is one of the biggest mistakes people make. All young people should find a mentor. Try cold emailing people. It is much harder to say no to 18 or 24 year old for these requests than 40 year old. Don’t say, “ I’m in stealth mode”. Comes off as arrogant. Ideas are really cheap. All about execution. Student Question: How do you not listen to what other people tell you that you should do? The idea of the “ Quarter Life Crisis”?“ I upped and moved to California. The doctor I was working for at the time still thought I was moving to grad school. I found that changing my mindset was the best decision I could have made. Instead of being scared of this move and almost hiding it, I embraced it. I found confidants, people that I could really talk to. “ I viewed a lot of things as experiments. Becoming an adult doesn’t mean doing things that you don’t want to do. You don’t have to follow what everyone tells you to do. I want to feel viscerally excited to start my day every day. This mindset isn’t only true for work, it’s true for romantic relationships, volunteer work, etc. I decided to change my mindset with making plans with friends because I started hating scheduling things with friends. I completely resented it because it felt like something I had to do. So, I did an experiment. I told my friends that I’m not going to schedule anything because I didn’t want to feel the pressure of having things that should be relaxing on the calendar weeks in advance. ” Question from Student: Many people don’t trust young people starting ventures. How can I as a young person deal with this?“ First, the media can tear you down later. “ Ageism is definitely a thing. I really wish age or gender didn’t matter. Reporters are in the business of getting clicks. Be careful. I’ve found the best people are heads down and working. “ Things that feel both exciting and scary are what I likes the most. I always ask myself, ‘ Am I both excited and scared right now? Good. ’“ If you are a mission driven person, where excitement is the long term goal, do things today that are going to serve that longterm goal. ” Recommendations Read: Zen and the Art of Making a Living2. Ovservant mind — very impactful for education3. Learn about Daoist Thinking, Doing everything and doing nothing. 4. The Power of Habit by Charles Duhigg5. Zero to One — not quite practicing what he preaches but still a good read…and download the Calm app. Meditate every day. Check in with yourself. Final Notes One piece of advice to young people: Why are you doing it? There are people who jump onto entrepreneurship bandwagon because it’s a bandwagon. Why would anyone want to make an app for picking laundry detergent? Why are they really doing this? If it’s a problem that you cannot get out of your head, then work on it. To the ladies especially. Really don’t be afraid to put yourselves out there. Guys go in there. Really hung ho about it, attend office hours. Get out there and get yourself out there. Let people know what you’re doing and why you’re doing it. And of course, our weekly update of people sleeping. Coding is no joke! Stay tuned for our update of chapters 8 and 9 for more information on the interesting projects horizons students are working on! Thank you for reading. If you found value in this post, please share the love by clicking the ❤ button so more people can see it. Horizons is a technology school that finds the most promising young people around the world and gives them all the advantages they need to launch their successful careers in tech.","['Entrepreneurship', 'Startup', 'Technology', 'Codingbootcamp', 'Horizons Weekly']",https://medium.com/horizons-education/horizons-chapter-7-db0c122fa181,11,[],0,2,horizons,Unknown,Unknown,Unknown
Holly Valenty,Full-Stack Developer and Tech Education Enthusiast.,The one about confidence. Or the lack thereof. – HollsMarie – Medium,2018-03-21 03:46:05,medium,"The one about confidence. Or the lack thereof. It’s belt-exam week. This means that this week I will spend 12 to 14 hours every day at school, trying to further cram into my brain the information I need to pass my C# belt exam on the first try. Which, if you’ve been following along, you know isn’t always an easy thing to do. This is fine, everything’s fine. But this isn’t about how stressed I am, or how I’m still not sure how I feel about C#, or how I feel like I live on campus during belt-exam week. This is about a realization I had this morning. While working on this week’s set of algorithms (which happen to be Singly Linked Lists and also currently the bane of my existence) with two students, and one of our instructors, something was brought to my attention. I was staring at what my cohort-mate, Nick, was writing on the board, and listening to him talking things out as he went. I understood what he was writing after he wrote it, but for the life of me I could not come up with it on my own. I felt as though the vocabulary and terminology for what we’re learning just hadn’t sunk in fully yet. I mentioned this fact to our instructor, who challenged me on this. “ Is it that you truly don’t understand it, or just that you’re not confident that you understand it, so you don’t feel comfortable talking through the problem?” Holy Shit. She was exactly right. I realized this is actually a really big theme in my life at the moment. This program has challenged me in more ways than one. I’ve moved to a city where I knew barely anyone, faced some tough challenges, and every day feel like I will never understand the content I’m learning. It has greatly affected the confidence and self esteem I always felt like I had a decent amount of, and instead replaced it with a level of vulnerability I’ve never known. However, by giving into this belief that I don’t know what I’m talking about, I become my own self-fulfilling prophecy and prevent myself from learning, confirming my knowledge, or correcting my mistakes. As a learned behavior, I continue to just stay quiet, and get even more lost as I don’t speak up and ask the questions I need to ask to clarify my understanding. As soon as I change this frame of thought, however, and ask to T- Diagram the problem, or map it out so I that I can confirm I understand it as well, I realize how much I actually do know the material, and how much I have learned in the last 8 weeks. I harbor a definite fear that if I do speak up on these subjects I’m not confident in, and I am in fact wrong, that my peers will think I am a full-blown idiot, who has clearly not learned anything. But the truth is, as my friend Jack admitted while we dove into this topic, that none of us feels like we know what we’re doing. We’re all covering the material at the same rate, with roughly the same amount of prior experience, and we all feel like idiots most of the time. Comforting. After this conversation, I once again realized that the best way to learn, is by failing (see failing forward blog post for more confirmation on this). One of the biggest pieces of advice I’m finding for anyone suffering from a little bit of self-doubt, vulnerability, or imposter syndrome while learning something new is to “ Fake it till you make it. ” Find the way that you learn best, and try to channel what you’re learning into that medium. If you learn by reading, read about it. If you’re a doer, do it. Try the algorithms you’re white boarding on Repl. it with a real set of numbers; clone a website using code you’ve seen others work with; watch demos and repeat what the demonstrator is doing, comment out lines of code in your editor with what they are actually taking care of. The most important aspect is that you try. And if you fail, you’ll learn what you f*cked up even more thoroughly. Don’t be scared to speak up, because you only delay your own progress. And if you don’t believe me here’s a great little article on how to survive if you don’t think you’re a great developer. In other news: It’s the first day of spring, and here in Chicago we’ve got a toasty “ Feels like 19” happening. Lovely. I survived my first Chicago St. Patrick’s Day with the best friends around. We channeled our inner girl gang for most pictures that day. However, the casualty of St. Patty’s weekend was my bucket list being deleted from my phone. So please send over any recommendations you might have of places you think I should check out and things I must do!","['Life', 'Codingbootcamp', 'Coding Dojo', 'C Programming', 'Full Stack Developer']",https://medium.com/hollsmarie/the-one-about-confidence-or-the-lack-thereof-bf4b58cb6555,0,[],0,301,holly,F,0.9923533354849922,0.00764666451500782
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",🍪🍪🍪 On a Saturday – Emily Deans – Medium,2017-07-30 00:42:41,medium,"🍪🍪🍪 On a Saturday The weather in D. C. was unseasonably cool and rainy today, which made it slightly less painful to be cooped up inside coding all day. I spent the morning working on one of last week’s daily projects. The focus of which is on creating cookies in conjunction with a log-in page. The ‘cookie’ concept is one I’ve heard referenced quite a bit in relation to the web. People wonder whether they should “clear” their cookies, or whether their cookies are a threat to their identity protection and security. Before this past week, I honestly wasn’t really sure what a cookie was myself. To briefly sum up, cookies are small bits of data that are stored on a user’s computer and act as a sort of mediator between the server and said user. They enable a server to present their users with webpages that are customized specifically to them and can hold information around their preferences. From what I’ve been able to gather on the topic, cookies were established as a means of allowing sites to remember information about users as they navigate through pages and databases on the web. This can be helpful when you’re trying to quickly log in to your library account or when you want to continue your online shopping session without losing the items that are already in your cart (also helpful when you’re ready to finally check out and don’t want to have to re-enter your billing address and shipping info for the gazillionth time). Cookies — at their best — are quite helpful and convenient tools for those of us who engage frequently with the web. The concerns are borne primarily out of instances where folks have interacted with insecure (☹️) cookies. These can sometimes be vulnerable to hacking, which obviously can lead to a serious breach of privacy. Of course, our cookie homework doesn’t pose quiiiiite that same level of potential threat, so the pressure is off for the time being. It’s a good reminder though of why it’s important to stay mindful of the damaging implications of bad code practices — especially as I continue to move forward in this field. I’m planning to focus on the new weekly project first thing tomorrow morning and hope to have a working ‘ Mystery Word’ game ready to go by submission time Thursday A. M. Song of the Day: “ Your Love is Killing Me” by Sharon Van Etten","['JavaScript', 'Code Newbie', 'The Iron Yard', 'Codingbootcamp', 'Women Who Code']",https://medium.com/@emilyldeans/on-a-saturday-4a64e9dd1cdf,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Álvaro González San Pedro,EMEA Expansion Lead @Ironhack. Education passionate. Entrepreneur. Fanatic reader. Volunteer. Being the change I want to see in the world.,7 stunning jobs to land in Amsterdam after graduating from a coding bootcamp,2018-08-22 18:45:55,medium,"7 stunning jobs to land in Amsterdam after graduating from a coding bootcamp The developer shortage in the dutch tech scene is massive. We are launching our web development bootcamp in Amsterdam to educate a new generation of developers that will cover this talent gap. What jobs could you land after graduating at Ironhack coding bootcamp in Amsterdam? Here some ideas, keep reading! Ironhack is launching its web-development bootcamp in Amsterdam. Apply here! Since we launched Ironhack Amsterdam last June there is a question we keep receiving from most applicants: “can Ironhack secure me a job I love after I graduate from the bootcamp?”. And our answer is firm: N O, and if we did so we would be lying, because getting a job you love only depends on your hard work and motivation to get it. However, are we confident that our students will find a job they feel passionate about after graduating from Ironhack? And our answer is also firm: Y E S, absolutely. With 2k alumni worldwide and over 88% of our graduates getting a job after the bootcamp last year, we have demonstrated that tech companies love our graduates and that Ironhackers are highly demanded and employable. Getting a job after the bootcamp only depends in your hard word and motivation; opportunities are massive Which is our secret sauce to make Ironhack graduates find a job?i) to keep an updated curriculum with market needs (eg. we recently migrated from Ruby on Rails to Java Script due to higher J S job opportunities)ii) to build an experienced and education passionate team of teachers which will devote their lives to our students and alumniiii) to host the most amazing hiring weeks in town with top tech companies and to provide career services for every bootcamp batch (and to alumni) Job opportunities after the bootcamp The next question that a prospect student usually shoots is: what jobs could I be eligible for after a web development bootcamp in Amsterdam? Well, the list of potential job opportunities is infinite, but we believe the following 7 roles are the most likely our graduates would land at after the bootcamp:i) Web developer We always insists in this: a coding bootcamp does not make you a developer. A bootcamp gives you a strong foundation to become a developer and shows you the path to build a developer career. The bootcamp is just the very beginning; the real adventure begins when the bootcamp ends!ii) Software engineer Also called Computer Programmer. To clarify, a software engineer builds software, which could be desktop programs ( Spotify), mobile software (i O S and Android) or web applications ( Gmail). A web developer is a software engineer who only builds web applications. Last year, for example, Amsterdam had a community of over 90k software developers (vs. 67k in 2016), which means a year-on-year growth of +35%!iii) Technical Support & Developer advocate Less well-known, but equally relevant. Lots of companies need to provide tech help-desk support to their Operations and I T teams, for which coding knowledge are very valuable and increasingly demanded. They also need to create technical content and tools for other developers, researching new and evolving tools, providing customer support, etc. Great mix of customer support and coding!iv) Dev Ops Engineer Big tech teams usually have very heavy operation needs: Dev Ops facilitate code deployments and ensure infrastructure and backend updates are in place before the company pushes out code. They also are responsible of scripting and automation of both new and old tasks to ensure consistency. Best fit for coding graduates with some Ops background!v) Product Manager Companies fight for Product Managers with coding knowledge. P Ms are the people within a company responsible of building the right features that address customer needs: they are visionary, strategic, innovative and customer oriented. They basically act as the link between C-level/ Marketing team and the Tech team. They work on a day to day basis with developers, so the more educated they are in coding, the more valuable!vi) U X- U I Designer We have seen experienced U X- U I designers attending our Web- Dev bootcamps. Why? Well, U X- U I and Development teams need to work closely. Having coding skills adds a huge value for a U X- U I designer: creates a lot of efficiency when communicating to developers, having a good understanding of what’s possible, what’s not, and what’s worth the effort. vii) Tech entrepreneur We are seeing a new generation of entrepreneurs learning coding skills even if they are not going to be developers themselves. Why? They want to be able to understand the core part of their company (the code!). These founders are usually very hands-on and in the initial stages they want to make sure the right tech decisions are taken. Also, a coding skilled entrepreneur is likely to recruit a stronger tech and product teams and will work more smoothly with the tech team (and depending on the time available, even code himself a bit!) Above all, one thing is clear for us: the amount of job opportunities for a graduate in web development bootcamp are infinite. Career options are not limited to a role in web development; rather, a new whole world of opportunities you’ve never heard about are just waiting out there for coding skilled talent. Getting those depend highly on your hard work and motivation. And specially in the Netherlands, where the government recently estimated that there are x26 job vacancies available for every tech junior talent. You can apply now to our bootcamp. If you wan to try our coding educational experience for one day, join our I A M C O D I N G or I A M U X/ U I workshops that we are hosting every week. Also, feel free to visit us in person (email to manouk. meilof@ironhack. com to schedule an in person meeting) or ask more detailed info about the program at www. ironhack. com.","['Codingbootcamp', 'Web Development', 'Amsterdam', 'Programming', 'UX']",https://medium.com/@alvaro.gonzalez_34491/7-stunning-jobs-to-land-in-amsterdam-after-graduating-from-a-coding-bootcamp-d6b9f8ef4d27,6,['Ironhack'],1,51,álvaro,Unknown,Unknown,Unknown
Sarah Shuey,,"Week 1, The Beginning of My New Beginning – Sarah Shuey – Medium",2017-07-25 03:30:05,medium,"Week 1, The Beginning of My New Beginning This past Monday I embarked on a life changing adventure. Before I get to that, I want to talk about how I got here. I finished college in December and was lucky enough to get a job in Austin Tx. Quickly I figured out the job was not for me, it was very repetitive and did not challenge me at all. I knew this job wouldn’t be forever, but I also knew it was a great stepping stone for future jobs and that I was very fortunate to get a job as fast as I did. After three months of working there the company closed down its U S operations, this meant I was out of job. I was in this awkward place where I only had three months of experience and on my resume it looked like I was job hopping. One month later I was given the opportunity to work for an awesome company, the catch it was only temporary which meant in three months time I would be out of a job again. I applied endlessly to every job, jobs I was qualified for, jobs that I was highly over-qualified for, and jobs I was under-qualified for. If I was remotely interested in the position I sent in an application. After months of applying and not even getting as much as an email showing interest in my application I decided I need re-valuate where I wanted my career to go. After all of that I knew the path I need to take and one week ago I started at The Iron Yard a coding bootcamp. My first week The first day of school is usually full of nerves and awkward interactions. I started off very nervous, wondering “what-if”, what if I am not good at coding, what if I don’t get along with the other people in my class. I quickly realized the other people in my class came from all walks of life, we all had different interest, but somehow we all have similarities and we all bring something unique to the table that ultimately is making a better person. The first day I picked put on what we were learning and finally had confidence in myself that I can do this. With one day under my belt I was ready for the rest of the week, or so I thought. On Wednesday my class and I were informed that we were going to be the last cohort at The Iron Yard. This was the last thing I expected to happen. I had done my research before deciding to attend The Iron Yard, every website I read, and every person I talked with gave The Iron Yard such high praises talking about its wonderful curriculum and instructors. I am very grateful that I am able to attend one of the best coding programs out there. It is upsetting that they are having to close their doors but I am excited to continue on with the program and in three months say that I am an Iron Yard graduate.",['Codingbootcamp'],https://medium.com/@sarah.shuey/week-1-the-beginning-of-my-new-beginning-d0913472c1a1,1,['The Iron Yard'],1,0,sarah,F,0.9969179783051666,0.0030820216948334363
Timika Downes,"Mom of three, lover of learning, intermittent creator!",Week 1 of Coding Boot Camp – Timika Downes – Medium,2018-05-17 23:55:58,medium,"Week 1 of Coding Boot Camp There’s this feeling that you get when you have a string a really challenging workouts — your whole body feels slightly tighter even at rest, and when you complete a simple movement, like reaching for the door handle before opening your car door, your muscles let out a long, low hum of discomfort as they activate. To me, it’s a welcomed soreness. It means my shredded muscle fibers are doing the work needed to rebuild themselves. This is what week one of coding camp feels like, except that unlike with my foam roller stretch routine, I have no actual way of massaging my aching brain. :-) My mind is stretched. It’s overfed. Stuffed? Sprained? Sore? I can’t describe it — but I don’t remember firing neurons causing such lasting pain when I was younger. Similar to a week of really good, challenging workouts, though, I welcome the soreness. It feels right. It’s exactly what I expected and nothing like what I expected all at the same time. It is good. Fulfilling. Challenging. Amazing. Week 1 = Great.","['Mental Toughness', 'Grit', 'Computer Science', 'Coding', 'Codingbootcamp']",https://medium.com/@timikadownes/week-1-of-coding-boot-camp-2cb1fb7b7d44,0,[],0,0,timika,F,1.0,0.0
Stephen Geller,,Week 2: Sing the Logical Song – Stephen Geller – Medium,2017-07-26 12:03:36,medium,"Week 2: Sing the Logical Song This week was fun. With seven days’ worth of Pre Course goodness in me, I’m a now only three weeks away from actually starting in London. The week just passed had me cracking on with the command line, as well as version control using Git Hub. A few thoughts on each, before talking about some Ruby stuff learnt as well: The Command Line: So that little black box running a bunch of gibberish in the background of that sketchy program you downloaded? Yeah that’s called a terminal ( I think), and that does a lot of cool stuff. After downloading i Term, oh-my-zsh and few other things, I’ve learnt how to navigate through my entire computer pretty seamlessly, search through massive amounts of data and employ C R U D (create, read, update and delete) anywhere I want. I didn’t quite realise how much you could do with the command line, but I’m also very aware of how much it can wreak havoc if used incorrectly (beware of ‘sudo’). We got to complete a little murder mystery completely within the bounds of the command line, which was a lot of fun, but also clever in how it made you engage with the core mechanisms of the command line. Version Control: It turns out you have to update Git Hub. A lot. Github is a C V / file storage system / version control system / plug-in repository / coding Valhalla thing, which coders eat for breakfast with their morning cuppa joe. I’ve found some elements a bit bewildering, but it’ll likely become more clear as time progresses. The core add-commit-push cycle is fairly comfortable, but aspects like branching and merging are still fairly new so I’m yet to see how that will inevitably over-complicate things and have me bashing my head against a wall. Speaking of bashing my head against a wall… Bonus work: Ruby Kickstart Having completed my week 1 work a bit early, I got going on week 2’s assignment, which is to complete either Chris Pine’s Learn To Program tutorial or Josh Cheek’s Ruby Kickstart tutorial. L I K E A F O O L I decided not to go with what I know, and embarked on solving challenges in Ruby Kickstart. Now lemme tell yuh somethin’ Rick: Ruby Kickstart can be, like, hard. I found some challenges fairly straight-forward and easy to complete, and others taking entire days just to realise my syntax was slightly off. It’s kind of great fun in a way, as the satisfaction of actually solving these problems makes you keep going, and the simplicity of the solutions Cheek provides makes you start to realise how beautifully easy Ruby can be. I’m about halfway through session 2 at the time of writing this, and luckily some familiar challenges ( Deaf Grandma, Ninety- Nine Bottles) have been included so it’s been nice to revisit some old work. A lot of what Cheek teaches has not yet been implemented in my work (notably the ‘self’ function that still boggles me) and so I’m not sure if I’ve done everything entirely correctly, but hopefully by the time I reach the end of the session 3 I’ll have a clearer picture of things. We get to pick our mentors this week, and everyone will be working on the same-ish material — please somebody else do Ruby Kickstart with me — so talking through it will make things a lot clearer. Hopefully. Will leave it there. More and more excited to make the big move up to London at the end of the month, and itching to make it into the offices themselves. I’m finally starting to realise the extent to which I’m going to have to work in the next few months, and I’m still as excited as I am terrified of it. Yee-haw.","['Programming', 'Codingbootcamp', 'Makersacademy']",https://medium.com/@stephengeller/week-2-sing-the-logical-song-9c5c1451b59b,1,[],0,0,stephen,M,0.0034105039333625683,0.9965894960666374
V School,Human Centered Edtech® // An edit on #techlife for a path to fulfillment. Full Stack and XD Education.,Shut the Front Door! What’s Going to happen to Coding Bootcamps now?!?,2017-07-25 23:16:58,medium,"Shut the Front Door! What’s Going to happen to Coding Bootcamps now?!? When Dev Boot Camp announced on Wednesday that they were running their final cohort this month, and closing their doors officially in December 2017, the industry felt a wave of shock and sadness. As an outsider looking in, one might assume that this is a classic story of a small business who didn’t make it in their first 5 years. And on the surface it is. But from the perspective of a fellow bootcamp from the early days of the industry, we might as well be mourning the death of our grandfather. Not to say that D B C was an old, or outdated company. Rather, that they pioneered the very industry that we are all so incredibly passionate about. Five years ago, the coding bootcamp industry wasn’t the thriving and fast growing industry it is today. Five years ago, bootcamps barely existed. We all saw that with the rise of technology came a massive increase in the number of developers needed both in and outside of the tech industry. Computer Science degrees took too long to solve the urgent problem and had mixed results in preparing graduates for the workforce. And D B C played a critical role in proving out the need for an accelerated, hands-on education solution in the marketplace. Along with this pressing need for talent they saw a market of smart people, with a high aptitude of learning, willing to work hard to change their careers. D B C helped prove that high intensity skill training works for coding. So, where did D B C go wrong? We’ll share our thoughts, but first some backstory. V School started around the same time as D B C. Back then we were a premier software development shop building sexy software for enterprise companies including Direct T V, A D P and Logitech. We also did work for huge financial corporations and tech start ups. Just like everyone else, our clients were searching for talented developers, and started asking us what we could do to help them fill those roles. Over the years we had built out a robust onboarding process and decided to run two small classes through a custom tailored version of it to test the idea of whether accelerated, hands-on training could produce competent developers. Similar to D B C, we had success, and decided to take it further. As we continued testing our classes, we noticed that a few other companies popped up doing something similar. These other pioneers included Flatiron, General Assembly, and D B C. We decided to reach out to them, as well as others, and start building a community around us. We were impressed that almost everyone we reached out to was cooperative. As a group our goal was to prove that this could work, and we were more excited about helping our students successfully change careers than competing with each other. There was a beautiful culture of collaboration and a real effort to optimize education to solve for the need in the marketplace. There is serious magic in having passionate founders building something meaningful and having the flexibility to innovate and find ways to continue to improve the student experience. As these things go, within a short amount of time, new schools began to pop up all over the place, and with them came a flood of both copycats, and new innovation. We saw things like new languages and technology stacks, testing of different lengths of programs, direct partnering with hiring companies to funnel graduates, multiple campuses around the country so students didn’t have to travel, variations of job placement guarantees and outcomes, and “promise to pay” tuition plans that didn’t require students to pay for their education until they obtained their first job. The pace of innovation in this brand new market was staggering, and the competition became fierce. The industry started to feel crowded, especially in major tech hubs like San Francisco, New York City, Chicago, and Seattle. It’s not easy to answer, “what happened?” when referring to a company shutting its doors. For D B C, I’m sure it is more complex than financial viability or missing the mark on a sustainable business model (because, let’s be honest- there are various business models that have, do, and look like they will continue to work in the industry). For roughly two years, D B C remained one of the key leaders in the industry. Their founder and C E O, Shareef Bishay, was well respected by basically everyone. In 2014, they were one of the first bootcamps to be acquired by a larger corporation. This is what D B C said about their acquisition: “ Kaplan offered us the financial support that allowed us to concentrate on our jobs of better serving students for as long as we did. And it afforded us the financial freedom to experiment with different delivery models as well as product offerings. ” From my view of the industry, that’s when things started to change. That’s not to say that acquisitions are bad, or joining forces with traditional for-profit can’t work to the benefit of both the students and the company. But somehow, after raising money in order to be able to experiment more, D B C stayed essentially the same. While the rest of the industry was tweaking the model and finding new ways to create and deliver value, D B C started to fade. And in an industry still in its infancy, the playbook for success is still evolving, and requires that we keep iterating to stay relevant. The canary in the coal mine may have been a few weeks ago when we were gathered in Chicago with 30 other schools and industry partners as members of C I R R ( Council on Integrity in Results Reporting) to discuss outcomes and lead the charge to bring higher standards and greater transparency for the industry. We know that outcomes are king, and while most major schools were represented, a few key exceptions were noted, D B C being one of them. I don’t know why they weren’t there. Or what straw eventually broke the camel’s back and made them decide to close their doors. But for all of us that remain, what I do know, is that to succeed in this industry we have to optimize the student learning experience. The world will continue to need talented developers. So as long as we continue to provide a fast and effective pathway to a career in technology, bootcamps with continue to thrive. Michael Zaro, C E O V Schoolwww. vschool. io# D B C Shutdown #bootcamps #coding # V School","['Programming', 'Codingbootcamp', 'Coding', 'Learn To Code', 'JavaScript']",https://medium.com/@VSCHOOLHQ/shut-the-front-door-whats-going-to-happen-to-coding-bootcamps-now-d0c0ad69629,6,"['V School', 'General Assembly']",2,7,v,Unknown,Unknown,Unknown
David Kerr,software developer at canvas technology,Things I wish I had known before attending a programming bootcamp,2017-08-04 20:38:48,medium,"Things I wish I had known before attending a programming bootcamp Programming boot-camps and coding schools are doing difficult and important work. It is not easy to take hundreds of people from ‘how do I turn this on’ to hirable in a short amount of time, but these schools consistently deliver on that promise. This story isn’t meant to disparage those schools. Anything that sounds like bitterness is really just personal frustration that I didn’t start learning sooner. 1. Be aware that when you condense anything, some quality is lost. Have you ever played an audio file after it has been condensed? It sounds like you are underwater. When you condense what it takes to make someone ‘hirable’ as a developer in 3–7 months, you lose some depth and context around subjects. You learn the how and skim past the why. Even if it is in the curriculum, you will not pay it the attention it deserves. You spend your time getting things to work, and never understanding the inner mechanisms of what you are implementing. Unfortunately, there is no real shortcut around this one. Reading books like the imposter’s handbook (no affiliation) help to more quickly build a computer science foundation, but this is something that I am noticing gets slowly ingrained over time. To learn something, you have to encounter it in the wild first. 2. Embrace the struggle. As a programmer, each time you solve a problem you should theoretically not have to solve that same problem again. Reading errors and struggling to understand what exactly happened doesn’t just help you solve the problem you are experiencing today, but any problem like it you experience moving forward. It seems like there are infinite things that can go wrong, but there aren’t. So… take the time to understand why things go wrong, and next time that thing goes wrong fixing it will take half the time. 3. Reading course reviews online through websites like Coursera helps, but it doesn’t necessarily paint an accurate picture of the school. As with any public forum, what you find are the extreme opinions. Either people are screaming into the void, blaming the school for their own shortcomings, or everyone appears to be unrealistically positive about the experience. Connect with several current students independently (either on Twitter or Linked In) to get a better sense of the experience. These schools are changing incredibly fast. What you are sold online and in interviews might no longer be representative of the actual experience of students in the school. 4. Schools differentiate themselves by their hiring statistics. These statistics are poorly regulated and unreliable, so look for transparency from the school to sense how confident you can be in the numbers. Some schools require assessments and completed projects beforehand. It is safe to assume that these schools would have better hiring rates since they have more information about how successful you will be as a programmer when they admit you. Other schools round up as far as what they consider a relevant job to include in their stats. Hiring statistics are important but not something to base a decision on entirely. 5. Get comfortable with Git Hub. Being confident on Git Hub helps you program with confidence. The ability to quickly recover from mistakes makes you more comfortable making mistakes. Making and learning from mistakes is how we learn. Here is a great resource to play with the Github C L I (command line interface). 6. Get comfortable with your file directory. It sounds basic, but being comfortable navigating your file system from the terminal is crucial to becoming a respectable developer. Strong system skills is a differentiator, particularly for students coming from programming bootcamps. Going to a programming bootcamp is a no brainer if you are discontented, looking for a second career, looking for a first career, or just scared of robots replacing you in your job. Inevitably, automation will creep into every industry until it replaces most jobs. Either be the person programming those computers, or be fight to be the 1/10 people who gets to keep their job to check the robots work. The decision is an easy one, but choose carefully because there are as many bad schools as their are good.","['Programming', 'Codingbootcamp', 'Schools', 'Coding']",https://medium.com/@dkerrious/things-i-wish-i-had-known-before-attending-a-programming-bootcamp-bd23c4cf75d6,0,[],0,2,david,M,0.0035582779766708743,0.9964417220233291
William A. Mooney,Christ Centered Dev. || Developer || Blogger,2nd Week — Codecademy Pro Intensive: Build Front-End Web Apps,2017-09-01 04:48:58,medium,"2nd Week — Codecademy Pro Intensive: Build Front- End Web Apps This week has been exceptionally productive. Over the course of it I have had several night’s of only getting about five hour’s sleep but I don’t feel tired… Why? Because I know I will succeed. Sow into your dreams and you will reap should you not faint… This week I have been pouring thru the available content on Codecademy Pro as well as using the free Udacity course Intro to Java Script to learn from. I’m of the opinion that repetition & learning the same concepts via different sources will give you a better understanding of the material. I have been progressing thru all of the track’s they have for Java Script ( Currently only two now; third one was removed this week) which is providing ample practice. Codecademy is doing an excellent job of providing clear instruction on the topic’s covered and I enjoy doing the many projects/quizzes. The second week thru this course it covered how to use loops to repeatedly execute the same code, how to use Java Script E S6 methods to iterate over arrays which simplify work previously done with loops, how to use various syntax to control the flow of code execution in Java Script and also learned about variable scoping in Java Script which is an important concept that lets developers know where a variable can be accessed in a program. If you want to learn a foreign language checkout Memrise I haven’t been reading this week because I’ve been devoting my extra time to Udacity. I have also been keeping up on Memrise to continue learning Tagalog ( The Philippines national language) & Java Script but I haven’t spent much time on it. As I continue my journey of learning Web Development & Computer Programming I am enjoying it more each day. There are so many wonderful choice’s & career path’s to consider… While looking thru Udacity Nano Degrees I noticed such a diversity of the available career paths. I had hoped to be employed by the end of end of this year but that doesn’t look to be a reality at this time. The benefit to this though is I will be able to continue improving my skills & spend more time with my amazing girlfriend. Colossians 3:23–24 New King James Version ( N K J V) And whatever you do, do it heartily, as to the Lord and not to men, knowing that from the Lord you will receive the reward of the inheritance; for you serve the Lord Christ. That wraps up this week. Be sure to follow me & check in each week for updates as well as for the final review of the Codecademy Pro Intensive: Build Front- End Web Apps. Take care & Jesus bless you all. Christ Centered Dev. || Developer || Blogger","['Programming', 'Codecademy', 'JavaScript', 'Codingbootcamp', 'Web Development']",https://medium.com/@williammooney/2nd-week-codecademy-pro-intensive-build-front-end-web-apps-1e06c815550d,0,[],0,5,william,M,0.0038724765712618,0.9961275234287382
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 23 – Mike Brave – Medium,2018-09-12 02:20:49,medium,"42 Piscine Day 23 Edit: This is part of a series that culminated here, Next post. Previous post. Yesterday I had just about mentally checked out, like someone hanging from a cliff losing their grip, fingers slowly losing strength, only four fingers hanging on, then three, then two, then at the last moment another pair of hands reach out and pull you up to safety. I may be being dramatic, but I was on the verge of giving up, and someone did care enough to pull me out of my mental rut. Took the time to chat with me about what things were holding me back, to give advice and then most importantly came and sat with me to follow up and to make sure I understood. The followup was where the magic was, because it was unprompted, unasked for and above and beyond the call of duty. How can someone give up on themselves when other people are rooting for them? Thanks man, you saved me. Due to that interaction last night, today has been the most productive since Friday (it’s Tuesday now). I’m going back over all the old assignments, making sure I can get through all of them and they are going a lot faster now (significantly so). It’s reminding me of a lesson I learned from my past in art, so bear with me it’s storytime. I’m learning to code coming from a background in Art. I’ve always made art and I probably always will, but my medium changes, my approach changes. What I create is shaped by who I am, and what I make helps to shape who I become. When I read articles like Paul Graham’s Hackers and Painters I find comfort in the fact that I’m not alone in how I feel about this, about being one who does both. Perhaps I approached it backward chasing art first, but circumstances were such I had more access to people who would teach me painting and photoshop than I did to those who could teach me H T M L and C (despite looking for them). But today’s workflow has reminded me of one of the most valuable lessons I learned as an artist. I was taking a painting class at university, my professor was one who had previously taught at the Art Center in Pasadena (one of the most prestigious design schools). We were lucky to have him as a professor but the relationship between student and professor felt a lot like having an unloving father, you would try and try and try for approval and only be given the slightest of acknowledgment. To receive something as small as a “good job” was impossible, we were held to the highest standards and pushed ourselves past them. I constantly pulled all nighters, using my time immediately after waking up to do my design and planning (sketching, color theory and the like) and then using the long slog of sleeplessness to do the tedious parts like actually painting, you know, brush strokes and filling it in. During our third week once we understood the flow of the class and knew what was expected of us our professor proclaimed that this week there would be only one project, and it was to be our masterpiece, all time would be dedicated to just this project and that he expected great things from us (contrast this with our usual 5–14 a week). So we did our part, we lost sleep, we worked our assess off, reviewed each others work at odd hours of the morning, and really did everything in our power to make the best piece of work we were capable of. Presentation day comes, we put our pieces on the wall, we are given critiques, we take notes on how we would improve it later. Then once the class had been graded, he told us that the real grade for the day would be in our ability to destroy what we had made and to “kill our babies”. People cried, I came close to tears myself. Some people took the failing grade instead of crumpling their painting. Then after we had calmed down some he lectured us on how “you are not your art” to “remove your ego from your work” and instructed us that the assignment for the next week was to create the same piece, but this time better, this time faster and this time while actually making time to sleep. Then to do it once more. So we did, in less than half the time, and it was the most valuable lesson I ever learned as an artist. What we made the third time was infinitely better than what we made the first, and we learned more from this than nearly any other project. I also learned to decouple my self esteem from the work I had created, and to be comfortable doing things again and again until I gained the skills instead of grasping the pride felt from the first accomplishment. That’s how it’s been today with the code I’ve been working on, I am remaking things, things I sort of already know how to do, and I’m learning more this time than I even thought to know the first time. I may be learning more in the next three days than I had previously learned in the three weeks before, and this right after I was on the verge of giving up. This morning at 8 am there were only 3 of us. Right now at 7 P M the count is around 75. Almost everyone here is working hard, either studying for the exam or working on the B S Q project in teams. Everyones mood seems improved and spirits seem higher, at least for those who are still working. Until Tomorrow then.","['Art', 'Ecole 42', 'Code', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-23-a7fc4e8ccba7,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Calvin Lin,Programming & Productivity Enthusiast,My Experience at FullStack Academy Thus Far – Calvin Lin – Medium,2017-07-28 02:40:51,medium,"My Experience at Full Stack Academy Thus Far As the title suggests, I’m currently enrolled at Full Stack Academy. It’s a Javascript focused 13 week long coding bootcamp. As of right now, I’ve completed eight weeks in the program. Below I reflect on how the past couple months have gone. Back in March, I was still working in the construction industry as a mechanical drafter. Unfortunately, both the industry and my position bored me to tears. Since it was my first position out of college, I accepted that I had simply made a mistake when I accepted that shiny first full time job offer. So I began to search for other types of work and programming came to mind. I had completed several computer science courses but had never pursued the interest until recently. So I scoured the internet for free programming material and stumbled upon freecodecamp. com. I was hooked from that point on. I found myself coding every day after work and on weekends. There was something satisfying in solving logical coding problems and understanding what I was doing. By April, I had made the decision to transition to software engineering. At this point, I had three options for making the leap to software; self-study, going back to school for computer science, or a coding bootcamp. I was not willing to spend the next several years working on a second bachelors degree and I was definitely not disciplined enough to self-study my way to success. Therefore, I went with the bootcamp option. Long story short, I applied to a bunch of bootcamps in N Y C and ended up attending Full Stack Academy. The admissions process was somewhat strict. They gave us coding problems to solve before they interviewed us over Skype. The interview itself was a technical interview where we were given problems to solve in real time with an interviewer. It has been eight weeks since I began this program and I have to say it’s an amazing experience. I learned many web programming and computer science concepts. In terms of technology, we worked with Node Js, Express, S Q L, Sequelize, j Query, Sa S S/ C S S3, React, Redux, H T M L/ J S X, and Passport J S; an instance of everything we need to build a complete full stack web application. The most important thing I’ve learned in these past eight weeks is to learn concepts and not to memorize syntax/frameworks. There seems to be an endless amount of new technologies/updates coming out every year. To understand what you’re coding helps immensely when learning new technologies later on. On the other hand, there is always documentation available when you’re struggling to remember syntax. At this point, would I recommend someone to join a coding bootcamp? Most definitely if it makes sense for you. For many, the bootcamp model makes sense; it’s a large commitment for a short period of time. Many people can’t afford to spend 3–4 years attending college again. Before you apply though, keep in mind the following:(1) Not all bootcamps are created equal. Check the quality of their program first. (2) Understand you’re not going to have time to always see friends and go out at nights anymore. Bootcamps take attendance and tardiness seriously. If you come in late often from staying up the previous night, they will probably remove you from the program. (3) You will be coding for the majority of the day. Make sure you’re comfortable with sitting in front of a computer for several hours on end. But also remember you can (and should!) take small breaks. (4) Programming is N O T a solo task. You’ll be working with others either directly as a pair or on a team collaborating. Get used to working with others.","['Programming', 'Fullstack Academy', 'Codingbootcamp']",https://medium.com/@calvin_lin/my-experience-at-fullstack-academy-fed04f75b455,4,[],0,9,calvin,M,0.0059202749550516034,0.9940797250449483
Taufik M. Aditama,"Aniqma.com, CBO and hobby-oriented filmmaker","Ideally, Anyone Can Be a Programmer – Taufik M. Aditama – Medium",2017-07-07 10:44:07,medium,"Ideally, Anyone Can Be a Programmer Me, interviewing Arigi on Kernel, a volunteering program initiated by Refactory to teach programming to young kids in suburban area. Arigi Wiratama is one of a living testimonies to the statement that “anyone can be a programmer”. The youngest mentor on the Refactory programming bootcamp, Arigi’s story is not only interesting but also heroic. This is a story of the determination of a young man who literally started from scratch, and then skyrocketed his position until he leads one of the big projects in Refactory, and only God knows where he’ll stop. I joined Bix Box (startup where Refactory founder is connected), 5 months prior to Arigi. So I had the leisure to watch his growth. And it is amazing, even though it begins with a meeting that tends to be unimpressive. A few days prior to him joining, we at Bix Box received short notice that Taufan ( C E O of Bix Box) offering a 17-year-old boy, freshly graduated of high school, for a chance of internship. That is Arigi. He looks exactly as he should be: a young, tiny boy, with a typical Arek Suroboyo vibe. His eyes are full of sparkle, filled with great enthusiasm for learning programming, which surprisingly, is a whole new world to him. That’s that. There are nothing special i noticed. Bummer. Later, Arigi was placed under Gufron wings (currently, C O O Refactory). A ball of fervor. That is my second impression on Arigi. He keep bouncing back and forth behind Gufron just to see how Gufron work. Gufron who is a patient man by default, often become uncomfortable for his guts. Once or twice, I heard Arigi’s question was returned with the answer “ Google first before asking”. But, looking back, i sincerely thinking that this is what greatly contribute to form Arigi splendid work habit as programmer: Google first before asking. During his internship, Arigi diligently following each of our extreme schedules. Some of the time, we even goes overtime 2 straight days a row only to prepare for an apps demo schedule. I think, through this process, Arigi was forged to adapt in a militant tempo. Now, Arigi at the age of 18 and almost 19 years old, is leading a Refactory project which resulted in 5 star satisfaction. Even Steve Jobs (according to ‘ Bite in the Apple’ written by Chrisan Brennan) at the age of 18 years old is still losing his way. He and Wozniak ( Apple cofounders) sold an illegal tools to hijack the phone charge to save money to go to college, which later he only use to take ceramics, poetry and dance classes. It’s safe to say that Arigi had an early start than Steve Jobs. Arigi is every cell that represents Refactory. His existence in the programming world is the premise that represents all of the essence we trust in Refactory. That is everyone, with the proper support of environment, amplified with their strong sense of self determination, ideally anyone can be a professional programmer. And Arigi internship is the basis of the Refactory establishment. We want to provide a thriving environment to those who have a strong determination to skyrocket his career as programmers. Who knows, in the not-so-distant future, the next icon of technology after Steve Jobs, is coming from Indonesia, or we hope, from Refactory. This story was published first on Refactory Blog ( Visit to read the Indonesian version).","['Programmer', 'Programming', 'Codingbootcamp', 'Coding', 'JavaScript']",https://medium.com/@taufikmaditama/ideally-anyone-can-be-a-programmer-ec039366aa76,1,[],0,3,taufik,Unknown,Unknown,Unknown
TheFeminineCoder,"Web development student. Documenting the journey that began on January 23, 2017.",For Loops For Forever – TheFeminineCoder – Medium,2017-02-04 23:14:03,medium,"For Loops For Forever First off, I’m sorry for not giving an update on what’s been going on this week. I knew going through this bootcamp was going to be difficult and time consuming, but D A M N! I feel like all that I’m doing while I’m awake is reading, coding something wrong, coding something right, feeling euphoric, feeling defeated, or staring at a monitor while not being able to process one fucking thing thats happening in front of me. With that being said, this week (like last week — but worse) has been an even more emotional rollercoaster. Except this time, I’m primarily at a plateau of negative feeling. This plateau lasts for quite sometime, and then I will complete an assignment and feel like a badass! After that, I go into the next subject, or assignment, begin to struggle, and then question if I should even be there trying to learn this. Has anyone else reading this ever felt this way??? Will this pass? Or should I just approach these “plateaus” with a different mentality? O K! Now that all that depressing shit is on the table, here’s what went down with the actual code! I finished this assignment on 1/31. I think we were supposed to use while loops or something. I don’t remember. I feel like I did this forever ago. Fortunately, this assignment didn’t take me the whole 24 hours of the day to do! The instructions were that we had to create a “program” that told the time, and we were given specific variables and challenges we needed to complete. The next assignment I’m sharing is one I did on 2/1. This one gave me grief. I’m not lying when I say that if I wasn’t at campus with all the other students around, I would have thrown my computer. Every time I tried to test my code within the console on Chrome, my whole computer would stop working and I didn’t know why. I wanted to cry. And on top of that, the little loading indicator in Chrome was spinning so slow that I felt like it was taunting me. I couldn’t even exit out of the browser. I was going to lose my shit. Whenever I’m at the point of almost losing my shit (or have already lost my shit) whether it’s my husband’s fault or not, I start yelling at him. And since he wasn’t there for me to yell at, I started blowing up his phone with texts. I told James, my husband, that every time I put in an algorithm wrong, and it involves large numbers, the computer freaks out and stops responding. He told me to force quit Chrome, and that didn’t work. He then told me to check the activity monitor…and…well…. . this was the rest of the convo…. I don’t know what that third, from the bottom, message means, B U T I know the last two ones are 100% true ;) Y A P! Somehow I wrote an infinite loop, and my life went to shit for like an hour. After James explained to me that it was the computer’s fault and not mine, I felt better and was able to fix the code. The end result is below. One of the more simple one’s I did this week is shown below. I don’t have any harsh feelings towards it. It was refreshing to not have to take more than an hour to figure it out. It was a real confidence booster! Oh and here’s a picture from before I started the Javascript section, when I was still working on html and css. So this one must have been completed…. maybe…last Sunday? I’m satisfied with the end result. There’s only some minor differences. I’m grateful that I was able to get a better grasp on css before the Javascript section started. (left) Assignment given, (right) My work. Well, I don’t know how well this post has turned out. It’s hard to think about anything other than coding right now, so my knowledge and abilities in other areas are probably rapidly declining. I should go work on my J Query now. It was easy, and then it was hard. I started understanding it again, and now I feel like I’ve lost it again. Monday we start Python, so I’ve really got to get J Query down because I still have a whole section of A P I/ A J A X stuff to do. God help me not lose my shit. - The F C One of my first J Query assignments!","['Programming', 'Web Development', 'Codingbootcamp', 'Women In Tech', 'Women Who Code']",https://medium.com/@thefemcoder/for-loops-for-forever-1f3e81b06d41,0,[],0,3,thefemininecoder,Unknown,Unknown,Unknown
CodeCore,Training the programmers of tomorrow in hands-on intensive programs taught by industry professionals. PCTIA Accredited. Join the #CodeCoreLife,Road To Code: Jennifer Cheng – CodeCore – Medium,2017-07-05 05:45:33,medium,"Road To Code: Jennifer Cheng Jennifer Cheng Today we’re shining the spotlight on our soon-to-be Code Core alum Jennifer Cheng! Name: Jennifer Cheng Life Before Code Core: U B C Computer Science Student Her Road To Development: Jennifer first found out about Code Core several years ago when we did a small Ruby workshop at Harbour Centre, but it wasn’t until May 2017 when she joined us full time. Back then, she was testing the waters of higher education (as many of us did), and she wasn’t quite set on what she wanted to be or what she loved doing. However, Jennifer eventually found her calling in computer science, and after doing a couple of introductory courses, she went all in. Post graduation, Jennifer took a couple more courses related to databases at B C I T, but ultimately decided she wanted to concentrate on coding. That’s when she remembered that workshop at Harbour Centre she took all those years ago. Looking back at her time at Code Core, Jennifer found that her technical background gave her a leg up during class and that it was easier to apply the theories and frameworks from her undergrad when paired with hands-on labs. Her tips for future bootcamp students include capitalizing on the community and networks you make during class, practicing as much as you can, and to just T R Y ( Even if it might not work, at least you’ll be learning!). What Is She Building: Based off her love of animals, Jennifer created a web app called Hello Pets!. It is an application that helps connects those with pets (dogs, cats, and birds for now) with other pet owner so that they can meet for playdates. Non-pet owners are also welcome to sign up for the app and connect with the community. Users post photos and messages, and other members can respond in the comments. In addition, Jennifer has also incorporated a separate section dedicated to showcasing animals that are up for adoption by the B C S P C A to draw attention to animals in need. This application is being built using Ruby on Rails and A J A X on the back-end; H T M L/ C S S, Java Script, j Query, and Bootstrap on the front-end; Postgre S Q L for the database; and also utilizes the Google Maps A P I. Connect with her at our upcoming Demo Day Thursday, July 13! R S V P: https://www. picatic. com/ C C Demo Day July13 More ways to connect with Jennifer: Linkedin: https://www. linkedin. com/in/jennifer-yc-cheng/ Git Hub: https://github. com//jennifer-yc-cheng Email: ashowga@gmail. com","['Programming', 'Codingbootcamp', 'Learning', 'Web Development', 'Life']",https://medium.com/@CodeCoreYVR/road-to-code-jennifer-cheng-f14cc5577217,3,[],0,3,codecore,Unknown,Unknown,Unknown
Kyle Thayer,"I am a PhD student studying programming, culture, and education at the University of Washington. http://kylethayer.com",Coding Bootcamps: Women Overcoming Intimidation – Bits and Behavior – Medium,2018-08-11 00:20:38,medium,"Coding Bootcamps: Women Overcoming Intimidation Credit: W O Cin Tech Chat How do the motivations of women who attend coding bootcamps differ from the motivations of women who attend undergraduate computer science ( C S) programs? A few months ago, I met Sherry Seibel at a computer science education conference ( S I G C S E), where she presented preliminary results on this question (abstract, poster). She did a qualitative study where she interviewed four female C S graduates, and four female coding bootcamp graduates, asking them about their experiences. Here are some of the differences she found between female C S graduates and bootcamp graduates: Three of the four C S graduates considered themselves to be be good at math, while none of the bootcamps graduates considered themselves to be good at math All bootcamp graduates and only one C S graduate were surprised to find coding was not as difficult as they had expected. All graduates do full stack web development. None consider this work to involve “complex math. ” One C S graduate said they were more comfortable around women, while three bootcamp graduates said they were more comfortable around women. All felt negatively affected by “know-it-alls. ” All now believe coding is a skill anyone can learn. ( These results are consistent with a separate study of 9 women who attended coding bootcamps. The study is unfortunately not currently available online) From these results, it appears that coding bootcamps can provide an opportunity for women who suffer from a confidence gap and therefore feel intimidated by “math”, “know-it-alls”, and predominately male environments. This confidence gap matches other studies showing that women tend to feel less confident about math and science, even though they are just as capable as men. The women in Sherry’s study who attended coding bootcamps overcame their intimidation, and even learned that some of that intimidation was based on faulty knowledge. In particular they found that their expectations on the the difficulty of coding and the necessity of math did not line up with reality. ( Note: another study found that some employers, with jobs requiring less math and theoretical knowledge, preferred bootcamp graduates. ) While it’s good to know that bootcamps are helping some women who are discovering programming later in life, there still remains a larger problem of women feeling intimidated by programming due to a confidence gap and inaccurate information. We need to do better at telling people what programming is, what programming jobs require, and we also need to make our programming environments less intimidating. — — — — — — — — — — — — — — — — — Previous Post: Coding Bootcamps vs. Computer Science Degrees: What Employers Want and Other Perspectives Next Post: How Culture Influences Debugging— — — — — — — — — — — — — — — — — References: S. Seibel, “ Social Motivators and Inhibitors for Women Entering Software Engineering Through Coding Bootcamps vs. Computer Science Bachelor’s Degrees: ( Abstract Only), ” in Proceedings of the 49th A C M Technical Symposium on Computer Science Education, New York, N Y, U S A, 2018, pp. 274–274. Lyon, L. A. , & Green, E. (2018, February). Women’s Attraction to Coding Boot Camps. Lightning talk presented at the I E E E S T C B Conference for Research on Equity and Sustained Participation in Engineering, Computing, and Technology ( R E S P E C T), Baltimore, M D. Rittmayer, Ashley D. , and Margaret E. Beier. “ Overview: Self-efficacy in S T E M. ” S W E- A W E C A S E E Overviews (2008): 1–12. Lindberg, Sara M. , et al. “ New trends in gender and mathematics performance: a meta-analysis. ” Psychological bulletin 136. 6 (2010): 1123. Q. Burke, C. Bailey, L. A. Lyon, and E. Greeen, “ Understanding the Software Development Industry’s Perspective on Coding Boot Camps Versus Traditional 4-year Colleges, ” in Proceedings of the 49th A C M Technical Symposium on Computer Science Education, New York, N Y, U S A, 2018, pp. 503–508.","['Programming', 'Coding Bootcamps', 'Women In Tech']",https://medium.com/bits-and-behavior/coding-bootcamps-women-overcoming-intimidation-cbbcac9080c2,4,[],0,5,kyle,M,0.017754788200754927,0.9822452117992451
Tech for Life,"Education initiative by @campusnorthuk introducing people of all ages, skill-sets & backgrounds to the fundamentals of digital skills",Introducing Sage Future Makers Lab – Tech for Life – Medium,2018-02-02 10:12:35,medium,"Introducing Sage Future Makers Lab Our search has begun for the U K and Ireland’s # Future Makers Sage Foundation & Tech for Life have teamed up to scour the U K and Ireland seeking out future inventors, trailblazers and innovators. We’ll be armed with coding, Chat Bot and A I experts who’ll be sharing their skills and knowledge in a bid to find the next best U K and Irish tech leaders. The chance to win an exclusive work experience placement at a top tech company like Sage is up for grabs! So what is a Chat Bot? According to Botpress…“ The most intuitive definition is that a bot is software that can have a conversation with a human. For example a user could ask the bot a question or give it an instruction and the bot could respond or perform an action as appropriate. ” Big brands such as Starbucks, Dominos and Spotify are all using Facebook Messenger Bots to allow their customers to interact with them. They’re an easy alternative when ordering coffee, food or sharing that one song you’ve been listening to on repeat. They can simulate a human conversation with the bonus of being relatively cheap and always available to chat. So where does A I come in to all of this? Apps such as Facebook Messenger have a platform which makes it easy for companies to build Bots that allow their consumers to interact with them. The Techopedia website sums up A I as:“ Artificial intelligence ( A I) is an area of computer science that emphasizes the creation of intelligent machines that work and react like humans” An A I powered Chat Bot uses a mixture of Machine Learning and something called Natural- Language Processing ( N L P). In easy terms, this means it can be programmed to understand text or verbal communication and can respond appropriately. Mimicking that of a human. Why are we passionate about A I & Chat Bots? The world is embracing the likes of Siri and Alexa more and more. Oracle conducted a survey asking businesses which emerging technologies they were most interested in and 80% of them declared how they’re already using, or plan to use, Chat Bots by 2020. It’s an exciting side of technology that’s going to play a big part in our future. With that being said, our Sage Future Makers Lab programme is a great opportunity for young people to have a taster of what’s involved and who knows, we might even discover or help inspire the next Elon Musk or Steve Jobs!“ Tell us more about the programme!” We hear you shout! Step 1 We’ll be spending one day in Newcastle, Reading, Manchester, London and Dublin where we’ll be inviting # Future Makers to come along and explore this technology with us. The day will consist of a hands-on workshop where you will learn about Chat Bots and how to create them with the help of experts from Sage U K’s very own tech team. Sage U K will be spotting the top talent to invite them to… Step 2 Twenty of the best digital superstars we’ve spotted on our nationwide tour will be invited to join us for the second stage workshop in September 2018. It’s here that you’ll develop your own project using A I. Sage’s leading tech mentors will be on hand to help you create, design and build the future… Step 3 By October 2018, a select crew of creators, the ninjas of tech, will be offered work experience in a top tech company. This is a once in a life-time chance to find out what it’s like to be part of an exciting, innovative tech team. Here’s those all important dates for Step 1 Newcastle: Sat 17th March Manchester: Sat 28th April Reading: Sat 23rd June London: Sat 14th July Dublin: Tues 14th August Who should apply to join us? We are looking to find the next inventor of Siri or Alexa! Ideally you’ll between 14-18 with an interest in design and programming, we want to hear from you! We’ll be covering everything from concept to development of a fully functioning Chat Bot and we need a host of budding designers and developers to help out. This is an amazing opportunity to develop your skills, enhance your C V and get ahead of the rest. A phenomenal future career in tech awaits… Click here to register your interest for Reading and here for London or if you want to join us in Dublin register here!! Alexa, Siri, Tesla… what’s next? The future of tech is in your hands! E: hello@techforlife. co. uk T: 0191 308 2807","['Bots', 'Codingbootcamp', 'Young People', 'AI', 'Education']",https://medium.com/@TechforLifeUK/introducing-sage-future-makers-lab-5cc86638c33f,0,[],0,0,tech,Unknown,Unknown,Unknown
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Creating  a Business Website Using the Sinatra and SendGrid Ruby Gems,2018-04-03 11:02:27,medium,"A website (in progress) I’m building using Ruby and Sinatra, and incorporating Bootstrap for the first time Creating a Business Website Using the Sinatra and Send Grid Ruby Gems One of our workshops this week was to create a business website using Sinatra. The site needed to have the option to contact the business using the Send Grid A P I to send an e-mail to the fictitious business owner. This was a great learning experience because it tied in the front-end work we’ve been learning with a very simple back-end framework using the Sinatra gem. Before starting this program I made a very basic website using Wordpress for my dad’s business (southphillywoodcraft. com). I decided I wanted to create this website from scratch at some point in order to use it as part of my portfolio, and to learn as much as I can about the front and back-end of web development. This Sinatra project was a perfect entry-point. This is definitely a work in progress, but I’m glad I had the opportunity to jump into this! Sinatra Takes the Stage I decided ahead of time that I wanted to incorporate Bootstrap into this project because it seems like a powerful styling took that we didn’t have much time to dig into yet. In order to use Sinatra and Send Grid we set up our folder structure and initialized it to create our Gemfile:bundle init Inserted the two gems:gem 'sinatra'gem 'sendgrid-ruby' Then installed them via the terminal:bundle install In our Ruby file we required these two gems, and set up a few different pages to work with, along with a ‘completed’ page to post the params to after inputing our name and email address:require 'sinatra'require 'sendgrid-ruby'include Send Gridget '/' do  erb :homeendget '/about' do erb :aboutendget '/contact' do erb :contactendget '/gallery' do erb :galleryendget '/sign-up' do erb :sign_upendget '/completed' do erb :completedendpost '/completed' do puts "" P A R A M S"" puts params. inspect puts "" P A R A M S""@my_first_name = params[:first_name] @my_last_name = params[:last_name] @my_email = params[:email] @company = params[:company] puts @my_emailfrom = Email. new(email: ""joseph@mysite. com"") to = Email. new(email: @my_email) subject = "" Welcome aboard, #{@my_first_name} #{@my_last_name}!"" content = Content. new(type: ""text/plain"", value: "" Welcome aboard #{@my_first_name} #{@my_last_name}. We're so excited to have you on board with us, along with all your co-workers at #{@company}!"")mail = Mail. new(from, subject, to, content)sg = Send Grid:: A P I. new(api_key: E N V[' S E N D G R I D_ A P I_ K E Y']) response = sg. client. mail. _('send'). post(request_body: mail. to_json) puts response. status_code puts response. body puts response. headers erb :completedend We also learned how to utilize our layout. erb template file by incorporating <%= yield %> to call the content for the other pages. This is a very powerful tool because it allows you to make any changes to the page layout template all in one place. To test out Bootstrap I inserted their link and scripts, then incorporated their navbar, form and some image classes to get a feel for it. These:…went in my <head> tags of my layout. erb file to incorporate both Bootstrap’s C S S styling and Java Script functions. ( Perhaps if my site were more complex it would be better to put the J S script sources at the bottom of my layout. erb file so that it loads last. It worked either way with my simple site because the only thing using the J S script was the navbar dropdown. ) The Homepage I decided to use Bootstrap’s navbar-brand class for the image in the upper left-hand corner, as it seems like a nice styling option, and something I’ll likely want to do on future websites. ( There is definitely more I’d like to do in terms of the flow of the page, like give more space between the image and the header, for example. All in due time. ) The Homepage The Gallery There is also more I’d like to do in terms of styling the gallery, but for now, it was great to learn some of the basics of incorporating Bootstrap’s classes to create a thumbnail gallery that floats so it’s responsive to page width: Gallery Page The Sign- Up Page With this page I wanted to incorporate some of Bootstrap’s form classes to style the input fields so they didn’t simply run across the page with no space between them: The dropdown works! Sign- Up Page Storing Environmental Variables In this process we also learned how to store environmental variables to our machine so we don’t need to make our A P I keys public. First we created our . bash_profile in our home directory, then used the nano (or text) editor to add our Send Grid A P I key as an environmental variable using:export V A R_ N A M E=var_value Then calling it to see if it stuck:echo $ V A R_ N A M E This allowed us to call the Send Grid A P I key in our Ruby file and keep it private at the same time! I’d love to hear from you! Let’s connect using the following function:function lets Connect(yes) { if (yes === true) {  console. log(""linked In"");  console. log("" Twitter""); } else {  console. log(""thanks for reading!""); }}","['Web Development', 'Ruby', 'Sinatra', 'Bootstrap', 'Codingbootcamp']",https://medium.com/@josephcardillo/creating-a-business-website-using-the-sinatra-and-sendgrid-ruby-gems-43f6511ffa10,0,[],0,5,joseph,M,0.004069495880582216,0.9959305041194177
Tiffany Price,,Oakland Codes: – The Bridge – Medium,2018-05-09 18:19:16,medium,"Oakland Codes: Bay Area Non- Traditional Coding Programs On May 8, 2018, I partnered with Tech Hire Oakland to host a panel at the Kapor Center featuring various non-traditional coding programs from around the Bay Area in order to allow Oakland and other East Bay residents to learn about some of the local opportunities available to learn to code. Participating programs included Code Berkeley, Hack Reactor, Hackbright Academy, Kickstart Coding, and Rithm School. You can find all the resources we shared and a link to the slides at: bit. ly/oaklandcodes. In addition to each of the programs presenting their 'secret sauce’, Hackbright Academy announced their arrival to Oakland! They’re currently accepting applications for the first Oakland cohort. They also announced two $8, 000 scholarship opportunities for Oakland students. Kickstart Coding announced that it launched it’s first Oakland cohort on May 7, 2018! Their program is part-time and much cheaper than most bootcamps. You can take each course component as a standalone or commit to the whole series. Rithm School announced it will be working with the Kapor Center to offer one half-off scholarship to an Oakland resident! Through my work on Hack Reactor’s Scholarship Advisory Board, we’ll also be giving two full-tuition Hack Reactor scholarships to two East Bay folks of color who get accepted into Hack Reactor’s program this Fall. While the Hackbright scholarship info can be found on their website, stay tuned for more details on the Kapor Center website on how to access all the other scholarship opportunities just mentioned. We had an amazing group of program alumni talk about the benefits and challenges they faced in their coding bootcamps. Here are some of the key takeaways I got from speaking with program staff and graduates: Know thyself. Why do you want to learn to code? Do you best learn independently or do you need more mentoring support? Do you preference an all-female or all-person-of-color experience? Do you have children or have a schedule that requires you to have a flexible learning structure? Figuring out your pain points and must haves is the first crucial step. 2. Do your research. After you have gotten a clear understanding of what your needs, expectations, and pain points are, really get to know your program options. Visit programs in session. Speak with instructors and program alumni. Talk to companies who have hired program grads. Go to program graduations to see the types of products students create. Take your time to pick the right program for you. 3. It can be tough to get that first technical job (especially in the Silicon Valley) — so, hang in there. Some folks got a technical job quickly after bootcamp. For others, it took 8 months or even longer to get a position. Others used their supplemental learning to do freelance work or started their own company. Be creative in exploring job opportunities, and hang in there!4. A program’s network and mentorship value can make the difference for a positive program and job search experience. Some programs provide multiple mentors for one student. For one grad panelist, this support was invaluable when the job hunt too much longer than she thought. Other programs have one mentor or job coach supporting many students. Regardless of what the program you choose offers, work your networks to increase your chances of landing that first job. There are lots of technical networks available. Check out the bit. ly/oaklandcodes resource to see a few, like /dev/color or Women Who Code. 5. The money problem is real. Think carefully through the various financing options you’re presented with. At some point, money will have to be paid back, so plan accordingly. Save. Consider crowdfunding campaigns. Look for scholarships. If the cost is too high for your budget, know you have many other opportunities, like…6. Don’t forget your local community colleges. Berkeley City College is one Bay Area community college that has launched it’s in program, Code Berkeley, to address this program. While some of the biggest bootcamps cost $20 K, you can take 3 semesters worth of courses at Code Berkeley with a similar content structure for a little over $400. So, don’t sleep on what community colleges can offer to help you get the technical role you desire. The bottom line is there are S O many options, including some amazing free ones like freecodecamp. com (amazing online platform with in-person meet-ups all over the country), so choose what’s best for you!","['Web Development', 'Oakland', 'Coding Bootcamp', 'Scholarship']",https://medium.com/kapor-the-bridge/oakland-codes-48a5e42b99df,3,"['Hack Reactor', 'Hackbright Academy', 'Rithm School']",3,9,tiffany,F,0.9964690814868399,0.0035309185131601572
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,"Documentation, Interviews, and Meetups – L.J. Yockey – Medium",2017-07-09 01:00:57,medium,"Documentation, Interviews, and Meetups This has been a pivotal week, I think. Moving along Thinkful’s curriculum and other assignments, I navigated the upgrade of a Node package with breaking changes, had an informational interview with a Senior Web Developer, and attended my first meetup! Sequelize Changed?! My final Capstone, a full version of the Hospit Alert demo I created for my second Capstone, features a S Q L database and an A P I running on Express/ Sequelize. The first app I created using Sequelize, a basic blog A P I, was built using Sequelize v3. My models looked like this: I installed Sequelize v4 for Hospit Alert. Due to some of the breaking changes in this upgrade, my Hospit Alert models looked like this:class Methods and instance Methods have been removed from the define method in v4. Instead, they are constructed separately. For basic models like the ones pictured above, the changes are quick and easy to implement. … Of course, when I built my Hospit Alert models, I didn’t realize that I had installed a different version of Sequelize. I used class Methods and instance Methods and had no idea why my app wasn’t working. After a few hours (yes, hours) of unbelievable despair and frustration, I finally compared the package. json file on my two apps. I saw that the apps were running two different versions of Sequelize (*face-palm*). The up side was that I was able to implement changes to my app using documentation as my only resource. As with many moments as a developer, the situation transitioned from discouraging to empowering. Of course, I had to Tweet about it: Once my models were fixed, I built routes for all 3 of my models: User, Hospitalization, and Friend. I built the User and Hospitalization routes first. By the time I built the Friend routes, I got cocky and started writing too quickly. When my tests failed, I stayed up late to troubleshoot. Rachel and I instantly assumed that the issue was with my promise chains. Nothing we tried worked. Finally, I realized that I was missing a single keyword in each test. I think this is what everyone was talking about when they said that it’s important to be strong in the fundamentals. Informational Interviews While many of the mentors at Thinkful are working developers, they still require students to have an informational interview with a Developer outside of Thinkful. Knowing that I will be in L A next month, I took to Linked In to find someone at a larger company in L A. We met on Skype for almost an hour, and it was very insightful. I was able to get a good picture of what Jr. Developers may do at various companies and the importance of diversifying while looking for jobs. Some of the information was surprising, but it was all great! I’m glad we got to meet. My First Meetup Another Thinkful assignment is to attend a local meetup. I procrastinated on this assignment. Like ( I assume) many developers, I’m a bit of an introvert. Walking into a room full of strangers is scary and uncomfortable. I finally found a meetup and R S V P’d. It was a Demo Day, so, of course, Rachel wanted me to present something. I was so nervous that I almost didn’t present, but I’m so glad that I did. I demoed both Hospit Alert and Kitty Opinions. The 3 hours went by so quickly! I didn’t want to leave the meetup. To be able to network and chat with developers of varying backgrounds and skill levels was amazing! I feel like I have arrived. Branching out of my comfort zone with my code and in life is what made this week so important. By next weekend, I should be done with Hospit Alert and portfolio. Then, it’ll be time to start looking for a job! I still can’t believe how quickly I’ve progressed. My new life is right around the corner! Thanks for reading!","['JavaScript', 'Coding', 'Codingbootcamp', 'Sql', 'Nodejs']",https://medium.com/@Ljyockey/documentation-interviews-and-meetups-9e942cc331ce,1,[],0,1,l.j.,Unknown,Unknown,Unknown
Chris Jones,,Are Coding Boot Camps Worth It? – Chris Jones – Medium,2018-08-21 17:52:03,medium,"Are Coding Boot Camps Worth It? This question has gotten the attention of those interested in transitioning to a tech career since roughly 2011, at which time the first coding boot camps began to appear. Studies examining data between 2013–2017 show that boot camp enrollment has increased by a factor of 10, from 2, 178 students in 2013 to 22, 949 students in 2017. These students are likely drawn in by the growth projections indicated by outlets such as the Bureau of Labor Statistics, which forecasts a 15% growth in jobs from 2016–2026, combined with the statistical comfortable salary. While this growth is promising for those who aspire to enter the tech realm, this number must be viewed in context with market competition, which is growing far faster than the number of openings. I began my boot camp experience at age 41, with a background as a career mechanic, and only a few basic ed courses from community college. I had spent the previous year learning basic H T M L, C S S, and Java Script, so I had a reasonable foundation before beginning the course. I chose a 6 month program for full stack web development, which came at a price tag of $8, 500. Upon starting the course, I noticed that I was likely among the top 3 oldest students in the cohort, which was not surprising from the research I had done prior. I was initially surprised by the number of engineers, chemists, and other professionals that were replete throughout my cohort, which I internalized as a signal that I was making a wise career move. The curriculum started with the basics: C S S, Bootstrap, H T M L, and wire frames, and then quickly moved into Java Script ( E S5) and j Query. Although I felt that the course was moving fairly quickly through those early topics, I would later refer to the early part of the course as being much easier/slower, as the topics appeared to progress at more of an exponential level of difficulty than a linear one. I was spending approximately 50 hours per week on the curriculum in total, which included additional learning. I gathered that some students were spending significantly less, which was reflected by the lack of quality and completion rates of the homework assignments. Despite feeling overwhelmed at times, I performed quite well. I don’t draw that conclusion from my grade (although I finished with an ‘ A’), but from feedback from the instructors, T A’s, and other students. After coursing through Node. js, relational and non-relational databases, and M V C patterning, the last trimester of the course covered T D D, B D D, React, P H P, Laravel, and a few others. Upon comparing the curriculum to other boot camps, I discovered that many homework assignments were exactly the same across many schools. After graduating the boot camp, it was time to begin the job hunt. I had begun to apply to a few positions a few weeks prior to the end of the boot camp to get a feel for the market, but now I was completely focused on honing my resume and the articulation of my skills. I applied to anything that didn’t specify ‘senior developer’. The response rate was abysmal. In the month following the boot camp, I had applied to over 100 companies, which resulted in about 10 phone interviews and 3 de facto interviews. During phone interviews with recruiters, the questioner seemed very interested right up until I was led into disclosing the fact that my resume projects were from the boot camp. Neither their complexity, nor professionalism appeared to have been taken into consideration, and the interviewer would immediately begin to move toward ending the conversation. Of the 3 interviews I was granted, only one resulted in an offer, which was for a role that was tangential to development, but not an actual developer position. Although the position involved substantially less pay than the salary suggested by boot camp staff, I accepted the offer, as it came with an opportunity to move into a software role within a reasonable time period. Because I had exhausted most of my resources with a recent home purchase, and then invested in the boot camp, I was not financially able to extend my job search out over several months. It was interesting to note that it was the students who held degrees in S T E M fields who were generally the first to become employed from my cohort, even though they were not necessarily the most exceptional coders in the group. The boot camp does not provide hard data for its alumni, which casts doubt that such statistics would show a favorable trend. In conclusion, I found the staff at the boot camp to be highly competent and supportive, and I learned a large volume of information and skills in a relatively short time frame. However, my experience has been that the traditional degree in computer science is still overwhelmingly preferred among employers. The market is currently saturated with junior level developers, and most employers are adamant about having commercial experience and/or a relevant degree. Although it is possible to enter the tech industry by gaining skills from a coding boot camp, factors such as age and education will play a vital role in securing employment following the boot camp, irrespective of skill level. For a person below a certain age threshold who already holds a 4 year degree, a boot camp is likely to be a viable avenue to a career in tech. For all others, proceed with caution, as the market is not as friendly to older developers just entering the field with less education. Freelancing is also an option, but keep in mind that establishing a network and customer base will typically be a lengthier process than finding employment. Good luck in your pursuits!","['Web Development', 'Software Development', 'Software', 'Web Design', 'Codingbootcamp']",https://medium.com/@chrisjones0517/are-coding-boot-camps-worth-it-ff3a3e315fed,8,[],0,0,chris,M,0.13713656176653735,0.8628634382334627
Bushra Taimoor,Currently enrolled in Fullstack Academy under Web Development Fellowship program,FullstackAcademy.push('Bushra') – Bushra Taimoor – Medium,2018-05-16 01:37:39,medium,"Fullstack Academy. push(‘ Bushra’) I am Bushra, born in the twin cities of Pakistan, I never imagined my life taking a detour that would bring me to America; the land of opportunities. My journey here began in the winters of 2016 and have continued an uphill expedition ever since. Rawalpindi (my city of birth) is a metropolitan city which over time developed and found its existence amidst the neighboring area of our state’s +capital. My infatuation with technology started with the first computer that came to my house and was further fueled when I first received a Nokia 3310. Nothing fascinated me more than being able to play a game of Snake simply with the touch of few keys and the knowledge that I could contact my parents whenever I want and no matter their location. My urge to learn more about technology led me to pursue engineering immersive studies and eventually guided me towards getting a degree in Robotics Engineering. It was during undergrad when I found my true calling; sitting in the lecture of Algorithms and Computing. I witnessed first hand the impact programming can make, and I knew this was what I wanted to do. When I came to America, although I had a degree and could easily start a career in the field of automation and robotics, it wasn’t something that excited me and my interest drew more towards the adventures of coding. To continue my journey, I took online courses and learned the basics of Java, H T M L and C S S. The world of programming offers myriads of options and I found it difficult to pave a successful path out of it that would bring me closer towards achieving my goal. I got discouraged and started to search for other career options after facing rejection in interview calls. It was my husband who brought to my attention the growing popularity of bootcamps and how they were helping people make a successful shift towards a career in Web Development. My research helped me narrow down the top coding bootcamps in New York City ( N Y C) and Fullstack Academy was one of those schools. In the days to come, I reached out to alumni, asked about their past experience, and how the bootcamp helped them to achieve their goals. It was the consistent positive replies of Fullstack Academy’s past graduates and their stress on the importance of learning Java Script as it is intended to become the future standard for web development related coding that made my decision of coming to Fullstack Academy that much more steadfast. I took the initial step and applied to Fullstack Academy through their website by filling out a form which required me to tell in detail why I was interested in joining their bootcamp and what I expected to achieve by the end of the program. The admissions team got back to me in a few days and I was required to complete an online assessment test to clear the initial screening for the program. I was provided with relevant links and resources along with the topics I needed to cover before I opted to give the test. Apart from the resources provided, I practiced programming problems through websites like Codewars and Coderbyte. This helped me apply the theoretical concepts I had studied in a coding environment and guided me in improving my logical thinking skills when it came to resolving programming coherence. Another resource that guided me in the right direction was Cracking the Coding Interview book by Gayle Laakmann Mc Dowell. This book not only provided questions for practice, but also gave detailed explanations on how to break down a problem. It provided me with the best practices for tackling interview questions and on portraying my best image forward. My online assessment performance was not good enough to send me straight through to the Foundations phase. I was asked to attend a Boot Camp Prep course on-campus (4 weeks long) and only if I performed well was I to be selected to move on to the foundations phase of the program. Initially I was disappointed with the news because I was pessimistic about making it through amongst the large group of people I was competing against. As the prep course cruised along, I found my footing and was glad to have been given the opportunity to learn (at the very least) Javascript. This course strengthened my understanding of the language and provided me with a solid base to continue with unto the program. It was a rewarding course and the confirmation of making it through to the foundations really boosted my self confidence. My journey so far at Fullstack has shown me the magnitude of work that can be accomplished with programming and the scale of impact coding projects have in todays world in general. Moving on what I hope to achieve after graduating is to continue my journey of learning and staying up-to-date with the current technology used in market for frontend and backend engineering. We live in “modern days” but when it comes to a career in S T E M, there are still reservations and open bias as to whether women can succeed or excel in such areas of expertise. I aspire to join other females on the path of changing this redundant mind set and making a difference one step at a time towards achieving my goal of starting a career as Software Engineer. I aspire to work in a company that supports and promotes diverse culture and has taken initiatives to bridge the gap of gender equality in tech. Bloomberg is one such company which took initiatives like Women’s Economic Development(a program that trains women in market skills so they can support their families) and increased their support of tech organizations which work towards their common goal of increasing women participation in S T E M.","['Programming', 'Bootcamp', 'Full Stack Developer', 'Codingbootcamp', 'Engineering']",https://medium.com/@bushrataimoor21/fullstackacademy-push-bushra-8a323d39cba4,3,['Fullstack Academy'],1,6,bushra,F,1.0,0.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Sprint Stop – Emily Deans – Medium,2017-08-12 21:54:29,medium,"Sprint Stop Today was a bit of a self-maintenance day. I woke up early and went for a walk, cooked a delicious breakfast and prepped some food for the upcoming week, read ( Roxanne Gay’s fantastic ‘ Hunger’), did some non-code (!) writing, had a sweet conversation with my sister, played music, finished a few sudokus ( I’m minorly-to-majorly addicted to these and don’t typically have time during the week to do)… I did work a bit on my resume and weekly project, but honestly, most of the day was spent offline and offscreen. I was initially feeling guilty (and a bit like a slacker) about not having a more technical, code-specific post today, but then took a step back to evaluate and try to reconfigure that mindset a bit. This isn’t a sprint (though sometimes it does indeed feel that way). In choosing a work/life redirect and a bootcamp model to jumpstart that process, I’m moving down a path that I hope will hold a lifetime of continuous learning and growth. Staying committed to this long-term goal and vision for my life is going to mean also staying committed to self-care and striving for a healthy balance and N O T pushing into a burnout zone and sacrificing my long-term quality of life. As I discussed in a previous blog, taking care of yourself and participating in restorative practices and activities that rejuvenate your mind, body, and spirit, are C R I T I C A L, especially when you are going through a demanding and stressful time. I’m grateful to have had a day to slow down and catch up with some personal things and situate myself for a successful week ahead. Moving forward, I’m going to try to structure my time to allow for more days like this in my never-ending and ever-evolving effort to attain balance. Song of the Day: “ On My Side” by Gordi (went to her show last night at Songbyrd in D C — A M A Z I N G)","['Entrepreneurship', 'Codingbootcamp', 'Women Who Code', 'Code Newbie', 'Lesbians Who Tech']",https://medium.com/@emilyldeans/sprint-stop-558766abd42a,1,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Verity Honebon,,"Week 5 — Goodbye Ruby, hello JavaScript – Verity Honebon – Medium",2017-07-09 13:08:58,medium,"Week 5 — Goodbye Ruby, hello Java Script I was really excited to start Java Script this week as it’s been quite a long time since I started with Ruby and I was keen to get to grips with something totally new. When I was at university I really enjoyed comparing and contrasting the similarities and differences between the ancient languages I studied and to explore their relationships with modern languages. At the start of the week we were warned that there were pitfalls to be found in comparing Javascript too closely to Ruby and now I’m on the other side of the week I can see these more clearly. The main pro of comparison is obvious — using concepts and syntax that I had initially learnt in Ruby gave me a foothold and very superficial understanding of Java Script. However, I can also see that in comparing too closely you can be constrained by incorrect assumptions you make about the new language based on the old language. Our coach, Mary’s opinion — that we should acknowledge similarities between he to languages but treat them as separate entities — was good advice. My first experience of Javascript has been very positive. The syntax was a pain at first but I have the feeling that I am going to end up liking it a lot. I spent a lot of time this week exploring the structure of the language, using the Chrome developer tools to see both the web page and the inner workings. Getting visibility via console. log() has also been a great help in understanding the workings of Java Script and in debugging. As always, the Maker’s approach to learning has been really great. After a rocky week last week this week’s challenge has been an acid test for me regarding my progress and in the way I approach new things. Before this course I think the idea of getting to grips with a new language in one week would have been daunting to say the least but the way we have been taught and coached over the last five weeks means this has not seemed like an insurmountable hurdle. I’ve started to think about next weekend’s challenge, where we will be asked to build any program of our choice (our “side hustle project”). I don’t have any concrete ideas as of yet but would like measure potential ideas against these criteria:(i) for it to be possible to have a M V P in the two day time limit. Choosing something might be harder than I think as so far we have been given challenges which the coaches know can be finished. I don’t have the experience of gauging the difficulty/length of projects yet but I’m hoping planning and consultation with other developers will help with this(ii) fun enough to keep me motivated(iii) forces me to learn new things, i. e. not a clone of a previous challenge (but not too much new stuff — see (i))","['Programming', 'JavaScript', 'Codingbootcamp', 'Coding', 'Programming Languages']",https://medium.com/@verityhonebon/week-5-goodbye-ruby-hello-javascript-e570ad2f5775,0,[],0,0,verity,F,1.0,0.0
Turing School,"This account is now inactive. For the latest from Turing, visit our community’s Medium publication instead: https://medium.com/turingschool",Fear Has No Place Here – Turing School – Medium,2017-02-03 13:47:00,medium,"Fear Has No Place Hereby Jeff Casimir We’re less than two weeks into a new American presidency and we’ve gotten a glimpse of what privilege combined with greed, fear, and stupidity can do. We have individuals with no relevant experience appointed to run sectors of our government. We’ve hinted at nuclear war. We’ve undercut both N A T O and the U N. And late last week we turned xenophobia and racism into national policy. When the president issued an executive order banning immigration from seven predominantly- Muslim countries we saw that morals and logic are not welcome in this administration. Under the guise of preventing terrorism, we were told that our safety depended on widespread discrimination. Every year thousands of Americans die at the hands of other Americans, behind the wheel of a car, or in our quagmire of a healthcare system — but our nation’s top priority should be to persecute outsiders based on skin tone and religion. Not today and not tomorrow, Mr. President. As an organization, Turing works to create a world where the people building technology represent the people using it. Our mission is to unlock human potential by training a diverse, inclusive student body to succeed in high-fulfillment technical careers. Under this presidency the only responsible option is to fight. We believe that the color of your skin does not determine the greatness of your potential. By the end of 2017 our student population will be representative of the racial and gender population of Denver County. Our largest challenge is to recruit a higher number of Hispanic and Latino/ Latina students. We will never ask about citizenship status and welcome the D R E A Mers and others fighting to improve their life to grow inside our walls. A person cannot be illegal. No matter the color of your skin or the place you call home, you are safe here. We believe that potential is evenly distributed but opportunity is not. We are approved by the U S State Department to sponsor M1 Foreign Student Visas. We’ll exploit that privilege to welcome students in the greatest need and show them what that the United States is still a land of opportunity. Foreigners, refugees, and immigrants are welcome here. We believe that your gender identification does not influence your aptitude. Our team is half women and we’re watching the gender representation of the student body trend the same way. Women are respected, valued, appreciated, and safe here. Men are respected, valued, appreciated, and safe here. Persons somewhere else on the complex gradient of gender identification are respected, valued, appreciated, and safe here. We believe that religion can be a powerful force of good in the world. We know that all faiths have a common belief in the respect, value, appreciation, and safety of our fellow human beings. Your religious beliefs or choice not to have any are welcome here. We create the people our president is most afraid of: the educated, the skilled, the independent, and the strong. Our community is fighting to build the health and happiness of all. Fear has no place here. Jeff Casimir is the Executive Director of Turing School of Software & Design. He has spent most of his life exploiting the system and disrespecting authority.","['Politics', 'Coding Bootcamps', 'Turing School', 'President Trump', 'Immigration']",https://medium.com/@turingschool/fear-has-no-place-here-782568e08800,0,['Turing School'],1,64,turing,Unknown,Unknown,Unknown
Livia Ishak,,Is going to a Coding Bootcamp guarantees you a job as a Software Engineer?,2018-08-14 00:03:24,medium,"Is going to a Coding Bootcamp guarantees you a job as a Software Engineer? I was a finance major and my goal was to work in the finance industry since freshman in college, you know places like the giants J P Morgan or Merrill Lynch. Two years later, I finally made my way and was working as a Trade Specialist in an asset management firm. We handled various manual processes in my team. It was definitely an opportunity for me to step up my game and try to come up and find solutions to make my work more efficient. Through that experience, I enjoyed working on developing automations of those processes more than the work itself. I love analyzing trends, patterns and create! At this point, I realized finance was not the right career path for me. I wanted to be able to create and architect tools and websites to simplify how people work. I was debating if I should go back to school and get a C S degree. Two things that you need to think if you want to switch your career: Money and time. Will I be willing to spend a great amount of money to pursue this career? Do I have time to start from zero with my current situation? After a lot of research and thought, I decided to join a coding bootcamp program. I definitely enjoyed my journey in the bootcamp. There were a lot of struggles that came with it but I pushed through and graduated about one month ago. After finishing the program that’s when reality starts to kick in. I applied rigorously 10 jobs a day (mostly). Keep in mind that the pool in the Bay Area is extremely competitive. You are really competing against the best! Knowing the situation that didn’t stop me from applying (and you shouldn’t. ) I received many rejections. However, from hundreds of companies that I applied for, I received a few responses and proceeded to the technical interviews. I would say the hardest part about this whole process are the technical interviews. Acing the technical interviews are definitely attainable. You need to be consistent and study hard and you will get the hang of it. The more technical interviews you have the better. You will be able to manage your nervousness and boost your confidence. Long story short, I finally got a job as a Software Developer through networking. Networking is extremely important too! Although is a part time job, it is definitely a starting point. You learn best when you are in a work setting environment. You face with real situations, real issues and real people. My fellow Bootcamp grads, I would love to hear your job search journey; what worked for you and what didn’t. Or if you are at the beginning stage of your job search or thinking about joining a bootcamp program. I would love to hear your preparations and thoughts!","['Programming', 'Coding', 'Codingbootcamp', 'Coding Interviews', 'Job Search']",https://medium.com/@liviaishak1/is-going-to-a-coding-bootcamp-guarantees-you-a-job-as-a-software-engineer-37308cf34d18,3,[],0,0,livia,F,1.0,0.0
D Saunders,Excited about Big data + education + economy,Week 0 at Galvanize Data Science Immersive – D Saunders – Medium,2018-09-09 01:32:44,medium,"Week 0 at Galvanize Data Science Immersive Yesterday was the last day of week 0 of the Galvanize Data Science Bootcamp. Monday starts 3 months of immersive training designed to prepare our cohort of ~20 people to be highly employable at graduation. I’d like to contribute to your opinion on whether it’s a good idea as an investment towards a data career in 2019 and share an experience that feels like being in the center of the tech world during data science’s “wild west”. My degree is in business administration. I helped co-found an edtech Saa S company (education technology)(software as a service) to deliver American academic and workplace knowledge to international students and adults. I also analyzed student and faculty data for my university system leadership. It was clear I lacked the tools and confidence to find complex patterns in the data generated in both roles, and felt this is the area where I had the motivation and disposition to succeed. I believe my options were to choose to get a masters, do online courses, find a job with data science training, or complete a bootcamp. I choose to do an in-person bootcamp because I felt I would learn the material well and be adequately recognized for having done so, and I have the time and interest to take the deep dive. The masters lends more credibility, however it is a larger risk and investment. I think it would be the best choice if there were not several indications that erode the dominance of masters programs. From what I’ve read, the job market is so hot for this specialty that employers will be more lenient on credentials. I asked a few employers I liked, who confirmed. Galvanize advertises their 6-month placement rate for all their graduates within the field, stated to be 85%, and higher in the S F bay area. I also found this bootcamp on the resumes of people in positions I admire. Finally, Galvanize has a strong hiring relationship with a company I favor, and this seems like a good portent. From all that, it appears bootcamp may qualify me to enter the field without a masters, which will allow me to reach the field faster and with current, highly-applicable skills. The first week of class is optional and called week 0. It’s supposed to cover the Python programming language which Galvanize requires its applicants to know up to coding at a certain level in a time limit. They also require basic familiarity with the S Q L programming language and a good grip on statistics ( I’d say 2 semesters of college stats). The python language was named after Monty Python and this means I find film references in the learning materials and that almost makes it worth it right there. It is built to be easier to read than other languages and best for analytical work (as opposed, for ex. , to C which is faster). It’s the industry standard for data science. S Q L is a “querying” language — it’s for looking up stuff in databases (and administrating them). It’s also easy to read, but compared with Python, feels like a children’s dictionary. source Python? Even though this week started with the absolute basics, I learned a lot. My cohort has to be familiar with coding functions already, but going over the basics still reveals lots of nuance. If any of this sounds like spaghetti to you, don’t worry, I’ll explain what counts. On day 1 I learned: True * False = 0“potato” < “turnip”the housing problem in S F is worse than you think10 points if you can explain the above. Technically I learned: How to run jupyter notebooks on a virtual machine“you are always somewhere in a tree of folders”more unix terminal commands Google collab ( Google docs for code) Correct me if I’m wrong: To change an object’s class, always assign to a new variable. You can put anything in a set except a list, a dictionary, and a set The broadest overview I can think of to describe python: Everything is an object which belongs to a class(aka type). The primitive types include strings (looks like “cow”), integers (55), floats (5. 0), booleans ( True or False only), and emptiness ( None). You pass objects into functions which, when run, act on them and often produce a result. Sotype(“cow”)returnsstrwhich is short for string. So this tells me that the object “cow” is a string, which is useful because it determines the behavior and properties of the object and how the object will get along with other objects. Python has a list of built-in functions, like calculator operators (+ — / *), the all-pervasiveprint()which displays whatever you put in the parentheses, and open() which opens files. Then each class of objects have methods, which are functions which act specifically on that class of object. This is sensible because you don’t want to do the same thing to “cow” as you do to a number. Example:sentence = ""cat "" + ""in "" + ""bag "" + ""in "" + ""room""returns sentence = “cat in bag in room” and not cat + 2in + bag + room, which would be math. This is because addition is one of the magic methods ( I’m serious we spent half Friday learning about magic methods) that the creator of python programmed to produce concatenation for strings and summation for numerical types. Then you can use loops, like “for loops”, which control where the computer looks for information, and “if statements”, which control what output to return based on conditions. There are also collections of objects. The basic collections are lists, tuples, dictionaries, and sets, all which come with their own grammar, so to speak, to employ them. You can only do so much with all that before running into brainteasers and really convoluted solutions. Luckily, there are aptly-named libraries, which you use when you want more and simpler functionality. I’ll be getting into those plenty. The symbol for python and a distillation of its rules link Like learning a foreign language, to understand python it helps to look under the hood, which we did a lot during the week. A fundamental concept I’m working on is mutability. If I understand:every object in python has an address in memorystrings and the numeric types are immutable because “they cannot be changed but rather return new objects when attempting to update” sourcecollections, except tuples, are mutable because they can be changed in-place. changing an object in place is called a side-effect, and often needs to be avoided. Perhaps they contain addresses/pointers to immutable or mutable objects which when changed elsewhere, change the contents of the collection?therefore when you put a list, dictionary, or set in a tuple, it becomes a mutable object Later in the week we looked very briefly at libraries and matrices. If that wasn’t fun enough, we made sure to get to classes, which allow you to create new types of objects and set their attributes and methods. My cohort seemed to be generally enthused about classes, but they are a dedicated bunch. Along the way our knowledgable instructors liked to sprinkle in brainteasers and authentic frustration by asking us to try to complete problems for which convenient solutions have already been made. I’m left wondering what to do with “an object is a special kind of dictionary accessed by dot notation” and the class has already moved on. You’ll hear from me next week if I don’t melt.","['Programming', 'Python', 'Galvanize', 'Coding', 'Codingbootcamp']",https://medium.com/@dmariesaunders/week-0-at-galvanize-data-science-immersive-14d0aa52832a,8,['Galvanize'],1,1,d,Unknown,Unknown,Unknown
it’s jennilyn,"Proud to be a #WomanInTech. Software developer, lifelong learner, runner, reader, cake-eater. Live bravely.",JavaScript Day 1 – it’s jennilyn – Medium,2017-06-06 01:20:08,medium,"Java Script Day 1 Well, here goes nothing! “ Real programming” has begun and I’m anxious yet excited (as usual). And I coded something! Do you want to play Rock, Paper, Scissors with your computer? Check it out here: https://jennilynhowell. github. io/3. 1-rockpaperscis/ A prompt will appear allowing you to play Right-click on the page and choose Inspect Element That will bring up a panel; look at the Console tab to see what the computer’s doing Refresh to play again! Today was a much-needed review for me as many of the concepts we covered (truthy/falsey, conditionals, data types) are things I learned before the cohort began. We looked at some weird things that can occur in J S if you aren’t careful about your programming (or if you are coding instead of sleeping!). Based on tonight’s reading, I have a sense tomorrow will be much more in-depth. I sort-of understand the [this] concept but it’s not quite there. Best I can explain it’s Java Script’s pronoun. Now for a little down-time… 😌","['JavaScript', 'The Iron Yard', 'Learning To Code', 'Coding', 'Codingbootcamp']",https://medium.com/@jennilynhowell/javascript-day-1-579bce317dad,0,[],0,0,it’s,Unknown,Unknown,Unknown
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Halfway – Emily Deans – Medium,2017-08-05 01:19:19,medium,"Halfway Welp. This week has been brutal but I’ve learned a ton and made it through. We’re now six weeks in, which means we’re H A L F W A Y through our formal curriculum. Can’t believe we’re already at this point. Feels like we’re just getting started… So grateful for my classmates, instructors, friends/relatives, Carly Rae Jepson, C A V A, and caffeine. I wouldn’t be where I am today without you… Song of the Day: “ Cut to the Feeling” by Carly Rae Jepson","['Code Newbie', 'Codelikeagirl', 'Women Who Code', 'Dctech', 'Codingbootcamp']",https://medium.com/@emilyldeans/halfway-9b04d8a23a6a,1,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Michael Thanh,Software Engineer — I like to build things and daydream.,"Well, by that same argument, why pay for university studies at all?",2018-09-14 03:46:09,medium,"Well, by that same argument, why pay for university studies at all? You could technically just take all the courses in a given degree by searching in M I T Open Courseware or ed X. The reason people pay prices for good education is for the community as well as the personalized teaching and coaching. There are often numerous problems and various nuances with coding and problem solving where a mentor is highly valuable. Unfortunately it seems like for our original author, the latter 6 weeks lacked that. I don’t think paying $20, 000 for a good bootcamp is a poor choice. It just seems paying $20, 000 for this particular bootcamp is a poor choice.","['Coding', 'Codingbootcamp', 'Software Development', 'Programming', 'Education']",https://medium.com/@michael.thanh/well-by-that-same-argument-why-pay-for-university-studies-at-all-1c4c2f0b949a,2,[],0,1,michael,M,0.004965539448960512,0.9950344605510395
Umang Pahwa,On a Tech hunt!,My First Week at a Coding Bootcamp! – Umang Pahwa – Medium,2018-05-18 15:06:43,medium,"My First Week at a Coding Bootcamp!15/05/2018 Day 1: - Finally I’m here. I had so much pent up excitement towards attending this venture that now when I’m finally here, I can get a good sleep. Our first day commenced with an orientation session. But before that I met my fellow boot-campers and we had a quick chat about where we all came from and what our education history has been like and how much familiar we are with coding etc etc. Meraj ( Founder and C E O of The Hacking School), then joined us shortly and he had some motivating words to say and mentioned that there is a big world out there in which we could flourish iff we put in our heart and soul into learning and developing code. He told us about how he started out as a Bio- Tech Engineer and his interest in developing algorithms for trade bought him into the game. After that Afzal took over and we got started with some basics. He told us about how request-reply architecture works, what happens to the U R I ( Uniform Resource Identifier) when we enter queries and how routes work. He then gave us a very high level overview of what all we’re gonna cover in the initial weeks of the boot-camp and made us dual boot our lappies with Ubuntu 18. 04 and made us install an I D E for Java Script ( J S) i. e. Web Storm. Simultaneously we looked at some H T M L code, hosted our Ubuntu home directories on our localhost server, played around with a few Dev Tools that Google Chrome has to offer and also used Chrome’s console to run some J S commands. We created a form using H T M L, which as of now did nothing : P, but did make us familiar with how a P O S T request would work. Afzal then showed us one of his simple but cool creations, a web-app which compared Git Hub profiles of two users and would establish a winner out of the two. That he showed us, to again make us understand how a G E T and P O S T request works, how some React code looks like and how we can start developing our own small projects which need not be super-complicated. Day 2: - Today we’re ready to develop something real for the first time, although a very simple and beginner level attempt, the fact that we’re going to implement something got me excited enough. Before kick starting with our task of the day, Afzal told us a few things. So there’s this Chrome plugin that displays all the Web- Tech that’s been used to develop the Web- App that we are presently browsing. Quite a cool plugin. Goes by the name What- Runs. Post this, Afzal introduced us to Web Pack, which bundles all sorts of files into one js file, and told us that we’ll be using it quite extensively in our projects. Then just to give an overview of how routes work in a web-app, Afzal showed us one of his application, that was developed on React, to make us focus on how routes were assigned. Following this, he introduced us to M V C ( Model- View- Controller). It was a very high level overview which we would dig deep into sometime in the future, but it was helpful in giving us an idea about how the Web- Architecture operates and how M V C is the crux of it. Since long I had this dilemma, that if I ever pursue web-development, I might miss out on developing on platforms that the masses use, particularly the cell phones. Our web-apps could run on mobile devices for sure, but it just isn’t as cool as a native application. Fortunately, Afzal cleared this confusion of mine by mentioning about React Native, which converts our web-app into a native application, with just a few lines of code. That was a relief. Without wasting any time, we kick started out task of the day, which was, to clone the Google homepage. Easy? No way. This task was assigned to us so that we could get more hands on with H T M L and C S S. What this task did surely eliminate was the misconception of C S S and H T M L being fairly plain and simple in nature. There are a lot of things we do un-intentionally that can mess up the whole styling aspect. Taking baby steps and going about it in a very careful manner finally helped me finish this task but it took quite some time to develop something as simple as this. Day 3: - I forgot to update my blog the previous night, hence I started typing about my 2nd day at T H S. Post that I continued working on my side project, i. e. cloning the Hacker Earth developer’s page. There were certain elements, about the web-page that I was cloning, which would’ve needed customised shapes to look exactly like the one’s on the original site. For e. g. weird shapes which I couldn’t design using C S S ( I could but that would’ve been too time consuming). Afzal then introduced me to Clippy, a simulator where any shape could be crafted by dragging your mouse and what also gets generated is C S S for the same. That helped me deal with the aforementioned issue. Our task for today was to gets hands-on with Java Script ( J S), for which we attempted problems on Hacker Rank. Since I’ve had a background in attempting such problems using programming languages like C, Java, Python, it was fairly easier for me to cook up the logic, and all the time went into figuring out which J S component to use. After solving some of these nagging problems, we had a small discussion of what A P Is are and Afzal gave a very high level overview about it and emphasised a lot on the importance of it and how extensively we’ll be using it in the future. We had had our hands dirty with J S today, but there were a few components that needed to be addressed. The latest release, i. e. the E C M A 6 J S, had some components that debuted, e. g. the reducer function. We were made familiar to these new issues and how it made life easier for the programmers. Then some of us had fundamental doubts about the architectural level functioning of J S and how it’s Non- Blocking nature had a role to play in making Internet Browsing a smooth sail today. Day 4: - I’m still cloning the Hacker Earth home page for developers and it’s taking me a lot of time to do that and it’s because of the small elements which needs extensive Google searches in-order to figure out their working mechanism. While doing so, I stumbled upon a really awesome library for popular symbols, known as Font- Awesome. That helped me incorporate a magnifying glass on my search bar. Afzal use to demonstrate usage of tools, libraries, etc through a T V screen, connected to his laptop via a H D M I cable. For some reason, there was no T V screen available today. In-order to void our dependency on the T V screen, we installed the Zoom app on our machines that provides a great service of video conferencing with many additional features like screen sharing and access as well. All demonstrations took place on this platform today. Major focus today was on creating objects in J S, which would further help us in creating models for our databases and would help store info in the same when an A P I brings us some data in the particular format. Although database ( D B)and A P I concepts still sounded vague to us, the main emphasis was made on how objects were written in J S. Eventually we used the Post- Man tool to test successful completion of the whole process, from adding info on the client side, making a P O S T request and eventually adding stuff to the D B. Lastly, we were given some insight into the world of Git and Git Hub and how Version Control Systems ( V C S) like these would make our lives easier when we would sit down and take part in collaborative projects. ( End of week 1)","['JavaScript', 'Web Development', 'Coding', 'Codingbootcamp', 'HTML']",https://medium.com/@umangpahwa/my-first-week-at-the-hacking-school-23711e85e1af,2,[],0,0,umang,M,0.0,1.0
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Chapter 4 — Standards & Builder’s Pledge – W3Develops – Medium,2018-10-03 01:37:49,medium,"Chapter 4 — Standards & Builder’s Pledge I think it’s possible for ordinary people to choose to be extraordinary. — Elon Musk W3 Develops is a Meritocracy No one has to pay money to get this experience. What does this mean? This means the only currency in W3 Develops is a hunger to learn and excitement to work with others. And what you actually contribute to building. Enthusiasm, Industriousness, and Kindness. The people who overcome challenges (whether it be learning new technologies, navigating git/github, or learning to work in teams) will find success here. And then they will find themselves unlocking even bigger opportunities in the future (in the form of being recruited for projects, being placed with other proven members, etc. ) Regardless of your level, if you’ve been accepted it means we believe you have what it takes. But it takes work — a lot of work to learn and succeed and finish remote dev projects. Your performance in this Cohort will dictate your future opportunities in W3 Develops (ex. when we see someone had team-mates leave and still completed a project, they deserve to be placed with legends in the next cohort who are as determined as them). Standards + The Builder’s Pledge We’ve launched hundreds of remote team projects and there is a formula for successful teams. Every successful team has dependable people, an openness to learn, and consistent communication. We’ve launched many team-projects and looked at what practices the successful teams did. Those practices (seen below) are now our standards. All members are expected to do a check-in once a week Don’t be evil (thanks Google). Don’t think I need to explain this. We’ve had people from 115 different countries from all kinds of backgrounds you can imagine. Everyone shares the same goals and is here to improve their lives through coding. :) We will remove people who are being disruptive to the community. Sign the Builder’s Pledge Before starting, you’ll have to sign the Builder’s Pledge, which is basically an Accountability Pledge. This cohort can be a jetpack for your learning and career, but you need to be accountable and be able to count on your team for it to go smoothly. The Builder’s Pledge should be signed as soon as you receive it in your email, along with your teams discord invite. You will receive that on the 2nd or 3rd day of the month. If you aren’t determined to learn, be challenged and make it through despite the odds, the Cohort might not be the place for you. Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 1 — Team Projects Lineup Chapter 2 — Schedule Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 5 — Finished Projects & Other Cohorts Comments Chapter 6 — F A Q","['Web Development', 'Pair Programming', 'Codingbootcamp', 'W3develops', 'Freecodecamp']",https://medium.com/w3develops/chapter-4-standards-builders-pledge-4b3d5a736bfc,1,[],0,0,jonathan,M,0.0042130252697924414,0.9957869747302076
Team Codebase,"We're a 9-week iOS Training Lab and app development firm in Savannah, Georgia.",Learn iPhone development in Savannah. For free. – Team Codebase – Medium,2017-08-07 19:15:44,medium,"Learn i Phone development in Savannah. For free. 10 reasons to come to Codebase for your i O S education Beginning on September 18, Codebase will offer an intensive 9-week i O S bootcamp to teach you the ins and outs of programming for i Phone in Swift. ( Pssst! There are no tuition fees!) Here’s why you should apply:1. Mobile is dominating In 2016, something important happened: The number of Americans who own smartphones surpassed the number who own desktop computers. Globally, this has been the case since 2014. Mobile is the future, but the future is happening R I G H T N O W. And with all of the new and exciting technologies entering the market that promise to change the way we see the world, there’s never been a better time to jump in. 2. Expert instruction Codebase’s instructors are successful, working i O S developers who know their stuff. Lead instructor Max Howell has been programming for mobile platforms since before the launch of the first i Phone and has worked on products like Tweet Deck (since acquired by Twitter), Popular Pays and Poncho, recently featured on the Planet of the Apps television show on Apple Music. Max is also creator of the Homebrew package manager for Mac. Listen to the interview he gave for The Changelog podcast!3. Code is the language of the future Coding is the new literacy, and while languages, tools, frameworks and technologies are always changing, a good foundation will help you keep pace. Our goal at Codebase isn’t just to teach you how to build apps that impress; we want to equip you with the knowlege to find the answers you need and foster a fearless desire to explore, move fast and break things. 4. Immersive learning is best We believe that the best way to master a skill is to dive in. If you wanted to learn Japanese, you’d move to Japan for best results. Codebase is your symbolic move to Swiftland. Daily immersion in the language reinforces neural pathways, gives context to your experiences, and helps you retain and build upon your skills. 5. Learning is better together There are a lot of great online resources for learning to code. What these don’t provide is a tight-knit cohort of fellow students who are sharing your experience. When you learn in a community, you have access to a collective of knowledge, experience and differing viewpoints…and a double dose of motivation to wash it all down. 6. The South is beautiful, peaceful and affordable Coding bootcamps abound in large cities, but the stress that comes with city living (the noise, the crowds, the traffic) can be an unwelcome distraction. The slower pace of the beautiful South is an ideal environment for pondering the great mysteries of programming logic…plus, if you’re visiting from out of town, you stand to save a few bucks on living expenses. 7. Savannah is for techies If tech meetups are your thing, Savannah doesn’t disappoint. The tech community is active, diverse and inclusive, and there’s always something going on. Check out what’s happening with our friends: Creative Coast • tech S A V • Open Savannah • A T D C • Startup Grind • Geekend • Make It Mobile • The Guild Hall • S D V C of Coastal Georgia8. We may have a job for you We aim to offer paid apprenticeship opportunities to top grads who want to live and work in Savannah. Selection will depend on a number of factors, but as a minimum standard, you should plan to show up every day ready to particpate and work hard. 9. No tuition fees! We’ve said it before, but it bears repeating: the only investments required for our i O S bootcamp in September 2017 are your time, your effort, and the necessary equipment — that is, a Mac Book and an i O S device. Compared to programs with tuition fees as high as $15, 000, it’s kind of a no-brainer. So you can save your brainpower for your code. 10. We can make our world better The problems facing the world seem insurmountable, but we can do our part to make our slice of it a little bit better. We do what we do to spread knowledge, create job prospects, help local businesses, and improve people’s lives. When you come to Codebase, we hope you’ll be inspired to take what you’ve learned into your slice of the world and do what you can to make it better, too. Submit your application on or before August 30! Any questions? Shoot us an email at hello@codebasesav. com.","['Coding', 'iOS App Development', 'Swift Programming', 'Codingbootcamp', 'Savannah']",https://medium.com/@codebasesaga/learn-iphone-development-in-savannah-for-free-1c0ac62ab79,2,[],0,3,team,Unknown,Unknown,Unknown
Jacob Moore,,Day 36/37 — Creating APIs – Jacob Moore – Medium,2017-09-05 20:19:26,medium,"Day 36/37 — Creating A P Is We’ve hit a wall. Most of us know what our focus will be and for those not doing backend this week is the struggle bus. Its a matter of pride at this point to complete any daily/weekly projects that keep them going. As for me, it’s a struggle knowing what I can/will be doing and still being limited to what tools I have now. Oh cool spend an hour creating all the folders, associations, tables, etc. just to realize that next week it will not be used again (maybe). Thus we’ve all sort of hit a wall in our education. We all have stuff to get caught up on and I believe this week we’ll get a couple of days to do that. Honestly I think we were all hoping to get that time starting now. Instead it’s create A P Is. This is incredibly important. It will be something that I will do going forward. But man it’s brutal. Part of the brutality is what educational materials we were actually given to start with. To call them insufficient would be extremely polite. Fortunately through a Google search I actually got a lot more information about creating R E S Tful A P I’s using Node/ Express. Not enough to do a giant chunk of our daily activity but enough to get me started. If there would be one critique of the program it would be that there’s a distinct disconnect between the lecture/assigned reading and the daily activity that we use. Our actual daily assignment is to create an A P I for a vending machine that deals with total amount, item quantity, purchase dates, etc. I’m close but really far away on several of the routes. I think at this point it’s just a matter of refocusing on the work to get back into the mentality after a long break. Struggles: At this exact moment, concentrating on the work at hand. Overall the struggle I’m dealing with is figuring out how to handle a single purchase within the A P I. It needs to hit the total amount present, have a deduction in total, have a deduction in quantity, and push our a purchase date. Understood: Associations. I actually understand this concept within the database structure. Looking forward to: Not spending so much time setting up a database and getting right into the code.","['API', 'Nodejs', 'Sequelize', 'Codingbootcamp', 'Express']",https://medium.com/@jacob.w.moore/day-36-37-creating-apis-36e00f36dd3d,2,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
chibueze ukaegbu,,"LearnFactory Internship: Day 15 (May 18, 2018) – LearnFactory Nigeria – Medium",2018-05-20 05:09:31,medium,"Learn Factory Internship: Day 15 ( May 18, 2018)“ Be diligent, consistent and committed; there will be no mountain you cannot conquer” … i C My beautiful ones… That’s a wrap for week 3. It was amazing, even though it came with a number of challenges. We didn’t listen to an episode of Eric Thomas this week, as the season “ B E P H E N O M E N A L O R B E F O R G O T T E N” has come to an end. This has been an enlightening series. We will start a new season on Monday The projector we bought last week to improve the experience of the interns broke down; and the vendor has refused to stand by his warranty commitment. Well, sad way for one to do business; to ignore the importance of their words. Like E T said yesterday, as a person and a businessman, out words must be our bond. We had to revert to using our old projector till we can make other arrangements for a better one. As promised, after lunch, I came to take the class and do a final review of the toy problem I gave them last week. We looked at some implementations from the few who successfully completed the problem and then I walked the class through my own solution. Most were amazed at it simplicity. Visiting the goodies for lunch / Chilaka’s birthday I then gave 2 challenges for the weekend to be done by the various groups; there were whoops of joy as the different group promised to deliver the best result. And they have been busy; Slack has been buzzing incessantly today. S P O T L I G H T O F T H E D A Y Our Intern for the spotlight today is Michael Chilaka; and yes, it is his birthday today. His fellow interns had a surprise birthday song for him; and we did eat some goodies and drinks. Here is the raw, undiluted Mr Chilaka Chilaka, in his colors Chilaka Michael Obinna is a graduate of Zoology and Environmental Biology (from Michael Okpara University of Agriculture, Umudike, Abia State) and a certified laboratory Analyst of N A F D A C. The first child in 5 children, I was born to the family of Mr and Mrs Michael Chijioke Chilaka from Umuahia- South, Umuahia. A strong optimist, I always seeing the possibility coming out of the greatest impossibility. I love the color Sky blue, it reminds me of the heavens. As a Christian, I love reading and applying God’s word in all facets of life; writing codes, Afang soup and traveling. Birthday boy, in the midst of his coding family… Some decisions are life-changing; due to a misunderstanding, Chilaka was dropped during the interview process for our internship. But he was not discouraged, neither did he get bitter about it. He kept following the stories on the first week, making comments and really liking what he saw. One night, around 11pm, after reading his latest comment, I felt he should be one of us. I reached out to him and invited him to join us; his joy that night cannot be described. He took a few days to arrange all his affairs, close off the work he was doing, and by that weekend he relocated to Aba to join up. I am glad I made that decision; he is an amazing young man. That’s all folks, Week 3 has been put to bed. I’ll see you next week; have a phenomenal weekend. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-15-may-18-2018-55fc3841d833,0,[],0,135,chibueze,M,0.0,1.0
chibueze ukaegbu,,LearnFactory Internship: Day 6 – LearnFactory Nigeria – Medium,2018-05-07 19:04:51,medium,"Learn Factory Internship: Day 6…and as we let our own light shine, we unconsciously give others permission to do the same… Marianne Deborah Williamson Isaac and his attentive interns My Rockstars are on fire, and what a joy it was to watch them burn today. They ripped through the H T M L code like it was kindle for the fire. I can see their confidence rising, that necessary belief a top coder needs in his abilities that is a prerequisite to become an uber coder. Over the weekend, they were here. Even on Sunday, we had a couple of them come into the office after church services. I was all smiles; like I said, they are on fire. Today, like all days, began with an immersion into words. We began a series by the amazing Eric Thomas titled B E P H E N O M E N A L O R B E F O R G O T T E N. It’s supposed to run for the next 10 days, and oh my, did he start with a bang. Today’s episode asked 3 crucial and related questions: W H A T D O Y O U W A N T? W H A T A R E Y O U W I L L I N G T O S A C R I F I C E ( L E T G O O F, G I V E U P, P A R T W A Y S W I T H) T O G E T W H A T Y O U W A N T? H O W F A R W I L L Y O U R W I L L T A K E Y O U T H I S Y E A R? Until you have clarity about what you want, you can not focus your life to achieve it. There is a likelihood of living a careless, undisciplined life if you don’t know what you want. And to get that which you want, you must pay the price now or suffer the consequences later. To ease the process of learning, we acquired a new projector and public address system today; everyone felt so cool about it. Matthew, Code Smith extraordinaire… Isaac and Matthew took them through a practical, hands-on session with H T M L5 and C S S3. We started a project to build the user interface of Konga, a leading e-commerce platform in Nigeria. It was all fun and collaboration in action. It’s supposed to run till tomorrow, and then on Wednesday we dive head-first into Java Script. Some not so good news. We had to drop 3 of the initial interns today. For the duration of the internship, we have a Code-of- Conduct which is supposed to guide our attendance, interaction and relationships. The interns were given the option to study it over the weekend, discuss it with their families and significant ones, and know if they can abide by the rules. The truth is, without discipline, we all will not get the best out of this project. Some felt they could not abide by it, some felt they could not sacrifice all the time the internship will demand as it will affect their business. Well, we had to part ways amicably and wish them the best. Interestingly, their places were immediately taken by 3 young men who missed out on the initial draft of the internship but had been visiting our office almost on a daily basis since last week seeking to be reconsidered. Well, they got their chance today and they were absolutely ecstatic. For a copy of the Code of Conduct, see here … The internship is not for the fainthearted, it takes will to push through. I’ll close with the words of Eric Thomas“ Until you work on your will, there are some things you will never get. Stop giving up; stop giving in; stop yielding to and running from pain. L I F E W I L L B R E A K Y O U I F Y O U A R E N O T S T R O N G. Don’t get in your own way; get out of your way and L E T T H E R E S T O F Y O U R L I F E B E T H E B E S T O F Y O U R L I F E”. Closing Prayers… I’ll see you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-6-d4fb370f4512,0,[],0,100,chibueze,M,0.0,1.0
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu Pt. 6 – Chingu – Medium,2017-07-17 12:52:42,medium,"Overheard in Chingu Pt. 6 Random lines taken out of context from the Chingu coding cohorts! Has anyone ‘casually’ breathed pure O2? Like, while conscious and/or not hospitalized? Can humans even breath pure O2? Or do we need the N2 and other components?# Idea 101: There is high chance someone might have made something you want to make, use as advantage, find the people, see their reviews, in your app don’t repeat their mistake One day, when I have nothing to do and a will to build something, I’ll make a Slack-to- I R C bridge. All slack subdomains’ll be channels in I R C. And I’ll use some external service to convert fancy stuff in slack to hyperlinks in irc. Smileys can go away. Threads’ll be tricky. Now that I think of it, it doesn’t sounds that complicated. where should I direct someone that hasn’t been in the cohorts before to look for information since the july applications aren’t public yet (and most of the results I find on google for chingu are for older cohorts)70% of air is N2. 20+ % O2 + other nonsense and water vapor. Any Three. js ninjas? I just want to ask: is it as fun as it looks like? Yeah, I saw that. I thought that meant “ Yo, tslint needs typescript and you don’t have it!” I just watched zootopia. pretty good I love markdown, I use excel and work all day but would much prefer to use markdown for my notes Quantum mechanics is so rad. Digging for a good Young’s double-slit experiment video since @oxyrus posted the B B C link above… This one explains it pretty well: https://www. youtube. com/watch?v= A9t Knc Adl H Q 5:49 “ Each atom, by itself, is somehow contributing it’s small part to the overall wave-like behavior we see in the interference pattern. ” :boom: Bonus cred points for the bowtie Q: I wonder what the key ingredient to a group like that. Is it just a willingness to learn. Or do you think the group just clicked as people? A: In my original Meerkats, I got into a Momentum clone build to learn team with 5 other people. I was super anxious about my skill level, not wanting to be a drag on the team. But what struck me almost immediately was that work ethic, determination and soft skills were going to be equally as important as dev skill. The cool thing about Chingu is that, if you have to think about and declare how determined you are on the application — makes you think about it. And signing up for a build to learn project is another expression of determination. So Chingu probably self-selects determined learners automatically. I feel like a team of highly-determined people can overcome most anything. Getting highly determined people who also have positive work ethic and work well together (the soft skills stuff) — the trifecta. Expect that team to _produce_. Reply: I think you are right. I really regret not signing on to build to learn sooner. I was in the same position as you with my first group, I felt that I knew too little and I didn’t want to bring the team down. But in my case that fear was too strong and I didn’t get involved. I realise now though how silly that was. I signed up for the build to learn in the current cohort and it’s been great Pro tip regarding the build-to-learn projects: There is, quite literally, zero chance that you “know too little”. The only way you can bring your team down is by signing up then not participating. That’s why they’re called “build to learn” projects not “build to show off a bunch of shit I already know” projects. If something needs to be done and you don’t know how to do it, someone will show or help you, if no one knows how to do it, you work together to learn. The only way a build to learn project fails is if every single person on the team quits. If you are the only person left trying to build, ask chance to help you find a new teammate. Some of the absolute best build-to-learn projects I’ve seen coming out of the cohorts got finished because one person refused to quit. Be that one person who refuses to quit. you build great software trion Make a time machine. T H E N we have infinite time I wonder at how boring infinite life would become. Last night, I presented Whobot at the local Philly Node. js meetup. After an informal discussion about Alpha Go deciding to do away with all humans vis a vis Terminator, I started my 15 minute presentation with a description of Chingu Cohorts and the motivation behind creating Whobot. The guts of the presentation included 1) a live demo on a Chingu Central Slack channel, and 2) a walkthrough of how a skill gets normalized (e. g. “anguler” -> “ Angular J S”). It sparked a pretty good discussion afterwards about the new features of E C M A Script 6, since the head of the group noticed a few `var`s sprinkled among the `let`s and `const`s. Besides confirming that `var` shouldn’t be used without good reason (like backwards compatibility), we also discussed the use of the “fat arrow” functions ( `() => {}` ). People there were unaware of the purpose beyond simplifying code, so I got to explain how it doesn’t instantiate a new `this` context, which allows people to dump `var self = this` constructs. And, they liked /whobot Major kudos for getting up in front of a group of strangers and presenting. Definitely going to look great on your resume. folks at chingu never stop amazing me. you rock@trion is chingu genius 101 I had an on-site interview today, and it was A W E S O M E. Very technical, but all questions were relevant to web dev and Java Script. I wasn’t asked any questions that I felt were way above my scope. The tech challenge was basically like, “ Here’s what we want you to make. You have the room, and you can use anything you want. You have 30 minutes to finish, good luck” Chingu is crazy. Think of how much brainpower we have here, and how many are looking for jobs…you’ve given me something to look into/try out for hours now thnx haha I had one company that wanted to do an 8 hour interview. Just picked out laptop, monitor and phone for first job starting in 2 weeks. Feels like christmas :christmas_tree:","['Software Development', 'Chingu', 'Codingbootcamp']",https://medium.com/chingu/overheard-in-chingu-pt-6-43b6a63a7aab,2,['Momentum'],1,2,chance,M,0.024461428631419813,0.9755385713685801
Lauren Greenberg,"Exploring programming, my assumptions and the outdoors.",Finding (my)self in .class – Lauren Greenberg – Medium,2017-07-05 00:39:15,medium,"Finding (my)self in . class Welcome to my first blog post as a student at the Flatiron school. Since I just started classes here, I’ve been having a lot of memories about when new programs started and a new cohort of educators would arrive at my last job ( I worked for an outdoor education center). On the first day of one fall season, I felt like I really started off on the wrong foot with the person I was training. When I later apologized to her, she said that from her perspective it had gone great. Similar to the way my self-perception of this moment changed from when I was just inside my own head to when I was able to get an outside perspective, the ‘self’ method functions differently when it’s inside and outside of a method. When self is used to call a method or return or alter an instance variable I N S I D E a method, it is only able to access to data pertaining to its own instance. It is referring to itself in singular, and in specific — that particular instance. In the example below, self is used to call the name getter method to return the name of that particular instance. def say_name  "" My name is #{self. name}. "" end  This same word, self, is understood differently when it is used in the context of a method definition or when calling variables and methods from inside a method. When self is used in the method D E F I N I T I O N, it gives the class access to variables pertaining to all instances of the class. ‘ Self’ now can be called by the class, in order to learn about and aggregate information relating to all of the specific instances. In this way, it also lets me know that the use of it I N S I D E that method now refers to the class. iedef self. create  picasso = self. new(""pablo picasso"")  @@all_artists << picassoend This method (above) is a class method that creates new instances of artists. The use of self in the definition indicates that self. create is the same as Artist. create. So why would I ever need . class? I didn’t understand why I would write something where ‘self’ wouldn’t help me. I learned that when an individual instance needs access to a class variable, however, . class can provide it. def save  self. class. all << self end Here, . class is allowing the instance of artist (made apparent by the use of “self” inside the metho) to access and alter the class variable @@all (which is an array). It would otherwise only be accessible at the class level, such that it would have to be called by Artist. all to get all instances of artist. Instead using . class allows self, to add itself to the array as an instance of an Artist so that later the class will have a record of it. Thanks for reading my first post! Overviewself — can refer to both the class as a whole and an individual instance of the class, depending on where it is present, and can be deduced from the clues the method name provides. class — this is the inverse of using self in the method definition. it all allows the instance to have access to data that is stored at the class level.","['Ruby', 'Coding', 'Programming', 'Codingbootcamp']",https://medium.com/@lgreenberg23/finding-my-self-in-class-744336b69f0a,1,[],0,2,lauren,F,0.987739934147142,0.012260065852858035
Emily Heist Moss,Reader/writer/speaker. Tech/feminism/education.,What Dev Bootcamp means to me (with a mystbusting aside),2017-09-03 21:02:12,medium,"What Dev Bootcamp means to me (with a mystbusting aside) My beloved Dev Bootcamp is shutting its doors this December, after five years and thousands of students. I spent the last three years at our Chicago Campus and, by my count, watched about 400 graduates make their way into the world. When we made our closing announcement, the outpouring of love and support and nostalgia from alumni just about knocked me over. They all said the same thing, “ This changed my life. ” I took screenshots of their tweets and texts and posts and sent them to my family; I wanted a record of the work I/we/they had done before it ended. My mom wrote back, “ You should feel damn proud of where you spent the last few years! Damn proud!” And I am so damn proud. The Why I ran into a Dev Bootcamp graduate on the red line a few weeks ago. He’s a software developer at a financial tech company in Chicago, and before Dev Bootcamp he moved furniture for a living. I asked him how he was doing, how his job was treating him. “ Emily, ” he said, pausing dramatically, “ It’s an absolute dream. ” He told me that when his co-workers complain about rough days, he says, “ Dude, you don’t know rough days…” He used to carry refrigerators up three flights of stairs. There’s another woman I know who graduated from a big deal Midwestern university after the recession and couldn’t find a gig that paid more than $12 per hour. After languishing in her college town, she enrolled and graduated from Dev Bootcamp. She cried tears of joy when she was offered her first technical role, “and health insurance!” There’s a woman who drove a taxi before risking everything (and her credit score) to attend the program. She’s a software developer at an Ed Tech startup now, and has recruited two friends — also taxi-driving immigrant women — to enroll. There’s the poet who, in addition to working her impressive engineering job at one of our city’s most renowned tech companies, gives talks on the similarities between poetry and programming, and recently launched an internal training program for her non-technical colleagues. I can name half a dozen married couples who have come through Dev Bootcamp together, including two military veterans who both got job offers on the same day — in different cities (don’t worry, it worked out). Another couple that left the economic devastation in Venezuela and learned to code to restart their careers. One partner was a librarian, and now works on the tech team at the American Library Association. There are sibling pairs who followed each other through Dev Bootcamp, college friend groups who came one by one, and even the occasional baby-booming parent + millennial kid combo. We ring a bill when a grad lands a job. These are my favorite moments. See the very last sentence of this essay for more examples. The Work I’m telling you dramatic stories because they inspire me, yes, and I hope they’ll inspire you. But the truth is, all the stories are dramatic. I am inspired by the customer service reps who looked across the hall at their developer coworkers (who made twice their salaries), and said, I think I can do that too. I’m inspired by the folks who were stable and secure, but unfulfilled, who took a risk and started at the bottom in pursuit of work that challenged them. I’m inspired by the people, especially the women, who worried that they had missed the boat because they hadn’t learned to code in high school. It was thrilling and rewarding to shout, “ You didn’t miss the boat! It’s still here, it’s just a different boat!” Every single student took a risk and made a bet on themselves. And then, after taking the plunge, they did the work. Our instructors are brilliant (and I mean that literally) but they cannot make someone sit down and learn who isn’t willing to get vulnerable about what they don’t know. They can’t shove concepts into a brain that isn’t excited to open up to new ideas. Learning anything new is hard, but finding a beginner’s mindset and abandoning your professional ego at the door as an adult… it’s kind of a miracle. And I got to see that miracle over and over and over again. Before you start It was imperfect. Isn’t everything? We made mistakes. We guessed wrong. We took too long. But there was a culture of ownership and accountability for one’s actions that I still admire. It encouraged me to be accountable for myself. I once made an ageist joke and threw moms under the bus while introducing a speaker. A student wrote to me afterwards gently chiding me, reminding me that I know better and I have an obligation to try harder. She was right, I did and I do. I once saw one co-worker snap at another out of frustration with some unrelated issue. He later stopped by to explain, apologize, and promise to work on it. We started meetings with quick personal check-ins. You’d be amazed how spending thirty seconds to hear your colleague share a slice of their state of mind can change the way you view the people you spend a third of your life with. So, were their flaws? Of course, and they have been enumerated elsewhere (along with some fabrications, because…the Internet). If you want to throw them into the comments section, knock yourself out, but I won’t be responding. This ship is sailing on, my friends, and all I can say is that we tried really hard. A brief aside: On mythbusting There are two things I want to make really clear as I wind down this brief, lovely chapter. The first is that, contrary to certain reports by people who don’t have the data nor the access to back up their claims, Dev Bootcamp didn’t die at the hands of “diversity. ” That’s mathematically false, and ideologically dangerous. Programming that Dev Bootcamp ran that explicitly reached out to communities that are underrepresented in the tech industry — including but not limited to women, P O C, L G T B Q folks — was a net positive. I mean that in a wishy-washy “ It’s the right thing to do kind of way” (and it is), and also in a cold, hard, cash kind of way. Scholarship programs did serve marginalized communities but were in no way “drains” on the organization. In addition to scholarship recipients, those programs and promotions yielded paying enrollees, more than enough to cover the spread. Workshops and events we held that reached out to specific groups of potential students strengthened our pipeline and grew our cohorts, they didn’t “distract” us from other, more important marketing. The notion that diversity was incompatible with mathematically-sound marketing is ludicrous. In other words, the “diversity is a drain on the business” argument is dumb. Feedback we received from employers and partners (over and over and over again) suggested that Dev Bootcamp’s commitment (however imperfect) to trying to diversify the landscape of tech talent was a business asset, not a liability. Reaching beginners and people whose talent has been oft-ignored (to the detriment of us all, I might add), gave us more opportunities, not fewer. If you think we would have been better off dropping language and tactics that tried to open the door wider to welcome a bigger swath of talented humans, in favor of a narrower vision of who could succeed… hooooo boy, you’re an asshole and you can’t read a spreadsheet. Second, in brief, because it’s been covered, Kaplan didn’t bring us down. Trust me, I’m as inclined as anyone to blame it on the corporate bogeyman. I run through the shoulda-woulda-couldas all day long and there are a lot of things I might have done differently. Hindsight, you know? But the truth is that without Kaplan’s backing, we would have been D O A three years ago. The experience we delivered would not have been as good. It might have been a higher student to teacher ratio, or less career support, or shitty campuses. Or we would have folded in 2014. Or who knows? As for me, I’m pretty grateful that Kaplan allowed us to try to find our way to a sustainable solution for three years, and I think most of our alumni would agree. What sticks The Squirrels, a cohort that committed to the mantra of “ No squirrel left behind” and dragged 100% of their cohort across the assessment finish line through camaraderie and support. A final project that tried to use sentiment analysis to determine if a depressed Twitter user was on the edge of suicide and intervene to help. Walking in on a pair of students rehearsing an original song they’d written about D B C (key line, “ I don’t wanna leave”), which they performed at the talent show. Parents and partners and babies coming out on graduation day to applaud their loved ones’ hard work. Pajama days. Tutu Tuesdays. Graduates ringing a big brass bell when they signed offer letters, basking in the cheers of their compatriots, smiles so wide their faces hurt (see photo above). That time students programmed an Easy Bake Oven for their Make Beautiful and Meaningful Things challenge. A panel on Creative Coders featuring a photographer, a poet, an opera singer, and music composition Ph D. That there are Dev Bootcamp graduates at every tech company you can name. And at many that you can’t. And at schools, non-profits, banks, hospitals, airlines, and museums. And freelancing, successfully. And teaching more people to code — adults and kids — , at places like Code Platoon, Ada Developers Academy, Power Up Tech Academy, and Blue 1647 ( One graduate launched a kids coding camp in Kuwait!). A snowy road trip to Wisconsin with alumni volunteers to teach a workshop to new coders. The number of alumni names I see on conference schedules speaking on topics we never taught that them, but that they were equipped and excited to teach themselves. Alumni recruiting each other to their companies, sharing each other’s work, attending each other’s parties and events and even weddings (looking you, Ohio!) When I catch sight of the grey and teal on the train, just a glimmer, but I know it says “ Make beautiful and meaningful things. ” In summary I’m fucking heartbroken. I have close friends who re-launched their careers here, and I see their happiness and confidence grow every day. I know they are not alone. I write this from a table that faces a whiteboard with a list of names that gets cleared every month, and then fills right back up again. It’s graduates who got new jobs. When I get low, I go watch the ring-the-bell-videos. I dare you not to smile.","['Programming', 'Diversity In Tech', 'Women In Tech', 'Codingbootcamp', 'Coding']",https://medium.com/@EmilyHeistMoss_31718/what-dev-bootcamp-means-to-me-with-a-mystbusting-aside-46cae2fda9ea,2,"['Dev Bootcamp', 'Code Platoon', 'Ada Developers Academy']",3,63,emily,F,0.9979317746535663,0.002068225346433675
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Playing Around with the iTunes API – Emily Deans – Medium,2017-07-22 19:28:02,medium,"Playing Around with the i Tunes A P I Happy Saturday! I’ve passed the blazing sunny morning and stormy afternoon revisiting some of this week’s assignments/lessons and working on the new weekly project. As we move toward the monthlong back-end immersive that begins next week, we still have a final front-end assignment that’s sort of a culmination of everything we’ve learned in the class so far on the front-end side. The work on this one has been pretty fun so far. We’re working with the i Tunes A P I to create a real app in which you can search your favorite artists and play samples of their songs via your own website. Pretty cool, right? Current status of my app This will involve using a bunch of new tools and concepts I haven’t used before so will definitely be a bit of a stretch — but I suppose that’s how you learn/grow! Some of the foreseeable challenges for me are:— Working with the A P I: while we’ve done a bit of this over the past week, I have yet to personally interact with such a robust, comprehensive database. — Audio: the point of this app is to ultimately be able to click on and play a song directly from my webpage. In addition to not being as familiar with A P I manipulation as I’d like to be, I’ve also never worked with <audio> tags. Excited to dive into that realm a bit. — Submit: this is an event listener method I’m not as familiar with, but am using in this project to capture a button click in order to update the H T M L in response to a user’s input. So far, I’ve pulled together a pretty fun responsive site (see above) that has some basic, initial styling elements and in which I have successfully utilized ‘fetch’ to connect with the A P I and pull in artist’s song listings. No audio yet, but I’m going to try to make some headway with that before heading back to class next week. A N D I’m actually going to try to deploy this one, so I’m hoping you’ll be able to play around with it yourself once it’s all done and ready to roll… Have a great weekend! Song of the Day: “ All or Nothing” by Cher (wasn’t it obvious today’s was gonna be a Cher pick?)","['JavaScript', 'Code Newbie', 'Codingbootcamp', 'iTunes', 'Women In Tech']",https://medium.com/@emilyldeans/playing-around-with-the-itunes-api-e8505a69c9a5,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Ryan Wang,Writing code at Ironhack Miami. Full-Stack Javascript Developer,Why I Emptied My Bank Account to Join IronHack – Ryan Wang – Medium,2017-08-03 00:00:00,medium,"Why I Emptied My Bank Account to Join Iron Hack On August 7th, 2017, I will be embarking on the path to becoming a web developer. How I ended up here still amazes me. Life before bootcamp Only a year ago, I sat in my 9–5 cubicle with a cushy job at the University of Miami. I had security, but was miserable. In search of something new, exciting, and rewarding, I poked my head into quite a few different endeavors: Life Coaching — I found an interesting T E D-x talk on You Tube about academic coaching. I had some experience tutoring, so I emailed the speaker to get some tips on how to get started as a coach. Through his generosity, he invited me to his online life coaching course to get accredited — free of charge. Fast forward a few months, I became an accredited Life Coach. So if you need any help with…life… give me call. Copywriting — I dreamed of a job that allowed me to work anywhere in the world. I was pretty good at writing, so copywriting was an easy option. I registered my company, Type Lab. net, and started asking for business. I earned a couple hundred dollars from one client, but soon discovered that writing about something I didn’t care about as a job was a pain in the ass. San Diego — Last September I flew to San Diego for a Knowledge for Men seminar on building your own influencer business. I transformed my own life through 2 years of self-help, and I was very eager for a way to use that knowledge to help other men realize their potential. Unfortunately, starting an influencer business isn’t as easy as K F M made it out to be, especially since my self-help knowledge revolved around pickup-artistry, a very polarizing subject. That’s another story for another time. Speak U P! Miami — I was very active in Wynwood Toastmasters and was part of the leadership team. I developed an interest in helping others become better communicators and decided that I can start a better club, without registration fees. I started a Meetup group and had our first meeting at a yoga studio, but now we meet monthly at Venture Cafe in C I C. This was one of the few ventures that continues to this day, but it’s not going to pay the bills anytime soon. Startups- I wanted to get out of the corporate environment, so I impulsively quit my cushy job and joined a startup at C I C. However, with a degree in Biology and no technical knowledge, the only thing I was qualified for was cold calling. So that’s what I did — inside sales for 5 months. Except I’m a huge introvert. I find speaking with people a chore, especially with 50 strangers a day, on the phone. That’s where I left off 3 weeks ago. Not very good at sales, and still as confused and unhappy as when I was at the University. A new path opened up when I met some coding bootcamp students one night after work. These guys were unassuming, introverted, and kinda nerdy. Basically a reflection of myself. They were victims of the current education system, unable to find a decent paying, rewarding job with their empty degrees. Again, basically my life in a nutshell. They told me that with some hard work, I can get into web development, regardless of experience. Sign me up! The more I thought about programming, the more it made sense: I’m a compulsive over-analyzer and I speak in bullet point format I’m a pretty good chess player and video gamer Scored at the 94% and 82% percentile for verbal and integrated reasoning on the G M A T My diet consisted of only Soylent for the past 3 years At this point, I’m already sold on the idea. My bootcamp choices I only had three roads to pick from for bootcamp options. Iron Hack — Miami and local! Pros – It has by far the most favored reviews online for any bootcamp in South Florida It teaches Javascript, for which I’m convinced is the right choice for language. This automatically eliminates Wyncode, which teaches Ruby Attending a local bootcamp will provide me with networks that I won’t have access to alone (important for job placement) My immediate opinion of the staff after my interviews were positive Cons- It’s $11, 000 The commute in Miami is horrendous Iron Hack’s networks exists primarily in Europe, where Iron Hack started. It’s Miami location is still young, and the extent of their relationships is uncertain. Not very selective Online or Another State — There are “better” bootcamps around the country, especially California and New York. Pros – Longer curriculum to develop a better knowledge base and portfolio Highly selective (harder technical interviews) to make sure students start at a higher level Better placement rates with accredited reports Some has no upfront tuition, but take a cut of your first year’s salary after the bootcamp Cons – Longer curriculum = higher cost High living expenses and I’ll be away from home No network connections in South Florida (where I want to work for the next 2–3 years) I need to take extra time to prepare for difficult interviews, which will delay the start of my career Self-study Pros- Free or almost free I can take as long as I want to learn what I want ($11, 000+ goes a long way to sustain me) No commute Cons – I’m competitive, I need other students to motivate me I have no idea how much longer it’s going to take me to be job ready. May delay my career (by a lot) No networking opportunities to start with. I’ll have to build my own If I get stuck on something, there’s no one to answer my questions Why Iron Hack? I ultimately enrolled into Iron Hack with hopes that it’ll give me the best chances at landing a job in South Florida, as soon as possible. Self-study is possible for me with my work-ethic, sure, but how much longer would it take for me to “get it”? I am willing to max out my credit cards, empty my savings, and endure the Miami traffic for this investment in my career, because it’ll get me job ready, faster. It may not be $11, 000 worth of “faster”, but I’ll never know. The only thing to do now is prepare as best as I can before day 1, so that I can hit the ground running. Next week I’ll write about my process for preparing for the technical interview, pre-work, and day 1. Originally published at ryancommits. com/blog on August 3, 2017.","['Programming', 'Codingbootcamp', 'Ironhack', 'Learning To Code']",https://medium.com/@ryancommits/why-i-emptied-my-bank-account-to-join-ironhack-ff6ff1f91ec0,4,"['Ironhack', 'Wyncode']",2,4,ryan,M,0.024172097739259983,0.97582790226074
Erin Levine,"Pretending to be an adult. Discussin' the ebb and flow of weight loss. Future #webdeveloper. Lifts heavy things. Hi, @ladygaga!","Week 3 of Coding Bootcamp: Coding Is Really Just About Making Games, Right?",2017-06-01 16:00:41,medium,"Week 3 of Coding Bootcamp: Coding Is Really Just About Making Games, Right? Welcome to Week 3 of Coding Bootcamp! A shorter week due to the holiday weekend, but it still felt just as long as every other week. I spent my weekend coding and mentally preparing myself for the week, but even an extra day of rest and relaxation can’t prepare you for what’s to come. This week we focused on timers, A P Is, and A J A X calls. What a whirlwind of information that was crammed into 4 days of coding bliss, right? In order to make the week a little bit more fun, the two homework assignments were primarily focused on games. Fun games that probably made us scream while we were coding them, but brought a sense of happiness and joy once completed. Our first homework assignment focused on our knowledge of j Query from last week. I created a game called Crystal Collectors! While not the prettiest game in the world, the functionality is stellar. I can always go back and make it look presentable. The logic of this game was very simple: When you go to the page, a random number is generated ( Guess This Number) along with random values associated with each crystal below. The user’s goal is to click each crystal and click them enough to reach the random number that was generated. If you make an exact match, you win and your win score changes to 1. If you lose, an alert pops up that says you lost, and your losses score increases. I received an A on this assignment and please feel free to check it out here! Our second homework assignment of the week was in the same realm of gaming, but involved using timers! This game was definitely prettier than the last one! The logic behind the game was pretty simple! Upon the page opening, the user clicks on a button to begin. As soon as the user clicks, the questions are unhidden and the countdown begins at 90 seconds. If the user completes all the questions before the time runs out, it tallies how many questions are correct, incorrect, and how many questions were not answered. If the timer hits 0, an alert pops up that says you L O S T! I received another A on this assignment. You can check out your cool sloth knowledge by clicking here. No sloths were harmed in the making of the game. Can’t wait to see what next week will bring me! Week 3 down! Only 9 more to go! Originally published at www. exactlyerin. com on June 1, 2017.","['Programming', 'Coding', 'Web Development', 'JavaScript', 'Codingbootcamp']",https://medium.com/@erinlevine_48138/week-3-of-coding-bootcamp-coding-is-really-just-about-making-games-right-c0229d262d0f,0,[],0,0,erin,F,0.9713346989397382,0.028665301060261786
Nat Villasana,digital media artist and software developer,Design vs. Develop?! – Nat Villasana – Medium,2017-07-07 03:32:04,medium,"Design vs. Develop?! That feel when you open an application via terminal instead of double-clicking the icon. Before this week, I thought the little forward-slash in U I/ U X was the equivalent of “either-or. ” Luckily for me, Google exists, and so does this informative domain name. Seriously there are tons of articles about the U I/ U X split, and I think this is just one example of how multidimensional “web development” can be, and all the specializations that the term can encompass — it’s almost overwhelming. For example, I had a cool conversation about U I/ U X today with another student who told me that given a wireframe, she could build up a website without a problem — it was designing a site from scratch that was most difficult. I think I’m geared sort of the opposite way. When I found that a lot of our upcoming practices exercises and projects in H T M L, C S S, and later in Java Script are going to involve cloning existing websites, I was a little surprised — even though that shouldn’t be surprising — it makes sense we’d learn how to build good websites by studying good websites. I guess I was just surprised that there are whole websites dedicated to templates that developers can download — like I didn’t realize design and development are understood as such distinct things. But I guess platforms and templates and defaults rule the world/internet now (see Facebook et al. ) so it makes sense, and I’m not pining for everyone to relearn H T M L3 or anything. I haven’t made any wireframes or proper websites yet (this being the closest exception), but I think designing is going to be one of the most enjoyable parts about development for me. I feel pretty lucky/excited that I’ll soon learn in-depth control over my own website designs, especially when presentation and first impressions are crucial in such an image-focused medium. I also realized in class that it was much easier for me to think about how layout should work by first drawing out a website idea on paper, then working backwards to figure out what should be div’d up and how. I was getting a little bogged down from thinking about it the other way around, like as a word problem on my screen. I was basically typing out empty div tags, squinting at them, and then hoping the right padding value would hit me like divine inspiration. ( Omg div-ine. Sorry). But anyway, my friend said the functionality aspect of making websites came clearest to her— i. e. making a button behave properly, making the right text appear without looking crazy, etc. I hadn’t thought of functionality as something distinct from the aesthetic feel of a website, but after she said that, I realized that getting the button to work would probably be the trickier part on my end. But we start Java Script next week so look out buttons.","['UX', 'UI', 'Digitalcrafts', 'Codingbootcamp', 'Web Design']",https://medium.com/@nat_ventura/design-vs-develop-edd141fc4046,0,[],0,2,nat,M,0.0,1.0
Le Wagon Montréal,Coding school for creative people & entrepreneurs 🦄 🖥 9-week Full-Stack program to learn to code. 🚀 http://lewagon.com/montreal,Le Wagon Unveils Its Fall Events Calendar – Le Wagon Montréal – Medium,2018-09-11 14:18:55,medium,"Le Wagon Unveils Its Fall Events Calendar We are really excited to launch an amazing new calendar of events for this Fall! If you want to explore the tech world or gain some new skills, Le Wagon Montréal is promoting a series of workshops and activities that you can’t miss. Also, for the first time, we are offering a Coding Workshop Day, the basics of coding in one day of intensive learning. Interested? Save these dates and enjoy the ride ;-) Workshop: How to Design Awesome C S S Components Code and design all the most useful web-components like buttons, avatars, cards, navs, dropdown, list items. . with nice C S S tricks and techniques. 📅 Thursday, September 13, 6:30 p. m. , at Maison Notman. 🎟 Free but limited seats. Register to secure your spot. S O H2018 — We’ll Open Our Doors Another Year for # S O H Whether you’d like to join our team or to learn how to code with us as a student you will have the opportunity to meet us and see our location at La Gare! We’ll give you an overview of the program, check out the apps built by our alumni, see where they currently are with their careers and more. 📅 Thursday, September 20, 4:00 p. m. — 8 p. m. , at La Gare🎟 Entrance free and everyone is welcome! Workshop: A P I — Learn How to Automate your tasks Discover how Facebook is able to automatically display your Instagram photos and how Evernote syncs notes between your computer and smartphone. On the occasion of Startup Open House 2018, next September 20, Le Wagon Montréal is offering a free workshop to learn the basics of A P Is ( Application Programming Interface). 📅 Thursday, September 20, 6:00 p. m at La Gare🎟 Free but limited seats, register here. Coding Workshop Day: Learn to Code in 1 day! At Coding Workshop Day, Le Wagon Montréal will give you a taste of building your own tech product from scratch. Join us and learn the basics of coding in one day of intensive learning. With teaching assistants on-hand to help! 😉📅 Saturday, September 22, 9:00 a. m. — 5:00 p. m. at La Gare🎟 This is a paid-for and limited capacity event on a first-come-first-served basis. Light breakfast (pastries & coffee) and lunch included. Register to secure your spot. Workshop: Java Script for Beginners Let’s learn the core concepts of Javascript. It’s in the top 10 most popular programming languages, and it’s been used by all web browsers for more than a decade, which is why every web developer must code some J S during their career. 📅 Wednesday, September 26, 6:00 p. m. , at La Gare🎟 Free but limited seats. Register soon. Le Wagon is the leading coding school for entrepreneurs and creative people. We are now present in 28 cities worldwide, have trained +3000 students, with over 120 startups in operation, and have been rated the no#1 coding bootcamp worldwide on Course Report & Switchup! Want to know more about our 9-week program? Download our Syllabus or book a call with us!  Want to stay in touch? Subscribe to our newsletter or follow us on Meetup, Linked In, Facebook, Twitter or Instagram to stay informed about our upcoming events. Coding Bootcamp in Montréal - Le Wagon Working as a junior developer for Stripe, Algolia, Molotov, Save, Compass, 55, Save, etc. . We will help you find your…www. lewagon. com","['Startup', 'Events', 'Codingbootcamp', 'Coding']",https://medium.com/@lewagonmontreal/le-wagon-unveils-the-fall-events-calendar-613daed858a8,0,[],0,50,le,F,0.5308343409915357,0.46916565900846435
Kyle Thayer,"I am a PhD student studying programming, culture, and education at the University of Washington. http://kylethayer.com",Coding Bootcamps vs. Computer Science Degrees: What Employers Want and Other Perspectives,2018-03-02 15:56:15,medium,"Coding Bootcamps vs. Computer Science Degrees: What Employers Want and Other Perspectives Credit: Ulrich Lange, Dev Bootcamp Employer Views Many people I’ve talked to about my coding bootcamp research wanted to know what employers are looking for from potential coding bootcamp hires. I have better answers now because a group of researchers I met last week at a computer science education conference ( S I G C S E) went out and asked employers at twelve software development companies what they wanted from potential hires (paper). Some companies were small (less than 50 employees) and others were large (over 250 employees). Different companies focused on automobile technology, healthcare, digital marketing, and consulting. The researchers found that employers at these companies look for a mix of hard skills (technical knowledge) and soft skills (adaptability, team work, creativity, etc. ). In the interviews, employers talked about soft skills twice as much as hard skills. Most said they want a baseline level of technical skills that are assessed with screenings, but beyond this they put significant effort into evaluating soft skills. When looking at how potential hires were trained, many employers want a four-year degree, though not necessarily a computer science ( C S) degree. They recognize that a C S degree may be preferred when you need someone who can figure out the best algorithm for a problem. They also consider math background in jobs like data science. Employers may look at other four-year degrees, even ones that are not C S, for building problem solving skills in other areas, or for soft skills like breadth of education and perspective. On the other hand, some employers (especially in small companies) said they actually preferred coding bootcamp graduates for some jobs (see also this Indeed survey). These employers liked that bootcamp graduates often had more experience solving problems with teams, had more perseverance and had more practical and up-to-date knowledge. The employers in this study said they wanted four-year degrees, even from coding bootcamp graduates. There is other evidence, though, that a four-year degree might not be required for employment. Course Report found that 30% of coding bootcamp graduates did not have four-year degrees, and 71% of them still found employment in jobs requiring their technical skills. The discrepancy between the employers in the study and the data from Course Report may simply be due to the employers in the study not being fully representative of the software industry. Professor, Instructor and Administrator Views I’ve described difference between employer views on coding bootcamps and C S programs, but how do views differ between those running coding bootcamps and running C S programs? To answer this, the same group of researchers also talked to 11 coding bootcamp instructors and administrators, as well as 9 C S professors. The C S professors were primarily focused on teaching technical skills, and only some explicitly taught soft skills in C S courses, though they sometimes teach soft skills implicitly through the organization of assignments and curriculum (e. g. , teamwork, communication, the value of continued learning). Still, non- C S courses in a C S degree or courses in a non- C S degree may explicitly teach soft skills. The coding bootcamp instructors and administrators, on the other hand, focused strongly on certain soft skills in their courses, which they taught explicitly by mimicking real-life teams and projects where students focused directly on learning these skills along with the technical knowledge. Additionally, coding bootcamps tried to respond quickly to industry needs and the latest technologies. C S professors said it was difficult to update department curricula, and some said they didn’t think teaching up-to-date technology was their purpose anyway. My Views At a panel I was on at the conference, I presented my view: The purpose of a C S degree is to give students an overview of the scientific field of computing. While this includes some programming, programming is done primarily for the purpose of learning about other areas (e. g. , operating systems, algorithms, machine learning, human-computer interaction). A C S degree is a good first step into the academic field of computer science. In addition, the overview that a C S degree gives can also be used as a starting point for a wide variety of programming jobs. Coding bootcamps, on the other hand, focus on training people for a specific type of programming job (normally full-stack web programming). This means most bootcamps teach some general programming along with specifics of the latest web-programming technologies (e. g. , mean stack) and the latest team-work styles (e. g. , agile development, pair programming). Coding bootcamps are unlikely to cover the fundamentals of operating systems, and C S programs are unlikely to cover the latest web technologies or have much team work. University programs change slowly, but so do the fundamentals of computer science, while coding bootcamps change rapidly, and are able to keep up with the rapid pace of technology change. I expect coding bootcamps and C S degrees to continue existing as separate tracks in the future, whether run independently or jointly (see poster abstract, poster abstract, and paper). Because C S degrees and coding bootcamps have different purposes, they cover different materials and offer students different sets of skills to take to employers. This difference explains in part why some people with C S degrees also attend coding bootcamps (as I found in my earlier study), and explains why some employers value coding bootcamp grads for some jobs and C S grads for other jobs. — — — — — — — — — — — — — — — — — Previous Post: What I Learned From Researching Coding Bootcamps Next Post: Coding Bootcamps: Women Overcoming Intimidation— — — — — — — — — — — — — — — — — References: Q. Burke, C. Bailey, L. A. Lyon, and E. Green, “ Understanding the Software Development Industry’s Perspective on Coding Boot Camps Versus Traditional 4-year Colleges, ” in Proceedings of the 49th A C M Technical Symposium on Computer Science Education, New York, N Y, U S A, 2018, pp. 503–508. “ What Do Employers Really Think About Coding Bootcamps?, ” Indeed Blog, 02- May-2017. [ Online]. Available: http://blog. indeed. com/2017/05/02/what-employers-think-about-coding-bootcamp/. K. J. Lehman, M. Doyle, L. A. Lyon, and K. Thayer, “ Alternative Paths to Computing Careers and Their Role in Broadening Participation, ” in Proceedings of the 49th A C M Technical Symposium on Computer Science Education, New York, N Y, U S A, 2018, pp. 670–671. K. Thayer and A. J. Ko, “ Barriers Faced by Coding Bootcamp Students, ” in Proceedings of the 2017 A C M Conference on International Computing Education Research, New York, N Y, U S A, 2017, pp. 245–253. L. A. Lyon, Q. Burke, J. Denner, and J. Bowring, “ Should Your College Computer Science Program Partner with a Coding Boot Camp?, ” in Proceedings of the 2017 A C M S I G C S E Technical Symposium on Computer Science Education, New York, N Y, U S A, 2017, pp. 712–712. L. A. Lyon, Q. Burke, J. Denner, and J. Bowring, “ Visions of Computer Science Education at Coding Boot Camps and University Classrooms, ” presented at the A E R A 2017, San Antonio, Texas, 2017. Y. - C. Tu, G. Dobbie, I. Warren, A. Meads, and C. Grout, “ An Experience Report on a Boot- Camp Style Programming Course, ” in Proceedings of the 49th A C M Technical Symposium on Computer Science Education, New York, N Y, U S A, 2018, pp. 509–514.","['Programming', 'Computer Science', 'Codingbootcamp', 'Software Engineering', 'Employment']",https://medium.com/bits-and-behavior/coding-bootcamps-vs-computer-science-degrees-what-employers-want-and-other-perspectives-4058a67e4f15,18,['Dev Bootcamp'],1,405,kyle,M,0.017754788200754927,0.9822452117992451
erica mitchell,,It’s All a Learning Process – erica mitchell – Medium,2018-05-03 13:02:30,medium,"It’s All a Learning Process Why did I decide to become a web developer? I wish I could say something altruistic, like “ I want to develop an X X X that will solve X Y Z in this third world country”. I’m not that person. Honestly, all I want is to control my life. I work a job. It’s a nice job. I have a nice salary. I have a nice car and a decent apartment. But I want more. I want a career that allows me to control my life. I want the freedom to work part-time, earning a full-time salary, and devote myself to the things I love. I don’t want to spend my life in an office missing the sunny, beach days. I want to live. I want to live my life. So, I decided that becoming a web developer was the best career choice. I wasn’t wrong. In my past 3 months with Bloc, and the three years self-teaching through various free apps, free sites and paid seminars, I have learned a lot about myself and this career that I am pursuing. I have learned that tenacity is a really attractive quality. A friend recently said “if everyone could code everyone would be a developer”. She was being sarcastic in response to a negative statement that I said but she was also right. Programming and web development is a growing field because becoming a web developer is not easy. It just isn’t. There are days when nothing I do is right and I feel like I need to start from scratch on every project. But I push through. Why? Because this is important to me and my family. Because I am not a quitter. And because I know I can do it. To be a web developer you have to have faith in the ability to push through and keep going when nothing is working. Because at some point it will work. If nothing else in your journey, remember that if you keep trying you will push through whatever wall is holding you back. I have learned that I like to learn to a background of really loud gangster rap or classic jazz. Anything else and I am useless. At my day job I listen to books on tape and podcasts as I write documents and presentations. But when I’m coding I either need anger or really chilled out moments. And I’ve tried putting on other music. I love bachata and Nigerian break beats but if I put either of those in the background while I’m coding, I can’t focus. But me and a little N W A are powerful together. But I have friends who are completely opposite and they need absolute silence to work. Everyone is one different. What works for one person doesn’t work for someone else. You need to determine what works for you and allow that to move you forward. If you are comfortable and happy balancing on a balance ball while you work and it helps your process, get yourself a really nice balance ball. Or if you need to stand to be productive, get a standing desk. Whatever works for you, make it work for you. There are days when I cannot do anything right and I seriously wonder if I made the right decision. And there are days when it all clicks and I am so happy. I know every developer goes through this. Even though I am fairly new in my new chosen profession, I know that there is a light at the end of the tunnel. One day I will wake up and have enough skills behind me to land the job that will sustain me and my growing family. I will be able to work the job I want and not the job I have to and I will be able to create the control I want in my life. But that means that right now I have to push through the hard days. That also means that I need to love the days when my coding goes as planned. And one day I will have far more positive days than negative ones. If you are with me in the majority negative days, take heart that I am right there with you. This will only get better. What have you learned on your coding journey?","['Web Development', 'Programming', 'Coding', 'Codingbootcamp', 'Newbie']",https://medium.com/@ericamitchell1221/its-all-a-learning-process-7939e3088ffe,3,[],0,0,erica,F,0.9955622326515768,0.004437767348423186
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 44 — We’re Almost There – conshus – Medium,2017-05-11 11:46:45,medium,"Day 44 — We’re Almost Thereliner notes: I think I’m grasping Redux a little more. I can see a need to extract all the data to a global place where it can be accessed from anywhere, especially when things get complex. The homework was to create a simple shopping cart and I can see how using Redux would be beneficial. I’d have to check with Brian, the instructor, but I think I may have to utilize Redux for my final project. There’s a lot of data that will be need to be accessed from various sections. hmmmmm…. I was actually here much earlier, but my watch just got Android Wear 2. 0 and I’ve been playing with that. haha Today marks the last day of instruction. We’re almost there. Where’s there? Not sure, but we’re about to reach it. haha I’ve got to prepare a pitch for tomorrow to present my idea for a final project. Just realized that it’s Thursday…really should start putting things together for the radio show on Saturday. haha Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['React', 'Redux', 'Coding', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-44-were-almost-there-1a0aa88a9d5f,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
C Miller,,My First Ruby on Rails Project – C Miller – Medium,2017-05-16 00:56:54,medium,"My First Ruby on Rails Project My First Ruby on Rails Project and some things I learned in the process… College Todo Screenshot: User profile(show) page For my first Rails project I continued with my college themed Sinatra project. After completing the Sinatra project and learning more, I thought I could do a bit better with my college checklist. So I improved upon my first project, the Sinatra College Plan Checklist. College- Todo- Rails is a simple app where users can keep track of tasks related to the college application process and share stories about their experiences. Main technologies and gems: Ruby Rails 5. 0. 1 Bootstrap — gem ‘bootstrap-sass’ User authentication — gem ‘devise’ Facebook authentication — gem ‘omniauth-facebook’ Heroku friendly app configuration — gem ‘figaro’ Pagination — gem ‘kaminari’ Pretty U R Ls — gem ‘friendly_id’ Postgres database for Active Record — gem ‘pg For user authentication I used Devise and Omniauth- Facebook. Users can create an account or sign-in with their existing Facebook account. Digital Ocean has a very good tutorial on using Devise and Omniauth, I found it to be quite helpful. After users login they create their checklists for each college they are applying to. Users can also add college visits, date and time. College visit date must be in the future. I had to create my own method and error to prevent past dates from being accepted in the form. #app/models/college. rbdef college_visit_cannot_be_in_the_past    if college_visit. present? && college_visit < Date. today   errors. add(:college_visit, ""can not be in the past, please   choose a future date!"")  endend Screenshot of Checklist Form with Error Warnings The user profile page displays their checklist and a countdown in days until their visit. Also displayed on the user show page is a stories section, which shows the title of their story, date created and a number count of comments. The story section is a new addition from my Sinatra version. I thought it would be a nice feature to let users share about their experiences and comment on each others stories. I used the ‘kaminari’ gem for pagination, showing only 10 stories at one time. Also users can view stories by most recent or by most comments. Screenshot: Stories Index page (default sort view) Screenshot: Stories Index page (sort by number of comments) I used the ‘friendly_id’ gem to create prettier, easier to read U R Ls. Friendly_ Id allows you to turn generic U R Ls into more relevant U R Ls. With the friendly_id gema generic url such as:https://college-todo-rails. herokuapp. com/stories/012345becomes:https://college-todo-rails. herokuapp. com/stories/listen-to-the-log I really enjoyed working on this project, learning new gems (at least new to me) and pushing my rails project to heroku. Look forward to improving it and adding dynamic features with j Query. You can find my code on my github page: https://github. com/cmiller36/college-todo-rails or check out the project on heroku: https://college-todo-rails. herokuapp. com/. Thanks for reading :)","['Ruby on Rails', 'Rails', 'Web Development', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@CalMiller36/my-first-ruby-on-rails-project-d785c856789c,14,[],0,0,c,Unknown,Unknown,Unknown
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Learning To Think Like a Programmer One Baby Step at a Time (Or: The Tao of Programming),2018-03-16 15:03:24,medium,"Learning To Think Like a Programmer One Baby Step at a Time ( Or: The Tao of Programming) Photo by Annie Spratt on Unsplash Yesterday we had the opportunity to visit Hero Digital in Manayunk. Their office had beautiful wood floors throughout, an open floor plan and lots of light. I appreciated their attention to such details, because a beautiful work environment is nurturing to employees, I believe. For example, I thought it telling they chose to pay for a large, beautiful, custom designed sign showing the (prior) name of their company. To me it said, “ We’re willing to invest in things that may not have a direct impact on the bottom line, but we know go a long way in caring for our employees. We want to give them a beautiful, aesthetically pleasing work environment. ” They did a presentation showing us the Java Script for one of the projects they recently completed. It was interesting and encouraging to see that the things we’re learning right now are very practical and valuable in the real world. We picked their brains about the interview process (among other things), and it was encouraging to be reminded we will not go into a new job knowing everything. In fact, that’s to be expected. We should be upfront about what we do not know. It’s more important to show that we can think like programmers. “ When you get up there in front of that white board, don’t worry about syntax. Just show me you can think through solving the problem. Show me you can think like a programmer. ” This week we are finishing our Jukebox projects and jumping into the Sound Cloud A P I project. I was able to get both to work, but I know my code, especially for the Sound Cloud A P I project, could be much simpler. I know I’m not making all the connections I should be in how I’m getting it to work. Or, rather, I’ve written more code than is necessary to get it to work. But for now, I’m okay with that. I have to be okay with that. Just like a child has to be okay with spelling things wrong when learning to write. Or saying words with extra syllables when learning to talk. Or falling over when learning to walk. There will be extra movement. Movements, letters and syllables that are unnecessary, but get the job done. And as they grow — as we grow as programmers — our code will become simpler, more eloquent and beautiful. The Tao Te Ching says, “ The simplest pattern is the clearest. ” I’ve been trying to think of that while wrestling through a problem. Because often, when I start asking questions on Google, I’ll come across an apparent solution, which probably works, but is not the way I’ve decided to go about solving the problem. I want to struggle through the problem in my own way, in order to understand what’s actually going on beneath the surface. So instead of trying to figure out someone else’s code, which may be above my head at this time, I try to take a step back, pull out my notebook and pencil, and write out what I’m trying to accomplish the old fashioned way. I find that if I break things down into as many baby steps as possible — and use the developer tools Chrome provides to test out each step— slowly, gradually, I get to an answer, even if it’s not the most beautiful or functional way to write the code. The journey of a thousand milesstarts from beneath your feet. …accomplish the great taskby a series of small acts. — Tao Te Ching","['Philosophy', 'Codingbootcamp', 'Learning To Code', 'Problem Solving', 'Programming']",https://medium.com/@josephcardillo/learning-to-think-like-a-programmer-one-baby-step-at-a-time-or-the-tao-of-programming-ec66822e14fe,0,[],0,25,joseph,M,0.004069495880582216,0.9959305041194177
Le Wagon Tokyo,Coding school for creative people & entrepreneurs #startup 🚀Intensive 9-week #FullStack #Bootcamps http://bit.ly/1VQNB08 👀,"Le Wagon ApéroTalk: From blogger to entrepreneur, with Thomas Bertrand",2018-03-05 01:22:43,medium,"Kamogawa, or “ La rivière aux canards” Le Wagon Apéro Talk: From blogger to entrepreneur, with Thomas Bertrand Most French people who were dreaming about Japan 10 years ago know him. Or more specifically they know his blog, “ La rivière aux canards” (the litteral translation for 鴨川), one of Kyoto’s famous rivers. And what started for Thomas as a 1-hour-per-day passion spent on Blogger turned year after year into two businesses. During this very personal talk, we had a chance to discover what led him to first open Bento& Co, a bento boxes online shop, and later on Ship& Co, a smart way to automate shipping from Japan to the rest of the world. What struck us the most With Thomas’ story? Every decision he made, whether it was to open two businesses or a shop in Kyoto, seemed to flow naturally from his day-to-day experience — He never forced himself into becoming an entrepreneur. What to do during your commute? Before social networks and #foodporn appeared (and our attention span dwindled to chunks of 30 seconds), blogging used to be the favorite online channel to share your adventures. When Thomas started “ La rivière aux canards”, there already was a few French bloggers in Tokyo, but no one to cover Koyto’s unique environment: “ I started in 2005, mostly talking about things I had for dinner, what I liked (and disliked) about Japan, people I would meet on the train” Thomas starts, “and I was really passionate about it: blogging every day, spending 1 or 2 hours to write an article. Back then I was working in Osaka, and during my commute I would spend 1 hour just to think about what to write in the evening”. La rivière aux canards Kyoto, depuis 2003. Je vends des boîtes à bento sur Bento&co et aime partager mon Japon ici. lariviereauxcanards. typepad. com If you’re thinking about blogging, the one single advice Thomas has is regularity. And by blogging every day, he progressively grew his audience to 1, 000 views for each post “ I was spending half an hour every day to answer mails, comments… People were also contacting me to meet me or have dinner. And yes, I did answer a few mails during my day job” Thomas continues, “ That’s also when I heard about a French guy selling online through his store La Fraise, and I thought: What if I opened my own online shop? That one Friday evening, I was on Skype with my mum, and she mentioned about Bento. I researched about it, and I guess I made up my mind after just 30 minutes: I’d sell bento boxes”. Shipping bento boxes around the world For those who wonder, we’re not talking about daily meals sent across continents by air: Bento& Co is selling the bento box itself. Even though the idea felt obvious for Thomas when he started in 2008, people around him had a different opinion: “ Friends I was talking to did not believe it had potential… On my side I was sure it would work, and it ended up coming at the right time: the foodie culture was starting, people were becoming more conscious about their health, and being able to cook your meal and bring it to work in a nice box almost became a trend. Keep in mind it was a couple of years before Instagram launch, and another couple of years before taking pictures of your meal became a thing”. Bento& Co physical shop in Kyoto So how do you start an online shop? “ I already had a Shopify account, and two people I met through my blog, one designer and one developer, helped me set it up nicely. I basically got started with 50, 000¥”. Obviously, Thomas had to convince a few people around, including his wife and the tax office “ I had no idea how it would work tax-wise, but a friend of mine just told me to get started and see what happens. So I went to the tax office, and told them ‘ I am going to start an online business’. Apparently they were ok with that”. One thing that came back several times during the talk: Thomas don’t think he could have started this business without his blog’s audience “ People I met from my blog were helping me, and obviously my readers were my first customers”. Hakoya craftsman in action Since then, Thomas expanded his bento boxes providers’ network, and pay a lot of attention to his relationship with local craftsmen: “ We work every single day with customers we don’t see, but we do work really closely with our makers. For example we have Hakoya, located in Kaga, and they do all these boxes by hand. We’re happy to be able to make their craftsmanship known abroad”. From shipping to Ship& Co What do you need to run an e-commerce boutique? Well, not much. Bento& Co is using mainstream industry tools like Shopify, Stripe, Mailchimp and obviously have an account on each and every social network. Thomas is actually pretty positive about the quality of service he gets from Shopify and Mailchimp “ Shopify costs us a couple of hundred U S D a month, same goes for Mailchimp. We did a benchmark, but money-wise I’d say there is no service more efficient than these two”. One thing he was not so pleased about, though, was the shipping process taking more and more of his time every day: “ We started receiving orders from all around the world, and during Christmas we’d receive 100 orders a day. The thing is, I had to manually copy and paste shipping details to get the shipping form, and that was taking me 5 minutes per order…” So after realizing he could spend his time more efficiently doing marketing or interacting with his customers, Thomas started his second venture: a tool that would automate shipping form creation, and enable you to print one in less than 20 seconds. Kyoto's Ship&co raises $920 K to help more e-retailers easily ship and export goods Kyoto-based Bertland, offering a Saa S ( Software as a Service) based shipping and invoice issuing platform named…thebridge. jp It took him two years to get to a satisfying prototype, and you can now get a shipping form printed in 3 clicks: select the order, select the shipper, and print the form. And what started as just a tool to simplify his life is becoming a bigger project: Ship& Co just raised almost 1 million U S D to accelerate its development. That’s where Thomas gets his “raising funds” advice from: “ You just need to ask yourself the right questions. Is it the right time? Why do I need money? Do I want T H I S V C firm to fund me? Can I get a better deal? I received a first term sheet last summer, but somehow we did not close the deal, and I received a much better offer from another V C firm later on. Basically, if you receive one offer, you can probably receive another one”. Since he asked himself the right questions, he also knew exactly what to do with the money: “ We just hired new engineers (including one of Le Wagon Tokyo’s alumni!), and we have 5 of them now. What I like is that they’re not only good tech people, they’re also really cool guys overall. Every single day we’re going to go out for lunch all together… food plays a team building role”. What’s next? When asked about his next steps, Thomas knows the upcoming challenges and is learning how to tackle them: “ With Bento& Co I was doing B2 C… Ship& Co is obviously B2 B, and it’s a completely different way of doing business. We do have a business model, charging 20¥ per form printed, now we just need to convince large companies to use our tool. One critical thing is for example to understand who you need to convince: Is it the boss? The procurement manager?”. Listening to Thomas is truly inspiring, and not a lot of entrepreneurs show this kind of pragmatism and passion. At the end of the talk, that left us wondering: What will his next business be about? By the way: if you happen to know about React or Node, Thomas is hiring! Thanks a lot Thomas for this talk, and good luck for what’s coming :-)","['Ecommerce', 'Codingbootcamp', 'Startup Lessons', 'Kyoto', 'Shopify']",https://medium.com/@LeWagonTokyo/le-wagon-ap%C3%A9rotalk-from-blogger-to-entrepreneur-with-thomas-bertrand-413f1d59312e,0,[],0,87,le,F,0.5308343409915357,0.46916565900846435
Ricky Solorio,,Imposter Syndrome – Ricky Solorio – Medium,2017-07-11 07:42:42,medium,Imposter Syndrome If you feel like you just can’t grasp learning to code your not alone. Errors in your code and weird concepts that hurt your brain can make anyone feel frustrated and incompetent but again you're not alone. I believe every single coder has felt this feeling of imposter syndrome whether they would like to admit it and I say to you again you're not alone. I wanted to make this blog post because I believe everyone who has felt this way should not feel alone. When learning code got difficult I felt like I wasn’t cut out to be a programmer. I felt like I was just an android enthusiast who wanted to learn to code because of the high pay and all the and the cool things Google offered their employees but the truth is they are all true except the imposter part. When we feel that way I believe it's just a phase all coders have to go through because in life there will always be someone better at you at something and vice versa. And if you believe that all professional programmers are perfect coders has a lot to with having an imposter syndrome. We are all human beings that make mistakes in life and code but don’t let being a coding imposter be one because Y O U A R E A P R O G R A M M E R on her/his way. I believe in you!,"['Imposter Syndrome', 'Coding', 'Codingbootcamp', 'Unicorns', 'Learning To Code']",https://medium.com/@greatesteverr16/imposter-syndrome-69ae0cf6ff7a,0,[],0,1,ricky,M,0.008410353279812903,0.9915896467201871
Sam Bakkila,,JavaScript ES 6: let and the dreaded Temporal Dead Zone,2017-07-06 15:15:27,medium,"Java Script E S 6: let and the dreaded Temporal Dead Zone I’ve seen a lot of misunderstanding between var and let in Java Script. The differences at first seem deceptively simple: Declaring variables with let, which is block scoped (scoped to any use of curly brackets) rather than function scoped (like var) This solves a lot of the issues that developers who are used to other languages have with Javascript — like the pollution of the global namespace from variables declared outside of functions. However, there are some performance related issues with let that not enough people know about, particularly related to the ghastly sounding “ Temporal Dead Zone”. Because of this, I recommend only using let if you have a particular need for let — more on this later. What is the temporal dead zone? I’ve seen some misinformation about this all around the internet. A lot of the stackoverflow answers on this topic are either wrong or at least a little misleading. Definitely refer to the most trusted sources on E S 6 that you can find for unusual Java Script language features. Here is the M D N’s explanation of the temporal dead zone: In E C M A Script 2015, let bindings are not subject to Variable Hoisting, which means that let declarations do not move to the top of the current execution context. Referencing the variable in the block before the initialization results in a Reference Error (contrary to a variable declared with var, which will just have the undefined value). The variable is in a “temporal dead zone” from the start of the block until the initialization is processed. By itself, this doesn’t seem to be a problem. Many developers would prefer to get an error when trying to use a variable that hasn’t been initialized yet rather than have the code execute with the variable having the value undefined (which is what happens with var hoisting). I agree with this; I would much rather get an error message than have my code fail silently. But the Temporal Dead Zone is not your friend… However, there are some performance issues that arise from this temporal dead zone. There’s actually an open issue about this in the Node. js github repository. You can play around with this snippet of code to see these performance problems firsthand:console. time(‘var’);for (var i = 0; i < 100000000; i++) {}console. time End(‘var’); // about 50 ms on my machineconsole. time(‘let’);for (let j = 0; j < 100000000; j++) {}console. time End(‘let’); // about 200 ms on my machine There’s a lot of quirks to this that are best understood by reading the issue on the github page, but the take home points are:let typically performs more slowly than varsome of the slower performance is to be expected and is connected to the core functionality of let (more execution contexts! sometimes you need this!)having variables in the temporal dead zone can drastically slow down seemingly unrelated code in the same scope. Try the example below if you want proof:console. time(‘var’);for (var i = 0; i < 100000000; i++) {}console. time End(‘var’); // now much slower, around 300 msconsole. time(‘let’);let j // this declaration places j in the same scope as i, spreading the T D Z //performance problemsfor (j = 0; j < 100000000; j++) {}console. time End(‘let’); // still 300+ ms My recommendations for dealing with this are: Restrict your use of let to when you actually need a variable to be block scoped Do manual hoisting — move the let declaration to the top of their scope — to avoid the temporal dead zone Add extra brackets to limit the amount of code in the same scope as the let declaration that can be incidentally impacted by this performance problemconsole. time(‘var’);for (var i = 0; i < 100000000; i++) {}console. time End(‘var’); // var performance is fast again! : Dconsole. time(‘let’);{ // these extra brackets stop the T D Z performance problem from spreadinglet jfor (j = 0; j < 100000000; j++) {}}console. time End(‘let’); When do I really need to use let? The only pretty mandatory use case for let that I can think of is whenever you want an async action to happen in a loop, and you need fresh variable bindings for each iteration through the loop. This example from the M D N highlights this problem very well…var messages = ["" Meow!"", "" I'm a talking cat!"", "" Callbacks are fun!""];for (var i = 0; i < messages. length; i++) { set Timeout(function () { console. log(messages[i]); }, i * 1500);} This code will console. log undefined three times, because i has been incremented to 3 before any of the callback functions from the set Timeouts actually execute. Declaring i as a let will solve this problem for us. Email me at sbakkila@gmail. com if you can come up with any other solutions to the problems created by the temporal dead zone, or other situations where we absolutely need let!","['JavaScript', 'ES6', 'Coding', 'Codingbootcamp', 'Full Stack']",https://medium.com/@sbakkila/javascript-es-6-let-and-the-dreaded-temporal-dead-zone-85b89314d168,0,[],0,82,sam,M,0.011474244831798909,0.9885257551682011
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 17 — (12) – Mike Brave – Medium,2018-09-06 01:16:35,medium,"42 Piscine Day 17 — (12) Edit: This is part of a series that culminated here, Next post. Previous post. Still struggling to focus, but today was slightly better. I think it’s almost like I’ve lost hope in my ability to get in, I haven’t given up, but mentally I’m dragging my feet in an almost “what’s the point” kind of way. It’s something to push through, and to ignore rather than accept. Ultimately the piscine is a battle of resilient thinking, of keeping emotions in check, and of prioritizing time appropriately. In all three areas I’ve stumbled, tripped and struggled, helping me to learn some incredibly valuable lessons. I think I may look back on this month as a formative time that eventually really shaped who I am and how I do things. There is a student here, a pretty cool guy, everyone likes him and today at lunch I made a comment about the lunch lady having given him more curly fries than me (she did). He just sort of looked down and in a non confrontational and still really cool way said “well that’s sort of jealous” and uh, you wouldn’t think of that as being a life changing insightful statement, but it blew me away. I’ve been comparing myself to other people, looking at their stats “they are level five, I’m not even level one” kind of self talk. I’ll hear myself say things like “we all learn at different paces and speeds” but do I actually believe it, I mean I do, I don’t say things I don’t believe, but then somehow I work it out in my mind that when it comes to me there is some exception, that it’s true for everyone else, but for me, no with me I’m held to some sort of higher personal standard. All in all a stupid attitude, short sighted and worst of all, it was petty and holding me back from actually being able to learn. So long story short, thanks for calling me out at lunch man, means more than you know. Some good news though, I got some of day 10 turned in and graded, so I finally got above level 1, a small accomplishment to be sure, barely worth celebrating, but I feel a small amount of relief to at least get that far. Most people have started seriously studying for the next exam. I guess showing growth matters, and most of us understand the importance of the exams now, so most have started a routine already, this has made us interact less in the lab today, interactions aren’t absent, but it is less. There also seems to be a shortage of correction points as predicted. lots of people who left took their points with them into oblivion. So the economics are skewed. Ironically I have a small stockpile because I didn’t turn in anything to be graded for most of week 2 because I was struggling, but I still graded people as it helped me learn. I’ll have to divvy some out or something. As it turns out, when we give points to prefects (cadets who are volunteering as piscine staff) when they grade us, that’s how they earn their correction points that fuel the economy of correction points for cadets as well. So there is an entire ecosystem with a near permanent shortage during the whole of the program. I would shift the design a touch to renew some points like one a week or something, still keeping it a shortage but more manageable. I’d have to look closer before actually developing a solution, but it also may be functioning exactly as designed. I guess I’ll find out if I ever make it to being a cadet. My head count lately is around 75–85, but for the test on Friday 108 people have signed up. So I think there are still about 100 of us or so, which means my counts before have been off between about 10 to 20 based on how many I’ve personally seen leave lately. I find myself a little angry about another article about the piscine that’s gotten some traction lately. I wasn’t mad about it at first, but he sort of put such a positive spin on all of it that I feel it has taken some liberties with the truth making it seem easier and more attainable than I personally feel it is. Hopefully this is only my pessimism speaking, I would rather him be right, but I don’t think that’s the case. He came from a background of having a degree in comp sci, and feels that it didn’t really help him (saying it only helped him the first week), I think he is just blind to how much it helped him. I know how it feels to want to take full credit for an accomplishment, to discount the privileges and advantages one has entered the game with. Rich people do it all the time in fact there are entire psychological studies based around when people start with privileges they are blind to it and feel it’s fair (see the study about unfair monopoly gaming). In his defense he has earned all he’s gotten, and should rightfully be proud, but I’m angry about how the very thing I’m currently struggling with would be sugar coated as easier than it is thus discounting my own current struggles. This is hard, really hard, one of the hardest things I’ve done, and I think it’s really hard for those who come from a coding background too, but I also think that they seem to be incorporating and learning the material faster than the rest of us with less coding experience, to not acknowledge that feels unfair and heartless. (edit) I just talked about not comparing myself to others and then immediately went on a rant about people minimizing a struggle, ironic, and I apologize, please ignore my complaining. I need to lighten up. Assignments for day 12 are as follows. Makefile with display file functioncat command clonetail command clonehexdump command clonelast command clone","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-17-12-4bfa3bd6b66e,3,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
V School,Human Centered Edtech® // An edit on #techlife for a path to fulfillment. Full Stack and XD Education.,6 Reasons to Choose Alternative Tech Edu. – V School – Medium,2018-04-03 12:25:17,medium,"6 Reasons to Choose Alternative Tech Edu. “ I can’t find people that are coming out of school prepared in U X out of any of the colleges around here… So, I thought I could complain about it or I could just create the curriculum and teach it. ” — Ryan Potter Just like we anticipated! When three of V School’s senior coding, design and hiring advisors come together for a panel discussion, there’s bound to be a lot of laughs and a lot of great points of advice; or rather, Data• Bits. Our first video installment of Data• Bits, our latest channel on You Tube for digesting # Techlife at the courtesy of industry thought leaders, features the panel discussion, which happened on March 21st at Impact Hub Salt Lake. Watch 6 Reasons to Choose Alternative Tech Edu. or read below: This panel discussion was focused around the pain points of traditional academic systems — when it comes to career readiness, and ultimately the idea that alternative tech education was born because there was a disconnect between what people were coming out of school knowing and what was most needed on the front lines of emerging tech companies to continue to meet the demands of the industry. Bob Zirol, Blake Beus & Ryan Potter of V School. Featuring: Blake Beus // V School Tech Advisor, former Sr. Dev at Powder Mountain and Summit, Hiring manager Ryan Potter // Head of Design @ V School, Head of U X @ Contravent, former Partner @ Super Top Secret Bob Zirol // Creator of V School’s Full Stack J S Curriculum and lead coding instructor who has been with V School since infant years. For Blake, Potter and Bob, their everyday relies on people that are career ready. When asked to discuss what their thoughts were on alternative tech education as opposed to a traditional academic setting, we found that the traditional pathway seems almost irrelevant today and here’s why: Outdated Technology In tech you need to stay hot! The continual churn of new languages, programs used, theories, niche topics — all prove that technology is incredibly dynamic. There’s always a buzz word, hot button and these trends create demands that further product invention, increase tech sales and of course create need to fill more diversified tech jobs!2. Tech Can’t Keep Up“ You can’t have a class that takes 8 years to approve on a technology that’s less than a year old. ” — Ryan Potter Necessary programs for Experience Design / User Experience Design: Sketch, X D and Envision are less than four years old, some of them a year old. It’s hard for traditional education to keep up technology used in U X and coding. Sometimes, it takes 6–8 years to pass new tech into a curriculum because of the long vetting processes established, which does not allow traditional schools to quickly assess the needs of the industry and shape. 3. It Doesn’t Prepare You“ I can’t find people that are coming out of school prepared in U X out of any of the colleges around here ( Salt Lake City), so I thought I could complain about it or I could just create the curriculum and teach it. ” — Ryan Potter Alternative tech education has the flexibility to shape curriculums according to technology trends, in little as a week’s time if necessary. If an expert can create the curriculum, you can learn the bleeding-edge framework, program, theory or what have you and fill a job around that industry void. 4. Higher Impact“ I took web one dev class in college, but in order to pay bills I had told … the Lead Entrepreneurs Association I could build websites. So I spent a lot of time just figuring it out… I ended up getting the scholarship. ” — Blake Beus Even, 10 + years ago there were ways other than traditional academic systems to learn web development. However, they were not as proven, concise or taught by industry leaders, but rather the community. Today, with more maturity, alternative tech schools such as V School have blossomed to prove that these less traveled pathways are more impactful on your career because they allot for industry change and help you actually land your goals, while saving you money. 5. The Basement Coding Stigma“ A dark room in a basement coding away at a computer used to be the truth, but I’d say that today it’s very few and far between that you’ll find jobs like that” — Bob Zirol Tech is life now! It is bright and inclusive, and that old stigma often thought of coders is now broken. Tech is now characterized as sexy, it is taught in modern, elite office spaces and life of a techie is even glamorized today. 6. Learn What You Need“ I’ve loved being a part of something that allows me to help other learn what they need to learn to get a job. ” — Bob Zirol Okay so you want to go to college to become a software developer, but it’ll take you 4 years and you have to pay for and take classes that don’t benefit your end career goals. This is wasted time & money! Alternative tech schools push their bottom line by simply providing the skills needed to land the best jobs in the least amount of time with lower costs. Our students at V School are delighted and eager to learn when they see a timeline of start to finish that is reasonably manageable and can attain their career goals in as little as 3 months. & there you have it — 6 great reasons why the need for alternative tech education is so strong, and why when looking between both traditional education and a tech school — you may save time, money and land a job faster and be more prepared by choosing the latter. Love // V School V School is Human Centered Edtech // An edit on techlife for a path to fulfillment. Our mission is to refactor edtech so that the hard and soft skills equally assist in forging a more fulfilled life in tech. We currently offer Full Stack Java Script and Experience Design. Our next cohort begins April 17th. Learn more here or email us for more information.","['Education', 'Tech', 'Coding', 'UX', 'Codingbootcamp']",https://medium.com/@VSCHOOLHQ/6-reasons-to-choose-alt-tech-edu-e6aaf147ae23,10,['V School'],1,7,v,Unknown,Unknown,Unknown
Kate Walters,,How Coding Bootcamp Helped Save Me – Kate Walters – Medium,2017-06-05 20:50:50,medium,"How Coding Bootcamp Helped Save Me I started this blog as an assignment my first week of coding bootcamp. I never could have imagined a better outcome as that person brand new to code. I not only found something I want to do every day for the rest of my life, I also get to be a part of an awesome company that listens to my story. Read the first blog someone besides me published! I’m not usually the type to take huge risks, that is, until I quit my job last year in pursuit of a drastic career change. I was working in customer support, taking phone calls and tweaking already existing H T M L and C S S when I found out about coding bootcamp. I applied in April of that year just to see what would happen, and that ended up snowballing into giving my two weeks and eagerly sitting in a classroom in the middle of June. How I found myself here was more of a calculated risk: I’d done research, talked to a few people at my last job who had gone to bootcamps, and got that last push to just do it from my partner. Long before I realized it, I was setting myself up to think like a developer. “ Long before I realized it, I was setting myself up to think like a developer. ” F R O M L A W S C H O O L T O C O D I N G C A M P My career path was never straightforward — I graduated with a degree in Communication and had law school in mind, but decided it wasn’t for me after working at a law firm for a grand total of two weeks after college. Not following my plan of becoming a lawyer ended up being the best miss of my life. I found myself working in customer support after my stint in the law office, and didn’t even know what coding was until I needed to learn H T M L and C S S for my role. I found myself dedicating more and more time to learning the ins and outs of these simple languages and grabbing tickets that let me dive into any sort of code. Eventually, I knew it was something I wanted to pursue full time, so I started looking into coding bootcamp options. Starting a coding bootcamp seemed like such a gamble financially and time-wise, but I knew it was right. Once I was ready, I decided take the risk. After day one at bootcamp, I knew I had made the right decision. T H I N K I N G L I K E A D E V E L O P E R Taking this risk has helped me be a better developer by giving me a real life example of the lifecycle of an issue: You have a vague understanding of what the problem is, you do more research and talk to other people to get a better grasp on it, and sometimes you get a little push to try something and see what happens (there’s a pattern here!). Since joining Square Root in December, I’ve lived out this cycle many times — from my first ticket of updating our product notifications to users, to my last Hackathon project creating more readable filter results in our product. The most notable example was revamping one of our A P Is to help improve our product speed. To do this, I paired with another developer and we spent a good three weeks making changes that we hoped would allow for a snappier page load time. We could only minimally test our changes before they were deployed, but I was told that as long as the app doesn’t load more slowly, it would be considered a success. That mindset gave us some freedom, and we actually sped up the load time from 12 seconds to about 4 seconds! While bootcamp didn’t give me all the skills I needed, the experience was a great springboard to start my new career. Software development involves taking calculated risks, and sometimes a leap of faith, and Square Root has continually helped me find the next channel of learning. Coding Bootcamp: The Best ( Most Calculated) Risk I've Ever Taken Taking this risk has helped me be a better developer by giving me a real life example of the lifecycle of an issue: You…square-root. com And, as always, here’s a cute kitten picture to sweeten the deal. Now that you’re done reading about her, pay attention to M E.","['Programming', 'Codingbootcamp', 'Kittens', 'Blog']",https://medium.com/@katedoesdev/how-coding-bootcamp-helped-save-me-9645f3488201,3,[],0,0,kate,F,0.9988987335435751,0.0011012664564248886
William A. Mooney,Christ Centered Dev. || Developer || Blogger,1st Semester Break — Vivixx Bootcamp – William A. Mooney – Medium,2017-07-17 13:30:49,medium,"1st Semester Break — Vivixx Bootcamp Baguio City Victory Liner to Manila While going thru the Vivixx Academy Coding Bootcamp I wasn’t really planning on what to do during my 1st Semester break (which was 1 week off) but on Tuesday on the last week my girlfriend practically last minute decided to ask me if I wanted to go to a wedding in Quezon. I was thinking Quezon City in Manila so I thought about it for a short time then decided to come to Manila for my break to visit her. My new haircut. :) During that week I got a new haircut and made the preparations for my trip to Manila during the break. Which included packing, getting a haircut for the wedding, purchasing the Victory Liner bus ticket from Baguio City to Pasay ( Manila) and making reservations for a nice condo on Air Bn B near my girlfriend’s work. So on Friday 7th, 2017 I got out of class earlier and got to my apartment to quickly shower. I didn’t have much time until my bus left so I finished preparations then grabbed a cab to the Baguio City Victory Liner. Normally the trip can take 7–9 hour’s on the standard bus but I chose to purchase a 1st class ticket which wasn’t much more which cut the travel time down to 5–6 hour’s and had an on board restroom. While on the bus I got to meet another foreigner who was also from Florida in the United States. We chatted for about 45 minutes or so and I found out that he is a business owner who manages other programmers & Web Developers who use . net technology. I explained to him I am also into Web Development & computer programming at the Vivixx Academy Coding Bootcamp in Baguio City. We ended up exchanging contact information then proceeded to watch the on board movie. Leula, my beautiful girlfriend picking me up around midnight. After 6 hour’s the bus arrived at our destination in Pasay and I was greeted by my girlfriend and her brother. She told me it would be about two hours trip to San Pedro, Laguna so I offered to pay for a taxi there but she refused due to the cost. So we had some fun walking for a while and took some Jeepney’s and a bus. Once we arrived at her mother place her eldest brother was kind enough to cook for us while we lounged around and talked. Unfortunately we had to leave around 4am to take a bus to Quezon Province which was like 5–6 hour’s on another bus. . not Quezon City like I thought. So we all stayed up and prepared to leave. At 4am those of us who were going gathered our stuff and headed out for a long trip to Lucena City, Quezon Province. We arrived there at about 9:30am or so and were greeted by Leula’s aunt, uncle and cousin’s. The uncle I had met before when I first visited Leula’s mother’s house. He is the brother of her mother. We all made our way to the house where a lot of close relatives of the bride and groom were preparing for the wedding. After a while we also were able to wash up and change cloths. Once we were prepared, Leula and I went to town where the wedding was being hosted. The wedding was very different then a traditional western wedding. It was very lovely. The Pastor and some other’s gave speeches, sermon’s really about marriage. There was the typical marriage vows but some of what was unique was the signing of a lot of important paperwork by the bride, groom and the sponsor’s of the marriage. Also they allowed other’s to speak, Leula even got a chance to sing “ I just want to grow old with you” and I was even prompted to pray. So I made a short prayer thanking Yahweh for this wonderful occasion, the family and that they would all be blessed. Afterward’s we ate some very tasty Filipino food that was catered. Everyone seemed to have a wonderful time. The children were very playful. During all this and especially afterword’s there was many pictures taken. Once we left we went back to the house and relaxed for a few hours with Leula’s relatives before starting on the long trip back to San Pedro, Laguna. Finally once we arrived at San Pedro we got to have some sleep after nearly 48 hour’s without it. Picture of the kids and I together. Leula behind the camera. The following day we relaxed until a group of young children came to see the foreigner who was staying at Leula’s mother’s house. These children attend the same Church as Leula and she even got to teach many of them in Sunday school so they weren’t too shy once they met me. They all gave me high fives and were asking me many questions. We talked for some time and they laughed when I spoke some of the there language. Other’s came up and touched my belly because they hadn’t seen such a big guy before. The kids were so sweet about it. I told them I had “taba” (fat) to lose which made some of them giggle. Eventually some of the kids got on the ledge seen on the right of the picture and wanted me to pick them up and place them on the ground. They seemed to enjoy me playing with them. After what seemed like an hour we took some pictures and then I went back inside to wash before Leula and I were to head to the condo I rented during the weekdays. We took a Jeepney and a bus to S M Light Residences in Madaluyong where we met with the owner who got us admitted into the place. It was a very nice condo with excellent hot water for the shower (that’s uncommon in the Philippines). While near Leula’s work we got to do several things, go to S M Light Mall to eat & shop, travel to her dorn and visit her dorm mates and even have one of her good friends visit us for dinner in the S M Mall but the most memorable time there was while at the Manila Zoo. We had a wonderful time talking and seeing the various animals. Even got to witness a tiger start pacing his cage after we approached. Cute picture of us with a massive gator behind us… Throughout all of this we both had a great time and got to take many awesome photo’s. The gator in the photo to the left was like 12–14ft long. After about an hour and a half we finally finished up at the Manila Zoo. We ended up heading to Rizal Monument and had a local take some hard copy photo’s of us. We also got to see the water show there which was interesting. During the morning I was checking out of S M Light Residences I got to say goodbye to my girlfriend as she went to work then I prepared for the long journey back to Baguio City. It was mostly uneventful but I had a lot of time to reflect on the amazing week I got to spend with Leula and her loved ones. That was my time during the 1st Semester break at Vivixx Academy Coding Bootcamp. Please feel free to like and share this blog or contact me via Twitter. Christ Centered Dev. || Coding Bootcamp Student || Blogger","['Travel', 'Codingbootcamp', 'Manila', 'Weddings', 'Zoo']",https://medium.com/@williammooney/1st-semester-break-vivixx-bootcamp-3beaa80bd19c,0,[],0,1,william,M,0.0038724765712618,0.9961275234287382
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,"Day 60 — Git Up, Git Out – conshus – Medium",2017-06-05 13:43:03,medium,"Day 60 — Git Up, Git Outliner notes: Friday…we presented our final projects to the class and instructors. Really cool to see how everyone applied what they’ve learned these past 12 weeks into projects of their own from start to finish. Of course I was chosen to go last…haha At least when it was my turn, everyone was so ready for lunch that I think they took it easy on me. haha Since I deployed my project, I had everyone login and test it while I demoed it. Everything went well with my Demo except when I went into the admin dashboard. For some reason, I was getting an error I never encountered before. After lunch (they took us out to Ace Cafe Orlando, really good food by the way) I figured out what went wrong in my presentation. Turns out someone added a tour that had no locations. That then proceeded to throw my program in to an error spiral. haha I fixed it by adding some error checking on the form used to create new tours. Glad that it happened during the presentations and not Demo Day in front of potential employers. Oh and we got an opportunity to take headshots… Saturday…. of course was O U R show day… as always, you can check out the latest show at k N Ow B E T T E R H I P H O P. com Sunday… Pretty much spent the day getting ready for Demo Day. Got some business cards and signs printed up. ( Of course when I’m ready to print, I find out that I ran out of ink and had to buy some more. haha) As far as working on the site, I only really did some cosmetic things(colors, spacing, etc). Don’t need to accidentally remove/change something and break the whole project right before Demo Day haha. I changed my Instagram username, I can now be found at @dwane. io. Also, I created a brand new Twitter account @ Dwane I O primarily to keep up with the tech scene inside and outside of Orlando Well here we are… Demo Day… The final day. In my very first post I wrote: I’m hoping that these upcoming 12 weeks will show me what I don’t know and where are the gaps from just doing self study. Well, 12 weeks later, I can without hesitation say that I have seen and learned so much more than I thought I would. Additionally, it has shown me that I was traveling down the right path on my self guided journey. Want to show my gratitude to Brian, our instructor, Adam, Ben, Margo and everyone on The Iron Yard staff. To my fellow classmates Tyler Davis, clebbano, John Rowell, Detra Sheard, William J Weekes Jr and Marvin Filus: we’ve struggled together, worked hard and came out the other side much better for it. Thanks for being with me on this journey. If you guys every need anything don’t hesitate to reach out. Now it’s time to Git Up, Git Out and Git Something! Till next time. peace piece Dwane / conshusdwane. io H I P H O Pand C O D E. com","['Git', 'Coding', 'Code', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-60-git-up-git-out-9f60e476a0e3,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Jason M. Grigg,"Web Developer @The Iron Yard, Durham",Tough Day – Jason M. Grigg – Medium,2017-05-11 00:20:54,medium,"Tough Day Ok, well up to now the pre-work for The Iron Yard Web Development class had been going real well. The introductions and assessments for Java Script and Ruby went very well. I obviously struggled with the assessments, but I did get through them. It was most definitely not easy, but I can see the light through them. Today was Java, and that was a completely different story. I was a little frustrated after spending two hours on the phone with Blue Cross Blue Shield of N C trying to make some changes to my insurance policy, so maybe that had something to do with it. I just really wasn’t able to comprehend what the lesson was trying to teach me. I decided the best plan of attack was to put it aside for a little while, look some at H T M L and go back to it in a day or two. I still have over a week before class starts so I have time, I was just frustrated that I wasn’t getting it today. I have to admit, I don’t do very well with reading a lesson and then trying it myself. I have a feeling that working in a classroom environment, and working with 0ther students will make this much easier. I am just really looking forward to getting started and working through problems rather than working on them.","['Web Development', 'The Iron Yard', 'Codingislife', 'Codingbootcamp']",https://medium.com/@jasonmgrigg/tough-day-4ee964fd800d,0,['The Iron Yard'],1,0,jason,M,0.004847072024143468,0.9951529279758565
Jacob Moore,,"Day 13 — Event Loops, Algorithms, and the DOM – Jacob Moore – Medium",2017-08-02 17:19:02,medium,"Day 13 — Event Loops, Algorithms, and the D O M Struggles: D O M is the bane of my existence. So our work yesterday was to basically write H T M L in the D O M using for loops. It was basically taking a large array, generate the entire code, with template literals, pass it through existing H T M L, and then run it through a for loop. It took a long, long time to get me to pull in the originating data over into my J S file, like an hour and a half. Then it was a matter of trying to get it to loop through. Understood: I get template literals. It’s pretty straightforward but man…applying it through a for loop took a long time. Looking forward to: Back-end? I’ve seen C, C#, C++, S Q L and those I kind of get at the most basic level. They’ll make sense I think a bit better than some of the other stuff we’ve been doing. In general: I’m hitting the wall in connecting everything together. We went from: H T M L, C S S, Flexbox, Forms, Responsive Web Design, basic Java Script, Conditional Statements, Functions, Objects, Arrays, Loops, D O M, Event Loop, Template Literals, and Algorithms. I think I hit the wall right around Loops. H T M L, C S S and Flexbox all got grouped together and that was worked on seamlessly. I got it all they played nice together. It’s the Java Script that I’m struggling to put together and say “rely on this other thing that we learned”. At least until I get it I’ll keep plugging away at it and try to gather it together in the same thing.","['JavaScript', 'Codingbootcamp', 'Amateur']",https://medium.com/@jacob.w.moore/day-13-event-loops-algorithms-and-the-dom-a5f6d82338bd,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Maddy King,Education x Tech,How to turn Cyborg — Weeks 12–15 – Enspiral Dev Academy – Medium,2018-03-05 02:54:34,medium,"How to turn Cyborg — Weeks 12–15 My adventures through Dev Academy’s web development programme“ Hey man. I’ve kind of a hit a wall. I couldn’t do any of the stretch goals in Sprint 6, didn’t even know where to begin. I feel like I don’t know enough J S to move ahead with functional programming in Sprint 7. I’ve gone back and I’m going through codecademy’s Java Script programme but it’s taking so much time. What’s your advice?” Hello everyone. Yes it’s been a month since my last blog in the How to turn Cyborg series. As you can see, I’ve encountered some challenges. This sprint was really hard for me because for some reason I started at the second challenge, 7. 1, and skipped the first, 7. 0. I was already feeling unsure of myself because I hadn’t been able to do any of the stretch goals in Sprint 6. I wrote:“ The choice I’m facing is: Do I spend more time and enter the Bootcamp really confident, or do I push ahead now and face down struggle street?” The first challenge in Sprint 7 taught us everything we needed to know to complete the second. So when I came into the second challenge without having done the first, I felt completely overwhelmed and confused and found that I didn’t know anything and couldn’t complete any of the problems. I really stuck at it and tried to do them, but found that I was continually relying on looking at the answers to figure things out. This sprint was all about doing more complex things with arrays, such as mapping, reducing, filtering, sorting, splitting, joining and reversing. Arrays are sets of data, such as a list of quotes, or a series of numbers, so being able to juggle that data with one command is super useful. But without knowing that you could do these things, the subsequent challenges were very much impossible. Me with my support crew from way back (ft. adorable brother) This really highlighted an issue with my self-talk around coding, as my reaction was to feel a bit overwhelmed and helpless. “ Maybe I can’t do this” is the scary message that comes into my mind. I can do lots of things I put my mind to, but they are almost always in the creative, empathetic, communicative, project management type space. I “ Get Shit Done”, and I work well with people, and I teach myself new skills like S E O or video editing or sculpture. But coding feels like such alien territory, in the realm of dragons, quasars and leaking exhaust pipes, that I have found self-doubt to be a new, real and surprising thing. Perhaps if I had gone into the second challenge with more confidence I would have realised sooner that I must have skipped a step. On the other hand, perhaps hitting your head against a challenge that’s impossible to complete would make anyone falter. Who knows. So I talked to Harrison, the Phase 0 coordinator. He reassured me that I was going fine, that Phase 0 was more about showing us what was possible, not expecting us to get it all right straightaway, and that I should just keep going with it. I felt so much better. I realised I should have talked to him sooner. As I have been in Morocco for the past two months I’ve been in the wrong time-zone to attend group checkins, and I think that would have really helped too, because then I could see where other people are at and get support. After talking to Harrison I looked back at the challenges and realised I had missed the one that told us what to do. Once I completed the first challenge, I could do the second with only a minimal level of difficulty. I resolved to change my self-talk around coding. Now when I’m mystified about what to do in a challenge, I read through all my notes to remind myself what’s possible from what we’ve learned. There’s always something in there, like “ Oh yeah, random number generators” or “ That’s right, concatenating arrays, ” that can help me solve the problem. The big learning is to look at the tools in my toolbox and hack a solution together, rather than feeling lost and throwing it all up in the air. So thanks for bearing with me readers! Phase: 0 Weeks: 12 -15 Sprint: 7 Hours logged: 15:30 Would you like to learn the skills to build technology, and begin your journey to a creative, well-paid job that you can do from anywhere in the world? Apply for Dev Academy. Start the preparation phase through remote learning, before entering the in-class bootcamp in Auckland or Wellington. Graduate only 9 weeks later with the skills to become a junior web developer and craft the future. Change your future today!","['Tech', 'Coding', 'Codingbootcamp', 'Women In Tech', 'New Zealand']",https://medium.com/enspiral-dev-academy/how-to-turn-cyborg-weeks-12-15-a06caabcb024,0,[],0,82,maddy,F,1.0,0.0
Angel Alagao,Software Engineer @Naborly. Mentor @HackerYou @LearningCode. 🐶,Why Math is Useful After All – Angel Alagao – Medium,2017-05-01 00:44:12,medium,"Why Math is Useful After All Let’s be honest, you probably hate math. Unless you’re Will Hunting of course, but even he chose love instead of math. (“ It’s not your fault”. R I P Robin Williams — probably my favourite actor of all time. ) As a learning developer however, mathematics and love may just very well complement one another. ( Just me?) For the current project I am working on, I am limited to only using floats ( Don’t even get me started, floats suck lol). Luckily however, I found a godly silver lining. calc() C S S function Exploring the calc() C S S function has been a delight when it comes to resizing. Because: It does the math for us. It allows fluidity across any layout. It does the math for us. When dealing with pixel-value margins however, we might have to do some math. It’s simple math, not the complicated kind So don’t worry. Here is an example of where you might run into a problem with your layout, where you are using percentage-based widths and pixel-value margins. Without calc(). suggested-post figure { width: 25%; margin-right: 20px; float: left;} Now here is where we would have to do some math on our own to account for the margin, right? (*pun intended*). With 60px of margin in total, we would just have to divide it by 4 and use this value to subtract from our percentage width. 60px/4 = 15px We can express this in the calc() function, using the subtraction operator. width: calc(25% - 15px); To remove the margin on the last figure, we would just need to add the pseudo-class, last-child. . suggested-post figure:last-child { margin-right: 0;} And, viola. With calc(). suggested-post figure { width: calc(25% - 15px); margin-right: 20px; float: left;}. suggested-post figure:last-child { margin-right: 0;} Easy-peasy, Lemon-squeezy If I was not limited to using floats, I probably would have flex-box’d the hell out of this project. But in this case, calc() in addition to pseudo-classes ( Shout outs to last-child!) have been very helpful. Hence, math is indeed useful after all. Oops, I forgot to tell you. I am currently attending Hacker You’s immersive 9-week bootcamp! It’s been pretty great so far. # Boot Camp Life # Cohort14","['CSS', 'Web Development', 'Front End Development', 'Coding', 'Codingbootcamp']",https://medium.com/@angelalagao/why-math-is-useful-after-all-365dd675a8c7,0,['HackerYou'],1,5,angel,M,0.29493152048165794,0.7050684795183421
Monica Kosciuk,Full-Stack Developer // Lifelong Learner // Engineer // Climbing Enthusiast // Improviser,Bootcamp or no bootcamp? – Monica Kosciuk – Medium,2017-07-20 23:14:47,medium,"Bootcamp or no bootcamp? I’m starting this blog as a record of how I decided whether a bootcamp was right for me and how I’m doing on my full-stack web development journey. I handed in my first resignation letter three months before I ultimately left my job in the field of Nuclear Engineering, a degree that, three years before, I had poured months and months of mental thought and late nights and collaborative homework sessions into completing. Before I became a Nuclear Engineer, I started out university at Rensselaer Polytechnic Institute pursuing a Computer Science degree and, like many women who go into a field where there are so few of us sitting in the crowded lecture hall, I started to get imposter syndrome about what I was doing there and how much I knew even though I had a good grasp on the material that my classes were covering. I had met so many of my friends who remain to this day my good friends in my C S C I-1100 Introduction to Computer Science course and my Game Design courses at Rensselaer my first year and heard so many stories of how they started coding when they were around five or so that I felt I had no way to catch up. I didn’t voice these concerns and instead played around with the idea that maybe Computer Science wasn’t for me, maybe Engineering was. I ended up going into Undeclared Engineering my second semester, and, because the university requires you to declare before your second year, declared myself a Mechanical Engineering major, and then finally decided on Nuclear Engineering at the end of my second year. My friend group still remained majority Computer Science majors and I’d learn about all of these fascinating concepts that they were working on while I was working on learning fascinating concepts of my own in another completely different major. Rensselaer is an environment that attracts so many entrepreneurs-to-be and people unafraid to fail. It’s an environment where you’ll find someone in your friend group designing and building a C N C Milling Machine their first semester of college just for fun. I’m grateful that I discovered friends like these who introduced me to my first go at making something beyond what my classes required of me. There’s a brilliant group at Rensselaer called Rensselaer Center for Open Source ( R C O S) that allows students to pitch ideas for open source software or hardware projects that they can pursue for a semester or longer. This gives them experience in not only pitching their ideas, but executing them on deadlines that they set for themselves and presenting their progress to an entire group of experienced programmers and students on a consistent basis. I was part of this group for two semesters in my first two years of college. My friend and I co-developed a code that would be able to be used with his C N C Milling Machine. We gave presentations every month on our application. We committed our code to Google Code before Git Hub became an open source Empire and now it is still archived out there. What I remember the most about my experience in R C O S was giving presentations to a bunch of programmers who I thought were probably way more experienced than me and I remember my friend saying something along the lines of: “ You should speak up and have confidence in what you’re saying. You know what you’re talking about and what you’re doing. ” That has stuck with me to this day. And it’s been echoed in my mind whenever I’ve had to advocate for myself for anything and when I’ve had to give presentations in front of rooms full of people and maybe even when I’ve done improv on stage in front of rooms full of people. Advocating for myself and being able to acknowledge that I’d like to try another career and actually doing so are immensely powerful actions I took to get myself out of my imposter syndrome and into a direction I wanted to head in for awhile, although I am glad for the opportunities I was able to get in Nuclear Engineering for the amount of time I was in that industry. So here I am, at Week 8 of Launch Academy’s Ignition Course, a prep stage before arriving to Launch Academy’s 10 week immersive On- Campus Apprenticeship. I’ve learned concepts I hadn’t been familiar with before such as Test Driven Development ( T D D) and am learning much more about concepts I was familiar with already such as Object-oriented Programming ( O O P). They’ve introduced me and my fellow students to Regular Expressions (regex), something I hadn’t heard of before and I’m eager to learn a lot more. I guess I haven’t explained how I chose Launch Academy or how I decided bootcamp was right for me though. Out of any of the bootcamps out there, I knew that I wanted one that would be an immersive on-campus experience and Launch Academy was right around where I lived. I also knew I wanted it to be a full-stack software development program, not just a front-end one, so again Launch Academy fit the bill. There were also many positive reviews of Launch on the internet, but, beyond that, it just felt right after interviewing for it and asking many a question about the program and getting follow-up answers that were able to satisfy my curiosity about it. I knew I’d be able to ask difficult questions that I could get the answers to from the instructors there once I got to the on-campus portion. The off-campus online prep portion has brought together a bright community of people that brings me back to my experience of collaborating at Rensselaer. I can tell that my classmates in this program are as eager to learn and create as I am. This is probably the best aspect of Launch, the fellow students you meet and code with and get frustrated about syntax errors with along the way. It all boils down to that aspect of community and collaboration. This is why I chose to attend an immersive on-campus bootcamp and I’m writing about it to see how much I grow and to provide prospective students with an idea of what they’ll be able to learn and accomplish at Launch.","['Programming', 'Imposter Syndrome', 'Codingbootcamp', 'Women In Tech', 'Career Change']",https://medium.com/@koscim/bootcamp-or-no-bootcamp-7ca260be7bb8,8,['Launch Academy'],1,3,monica,F,0.9960501625340036,0.00394983746599644
Ilsmarie Presilia,25-year-old autodidact that likes to ponder. Designer & Coder | Photographer | Gamer | Cyclist,Tips on how to survive bootcamp induced burnout – Ilsmarie Presilia – Medium,2017-08-04 17:13:17,medium,"Tips on how to survive bootcamp induced burnout Gray Scale Photo of Topless Man Covering Face by Vic Tor on Pexels This article is the second and last part of a series. The article titled “ I went to a bootcamp got really sick and failed. . ” and this one go hand in hand. Assuming that you have read the article I’m referring to above, I will continue in this one giving some tips and advice on how to deal with bootcamp induced exhaustion symptoms like burnout. So by now you know that I started attending a bootcamp while already experiencing burnout symptoms, I just went on and on, depriving myself of sleep to the point that I got really sick and as a result of that I failed. Here are a couple of things I wish I knew and did earlier on — not only to have completed the bootcamp successfully but for my own health’s sake. I hope they are as useful to you as they are to me. Listen to what your body is telling you Ah, yes! The huge mistake I made. Listening to your body and taking the necessary action is essential. If you’re tired, sleep. If you need a break, take it. A teacher at Codaisseur told me something along these lines “ Take care of your body, it’s all you have. ” And the way I interpreted it was as follows; all of these things that we try to keep ourselves busy with and stress about are superficial things, and when you are busy doing them, make sure you don’t forget what eventually I S priority. Because one day when you are old, none of these things actually matter anymore, you’ll be stuck with that body you ignored and that is I F you even get to become old. Find balance Something I struggled the most with during the entire programme was finding a balance. Due to the time I had to travel, I had to leave quite early and arrive back home quite late. As a result of this, I did not have much time left to do other things like physical activity. The more I went on, the more out of balance I felt. Mentally I was exhausted and physically I was just fine. I find that getting out of balance is unavoidable, especially in a fast paced industry like tech. And if you’re in the same situation as I was, you know that it is impossible to get more time, which limits your choices. A way to find balance when you don’t have much time is to limit the amount of work you put in. By not overdoing it, and working smarter and more efficiently, you lessen the amount of strain and conserve your brain. Another thing you can do is try to plan in advance some physical activity. Once you’re a couple of weeks in and you’re used to the routine, set a few hours or days (weekends) aside where you’ll do some non-technical activities. Know when to step away Overdoing it, I noticed, significantly lowers the freshness of the brain; our ability to think, plan, work, study, come up with ideas and further essential functionality is greatly decreased and we’ll have to work extra hard in order to compensate. So why just not do the better, easier thing? Get up, and walk away, distract yourself even if it’s for a few minutes. The change of setting is a great way to reward yourself for all the hard work. Usually walking away and coming back to your work a while later even helps you get “unstuck”, so you’ve literally got nothing to lose. If you still get burned First of all, ouch! Second, there are different kinds of burnouts, but the following advice covers — if not all — most of them. People usually think that you can’t get burnt doing something you like. An example of this would be those that merge their hobby into their work. In my opinion, this is more common in tech, compared to other industries. Now, don’t take me the wrong way. I’m all for doing what you enjoy doing for a living, but it’s not how I choose to live. Yes, I love coding, but there are other things I like slightly more. Things like hobby and work shouldn’t be mixed because when you hit rock bottom, it’s really hard to find something to get you back on your feet. Humans are very complex creatures and above everything, whether we’d like to admit it or not, get bored easily and need some sort of variety to keep going. By not combining hobby and work too much or by avoiding that all together you can rest assured that you won’t gamble and risk losing what drives you/your true passion. And if all goes to shit and you end up failing just like me; this is my advice for you. Know that failing has a positive side There is no shame in failing or walking away. I know that sometimes it sucks, walking away from something doesn’t only let yourself down, it feels like you’re letting everyone and everything else around you down as well. It’s important not to dwell on the mistakes that got you there in the first place and how things would’ve been. If you’ve always seen failing as a bad thing, try rewiring your brain into thinking that it’s not. I’m not shitting you; failure has taught me so much, more than I could ever learn in school. It’s failure that teaches you the essentials on how to cope and deal with life the most. After allowing yourself to heal, you can look back, analyse, better and move forward. And remember, “ It’s fine to celebrate success but it is more important to heed the lessons of failure. ”- Bill Gates Looking back there’s so much I could and should’ve done. I could’ve listened to my body, allow myself some rest, find balance, etc. But still, this is the way things went. I cannot change them anymore and even if I had the ability to do so, I wouldn’t. 2017 has taught me a life lesson; it taught me that I am only human and that I too, just like anyone who reads this, have limits. Sure, graduating would’ve been awesome, but I like to believe that my efforts weren’t in vain because the experience and the gained knowledge won’t be leaving my head soon. Thanks for reading! If you have any questions, remarks or just want to get in touch feel free to do so.","['Life Lessons', 'Failure', 'Codingbootcamp', 'Depression', 'Tips']",https://medium.com/@ipresilia/tips-on-how-to-survive-boot-camp-induced-burnout-bb2b9cff6b4b,0,[],0,19,ilsmarie,Unknown,Unknown,Unknown
Lian Thompson,"Software Engineer based in SF. Make yourself at home, there's La Croix in the fridge.",ServerlessConf2018 — My First Tech Conference as an Engineer,2018-08-14 05:22:08,medium,"Serverless Conf2018 — My First Tech Conference as an Engineer Two weeks ago I attended Serverless Conf2018 in San Francisco. I’ve attended a good number of conferences before, but this time my badge had a new title — Jr. Software Engineer @ Colark. As a whole, Serverless Conf wasn’t too different than any previous conferences I’ve attended…but I did find that I was a lot more desirable to talk to now that I had a job title. Before when my badge said “ Software Engineer Apprentice” or when I would reply to “ What do you do?” with “ I’m in a bootcamp!”, the overall response was, “ That’s great! You’re not hirable yet, but come back when you are!” Thankfully the technical program I went through provided job placement after graduating, and for now I can focus on my new job, part of which is learning about Serverless. “ Serverless is just a name… We could have called it Jeff” Spoiler Alert: Serverless uses servers! Besides the naming frustration that I won’t gripe about here, Serverless seems pretty awesome. One perk is that it’s monumentally cost effective. For example, Mike Sylvester made a chatbot app for Laidback Luke and brought down their costs by 90%, by using Serverless to work with chat events. Security was another hot topic for Serverless. “ Make sure that systems work as intended, and O N L Y as intended” Serverless, is time-limited with no server affinity, making it harder to attack. It also has frequent server reboots. Most of the talks were above my Serverless knowledge, but I was particularly interested in one given by Netflix’s principal engineer. I found it easier to digest because 1. Lots of visuals and 2. Netflix uses a B F F ( Backend for Frontend) architecture using Javascript, which is the language I learned at Techtonica, the technical program I attended. Netflix’s U I has changed so much and that’s by design. Their system architecture is no different and they’ve evolved their system to use Serverless’ Faa S, in order to deploy functions as isolated services. The overall energy of the conference was a lot of passion for Serverless, naturally, and I’m excited to see how I can use it. Conferences are a lot more fun when you know you’ll get to put the information you learn to use. I was very happy that there was a wide variety of speakers explaining their different levels of familiarity with Serverless. Alright, got to get back to coding. See you next week!","['Serverless', 'Women In Tech', 'Codingbootcamp', 'Engineering', 'Diversity In Tech']",https://medium.com/@lianthompson/serverlessconf2018-my-first-tech-conference-as-an-engineer-93997374cc7,0,['Techtonica'],1,33,lian,M,0.4003915810083211,0.5996084189916789
Natale Anfuso,,HTTP request status codes – The Notorious N.A.T. – Medium,2017-05-09 18:33:10,medium,"H T T P request status codes While using and creating web applications, developers (and users) often encounter many different sorts of status codes to help guide them through mistakes and check when components are running successfully. Developers will see all status codes in the terminal, however some of them will appear in the application itself which means that users are also privy to seeing status codes albeit, they may not understand what they mean. The general classes of status codes are:100: Informational200: Success300: Redirection400: Client Error500: Server Error Most of these classes of status codes have many different specific status codes within them for example, within the 400 class of status codes, there are code statuses of 401: Unauthorized, 402: Payment Required, 429: Too Many Requests, etc. Each of these codes are labeled in the 400s because they all pertain to Client Error. Now to explaining what each of the classes mean…100: Informational This class merely states that the http request has been received and the process is continuing. Depending on the status message, the server might need additional prompts to continue, or it could just be taking a little longer than initially expected, but is continuing nonetheless. 200: Success A developer will see a 200 status code when their web application has been run correctly without any errors. This is the code that we hope to see in our terminal after running the localhost:3000 page! Status Code 200- “ Completed 200”300: Redirection A 300 status code notes that you were brought to a different html site than was originally requested. If a site was permanently moved but the developers didn’t set up the site so that it automatically re-routes the user to the new site name, you would see a 301 status code. Anytime a client is redirected to a different site than what they originally requested, a 300 class status code is used. 400: Client Error As previously mentioned, there are quite a few 400 class status codes, some of which will seem familiar to anyone who has used the internet. A 400 class status code is an error on the client’s behalf. Maybe they typed in a url that doesn’t exist (status code 404) or maybe the user meant to type information into a form but didn’t for hours and the server timed out (status code 408). Status Code 404500: Server Error A 500 class code tells the developer that there is something wrong with their code. The most common code within this class is 500: Internal Server Error which is used as a catchall for an error in which there isn’t a more specific code to describe it. 500 status codes prompt the developer to look back at their code and fix what is causing the site to crash. Status Code 500: Something went wrong Status codes are an incredibly helpful resource for developers as they lend a hand in debugging. You are able to see where things went wrong but also where they went right. If you are familiar with what the status codes mean, you will be able to solve the issues promptly and get your web application back up and running in no time.","['Web Development', 'API', 'Codingbootcamp', 'Students']",https://medium.com/the-notorious-n-a-t/http-request-status-codes-6a73f3c009a6,0,[],0,5,natale,M,0.24375821287779237,0.7562417871222076
Harrison Spain,I am a software development educator and entrepreneur. My current mission is to train and mentor the next generation of software developers.,Why ReactJS – Redwood Code Academy – Medium,2018-05-30 21:14:26,medium,"Why React J S“ Close-up of a laptop screen with lines of code” by Artem Sapegin on Unsplash A front-end Java Script framework is an absolute necessity when building any application beyond the simplest complexity. The benefits in efficiency, maintainability, scalability, extensibility, and reduced time to market/production are too much to ignore. It is nice sometimes to build everything from scratch, relying only on vanilla Java Script to meet your ends, but you would be ignoring not only the wheel that has already been invented, but the whole of the industrial revolution. We at Redwood Code Academy teach React as the front-end Java Script framework, instead of it’s main competitor, Angular, or the number of others such as Vue. js or Ember. js. This has changed over time — we used to teach Angular J S primarily — and is likely to change again. Here is a very simple example of a React component, which the framework uses heavily to build a full application. A simple React J S Component The nature of modern software development demands constant adaptation to what the market is doing. Huge strides are made on a weekly basis and if you refuse to keep up, you will be left with an outdated and less sought skill-set. Employers Seek It React has the highest level of adoption in the hiring market and that market share is increasing. Ultimately, this means that learning React gives a developer the best chances of finding work. For those looking to enter the industry, this is the most important, if not only important reason for learning React over other frameworks. In our official and unofficially polling of our employer network, there is an overwhelming majority of companies in the Southern California area and beyond that are adopting React. These companies range from startups to Fortune 500 enterprises. https://trends. google. com/trends/explore?date=today%205-y&geo= U S&q=%2 Fm%2 F012l1vxv, %2 Fm%2 F0j45p7w, Vue. js, ember. js Popularity of React in Blue Lower Overhead The React tool-chain can be extensive, but the basic boilerplate can be explained within a day to neophytes. There are numerous ways to “bootstrap” a new React application and each of the pieces to the process are transparent and relatively simple. It is simple enough that we can get a class of students with as little as 2 weeks of coding experience to be able to build a relatively complex React app from those base principles. React can be taught using E S5, E S6 or Type Script. Though E S6 is far and away the preferred method. Pairing React lessons with E S6 lessons allows for the new developer to pick up both of these topics simultaneously and expedite the time to expertise. Large Community Let’s face it, the job of a developer is often to just figure out what they did wrong in the last batch of code they wrote. Error messages, and the Google searches they require become the methods of progress while building your projects. It is important to reduce that time between error and resolution. Having a large community of developers using the same tools, technologies and frameworks that you are leads to having more resources to rely on. For each given problem, there are normally dozens of solutions posted for React. These are often also up to date and with a healthy discussion where necessary. The React community is one of the library’s biggest strengths. Cross Platform React Native is awesome and gives students the ability to create cross-platform native applications with only minimal additional work. There is a certain allure to building native i O S or Android apps and React Native allows our students to reach that goal. We have found that React Native is quicker and easier to get launched than some competitors such as Ionic or Xamarin. The syntax and tool-chain are almost exactly the same as the web version which help the transition greatly. Easy Upgrades There is a distinct lack of breaking changes from one version of React to the next ( I’m looking at you, Angular). We can teach our students with confidence that when the next version of React is release, they won’t be left in the lurch when a totally different approach is needed with the next version. React plays extremely nicely with it’s upgrade path, letting developers ease into changes without breaking existing applications. Worthwhile Opinions React is opinionated without needing an advanced level of experience to understand what those opinions mean. To a new developer, this is a life saver. Architectural and design patterns are dictated, which much be followed to use the platform to it’s fullest. While a beginner may not understand why things are done a certain way, they can use those opinions to start to learn better ways of writing strong code.","['React', 'Coding', 'Codingbootcamp', 'JavaScript', 'Software']",https://medium.com/redwood-code-academy/why-reactjs-d207eb52d92f,1,['Redwood Code Academy'],1,55,harrison,M,0.003321272344332235,0.9966787276556678
Justin McLaren,software developer,Teaching people to swim taught me to learn (how to code),2018-03-14 19:44:31,medium,"Teaching people to swim taught me to learn (how to code) I feel I’ve been productive in my journey to learn everything that I can about Javascript, enough so that I’ve started to create my own video resources to teach others what I know. I want to share a perspective unique to my experience that I think was a huge part of my learning process. I’ve always been a swimmer, and to supplement my fledgling freelance web dev career I taught swim lessons on the side. Photo by Artem Verbo on Unsplash Swimming is a particularly binary equation for brand new swimmers; you literally sink or you float. Being able to float is the essential first step to swimming. For some people it comes easily and for others it is a major hangup. I see the same dynamic with new coders so I think it’s worth investigating this difference. Basically, pools are like quicksand. If you struggle and fight against the water, without knowing proper technique, you’ll cause yourself to sink even before you wear yourself out. All you have to do to float though, is lay on top of the water like you’re in bed. Most kids will be able to float on top of the water immediately or with minimal instruction. Teaching kids to be pool safe is just a matter of getting them in the water continually for a few months. They quickly gain a feel for the water and become able to move around in the pool with control. Teaching adults how to swim is typically the opposite experience. Adults will fight against the water for far longer than children. They will be embarrassed about their inability, and resist drills and exercises that point it out. This is a huge detriment to progress, because gaining a feel for the water is a function of doing the wrong movements until you stumble upon what works. In an attempt to skip the part where they don’t know what they’re doing, adults will try to reason their way into being able to swim. Many of my adult students would ask for lengthy explanations of swimming techniques and drills. While I can talk swim mechanics all day and demonstrations are helpful, this isn’t nearly a productive way for a beginner to learn. If you can’t float on your back yet, you won’t gain anything by thinking about reducing drag. I see this same exact pattern in learning how to code. None of us enjoys being bad at anything we’re undertaking. So to skip the uncomfortable trial and error process of learning, we try to figure everything out before we jump in. We get hung up on understanding the grammar and conventions of the language before we even begin writing it. We read endless articles to try to learn how best to learn (the irony of this article is not lost on me). Even in a field so based on logic, you can’t reason your way into being able to write code. We only learn in the beginning by doing. You have to be bad at it at first. Accept it, and get to blindly stumbling around in the dark. By writing code you will run into all the different rules, conventions, and edge cases that make up whatever language you are writing, and encountering them in this context will be far more meaningful than reading about them. Just like swimming, anyone is capable of becoming a proficient programmer if they allow themselves to struggle at it. Don’t get me wrong, it is productive to read about about code just like it’s productive for a high school swim team to watch tapes of Michael Phelps. I owe a huge leap in my own ability to write to Javascript to Kyle Simpson’s You Don’t Know J S book series. But if you’re new in the game, stop researching the best text editors, and comparing The Best Coding Resources of 2018. Pick a language to learn and pick a course, complete it, and then you’ll have some perspective to go off. I was able to become gainfully employed in an exciting new career in less than a year, starting with the combination of Javascript, Code Academy. com and Visual Studio Code, so you can’t really go wrong there. Just jump on in, the water’s fine !","['Swimming', 'Programming', 'Learning To Code', 'Coding', 'Codingbootcamp']",https://medium.com/@justinmclaren63/teaching-people-to-swim-taught-me-to-learn-how-to-code-5422755d7015,1,[],0,3,justin,M,0.00487975038744523,0.9951202496125547
adam tropp,,CS 100.9: Graphs – adam tropp – Medium,2018-05-18 20:00:10,medium,"C S 100. 9: Graphs As promised, the follow-up to our discussion of trees: graphs. Of course, we are all familiar with what a graph is. For those that have taken discrete mathematics in some form (not me!), you probably even have a sense of the specific definition of a graph and the different kinds. For those have taken graph theory, skip this blog post, it will bore you ( Just kidding, don’t do that). Nonetheless, it is important to hone in on exactly what a graph is as a C S data structure, because graphs are illustrative of many important C S principles, and can be used to solve many different problems. First, a definition: A graph G =( V, E) is the set of vertices and edges connecting those vertices, each edge consisting of an ordered or unordered pair of vertices. As stated in the post on trees, in a non-technical-theory-explaining-context, we would typically refer to these as lines and points, as for example, the myriad graphs we all drew in our math classes. Graphs can be directed or undirected. In an undirected graph, every edge (x, y) also works in the reverse, i. e. (y, x) is also an edge. Not so in directed graphs, where each edge goes in only one direction. We touched on this last week when talking about trees, which, as you may recall, are directed. However, when thinking about graphs in the context of interview problems, you should focus more of your energy on undirected graphs; they are more common and more useful. Graphs can also be weighted or unweighted. In a weighted graph, each edge can have an integer value denoting something of importance. For example, in a network of roads, each one can have a speed limit, a vital piece of information for finding the quickest path between two points in the network (sidenote: finding the shortest path between vertices is one of the fundamental applications of graphs, and many of the algorithms we will mention today deal with a variation of this problem). In an unweighted graph, each edge and vertex is not made distinct from any other. Another point to revisit from the post on trees is the idea of an acyclic graph. A graph is acyclic if ( D U H!) it has no cycles, in other words, there is no way to traverse from one vertex back to itself along a set of edges, whereas cyclic graphs have one or more of such cycles. As a point of clarification, I mentioned last week that trees are directed acyclic graphs, but I have since come to learn that is not entirely true. As a data structure, trees can be considered directed because they have a root node and can (usually) only be traversed in one direction. But in general graph theory, a tree is any undirected connected graph. Don’t worry too much about this distinction when programming, think of trees as directed. Another important feature of graphs is that they can be sparse or dense, sparse meaning that each vertex is connected to relatively few other vertices, and dense meaning that each vertex is connected to relatively many other vertices. Exactly what qualifies a graph as sparse or dense is a matter of some contention, but as a general rule, if there is a roughly linear relationship between vertices and edges, the graph is sparse, and if there is a roughly quadratic relationship between the number of vertices and edges, it is dense. In a connected graph where there can be a maximum of one edge between a pair of vertices, the maximum number of edges is v²-v (convince yourself of this if you don’t believe me), so it is easy to see why this would be considered dense. Among the various algorithms for graph traversal, some are more efficient with sparse graphs, and some with dense graphs, so it is important to understand the distinction. Also note that most real world problems are more naturally modeled as sparse graphs. Okay, that’s enough general graph theory. There are plenty of other distinctions, kinds, and flavors of graphs, but if you want to learn about them, T A K E A F R I C K I N G R A P H T H E O R Y C L A S S! Just kidding, but such an in-depth understanding is definitely beyond the scope of this post. Just a bit about how computers represent graphs as a data structure(understanding this W I L L help you), then we can talk about the thing you came here for: graph algorithms and how to apply them in interview questions. There are two main ways to represent a graph in memory: adjacency matrices and adjacency lists. If a graph is a set of n vertices and m edges (this is common notation, remember it), then an adjacency matrix is an nxn nested array where at each intersection (i, j), there is a 1 if there is an edge between those vertices, and a 0 if not (look… Binary!). Adjacency matrices are necessary for representing dense graphs, but for sparse graphs, there is another option: the adjacency list. An adjacency list is an n-length array of linked lists, where each item in the array is a vertex i and a list of edges extending from that vertex. For sparse graphs, it is easy to see why this is a more memory-efficient implementation. When it comes to visiting every vertex in a graph, there are two supreme options, and we touched on them last week with tree traversal: depth-first search (henceforth known as D F S) and breadth-first search ( B F S, from here to eternity!). We will talk first about B F S. The main idea in traversing a graph is keeping track of every vertex that has been discovered and every vertex that has been visited. When a vertex is discovered in B F S, it is added to a queue, so that each discovered vertex can be visited in order. Recall that queues are F I F O, so at any given time, the vertex being visited will be the earliest-discovered vertex left to visit. In this sense, B F S is exactly what it sounds like: breadth-first. You first examine the entire breadthof the graph, i. e. each vertex that can be discovered from a given vertex, before going deep, i. e. examining the vertices that can be discovered from these discovered vertices. Once all the vertices connected to a vertex have been discovered, that vertex is said to be visited, and once every vertex has been visited, the algorithm completes. The pseudocode for this process is below. B F S(graph, start) { //start = first vertex to discover   let queue   let v   let y   let edge   queue. enqueue(start) 		start. discovered = true  while !queue. empty { 		  v = queue. dequeue 				visit(v) 				v. visited = true 				edge = graph -> edges[v] 				while edge != null { 				  y = edge -> y 						if !y. visited { 						  visit Edge(v, y) 								y. visited = true						} 						if !y. discovered { 						  queue. enqueue(y) 								y. discovered = true						} 				 } 				 v. visited = true			} 	 } 	 ``` 	 Of particular interest, notice that each vertex is marked discovered and visited accordingly. There are many different variants of B F S algorithms, but keeping track of the state of each vertex at every step of the process is common to all of them, and is vital to ensuring that the algorithm visits each vertex at most twice and terminates appropriately.  In general, B F S algorithms are useful for finding the shortest path between vertices in a graph. In a sense, B F S visits a vertex, then every vertex that is one degree of separation from that vertex, then every vertex that is two degrees of separation away, etc. So, these degrees of separation give the shortest path from a vertex to another, and this is where B F S and its derivatives shine. But, when it comes to actually visiting every vertex in a graph, D F S is often a better alternative, and we will soon see why. D F S is, on the surface, extremely similar to B F S. In fact, it could be said that D F S is B F S with a stack instead of a queue. In practice, however, D F S can be implemented using a clean, recursive approach, not requiring a stack, and this is almost always the preferred implementation. Fundamentally, D F S is the process of discovering a node, discovering every node that can be reached from that node, then backtracking to visit the nodes discovered along the way. Intuitively, this sounds recursive, and it is easy to picture this as a recursive algorithm. It is also easy to see why this is ""depth-first"": we first go as *deep* as we can visiting one vertex, then when we reach the bottom, as far as the vertex's extended family will take us, we backtrack and go as deep as we can on the next vertex. This process of backtracking ensures that the next vertex visited will be the last one discovered, which is why D F S corresponds to a L I F O stack, not a F I F O queue. The pseudocode for D F S is below. D F S(graph, v) {let edge 	let y 		if finished return 		v. discovered = true 	visit(v) 		edge = graph -> edges[v] 		while edge != null { 	  y = edge -> y 				if !y. discovered { 		  y. discovered = true		   visit Edge(v, y) 				 D F S(graph, y) 		} 				else if !y. visited { 		   visit Edge(v, y) 		} 				if finished return 	} 		v. visited = true } ``` Obviously, D F S will visit the vertices in a different order than B F S. Both algorithms take O(n+m) time, again, where n is the set of vertices and m is the set of edges. However, with various optimizations, D F S is generally faster at visiting all vertices than B F S. There are many other graph algorithms, but most are not vital for entry-level developers to have memorized. In particular, two variations of B F S that allow you to find the shortest path in a weighted graph, Dijkstra’s algorithm and the Bellman- Ford algorithm, are worth being conversant in. But the general D F S and B F S algorithms are far more important. Familiarize yourself with them. Understand them. Be able to implement them in your sleep. The differences between the two are subtle, but they are important. Begin to build your intuition about when to use one or the other. Okay, that’s enough. Today’s word of wisdom come to us from author Richard Bach -“ What the caterpillar calls the end of the world, the master calls a butterfly” Thanks for reading. Til next time!","['Programming', 'Codingbootcamp', 'Computer Science']",https://medium.com/@adt6261/cs-100-9-graphs-6156c243bfa4,3,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Macanthony Okeke,A young entrepreneur and a web developer,# Day 2 of 100DaysOfCode Challenge – LearnFactory Nigeria – Medium,2018-09-10 22:49:10,medium,# Day 2 of 100 Days Of Code Challenge Built a simple login form with html and css. . https://gist. github. com/mac-anthony/f51cfe1874d3336fb03e7c9432645790,"['100daysofcode', 'JavaScript', 'Codingbootcamp', 'Internships']",https://medium.com/learnfactory-nigeria/day-2-of-100daysofcode-challenge-cdd67efa110e,0,[],0,0,macanthony,Unknown,Unknown,Unknown
Emmanuel Awotunde,I write code and learn new stuff,My summer ‘17 Programming School experience – Covenant University Developers Community – Medium,2017-07-06 11:05:28,medium,"My summer ‘17 Programming School experienceby Emmanuel Awotunde“ We are staying back in school for 6 weeks of Programming School after vacation” Me: Programming School? Cool ! 😎 The first time I heard about Programming School was during the semester. I was really excited that the school saw the need for a program like this. Fast forward to end of the semester, everyone had gone home ( I stayed back in school for a startup boot camp also organized by the school). We were expected to return to school two weeks after to commence the programming school. May 22nd resumption day, we(or at least those that wanted to be in school) were all filled with excitement. We had our welcome meeting the day after at about 10:00 am. The meeting was more like an introduction, the instructors were present and the outline of the programming school was read out to us. At this point, they had already started getting us ready with all the rules and regulations that apply during this time. The goal of the program learning to code still remained. We had already picked the language of our choice before coming to school J A V A or P Y T H O N Of Course I chose Python. Many others picked Java ( I was shocked tho, they probably did not watch Google I/ O 2017 🙄). On Tuesday of the week we began the classes. Classes We had two sessions everyday, which first seemed like a lot of work but we later got accustomed to it. In Python classes, we were taught:basics of Python like variables, control statements, functions etc. complex areas like Manipulating Files, Database with Python, Python G U I with tkinter and O O P. Django (one of Python’s web frameworks)( This was when everything became interesting). We did a bit of Front End web development using H T M L and C S S. then started Django. Mehn, At this point it was obvious that teaching programming is not as easy as it seems. The instructors were having a hard time demystifying Django to us especially going through the process of installing Django and getting it to run on everyone’s P C but at the end of the day we did (or at least most of us did). For java: The Java group also went through the basics and started moving up. They covered Manipulation of Files, Using Database, G U I and O O P too. They started their web development using Java Server Pages earlier than the Python group. They also went through the same process of Front End web development and they demystified J S P. The Project Close to the end of programming school, we were briefed about the project we were all going to take on. I was really excited about this like other guys too. Mr. Ezenwoke Azubuike completely blew our minds when he read out the instructions for the project. We were grouped into 14 teams. It was really scary at first but obviously, we had no choice. We were to build a smart search engine that matches user criteria with devices in a company’s inventory both for Desktop application and Web application. The search engine uses the Heterogeneous Euclidean- Overlap Metric to match the user criteria. We started with the project and the normal thing that happened in a group project, the lazy ones disappeared Like: My group worked very hard on this project. Although we had huge a setback in developing the Desktop application due to Python’s G U I library which wasn’t easy to use. Nevertheless we went as far as we could with both platforms and it paid out at the end of the day. A screenshot of my group’s web application Presentations The winning groups’s presentation. All groups ( both Python and Java) had worked really hard on the project. All groups were required to have team heads and presenters. All the groups had their different presentation. Every group wowed the judges. There were two rounds of presentation. Awards The winning group’s photograph The presentation occurred on Thursday of the last week. Friday was the prize giving day. There were four winners. 1st place, 2nd place and joint 3rd place ( My group was 3rd). I gained a lot from attending Programming School. Aside from Wi Fi and power supply, I learnt a lot. Thank you for reading. Don’t forget to hit 💚 button by the left and share. Follow me on twitter @olaoluwa_98. Read Dara Assim- Ita’s experience.","['Programming', 'Codingbootcamp', 'Coding', 'University', 'Story']",https://medium.com/covenant-university-developers-community/my-review-of-2017-programming-school-c3536bc08a25,0,[],0,22,emmanuel,M,0.004767402376910017,0.99523259762309
Albert Montolio,Profession: Mechanical Engineer. Passion: Software Developer.,Why I am one of the best Web Developers in the world.,2018-05-13 16:03:41,medium,"Why I am one of the best Web Developers in the world. Km by km. Line by line Everyone can learn the basics of a particular topic. Just a few manage to master a discipline though. Everyone can learn Javascript, Ruby, C S S, Python etc. Not everyone can build complex web applications. It requires something special. A secret. One year ago I couldn’t write a singe H T M L basic web page. Last week I gave a workshop at a Google I/ O event on how to build chatbots. In this article you will accompany me through my unlucky journey on how I became one of the best Web Developers in the world. The truth might hurt, so it’s up to you to continue reading. Chronic pain means chronic effort When I was 17 years old I got injured in my hip while playing football. It was pretty weird, I stand on the floor and couldn’t move. I got thoroughly examined by doctors and nothing came up. Nothing was broken, no injuries. I began a journey full of doctors, hospitals, tests, hours of rehabilitation, etc. Nothing to be found. No positive results. Unfortunately, the pain didn’t decrease during the years. I tried everything possible, all the therapies that were in the market. For a 17, 18, 19, 20, 21 years old young boy, the process was mentally devastating. At the age of 21, after many tests (see how often I am repeating the word test), a doctor came up finally with the diagnostic: I was suffering from premature arthritis in my hips. The form of my hip bones was not right and that was causing a slow but incessant destruction of my cartilage. Wow. At this point, you may be asking yourself, what has this personal story to do with Web Development? With becoming one of the best developers in the world? Let me show you. Years of rehabilitation, no success. For several years, I was at the university studying mechanical engineering. I could barely study because of the daily pain. I had to do rehabilitation almost every day for endless months. Go to the physiotherapists, get treatment, do exercises at the rehab session, do exercises at home. Day after day. Month after month. Year after year. No results. A lot of effort. No success, still with pain. In my exams? The same, lot of effort, lot of suffering, no success. Web or Software development are very difficult disciplines. You have to know the rules of the programming language. You have to know all of them and store them in your brain. You have to decouple a problem and represent the reality in lines of code. You build something abstract that can represent an object from the reality. You begin by learning the basics. But soon your small programs become huge and you end up having thousands of lines in your program. You try new complex stuff and it does not work. You don’t know why. You read the documentation and still does not work. You do almost exactly the same as other developers and still does not work. No one can understand the problem for you. It’s your brain. You are desperate. You don’t know why it does not work. Like me. Like me with my arthritis. I tried rehabilitation, exercises, doctors and it never worked. I got frustrated. But, after 4 years suffering chronic pain and 4 years more recovering from severe surgeries, I could run again. The light at the end of the tunnel. 8 years for achieving something that everybody takes for granted: being able to run. If I was able to fight against arthritis without success for 8 years, you tell me that you can not work for a couple of days without success, in order to solve a problem? Hours of coding, no success Same story applies for Web, Software Development or studying mechanical engineering. After years of learning Ruby, H T M L, C S S, Node. js, Rails, Express, Postgre S Q L, etc. I manage to build software. The process was challenging, nice, frustrating, beautiful, demanding. A lot of days I couldn’t understand why things where not working. I couldn’t get the results that I expected. But I always remember my fight against arthritis. I was used to the process, fortunately. Now I was using my experience for something that could give me precious results: colorful Web Applications. The struggles didn’t bother me, I was used to them. I was used to the process: Small steps, no surrender, ask for help, manage frustration, believe that it all work out someday and try it again. I was used to the process. This that can seem so obvious, may not be so obvious for many people. A lot of people, that come into code after successful studies or careers, are used to study and get good marks. They are used to have a good resumé and immediately get a good job position. Not in Web Development. Here it does not matter how good you were in the past, how rich your family was or how successful you were in your previous job. You need to learn a new skill in your brain, that it is challenging. It takes a lot of patience, effort and the results do not come immediately. But they come and once they come, you have a very powerful skill. You learn to think in a different way. Best developer in the world. In the title I said that I was one of the best developers in the world. That’s pretty arrogant and unlikely to be true. And also pretty stupid to say. Let me explain. Last year I run the marathon in Barcelona. My time was 4 hours and 20 minutes. The record of a marathon is around 2 hours. My friends that are in good shape run the marathon in 3 hours 30 minutes. Yet my 4 hours 20 minutes time is something spectacular and historic. To me. To my level. According to my standards. According to my perception. According to my level. How many people have run a marathon after 3 hip surgeries? Not so many. The list is pretty small. And the list can get even smaller, if you do not compare yourself to anyone. If you have a ranking where there is just one participant: you. It’s not about how good you are in comparison with other people, but how happy you are with your own personal development. In Web or Software Development or any other discipline it’s the same. If you try to compare yourself with other developers, you will get mentally hurt. There will be lots of developers that will be better than you, more intelligent than you. That’s for sure. So what? I no longer compare myself to anyone. I just want to improve as a developer. Instead of competing against my teammates, fellow teachers, other developers, I try to learn from them and try to help them whenever I can. You immediately start to enjoy the days, your current projects and your skills improve drastically. You enjoy the process and you feel like the best developer in the world. Celebrate it. Enjoy not only what you do, but who you are If you keep comparing yourself with other developers, these comparisons can make you sick and get into your psyche. If you are in Web Development you should be proud of the things you build and proud of what you learn. This applies specially for students in coding boot camps: forget about the others and focus on your own learning process. In the first days you can not build anything, after a short period of time you can build small pieces of software. As a teacher I often see students that are used to be very good in their previous studies and struggle at coding. I’ve been there. They say: “ I see other people advancing faster than me” So what? You don’t know what they did in their previous jobs. Maybe they were used to think in an analytical way. Learn what you want to learn for yourself. Enjoy it. Celebrate it. Consider yourself special, because you are. You are doing what you like and you are trying something new. Not many people have this courage. Leave your ego outside in the street and be like a sponge, try to learn for you. Just compare yourself with yourself in the past. People should remember more often past experiences where they worked hard and the results were not immediate but they paid off on the long run: educating children, creating a family, working hard in the job, waking up everyday at 6:30 am, helping a friend in a difficult problem etc. Web Development or other difficult disciplines have the exact same patterns. It’s not about the coding skills but the soft skills. You can not rush into the solution. You should build small steps in order to build something magnificent. You should be prepare to your limitations. You should be prepare to asking for help. And that goes against our ego. Are you ready for the challenge? Albert Montolio (@ Albert Montolio) | Twitter The latest Tweets from Albert Montolio (@ Albert Montolio). Ex- Mechanical Engineer turned into Software Developer. Having…twitter. com If you want to learn Web Development, there are plenty of resources out there. If you are suffering chronic pain, here you have a friend. Other articles:https://medium. com/@albertmontolio/what-happens-if-you-give-200-in-a-coding-boot-camp-90ad3c31bb69","['Web Development', 'Self Improvement', 'Coding', 'Codingbootcamp']",https://medium.com/free-web-developer/why-i-am-one-of-the-best-web-developers-in-the-world-249e1413d50,0,[],0,466,albert,M,0.005223157357816884,0.9947768426421831
Alice Perez,,3 Tools to Use Before Your Bootcamp Starts – Alice Perez – Medium,2017-05-01 00:00:00,medium,"3 Tools to Use Before Your Bootcamp Starts Among the things I wasn’t prepared for starting C B was the amount of tools I’d be installing. Here are three you’ll probably use regardless of which C B you attend: Don’t be bashful You might already know that a shell is a program that executes text commands. The standard O S X shell (i. e. the one installed on Macs) is called Bash. You’ll hear “open your terminal” a lot during C B, which is basically the U I for your shell. Terminals look something like this: It’s intimidating because instead of pointing and clicking to open folders and find files, you’re typing in commands. But will you break your computer? Probably not. Here are some basic bash commands to play around with in the terminal:ls “list” files and folders for your current directorycd <folder Name> “change directory” to folder Namemkdir => “make directory” creates a folderexample: mkdir My Stuff makes a new folder called My Stufftouch <file Name> creates or updates a fileexample: touch index. js makes a new Javascript filepwd => “print working directory” i. e. it prints the file pathexample: pwd outputs “/ Users/your_username/ Downloads” A comprehensive list can be found on this cheat sheet. Replacing repl. it Up until C B prep work I had been using some sort of online coding interface, mainly repl. it, to write and run coding problems. This quickly changed once my C B prep work started. The two text editors I’ve heard mentioned the most are Sublime and Visual Studio Code( V S C). My brother, who’s studying Computer Sciemce, is using V S C, so I went with that. The biggest difference I’ve noticed between V S C and Sublime is that V S C has a “ Code Runner” extension that works in the editor itself — really helpful when you’re testing and debugging. Other than that, I think it’s all about personal preference, as both have lots of packages/extensions to make writing code easier. Git Outta Here Git is the most commonly used V C S, or Version Control System. A high-level description is it records changes to a file or set of files over time. I won’t say much more than that as Git is important enough that you should take the time to download and research what it is and how to use it. Here is a simple guide to get you started. An important part to your experience with git will be Git Hub. Here are some workflows you’ll definitely use again and again. As I said, I will leave it you to research what each step does!: Create a new repository by typing git init in your terminal Use github. com’s Fork button to create a copy of someone else’s project Clone your fork in the terminal with git clone [ U R L- T O- Y O U R- F O R K] (don’t include the brackets!) Add some files and make changes to your files with your text editorgit add - Agit commit -m "" Y O U R C O M M I T M E S S A G E H E R E""git push origin master Originally published at aperez25. github. io on May 1, 2017.","['Git', 'Codingbootcamp', 'Getting Started']",https://medium.com/@alice.perez25/3-tools-to-use-before-your-bootcamp-starts-15a6b6e83b24,0,[],0,0,alice,F,0.9965551969196058,0.0034448030803941594
Emily Flanagan,Candy Coder,Intro to Databases – Emily Flanagan – Medium,2017-05-07 18:57:51,medium,"Intro to Databases I’m on a journey toward a career in coding. Right now, that involves attending a coding bootcamp, which is both intense and exciting. One of the things we’ve learned about recently is using databases with Rails. Here’s a bit about what I know so far. S Q L vs. No S Q L Big picture? There are two kinds of databases: S Q L and No S Q L. By the way, S Q L stands for Standard Query Language (normally just referred to as “ S Q L”), which is the standard language used in relational database management systems. Which brings me to another point: S Q L is a relational database, which means the data it contains is organized in tables. This allows you to both access and reassemble the data without having to reorganize the data. Basically, data in S Q L databases is structured in a format that looks similar to an Excel sheet. No S Q L databases, on the other hand, are (you guessed it!) non-relational, and they look like a collection of hashes. For the true newbies out there, a hash is a dictionary-like, key-value pair used in coding that allows you to reference attributes for objects. For instance:candy = {name: ""gummy_bears"", color: ""multi"", type: ""chewy""} In this example, candy is the name of the hash, and name is the name of a key that references the value gummy_bears, and color, similarly, is a key that references the value multi. One important advantage to note about No S Q L databases compared to S Q L databases is that No S Q L databases do not require you to have an entry for every attribute of an item in a database. They can also generally support indexing of unstructured text. There are many other pros and cons between S Q L and No S Q L databases, but for now, this is a good base of knowledge to grasp regarding the differences in capabilities between the two. How would an organization choose which type of database to use? The two guiding questions to ask when considering database selection are: How fast does the database need to read? How fast does it need to write? Choosing a Database Just as with most things in life, no database is perfect, and you’ll have to choose which function you want to prioritize. So if it’s more important to have your users be able to quickly view a post feed on a social media site than to be able to write posts, you’d choose a database that’s faster at writing than it is at reading. That’s a brief overview about databases and the differences between them. Keep a watch out for additional posts as I learn more! Originally published at medium. com on May 7, 2017.","['Programming', 'Coding', 'Codingbootcamp', 'Database', 'Women In Tech']",https://medium.com/@candycoder/intro-to-databases-3e6845c060b2,0,[],0,5,emily,F,0.9979317746535663,0.002068225346433675
Andrew Lam,,Drew Starts Hack Reactor – Andrew Lam – Medium,2017-02-02 03:26:10,medium,"Drew Starts Hack Reactor Hello friends! I will be starting the Hack Reactor Java Script immersive on March 27th, 2017. I am 22 years old and a recent grad of Mc Master University with a B. A. in Psychology. I am interested in learning to code and am excited for a prospective career in tech. I believe Hack Reactor is a reputable school who cares about their students and whose staff have a genuine love for coding. I am certain they will give me the resources I need to become proficient in Java Script. In this blog I’ll talk about my journey/experience through Hack Reactor remote. This article will focus on why I chose Hack Reactor and progressing up to the technical interview stage. I have just passed the technical interview and am waiting for my cohort (class) to start. In my next post, I can share some of the resources I used to learn basic Java Script. Hack Reactor Among Many Others I attended a few workshops held by boot-camps here in Toronto but they were pretty vague about what skills you came out with, student lifestyle and why I should choose them over their competitors. To be frank, I didn’t do much research on other coding boot-camps, but I have something better: a success story. One of my friends just completed Hack Reactor’s program and has been employed as a full stack engineer. That’s more than enough proof for me! In addition, Hack Reactor’s students have so many success stories and a high employment rate after graduation. Many graduates do not have a Computer Science degree but are able to show their employers they can compete with senior-level developers. Admissions Challenge Upon clicking the apply button on their website, you will be directed to the first of 2 coding challenges. It will test you on very basic syntax and methods. As someone who has no prior coding experience, I was not able to complete this on first glance. I’d recommend the absolute beginner to go through Codecademy’s Java Script track. Around the middle of it I stopped looking at the instructions and tried to code the problems that way. I feel Codecademy holds your hand a bit too often but it’s a great starting point! Once you finish that, you will have a basic understanding of Java Script syntax. The amount of time you spend on the admissions challenge won’t affect your actual application, so feel free to attempt it as much as you want. What the admissions challenge looks like right now. Technical Interview After you complete the admissions challenge, you may move on to schedule a technical interview with them. For me, I think I re-scheduled my interview around 3 times. I always felt under-prepared and was afraid I would simply waste the interviewer’s time. I really wanted to pass the interview on the first try so I took ~3 months to prepare. At that point I was feeling confident enough to schedule the real thing. It’s usually conducted over Skype where you code in front of the Hack Reactor interviewer. The interview ensures that the candidate entering the program has a solid understanding of Java Script basics, and will work well coding in groups (also, with people watching you). These include things like manipulating arrays, objects, using basic methods, higher-order functions, assertions etc. I’ll take more about this in my next post. Potential candidates range a huge variety of people. From what I hear (and it makes sense to me at least), a successful graduate of this program is not someone who grinds through and expects a high salary job at the end. A successful candidate is genuinely interested in the tech industry and has a love for coding. It’s easy enough for me to say “ I like coding”, but do I like it enough to do it 10 hours a day, 5 days a week for 3 months? To be honest, I’m pretty confident that I have the motivation and interest required for this program and a successful career in tech!","['Coding', 'Programming', 'JavaScript', 'Hack Reactor', 'Codingbootcamp']",https://medium.com/@drewclam/drew-starts-hack-reactor-7702663df497,2,['Hack Reactor'],1,0,andrew,M,0.0037934542159017816,0.9962065457840982
Ilsmarie Presilia,25-year-old autodidact that likes to ponder. Designer & Coder | Photographer | Gamer | Cyclist,"I went to a coding bootcamp, got really sick and failed..",2017-08-04 16:48:50,medium,"I went to a coding bootcamp, got really sick and failed. . Grey Laptop Keypad by Fabricio Trujillo on Pexels As a child, I have always been interested in computers and tech; despite interests, though, I followed a different path academically. Still, that interest remained to the point that next to my studies, I tried to teach myself how to code. As an autodidact, the main issue I faced back then is wanting to teach myself too many things at once. And as a result of that, I got to know the basics of different programming languages, but not enough to make — in my opinion — something relevant or impressive. Thus to better myself and focus on one thing rather than multiple things at once; I decided to follow the advice of two people I met at a workshop I have attended some time ago. Their advice was to attend this coding bootcamp in Amsterdam, of which they were both graduates. So short story, even shorter; I went through the application process, got accepted and started attending Codaisseur. Codaisseur is this small company that offers these accelerated courses that shape you into a junior developer in just two months. For the next two months from 9. 00 to 18. 00 me, together with a couple of other people followed the provided reader like it was our bible. During those months my routine was as follows;wake up in the morningshowerbreakfastget readywalk to the station (in the Hague)take the train; most of the time one that’s sufficiently early that if there’s a delay — which let’s face it, travelling with N S, most of the time happens anyways — I’d still arrive on time (if you don’t believe me, ask anyone in the Netherlands about their opinion on the N S)arrive at Amsterdamtake the tramwalk into a classroom in which I will remain behind my Mac until 12. 30 (lunch break)get back to it I usually left sometime between 18. 00 and 19. 00 and proceeded to make my way home again. On the train, I sometimes tried going over the material we had earlier that day, and finish what I hadn’t. And proceed to take a look at what we’ll be doing the next dayget homedinnersleep — if I was having issues sleeping, I’d watch coding tutorials online until I’d fall asleeprepeat The routine was pretty much that; not anything else because there simply wasn’t any time left to do other things. I quickly realised that this would be harder than I expected, and it was. It was also the thing I’ve worked the hardest for in my life. I wanted this, I needed this because my goal for 2017 was to land my first job in the tech industry. But as the course progressed, I noticed how my body was so out of balance with my brain. The simplest way I can put it is when you feel 200% mentally exhausted and physically you’re just fine, ready to run a marathon. And the further you go with the course, the more out of balance you get. Before Codaisseur, I have never experienced that before and I spent countless nights in a row depriving myself of sleep, working on projects, reports and memorandums for “traditional school”. One of the first things I remember thinking was “this is a psychological test” and that feeling never went away. And as we reached the last week, it’s like “this is impossible, it’s inhumane”. Codaisseur’s curriculum, in comparison to other coding bootcamps around here, is designed to keep you out of your comfort zone. Yet most people out of my batch passed. And I think that I would’ve too if I hadn’t made a huge mistake. Right now you might be wondering“ Huh, what type of mistake can be so huge that caused her to fail the bootcamp then?” Not only was the mistake I made huge, but it was stupid as well. And it is something I am guilty of doing my entire life. “ I. ignored. what. my. body. had. to. say…” See, I am this person that just keeps going, regardless of anything, and I don’t usually allow myself rest as a compensation for all the hard work. I started off Codaisseur when I was already going through a burnout period; in fact, the longest one I have experienced so far. I simply didn’t allow myself to recover and just tried to jump into this new thing — which I won’t lie, started out just fine. But as time progressed, everything kinda went to shit for me. At some point, on one of those days, when I was on the train heading home, I started feeling so sick and confused to the point where I got off to transfer and left my things on it. Luckily, I was able to get back on and recover them before the train left. When I arrived at the Hague, I just couldn’t find my way home and I had to call my partner so she could guide me. My head was spinning in a way I’ve never felt before, it felt like my head was divided up into different sections and each section was spinning crazily in its own distinct randomised pattern. My speech was slurred, I had terrible migraines, I had a fever, I felt very sensitive to light and sound and I felt lots of pressure in my head. I was sure that this was going to have a drastic impact, but I still wouldn’t allow myself some rest. To me, proper resting is when you can take your mind completely off of everything for an extended period of time. I have never been able to do that; as a ponderer that still gets affected by some of the pressures of society, I find myself being a slave to my own mind even when I am asleep. It feels like torture sometimes knowing that most people around me don’t give things extra thought and just go with the flow. My brain is simply not wired that way, I am someone that spends most of the time thinking, analysing things in order to become better. After that initial attack of what I can only describe as my brain literally breaking into pieces, I had a couple more attacks. I made sure to notify Codaisseur, most people were understanding and showed lots of empathy. That gave me some sort of strength to continue. I got diagnosed with Ménière’s disease and had to take pills a couple of times a day in order to mitigate my symptoms. I had tons of appointments with doctors, specialists etc and had many tests that had to be done on my head (yes, I felt like a lab rat). Eventually, despite my efforts, I would still fail my final individual assignment. I felt it coming, I knew I was going to fail that last assignment, but after actually failing, my depression really kicked in and it sucked for a while despite being invited for a recourse. I could join the next batch and start right away and that is exactly what I did, but only for a couple of days because my body just succumbed. That was one of the most frustrating feelings ever, I wanted to continue and use that previously gained knowledge to my advantage. It made me feel defeated, hopeless and useless for weeks and right away I could feel my depression knocking on the door ( I have suffered from depression since before I was a five-year-old — more on that in the future). But I wasn’t going to let failure keep me down; my mistake became the reason why I wrote this. Maybe someone out there is or will be going through the same soon. So I thought to myself, why not make this a learning experience and write about it? Eventually, when writing this, I started looking at the whole thing from a brighter perspective. The most important thing is that I still managed to learn a lot despite being sick and that I did not throw in the towel. I am really proud of myself for keeping up with others that were not experiencing any conditions at that time. It was overall a tremendously great experience and is something that I would recommend to pretty much anyone interested in coding regardless of what level they consider themselves at because there’s always something to learn. If reading the above makes you excited, and you know you won’t make stupid mistakes like the ones I made, then feel free to check Codaisseur’s website, and apply if it’s something for you. And while you’re at it, check out this other article I have written, in which I give some tips and advice on how to survive a bootcamp and dealing with burnout or other exhaustion symptoms it might bring with it. Thank you for reading! If you have any questions, remarks or just want to get in touch feel free to say something.","['Web Development', 'Coding', 'Codingbootcamp', 'Bootcamp', 'Failure']",https://medium.com/@ipresilia/i-went-to-a-coding-boot-camp-got-really-sick-and-failed-a72eed5998e2,0,[],0,24,ilsmarie,Unknown,Unknown,Unknown
adam tropp,,CS 100.5: Sorting Part 2 – adam tropp – Medium,2018-05-16 21:41:18,medium,"C S 100. 5: Sorting Part 2 Before we begin, I did in fact butcher the quote from yesterday. Mr Dimopolous actually said “ Jumping from failure to failure with undiminished enthusiasm is the big secret to success” See, way more poetic. Now, onto topics of substance. As promised, merge sort is a much better algorithm than the previous two. In the worst case, it runs in O(n log n) time. One important thing to note is that merge sort is a recursive algorithm, with a “merge” step that gets called repeatedly. It works by maintaining 3 queues, 2 sorted queues with inputs and 1 empty, to begin with. At each step, the smaller of the two first values in the sorted queues (and therefore the current min), is moved from its current position to the end of the third queue. Once one queue is empty, the remaining non-empty one is concatenated to the end of the third queue. The trick, then, is ensuring that the input queues are always sorted. Again, we rely on the fact that a list of length 1 is, by definition, sorted. So, we take our input list and break it down into smaller and smaller pieces, until eventually, we are left with n lists of length 1. We then recursively sort and merge these lists until we are once again left with one list of length n. This is easier to see in practice, so let’s say we had a list containing 5, 4, 9, 2, 11, 13, 17, 6. The first step is to divide it into two lists, consisting of 5, 4, 9, 2 and 11, 13, 17, 6, respectively. This process is repeated, until we are left with individual lists of 5, 4, 9, 2, 11, 13, 17, and 6. We then go back up the recursion tree, merging the lists in the same fashion. The first merge step yields four lists, 4, 5, 2, 9, 11, 13 and 6, 17. The second step yields 2, 4, 5, 9, and 6, 11, 13, 17, and the rest is clear to see. The pseudocode for this procedure is below. function mergesort(array, low, high)   middle = (low + high)/2 		mergesort(array, low, middle) 		mergesort(array, middle + 1, high) 		merge(array, low, middle, middle + 1, high) It is easy to see why this algorithm runs in n log n time, since there are log n levels of recursion, and at each level, n work is done (at most). However, it is worth noting that merge sort is not in place for arrays, since another array must be maintained to hold the results of the merging steps. This inefficiency leads us to quicksort, which is the best sorting algorithm for arrays, and the one that, as a beginner, you should presume to use, unless you know of a good reason not to. Quick sort is also n log n, however, because the constant amount of work is less, it is significantly faster than mergesort. It works by partitioning the list around a given element, such that every element to its left is less than the partition, and every element to the right is greater. It is best to choose the partition element randomly, and in practice, this is often done by shuffling the list and choosing the first element to be the partition. We then keep a pointer to the low element, i. e. , the element one to the right of the partition (let’s call the pointer i), and the high element, i. e. the last element (we’ll call this one j). We increment i until we come across a value that is greater than the partition, then increment j until we come across an element that is less than the partition. We swap these elements, then repeat this process of incrementing, decrementing, and swapping, until the pointers cross, or one hits the opposite end, signaling that the list is successfully partitioned. We recursively repeat this partitioning step until the entire list is sorted. You may notice that, while merge sort recurses, then performs the sorting, quick sort performs the sorting, then recurses (this is a great thing to be aware of and point out in interviews). It is also worth noting that, if the partition happened to be chosen such that all the items were on one side of it, the algorithm would actually run in n² time in the worst case, M U C H worse than merge sort. However, the random choice of a partition almost guarantees that this will never happen, so the average case is markedly better. Quick sort is difficult to show in a written example, but here is the pseudocode to help better understand the process. ``` function partition(array, lo, hi) i = lo j = hi + 1 while true while array[i] < array[lo] i++ if i == hi break while array[j] > array[lo] j– if i >= j swap(array, i, j) swap(array, lo, j) return jfunction quicksort(array, lo, hi) if hi <= lo return j = partition(array, lo, hi) quicksort(array, lo, j-1) quicksort(array, j+1, hi)``` P H E W! That’s a lot of sorting. Make sure you understand how these two algorithms work; they are both important and a good exercise in recursion. Try to implement them yourself, in your language of choice. And study up on a few of the other important sorting algorithms as well, such as heap sort and bucket sort. With that, I leave you with some words of wisdom, the source of which I cannot confirm:“ Hold strong opinions weakly. ” Til next time. Thanks!","['JavaScript', 'Programming', 'Computer Science', 'Codingbootcamp']",https://medium.com/@adt6261/cs-100-5-sorting-part-2-f6908e3e853b,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
it’s jennilyn,"Proud to be a #WomanInTech. Software developer, lifelong learner, runner, reader, cake-eater. Live bravely.",Reflections – it’s jennilyn – Medium,2017-08-06 01:35:16,medium,"Reflections Wasn’t it just last week I wrote Pilot: Starting my coding journey? As I near the end I realize things have come full circle. Eleven days from now I will dive (drown?) into software development at The Iron Yard in Greenville, S C, and — between you and me — I’m terrified. Excited. Really excited, actually. But anxious. In 6 days I will be done with this first season of programming and I’m having the same thoughts and feelings: What comes next? I’m crazy excited to start a new career, continue learning, and share my knowledge with others. But I’m anxious about these next steps, too. Feeling official because I got business cards today. This evening we were watching one of our favorite shows, Home Improvement. ( If you weren’t around in the 90s to watch this show on T V I highly recommend you find some reruns!) Tim was feeling small because during Jill’s “ Auction the Tool Man” fundraiser, Bob Vila brought in $700. Tim brought in $300, and only because Jill placed a bid. This crisis of confidence led, as it always does, to the vast wisdom of neighbor Wilson. He said something that’s important to remember for everyone, and that’s hitting home for me as I’m still in the infancy stages of my new career, and frankly, feeling a little small sometimes:: If you put a small value on yourself, rest assured that the world will not raise your price. Though I’m brand new at all this I will continue to live bigly. ( Yeah, bigly just happened. 😏 😉) I will move forward with confidence even when I don’t feel like it. I will not be afraid of bugs, mistakes, or asking too many questions. Don’t worry, though: I A M afraid of git push --force. Thanks for letting me give myself another pep talk, y’all. I’m here if you need one too. Onward into Week 12!","['Programming', 'The Iron Yard', 'Codingbootcamp', 'Careers', 'New Beginnings']",https://medium.com/@jennilynhowell/reflections-d528571c0d87,0,['The Iron Yard'],1,0,it’s,Unknown,Unknown,Unknown
Modestas,,"General Assembly, Web Development Immersive — Week 10 Overview",2018-03-22 22:30:12,medium,"General Assembly, Web Development Immersive — Week 10 Overview New Language! This week, it was time to take a break from the norm. After two solid months of Java Script, we were finally going to delve into an entirely new programming language — Ruby! My first impressions of Ruby was that it seemed very clean and concise. The syntax seemed minimal and it looked very readable; as if it was a priority for Yukihiro Matsumototo (the creator of Ruby) to make it as enjoyable for humans to read and write as possible. I also liked the fact that there are various alias methods; these are multiple versions of the same method but with different names. The point of such alias methods is to make ruby an easy programming language to transition to, as it incorporates alternative names of methods from multiple other programming languages. Ruby On Rails After covering the basic concepts of vanilla Ruby, it was time to add the most popular Ruby framework to our programming arsenal - Ruby on Rails! It took me two minutes to finally understand why it was called ‘on Rails’, and it sure does live up to its name. Within the first few minutes of the class, our instructor showed us how to build an entire R E S T F U L app using some terminal commands. I was amazed at how fast the process was, yet couldn’t help but remember all of those frustrating hours spent trying to build the backed portion of my previous projects. One thing I did not like about Ruby on Rails however, was how unforgiving it was in terms of making mistakes. Essentially, if you screw up one command in the terminal (which is not hard to do at all), you have to start the whole app again. Granted, the fact that it only takes a few minutes to complete does make up for this flaw, but still. Additionally, I can see why many people would object to using Ruby on Rails, simply because it takes the fun out of building the backed portion of the app yourself and in a way robs you of that experience; especially for those who enjoy backed programming. Code Test To end off the week, We were given our very first code test in preparation for our future job interviews. The test, of course was in Java Script as that is what the bulk of the course has been centred around. The test was two hours long and involved building a fundraising app that allowed a user to click on either a £1, £5 or £10 donation which would subsequently fill a progress bar up to a target of £100 and calculated how much more was needed to reach the goal each step of the way. It sounds easier said than done but there was quite a bit of fairly complicated C S S involved, though overall the test was not too difficult. To my surprise, although I was able to figure out how I was going to tackle the code test, It felt like I had completely forgotten how to use vanilla Java Script and especially j Query. In fact, I spent the first hour trying to link my C S S file to my H T M L file which was frustrating as hell but amusing at the same time. I guess a whole week of Ruby really did get to me, although I did manage to complete the functionality of the Code Test in the end. Conclusion Overall, I thoroughly enjoyed the week and felt like learning something entirely different was a nice change of pace. I was pleasantly surprised by how enjoyable it was to write Ruby and I feel as though it is a much more of a user friendly programming language than Java Script. In fact, I feel as though if I started off with learning Ruby first, then I would most likely prefer it more than Java Script. Nonetheless, i’m glad that I started my journey with Java Script because I can imagine the transition of going from a nice clean syntax to semi colons and brackets galore would have been a much more painful and arduous process.","['Web Development', 'Codingbootcamp', 'Programming', 'Ruby', 'Ruby on Rails']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-10-overview-5c298690bae2,0,['General Assembly'],1,1,modestas,Unknown,Unknown,Unknown
Julian Christian Anderson,Full Stack Web Developer • Coffee • Minimalist,My Experiences in a Coding Bootcamp for 2 Months – Julian Christian Anderson – Medium,2018-08-23 13:36:54,medium,"My Experiences in a Coding Bootcamp for 2 Months Image from my Instagram account @juliancanderson My Background First, let me introduce myself. My name is Julian Christian Anderson and I am a Web Developer from Indonesia. I don’t have any background at Technology, in fact I have a degree in Industrial Engineering. I finish my Industrial Engineering Degree this June and a year before finishing my degree I found out that my passion is actually in tech industry. So back to 2017 I learnt about web development by my own through Youtube and Udemy videos. After couple of months, I decided to be a freelancer in my last semester. When it comes to basic stuffs things may not get that hard for me but I faced a roadblock. What I Feel I faced a roadblock after a couple of months because I am aiming to be a full stack javascript developer. In the Javascript world, there are a lot of frameworks and things that you should know. I jumped from a framework to another because I got stuck at one of them. Jumping from a framework to another did not solve my problem at all. The worst thing is that it keeps adding more trouble to my developer journey. At that time I don’t even know what should I do next or how can I fix my problem. Because when I enroll a course at Udemy I can’t meet the person face to face and sometimes it is hard to explain a problem in form of text. I tried to find a community at my city and I couldn’t find it so I keep the problem to myself. What Did I Do Next? I tried to find some kind of workshop near my city. The first thing I found is a mobile developer bootcamp located in my city but I have no interest at all. Luckily I came across a Full Stack Javascript Bootcamp located at Jakarta, Indonesia. I read the testimonials and study their curriculum then I got attracted by them. They will start the bootcamp on July and the deadline of my final project is on June. I talked about this with my parents and I am grateful that they agreed. They gave me their full support then I tried to finish my final project soon enough so I can enroll at the bootcamp. instagram @juliancanderson What is A Coding Bootcamp? The definition of bootcamp according to Google is :“a military training camp for new recruits, with strict discipline. ” And the definition of Coding Bootcamp according to http://thefirehoseproject. com/developer-guide/1 is :“a technical training program that teaches the programming skills that employers look for. Coding bootcamps enable students with little coding proficiency to focus on the most important aspects of coding and immediately apply their new coding skills to solve real-world problems. ” So basically it is a training on programming with a strict discipline. But the thing about is that is really powerful is that it only teaches us a certain “skills” or “language”. There are a lot of programming language out there and it can be really overwhelming to learn them all. So the solution to the problem is by making a coding bootcamp that focus on the basic of programming in general and a specific programming language. What Do You Do At A Coding Bootcamp? So my coding bootcamp is separated into 4 phases. At phase 0, I only came to the campus on Monday, Wednesday, and Friday. Each day there is a single lecture for 2 hours and there will be assignments for that week that we should finish at home. At this phase I feel like it is not that busy and you can still do other stuffs after the lecture. You also get a live coding session which is basically an exam to test your knowledge every single week. This phase 0 lasts for 6 weeks. Phase 0 is all about basic Javascript and Programming. We learn about array, looping, objects, etc. Now I am on phase one after finishing my phase 0 with a pretty good score. I can go through Phase 0 without any major problem because I have been learning Javascript for a while. Without an experience in javascript and programming I couldn’t do that well. Phase 1 until 3 is called “ Immersive Phase”. At Phase 1 I go to the bootcamp everyday from 9 A M to 6 P M. Sometimes I go back home later at night because of unfinished assignments at the bootcamp. So for a typical day in immersive phase we have 2 lecture for 1 hour-1, 5hour. Rest of the time we spend is on the practical stuffs on the things we have learned at the lecture. The bootcamp also give assignments on the weekend usually to make us understand everything we have learned the week before. My Opinions on Coding Bootcamp 💻 Pros : For me a coding bootcamp is a great solution for people who want to dig deeper into programming or a certain programming language in a short time. Because it is usually shorter in time to a C S Degree. Coding bootcamp is also a great thing to enroll because everything that we will learn in it focus on the important part of programming and language. They also give a real world example problem for our assignments so that we can have a knowledge on it even before we graduate. The thing I love the most in the bootcamp is they mentor system. Mentor is a very crucial thing in every aspect of life. Before I enter the bootcamp I don’t have any mentor on web development and I don’t know what to do when I have a problem. Now because the lecturers become our mentor, I can really improve a lot by their guidance in the web development world. I also love being on a bootcamp because of the community. Before joining the bootcamp I have small amount of friend who code. I can not talk about the tech industries with them and I don’t know where to talk to. Now I have a lot of friends with the same passion so it is a fun thing to be able to connect with a lot of developers on the bootcamp. The last thing is in a bootcamp they have a very structured curriculum that has been improved over time. So it will always be up to date and helps us in many ways. Cons : Because of the short time the bootcamp has I feel like the pace is so fast and if you don’t focus everyday you can be left behind. Every day or even every lecture can be a different things to learn. Coding bootcamp also took most of the time in our day so I feel like I can’t do anything else beside of the coding bootcamp assignments. Sometimes I really want to explore something else but after I got home I feel so tired and go straight to bed. You must go all in on it. Don’t get me wrong, I love going all in on things that I do. I was a freelancer before and now I don’t even have time to do client works because of the overwhelming assignments on the bootcamp. So the only way to do it is by hustling until midnight after the bootcamp. It can totally reduces your sleep time and that is totally a bad thing to do since you have to wake up so early in the next morning. So, do I recommend joining a coding bootcamp? I totally recommend you to join a coding bootcamp if you have the time and money. It is a bit expensive but it is a very great investment for the future. I also suggest that you should study the curriculum first before entering the bootcamp and see if it is the thing you need or else it will be a waste of money. Prepare everything you need, never stop learning, and don’t ever give up even in a difficult situation! Thank you for reading. I am open to suggestion since it is the very first time I write. I am sorry for all the mistakes I made on the article and I will totally improve on my next article! 🔥⚡️ Follow me on Instagram and Twitter : Julian Christian Anderson (@juliancanderson) * Instagram photos and videos3, 267 Followers, 873 Following, 82 Posts - See Instagram photos and videos from Julian Christian Anderson…www. instagram. com Julian Anderson (@juliancanderson) | Twitter The latest Tweets from Julian Anderson (@juliancanderson). a front end web developer. i build kickass website for your…twitter. com","['Programming', 'Web Development', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/@juliancanderson/my-experiences-in-a-coding-bootcamp-for-2-months-ba90d80f9326,4,[],0,110,julian,M,0.014944177391843696,0.9850558226081563
Jacob Moore,,Day — 14 Append – Jacob Moore – Medium,2017-08-03 21:05:36,medium,"Day — 14 Append So what I’ve recently been doing is posting at the beginning of the day the thoughts, struggles, etc. from the previous day and where I found myself to be after some reflection after a good ( H A!) night sleep. I started doing this for a few reasons: In the evening I have to do the following things: travel home (~ 40 minutes), make dinner for my family (~45 minutes), spend time with my son before his bed (~20 minutes), spend time with my wife (~30 minutes) Read for the next day (~hour and a half) Review some of the daily activity (~half hour plus) Basically by the time I’m done reading I may get to do some daily review and at that point I’m pretty spent. I’m up every day before 6:30 to start breakfast for a crazy toddler so I need to pass out “early”. Thus back to the my point, writing a meaningful blog post at the end of the day: not happening. The reason for today’s post is simple. Over this week I’ve felt like I made a terrible, no good, very bad, incredibly horrendous decision. The first week I got it. The second week I mostly got. This week…nope. I remember being peeved about not getting something in the first week. I could not for the life of me get a single bit of code in C S S on the H T M L side. It was super frustrating. This…is way beyond that frustration. I just did not comprehend it. I’ve had to go back and go okay I get: Arrays, Objects, Form Building, grabbing items in D O M, etc. Where I get stuck is nested loops, calling on the functions, multi-dimensional arrays, and at it’s base core: building out what needs to be done. To say I’ve been ready to thrown in the towel is an understatement. I think Wednesday I nearly cried over it all. My opinion has changed a bit and thus the append for the day. Today we had a guest speaker come in and talk about “imposter syndrome” and how she felt that she was never going to get it, never finish, and certainly never get a job. That clicked with me. For starters to have that feeling of not being alone in it really hit home. Validated that I was struggling and not alone in that thinking. She also gave a great piece of advice; turn the apprehension and anxiety into excitement. Don’t get it? Okay, say you don’t get it! Talk about why you don’t get it and spin it in a way of W A N T I N G to get it so you are better. That may seem small but it got me. It’s the difference between having $5 and wanting it to be $5, 000, 000 and being sad or being happy because you can invest that $5 and maybe one day end up at $5, 000, 000. For anyone that ever reads these ramblings down the road. This is the point where I re-committed and approached it with a vigor of “ I don’t get it but show me how so I can be better”.","['Productivity', 'Codingbootcamp', 'Coding', 'JavaScript']",https://medium.com/@jacob.w.moore/day-14-append-ae46f080a63d,0,[],0,1,jacob,M,0.0024356479040408972,0.9975643520959591
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 9 — (06) – Mike Brave – Medium,2018-08-29 15:14:15,medium,"42 Piscine Day 9 — (06) Edit: This is part of a series that culminated here, Next post. Previous post. Today was better than yesterday, I at least learned more, but I did not finish assignments that were worth points, only the preliminary ones that were not. Because they weren’t worth points I didn’t turn them in, this was probably a mistake as it would have left a bit of a record of progress. I feel like I’m always behind, I was talking to another student about it this morning and she responded “we have to measure ourselves against ourselves not each other” wise words I’ll have to make an effort to remember them. It really feels like the piscine, or even this whole school is less about coding and more about being the kind of person who could be great at coding. Like what I’m told was an old zen proverb “drawing a perfect circle is easy, first be perfect, then merely draw a circle”. This piscine seems to be designed such as to be a foundational philosophy for a life filled with code, rather than just learning to code. We are learning seemingly contradictory things that when you take a step back really aren’t. We are learning to be humble, and to earn what we get. Seeing our weaknesses for what they are (hence always feeling frustrated) and also that we are more capable than we thought. That we must be willing to ask for help but ultimately owning our own success or failures. To think for ourselves, to seek out answers on our own and yet part of that is knowing that other people are resources to learn from. I mean the school is set up to teach us to be great at programming, but I hope they don’t mind me taking some life philosophy away from it as well. Damn I really want to be here on a more than probational status, I want to be the kind of person this would help me to be. I mean I’m already on the path and I was before I came, but to have a place surrounded by these sorts of smart people, in an environment where finding your own answers and working together is encouraged, sounds to me almost beautiful, lacking a better word. My not getting things turned in isn’t the way though, even my roommates who have seemed like they have been sort of slacking managed to get in up to assignment 8, and I only got up to 2, because I didn’t want to move on without understanding, which maybe was a mistake. I need to ask for help sooner, even though yesterday was better, I still hesitated. I need it to be every half an hour after stuck instead of every few hours after stuck. Also yesterday I didn’t sit next to my friends, not what I wanted to do but I did see an increase in work done, I may just have to check in with them and go to lunch with them and try not to sit too close in order to get things done. Yesterday my base count of students at around 8 pm was 120 give or take ten. I don’t think there are more than 130 total students anymore, I could be wrong but I think that’s about what it is now. The guys making a script to calculate ran into problems and will have to build a web-scraper and a program to compare results, I’m not sure they are that dedicated to it yet so we may not know until we finish, we may not know even then. I’m in the lab early because I woke up early, there are about 8 of us here at 7am, half of which are here from the night before, I found two people asleep at desks or laying on multiple chairs. Later today we are being graded on our group project, our group grade is based on the weakest link of the group, which since there is only two of us, and my partner did a piscine once before and is brilliant, well the weakest link would be me. I’ve been studying and feel that I understand, I had to hand compute my way through the program to fully grasp it but I think I’ve got it now, I hope it goes well. I feel for some of the other groups, most of my friends have been the ones pulling their group, and their teammates don’t understand and seemingly haven’t tried very hard to. It’s hard to say if this is a failing of the stronger teammates or not, one can only push so hard, and often this is usually part of a language barrier(much like real life I suppose), we will have to see how it goes. day06 assignments were as followscreate a library (using previously made functions)create a program that displays it’s own namecreate a program that displays it’s given argumentscreate a program that displays it’s given arguments in reverse ordercreate a program that displays it’s given arguments sorted by ascii order","['Programming', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-9-06-9e8a902d35f7,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 16 — (11) – Mike Brave – Medium,2018-09-05 05:02:51,medium,"42 Piscine Day 16 — (11) Edit: This is part of a series that culminated here, Next post. Previous post. As much as I’ve struggled to focus before today was worse. I was missing family, friends, former romantic partners. If it was a thing that could be missed I felt it today. So I got to the lab at 8 am, studied a bit, watched some video’s to understand the concepts for today, and then spent at least 3 hours bouncing between trying to study, checking reddit, looking at imgur, checking email, looking up people from the piscine (one went to Harvard for economics, fascinating). It was not a productive day. After lunch I tried to double down and watch videos to further understand the topic of the day (link lists) but my mind was wandering. Finally after dinner I realized this was due to a lack of sleep, I took a nap and suddenly I could focus again. Don’t forget to sleep enough everyone, you will focus better. There was a time when all the computers on the network crapped out for a bit, and some of my assignments were abandoned when they couldn’t have been, which was odd, things were fixed and taken care of, so no worries at the end of the day. I’ve worked out my flight back, my work schedule on return and a place to stay once back in Austin. So we are all good on those fronts. Less things to worry about. Today on our slack channel 42’s official twitter retweeted a guy who wrote an article about his piscine experience after the fact, it was short, entirely positive in tone and on the whole accurate. He posted pictures and screenshots, perhaps I should implement some of those as well. It’s a struggle to write everyday as it is, the postmortem after the fact will be of higher quality for sure. Some of the other pisciners are reading my blog and having a laugh at our shared pain (love you guys). It made me realize that my tone has slanted negative some. In truth I understand more about programming than I ever have in my life, and I’ve been trying to learn this stuff for more than ten years, unsuccessfully I might add. This after only two weeks, these have probably been the best spent two weeks of my last decade. So I don’t want you to think that my despair and frustration of the moment are signs of regret, I’d have quit already if that were the case. No I’m just trying to accurately convey the emotion of the moment, and the feeling of today was homesick and distracted. When I see code now I can read and understand it, it’s amazing, it feels like a superpower. I wish this program had existed when I was younger, I don’t think these guys coming here out of high school realize how fortunate they are to have this sort of opportunity. I hope they don’t squander it. Day 11 assignments are entirely about link lists, understand that and you will do well, if you want specifics I’ve saved all the pdf’s of the assignments, message me and I’ll get that to you. That’s it for today, I’m going try to actually get to bed at a decent time tonight.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-16-11-34ac467f2134,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Crystal codes,"Wicked cool wife. Serial servant. ISFJ. Whovian. Software engineering student @TheIronYard. Wannabe hacker — ya gotta start somewhere, right?",What to do when your code school announces it’s closing,2017-07-30 21:54:11,medium,"What to do when your code school announces it’s closing Take your time to process. — The morning that our Campus Director, Toni, shared that The Iron Yard would be shutting their doors after our cohort ends, I cannot lie — it hit me like a ton of bricks. One giant brick for the loss of a wonderful tech-propelling school in our community, another giant one for the thought of our incredible staff being disbanded and their family’s livelihoods being rocked. Another for the sheer panic of ‘oh, crap! What if I come to school tomorrow and it’s closed?!’ These were all true, raw feelings that flooded into my brain and heart that day. There were a lot of tears from students and staff alike and my brain was turned off the rest of the day. And that was okay. We needed that day. Then get over it. — Now, before I get your bricks thrown at me, hear me out. In the midst of the tears and overall bleakness of what that day was and meant, one-by-one there were students beside me and instructors in front of me that (whether stated or not) had a realization. Maybe they came to it on their own, maybe they did some heavy-duty processing with a couple friends, who knows. But here’s where we wound up: The Iron Yard didn’t make us. We made The Iron Yard. There has been a new-found vigor and energy about us as a whole, and it’s because we know that this is it. This is us giving it all we’ve got and not holding onto what could have been should the institution have kept running long after we graduated. 3. Pay it forward. — In our Tampa/ St. Pete community, The Iron Yard has been well-revered and vitally important for the training of Jr. Software Developers and has a near perfect job-placement rate. This means that our cohort (# The Ocho) is the last bit of the funnel that will help to employ the growing tech field. At this point, we’re choosing to glean every bit of information we can from our incredibly talented instructors. Once we set off into the industry, it is up to us to impart that knowledge and mentor those interested (especially those in minority groups). The buck should not stop with us. Whether it is volunteering to help children learn how to code, training a small business how to best use their already-deployed systems, or attending a hackathon to benefit local non-profits — there will always be ways to make sure the knowledge we’ve gained from The Iron Yard spreads far beyond areas we could never reach by ourselves. # The Ocho For Life Much love ❤ Crystal","['Coding', 'The Iron Yard', 'Codingbootcamp', 'What To Do', 'Women In Tech']",https://medium.com/@crystalmcgowan/what-to-do-when-your-code-school-announces-its-closing-3213b55bd6ba,0,"['The Iron Yard', 'TheIronYard']",2,23,crystal,F,0.9964206316603437,0.0035793683396563806
Jesse Calton,Jesse-Calton.com,How I Explain Dev Bootcamp to Muggles – Jesse Calton – Medium,2017-07-16 00:00:00,medium,"How I Explain Dev Bootcamp to Muggles Originally published at https://www. linkedin. com on July 16, 2017. 7 months ago, I took the first steps on the long and winding road to a career in software development. I opted for the modern-day boot camp approach, which to those who are not in the know, is typically a 12–24 week intensive program on the fundamentals of coding, with a heavy focus on 1 language, with the expectation that you will (hopefully) be employable as a software developer upon graduation. It is, in the immortal words of N B A champion Zaza Pachulia, N O T H I N G E A S Y. For the Muggles in my life, it’s hard to convey what Dev Bootcamp entailed. I could explain the basics: we learn to code, we practice core concepts of software development, and work on projects that may go towards a portfolio to show employers. I was but another Muggle just last winter. I knew that code was the “thing” that made the software “do the thing, ” but it wasn’t until one fateful night that a bearded giant stormed into my bedroom and announced, “ Jesse, you’re a wizard, ” much to the chagrin of my reluctant caregivers, that I decided to enroll in a coding school. ( Parts of that last sentence may or may not be true). How do I explain how it was quite possibly the most fruitful 18 weeks of my life, that my cup runneth over with excitement for having finally found a career niche? For me personally, Dev Bootcamp went deeper than just learning code. Dev Bootcamp taught me what it really means to keep an open mind I would consider this clip from the Walt Disney classic, Alice in Wonderland, to be a microcosm of my experience in learning to code. Just like Alice falling down the rabbit hole, every time she thinks she has a handle on things, she is met with another surprise. While she may lose her bearings, she doesn’t lose her marbles. She keeps moving forward with a mindful and curious eye. Writing code is an error-and-trial process. Whether it’s trying to print the words “ Hello World” to the screen, or deploying the latest Pokemon Go update for millions of eager players, developers at every stage of the game are going to get stuck. We could all take a hint from Alice to be patient when debugging our code. It’s incredibly easy to get bogged down in your errors and become discouraged, sometimes to the point where you want to throw your mouse/keyboard/i Phone/ Unicorn Frappucino at the wall and curse your life decisions. I don’t think there was a single person I met who found coding to be a breeze. You’re constantly bombarded with thoughts of “ I’m not good enough, everyone else gets it faster than me, how will I ever get a job, I’m not cut out for this”, and so on. The imposter syndrome was mad real. So what did we do when we found ourselves stuck in this mire of negativity and existential doubts? Something completely different. < Boom!/> Dev Bootcamp taught us to embrace our ignorance. The lightning-fast pace of the program made it counterproductive to hold onto any pretense. Saying things like, “ I don’t know, ” or, “ I’m completely lost on this concept we covered two days ago, ” became acceptable answers or comments. As someone who attended an academically and socially competitive university, in addition to my past life as a serious jazz musician, the whole bit about leaning in to your failures and being open about your shortcomings went against my conditioning. While it may have all been in my head, I felt there was some pressure in those past scenarios to be the smartest person in the room, the most well-read, the best musician who knew all the tunes, or the cool and rational hip dude who was fazed by nothing. What Dev Bootcamp did was create a disarming and warm environment, where everyone is welcome to admit their shortcomings. Whether it was through engineering empathy classes, pair programming sessions, group projects, or cohort bonding activities, I think we all realized none of us were really that different, that we all wanted the same things out of life, and that we were all here at Dev Bootcamp to change our lives. At the end of each day, we’d turn down the lights, light a candle, and hold hands and sing “ Kum Ba Yah. ”** Not exactly true, but I bet you believed me and started wondering what kind of cult I signed up for. To tie this point back into coding, that’s the type of attitude you need to adopt in order to become a successful (and way less frustrated) developer. We humans are quick to judge ourselves and oftentimes won’t even attempt something for fear of failure. This is a field where you’ve got to take the leap into learning new technologies. You won’t understand it immediately, you may take longer to get it than the average person, but if you remain patient and trust your learning process, beautiful things will happen. I realized I was stronger than I thought Before getting into Dev Bootcamp, I was super nervous about the long days and the pace of the program. Some alumni I spoke to said they had worked 80 hours a week during the onsite portion, which lasts 9 weeks. I’m a slow and deliberate learner, and Dev Bootcamp’s pace looked to be swift and efficient. It also didn’t help my anxiety that I dwelled on how much I procrastinated in college. Something miraculous happened when I began the onsite work. None of the things I worried about came true. My learning style didn’t change, it still took me a while to grasp concepts, but I barely noticed I was working for 10–12 hours most days. Sure, I was dog-tired at times and had to phone it in early some nights, but my determination to keep up the pace kept me focused. After acclimating to the work load, my plan became spending every waking hour with learning of some sort in front of my face. I would get home at night and watch the preparatory videos for the next day until my eyes couldn’t stay open. For someone who was worried about procrastinating and getting bored, it wasn’t bad! In fact, it was quite the opposite. I told my family I’d never felt so alive! Being a great developer is a constant and never-ending pursuit Somewhere during the last phase of the program, something clicked in me that I was capable of teaching myself anything code-related that I wanted to learn. Google became my best friend. If I wanted to clarify a certain concept or figure out why my code wasn’t working, I was now extra-confident in my skills to find those resources and make the necessary adjustments. After weeks of painstakingly climbing the mountain, I had reached the peak and was able to see the valley, and what a valley it is, some might even say it’s made of Silicon. * It’s the valley of life as a software developer and it never ends. You get to choose your own adventure now. * Please don’t crucify me for this god-awful pun. You know I had to do it. Now that I’m a graduate of Dev Bootcamp (read: funemployed), the job application process brings its own challenges and trials. There’s a constant barrage of questions and “should” statements: should I spend time leveling up and learning new stacks and frameworks? Should I apply to more jobs? Should I spend today practicing algorithms? Have you done any networking this week? React and Node aren’t going to learn themselves! Maybe you deserve a break and should catch up on old Twin Peaks episodes all day… The internal dialogue never stops and no amount of fidget spinning will distract from it. While it’s really easy to get down on myself about my lack of job, I think back to everything I’ve accomplished and what I’ve learned. My advice to myself and others in this same scenario? Trust the process. To any N B A fan that phrase is a dead horse that’s been beaten past the point of recognition, but hear me out: You’ve got the tools, you’ve got the talent. Find your white rabbit and follow it. You may get lost, you will probably get discouraged, but keep going. You’ve already failed multiple times and gotten back up each time. Eventually you’ll catch that white rabbit and reach the promised land. ** Hopefully your idea of the promised land involves a commute, a 40-hours-a-week commitment, and a salary. Otherwise you may have missed the metaphor… This just goes to say… Attending Dev Bootcamp was one of the best decisions I ever made. To my magical friends and my Muggle friends, may we all continue to make beautiful and meaningful things. Disclaimer: Dev Bootcamp did not pay me to write this glowing endorsement of their program. The experience is fully what you make of it. Update: As of finalizing this article, Dev Bootcamp has announced it will be winding down its operation and closing up shop at the end of this calendar year. The long and short of it is that they couldn’t maintain a sustainable business model without compromising the program’s mission. You can read all about it here. Just like everybody else who was involved with D B C in some way, the news was a shock. Even though the camp may not live on, its mission will through its staff and alumni. Originally published at https://www. linkedin. com on July 16, 2017.","['Programming', 'Dev Bootcamp', 'Codingbootcamp', 'Software Development', 'Coding']",https://medium.com/@jessecalton/how-i-explain-dev-bootcamp-to-muggles-5f94cd63e8bc,1,['Dev Bootcamp'],1,4,jesse,M,0.027859788501798273,0.9721402114982017
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,"Overheard in Chingu V5, PT. 2 – Chingu – Medium",2018-06-04 07:11:12,medium,"Overheard in Chingu V5, P T. 2 Random lines taken out of context from the Chingu coding cohorts! Photo by Maxime Bhm on Unsplash To awesomeness and 5 am coffees ☕️ I reached out to a friend who was in a previous Chingu cohort to get some live practice on using Git Hub (along with V S Code and Live Share). We had a great talk with @jarrku about the nonprofit project in the news channel and we one of those who we lucky enough to help him with the nonprofit project. We are still chatting, we are building a good team spirit. I successfully defended my thesis and earned Master’s degree in Web design and Development I had pair programming Decided on project, setup boiler We all got to know each other and enjoy everyone’s sense of humor :) I finished the logic for two small R E S Tful apps! Now I just need to add proper and responsive styling. we met twice, developed a plan and todos. Tiffany Devine has been great pair programming with. We managed to organize a meeting with everyone and worked on the points for Act 1 and defined what the M V P should be. I have been actively trying to run through a Bootcamp Prep program. I have solved >100 out of 145 Java Script problems in one week. In spite of the drudgery that it seems to be at times, I have continued to chip at it every single day in the spare moments I have and I have improved my knowledge of objects, arrays and loops incredibly. We made a Chuck Norris random quote generator I (@ A K) have secured an internship at Intel and will be starting next month. we started the sprint , planned the project, user stories, had 2 video/voice meetings, I’ve learnt new frontend framework ‘vuejs’ and used it to finish about 50% of phase one but we’ll recreate that when we distribute the word tomorrow. : Dhad an albeit small pr accepted to freecodecamp/learn repo — yay I felt nervous about taking on the Project Management/ Team Lead role but ultimately felt encouraged and supported by my team to do so. I think that my team is very active and excited to produce a solid M V P app so I’m super grateful I was matched with such an awesome group of people! I was able to finish my memory game for Udacity. I started learning react. I learned to use github in a team setup. Got our project idea :) Got set up Decided what will M V P look like I gave some ideas for our team project I had an interview for an intern position at an Igaming company in Malta. Was able to get back to my nano degree on udacity and continue learning. I’ve been selected to the Google Udacity Scholarship for Mobile Web Specialist track Brainstormed ideas for project and decided about the team lead :) We had our first meeting. I finished a blog using P H P and M Y S Q L Our team completed a lot of phaser tutorials for our project stack! Our first meeting was amazing. I feel like the stars aligned when our team was formed (great job, Chingu). Our team is really on the same page, and we each have strengths and areas in need of growth that complement each other. Had successful team meeting and worked through most of Act I Had an awesome pair programming session. Documented the acceptance criteria for our project Helped my fellow mate in pair-programming. Completed Functional- Lite Java Script by Kyle Simpson ( @getify ) from Frontend Masters. We had a great first meeting where we decided on our M V P. I got our boilerplate up for React- Native app Worked through act one one top of our current work schedules! :) Lubo got his masters degree : D We’ve decided on a project management tool — Trello. paired with @ Zandas512 Launched our Trello Got general project design layout, and design. Almost done with my Google Web Developer Scholarship nanodegree. We got together and learnt more about each other!we are in the stage of brainstorming project ideas Returned to #100daysofcode, started on Wes Bos React course We finalised the aesthetic design of our application My first experience with pair programming has been great! We’ve have already met several times I finished a udemy react coursefinished my capstone project for my coding bootcampi got a job as junior php developer and now pair programming with another developer from chingu Just discovered the amazing possibilities of svg animations! We have a clear idea of our project To be honest the biggest thing for me was to learn how to break the silence in team chat and make myself accountable to start communication. We have been able to setup, chosen and project and outlined our projectgot the project up and running Decided on a project Had a meeting","['Programming', 'Chingu', 'Codingbootcamp', 'Freecodecamp']",https://medium.com/chingu/overheard-in-chingu-v5-pt-2-a2cd36bc8d68,5,[],0,9,chance,M,0.024461428631419813,0.9755385713685801
Jesslyn Landgren,Full-stack developer | @DgtlCrafts grad | Engineer | Geographer,MARTA Hackathon Tick-Tock – Jesslyn Landgren – Medium,2016-11-03 14:23:04,medium,"M A R T A Hackathon Tick- Tock I’m a little late getting to this post, but I wanted to recap an event I went to last weekend. M A R T A (the public transit authority for Atlanta) partnered with other start up organizations and coding groups to offer a series of hackathons spread over a year. On Friday, I attended the most recent installment along with one other Digital Crafts student from my cohort. If you aren’t familiar (which I wasn’t until I started at D C), a hackathon is an event where developers and others in the Tech industry get together to quickly develop product solutions (apps, websites, etc) to a particular problem over a limited period (usually a weekend). The event was held at Sandbox A T L which is in the Garage at Tech Square building in Midtown/ Tech Square. We drove over from A T V after class wrapped up at 5 on Friday, just as the event was getting started. It was a 24 hour-type event ( We started working Friday evening, and the demos and judging began at 4:30pm Saturday), so prepare yourself for too many comments about how little sleep I got. Rough chronological account:7pm Friday: Attendees start presenting their idea pitches to everyone. The organizers had included 3–4 idea pitches in the pre-hackathon briefing materials. These were ‘official’ problems or ideas from M A R T A and their partners. Attendees who had their own app ideas or problems they wanted to address lined up and gave a ~60 sec pitch. The people pitching an idea generally will then lead a group to work on that project that others can join. 8pm Friday: Get into groups Mass free for all for group formation where the other ~100 attendees who didn’t bring their own idea to pitch talk to the different leaders of projects they are interested in to determine if they would be a good fit for that group. We were lucky to find one that knew they wanted to build a web app, because thats all we really have the skills to contribute to at this point. It wasn’t clear how much we could be involved, it was a fairly large team, but we just jumped in and tried to be confident. The problem our team would be tackling was a pitch from one of M A R T A’s partners, Soccer in the Streets. The group recently finished the construction of a soccer field on the roof of the Five Points station and has a children’s league. Our challenge was to create an app that would allow chaperones supported by the organization to meet kids at the M A R T A stations closest to their homes, and take them to the field and back while notifying the kids’ parents at different points along the way. We had a few minutes to talk with a staff member from Soccer in the Streets to hear more about their needs and what they were envisioning, then we brainstormed as a team. The resulting idea was that we wanted a simple app (only a few pages) where: Users had to be logged in to use Users either register as a chaperone, a parent, or a kid. Kids must have an authorization code from their parent in order to register A Q R code is generated for each kid that registers and is displayed upon login. Notifications to parents would be text messages automatically sent at the occurrence each of a set of different transactions occurring along the M A R T A rail line (leaving home, arriving to soccer field, leaving soccer field, arriving to home station). A transaction would consists of a chaperones would opening the app and scanning the Q R code of a kid (shown on the kid’s phone while logged into the app). The transaction would create a new record in our database, which would be the trigger for a text message sent to the parent associated with that particular kid in our system. 8:30pm Friday: Start working Our group grabbed a free corner of the room and set up camp. We each went around in turn and said what role we would be interested in taking. I said I was open to front-end or back-end, but back-end needed more help, so thats where I ended up. There were 4 of us total on backend, expecting to accomplish some basic front-end work too, 2 people on design and marketing, and 1 person who served as the project manager. The project manager had some great ideas for managing the rest of us. Even though I nerd out over that sort of stuff, it was very much a relief to know that the logistics of integrating with the design team and bringing everything together for the presentation were under control. We also decided that most experienced back-end member would handle the building of a second app (not seen by users) to send the text alerts, while the other 3 (including me) would build the database and the back-end of the app that the users would interact with. 9pm-12pm Friday: Database design, lightning round. Keyur and I spent some time talking through what queries on the backend we would need to support, then talked/sketched through the database design, then set up the database structure using Post Gres, tested some queries, made changes, and repeated. We even started writing the Python/ Flask code. Midnight: Just keep eating This hackathon went all out with the food, another meal/snack was delivered every 4 hours or so, each time from a different local restaurant. Refueling definitely helped us keep chugging along. 12:30am-4am Saturday: What This period was a bit of a blur. We had a solid database at this point, some H T M L pages to connect to, and most of the Python/ Flask which would handle those connections…but things started breaking down as we went along. We took the database remote, and then spent a lot of time working out local errors caused by our use of different postgres clients and finding all the small errors in our code. At one point, I tried to take a nap on the floor, but only managed ~15 minutes. Most groups (including half of ours had gone home for the night, so the space was pretty deserted. 4am-8am Saturday: Bargaining We went through another push of resolving errors, adding to our route handlers, and adding Jinja to the H T M L set up by another member. We were fairly close to having a very very bare bones site that was stable that we could then try to build up as much as possible before the deadline. Also around this time, we deployed our app using Heroku, which involved an hour or so of Google searching and troubleshooting. 8am-12pm Saturday: Second wind Thanks to some breakfast from Flying Biscuit, we gathered ourselves for another round of work. Our design team was back on site after getting some rest, and they started working on the presentation while we tried to make sure there would be something to present. We spent some time building up the page that chaperones would see upon login adding in the ability to show a list of kids they were currently responsible for on their user pages. Our back-end team member spent a lot of time researching how to incorporate a Q R code reader (he had already knocked out the Q R code generator), but ran out of time, so we had to by pass that by manually entering a kid I D number. 12pm-4:00pm Saturday: The part where I question my career choice We had a mostly stable version of our site at this point. We spent the remaining time chasing down bugs, testing, and adding what functionalities we could. This doesn’t sound like much, but we got really good at breaking site, which was most of the problem. In fact, 30 minutes before were scheduled to present I was trying to add in something requested by the front-end team, and I broke E V E R Y T H I N G. If not for some quick git thinking by our back-end pro, it would have been very bad. I do not suggest doing this. Unfortunately, we didn’t get nearly far enough to merge with the beautiful design developed by the front-end team. We just didn’t have enough time to build out more than the basic features, or enough time left to take on any significant styling of the site. They did G R E A T work though, so skip over the screen shots of what our app looks like now and just imagine it as shown in the later ones. 4:30pm-6:00pm Saturday: Demo for judges The presentations of all the projects were done science-fair style where each group had a table with a laptop(s) showing some slides or demo-ing their product, and the judges and attendees walked up to take it all in. The role of the back-end team here was pretty simple — we got out 3 phones and demonstrated the flow of a transaction between kid, chaperone, and notification to parent — repeatedly. The rest was left to our marketing/project management team who did a great job bringing a sense of professionalism to the final product. 6:00pm-7:00pm Saturday: Finish Line After working full-tilt all day, we had an hour to kill while the judges deliberated. We talked with some other attendees, ate more snacks, took a group selfie to memorialize the occasion, and waited. Unfortunately, we didn’t make the cut for the top 3 projects. We didn’t have much of a chance to checkout the work of other groups, but hearing the organizer describe their results, it was clear we had been up against some serious competition. I think we were all satisfied with the outcome, especially since it was the first hackathon experience for almost all of our team!7:30pm Saturday: I topped off my caffeine supply, got in my car, made it through the ~1hr drive home with my music up and windows down, arrived home, and promptly C R A S H E D. hard. Reflecting: Hackathons are a lot of cool things in a very short time period. We learned so much in 24 hours, but it was also very stressful. I think we actually could have learned more if we had come in with an idea of our own because we did have to spend some time clarifying our ideas and make sure we were all on the same page. The biggest take away for me was seeing first hand that Digital Crafts is indeed preparing me to take on these sorts of tasks. Our projects a few weeks ago definitely helped, but this was an even better check of our skills. In the end, I was just happy to walk away with the experience and to have a working product, even if it only accomplishes 1 or 2 of the conceptual goals we laid out in the beginning. Keyur and I have made tentative plans to build out the app a little further so we can showcase it on our portfolios, so I’ll be back with an update in the case that that effort is successful.","['Hackathons', 'Technology', 'Marta', 'Codingbootcamp']",https://medium.com/@jesslyn.landgren/marta-hackathon-tick-tock-2a2ae9344a93,0,[],0,1,jesslyn,F,1.0,0.0
Evan Thomas,Full-Stack Developer || Lead Teacher at Le Wagon || Podcast Host at The Zip Files,Le Wagon Coding Bootcamp: Possibly The Best Thing I’ve Done,2018-03-15 19:05:50,medium,"Le Wagon Coding Bootcamp: Possibly The Best Thing I’ve Done Beverages at Le Wagon London I’ll give you some life context so that you can understand how Le Wagon literally changed mine. I left university midway through my degree in History and German. I didn’t feel that I was getting enough value to make the investment sensible. I was there because of ambition. I want to have a good career in a job that I enjoy. I went to an academic school in London and was taught that university was the only way forward after 18. To not go would be to forfeit my right to a successful future; to stagnate. Keep paddling, don’t question, you’ll make it. I was on holiday in Lisbon, staying in a house share. Sitting at the kitchen table, glancing at the laptop of the person next to me, I saw fluorescent text tapping along the dark screen. Coding, just like in the movies. It still excites me when I open up my laptop and see the arcane looking terminal and text-editor in which I do most of my work. I asked the guy operating the laptop how I might be able to sneak into his mystical world. He asked what I was studying. History I said. Well then, a coding bootcamp he said. And that’s when I found Le Wagon. Googling away and trying to find the best bootcamp in Europe. I hit gold, but I didn’t know it at the time. I applied, I got a place, and I left university. I didn’t make my decision lightly and I was worried that Le Wagon wouldn’t live up to my hopes and dreams. That I wouldn’t like coding. The first 3 weeks are hard but immensely rewarding. At 9am the 90 minute lecture starts and one of Le Wagon’s great teachers guides you through a new concept. You have to concentrate. Every syllable is important to your understanding. You then split off into randomly assigned pairs and work through coding exercises until 5:30pm. This is where your brain strains as it shifts and develops new methods of function. You’ll get tired, you’ll sit in total frustration, you’ll feel brilliant. From 5:30pm-7:00pm a student will go in front of the class and try to solve a coding problem. Don’t worry if the thought of this intimidates you, it does most, but you won’t be alone up there, the class will work with you. On this course you learn hard skills. Through 360+ hours of coding you are born into the world of technology and what an awesome world it is. The next 4 weeks are difficult too, but there is a shift in what is learned. It becomes much more visual, and your first 3 weeks come together to make sense. You really have to trust the process. Often times you might think, why are we learning this? It’s because Le Wagon is responsible. They don’t give you a whistle-stop, skim read, superficial introduction to coding. They dig the foundations deep to steady you for a whole future of explosive growth. The last 2 weeks are spent working on your final project in teams of 3–4. This is the stuff I love, creating something from nothing. Once again it’s hard but by this point you trust in your ability to make your vision a tech reality. I worked with a fantastic team to build a live streaming platform — socialive. It’s still up and running to this day, and the team are raising a seed round now! Le Wagon is up amongst the best things that I’ve ever done. I feel like I have a superpower, but like any good hero/heroine I’ve got to keep growing, learning, and adapting. That’s the world of technology and that’s what Le Wagon teaches you. I wrote this review a year ago, a week after my Le Wagon bootcamp finished. What did I get up to after Le Wagon? I’ll tell you all about that next week…","['Programming', 'Web Development', 'Codingbootcamp', 'Learning', 'Education']",https://medium.com/@evanhenrythomas/le-wagon-coding-bootcamp-possibly-the-best-thing-ive-done-6c4c4aef9d6f,1,[],0,158,evan,M,0.015476226233742828,0.9845237737662572
Ayaka Hirata,,Learning to Code as a Teenager – Code Chrysalis – Medium,2018-08-13 03:34:12,medium,"Learning to Code as a Teenager Code Chrysalis Caterpillars Program What’s the best age to start coding? That’s a trick question. It’s never too early nor too late to start coding! Entering the tech world can be intimidating. Now, on top of that, imagine flying out to a foreign country to do so. That’s exactly what many of our Caterpillar students did this summer. Here in Tokyo, Code Chrysalis welcomed seven high school students from different cities around Asia to join us for a week of learning! How was their experience? We asked the students directly. Why did you decide to enroll in this summer course? Sauri, who travelled from Sri Lanka to Tokyo, explains that he had studied computer science before at school, but didn’t fully understand it. “ This program was another advantage for me to learn more specifically about coding, which I couldn’t do at school” While everyone stood at varying starting points, the majority of the class had little-to-no prior knowledge in programming. Nevertheless, we saw a spark of interest in regard to both coding specifically and in learning something new! What was your favorite activity throughout the week? The Caterpillar course was designed to prepare students with the mindset and attitude necessary for problem-solving. From the spaghetti-marshmallow challenge to pitching their own apps, the students experienced various coding tasks and team-building activities throughout the week. Avi: “ I really enjoyed creating the hot-potato game. We first played the game with the Sphero and then we had to figure out the basic codes to (recreate) it on our own. ” On the first day of class, our instructor set up a maze through which the students would have to guide their Spheros. After they completed the maze, they had to program the direction and speed of the Sphero using what they learned about data structures, loops, and more! Riku: “ My favorite activity was coding the solution to the maze. It was a challenge, especially (coding) in English, but after I got the basics it became much easier than before” As their final project, the teenagers transferred their knowledge into action by implementing everything they learnt , from pseudocode to using loops, to create an app that addressed real-world problems of their interest. Sauri: “ If I could create any app in the world, it would be the fishing app that my group and I are pitching on graduation day. ” Sauri, Jun and Avi proposed Fish Finder: an app that would send notifications every time a fish enters the radar. The app would be displayed as a monitor on the phone, showing real-time underwater views from the 360-degree camera attached to the neck of the hook! What can you take away from this program besides your new coding knowledge? Every curriculum built in Code Chrysalis comprises of both hard and soft skills for our engineer leaders-to-be, and Caterpillars is no exception. Avi: “ Presentation advice was very helpful; also logical thinking used in step-by-step processes to solve problems. ” Musashi: “ I had never worked with non- Japanese people, so it was fun to get to know even a little bit about my classmates. ” Kavi: “ I never interacted with Japanese people…but now that I’ve gotten to know them I can see that they’re no different from us!” What did you enjoy most about Caterpillars, and what made it unique in your opinion? Musashi: “( In my school) we never use computers or i Pads. We don’t talk about these things… I think (programming) relates to our future, but what we do in Japanese schools don’t really touch on these subjects. ” Avi: “ It’s a lot more interactive and block-programming made it more simple. ( At school) we don’t jump into difficult coding problems right away. ” Kavi: “ We don’t have as many hands-on experiences, like how we got to test our programs on the Sphero robots directly. We usually just learn about theory and that’s it, but here, we actually try it out. ” Do you think you’ll continue learning to code? Avi: “ I’m not sure that I want to do coding (as a career), but I definitely like it more than before…because we used block-programming which kept it more interesting! I prefer the thinking part more than just typing out codes. ” Jun: “ I know a person that knows how to code. He introduced me to Scratch. I plan to continue learning how to code from him. ” Kavi: “ I want to go into more of the engineering side. I knew that I wanted to go into chemical engineering, but now I also have interest in software engineering. I realized that once you start to understand it, it’s not as difficult. ” Would you recommend this program to other teenagers? Our students capitalized on their opportunities and showed immense potential, to say the least. The amount of information they absorbed within such a short period of time was truly inspiring. Their growth mindset and eagerness to learn shined through all of their achievements throughout the program and we are beyond proud of each and every one of them! Riku: “ I recommend this program to other teenagers because it gives you an opportunity to learn new things in English. It was really fun”. Musashi: “ I already recommended ( Caterpillars) to some of my friends. I thought it would be too difficult for me, but it turned out to be very fun!” The logos of the apps designed by our Caterpillar students Code Chrysalis is a coding and English school located in the heart of Tokyo. Our programs include a 12-week advanced software engineering bootcamp, a beginner coding course, and an English communication immersive. See why we are an industry leader in tech education in Japan. Follow us on Instagram | Facebook | Twitter | You Tube","['Coding', 'Technology', 'Education', 'Software Development', 'Codingbootcamp']",https://medium.com/code-chrysalis/learning-to-code-as-a-teenager-93775d3e2a13,3,[],0,1,ayaka,F,1.0,0.0
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 46 — Wanna Be Startin’ Somethin’ – conshus – Medium,2017-05-15 12:12:03,medium,"Day 46 — Wanna Be Startin’ Somethin’liner notes: Friday, I got the opportunity to check out Purple, Rock, Scissors, a creative design firm here in Orlando. Huge thanks to Mike for the invite. They are on the 20th floor, so the view is amazing. Instagram post by conshus de O U R show * May 13, 2017 at 12:28am U T C105 Likes, 4 Comments - conshus de O U R show (@imconshus) on Instagram: ""# Views #20 Floors Up # Happy Hour #swipe…www. instagram. com Ariel, the Brand Manager, took me on a tour of the office. For the first time, I got to play with an Oculus set up. I can see what the hype is about. Not only did I get a tour, but I was able to sit in on a technical meeting that Jim, Director of Technology, was leading. It was assuring to see things I am learning being applied outside the classroom. After that, it was Happy Hour. I got the sense that everyone there really enjoy being around each other. Met some really cool people. Thanks again to everyone for letting me come hangout. Saturday: Radio show day! I always have fun doing the show. That’s why I keep doing it. As usual, you can listen to the show at http://k N Ow B E T T E R H I P H O P. com Sunday. We didn’t have an official weekend assignment since we’ll be starting our final projects. I took my new found time to mow my lawn and do laundry. Although, I didn’t write any code, I did do some research on various libraries I may include into my final project. Today is the official first day of us working on our final projects. My goal today is to work on the one thing that plagues me on every React J S Project I’ve done, getting j Query or j Query-like functionality working. I know I can use vanilla javascript and/or C S S, that’s what I have been doing, but that seems kind of hacky. Since I have a little time, I want to investigate to see if there is a better way of accomplishing it. I have a couple of ideas, so we’ll see. I’ll report back my findings tomorrow. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Hip Hop', 'Coding', 'Code', 'Codingbootcamp', 'React']",https://medium.com/@conshus/day-46-wanna-be-startin-somethin-34e0e98fc9c3,0,['The Iron Yard'],1,2,conshus,Unknown,Unknown,Unknown
talent.io,Great Jobs for Great Developers,The Full Stack Human: 5 Reasons Everyone Should Learn to Code,2018-08-23 08:01:01,medium,"The Full Stack Human: 5 Reasons Everyone Should Learn to Codeby Cameron Blackwood, Client Executive at talent. io Last Thursday, I spent my lunchtime confused as to why a simple “for” loop sent Google Chrome into meltdown ( If you’re curious, I accidently instructed to count up to infinity. Please note: this breaks your browser. ). Whilst your first instinct — assuming you didn’t read the title of this article — would be that I work as a developer, my job is not technical whatsoever — I’m an Account Manager at talent. io. So, why do I choose to spend an hour a day having my brain hurt? Good question. Here’s five reasons why I believe everyone should learn to code, especially if they work in the technology sector — even if you don’t want to be a professional software developer. If you work in technology, it’s critical you understand your product Photo by Luca Bravo on Unsplash I’ve been interested in computers from a young age, but I never really considered software as an area to pursue either in my career or academically. When I started working for a recruitment agency sourcing software developers, a manager unironically slapped me on the back and said “all you do is press C T R L+ F through a C V son, it’s the easiest game out there” (can you imagine actually thinking like that?!) Whilst that was an extreme example, there’s a major trend of people involved in technology not actually understanding how everything works under the hood. Simply put, you’re putting yourself at a major disadvantage if you’re attempting to market and sell your product to decision makers like C T Os — they want to know the U S Ps ( Unique Selling Points) of your technology, and you need to be able to explain it. Why is it faster, more secure and more reliable than the competition? If you can advise on a technical level as well as just a commercial one, then you add a whole new dynamic to your credibility. You’d be a marketing guru or a sales whiz, depending on your style! It provides you with a creative outlet Photo by Luis Alfonso Orellana on Unsplash I make no claim to being an artistic guy — I’ve always been all about numbers in my professional life too. Outside of work, my idea of an outlet has always been to play rugby, or furiously pursue those elusive solo wins on Fortnite. I’ve always struggled with “creating”, so to speak. However, once I created my first webpage (a static one with some very basic H T M L and C S S), I realised that I could actually construct something useful, or fun, from scratch — and that the possibilities are literally endless. If I’m having a challenging day at work, I will simply spend my lunch break solving problems and working through coding exercises, or adding to my portfolio. A study from the University of Texas recently showed that engaging the brain in brand new activities improves cognitive performance over time. You can transfer this enhanced mental sharpness into your regular work! You can use your skills to give something back Obligatory picture of my parents’ rescue dog Regardless of your day job, many people want to contribute to a cause they care about, and coding can allow you to really make a difference. As it is a skill in high demand, nonprofits/charities really need people who are capable of helping them in this aspect. From simple websites that give information about your chosen cause, to complex technical solutions to global issues, coders of all levels can help out. Free Code Camp actually connects you with organisations looking for coders who can help them. You get to hone your skills while doing something good for the world — it’s a win-win! In the long term, I want to get good enough at coding to create something that helps a cause close to my heart. When I was a teenager, my parents adopted a rescue dog who gives the family so much happiness every day — he just needed a loving home! Because he was in rural Ireland, there wasn’t anywhere for him until we found him online. As a result, I’d like to create a web tool that scrapes data from animal rescue websites to give people a database of animals needing adoption. Is there a particular cause you want to assist with? By learning to code, there’s endless potential to do just that. Coding helps you think logically Photo by beasty . on Unsplash Coding is very satisfying in the sense that it follows very logical rules — it either works or it doesn’t, and there is always a solution to your problem. If you do it properly, there is no ambiguity whatsoever. Since I’ve started coding, I’ve interestingly started to notice a side effect to how my brain works — I seem to now approach my life with a “debugging” mindset. If I have an issue, I start worrying less and just think through various potential solutions until I find the most logical one. This in turn has made me far less stressed and has allowed me to work much more efficiently, so I get more done in less hours. Out of interest, I had a look at statistics related to my job and compared the progress from when I started coding to now. The results were quite dramatic — I am clearly getting my work done much quicker than I was before, allowing me to get a greater volume completed and resulting in overall better performance, which is very satisfying when you work for a startup and can see the growth right in front of your eyes! Coding is a hobby with a great community Photo by N E S A by Makers on Unsplash It’s easy to give up on coding if you’re just getting started, especially when you’re writing very simple H T M L and the road ahead seems so long. However, learning is almost like a “boom and bust” cycle — you learn a new skill and feel on top of the world, before moving onto the next bit and just getting frustrated. The way you can avoid this is by engaging with the community — there’s all kinds of Discord, Slack and Twitter groups you can join of people in the same boat. In fact, I run a Discord server for non-coding Coders which you can join here! What’s more, there’s a multitude of local meetups for casual developers in urban areas. You can make great friends as well as learning an awesome new skill! Still not convinced? Whilst I’m not an expert by any means — I have barely scratched the surface in terms of what I could learn, I can certainly say that learning to code has given me a fresh perspective in business and I’m much better for it. If you believe in the 10, 000 hours to mastery role, I am 1% complete, which is exciting in a way! I recommend giving it a try, no matter what your day job is — you never know what you could use it for! I’ve found a great support for my own endeavours at talent. io, at home and in the code community. Start learning how to code now: my tips for success Sign up for Free Code Camp, or if you are willing to pay, Treehouse. Decide what you want to learn first — I highly recommend H T M L, then C S S, then Javascript. It will gradually introduce you to the world of coding. Create a Git Hub and Codepen account (to store/show off your code!), as well as a Stack Overflow account (to ask questions). Contact me on Twitter! I can then introduce you to the wider coding community Build as many projects as you can. Make sure to learn by doing. Show your work to your family and friends, and ask what they think, then challenge yourself to implement their suggestions!📚 Recommended resources:https://www. w3schools. com/https://www. freecodecamp. org/https://allthetags. com/https://www. youtube. com/watch?v=rfsc V S0vtbw&feature=youtu. be Sources cited: Can Computer Programming Boost Your Brain Power? — Treehouse Blog Learning how to program for the first time was a challenge for Adam Waxman. He worked as a full-time investment banking…blog. teamtreehouse. com How one year of being a volunteer editor for free Code Camp has changed my life I didn’t know how much of an impact I had made working with free Code Camp as a volunteer editor until I was named a 2018…medium. freecodecamp. org Cameron Blackwood is a Client Executive for talent. io London. His role is to help startups (and increasingly large tech companies) hire the very best technical talent seeking new roles. Learning about the technical side of things helps us understand what our users’ needs — whether they’re a company looking for a niche tech hire, or a candidate who is ready to change jobs. If you’re interested in taking initiative, growing your skills, and making an impact, join us as we redefine the tech recruitment industry.","['Programming', 'Developer', 'Recruitment', 'Codingbootcamp', 'Job Search']",https://medium.com/@talent.io/the-full-stack-human-5-reasons-everyone-should-learn-to-code-e756d0f50374,2,[],0,95,talent.io,Unknown,Unknown,Unknown
Verity Honebon,,Week 7 — A notes app and asynchronous JavaScript – Verity Honebon – Medium,2017-07-31 11:53:37,medium,"Week 7 — A notes app and asynchronous Java Script We were given two options at the start of this week: either work on creating a notes web app in groups with no structure (just an outline for the project) or work in rotating pairs with more scaffolding. It was a hard choice for me as I’d enjoyed the challenge of working in a group the previous week and the added complexity it had brought above and beyond the technical challenge . However, in the end I chose the pairs track. My main reason for this was that I like to learn things in the right way the first time I do something so that every time I do the same thing subsequently I know that I have a solid foundation. I sometimes feel that when I choose the easier task at Makers it is somehow a cop-out, like I’m not making the most of the experience and that I’ll realise that I’ve cheated myself out of something later down the line, however, sometimes you do just have to consider your individual learning style and choose the option that you think will be best for you. I won’t get into the week’s challenge in great depth as it went along well without too many problems. It was in the weekend challenge where things really started to get interesting and I first came up across the joys and woes of Java Script’s asynchronicity. The weekend challenge, as usual, mirrored the work that we had done in the week and we were asked to create a web app that used both the Guardian A P I (http://open-platform. theguardian. com/) and a news summary app called Aylien (http://aylien. com/text-api) to create a page that summarised the Guardian’s headline stories. I’ve got to say getting my head round using the Guardian’s A P I took some time and copious reading of the documentation (which, by the way, is great in its fullness). Once I had understood the nature of the response that I was meant to be getting back and that I would need to convert it into a J S O N object I was feeling good. That’s when I hit a wall. Although I had adhered strictly to the M V C pattern that I had applied in the week my code was running away from me, making requests before other parts of the code could run and then throwing errors. When I started to realise what the problem was I researched and considered the following options:(i) callbacks(ii) promises — I think there is some debate about whether these are essentially the same sort of thing as callbacks. I chose to use callbacks, which I got most of the way there with. Some of the others in the cohort used promises, which I think I would like to look into more thoroughly when I get some time. It’s tricky, I like the feel of Java Script because it seems less verbose and less rigid than Ruby, however, I also see its quirky difficulties. I hope that in some of our upcoming projects I get a chance to write more Java Script and to master some of these challenges. All in all, the most important lessons I think I have learned from this week are: I am able to understand and employ documentation for totally new technologies. The initial panic of not understanding something is starting to be less acute and I am able to enjoy the challenge rather than fear it. I am able to diagnose problems in my own code and to consider possible solutions to these issues. You should choose whatever path you think best fits your learning style. Don’t try to fight the natural quirks of a language but find tried and tested solutions. Next week I think we are back to Ruby, my old (thankfully synchronous) friend.","['JavaScript', 'Codingbootcamp', 'Coding']",https://medium.com/@verityhonebon/week-7-a-notes-app-and-asynchronous-javascript-53ff24380ca,0,[],0,1,verity,F,1.0,0.0
Kyle Prinsloo — Study Web Development,I help developers become successful freelancers & create effective websites — https://studywebdevelopment.com | https://studywebdevelopment.com/freelancing.html,General Assembly Web Development Immersive Review – Kyle Prinsloo — Study Web Development – Medium,2018-09-09 12:10:24,medium,"General Assembly Web Development Immersive Review This article is a review of General Assembly’s Web Development Immersive Remote ( W D I R) and Web Development Immersive ( W D I) courses. W D I is one of their flagship bootcamp courses. You’ll find a detailed breakdown of the pros and cons to help you decide if you’d like to enroll in their course or not. If you live in these cities/countries, here are the links to General Assembly’s on-campus Web Development Immersive program: Atlanta Austin Boston Brisbane Chicago Dallas Denver London Los Angeles Melbourne New York City Providence San Francisco Seattle Singapore Sydney Washington D C Firstly, who is General Assembly and what do they do? General Assembly began as a co-working space in 2011 and has since grown into one of the leading learning organizations with more than 15 locations and over 40, 000 full- and part-time graduates worldwide They are fast becoming a highly reputable learning institution that employers like to see on a resume. The truth is that places like Udemy are great to improve your knowledge and to learn more skills, but when it comes to credibility, General Assembly is considered to be one of the best. Why should you consider the General Assembly Web Development Immersive or Web Development Immersive Remote? If we had to get to the root of why you would like to sign up to the immersive remote or immersive program, what is your main goal? It could be to improve your skills, but for most, it would be to get a (high-paying) job. With that said and without making this review too “fluff” like, here are the main benefits: Career coach — You work one-on-one with a career coach to develop a job search strategy that will help get you hired. Hiring partners — G A has a global network of 10, 000+ hiring partners and a job board listing open roles for skilled developers. Accountability — One of the most important and overlooked things to consider is accountability. You will be motivated, encouraged and assisted to achieve your goals. Supportive Community — You study with like-minded students who have the same goals as you do. Join an exclusive Slack community of students to help you when you need some extra motivation. Experienced Instructors — The instructors and teaching assistants are highly qualified and experienced to help you understand the concepts and apply it in real-life projects. Advanced Curriculum — Their curriculum is created by a team of expert instructional designers that leverage the latest technological tools to ensure relevant, current coursework immediately applicable to the field. 99% Job Placement in 180 Days after starting a job search — This is quite impressive and speaks for itself. Get Qualified — Learn in-demand skills like Java Script, Git and Rails, as you build a portfolio of professional websites and data-driven apps. You also receive a certificate from a reputable source for coding education. Alumni — Connect with over 40, 000 full- and part-time alumni and pursue success with an exclusive group of professionals. We Work Membership — W D I R grads get three months of free We Membership from We Work which means you can connect with a global community of professionals and book workspace across 100+ locations worldwide. Location — Students are located in many different places, giving students an opportunity to connect with people beyond their local network. Live Communication (from the website) — Ask questions, get feedback, and interact with your classmates and T As — all in real-time. Engage in a variety of ways including live chat, voice, and video to work on comprehension, solutions and projects. Workplace Simulation (from the website) — At your dedicated workspace, you’ll experience what it’s like to work and collaborate as a developer in an interactive, real-world coding environment. Student Testimonials I felt satisfied every day with the amount of knowledge given to me. This course is excellent for newcomers in Web Dev as well as people with more experience. If you feel like you are drowning in work just keep pushing through and you will succeed, they really do give you everything you need to succeed. - Brandon, New York City Great course! Got a job right after!”- Spencer Stone, Boston6 weeks after completing the course I accept a Software Engineer position. Yes, a real salaried with full benefits. ( And the pay is above the median salary for my city). - Ben, Atlanta After graduation and with the support of the team I was able to secure my dream job within six weeks. It felt like a big risk to leave a full-time role and take this on but I can say it was completely worth it!- Graduate at London Negatives: The Web Development Immersive and Web Development Immersive Remote programs require a full commitment. If you are working full time or you like to take things easy, it won’t be for you. The curriculum is “immersive” and requires discipline and effort to complete. The chances are that you will be working a few hours at night and on weekends to complete the homework assignments. One of the main negatives is the price as it’s considered to be a stumbling block for most prospective students. This needs to be viewed in context though. If you get hired in a full-time job, the chances are high that you will earn a pretty good salary which will increase as your skills and experience improve. Therefore, spending 2–3 months of your annual salary to potentially get placed into an awesome developer job that you love is completely worth it. With a 99% job rate placement after starting a job search, it’s promising as well. What’s the alternative? If you compare this route with a C S ( Computer Science) degree, you’ll soon find that it’s a complete bargain. G A has several financing options including payment plans and low-cost loans to assist with this obstacle at least. More About the G A Web Development Immersive and Immersive Remote Programs Overview: An interactive virtual classroom to help you develop the skills needed to become a full-stack web developer. Duration: 13-weeks, 10 a. m. — 6 p. m. E S T, five days a week, plus about 40 hours of pre-work. Objective: To make you a skilled full-stack developer. By the end of the course, you will be confident to: Write H T M L, C S S, and Java Script that displays as intended in modern browsers Develop a back-end web application and A P Is using a modern programming language and M V C web development framework, such as Rails Develop a dynamic front-end to your application using a modern framework used to create single-page apps, such as Angular or Backbone Consume web A P Is from third-party sites like Twitter or Yelp Write secure applications and deploy them to cloud services like Heroku Collaborate within a team using an agile development workflow and widely-accepted collaboration practices using Git Design and layout responsive web applications Build secure full-stack web applications according to common design patterns Use modern Java Script browser application frameworks Safely model and store data in S Q L and No S Q L databases Develop web applications using both Ruby and Java Script And more Here is a unit breakdown of the Web Development Immersive and Immersive Remote programs: U N I T 1: F R O N T- E N D D E V E L O P M E N T How the Internet Works Using the Terminal & Navigating the Filesystem H T M L5 Chrome Developer Tools Text Editors C S S Styling C S S Box Model & Positioning Web Typography Java Script Data Types, Objects, and Functions Java Script Control Flow Debugging Java Script Advanced Java Script O O P & Prototypal Inheritance D O M Manipulation & Events Git and Github Asynchronous Java Script Callbacksj Query Java Script Scope Responsive Web Design User Stories and Task Tracking U N I T 2: S E R V E R S I D E A P P L I C A T I O N S Introduction to Node. js R E S Tful Routing with Express. js M V C Design Patterns Debugging and Logging in Node No S Q L with Mongo D B and Mongoose Express Views and E J S Encrypted Passwords and Authentication Token-based Authentication Heroku Deployment U N I T 3: M E A N S T A C K/ A N G U L A R. J S Introduction to Angular. js Extending D O M Elements with Custom Behaviors Client-side Models and Data Binding Connecting and Syncing with a R E S T A P I Managing Authentication State Team Workflow using Git and Github Using A J A X to create Single Page Applications Nesting Scope Using Filters Using Services Writing Your Own Custom Directives Listening for and Triggering Events Setting Up Dependencies Routing in Single Page Applications U N I T 4: R U B Y O N R A I L S Ruby Data Types, Objects, and Methods Ruby Control Flow Ruby Collections Classes and Inheritance Introduction to S Q L Object- Relational Mapping in Active Record Building & Submitting Forms Controllers and Routes Layouts, Partials, & Views Encrypted Passwords and Authentication O P T I O N A L T O P I C S Computer Science Interview Fundamentals C S S Pre-processors Bootstrap O Auth and Third-party A P Is Social Network / Third-party Application Login Introduction to Testing with Mocha and Chai Introduction to Web Sockets P H P Wordpress Common F A Qs about the W D I and W D I R programs: What will the class experience be like? G A’s lessons are broken up into micro-lectures, which teach you content in short spurts so that you can immediately break out into groups and practice applying what you’ve learned. The course activities have been modeled so that you’ll be able to have constant conversations with your fellow classmates and instructors throughout the course. Lessons are created to make you think about concepts until you understand them. It forces you to apply what you think you’ve just understood by writing code after the theory. If you ever struggle with certain aspects, the instructors are always ready to offer guidance to help you grasp everything easier and quicker. How do I know if I am ready for this course? Although it is beneficial if you know how to code, it doesn’t matter whether you know the basics of web development or not. You are provided with approximately 40 hours of pre-work once you are admitted to help you prepare for the course as well. Students have been able to land jobs at these companies after their Web Development Immersive graduation: That’s it :) I hope you found the Web Development Immersive Remoteand Web Development Immersive review helpful and understandable and you are able to make a decision from here. Click here to read more about the G A Web Development Immersive Remote (online) program. Click here to read more about the G A Web Development Immersive (on-campus) program. If you would prefer part-time instructor-led courses that are cheaper and less time-consuming compared with the Web Development Immersive or Web Development Immersive Remote, take a look at these: User Experience Design Data Science Visual Design Front- End Web Development Java Script Development Until next time :) Kyle Prinsloo—https://twitter. com/study_web_dev( Article from: https://studywebdevelopment. com/web-development-immersive-review. html) Freelancing: https://studywebdevelopment. com/freelancing. html Web Design Guide: https://studywebdevelopment. com/web-design. html","['Web Development', 'General Assembly', 'Codingbootcamp', 'Web Developer']",https://medium.com/@StudyWebDevelopment/general-assembly-web-development-immersive-review-dc33c938616,3,['General Assembly'],1,0,kyle,M,0.017754788200754927,0.9822452117992451
Dionisio Ciccarese,"Italian student of electronics engineering. DIY, coding and science lover. Writer for www.chimerarevo.com.",Floating action button in 5 mins – Dionisio Ciccarese – Medium,2018-08-20 07:44:58,medium,"Floating action button in 5 mins How to create a F A B for your website using H T M L, C S S and Javascript Implementing a floating action button in a website could be very useful. For instance, in an article with long content, it’s good to provide info, to connect with social networks or to scroll top easily. In this article, we will learn how to make a F A B using H T M L, C S S and Javascript. Usually, it can be seen in Android application but let’s think for a while about a responsive website. It will seem exactly like an app but in your smartphone browser! So, don’t waste time and let’s do it. Anatomy of a F A B F A B’s anatomy is quite simple. You only need to know that there are the icon container, the icon and an optional shadow. Let’s code a bit Now it’s time to create the structure of the F A B with some simple H T M L and C S S code. H T M L:<body><!-- Put here your content--><div class = ""fab"" >  <img class = ""fab_icon"" src = ""youricon. png""/></div></body> If you need icons, I reccomend Flat Icon or Material. io . Remember: F A B can’t be nested! C S S:. fab{  position: fixed;  width: 60px;    /* This are good size for me*/  height: 60px;  background-color: orangered;  border-radius: 50%;  /* To make the div a circle*/  left: 100%;   top: 100%;  transform: translate(-100%, -100%);  margin-left: -40px;   margin-top: -40px;  box-shadow: 0px 2px 5px rgba(0, 0, 0, . 5); /* Optional shadow*/  opacity:0; /* only if you want the animation */}. fab_icon{  padding: 5px;  width: 50px;  height: 50px;} First of all, the position must be set fixed so it won’t be affected by scroll. Then, it is necessary to move it 100% far from the top and the bottom and to perform a translation. Finally, distance from the right and the bottom is provided using a negative value of margin-left and margin-top. I’m setting the icon smaller, but padding helps to fit it perfectly. Padding formula is easy: (fab_width — icon_width) /2 Remember: using percentage value in “translation” refers to fab’s size, but with “top” and “left” refers to the window size. At this point, F A B is always visible as in Android applications. To make it alive you need to implement a few lines of Javascript. Making F A B alive First, create a separated “script. js” file and connect it with the H T M L file before closing the “body” tag. Remember to import also jquery as shown below. <script src=""https://ajax. googleapis. com/ajax/libs/jquery/3. 1. 0/jquery. min. js""></script><script src=""script. js""></script> Before writing javascript just add a few lines of C S S:. fab_visible{  animation: max_opacity 0. 25s ease-in-out 1;  opacity: 1;}. fab_hidden{  animation: min_opacity 0. 25s ease-in-out 1;  opacity: 0;}@keyframes max_opacity{  0%{   opacity: 0;  }    100%{    opacity: 1;  }}@keyframes min_opacity{  0%{    opacity: 1;  }    100%{    opacity: 0;  }} With this, we have created the animation, to perform a smoother effect, and classes to add or remove the animation when it’s required Now add this simple script:var fab = $('. fab');$(document). ready(function() {    window. onscroll = function(){          scrolls();          }});function scrolls(){    if($(window). scroll Top() > window. inner Height/2){        fab. add Class('fab_visible');    fab. remove Class('fab_hidden');      } else{    fab. has Class('fab_visible'){      fab. add Class('fab_hidden');      fab. remove Class('fab_visible');    }      }} This will be the result: D O N E I’m trying to improve my English. If you have some questions or want to give me some hint, please contact me.","['Web Development', 'Css Animation', 'Javascript Tips', 'Floating Action Button', 'Codingbootcamp']",https://medium.com/@dionisiociccarese/floating-action-button-in-5-mins-be932e92d191,1,[],0,16,dionisio,M,0.0,1.0
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Never stop building: developers learning how to work in a team,2018-08-21 16:42:35,medium,"Never stop building: developers learning how to work in a team Dive in and enjoy these 70+ remote projects with your coffee ☕️, tea 🍵, wine 🍷 or other such tasty beverage. What is Chingu? Chingu is a global collaboration platform and coding-cohort generator. We connect motivated learners with shared goals to learn, help and build together. We help self-directed learners connect and build real projects in teams so they can level-up, meet new coder friends and gain work experience. Global collaboration unleashed People from 77 countries participated in Chingu’s summer session! 🌎🇩🇿 🇦🇷 🇦🇺 🇦🇹 🇧🇾 🇧🇷 🇧🇬 🇨🇲 🇨🇦 🇨🇴 🇨🇮 🇭🇷 🇨🇿 🇩🇰 🇩🇴 🇪🇬🇪🇹 🇬🇭 🇬🇹 🇮🇳 🇮🇷 🇮🇱 🇯🇲 🇰🇪 🇮🇹 🇮🇪 🇭🇺 🇬🇷 🇩🇪 🇱🇻 🇱🇷 🇱🇮 🇱🇹 🇱🇺🇲🇰 🇲🇾 🇲🇹 🇲🇽🇲🇦 🇳🇱 🇳🇿 🇳🇬 🇳🇴🇵🇰 🇵🇪 🇵🇭 🇵🇱 🇵🇹 🇷🇴 🇸🇦 🇷🇸🇸🇬 🇸🇰 🇿🇦 🇱🇰 🇸🇩 🇹🇼 🇹🇿 🇹🇭 🇹🇨 🇺🇬 🇺🇦 🇦🇪🇺🇸 🇺🇿 🇻🇪 🇻🇳 🇪🇺 🇫🇷 🇨🇳 🇷🇺 🇯🇵 🇸🇻 🇰🇷 🇬🇧 🇪🇸 For comparison: the 2018 Olympics had people from 92 countries. Summer session stats🙊233, 000–270, 000 collaboration-related messages sent🖥 70+ M V Ps/adventures📟500, 000+ lines of code (that’s with the dependencies taken out). 🙌 500+ coders from 77 countries came together to build 💯 Chingu’s new Moonshot 🚀:2020 finished team projects 💃 by the 2020 Olympics in Tokyo. 🏯 Note: we’ll have more info on this Moonshot in an article published soon The new Chingu platform will be here in the next month, and why not add a crazy goal to go with the launch?! We’re going to have to bring thousands of people who are hungry to learn, help and build together to reach this goal. We’re also going to need to continue to rapidly improve our tools and system to make it feasible. Is it possible? Well, for anyone who has experienced the enormous adventure (and hardships) that can come with building as a team, the idea of facilitating 2020 of such adventures to completion will sound down-right rambunctious. It’ll probably be like climbing Mount Everest with a rather boisterous grizzly bear on our back, which is to say it shall not be easy. But alas, where is the growth in easy? 😉 I always did something I was a little not ready to do. I think that’s how you grow. When there’s that moment of, ‘ Wow, I’m not really sure we can do this, ’ and you push through those moments, that’s when you have a breakthrough. ”— Marissa Mayer, early Googler and former Yahoo C E O Thanks to everyone who made this possible I want to give a big shout-out to every wonderful soul who contributed to the Chingu project over the summer — from Cohort- Facilitators to Project Managers to writers to everyone courageous enough to step out of their comfort zone and level-up with others! Learners from around 70% of the world’s countries have collaborated in a Chingu cohort so far and we’ve collectively built 400+ projects together. This is no small feat. I’m still blown away daily by the collective friendliness, collaborative attitude and straight up H U N G E R T O L E A R N & B U I L D of the people around here! It’s people like you that make this possible. Now let’s dive into some global projects, shall we?! Note: I apologize in advance as I have inevitably made mistakes with links, missing projects , names etc. Consider this article a work-in-progress as I’ll continue to edit and fix mistakes (please D M me if you have found any mistakes or missing pieces). Chingu Warrior A game built from the ground up using the brand-spanking new Phaser 3 framework. The game is an arcade-style game where the player plays for high-score. Stack: Webpack, E S6, Phaser 3 Chingu project type: 🐻 Team: fancyaction, Bigghead, Alexever17, Jethro F22 Github repo Mobile food app for nonprofit in Europe Mobile app for a Scouts-like organization in Europe. Still in-development. Stack: React- Native, React, React-native-router-flux, Redux, Node, Express, Postgre S Q L, Sequelize and Gulp Chingu project type: 🐻 Team: @ Odelavia @ Lucas Taboada @ Jason Kim and @ Karthic Github repo Chingu client — Update: this achieved 3rd place ( North America) in Facebook’s Community Circles competition and is currently in the running for the global prize! 💃 A new platform for the future of Chingu. Stack: React and Apollo Chingu project type: Chingu- X 🚀 Team: Francesca, @sloangalloway, Vampiire, @luoto, @thinktwice, @trion, @chance, Musaab Bakheit Chingu Admin panel Admin panel to run the Chingu adventures! Stack: posgtres, Redis, Mongo and Graph Q L A P I built on node Chingu project type: Chingu- X 🚀 Team: Francesca, @thesabby, @sloan galloway, Vampiire, @luoto, @thinktwice, @trion, @chance Code Founders We build your product. You build your business. We turn your idea into an Minimum Viable Product ( M V P), with enough features to satisfy early customers and gather feedback for future development. Team: @louis, @rinat, @nicolas, @theo, @faahim Legends. Convoy of hope nonprofit Clone of the “ Convoy of hope” website front page. Stack: Bootstrap, j Query Chingu project type: 🐦 Team: mcwachira, Blu Haz, firuz Github repo Tech- Shots Tech Shots is a project that gets tech news from different sources and puts them in one place. Stack: Node J S, Express, Mongo D B( Mongoose O R M), E J S, J W T, Vanilla J S, H T M L5, C S S3 Chingu project type: 🐻 Team: @ A K @ Chetan Yadav @ Deyl Raytop Github repo Spotify Clone Spotify is a digital music service that gives you access to millions of songs. Stack: React Chingu project type: 🐻 Team: jffy, Fabien, Liviu Github repo Chingu’s nonprofit work at a school in rural India One of our members runs a school in rural India and we’ve got plans to leverage the Chingu platform to help out! We’re starting with E S L, and aim to utilize Arduino collaboration in the future. Meeting the students! Chingu project type: Chingu- X 🚀 Team: @ram, @chance M E R N Quickstart Guide So… Eddy published a M E R N book. 🔥 Writer: Eddy Willson (@eddyw ), Helped with editing: @jarrku, @ziggysauce, moi Leetup Leetup is a meetup clone. Stack: M E R N Chingu project type: 🐻 Team: ivan, sosodope, lepancake Github repo Dear Diiary Dear Diiary is a personal diary app that helps us visualize our life’s events and milestones happening as part of our daily life. It lets us picturize who we were and who we are, by collecting and cherishing personal & private moments, in the form of a timeline. Stack: M E V N stack ( Mongo D B, Express, Vue. js, Node. js), Bootstrap4, webpack Chingu project type: 🐻 Team: @ Chandana, @nandub, @ Samuel Urias, @ Ben Crane (participated for the first two weeks of the voyage as a tester) Github repo Link In In the hypothetical future where space travel is readily available, Space Link provides a valuable tourism service for travel within our local solar system. - Landing page- Shopping cart (local storage) Stack: H T M L, C S S, Vanilla J S Chingu project type: 🐦 Team: @ Jam @kaouter @dozie Space Github repo Founder- Connect A networking platform to help connect technical and non-technical founders. Stack: M E R N Stack — with Redux, React- Router, Create React App, Bulma Chingu project type: 🐻 Team: x Christian Zx, Adam Sackfield Github repo P E C S App A communications aid based on the P E C S (picture exchange communication symbols) for people with impaired verbal communication, more specifically autism. Stack: React, node, express, mongo Chingu project type: 🐦 Team: James Vitaly Github repo Chirpper (twitter clone) Our project objective was to clone the primary functions of Twitter. User are able to create an account post, like and delete a “ Chirp”. The ability to view other user’s timeline was also coded on backend. Stack: Java Script, Node, Express, Mongo Chingu project type: 🦎 Team: Jared Schiller, Tiffany Lam, Simon Xiong Github repo Overheard in Chingu Interlude #1 Francesco Agnoletto was kind enough to do a talk on Git/ Github during the summer session! 🔥 Made my first pull request I have been invited to give a talk on open source at a community event. I’ve learned more in the last two months than I have in the past year. I don’t think this will be my last Chingu Voyagecompleted our sprint! + our team lead taught me abit about Graph Q L I’m learning React Worked through the pain of dealing with Phaser lol Progressing well ahead of schedule, page is coming along nicely and we are making plans for what to do after we hit our M V Pskyped with my teammate and had great connections, pinpointed what we might get stuck with early on and will work to overcome those hurdles as early as possible in the voyage I got to deploy a project to production! I’m especially proud of this because I got to do everything, from the design, to the implementation, building a test suite, setting up a C I/ C D tool with test, staging and production branches and automated deployment, to deployment etc… It’s been a thrilling ride! Someone from our team got a developer job We had our first pair programming session! Both my team mates have been working actively to get our project completed One of our member made a pollution bot. Most of the work on the back end is complete and we are making progress with the front end and connecting the two. Made my first merge to master and it worked! 😁 Feeling more and more comfortable with Git Hub and the team process I finished a tough algorithm challenge We have a good landing page using Vue Js. First pair programming session with Alan Radhika- Got a job! Started my first internship! Wohoo! Well, went for an interview and im being called in this week to discuss renumeration Team member finished and important piece of the user interface. Lively Lively Lively Lively is a website that allows you to search for local and global events Stack: Mostly html css and javascript with a small amount of bootstrap Chingu project type: 🦎 Team: Brandonvernon andrewriveraj and javilag Github repo Giveawaya-app It is app where people can giveaway things which they don’t use anymore in a more sustainable way. Stack: React. js , Redux , Express, Node. js, S Q L Chingu project type: 🦎 Team: @zoey, @ S J23y, @ M Old Github repo One Stop Meal This web-app collects menus from various restaurants and offers customers an opportunity to order meals from any menu. Orders are then delivered to a customer. User can choose any dish on any menu and combine them as he wants. Editors weekly pick a range of selected dishes and present them to users (plus subscription option). Stack: H T M L, C S S, J S Chingu project type: 🐦 Team: Anya B, Coral Chen, Myat Phyo Github repo Tetris Tetris Tetris game clone. Stack: Javascript, C S S, Mongo D B Chingu project type: 🐻 Team: @belcurv, @dereje, terrancexin Github repo Chez Gourmet Chez Gourmet is an online web app built with Vue. js that provides useful information about different food recipes. Users can add recipes and data is stored in Firebase database. Users can also search for stored recipes which are displayed on the product homepage. Stack: Vue. js, Google Firestore Chingu project type: 🦎 Team: Pieffelleo, Oleg, Sylvia, Danil Github repo Lucid Lucid is a productivity app in which users can track their tasks and add useful tools to them. Stack: React Chingu project type: 🦎 Team: arielbk, Nana Kay, Daniel Quote Mind Look whatever phrases or quotes just typing a word and share with your friends! Stack: React Js Chingu project type: 🦎 Team: @ Rodielmj, @ Alex Nielsen, @steve, @ Viktorija G. Github repo Morning Routine App Plan your morning habits so that you can start the day in the best way possible. Stack: Node, Express, React, Mongo D B, Redux, Sass Chingu project type: 🦎 Team: Puritanic, Lubo, Fouad Github repo Auto- Applet Platform that helps you do more with all your apps, meaning you can connect to a huge variety of services, and then, based on “triggers” from one connected service, you can drive something to happen elsewhere. Stack: React, Redux, Express, Node, Mongodb Chingu project type: 🐻 Team: Anshul, Ruslan Github repo Baked Games! This site hosts three hand-built, Java Script powered games that are simple to play, but offer a nice little break in the average, hum-drum day! Stack: H T M L, C S S, Java Script Chingu project type: 🐦 Team: Z Fresh Github repo Paste It ( Trello clone) This is a simple Trello clone with the main functionality of Trello. Users can create or delete new lists and cards. They can also drag and drop cards and lists to reorder them. Stack: H T M L, C S S, Javascript, Jquery, Bootstrap4 Chingu project type: 🦎 Team: mgrienauer, Alex P R Github repo Ticky Bot- Clone This was a clone of a Chingu Bears 19, Ticky Bot, project using html, css, and aos Stack: Chingu project type: 🐦 Team: mbrandon32, The Sharp Report Github repo Personal Dashboard App We created a personal dashboard app with weather, music, task list, and news features. Stack: H T M L, C S S, Java Script Chingu project type: 🦎 Team: natalie R, Tyre Github repo Momentum Clone Momentum clone with a bit of our own flavor :) Stack: webpack, es 6 Chingu project type: 🦎 Team: josh yap, sara, dan Raftaar Github repo Thumbtack clone Functinality of thumbtack. com website which allows users to search for local professionals. Stack: Mongo, Express, React, Node J S Chingu project type: 🦎 Team: Martin Kovac, Vlad, Remy W, Adroit Code Github repo Crypto Mars Own a piece of Mars on the blockchain. The site is currently down, but luckily I captured a screenshot of it before. Team: @ram Voog Clone This project is a clone of an I T website. Stack: H T M L, C S S, Bootstrap 4, Javascript, J Query Chingu project type: 🐦 Team: Aman Github repo Positivo Be grateful daily. Tell us what made you happy today! Stack: React, Firebase Chingu project type: 🦎 Team: Harshil, Shovanpositivo Github repo Work/ Play Pomodoro A chrome extension which helps users balance their work and play activities by creating daily tasks and using pomodoro techniques to manage time better. Stack: H T M L, C S S ( Grid), vanilla Java Script and j Query, Jasmine Chingu project type: 🦎 Team: xstrengthofonex, beboptank, Hash004 Github repo React A P I app Our project shows content from 4 different A P Is and the purpose is React practicing Stack: React Chingu project type: 🦎 Team: Miloš, ergofox, todorare Github repo New Tab Image This is a Chrome extension that displays a pretty picture when a new tab is opened. Stack: html, csssee github Chingu project type: 🦎 Team: megclaypool, Katiejyoung3, Waswa Github repo Book Finder A Vue. js App that helps you find books, retrieve book’s ratings, author and similar books . . It fetches search results from Goodreads and Google books and searches for book recommendation in tastedive. Stack: Vuejs, vuetify, Google-goodreads A P Is , firebase Chingu project type: 🦎 Team: A H M A D / adden-s / Dani Vijay / Shivam Chawla Github repo Expense Tracker An application to track your daily, weekly or monthly expenses. Stack: React, Redux, Node, Mongodb, U I- Framework(antd) Chingu project type: 🐻 Team: muthu , jidemobell , Adam (prev. P M) Github repo Gym Management App Gym Management application and fitness follow up system Stack: Laravel, php Chingu project type: 🐻 Team: Taghreedaa , boskos, Hamed Shahien, Godslove Github repo Chingu C M S A C M S to replace the chingu github wiki’s. Stack: M E R N Chingu project type: 🐻 Team: nikrb jenovs keith1111 Github repo Chingu Standups iteration I produced a wizard integrated in chingu. io frontend with graphql backend” Stack: React, graph Q L Chingu project type: 🐻 Team: @nikr Trello Clone A knockoff of the popular project management app Trello Stack: React, Apollo Client, Graph Q L + Graphcool Chingu project type: 🦎 Team: @ Alberto, $nickey_vee Github repo The New News The New News displays the latest top headlines from over 30, 000 news sources and blogs. You can also see top stories by genre, or search for a specific topic. News stories are sourced from The News A P I. Stack: React, Node/ Express, Mongo D B, webpack. Chingu project type: 🦎 Team: @nia, @huongg, @malesa Github repo Type web-app A Web App that test typing speed and accuracy. Stack: Reactjs, Nodejs, Expressjs, Mongodb, Passport’s. Chingu project type: 🦎 Team: Denis Rawls, Ronique Ricketts Github repo Momentum Clone Our project is a clone of the Chrome Extension Momentum. It’s an all in one app where you can add favorite links, a focus item, todos, check the weather, check the time, and more. Chingu project type: 🦎 Team: @jon-maldia @kiran S @ Nari Roh Github repo Chingu Front- End redesign Refreshing the Chingu front-end ( Note: the chingu site has changed since this iteration) Stack: React, Apollo, Javascript Chingu project type: 🐻 Team: freddydumont, World Of Code22, michaelgee22 Github repo Recreate the Ticky Bot Landing Page Ticky Bot’s landing page recreated with animations and transitions Stack: H T M L, C S S, j Query Chingu project type: 🐦 Team: Ania, Elle Github repo Youtube Clone Youtube Clone uses Youtube’s A P I to search for and watch Youtube videos Stack: React, Material- U I Chingu project type: 🦎 Team: Denis, kuromoka, Winn Github repo Inertia It Inertia It is a browser based task manager. Stack: Java Script, Bootstrap Chingu project type: 🦎 Team: Dez, Mwasabi, Leost, Cynthia Github repo Chrome Extension Chrome extension that opens new tab with Google search, Clock, Unsplash photo background, Favorite links, Notes and Translation tool Stack: React Chingu project type: 🦎 Team: Bogori, Len Pel, natalienb Github repo Cake4 Kids Revamp A redesign of the non-profit, cake4 Kids. Stack: html/css Chingu project type: 🐦 Team: Tatyanna, Github repo Breezy Cards (in-development)helps people to learn new things and create new worlds of knowledge… easy breezy. Stack: Chingu project type: 🐦 Team: Github repograd. then( ) [ U P D A T E D U X] A web guide for fresh graduates in web development and programming , which explores their next steps and possibilities. Stack: React, Gatsby, styled-components, Contentful Chingu project type: 🐻 Team: mar-bi, miljan-fcd Github repo Momentum Clone Our project was a basic, front-end clone of the Momentum app. Stack: Basic H T M L, C S S and J S Chingu project type: 🐦 Team: cvonwilczur, karina, Emilio Github repo Pomodoro Webapp A simple pomodoro timer webapp Stack: html, css, javascript Chingu project type: 🐦 Team: xakeom, Vtt01uk, Poh Yi Github repo Quora-clone Quora-clone is a place to share knowledge and better understand the world Stack: React, Redux, Node. js, Express, Mongo D B Chingu project type: 🦎 Team: blarz Hernandez, snyderc, sawphaung Github repo Chingu Reputation feature logic prototype New feature coming to Chingu soon! Stack: Javascript Chingu project type: Chingu- X 🚀 Team: @trion, @chance Chingu A P I Stack: Graph Q L Chingu project type: Chingu-x 🚀 Team: @thesabby, Vampiire Shout-out to the Geckos team from Voyage-3 who made this Chrome Extension that now has 600+ users! Clipboard Project management app Stack: Vue, Firebase (firestore and auth) Chingu project type: 🦎 Team: diogommr, Jamie Bullock, Nills, Corné Github repo Overheard in Chingu Interlude #2ziggysauce & Oliver De La Via graciously did a live talk during this session on Pair- Programming! Started the 3rd week of my new web developer job. We have a concept! I got my first remote internship offer as an Intern Full- Stack Developer at S E J A A L Inc. I’m very excited for this opportunity!! I was able to use Atom with teletype and the whole team was able to see all the changes I was making to the R E A D M E. They even were able to add and modify the R E A D M E at the same time. I have built a functional backend and front end. User sign up and authentication. Team nearly finished Act 1, and I am learning circuitry and neural networks. amazing team, I really like that everyone get the things seriously! We have talked a lot and the benefits of that commutation are coming through. I created two React apps for the first time We have our first kind of pair programming with all the teamates. We collaborate to write the final version of the R E A D M E. md for the project repo. We settled on a project and started brainstorming the design We made first commits to our repo We completed our team charter Finally nailed down the idea. Moving to the research so we can get the first sprint started wednesday A member of our team had an interview for a job on Saturday, I hope she got the job. Set up webpack and mongo D B models Had first Skype Interview and about to attend my second face to face! Have been metting a lot and our times usually match up so we can meet. Everyone had a first commit Made Team charter for the first timewe had our first hangouts meeting Brainstormed feature for our project. Chose the stack to use for our project. Nari has been a rockstar. She helped me use a React Modal component and taught me how to work with the files within React. She has also been a commit monster. I’ve gotten really good at React Native. Finished my sprint tasks. Figure out how to process data on the backend Learned Phaser object collision logic by reviewing my team members’ codes We connected the front and backend of our app successfully Linked front end to back end, went over the code together and had fun in our video chat :) The frontend team was able to post/get data from the backend and use it on the front! I have a pair-programming session tomorrow Last Friday I had an amazing pair programming session with @ Ivan I development my first mobile app This week I am working on hackerrank contest! She has been working hard on learning React. Made my first Hello A- Frame web app! Spreddit — Reverse Engineering Reddit Reverse engineering/cloning the front page of reddit. Stack: H T M L, C S S, J Query Chingu project type: 🐦 Team: Yoda- Meister Mufasa On Acid The Sabby Github repo Portfolio tool This is a portfolio which can be used for company as well as individual. Stack: H T M L, C S S, Bootstrap, particles. js Chingu project type: 🦎 Team: Jonty Sachdeva Github repo Learn Something A Chrome newtab extension that brings together the Bad Astronomy R S S feed with the P B S Space Time youtube channel. The background can be changed between a default image to the Astronomy Picture of the Day. Stack: H T M L/ C S S/ J S, Bootstrap4, j Query Chingu project type: 🦎 Team: h Colleen 💪 Github repo Bit Helper ( Continued development) Ever had a killer idea for an app, but never got to finish it? Bit Helper is here to help you find new team mates to finish your apps or join exciting new projects to develop together! Stack: React, Redux, Express, Mongo Db Chingu project type: 🐻 Team: Gherds, shibatas, sylvia Github repo Budget app App where you can add your expenses and income. Stack: React Chingu project type: 🦎 Team: axon7, Dovahkiin1991 Github repo Yelp Graph Q L Api App where you can add your expenses and income. Stack: Graph Q L Chingu project type: 🐻 Team: @julis Github repo Project Match (in-development) Project Match is a web app created with the M E R N stack with typescript integration. It’s primary function is to help programmers and designers match with projects they would be interested in. Project Match will then provide team collaboration tools to support new teams with features such as a dedicated platform for mockup reviews/redlines and group chat. Stack: Mongodb, Express, React, Node J S, Typescript, Mongoose Chingu project type: 🐻 Tier-3, Team: lilgangwolf, luoto Github repo Lazy Recipe Finder The Lazy Recipe Finder returns only 12 results so that you don’t get lost in a sea of choices. Search by exact ingredients that you want your recipe to have, easily viewing the number of ingredients that your fridge is missing. Stack: React Chingu project type: 🦎 Team: Ansaar Younis, Sean Doherty Github repo To-do app Add tasks functionality Stack: H T M L, C S S, Javascript Chingu project type: 🐦 Team: Jaffacake85, Poly- G, lfosgett Github repo A B C Occasional Care Occasional care parents booking page. Stack: Vanilla Java script Chingu project type: 🐦 Team: vanathi, Sanjana Github repo A Tribute page to the creator of Java Script It is a simple web-page containing the short bio, career path of Brendan Eich Stack: H T M L, C S S Chingu project type: 🐦 Team: tasesmuemils, A D Github repo Chuck Norris Random Quote Generator Occasional care parents booking page. Stack: J S Chingu project type: Pair-programming session Team: Nerajno johnson & Lennyroy Robles And we’re out!","['Chingu', 'Freecodecamp', 'Codingbootcamp', 'React Native', 'Showcase']",https://medium.com/chingu/never-stop-building-developers-learning-how-to-work-in-a-team-7580f7dd9cf2,2,['Momentum'],1,467,chance,M,0.024461428631419813,0.9755385713685801
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 17 — Find A Way – conshus – Medium,2017-04-04 10:53:40,medium,"Day 17 — Find A Wayliner notes:- Whew… yesterday was wow! Got it done though. Which brings me to… R I P Phife Dawg!6:31am Regardless of how hard things get, (which turns out to happen in week 4! haha) if you really want it, you’ve got to find a way through it. That may include catching an even earlier train so that you can get the blog post done earlier so you can get more programming and reading in. Just a random thought, plus I love this Tribe and Dilla track. Keeping this short to maximize the extra time I have. peace piece Dwane / conshushttp:// H I P H O Pand C O D E. com","['Music', 'Coding', 'Coding Bootcamps', 'Hiphop']",https://medium.com/@conshus/day-17-find-a-way-30387cb49cc4,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Mary Sedarous,Marketing and PR at Code Chrysalis. Undergrad at UW-Madison and Master’s from University of Tokyo. I tweet about spies @MarySedJP on Twitter :),Code Chrysalis Cohort 3: Student Interviews – Code Chrysalis – Medium,2018-03-23 06:21:07,medium,"Code Chrysalis Cohort 3: Student Interviews As the third cohort of Code Chrysalis enters the final two weeks of the course, we sat down with the students, both to look back on what they’ve learned and also to see what insight they have to offer future classmates. Why did you choose Code Chrysalis and, if you are coming from abroad, what are you looking for in Japan? Yi- Tze: “ I wanted to get up to speed in terms of programming, particularly Javascript. I did a search of which languages are popular at the moment, and Javascript came up mostly as the top one. I didn’t want to go learn for 1 year or 2 years, so I was also looking for a short program. In that regard, a bootcamp was the best option for me. ” Shingo: “ I want to become a full-stack engineer and work abroad in North America — Canada or the United States. So I wanted something to prepare me beforehand. ” Masataka: “ I was an engineer and in my project I was mostly a project leader for engineers and a consultant for customers… I didn’t have the opportunity to code by myself, so I couldn’t code well. So I want to become able to make applications by myself, so I joined this program. ” Elia: “ The first reason is that I’ve always loved Japan, and before this I’ve lived in various countries. The second is that, where I’m at in my career right now, I want to pivot from project management to software development. ” What strategies did you come up with to manage stress and the program’s considerable workload? In response to this question, the students unanimously impressed upon the need for sleep, proper time management, and the importance of asking questions when you’re stuck. Other recommendations include: Elia: “ Exercise is something I really recommend. Walking, even if it isn’t rigorous, helps clear my head. Whenever there are issues, assessing why there are issues. ” Masataka: “ Take it one week at a time. One by one. Communicating with staff and classmates… Being able to communicate with staff and classmates is a lot of fun, especially during lunch!” Yi- Tze: “ Remember this is a marathon, not a sprint. ” Did you learn anything unexpected? If so, what? One of the things that surprised students was the depth of the course’s focus on developing communication and interpersonal skills. A repeated sentiment was that, more so than just hard coding skills, students also learned how to communicate effectively in a variety of circumstances and across cultures. Ryuta: “ Building confidence… I supposed I would only get technical skills, but here we have a lot of challenges in terms of project or team management — having to work with people — and also a lot of public speaking. So there are a lot of things to overcome. These small steps make me really confident. And also, the staff here encourages me a lot and that makes more more confident. ” Shingo: “ This course has American standards, so I had to open my mind. For me, my goal is to find a job and work in North America, so it was really good for me to learn this kind of behavior or thinking. ” What are you most proud of accomplishing during the past 12 weeks? Students were proud not just of their projects, but also in the personal growth they experienced throughout their time in the program. Across the board, each student indicated pride not just in what they have already accomplished, but in what they intend to do from now on. Christian: “ I’m proud, of course, that I finished the course. I had to deal with a lot of stress related to learning both programming and a new language…” Yi- Tze: “ I’m not there yet. I finished the program, but I regard it as more of a stepping stone for what I want… I have to carry on. If I can make the transition between finance and I T, then maybe I’ll feel a bit [proud]. ” What, if anything, did you discover about yourself through this course? Whereas students answered the previous questions in often similar ways, this question received by far the most diverse set of answers. Each individual learned something unique to themselves, which is the most an educational program could hope for. Masataka: “ I was a project leader in my company, so I thought I was already good at team-building. But during this program I would have trouble communicating with members because of conflicting opinions or other reasons, and through that I learned that I am good at managing conflict. I learned that I can communicate in English by actively practicing that communication. ” Elia: “ I’m an impatient person, so Code Chrysalis has taught me how to take things slower so I can understand them better. ” Ryuta: “ I discovered that I can change my soft skills. Before Code Chrysalis I was not very active and was very introverted. ” Do you have any advice for incoming students? This is probably the most interesting section for some of our incoming students. Our current cohort advises that prospective students prepare before classes begin so that the first few weeks will be less stressful. Additionally, they repeated the need for flexibility and having an open mind. And if you’re stuck on a problem? — Ask the instructors for help. Yi- Tze: “ You should prepare well and review the fundamentals… Once you’re in, the first 6 weeks can be really tough, and if you have to catch up you will spend more and more time on the course. ” Christian: “ Relearn and prepare before you come. If you are new to coding, try to learn a bit beforehand so it will be less stressful. Don’t forget to have fun!” Shingo: “ First and foremost, the bootcamp is really tough. You have to sacrifice a lot of things and focus on this course… Flexibility is important. And ask for help!” Ryuta: “ Don’t stress yourself out, the program is stressful enough… Take difficulties as challenges, and even the small successes are nice. Welcome everything. ” Elia: “ Be okay with uncertainty. ” Masataka: “ Communicate with classmates…making connections is very helpful. Being open-minded is important for learning new things, and if you have a closed mind it is so difficult to absorb new things. Try to learn new things, even if you feel it is not relevant to you. ” We hope you enjoyed this glimpse into our program. If you’re interested in Code Chrysalis, please feel free to check out our website! Code Chrysalis is a 12-week advanced software engineering bootcamp in Tokyo for entrepreneurs, advanced beginners, current developers, and dreamers. Interested in joining? Apply here.","['Programming', 'Coding Bootcamp', 'JavaScript', 'Tokyo', 'Software Development']",https://medium.com/code-chrysalis/code-chrysalis-cohort-3-student-interviews-be2525b8cfc5,1,[],0,3,mary,F,0.9963367130940759,0.0036632869059240857
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 47 — First Things First – conshus – Medium,2017-05-16 11:14:48,medium,"Day 47 — First Things Firstliner notes: I figured out why I wasn’t able to get the Materialize C S S components that need j Query to work when using React Router. The problem is that Materialize C S S doesn’t initialize when React transitions from one route to the next. To fix this, I had to install Materialize C S S through npm which installs j Query. Then using component Did Mount I initialized the Materialize C S S element that I am using. Seems to work so far. Actually got more accomplished yesterday than I had planned. Got the authentication system set up and working for Google, Twitter, Facebook and Git Hub login. Also, got the project linked to the Firebase database. One of the biggest problems I’m having is deciding what to do first because some functions and features lead into others, but then those don’t happen until these other things happen. A lot of it is really in the planning stages and mapping out the flow the best you can beforehand. The Re-up Today, I’d like to get pulling and displaying data from Firebase accomplished and if I have time, get information saved back to the database. Also, I working on learning some new libraries for some side projects. Going well so far. I’ll post a link when it’s complete. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['JavaScript', 'Materialize', 'React', 'Hip Hop', 'Codingbootcamp']",https://medium.com/@conshus/day-47-first-things-first-23f3753374e7,0,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
Patrick Murphy,,DigitalCrafts — Post-Graduation – Patrick Murphy – Medium,2016-08-02 02:01:46,medium,"Digital Crafts — Post- Graduation Just started my new job today! Here’s a brief update on graduation and the post-grad job search… I felt as if I didn’t quite kick it into gear until well into my second month at Digital Crafts. And for that reason, I focused more on the course work up until graduation and less on the job search. There were one or two students more focused on gaining employment prior to graduation — neglecting to do good work on their final project — whose plan kind of back fired. So I can’t say my efforts were a mistake although I would encourage anyone in a coding bootcamp to start submitting apps 6–8 weeks before graduation. It simply takes a while for some of these companies to actually get around to looking through resumes. I’m starting my job 7 weeks post-graduation and feel really lucky. Upon graduation, I was happy to be graduating. The week after, I was happy to have graduated and be getting in touch with a couple companies. The following week I was starting to get pissed. I had a few leads but nothing definite. I was also rapidly becoming broke. My most promising lead was this apprenticeship in Atlanta. The company met with our school about 4 weeks before our graduation and I applied then. I was asked to read some readings and write my responses. Then asked to attend a meet-up. Then asked to write an algorithm. Then refactor and then refactor again. Then write another program and then refactor and refactor again. This went on for weeks and as I became skeptical if they would ever hire me, I began applying for other positions. Soon after, another opportunity present itself. It is interesting how it worked. I am from Knoxville and had really regretted coming to Atlanta instead of Nashville to learn to code (most of my friends are in Nashville). But I’m glad I did because I ended up driving by Chattanooga on my way down to Atlanta a couple times and eventually decided to check out the city. I was so impressed with what they had done with the city — the downtown revitalization, the use of space, the water-front development — that I decided to look into jobs there. I came across a recruiter on Indeed or Linked In and sent her my resume. She actually got back with me relatively quickly (something I wasn’t used to) and we spoke, I submitted my resume and completed a Java Script assessment for her. She contacted me with a job about two weeks later. A manufacturing company outside Chattanooga. She scheduled an in-person interview and I made the trip up. Quick side note: I almost cancelled last minute because I thought another opportunity was for sure going to work out but decided to go simply because I said I would. ( The other opportunity did N O T work out — so I think you get the moral of the story. ) The company was interviewing for a developer with Java Script, Angular, Node, Express, P H P, and S Q L skills ( A L L technologies we covered at Digital Crafts). But what helped me the most was that they needed a Mandarin speaker given they have operations in China and Southeast Asia. ( I speak Mandarin). I knew the Mandarin would help at some point in the future, probably A F T E R I got some more development experience, but I had no idea that I’d be able to find something using it right off the bat. This was huge for me. I came on in a contract-to-hire position which is super common in this industry. My hourly rate equates to what I expected annually and after three months we can renegotiate. U T- Chattanooga has a great Master’s in Computer Science program that the company may be willing to fund for me. We discussed it early on and they responded well to the idea, but it will not be set until I come on full-time in three months (assuming of course that I perform well and they want me). I had been wanting to go back to school part-time for a more formal computer science education so this could work out well. Right now the main task at work is to rebuild the website for the company’s dealers, sales reps, and customer service reps. My co-worker has already started building it, but I suggested we rebuild the entire front-end using Angular and numerous A J A X requests opposed to loading in a new P H P file on every click. This will speed it up quite a bit. If we move forward with the plan, I could be really contributing to the team from day two.","['Web Development', 'Coding', 'Coding Bootcamps']",https://medium.com/@pwmurphy89/digitalcrafts-post-graduation-b56a79af7c99,2,[],0,3,patrick,M,0.004189534604756137,0.9958104653952439
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Reiteration and Communication – Emily Deans – Medium,2017-08-04 01:15:13,medium,"Reiteration and Communication We spent much of today drilling down on concepts we’ve been covering since the start of back-end last week. It felt good to go through and reinforce some of the new material, and also kind of wild to emphasize how much ground we’ve covered in such a short period of time. Makes me feel like the brain overload I was experiencing earlier in the week wasn’t completely unwarranted! Our instructor, Michael, made the call to pull out of the text-editor/terminal world for a bit and instead focus on mocking up concepts and flow using our classroom whiteboard. Pulling the context out of a strict-coding approach for a bit and working instead to tackle subjects from a more fundamental, conceptual level was eye-opening and really helpful. I’ve noticed over the course of this program, that I often approach new concepts with an intense focus on the technical, nitty-gritty aspects of syntax/structure of the code — often at the expense of a deeper comprehension of the foundational logic associated with each example/code block. Pulling out the language functions and uses into a more intuitive pseudo-code without the stress of applying strict syntactical rules and structures created space for a different level of comprehension that felt really useful. During the afternoon session, we received instructions — for the first time since the class began — to tackle our daily project with a partner. As I’ve mentioned before, pair programming isn’t my most natural/comfortable way of working through a coding challenge. I like to take a bit of time to absorb a prompt and come up with a course of action that doesn’t entail quite the level of intellectual vulnerability inherent in the oft-sloppy first attempts at verbalizing these processes aloud. When presented with a challenge (in situations where such an approach is appropriate), I’m more comfortable with trying a bunch of different methods to see what works/doesn’t work, and why the outputs are what they are. In pair programming, this proves a bit trickier, as I’m not nearly as nimble and sometimes hesitate around taking my partner down the rabbit hole of an experimental train of thought. That being said, I must admit that I do find that — as uncomfortable as it can be — pair programming is actually a really helpful exercise in testing your comprehension of a subject. When your partner asks you to explain your approach, it really requires you to break down your thinking and move through the logic step-by-step so that y’all are on the same page. On more than one occasion, I’ve been questioned about an implementation of code I’ve suggested, and — even when it may work in the program — have found myself struggling to articulate the why/what/how of the code block, which exposes some holes in my understanding I previously hadn’t realized were there. Chances are, if you can’t effectively verbalize a complete step-by-step breakdown of your program, you probably have a bit of room for improvement. These experiences create space for honest self-reflection and allow you the opportunity to reach out for the help and information you need. It’s how we grow and improve, so I’m going to try to keep that in mind and continue stepping into discomfort — even when I’m exhausted and overwhelmed and doing so is not comfortable. I’m definitely looking forward to tomorrow’s open lab day and also tomorrow’s whole being a Friday-day. This has been another looooong and challenging week. I’m excited to have some time to catch up a bit on my sleep this weekend and work on my projects in my pjs (only kidding, I totally play it profesh on the weekends). Song of the Day: “ Julian” by Say Lou Lou","['Programming', 'Code Newbie', 'Learn To Code', 'Codingbootcamp', 'Women Who Code']",https://medium.com/@emilyldeans/reiteration-and-communication-9ff2998c75a,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Hack & Söhne,We are a German student run organization focussing on bringing the hacking and coding culture to people of all backgrounds.,A Workshop to Demistify the Hype of DL – Hack & Söhne – Medium,2018-05-23 07:01:00,medium,"A Workshop to Demistify the Hype of D L We invite fellow students and tech enthusiast to a hands-on Deep Learning workshop held at the F Z I House of Living Labs on June 2nd. Participation is free with registration here. Deep Learning is a topic that currently spreads through the media like a wildfire. Economists talk about the possibilities, Philosophers warn about the potential consequences and a myriad of tech companies has appeared around it. But what is the hype all about? What can Deep Learning really do? How intelligent can machines become and how is done in the first place? After receiving encouraging postive feedback on a similiar workshop we held at the tal K I T event on May 4th, we decided to relaunch the project as a Hack & Söhne Bootcamp, so that more people can join us and we can go into more detail. Anyone can get started with Deep Learning Here’s what we we’re going to do, roughly: Starting with a short introduction to Python syntax and numpy we want the participants to work collaboratively in Jupyter notebooks to put the knowledge in use right away. After all, we at Hack & Söhne are hackers by nature, and we care about actually doing stuff, not merely talking about it. Once the foundations are established, we dive into a first top-level use-case where we put together our own application of face recognition using existing frameworks and technologies. This will help us to grasp the possibilities and ease of use of existing technologies. Now that the interest is sparked, we approach the concepts of Deep Learning bottom up. We start from the mathematical foundations, but quickly move on to put them into real, working code. We cover the core concepts of neurons, forward propagation, activation functions and the central element of most learning machines: backpropagation. To finish a day full of new knowledge and lots of fundamentals, we jump back out again and use our insights together with existing frameworks like pytorch and keras. This part is all about modern D L workflow and structure. We will implement an entire pipeline, from dataloader to model and evaluation. Sounds interesting? We would love to see you at the workshop on June 2nd 2018. Find out more and get your free ticket here: Hack & Söhne - Deep Learning Hands- On Workshop Deep Learning Hands- On Workshop Hack & Söhne - Workshop Ob Wiwi oder Bau Igel, Elektrotechnik oder Maschinenbau, jeder…www. eventbrite. com Follow us to get the latest of our eventswww. facebook. com/hackundsoehnewww. instagram. com/hackundsoehnewww. twitter. com/hackundsoehnewww. hackundsoehne. dehttps://de. linkedin. com/company/hack-&-s% C3% B6hne","['Deep Learning', 'Coding', 'Codingbootcamp', 'Workshop', 'Python']",https://medium.com/@hackundsoehne/a-workshop-to-demistify-the-hype-of-dl-f2e2112f9ed8,0,[],0,3,hack,Unknown,Unknown,Unknown
chibueze ukaegbu,,"LearnFactory Internship: Day 21 (May 28, 2018) – LearnFactory Nigeria – Medium",2018-05-29 04:45:38,medium,"Learn Factory Internship: Day 21 ( May 28, 2018)“ Fail forward, that is the only way to progress. Never Stop; Shake Off Discouragement, Keep the Momentum. You will hit your mark. ” …i C My people, my people…looking D O Mified :) And Week 5 is up and running. The guys feel like Real Madrid after carrying their 3rd Champions League title back-to-back; they are razor-sharp and ready to go. Today, we began a dive into the D O M; it seemed like French to some, gibberish to others and Eureka to the rest, :). Diving behind the scenes to see how Java Script and H T Ml relate, and how the H T M L can be manipulated using J S was a whole new ball-game to a few. Who said learning was easy, haha. But, like every good teacher, our primary task is to simplify the obtuse and difficult. So, Lawrence and Matthew walked them gradually through the maze to help them gain a better understanding. It will be an interesting time when they re-convene tomorrow; I’m sure some cobwebs would have cleared by then. Codified… S P O T L I G H T O F T H E D A Y In the spotlight is our dapper pastor, Prince. Pastor looking good Ibekwe Prince Nwozor is the firstborn son of 3 siblings (all boys) born to Dr. (late) and Mrs Ibekwe. I am a graduate of Education/ Accountancy, from Imo State University. Did my Secondary education in Evangel Seminary, Akwete Technical school. I love God, more than any other thing. He is my life, my beginning, my all. I love mild colors, with white, pink, navy, royal and sky blue leading the pack. More than any other meal, I love my garri with egusi soup. My hobbies are singing and teaching; I love helping people and I dislike being taken for granted. I am a tall, handsome, well-groomed developer, who is passionate about providing I T solutions for businesses in Aba, Abia State, South-eastern region, Nigeria and the world at large. Fine boi pastor I am yet to understand this Egusi and eba phenomena; these guys deserve some accolades for their love for it o. Well, our transmission, omission, commission for today has ended. Tune in tomorrow for more transmission, commission etc… I’ll be seeing you. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-21-may-28-2018-f2053e7bede5,1,['Momentum'],1,100,chibueze,M,0.0,1.0
Klaudija Brami,,Code Chrysalis Cohort 5 — Student Introductions – Code Chrysalis – Medium,2018-08-15 12:18:36,medium,"Code Chrysalis Cohort 5 — Student Introductions Code Chrysalis is happy to welcome another international cohort of students that have traveled far and wide to be a part of our program. An exciting move that marks the start of their journeys towards becoming versatile software engineers with the potential to become the next generation of industry leaders. Let’s meet the students! Michael Arnold Michael comes to us from Berlin. Having spent the last 6 years living across the world from London, to Singapore, to San Francisco, he now finds himself with us in Tokyo. Using his business and management background alongside a keen interest in technology, he started his own startup around an app for e-sports fans called Patron G G. He’s also an advisor at Lead Sports Accelerator, mentoring esports startups and entrepreneurs. While at Code Chrysalis he aims to develop programming skills to understand the technical details of the startup industry. He’s excited to continue building community platforms for esports fans and to get his hands on blockchain technology. You can find Michael on Linked In. Dustin Tran Coming from California, U S A, Dustin earned his Bachelor’s Degree in Computer Science in 2014. He’s worked at various software Q A ( Quality Assurance) jobs, particularly in the video game industry, before joining our program. While he has some experience with programming languages from his time in college, learning Javascript is new to him. Dustin loves video games, so is interested in hardware, software, A R, V R, and anything else related to games. You can find him on Linked In here. Tsuyoshi Akiyama Tsuyoshi is a local Tokyoite. He has two older sisters that are both musicians: one is a conductor and the other is an organist. Before joining Code Chrysalis, he worked at an I T company called Roboken where he maintained their existing websites. He is interested in mobile applications and enjoys riding his gliders. Tsuyoshi in his glider. You can follow Tsuyoshi on Medium. Kimiko Motoyama Another globetrotter in our cohort, Kimiko has lived in Hyogo, Miami, Thomasville, Atlanta, Hyogo and now Tokyo. She was an English teacher in Hyogo for 7 years and later was hired as a programmer. A fun fact about Kimiko is that her voice was used on a morning show called “ Ohayo Asahi Desu” for 3 years, and she also did some voice acting on an i Phone quiz app for hip-hop culture called “ Juice”. As a new programmer, she’s come to us to improve her skills and further develop her tech interests and knowledge. Tsubasa Kondo A Tokyo native and ultra-marathoner in his spare time, Tsubasa has experience as a C R E ( Customer Reliability Engineer) for a product called Track. Before joining Code Chrysalis, he worked at a startup in Shibuya called Givery. He is very interested in Mesh Networking, Blockchain, Low-power, long-distance Io T and Pentesting. He enjoys being in nature by foraging wild herbs, building campfires and meditating in the woods. Tsubasa on a trail-running ultra-marathon. Tsubasa graduated from Sophia University with a degree in international business and also served in the Japan Air Self Defense Force as a medic. You can find him on Linked In here and Git Hub. Nour Balaha Nour comes from Damascus, Syria, also known as the“ Jasmine City”, one of the oldest continuously inhabited cities in the world. He worked as a lawyer in his native country, but developed an interest in technology and began studying Java and understanding how to use Oracle. His main tech interests are 4 K T Vs and H D R content, Virtual Reality, Smart home tech, desktop computers, laptops, tablets, smartphones and video game consoles. Nour was a graduate from our first Foundations course. You can find Nour on Linked In here. Hiroyuki Momoi Hiro is originally from Osaka, Japan but now lives on Tokyo. He’s been working as a Japanese system integrator ( Japan Business Systems) for 14 years. He has experience as a project manager, a product owner, and Windows network infrastructure architect. Our Foundations course was his first experience with serious coding, which he is now building on through our Immersive course. His main tech areas of interest are Blockchain and Machine or Deep learning. You can find Hiro on Linked In here. At Code Chrysalis we are privileged to have such an international set of students with us. To see what our students have been doing in person come along to their Demo Day on September 27th at the Code Chrysalis office. If you’re interested in learning more about us, check out our website to apply! Code Chrysalis is a coding and English school located in the heart of Tokyo. Our programs include a 12-week advanced software engineering bootcamp, a beginner coding course, and an English communication immersive. See why we are an industry leader in tech education in Japan. Follow us on Instagram | Facebook | Twitter | You Tube","['Programming', 'Technology', 'Coding', 'Education', 'Codingbootcamp']",https://medium.com/code-chrysalis/code-chrysalis-cohort-5-student-introductions-c5aabfd50525,4,[],0,19,klaudija,Unknown,Unknown,Unknown
MG Ayoub,"Co-founder @ Le Wagon Montréal, a coding bootcamp that brings technical skills to entrepreneurs and creative people. 🙌 lewagon.com/montreal",Diversity and inclusivity in tech: Actions and opportunities in Montreal,2017-07-24 16:00:36,medium,"Le Wagon Talk — Diversity in Tech : A panel discussion. July 6, 2017. @ La Gare, Collaborative Workspace & home of Le Wagon Montréal Diversity and inclusivity in tech: Actions and opportunities in Montreal Read the French version Why bring up diversity in tech at a Wagon Talk? One reason is because this issue matters to me personally, as I’m a woman who has worked in the tech industry for over 15 years. However, that is far from the only reason. Because waves of headlines on recent American scandals have shocked, shaken up, and mobilized the world tech community. Because in Canada, the tech community strives to be a champion of diversity: thousands of entrepreneurs, stakeholders and people in startups and tech companies have recognized diversity as an asset that contributes to our country’s strength and wealth, and some are even walking the talk and taking action. Because in Quebec, like elsewhere in the world, we’ve seen that tech companies still have a lot of work to do to tackle this issue. Because in Montreal, this topic also comes up a lot and many initiatives are geared toward greater diversity, such as Startup Mosaic, Notman House and Ladies Learning Code — the list goes on. Definitions Diversity: The fact of many different types of things or people being included in something; a range of different things or people; the fact that there are many different ideas or opinions about something ( Cambridge Dictionary). Inclusivity: The quality of trying to include many different types of people and treat them all fairly and equally ( Cambridge Dictionary). Chloé Freslon, journalist and facilitator; Ilias Benjelloun, Emma Notman & Cassie L. Rhéaume What is happening in Montréal ? We decided that this was an opportune time to take stock of what is happening in Montreal and what remains to be done, both as a society and as individuals, to become more inclusive, equitable and fair. On July 6, we invited tech insiders and champions to come talk about the issue:● Cassie L. Rhéaume, developer, speaker and ambassador for the Montreal division of Ladies Learning Code● Emma Williams, Campus Director, Notman House● Ilias Benjelloun, Creative Director at M T L New Tech and Interpreneurship Catalyst at Desjardins Lab. com The panel was moderated by Chloé Freslon, journalist and author of U Relles, a blog dedicated to women in tech (in French). “ I strongly believe in the power of role models to change what’s wrong in society. ” Chloé Freslon Highlights from the discussion The issue of parity is getting worse. In the 50’s and 60’s, women were pioneers in computer science. When computers became a fixture of homes in the 80’s, they were marketed as toys for boys. This created a large pool of boys entering the tech ecosystem earlier than girls. It’s still difficult to change “bro” culture and break down macho stereotypes in an industry that still struggles to be inclusive. One major way to remedy this would be to promote digital literacy among girls to help them understand that technology is for everyone. We need diversity to create economic value (a report from the Mc Kinsey Global Institute forecasts that advances in gender equality in business could add $150 billion to Canada’s G D P by 2026), creative value, and social value. Advances in artificial intelligence are an opportunity to break down bias, and this is why we need diversity in gender, background and culture. Scandals covered in the media on inequality, discrimination and abuse may contribute to feelings of workplace insecurity, but they also encourage people to come forward about discriminatory and inequitable situations. This gives hope that some types of behaviour will no longer be tolerated. The Montreal tech community has many solutions and is taking action. We’re lucky to have such a tight-knit community, to have hubs like the Notman House and M T L New Tech, to have a multitude of events, to have many ways to learn to code (bootcamps like Le Wagon Montréal or non-profits like Les Pitonneux or Ladies Learning Code), to have Slack and Facebook groups for women in tech, to have initiatives such as Startup Mosaic and Queer Tech M T L, who promote diversity by empowering diversity models and diversity leaders. At the talk, Ilias said that things can change if everyone does what they can. We think so too. That’s why our program is for all creative and entrepreneurial minds regardless of gender or background and is open to the world (there are currently 20 Wagon bootcamps around the globe). What do we expect from our candidates? You need to be (very) motivated, curious and outgoing. Cristina, architect & student at Le Wagon Montréal, batch #77 What about you ? Do you have examples of actions that make a difference ? Want to learn more about our upcoming talks and events 📅? Subscribe to our Meetup group. P. S. : If you enjoyed this story 🤗, please click the 👏 button and share to help others find it! Feel free to leave a comment too. Diversity in tech in Montreal : a panel presented by Le Wagon | A S K I D A Photo: Le Wagon Diversity is very important for Askida. We hire experts from all around the world and we believe that a…askida. com Changer de carrière en 9 semaines grâce aux femmes et à l’inclusivité Neuf semaines pour devenir programmeur full stack et construire un site web avec des gens qu’on ne connait pas…journalmetro. com Le Wagon Montréal - Coding Station Le Wagon démystifie le code à travers le monde et a déjà formé plus de 1400 étudiants. Vous êtes un créatif, un…www. meetup. com","['Diversity', 'Diversity In Tech', 'Diversity And Inclusion', 'Codingbootcamp', 'Montreal']",https://medium.com/le-wagon/diversity-and-inclusivity-in-tech-actions-and-opportunities-in-montreal-d59177d80d74,3,[],0,6,mg,Unknown,Unknown,Unknown
Micah Yost,"If opening too many Chrome tabs is talent, I’m Kanye. Amateur Investor. Founder & President at Method Mark, a brand strategy and marketing company.",Moms in tech: Midland University’s Code Academy helps women with children onramp to careers in…,2018-04-04 16:22:43,medium,"Moms in tech: Midland University’s Code Academy helps women with children onramp to careers in technology O M A H A, N E — Midland University’s Code Academy will launch a cohort focused specifically on moms. The fully online course, which begins May 1, will teach students the fundamental skills of web development. The course’s instructor, Becca Kroese of Skwintz, is a mom herself. “ We want to debunk any stereotypes there may be of working moms reaching their career goals. We’re excited to help women invest in themselves, prepare for jobs in the new economy and bring much needed diversity to the local tech industry, ” said Micah Yost, Code Academy Lead Faculty. Mom Code will expand Omaha’s tech talent pool as women gain skills, knowledge and connections needed in today’s digital economy. The convenience of a part-time online course, paired with students and instructors that understanda mom’s unique life stage, will create an ideal learning experience. Women with children often face barriers, such as childcare, to traditional educational opportunities. “ This is a great opportunity for women who want to start a web design business, get back into the workforce as a developer, or learn to build websites for friends or family, ” Krose noted. The twelve-week course meets two nights each week for two hours, plus one night dedicated to practice lab work. Mom Code begins May 1, and the course fee is $3, 750. Next step: join our online open house April 17th. Learn more here.","['Moms', 'Mompreneur', 'Learn To Code', 'Codingbootcamp']",https://medium.com/midlandcode/moms-in-tech-midland-universitys-code-academy-helps-women-with-children-onramp-to-careers-in-441d15a8ce03,1,[],0,0,micah,M,0.11721178037590647,0.8827882196240935
DawnM,Trainee Full Stack Developer,Results are in for Project 1! – DawnM – Medium,2018-08-29 10:50:22,medium,"Results are in for Project 1! I got a very exciting email this morning — the assessment results for my first website! I was almost too nervous to open it, but thankfully I’m more nosy than nervous! We get marked out of 5 for the following 18 areas: Project Purpose U X Design Suitability for purpose Navigation Ease of use Information Architecture Responsiveness Design Image Presentation Colour scheme and typography Appropriate use of H T M L Appropriate use of C S S Version Control Testing Implementation Testing Write-up Readme file Comments Deployment Implementation Deployment Write-up We also get written feedback on the following 5 areas: Usability and Real-world Application Layout and Visual Impact Code Quality Software Development Practices Overall feedback:“ The project has both functional and aesthetic qualities. It is easy to use and the project’s code is readable and has a good structure. Software development recommendations have been followed and the project uses current design trends to achieve its intended goals which show good knowledge of web design basics and current industry standards. ” As this area of study for me is so far removed from anything I have done before, I decided I would be happy with a “safe pass” mark. So I am absolutely thrilled with the constructive feedback I received, and especially with my overall mark of 9. 5 out of 10!! A huge thank you to everyone who has been involved, from initial support for this area of study ( J P), study loan & general encouragement ( Mum), every day support, proof reading, ideas brain-storming, and celebratory pancakes (my beautiful wife), mentorship and general study support ( Yoni and Tiffany at Code Institute), as well as all the friends, family, and fellow students who make up my amazing network. ❤ Thank you ❤ Originally published at www. dawnmcreated. uk on August 29, 2018.","['New Coder', 'Codingbootcamp', 'Codeproject', 'Code Institute', 'Career Change Coders']",https://medium.com/@DawnM_Created/results-are-in-for-project-1-651d0ca0f9a4,0,[],0,0,dawnm,Unknown,Unknown,Unknown
Modestas,,"Why I Joined A Coding Bootcamp (General Assembly, London)",2018-03-16 11:17:30,medium,"Why I Joined A Coding Bootcamp ( General Assembly, London) If you would have asked me a few months ago, attending a boot camp would not have even crossed my mind; mainly due to the hefty financial investment but also because I was determined to land a programming job through studying at home. At this point of my journey, I had already come to terms with the basics of essential front end web technologies: H T M L, C S S, and Java Script. On the 24th of October, I attended General Assembly’s Info session. Needless to say I left with a good impression but also a difficult question to answer. Should I join a coding bootcamp? It didn’t help that time wasn’t on my side as the next bootcamp was set to take place In a few weeks with pre-course to be completed a week before the start date. This made my decision all the more urgent. If the title is anything to go by, you already know the outcome of my decision. Here are the factors I thought about, that tipped me over the edge and why I am now typing this as I’m slouching on a comfortable sofa here at General Assembly H Q. Community During my info session for General Assembly, I immediately felt a palpable sense of community. Seeing all the tech related students and professionals alike ( U X designers, web developers and the rarer breed of data scientists ) under the same roof and studying within neighbouring classrooms was great. Having classmates to collaborate on future projects and tasks also allows you to learn from others and also teach others the things you have learned which I imagine serves to better cement and retain the knowledge you have gained. I also liked the idea of being surrounded by like minded individuals with similar ambitions. This creates a stimulating environment where everyone is determined to reach their goals and help each other out in the process. After all all, have you ever heard of the saying — “you are average of the people you surround yourself with”. . Atleast I think that’s how it goes Networking Opportunities Networking seems to be an extremely pivotal aspect in life and can open up countless opportunities for you down the road. Coding bootcamps seem to foster an environment for networking and establishing professional connections; whereby later down the line, you can offer some kind of value to one of your friends via a job opportunity as an example and vice versa. Essentially you are establishing a bond which is potentially beneficial to both parties in the future. Change of scenery After months of reclusive studying in my bedroom, if i’m honest, I began to feel quite burned out. Sure, I’d go to the gym and attend boxing classes, but I felt like I was in my room for far too long and it began stifling my overall productivity. I believe that separating your work environment from the place that you chill and unwind is important for your general well being — whether that be going to the library to study or allocating a room in your house to be your dedicated office for getting s#@! done. Win Win. Structure To Follow One of the problems with learning to code, is that you dont know what you dont know. This makes it difficult to determine the things you will need to learn in order to become employable and creating a plan means constantly iterating upon it as you naturally gain more knowledge and foresight which can become overwhelming; especially when there is an incessant debate on exactly the “best” technologies to learn. I think the structure and syllabus coding boot camps bring helps to lift some of the weight off of your shoulders in terms of figuring out what you need to learn and whether or not what you are learning is worthwhile. Help On Demand This is one of my biggest reasons for joining a bootcamp. The Instant feedback and support provided by instructors gives you a way to solve the major issues you run into, more promptly. I cant recall the number of times i got stuck on an application, had no idea what to google to solve the issues and had to spend countless hours trying to figure out the cause of the issue. Granted, programming has a huge and thriving online community and going on forums has been a great help, but understandably; there is no guarantee of a timely response and your questions can easily get misinterpreted especially if you are unable to articulate them precisely enough. This is also most likely due to the one dimensional nature of online interaction as many layers of interpersonal communication are missing — making it difficult to convey your exact thoughts. I guess in the end, nothing beats good old fashion face to face communication. Full Stack Initially when starting to learn to code, I had the false preconception that you needed to be a mathematical genius to be a backend programmer, which is why I always thought that I would stick to frontend development and focus more on the design aspect given my more creative nature. As I got got more comfortable with Java Script I realised I actually enjoyed it quite a lot, and the scope of what I thought was possible widened. I guess as of now, getting a job as a full stack developer much makes more sense and learning both aspects of web development within 3 months is much more time efficient than going at it alone and trying to break into the industry by myself. . . Let’s wait and see Although I am highly optimistic; in order to find out whether my investment is worthy or not is just down to time I guess. Of course, simply enrolling in a bootcamp does not guarantee me anything, I still need to put in the work and bust my butt off but generally, as of these last few weeks its been so far so good. I am still very early in my bootcamp journey and I will update you on my journey weekly. I hope i can provide some valuable insight to those considering investing in a bootcamp or just general entertainment for those who are reading this for whatever reason. stick around.","['Programming', 'General Assembly', 'Web Development', 'Codingbootcamp', 'Tech']",https://medium.com/@kmodestas/why-i-joined-a-coding-bootcamp-general-assembly-london-ca13c0f2cd63,1,['General Assembly'],1,44,modestas,Unknown,Unknown,Unknown
23 Code Street,"A Coding School for Women. For every paying student, we teach a disadvantaged woman in India how to code.",Piloting a webinar course – 23 Code Street – Medium,2018-05-30 15:46:33,medium,"Piloting a webinar course We are launching our first online course! Yay! We are midway through our eighth cohort (!!) at 23 Code Street, and just in time for our second year anniversary, we wanted to release something new. We are launching our first online course! We have had requests for this since the first day we started, but until we knew we could do it justice, and give students the support and love we give our in person students, we waited — but now is the time. Why are we doing an online course? We are aware that we are currently London centric, even more specifically, East and Central London. There is tonnes of talent around the country that deserves better access to good technical education and support. We want our family to be bigger than just London. Also, we wanted to create a course that could be accessed by those who are homebound; by those who may have responsibilities that prevent them, or make it difficult, to attend a 4 hour a week (plus travel) in person course; for those who prefer to learn from home. Plus, we wanted to create a course with a lower price point. So, how will it work? The course will run one night a week for 12 weeks and starts on the 4th July. 4th July! Each lesson will be a live webinar session where a teacher will present theory, exemplify it with code, complete an exercise with you, and then set you exercises to complete solo or in pairs. Some classes will be more theory based, others more practical- expect a good mix. A webinar is a seminar conducted online- you will see the teacher, the teacher’s presentation or screen, and you will have the ability to ask questions throughout the class through the webinar software. Something a bit like this! Throughout the course, students will be connected via Slack which is a team collaboration tool- it’s like if Facebook Messenger, email and forums had a child. You will have support here from each other and the teachers. It’s a great way to share resources and keep each other focused, and organise to meet I R L if you are nearby. All classes will be recorded in case you miss a class and we have teachers on hand to answer your questions during the week, again, via Slack. So what exactly is a pilot course? A pilot course just means it’s the first time a course is run. This is the first time we are going online which is exciting and, honestly, nerve racking. We know from when we first started 23 Code Street, that there are lots of learning curves when launching a brand new course. During the course, we will ask you to provide feedback to help make this the best possible course we could run. Due to this, we are offering a reduced rate of £400 for the pilot. What will be covered? We will be focusing on html, C S S, and Java Script. We will make sure key concepts are understood so that you have a solid foundation. We will look at accessibility which considers how to create websites for everyone. We will look at the roles available and the trends occuring in the tech industry. We are known for our friendly and open learning environment, which focuses on supporting one another rather than ego and competition, and this will not be lost online. We are keeping online cohorts small so can have individual relationships and meaningful support. Lizzie, one of our grads, talks about how she found the course here. How do I sign up? To find out more information and apply you can visit our course page here. We’re excited to create a more accessible course with lower barriers to entry. We can’t wait to have you join us on this next step of our journey!","['Entrepreneurship', 'Coding', 'Codingbootcamp', 'Remote Working', 'Women In Tech']",https://medium.com/23codestreet/pilot-webinar-course-e45f02ae8970,1,[],0,2,23,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 14 — (Match N Match) – Mike Brave – Medium,2018-09-03 05:40:38,medium,"42 Piscine Day 14 — ( Match N Match) Edit: This is part of a series that culminated here, Next post. Previous post. I am a man defeated. I’m about 75% sure I’m going to need to take the piscine a second time. I’ve not retained much this last week and have genuinely felt overwhelmed since day 6. I had come to the conclusion that the tests mattered most of all but discovered today that may not be the case. If you pass the tests but haven’t turned in anything that is still enough not to get in. I guess balance is what is really needed. Despite my best efforts to complete assignments I don’t fully understand, and learning while I struggle through it, many were not turned in due to the fact that they were not completed, which was probably a mistake. So I may have to take it again because I’m not sure I can catch up on my own, the time just isn’t there. I read some of the only other blog about the piscine experience I’ve found and she was getting high marks on everything, it just made me feel a little bit dumber as that has not been the case for me. I can’t believe that anyone is retaining much more than I am if they are coming from a background without coding experience. I know they don’t expect you to be an expert at the end of the piscine, and from what I understand are somewhat forgiving in that area but still the only real solid requirement I’ve seen is to get more than 25% on the final, the rest are reasons to veto(you know, not playing well with others, being a dick etc), but that seems to be the hard and fast rule is the score of the final (there is a story of one exception but I think hers was a computer error and she should have scored much higher). I’ve felt some more solidarity/inclusion today, several people have helped me with my projects today. I still didn’t finish, but I did learn a lot and it was nice to feel remembered for lack of a better word. While doing laundry one of the cadets was really friendly and gave some pointers on getting more work done. Another girl here tried to help me find people to help me figure things out as well, which was appreciated. One of my better friends decided to leave, we had thought we had talked her out of it before, but there it is, this is mostly for reasons to do with depression. I’m glad she stayed and passed the second exam though, proud of her for that, for not quitting because it was hard, she still quit but now for a much better reason and I really respect that. I didn’t finish the group project, the one girl who was at a conference stayed to make time to work on stuff and the other one that sort of refused to help later told me she was leaving and I think she meant the school. I know of at least 6 people that left today. I think we are less than 100 now. My headcount tonight at 7pm was 71. I feel terrible that we didn’t finish after my teammate made time, she was leaving most of the code to me but giving ideas here and there but I was struggling as I’ve been working on it all day, my brain was mush. We really just didn’t know enough to finish it in time, perhaps if we had both days to work on it together we might have pulled it off. The solo project for the weekend was match n match. Basically we had to compare two strings and if they were similar enough to fill in the data, think about it as a precursor to an auto fill or a spell check. It took a lot of pointers and recursion, both areas I’m sort of struggling with. Spirits seem mostly low today, but I feel there is also a deeper level of camaraderie forming too. It’s been an experience, and I’ve learned more about coding in two weeks than I ever have in my years of trying to learn. It’s crazy to think that we are half done. Actually more than half. This next week will probably destroy me mentally, tomorrow we will find out. Until tomorrow then.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-14-match-n-match-4b92960a948,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Anna Brown,"Software engineer at @IFTTT, Alum of the Grace Hopper Program. Just trying to make data structures fun!",Becoming a software engineer at Grace Hopper Academy,2017-01-05 21:32:56,medium,"Becoming a software engineer at Grace Hopper Academy This time last year, I made a promise to myself: I was going to learn Javascript, and be accepted at Grace Hopper Academy, a tuition-deferred coding bootcamp for women. So excited to be at Grace Hopper : D This was not a traditional path by any standards. After majoring in art history and Spanish in college, I worked as a first grade teacher in the Lower East Side of Manhattan, which up until experiencing junior phase at Grace Hopper, I have considered the hardest thing I have ever done. After teaching for two years , I explored prospects in the non-profit world, where I struggled to find my place. And then, while working during the day as a mobile technician at the Apple Store, I began to learn H T M L and C S S on my own. And then I realized, as many past linguistic and other liberal arts majors turned developers before me, computers languages are awesome. So one year later, here I am, spelunking (as our instructor Emily describes it) into new frameworks and concepts, staying inspired and motivated by the other 16 brilliant women at Grace Hopper who are working hard alongside me. For anyone interested in a coding bootcamp, I highly recommend Grace Hopper Academy, as well as its partner school, Fullstack Academy. The instructors and staff are accessible and warm, which creates a really great learning culture.","['Women In Tech', 'Tech', 'Grace Hopper', 'JavaScript', 'Coding Bootcamps']",https://medium.com/@anna.e.brown/becoming-a-software-engineer-at-grace-hopper-academy-76ae131c61fe,3,"['Grace Hopper Academy', 'Fullstack Academy']",2,8,anna,F,0.9969256489517473,0.003074351048252725
James Hamann,Software Developer https://jameshamann.com,Makers Academy Pre-Course Week 1 – James Hamann – Medium,2016-08-01 21:17:14,medium,"Makers Academy Pre- Course Week 1 So, week 1 of the pre-course at makers academy is over and it seemed to go by quite quickly. Everyone was added to a slack channel and began introducing each other, getting to know everyone else who would be sharing the experiences of the 16 weeks that lay ahead. Week 1 The two main topics covered in the first week were the Command Line and Version Control, using Git. The learning objectives are clearly highlighted so you get an idea quite early on of the sort of things that are going to be covered. The topics are nicely explained in ‘knowledge pills’ which go over the key concepts in short and easy to digest snippets of information. I did find myself referring to these quite a lot and as I found git to be slightly confusing at first, I chose to research more about it. Once you have gone through all of the material and studied the concepts and have a clear understanding of how things work, you move on to the weekly challenge. For the first week, that consisted of a command line murder mystery challenge where all the skills you would have learnt during the week would be put to the test in this virtual crime scenario. It really was a brilliant way to cement understanding of the concepts covered, the fact it was interactive and almost like a game pushed you to finish, but also gave a sense of satisfaction each time you ‘solved’ a piece of the puzzle. I did get stuck a few times, but thanks to slack, I could see how other people had dealt with the same problems I had come across and the whole feeling of everyone helping each other out was great. Overall, my first impressions of the course, content and style of the teaching is great. It’s only been one week and I feel as if I’ve learnt a lot, but also have begun to start learning how to solve problems, which is exciting! I may have also drank a silly amount of coffee, but all in all it’s been a great first week and am really excited for what lies ahead, onwards and upwards for week 2!","['Coding Bootcamps', 'Makersacademy']",https://medium.com/@jameshamann/makers-academy-pre-course-week-1-ef7c3f57de00,0,[],0,0,james,M,0.004514259074712186,0.9954857409252879
Todd Zipper,"Todd Zipper serves as President and Chief Executive Officer at Learning House. Todd writes about issues in higher education, and personal/professional growth.",How EQUIP Affects Higher Education – Uncompromising EDU – Medium,2016-09-01 13:11:39,medium,"How E Q U I P Affects Higher Education I’ve talked a lot about alternative forms of education in this space, and I firmly believe that higher education needs to innovate to stay relevant in the 21st century. Two weeks ago, the government made a big step in this direction. The recent E Q U I P initiative is legitimizing different kinds of education, but some of the decisions involved are problematic. A Brief Overview of E Q U I P Recently, the government announced the first eight partnerships of the E Q U I P ( Educational Quality Through Innovative Partnerships) initiative, which aims to help low-income students access new kinds of education. Federal financial aid will now be able to be used for these eight partnerships, which previously had not qualified for the financial aid. Criteria for the partnerships include: Innovating to improve outcomes Providing equitable access to high-quality postsecondary education Quality assurance Affordability Student and taxpayer protections Every partnership must be reviewed and monitored by an independent third-party quality assurance entity, which will assess student outcomes, including what students learn, outcomes after the program and how the program is managed. Partnerships range from coding bootcamps to accelerated bachelor’s degrees to certificates. Approximately half of the programs are focused on computer programming, but programs for business, management and liberal arts also are included. Interestingly, no M O O Cs are participating in this initiative, perhaps because they are already so focused on being low- or no-cost. Alternatively, it could be that the brands that support M O O C S have no interest in creating a federally funded solution that is separate from their on-campus offerings, which are typically expensive. The Benefits Look, I love innovation, and I’ve been talking about the need to track outcomes for what seems like forever. I applaud that outcomes was one of the criteria for being chosen to be part of this program. I also think this is a significant opportunity to demonstrate the power of these vocational programs to students and employers alike. These programs have the promise of delivering high-quality education at affordable prices where outcomes are clear. This is the triumvirate of affordability, accessibility, and R O I. The Drawbacks There’s always a but, isn’t there? While I do think there are some benefits to this program, I have some serious concerns. ( I should say here that Learning House owns The Software Guild, which applied to be one of the partnerships chosen. I promise, however, that I had these reservations even during the application process. ) Regulation First, the “quality assurance process” is…unusual. These programs are not being overseen by accrediting bodies, but rather by a number of different agencies, many of them for-profit. Why not have selected at least one regional accrediting agency to oversee a program? I appreciate going outside of the current structure, but we also have a vested interest to fix higher education from the inside. Entangled Ventures, for example, invests in companies in the higher education industry. They bring valuable experience, but it also feels a little bit like having the fox guarding the chicken coop. If we learned nothing else from the housing crash of 2008, it should have been the importance of regulators who do not stand to profit from the success of the programs they are regulating. Unfair Advantages Picking favorites is another issue. By choosing these eight to be eligible to receive financial aid, the government is inherently giving these partnerships a leg up, both in the size of the talent pool they can attract and in publicity. The government is giving legitimacy to these programs over other similar programs. This has happened before with the Distance Education Demonstration Program back in the late 1990s, so there is precedent. Breaking Higher Education A lot of the hype around alternative education has focused on M O O Cs and coding bootcamps. As mentioned above, M O O Cs are not really represented in this initiative, although I would argue that “ M O O C-like substances” (to use Scott Jaschik’s phrase) are. I would put the partnership with Study. com and Thomas Edison State University, as well as the partnership with Straighter Line and the Dallas Community College system, in this category. Here is what is so exciting but also terrifying about these kinds of programs: if they become scalable, they have the potential to break our entire higher education system. Programs that offer 3-credit general education courses for $200 instead of $1, 200 (which works out to $400 per credit hour, which is fairly low compared to an elite university), and provide the same quality as that $1, 200 course, represent a huge win for consumers, who can access education significantly more affordably. But that also means that colleges and universities will no longer be able to sustain themselves with higher priced courses that typically provide good margins and cash flow. Some will adapt but I predict the majority would have to close their doors. I am not going to opine on the efficacy here because I simply don’t know. Clearly, education would become more homogenized and I am not sure if that is a bad thing if outcomes are met. That of course doesn’t even address the part where for the short-term vocational programs, financial aid shouldn’t even really be necessary. If these programs provide the skills they claim they do, students should easily be able to see the R O I of paying upfront, because they will end up with a better job at the end. If those outcomes hold true, private lenders will be willing to take the risk of giving loans as they are doing already today to new students as needed, because they will know their chances of being paid back are high. The free market will help regulate costs. Why mess with this right now? Lenders will make their decisions on who to lend to mostly by judging the outcomes of the coding bootcamp, not the background of the incoming student. How I Think It Should Work Coding bootcamps are already popular and growing. Colleges and universities should start offering these as well, either through partnering with a bootcamp like The Software Guild or the ones participating in E Q U I P or by developing the curriculum themselves. Concordia University, St. Paul and The Software Guild, for example, have partnered so that graduates of The Software Guild can take that credit and apply it toward a computer science degree at C S P. I think in the next five years, we are going to see dozens of these popping up on college campuses across the country. The M O O C-like substances, I think, represent a more significant threat, but also opportunity, for colleges and universities. As mentioned above, if companies like Straighter Line ever crack the code of scalability, that could represent a significant financial burden to colleges, which will no longer be able to compete on price. But these kinds of programs also play to the lowest common denominator, so the same courses would be offered at schools across the country. Universities that identify what sets them apart (whether it’s teaching style, having expert faculty, having a strong alumni network, or something else) will have a competitive advantage. It’s not that students will never choose the more expensive option, it’s that colleges must prove to students that the more expensive option has benefits. I think that at least some colleges will have to close, but those that can prove their worth and that are able to adapt will survive. No matter what happens, higher education needs to become more effective, outcomes-based, affordable and flexible. Do you think the E Q U I P initiative will help us get there?","['Trending In Higher Ed', 'Coding Bootcamp', 'Equip', 'Moocs']",https://medium.com/uncompromising-edu/how-equip-affects-higher-education-a4d4b01bb6c5,24,['The Software Guild'],1,0,todd,M,0.0037527437513276214,0.9962472562486724
Anders Persson,Web developer who writes about things that interest me,Post Makers reflection on fear and certainty – Anders Persson – Medium,2018-07-09 15:09:50,medium,"Post Makers reflection on fear and certainty Almost four months since my first blog and the introduction of the term clogging, I am very pleased to say that I have completed the Maker’s academy course! My best intentions of blogging throughout the course fell completely by the wayside once I got stuck into the tricky business that is learning to code. Maker’s is a uniquely challenging course in that there is no certainty, no assessment to assure yourself that you are doing well and allow yourself to rest on your laurels. What this means is that you are constantly unsure if you are doing enough to be able to get a job at the end of the course. This is the driving force behind what keeps you going. This uncertainty can be frightening, it can be unnerving but it is a feeling you can grow accustomed to. I reached a point around week six or seven where I began to seek new challenges for myself and tackled them free from that little annoying voice of doubt in the back of my head that kept telling me I was too scared to try. I had always wanted to grow and take on new and frightening challenges but before Makers I would often start things and give up half way through or not understand something and not even try to begin with. Makers has taught me that I can do things I thought I couldn’t, that I shouldn’t be afraid of trying and to relish the feeling of uncertainty because it leads to growth. There is always more that you can learn, there is always more for you to understand and the feeling of uncertainty never goes away. I have heard of senior developers and C T O’s who still feel like they don’t know anything but use it as a motivation to keep on growing and learning. I will do my best to build on these lessons and use my new growth mindset to help me find a job and further on in my career.","['Growth Mindset', 'Codingbootcamp', 'Coding', 'Makersacademy', 'Makers']",https://medium.com/@anderscodes/post-makers-reflection-on-fear-and-certainty-53f690bc786,1,[],0,11,anders,M,0.0,1.0
adam tropp,,CS 100.1 For Bootcamp Grads – adam tropp – Medium,2018-05-16 21:37:14,medium,"C S 100. 1 For Bootcamp Grads Coming out of boot camp, you will quickly and inevitably come to a few conclusions. 1) Finding a job is hard. And stressful. Perhaps harder and more stressful than actually completing the boot camp in the first place. There are a lot of moving pieces involved in finding your first job in the industry, and while attending a boot camp is a fairly straightforward process of coding until your brain goes numb, it can be difficult to even know where to begin when looking for a job. Between filling out applications, nurturing connections, maintaining your online presence, and of course, keeping your coding skills sharp and relevant, the sheer magnitude of to-dos can quickly make your head spin. This leads in to realization number two. 2) You are competing against cs graduates for jobs. You are also competing against other boot camp grads. You are competing against people with more experience than you, more relevant experience than you, a wider breadth of skills than you, stronger cs fundamentals than you, and a whole host of other seemingly insurmountable obstacles. Despite being what many would call the most lucrative and fastest growing industry in the world, the tech scene can be deceptively hard to break into. One thing is for sure though. Amidst the sea of tasks that every aspiring developer must commit time and effort to, suring up one’s computer science knowledge and problem solving ability is tantamount. Every position you apply to will be hotly contested. Should you land an interview, there will be others who do as well. No matter the company or role, some percentage of the interview process will consist of testing your fundamental computer science and problem solving ability. This is perhaps the most important thing for bootcamp grads to get through their heads. In the past, you have, by and large, been the only person that needed to work with your code. As long as it solved the problem it set out to solve and passed some test cases, it was considered good enough. But, in the real world, I T I S N O T E N O U G H F O R C O D E T O S I M P L Y “ W O R K”. I T M U S T B E E A S Y F O R O T H E R S T O R E A D A N D U N D E R S T A N D, A N D O P T I M A L I N T E R M S O F B O T H T I M E A N D S P A C E. I cannot stress this enough. If you do not spend a significant portion of your post bootcamp job-finding time on learning the ins and outs of computer science, you are setting yourself up for failure. To this end, I will be writing a series of blog posts intended to clarify some basic cs concepts for those with no cs background. To be clear, I am certainly no expert. As a recent bootcamp grad myself, I am just now familiarizing myself with many of these concepts. This will serve as much as anything as a platform for me to solidify my understandin by being forced to commit it to words, which I find can be one of the most effective methods: learning by teaching. That said, I believe this surface-level review can benefit those with as little cs knowledge as I had just a short time ago. Today, I will talk briefly about two of the simpler data structures you will need to know: stacks and queues. In computer science, these terms mean roughly what you would expect given their plain english definitions. The quintessential examples of a stack are a real-life stack of books and a stack of cafeteria trays. Starting from the bottom, items are added on top, one by one, but only the top item can be removed at any given time. In this sense, stacks are L I F O, “last in, first out. ” The last item added to the stack is the only one that can be removed. This process can be repeated recursively until no items remain. Profoundly the opposite, then, are queues. A synonym for line, think of queues like a line in a grocery store or restaurant, or pretty much anywhere else, for that matter. Items are added to the back, and removed from the front, with each item moving forward in the line as others are removed. In this sense, they are F I F O, “first in first out. ” This is exactly the same as the plain english concept of first come, first served. These data structures are conceptually quite simple, but the types of problems they are optimal for solving are often not. When implemented in code, stacks and queues can be written as arrays that only support popping the appropriate element, or as linked lists. To fully understand this and many other cs topics, it is important to fully dive into what linked lists are and why they are used. This will be the subject of the next blog post, but for now, suffice it to say that are quite common in cs problems, and many algorithms and data structures rely on them. I hope this brief overview gives you a clearer sense of what stacks and queues are, and more importantly, that it motivates you to realize that without some basic cs knowledge, your career as a programmer is dead in the water. In the future, I will dive straight into covering fundamental algorithms and data structures, which hopefully will help elucidate this (stacks and queues) and other topics more fully. Stay tuned, good luck, and never give up!","['Programming', 'Computer Science', 'Codingbootcamp']",https://medium.com/@adt6261/cs-100-1-for-bootcamp-grads-5cf7c0b43d4,1,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Ryan Monro,"Upright and electric web developer, full stack bass player",GA WDI Week Six Day Five – Ryan Monro – Medium,2017-10-07 04:35:05,medium,"G A W D I Week Six Day Five Day five means it’s the day we present our projects. That means you’ve got until lunchtime to get it as good as you can without breaking the things that worked yesterday, and it probably means doing a whole lot of, if not all of, your C S S. I pushed my last commit ten minutes before the presentations start, to make usernames case insensitive — a problem I identified yesterday when Dan from the U X class was able to sign up as Dan and I realised he couldn’t then log in as dan. But it got pushed down the to-do list throughout the day, as I went off on tangents like making the buttons not look like default buttons, doing things with the Google Maps A P I, and making all the pages without Maps on them stop spewing errors to the console. Finally, we had to leave the project somewhere. G A Common Area. Just after lunch:“ So are you finished?”“ No, but I stopped. ” I read an article about Robert ‘ Mutt’ Lange that said they never reached a point where they were totally happy and ‘finished’ with the mix of Def Leppard’s album Hysteria, but at some point they realised they just had to stop working on it and give it to the label. I read a similar thing about the mix of Where The Streets Have No Name. So I don’t feel so bad about just having to stop working on the project, other than a little regret at spending so much time on blog posts this week instead of my project. So here’s where my idea came from: A few years ago: My wife and I were eating at Mario’s in Fitzroy. It’s one of those places were musicians come in and eat breakfast at the wrong time of day. One time I went there on the way to the Night Cat on a Sunday night, around 9pm I guess, and ordered poached eggs on toast. The waiter said, “ Oh this is so exciting, I only just started working here, and when I moved to Melbourne all I knew about this place was that musicians come in here and order breakfast at the wrong time of day. ” I looked over at my bass leaning against the wall and realised I was perpetuating a stereotype. Anyway. A side of unexpected hash browns came out to our table. My cousin was working in the kitchen. We were pretty happy to get those as a side without having ordered breakfast, but you need to know someone in the kitchen. Slightly less years ago: Mc Donald’s blow the lid off the impulse-hash-browns scene by offering breakfast all day. You can get hash browns any time you want now. A few months ago:“ Remember that time Joel sent us out some hash browns at Mario’s?”“ Yeah, that was great. I wish you could order sides without having to order something for it to be on the side of. ” Also a few months ago:“ Well it’s $9. 40 for the pizza…or $10 with a can of soft drink. I should get the can. ” Ten to fifteen minutes later: I don’t even want this drink. I wonder if I can sell it on e Bay. A fifteen minute auction, starting price $0. 50. A few weeks ago: Hsing, Trystan, Kasun and I were eating ramen on our lunch break from G A. Kasun realised the small serve wasn’t going to be enough, and ordered a pre-emptive Extra Noodles. When it came out — a small bowl of noodles in broth — Kasun said, “ I’d be happy with that for lunch. ” But you can’t order it as a side unless you’re ordering a ramen too. That’s when the idea came up. “ Wouldn’t it be great if there was an app that found people ordering ramen near you, and you could pay them to order extra noodles?” We laughed. It was a ridiculous idea. A few days ago:“ Maybe it’s not so ridiculous. People near you who want to sell food they don’t need. It could also solve the bundled-drink- I-don’t-need and ordered-too-much-pizza-for-the-meetup problems. Yeah, that’s what I’m going to build. ”","['Food', 'Codingbootcamp']",https://medium.com/@ryanmonro/ga-wdi-week-six-day-five-ccf02f9ddf40,0,[],0,0,ryan,M,0.024172097739259983,0.97582790226074
Michelle Michelle,,Code-inary people – Michelle Michelle – Medium,2018-05-02 23:18:35,medium,"Code-inary people Like the John Legend song!! 😉 I’ve never considered myself a techie. No, far from it. I always preferred to identify as the colorful, borderline-crazy creative, simply put; anything far from a serious vibe like technology. My closest interaction with technology, at least how I saw it would be when I was updating my i Pad or *insert random Apple product here*. Oh, let’s not forget that one time I volunteered to help out at Bar Camp in my hometime. Then something happened, or lets just say many things happened. I had an epiphany as a result of many conversations with myself and a few with other humans. One time my close friend jokingly mentioned ‘ Maybe I could teach you how to code’. I quickly laughed it off because deep down I knew, that I knew and that we both knew this -> I was not made for code. You see, I’ve always been into music, poetry and other artsy stuff. The last job I held ever had that I truly loved was in a digital agency. I worked as a copywriter/content creator. I would write and hand over my copydecks and scripts to ‘the dev guys’. H T M L, C S S, Java Script etc all sounded like jargon to me. I never bothered to find out how they (the dev guys) did what they did because it appeared too intense for me. All I needed to know was that I had handed over the content on time and we were always good to go. Then we would all have drinks lol! Now look, by some strange twist of fate. I’m actually considering a career change and I am learning how to code. Many thanks to my friend who planted the seed of hope in my head and now I’m doing the #100 Days Of Code Challenge via Free Code Camp. org alongside the # Skill Crush 10 Day Coding Bootcamp. I haven’t learned much yet, but creating a text field today gave me A L L T H E F E E L S!!! I couldn’t believe my eyes, I was ready to take this show on the road. Vegas, baby!! I need a manager! Damn… It’s only just hitting me how this is a field that still calls for creativity, logic and puts your analytical skills to the test. I’m sure glad I’ve found something that has reduced my T V consumption time and I’m sure just figuring this stuff out is helping my brain and eventually maybe my bank account too. Like hey, I’m discovering a whole new world. Nope, I’m not yet a techie (yet). I’m just a code-inary person. This is more than a crush ❤️.","['Programming', '100daysofcode', 'Codingbootcamp', 'Freecodecamp']",https://medium.com/@michellekwambo/code-inary-people-27f47678f335,0,[],0,3,michelle,F,0.9959987938535763,0.0040012061464237145
chibueze ukaegbu,,LearnFactory Internship: Day 4 – LearnFactory Nigeria – Medium,2018-05-04 12:41:29,medium,"Learn Factory Internship: Day 4 Another day, another set of adventures. Thursday like no other… Isaac, doing his thing The day began like any other: the interns listened to Thursday, the Season of Mastery from Steve Harris’s Life is a Week series, and …. As usual, they were pumped, and ready to take on the day, with Zoe taking them through personalizing the lessons they are learning. Classes commenced at 9am, with Isaac continuing on the advanced H T M L5 journey. The focus today was on Canvas. Steve Harris, all cool and dapper Around 10am, I walked into the class and temporarily took over from Isaac. Someone was on the line on Google Hangouts, and he wanted to say hi to the interns. I flipped the screen to face them, and did the introductions: “hello class, we have a wonderful friend who would love to say hi. Meet Steve Harris”. It was like I had dropped a nuclear bomb in Times Square, they almost went crazy with excitement. And Steve, with that voice and those dapper bearded looks, blew them right away. S H, taking questions from the interns He took 5 questions from them, his answers were gold nuggets. He emphasized on the need to have mentors, and how credible mentors can elevate your life and performance. He shared the names of his own mentors: the amazing Fela Durotoye, Ali Baba, Tonye Cole of Sahara Oil and Pastor Paul Adefarasin, founder of House on the Rock. In response to one of the questions, S H emphasized on the need to balance Character and Capacity. He pointed out that Capacity can get you to the top, but it needs Character to keep you there. He also warned of the danger of having all character and no capacity; in the end, the resulting frustrations from lack and want can harm your character. I know his schedule, it is beyond crazy; but that’s one of the marks of a great man: the ability to share himself with others, to make time from a very busy schedule to provide help and direction for others to find their way into the light. He is cool, he is humble and yes, he will kick your butt into excelling beyond your perceived limitations. As usual, he wrapped up the session with his byline:“ It’s not what you don’t have that limits you. It’s what you have, but don’t know how to use. I hope you find it; I hope you work it and I hope you use it. God bless you” When you have a mentor, who is dapper and cool, you can do all things. And guess what, he will always come through. S H, I’m deeply grateful to you for making their day bright; keep shining. Lessons continued, and by the afternoon, Isaac introduced them to Bootstrap 4. It was a long day of coding and design, but yes, they are having fun. Keep in touch, I’ll see you tomorrow. i C Chief Code Smith","['International Internship', 'Coding', 'Codingbootcamp', 'Internships']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-4-ed378d71d4d6,0,[],0,63,chibueze,M,0.0,1.0
Shadi Jam,"Obsessed with back end development, particularly .Net/C# && all things coding at The Iron Yard Houston.",Lost – Shadi Jam – Medium,2016-11-08 04:48:53,medium,"Lost After four days of working on Black Jack I feel simultaneously lost and at peace. It isn’t that I can’t figure out how to create the functions I need when I need them, it’s that I don’t know what function to create next. I’ve started from scratch three times over. I’ve googled/read/watched every blackjack in C# webpage in existence. I’ve mapped everything on pen and paper, and yet my mind won’t let me get from point A to point B. I’ve managed to create a shuffled deck of cards and I believe I have a function that deals a hand but that’s where the mind block grips me. The format and majority of functions to actually play are even written out. It’s infuriating! Forcing myself to take a few hours off hasn’t helped me complete the problem, and yet, I don’t feel so bad. As annoyed as I am with myself for not being able to complete this assignment, I can tell that my familiarity with the syntax, functions, objects, and formatting has drastically improved during the last four days. Surely this is the point? The worry, as usual, is that I’m falling behind, that I’m not cut out for this, and that I’ll never get it. But Matt said on Friday, you aren’t going to learn this stuff overnight. You only learn by doing it over and over and over. This is the first time I’ve tried to put all these things together. On Saturday night/ Sunday morning (it was 1:00 A M) the exhaustion was starting to creep in. My brain began to tell me that I wasn’t cut out for this. That all my classmates were getting it and I was the only one left behind, and what’s worse, I’m the only woman, and therefore an awful representative. I forced myself to shut down and go to bed. When I woke up on Sunday, I felt better. It seems I’ve come to an understanding that it’s okay if I don’t get all of it right away, even if it takes me longer than others.","['Coding Bootcamps', 'Coding']",https://medium.com/@shadijam/lost-dbfd2c50b23b,1,['The Iron Yard'],1,0,shadi,M,0.2668845315904139,0.7331154684095861
Amanda Zacarias,"International analyst & UX Tester. Coder in training, sharing economy believer, foodie, connector, dreamer & earthling!",Home sweet home – Amanda Zacarias – Medium,2017-04-06 09:12:23,medium,"Home sweet home A lot has happened since my last post… I applied to several coding bootcamps! I got accepted in one and am in the 2nd phase of another one… Both with scholarship!! — \o/ I went to househunting phase in Lisbon… more like a roomhunting. And after some misfortunated visits I found the perfect spot, walking distance from my Coding Bootcamp. — another \o/ I moved in yesterday to my new place with the help with very good friends that I made when I was living in Madeira Island and fortunately they moved to Lisbon before I did. My flatmates are 2 women from Venezuela and I’m very excited to be living in an International house. We got long well and I believe we are kindred spirits. My bootcamp starts on Monday! That’s very exciting to me… I was really involved in the house hunt and them in moving in that I left behind a little bit my preparations to the bootcamp. But starting now I am changing that! Well good luck for me and I will be back to tell more about my preparations for applying into the bootcamps and then after getting into them.","['Codingbootcamp', 'Home Sweet Home', 'Flatmates', 'Lisbon', 'Moving In']",https://medium.com/@amandazm/home-sweet-home-3563105601e8,0,[],0,0,amanda,F,0.9972847114132334,0.002715288586766621
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",The Great Sequelizer – Emily Deans – Medium,2017-08-09 00:45:30,medium,"The Great Sequelizer Today, we moved from strict Postgre S Q L and S Q L to working with Sequelize — a module that improves the usability of a relational database in the context of Java Script. Because strict S Q L doesn’t work that efficiently with J S, Sequelize acts as an effective mediator-of-sorts between the two on their way to the database (which, for us has been Postgre S Q L), and results in a more readable code and an easier way to maintain your databases. Our instructor provided a visual of the flow of this process on the whiteboard, which I found helpful:       Java Script → Sequelize → S Q L → Postgre S Q L Sequelize is an example of an ‘ O R M’ ( Object Relational Mapper) — a technology that enables the access and manipulation of objects (i. e. , “data”) between systems that aren’t inherently compatible. O R Ms do this by allowing programmers to develop a sort of “map” of a database’s structure and contents and create coinciding code that allows for more practical and efficient access and use of that data. For our first application of this sort of data mapping, we revisited our ‘to-do’ list project from two weeks back, and tried to rework the file structure and requirements to store newly input “to-do” items into our database and then access, update, and output those items in different formats based on whether or not those items were marked ‘complete’ using Sequelize. I’ve been having a hard time wrapping my head around the concept of this sort of ‘virtual database’ approach and don’t yet have the command I need to get the code outputting the way I’d like, so I’ll hold off on sharing the results until it’s looking a little better 🤓. Song of the Day: “ Glue” by Fickle Friends","['Programming', 'Code Newbie', 'Codingbootcamp', 'Women In Tech', 'The Iron Yard']",https://medium.com/@emilyldeans/the-great-sequelizer-a5810510f959,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Angeline Lam,Front End Developer,"Teachable moments — grit, fail fast and fail often.",2018-03-11 04:23:16,medium,"Teachable moments — grit, fail fast and fail often. I’m almost at the finish line for my Hacker You boot camp full-time immersive web development program. I’m super excited about what is next because that’s when things get interesting. Yesterday, I was working on my personal portfolio website, when I went into what I often call, a proverbial rabbit-hole. I couldn’t compile my Sass styling partials for 5hrs. It turns out that there may be some problems with node modules files in my boiler plate. I had to delete the node modules folder and re-install npm. Nonetheless, those 5hrs taught me a lot. We are taught to learn code through code along and exercises. What if we also had tests and exercises where the code is broken and we had to fix them? Learning how to fix broken things are really great ways to truly understand fundamentals Our web development community is amazing. During the 5hrs of trying to understand the problem, I received so much help from our alumni and instructors. In those 5hrs, I found others in similar predicaments. Some had many more years of experience and still get stuck trying to solve coding bugs. It’s good to step away from the problem but never give up. So as we say at Hacker You — my “take away” from those 5hrs is break code often and don’t get too frustrated by the process because that’s part of becoming a better web developer. Happy coding everyone!","['JavaScript', 'Codingbootcamp', 'Nodejs', 'Web Development']",https://medium.com/@lam.angeline/teachable-moments-grit-fail-fast-and-fail-often-422c28c11b8d,0,[],0,0,angeline,F,0.9997180716098111,0.000281928390188892
Christopher Gray,,Reflections on my Choice to Pursue Data Science – Christopher Gray – Medium,2017-05-15 21:48:50,medium,"Reflections on my Choice to Pursue Data Science This week I came across a blog post that really hit my core. Before we get into the article itself and my response to it sharing my background would show why I found this article so fascinating. I’m a 30 year old half Korean half Caucasian male with multiple bachelor degrees. Instead of being able to pursue careers in those disciplines I found myself with a career in Healthcare ultimately working for a small health insurance company. Every step of my career I was always highly praised, but always told the same thing, “ You should be in a position much higher than you are. ” Of course I’ve always felt the same way, however unless I wanted to spend another 2 years getting a master’s degree in a career I wasn’t even sure I wanted to stay in it just wasn’t going to happen. After much debate I looked into best jobs in the United States. I knew that it was going to be something in the tech industry, but I found it fascinating how Data Scientist was being voted number 1 job by Forbes, Harvard Business, and countless other entities. After researching it a little more I decided to take the plunge and move to a completely different state to attend General Assembly, a code camp, even though I had no expirience in coding whatsoever. The blog post I found was written by Quincy Larson and it was titled “ We asked 20, 000 people who they are and how they’re learning to code. ” This blog took a look at a huge dataset in which 20, 000 individuals who had less than 5 years of expirience in coding answered multiple questions about their demographics, background, and road to learn their coding language(s). Not all the data has been cleaned and looked through, however Quincy provided many results of the poll. According to the poll the average age of “new coders” is 28 (great I’m 2 years behind). The 5th most popular job, 24%, these coders are aiming for is Data Science, 54% have a bachelor’s degree or higher, 80% of them are male, and 44% of them feel they are in a position they are over qualified for (dang these results have me pretty much on the nose). Furthermore 77% are willing to relocate and the most popular code camp these coders attended was General Assembly, so I guess I made the right choice. Essentially this dataset reaffirmed how there is a huge jump towards the tech industry, which I assume is due to the masses realizing the tech industry is ever growing. An industry that is constantly growing usually has job growth and stability, which are two things I’m sure everyone is looking for. Also from this article I got a great list of podcasts and free resources that will help me grow as a “new coder” myself. All in all I’m definitely happy with my decision and can’t wait to see all the data that is parsed from this poll. Who knows, maybe I’ll be lucky enough to end up helping with this endeavor.","['Data Science', 'Coding', 'Codingbootcamp']",https://medium.com/@ctgray86/reflections-on-my-choice-to-pursue-data-science-6fee8ecbcae0,5,['General Assembly'],1,3,christopher,M,0.0046573532726988135,0.9953426467273012
Clifford Armstrong III,,How I’m faking it till I make it. – Clifford Armstrong III – Medium,2018-08-31 01:43:41,medium,"How I’m faking it till I make it. One of the concerns I’ve read about quite a few times while reading about the pace of coding boot camps as well as the experience of folks shortly thereafter is the whole “imposter syndrome” thing. Ya know, where someone feels like they aren’t authentically being a l33t programmer that has it all figured out. There’s a lot to unpack with the sentiment, and it isn’t unique to folks like myself going through a rigorous learning curve with coding. Here are my thoughts on the matter… From Errant Science. com Everyone has to do the work You have to realize that everyone was a noob at some point. The only way through the “ I’m objectively terrible at this” stage to the “ I’m a wizard” stage is time and dedication. If you’re putting in the time, trust the process and let the results speak for themselves. We are all figuring it out Coding is an art and science of trial and error (read try and fail and try again). If everyone knew what to do from the jump, we’d have full automation of the economy and a U B I high enough for everyone to mess around all day. Unfortunately, that isn’t the case and we’re all stuck trying to make the world better everyday. That includes the peers that you feel like you don’t measure up to. Other people fake it too Little did you know, while you’re worrying about how you don’t fit in, the very people you’re comparing yourself to are faking in some other way at the same time. Nobody has bullet-proof self esteem or confidence. So rejoice in your feeling of faking it. In fact, double down. Fake it until you don’t have to anymore. I know that’s what I’m doing.","['Imposter Syndrome', 'Programming', 'Development', 'Bloc', 'Codingbootcamp']",https://medium.com/@clifford.armstrong.3/how-im-faking-it-till-i-make-it-3c0e3b559b03,0,[],0,1,clifford,M,0.010675874321851965,0.989324125678148
Horizons,,Coding Bootcamp vs. CS Degree – Horizons – Medium,2018-06-01 00:56:17,medium,"Coding Bootcamp vs. C S Degree Coding bootcamp vs. C S degree, which is the better path for you? Is it better to go through an accelerated coding bootcamp or to complete a four year computer science degree? This question is becoming more and more relevant as coding and software engineer jobs continue to be in more and more demand. And coding is a skill that is indeed in demand. Over the past few years, programming and coding jobs have exploded. A 2016 report from Burning Glass found that there were over 7 million job openings in 2015 which required coding skill, and an average job growth rate for programming jobs that was 12% higher than the average job market. What’s the best route for you? So what is the best way to get a programming job in this quickly growing industry? Is it the traditional route of a four year computer science degree, or a coding bootcamp? When assessing coding bootcamp vs. C S degree, a factor you have to look at first is the massive difference in cost between the two. The cost of a respected four-year university comes in around $20, 000-$30, 000 a year, with private schools like Harvard costing in upwards of $50, 000 each year. A coding bootcamp like Horizons, on the other hand, will cost you $10, 000 for 12 weeks. (see our article: Are Coding Bootcamps Worth It?) There’s also the other cost that few people talk about, which is time. In other words, the opportunity cost. A 12-week program vs. a four-year program (coding bootcamp vs. C S degree) has a smaller potential opportunity cost because it doesn’t last as long. Like the financial investment, the time you invest that could have been spent doing other things is much smaller with a coding bootcamp than with a four-year university — about 116–120 weeks smaller. That’s time you could have spent building your career, idea or company. Return on Investment ( R O I) But what do you get for the differing amounts of time and money you invest in either a coding bootcamp or four-year degree? This is a tough question to broach because there are strong, invested opinions on both sides. The most critical difference between coding bootcamp and a C S degree is the purpose of each. The purpose of a C S degree is to give students an overview of the scientific field of computing as a whole, as well as a well-rounded education in fields not directly concerning computer science (i. e. required credits not directly related to your major). Coding is a part of this, but it’s not the whole thing, and it isn’t the purpose. The purpose of coding bootcamps, on the other hand, is to give people the skills necessary for a specific type of programming job. That job is primarily, web and mobile development. It is more focused because the purpose and goal are more narrowly defined. You’re not getting what a university would define as a broad education, because that’s not the point of them. You want a job having to do with coding and programming, and that is the particular skill set you learn. In terms of getting a job and building your career, though, what’s more important is what do employers see as the difference between C S degrees and coding bootcamps? According to a survey done by Indeed. com, about 72% of employers consider coding bootcamp graduates just as prepared and likely to be high performers as candidates with computer science degrees. That is compared to 17% of surveyed employers who consider coding bootcamp graduates less prepared, and 12% who consider these graduates more prepared. Over 80% of employer respondents have hired coding bootcamp graduates, and 99. 8% said that they would do so again. Consider your goals and all the costs Coding bootcamp vs. C S degree, which is the better path for you? The answer to that depends on your goals and what you are looking to get out of it. What’s important is that, when making your decision, you consider every angle of the question. That means monetary cost, potential opportunity cost, and how valuable each path makes you to employers. What are you putting into it vs. what are you getting out of it? In the end, it’s all about what you feel can add the most value to you.","['Programming', 'Codingbootcamp', 'Code School', 'Computer Science', 'Degree']",https://medium.com/@horizons/coding-bootcamp-vs-cs-degree-efa3aa80e526,14,[],0,0,horizons,Unknown,Unknown,Unknown
Lucy Mitchell,"FS dev, former OT & assistant tech coach with Flatiron School. i enjoy open dialogue & i’m interested in helping make healthcare better!",Coding Bootcamp: A Personal Memoir (with advice) – Lucy Mitchell – Medium,2018-08-14 19:33:13,medium,"Coding Bootcamp: A Personal Memoir (with advice) I’ve basically just written what I wish I’d read before I started. Enjoy. This is a transformative three months of your life. Some people who sign up to bootcamps are taking a bit of a diversion, or have some links, however weak, with tech before they start. For most people, though, you’re doing what is essentially a life-one-eighty and hoping for the best. It’s like an episode of Changing Rooms — achieving a total makeover in an amount of time so short it verges on Buzzfeed-title-worthy. As you can imagine, achieving that vastness a change in such a small amount of time (15 weeks) is not easy. And frankly there are parts of it that aren’t pleasant at all. You put yourself under a lot of stress just by trying to balance the curriculum and inexorable happening of life all at the same time. It’s impossible not to feel under pressure. But…. you know you’re doing it for a reason; you trust that the life you are working towards is better than the life you are currently shedding (or, more politely, upgrading). It’s really tough, and sometimes you want to not feel so pressured and just leave, but you don’t. Because it’s worth it. You can kiss goodbye to your hobbies. I mean it. It took me until week seven to feel strong enough about managing my own time to tentatively arrange an afterschool coffee date. I just had so much to do at all other points. It wasn’t until a cohort started behind us and Iadvised them “don’t kill yourself with weekend work thinking monday will be easier. it never is. you’ve just done more. ” that I realised I wasn’t cutting myself the same slack. In my slightly deranged state, however, the stress of getting the work done was less awful than the stress of being behind with the work. Again: it’s tough, but it’s worth it. Outside the standard 9–6 hours, I also got in almost every day at 8, read or coded on my 1–2hr commute if the space allowed, did work in the evenings almost every night when I got home, worked one if not both days of the weekend. I’ve thought about the code I’ve written in the shower, standing in the queue to get lunch, on my bike, in my sleep. Once Ihad a dream so meta and immersive I wasn’t just coding, but uniting students from all the different bootcamps in my city in a secret resistance (nb — no idea what against). I’ve started joking and memeing — albeit poorly — in coding languages (usually highly self deprecatingly). God help me, I’ve even started to enjoy working with other people on problems. Despite feeling mostly under a form of duress, my relationship with myself has improved noticeably. Instead of being in a constant state of emotional flux, with low stress tolerance and very emotionally reactive to everyday life, I find myself focussed, working hard, then being proud, then being exhausted, and caring for myself however I need. It feels like my reflexivity has grown some compassion (at 28, it’s probably about time). There is, however, a pretty near-constant sensation of feeling like I’m walking on sand, and I know that even if I think I understand one concept, there will be another in five minutes that will tear my understanding to shreds. “ Nevertheless”, as the saying goes, “we persist”. There have been parts of the past 15 weeks I have felt so saturated with the minutiae of learning programming and its associated corollary of didactic human discourse that I wanted to walk out and never come back. Like halfway through the chocolate cake, Bruce Bogtrotter actually decided that he didn’t really like chocolate and he was quite full and would it be okay if he got down now. Except I never had the energy. So I just stayed sat down and occasionally had a little nap at the desk or made it to the sofas. As I keep saying: it wasn’t pleasant, but it was worth it. I kept thinking about how if you put coal under a lot of pressure and a high temperature, eventually you get diamonds. I was beginning to sympathise with the coal and wonder if I actually wanted to be a diamond at all. I’ve missed weddings, birthdays, anniversaries, spending time with unwell elderly relatives and new born friends, I’ve missed my family a lot and my marriage definitely suffered. I once cried for 77 minutes straight through a practice test because I was so tired and nothing I did was working ( I had missed a curly bracket, it turned out) (you’re no true programmer until you can take the piss out of yourself for getting your ass whooped by punctuation). You have to be both doggedly persistent and the lucky beneficiary of a very good support network to complete a bootcamp — at least, that’s my opinion. I appreciate that there are already articles out there re: “advice to bootcamp starters”. In a lot of ways, this will probably serve to reinforce many of those pieces of advice. But I think there’s value in getting different lived experiences on something so transformative. In any case, it’s been helpful for me to write this. If you ever want to reach out about anything mentioned in this article, just drop me a message. I’d be more than happy to help. My advice to people considering or having just started a bootcamp: Be kind to your cohort. These people are your new siblings, essentially. You spend a lot of time together and it’s totally ok for you to not mesh immediately or all the time. However, remember that everyone will have their own syncopated rhythm of stress during these weeks. One of my closest friends on the cohort found a module straightforward that was so awful for me I considered leaving for my health. You don’t have to constantly check in with people, unless that’s how you roll, but be ready to care for them if they need someone to talk to. Do not underestimate the power of the offer of a hug, or ten minutes of your time, or a cookie. “watch carefully, the magic that occurs when you give a person just enough comfort to be themselves. ” Be kind to yourself. There’s no magic formula for this and you’re gonna have to work it out on your own, frankly! I think booking out time especially for yourself, with no intrusions of work, are key for this. Like date night, but with yourself. I was cramming programming into every available ten minutes but when I started replacing this with reading my favourite books I felt a lot better and the quality of my thinking improved. Remember: learning to program is difficult. When I heard the V P of Education say this I felt so validated so I’m just gonna say this again for the people in the back: L E A R N I N G T O P R O G R A M I S D I F F I C U L T. Please take solace in this, and the fact that people have completed this bootcamp before you, and that the staff here are trying their very best to constantly upgrade and adjust their nets so you never fall through. Practice things (when you have time). If reading about riding a bike wouldn’t make you a proficient cyclist, why would reading about code make you a decent programmer? You gotta make your brain work just like you would a muscle*. Better yet, if you’re ahead on the work, even slightly, help your buddies. A group is only as strong as its weakest member, and you will all have your different strengths and weaknesses over this time**. Teaching is absolutely the best form of learning. *the brain is an organ, not a muscle, but it acts in a similar way. Whatever you get what i mean. * I’ve always preferred “opportunities and obstacles” but it doesn’t pack quite the same punch here. Tl;dr — I’m really proud of myself, I’ve met some fantastic people, built cool stuff, and learnt more than I could have thought possible. It absolutely sucked at some points, but I’m glad I did this bootcamp. What a great thing to be able to do with your life.","['Programming', 'Codelikeagirl', 'Codingbootcamp', 'Webdev']",https://medium.com/@lucymarmitchell/this-is-a-transformative-three-months-of-your-life-8f8e8b21b436,0,['Flatiron School'],1,84,lucy,F,0.996871919695842,0.0031280803041580335
Dave Hoover,Solidity Squirrel,My Journey into Dev Bootcamp – Dave Hoover – Medium,2017-08-05 03:08:34,medium,"My Journey into Dev Bootcamp Note 0: I had planned on this being my entire Dev Bootcamp story, but I’m not yet ready to tell the whole thing. I just need some more time. This story covers my journey up to Dev Bootcamp Chicago’s first cohort. Note 1: If you want to skip all these words and just look at some nice photos, go here. In 2002, I read Software Craftsmanship on an overnight road trip from Chicago to International Falls, Ontario. Someone had handed it to me at work and I thought it looked interesting. Judging by the cover, it certainly looked different from most of the other software books I’d read. I read the book with a flashlight in the back seat of my car while a few of us took turns driving. I couldn’t put it down. What I remember most was that it provided me with a vocabulary that I could use to describe myself. As a self-taught software developer, terms like “computer scientist” or “software engineer” never felt right for me. But I could imagine becoming a “software craftsman”. Better yet, the book helped me understand that I was clearly still an “apprentice”. I clung to that word: apprenticeship. It had a powerful influence on how I viewed my career. The apprenticeship concept was motivating for me because one doesn’t apprentice to simply become a “senior developer”. One apprenticed to become a journeyman, and someday maybe a master craftsman. After reading about what master craftsmen were capable of, I immediately aspired to that role. A few years later, having re-read Software Craftsmanship multiple times, I was still strongly under the influence of its principles. I was now working at Thought Works, surrounded by an inspiring community of software folks. Thanks to some of those connections and Thought Works’ reputation, I was asked to write a web column about software craftsmanship. I was told that Andy Hunt & Dave Thomas were also writing under the same column! I quickly realized that the only software craftsmanship topic I was actually qualified to write about was apprenticeship, since in my opinion, I hadn’t progressed past that stage yet. As I focused my writing on apprenticeship, I drew inspiration from the many books and blogs that I’d consumed voraciously during the first four years of my career. Christopher Alexander’s A Pattern Language had completely rocked my world in 2003, and so as I thought about apprenticeship, I naturally started organizing ideas into a pattern language. I started publishing those patterns on my website. Within a few months, I was joined by Adewale Oshineye, my co-author, and discovered by Mary Treseler, our future editor at O’ Reilly. That’s right, these ideas evolved from a column, to a loose collection of advice, and four long years later, into a book! We didn’t finish it until 2009 because Ruby on Rails “happened” in 2005. The book could wait, the Rails phenomenon couldn’t. Skipping ahead to 2011, my friend Corey Haines and I had spent the last few years geeking out on apprenticeship and craftsmanship. I had been running an apprenticeship program at the software consultancy I worked at ( Obtiva), and Corey had been touring the country, pair programming with all sorts of awesome people. We started wondering aloud about education, thinking about a better way to create apprentices. Unfortunately, we couldn’t break out of the 2-4 year timeframe. Then we met Neal Sales- Griffin and Mike Mc Gee (see photo). In April 2011, Neal presented us with an idea for teaching people Rails in just 10 weeks. He believed that with the right structure, people could get jobs or build products in less than three months. It was audacious, and Corey and I were intrigued. Neal and Mike co-founded Code Academy in Chicago that summer, but both Corey and I eventually parted ways with this dynamic duo. Code Academy (eventually called Starter League) wasn’t quite the right fit for us. Their primary mission was to create technical entrepreneurs. Corey and I were more interested in getting people started in technical careers. In early 2012, while working at Groupon in Chicago, I organized a small summit of coding schools to share ideas and lessons learned. Neal from Code Academy, Jeff Casimir of Hungry Academy (later g School, now Turing), and Shereef Bishay from Dev Bootcamp, all participated, along with a few other friends. We met in San Francisco, and Shereef gave us a tour of Dev Bootcamp. I was enthralled by what I witnessed there. Students spent all of their waking time in the space. Shereef pushed them hard. To help them survive, Shereef had them practice yoga and provided a counselor. The curriculum was still evolving, but it was off to a strong start. Part of their curriculum was actually focused on “engineering empathy”, covering topics such as feedback, authenticity, and systemic oppression. Although it smelled like people needed to shower more often, the atmosphere was incredible. Here’s a photo I took of Shereef teaching his first cohort. ( That’s actually the future C E O of Hack Reactor looking up at him!) I came back later that night, just to hang out with students. I couldn’t get enough. Shereef and his growing team helped these students through a ground-breaking, intense, 8-week program. The graduates were swiftly employed afterward. That cohort’s vocational success, amplified by this Tech Crunch article, started the world-wide coding bootcamp phenomena. I went back to work at Groupon, scheming for how I could get involved. Shereef and I kept in touch. By April 2012, he had convinced me to travel periodically to S F to convince employers to start apprenticeship programs. That never panned out. But we kept talking, bouncing ideas off each other. In August, I left Groupon. What I really wanted to do was help companies start apprenticeship programs, I wanted to bridge the technical talent gap. But I couldn’t figure out how to afford that without traveling all the time. I had kids (8, 11, and 13) and wanted to spend the vast majority of my nights at home with them. At that point, I was still involved at Starter League, and was planning to teach a class for them in Chicago. I had also helped get Mobile Makers Academy started in Chicago. But then I went and spent some more time at Dev Bootcamp in San Francisco. I’d never seen anything like that team. They shared their problems with each other, and listened to each other with an incredible focus. They did yoga together. They cared deeply about their students, and about each other. It was the most authentic workplace I’d ever seen. And Shereef treated me like a peer. He did a great job recruiting me. I was hooked. A few days after that trip, I canceled my Starter League class. ( Sorry Neal!) I got officially involved as a contractor for Dev Bootcamp, helping with curriculum, working from Chicago. As summer moved into autumn, I decided I wanted to come on board full-time. Once I joined, Shereef retroactively gave Jesse Farmer and me our “co-founder” titles due to the influences we’d had on the program in its early days. But I was still more interested in creating apprenticeships or building software to facilitate learning. I had zero intention of trying to teach, let alone launch anything. In October, I was there in S F as we welcomed our third and final cohort of the year. During that trip it gradually dawned on me that Chicago really needed a school like this, and that I would need to start it. I had serious reservations about the idea. I’m super-introverted. I had no interest in teaching. I was tired from growing Obtiva and selling it to Groupon. Besides, watching Shereef in action, with his huge personality, glowing with charisma, intimidated the hell out of me. But one of my co-workers assured me that Shereef’s way wasn’t the only way to pull it off. And so I agreed. Dev Bootcamp Chicago was about to happen. My friend Elliott Garms had already told me that whatever I did next, he wanted to be involved. I felt the same way. As co-founders of Dev Bootcamp Chicago, Elliott and I got to work. I couldn’t even begin to list all of the various tasks required to find and set up that beautiful space of ours in River North, not to mention vetting our awesome first few cohorts. But with the help of the S F team, and some local friends, we got it done. In the meantime, we had pulled together an incredible team of people to deliver this program: Mike Busch, Jen Myers, Kevin Solorio, Alyssa Diaz, Abi Noda, Nate Delage, and Alex Botsford. Leading this group of people was an absolute privilege. If I ever lead another team even close to that strong, I will be a very lucky & happy person. Our first cohort, nicknamed the “squirrels”, arrived on April 22nd, 2013. To be continued… part 2","['Programming', 'Codingbootcamp', 'Coding', 'Books', 'Startup Lessons']",https://medium.com/@davehoover/my-journey-into-dev-bootcamp-1a2ffff6cdb6,2,"['Dev Bootcamp', 'Starter League', 'Hack Reactor', 'Mobile Makers Academy']",4,27,dave,M,0.0017823361110676818,0.9982176638889323
NEXT Academy,"We are South East Asia’s best tech school focusing on coding, marketing, data and design.",Why Rushing To College Shouldn’t Be Your Top Priority,2016-12-01 10:34:25,medium,"Why Rushing To College Shouldn’t Be Your Top Priority According to most Malaysian parents, there’s a very specific formula for success in life: Get good grades in school -> Go to college/university and get your diploma/degree -> Get a job -> Earn and save money for “your future” While this might differ between parents, it is generally the path they’d expect their kids to take. In most cases, any deviation from it would anger many parents. Especially the part about going to college after finishing your S P M. Because no college means no diploma, no diploma means you won’t be able to get a good job/salary, and no job/salary means their child will end up a jobless failure for the rest of their life. Ok, so maybe I’m being a teensy bit dramatic. But having grown up in Malaysia, I do know this is pretty much the basics of what most parents tell their kids. There are a few flaws in this argument, but the most fundamental of which is this: Having a college diploma makes it no easier for you to secure a job easily in today’s ever-growing competitive market. Don’t get me wrong. Mum and Dad do have a point. But no matter which country you live in, regardless of whether or not you are a diploma or degree holder — unemployment rates have been inevitably rising for everyone. But what you need to know is that statistics show that the unemployment rate for those with a college diploma are significantly lower than for those without one. According to an annual study done by the consulting firm Accenture, 67% of graduates can actually expect to find a job in their chosen field — and this number has been steadily decreasing each year. So what am I saying? That you don’t need college? Well, no. That’s not what I’m implying. I’m simply pointing out that rushing college enrollment immediately after getting your S P M results may not be the best idea. It’s a better idea to sit down and consider what it is you want to do with your life first — you don’t want to end up picking the wrong major which either won’t benefit your future career path or which doesn’t suit your interests, which could potentially end up becoming a very expensive mistake, both money and time-wise. In fact, it is indicated in a study by Psychology Today that many young people who rushed into college often became locked into bad career choices. For several reasons, among which include picking the wrong major due to lack of information or experience. These days, college is a very important financial investment, and that’s why it shouldn’t be taken lightly. After S P M, you’re given the time not just to celebrate your freedom from high school, but also to think about what you want to do next… because college isn’t the place for you to be “discovering yourself” or “trying things out”. That’s just a waste of time and money. That’s why one thing I’d highly recommend doing before making any decisions about further studies is to invest in your own self-development and personal growth. Why? Because in today’s job market, most employers won’t even bother looking at your degrees and diplomas. Instead, they want to know what skills you as an individual can bring to the table that will benefit them and their company. In this increasingly technological day and age, many are also looking for potential employees with technical skills, such as knowledge of coding and web design. And even if you’re not planning to become a programmer, learning to code can still be an important skill that could help you get a job in the future. Don’t assume that just because you’re taking a year off to invest in yourself, would also mean that you’ll never go to college. You can always take the time to get the knowledge and life experience you need to improve yourself before heading off to college or university. Studies have shown that this can even help you make better life choices (such as picking the right major) because you’ll have a better idea of what you want to do, and what you need to learn to get there. So in that gap between completing your S P M and before applying for higher education, here are some options you could consider to pick up a new, potentially-useful skill:1. Join a coding course/coding bootcamp I’ve already mentioned above that employers these days are looking for employees who have technical skills. If you know how to code, you’ll have a definite edge over the rest who don’t, for several reasons: You’ll have better problem-solving skills One of the failings of our current education system (all the way from kindergarten to university-level) is that it fails to instill problem-solving and critical-thinking skills in students. Most graduates who try to enter the workforce these days are used to being spoonfed by teachers and lecturers, and once a situation crops up that calls for initiative, they tend to fail miserably. If you learn to code, you’ll be trained to have a mindset where you try to resolve issues and fix problems on your own. Through this, you’ll also be more self-reliant and empowered to take initiative — which are all traits that employers will be looking for. You’ll be able to better act on your ideas With coding knowledge, you’ll know how to build your own web apps or programs — which means that you might be able to help solve problems or make your work easier for yourself and your colleagues. For example, we know of a previous student who created an app to help filter through data and create reports, which reduced a lot of tedious workload for himself and his colleagues and enabled them to increase productivity and efficiency. Best part is, this can also help you save on the cost of hiring designers and programmers to do something you’ll know how to do on your own. You could work freelance With coding skills, instead of working a 9–5 job, you could choose instead to work as a freelancer, providing your skills on a contractual basis. This would give you the freedom to create your own work schedule, be your own boss, and work from home — though at the cost of having a steady paycheck and employee benefits. 2. Start a business If you have an idea for a business you’d like to start up one day, well, don’t let your dreams be dreams. There’s no time like the present to get started as an entrepreneur. You’re never too young to start your own business — especially at this time in your life when you have few commitments, lot of energy, and plenty of time and ambition. Even if you start a business and it fails, it’ll still look pretty impressive on your resume. In fact, it shows that you’re proactive, innovative, creative and driven, and that you have some experience as an entrepreneur. Plus, this will provide you with leadership experience — and with all these awesome qualities, future employers will be champing at the bit to hire you. 3. Sign up to learn web design A lot of companies these days have websites (it’s pretty much a given that their customers/clients will want to be able to look them up online), and as such they need to have someone who can help them develop, design and maintain the website for them. Being able to develop the website as well as design the look and feel of it will help you out in the long run, as it negates the need to work with either a web developer or designer, and allows you to work more efficiently. Conclusion At the end of the day, many people tend to mistake the notion that “you don’t need a degree to be successful” to mean “you don’t need to go to college”. But that’s not the point I’ve been trying to make. College is an important part of a person’s life, and that little piece of paper they hand you at graduation could potentially help you earn a higher salary in future. Ultimately, it’s important to have a good mix of qualifications and experience on hand to help you find a good job. Employers place a higher value on people who have extra skills to bring to the table, so it’s never a bad idea to invest in yourself and your skills if you can. The transition from secondary school to college can be extremely terrifying when adolescents are faced with the decisions of abiding by rigid expectations of stereotypical Asian parents versus challenging the status quo. While some teens have a clear sight of goals they want to achieve and subsequently, the suitable choice of college course to be undertaken — many are still left with uncertainty and unbearable amounts of external pressure as to what to do. Perhaps taking a break between completing S P M and immediate enrollment in college to pursue self-improvement is vital for one to build character that will sustain a fruitful future. On top of that, to equip one’s self with a vast array of knowledge and skills might just be the best option in discovering what you truly want to achieve. By the way, if you’re looking for digital courses to pick up some technical skills, check out the ones we have to offer: Web Development Coursei O S Mobile Development Course Digital Marketing Course Web Design Course Originally published at N E X T Academy.","['College', 'Coding Bootcamp', 'Personal Development']",https://medium.com/@NEXTAcademy_/why-rushing-to-college-shouldnt-be-your-top-priority-b740435d2903,25,[],0,0,next,Unknown,Unknown,Unknown
Maria Kennedy,"🦋Social Butterfly, 🤓 Educator, 👶🏾 Mommy, 📱🖥 Geek, ♒️ Aquarian, Heritage: 🇻🇬🇻🇮🇩🇴",Co-op Coding – Maria Kennedy – Medium,2018-08-28 18:40:17,medium,"Co-op Coding Today I watched students solve a challenge by thinking it out loud and collaborating with each other. They reminded each other about what they had learned in the past classes, logic they had researched, and were able to come to a quick conclusion than what they would have on their own. Most people will throw out the phrase “teamwork makes the dream work” and it seems to be a life philosophy, not just an empty phrase. Teamwork seems to make everything work 🤷🏾‍♀️ When I first started my job, I had a bit of a struggle because I did not ask for help. It wasn’t that I wasn’t comfortable asking for help, I just figured that most of my questions and challenges were mundane and that I would be slowing everyone down. Soon, it became clear that the only thing slowing everyone down was my inability to use my resources wisely. So, I collaborated and saw an immediate lift in confidence and skills. In most settings, teams [who have the same goal] accelerate dreams! If you’re struggling in learning to code on your own, more than likely you need a tribe that is willing to go with you on your journey. Try joining a Meetup group or joining a classroom of coders and I’m sure you’ll see a difference in your leveling up.","['Life Lessons', 'Coding', 'Codingbootcamp', 'Teamwork', 'Collaboration']",https://medium.com/@heavenlyboheme/co-op-coding-1f29673ae316,0,[],0,0,maria,F,0.9922602371968836,0.00773976280311636
Dex Mills,dexmills.com,Stressed – Dex Mills – Medium,2017-04-01 23:20:48,medium,"Stressed You never can really explain the factors in a gut feeling of being overwhelmed. Many times it becomes looking at the picture to big. To be honest this process is frustrating because of the stress that I want to handle but do not have the tools at this time to. I’m starting at my hangman project with an empty feeling. I know what I want to do to it but cannot for the life of me figure out how to get the answer out. Currently I have the ability to pull letters from a html page and insert them into a randomly chosen word. (props to doing that!). After that is where I am hitting my wall. I cannot for the life of me figure out how to insert the finished array after the guess into the J S, so I can continue to build upon the guesses that go thru. To be honest with myself, I am pulled extremely thin. Attempting to work 30+ hours and spend 60+ hours a week in coding is having its affects on my mental health as well as physically. I am constantly fighting to catch up on sleep and meet up with my fellow iron yard students on code. I have spoken to the “fearless leader” about this and I am hoping that we can implement a concrete plan for the coming weeks. Not saying the open endedness of this process is bad but I need a little direction to right the ship and sail on to a better future. Song of the Day:“ Today is in My Way”- M X P X“ Click the link for music!”","['Coding', 'Web Development', 'The Iron Yard', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@dexmills/stressed-17b45b1b6ca8,0,[],0,0,dex,M,0.0,1.0
Rick O'Donnell,"Founder & CEO, Skills Fund",Growth phase consolidation in coding bootcamp industry?,2017-07-14 15:34:21,medium,"Growth phase consolidation in coding bootcamp industry? Kaplan announced yesterday they are shutting down Dev Bootcamp because since they bought D B C in 2014, they’ve tried to find a model that maintains quality, increases access, and is profitable. After several years, 3, 000 graduates, and many attempts, Kaplan was unable to find a viable business model. Darrell Silver has an interesting perspective on innovation in higher ed and why Kaplan struggled to accomplish this: “ Dev Bootcamp got acquired too early. Now it’s out of business. ” D B C is a great brand as an early pioneer of coding bootcamps and Kaplan certainly has the balance sheet to keep investing in it. Thus while shutting it down is surprising on one level, on another it’s expected. Skills Fund works with more than 50 bootcamps and we've been forecasting for sometime that a consolidation wave is coming within the bootcamp industry. There are just too many schools for them all to be profitable. Consolidation in growing industries happens all the time — from retail banks to airlines to gas stations to E R P software firms, industries with increasing customers and revenue often go through a consolidation phase on the path to profitability and sustainability. Additionally, history is rife with early products and companies not ultimately winning. D B C may have been one of the original bootcamps, but like betamax, Palm’s Trio, Friendster and My Space, Netscape, and Ti Vo, early pioneers often get eclipsed by later movers ( V H S, i Phone, Facebook, Explorer, cable company D V Rs). With employers still needing to fill millions of tech and middle skills jobs — and innovation going to continue creating whole new categories of jobs for which people will need to get skilled — the bootcamp industry overall should continue to see enrollment growth for years to come even as it consolidates. Skills Fund is committed to supporting Dev Bootcamp’s team members and students throughout the coming months and will serve as a continued resource for those prospective students interested in pursuing a web development accelerated learning skills training program.","['Codingbootcamp', 'Higher Education', 'Edtech']",https://medium.com/@RFO1/growth-phase-consolidation-in-coding-bootcamp-industry-18a70a21e21e,0,['Dev Bootcamp'],1,8,rick,M,0.0016544523150077207,0.9983455476849923
Alex Hallam,,Learning Web Development Can Be Daunting: Don’t Give Up!,2018-04-04 20:14:11,medium,"Learning Web Development Can Be Daunting: Don’t Give Up! If you’re considering learning about web development and want to know what it’s like, then bear with me as I share my very short-lived (but ongoing) experience of being enrolled in a web development bootcamp. Recently I enrolled in Bloc’s web developer program. Five weeks ago to be more precise. Five weeks ago I knew nothing ( N O T H I N G!) about web development. I still have a very long way to go. I often wonder whether I will ever “get it”. Sometimes I feel overwhelmed given how much there is to learn about web development and how much work is involved in learning it. There’s a rabbit hole in the world of web development that is quite daunting in its depth and scope. As I slog through this program, there’s a certain level of frustration, impatience, and uncertainty that always hangs in the background of my mind, and it consistently taps me on the shoulder and waves to me in order to remind me that it’s still there. Every. Day. So, why do I persist? Why not give up and drop out? Well, I earned my Ph D in philosophy not long ago, and I realized that if I can do that, I can do web development too. From the very beginning of my Ph D program I doubted my ability to understand and do philosophy. Yet I did it. Philosophy is hard. Really hard. Talk about a rabbit hole. But like any discipline, you don’t have to know everything to be good at it. Everyone in every discipline specializes: physicians, historians, engineers, physicists, lawyers, and so on. Nobody can master their chosen discipline in its entirety. The same applies to learning philosophy. So, with respect to web development, one thing I do to assuage my frustration, impatience, and uncertainty, is to remember that I don’t have to learn everything there is to know about web development to get good at it. So, that’s a relief! Another important lesson my Ph D program taught me, and that I apply to learning web development, is that learning complex concepts, processes, procedures, etc. , takes time and you cannot and will not learn them all at once. Small moves. Tiny steps. Learn one thing at a time. Let your learning build over time. Things you didn’t understand two weeks ago will suddenly make sense. You’ll just suddenly find yourself ‘getting’ things. The more you expose yourself to a particular subject matter, the more cognitive connections you’ll make and, consequently, the more you’ll begin to understand the complexities and nuances of concepts and procedures you thought were beyond your capacities. If I had given into frustration, impatience, and uncertainty, I never would have earned my Ph D in philosophy and my life would be far less rich. The same thing applies to studying web development. One of my favorite philosophy quotes is: “all things excellent are as difficult as they are rare” — Baruch Spinoza, Ethics So, don’t give up! You won’t regret it.","['Web Development', 'Coding Bootcamps']",https://medium.com/@alexhallam75/learning-web-development-can-be-daunting-dont-give-up-ac69e3d3dbf3,1,[],0,0,alex,M,0.031470551299761396,0.9685294487002386
Kalen Hammann,,"A New Beginning, Part 22 – Kalen Hammann – Medium",2017-08-07 12:51:18,medium,"A New Beginning, Part 22 W E E K 22: Already?! It kind of snuck up on me. I was so busy doing Katas from Interview Cake and finishing Firehose Lessons and getting things working on the Wookie chess app that I could hardly believe it when all at once we were having our last agile team meeting. I’d solved some cool problems — like how to make castling work as soon as the person moving had let go of his king ( Since this is the only time the king moves two spaces at once I told the program to check that the move was legal and then if it was, to magically move the rook into place as well). I’d figured out how to convert the information we were tracking into algebraic notation and print out the moves the players had made. And then suddenly there was no more time to do the other things I’d had in mind. Our team leader, Jacob, told us that this is a common experience when it’s time to ship code: there often just isn’t time to complete all the functionality people had originally hoped or intended to include. But the most important parts were done, and we all felt good about what we’d been able to accomplish. You can check it out yourself here. Then I had my last session with my mentor, going over some tricky challenges and some last minute job advice (find someone you know who can introduce you to a person working at a company you’re interested in!). And T H E N it was time for… Graduation! No marching across a stage. No hearing a commencement address. In fact, I was concerned that there might be no external sign at all that I was graduating… until about 1:30 in the afternoon when I got a warm email from the folks at The Firehose Project with a wonderful attachment: My Certificate of S U C C E S S F U L C O M P L E T I O N O F T H E F I R E H O S E S O F T W A R E E N G I N E E R I N G P R O G R A M! Kari and I had a great dinner at Hellas, a marvelous Greek Restaurant in Tarpon Springs to celebrate… And T H E N it was time for the really critical work to begin!( More to come… !)","['Web Development', 'Codingbootcamp', 'Code Review', 'Programming', 'Productivity']",https://medium.com/@kalen7/a-surprising-career-change-part-21-fa6e4329ff83,0,[],0,5,kalen,M,0.2631194002559883,0.7368805997440117
Rebecca Townsend,Software engineer & challenge seeker.,An Unofficial Guide to Doing a Coding Bootcamp - Part 3: Preparing for Success,2018-08-12 17:23:42,medium,"An Unofficial Guide to Doing a Coding Bootcamp - Part 3: Preparing for Success I currently work as a software engineer for a tech company in San Francisco, on a team that builds mobile apps with React Native. It’s a dream job, especially for someone like me who discovered my passion for coding pretty late in the game. Since successfully making the transition from analysis and non-profit management to software engineering, I’ve been contacted by many people who are curious about doing the same thing. They all have a lot of the same questions as each other, and a lot of the same questions I had when I was starting out. I’ve loved sharing my experience with them, and I thought it might be helpful to put it out as an ‘unofficial guide’ for anyone else who’s got the same questions. This post is part of a multi-part series, so if you haven’t already, check out Part 1: Fundamentals here, and Part 2: Choosing a Bootcamp here. Now that you’ve decided to do a coding bootcamp, you might be wondering just how much, and exactly what, prep work you should be doing to make the most of your bootcamp experience. My suggestions are from the perspective of having done a rather fast-paced, fully immersive program, but I believe they are largely extensible to different program formats. Get your ducks in a row. If you’re attending a fully immersive, full-time program, one of the most important things you can do to ensure your success is to remove anything that might be a distraction. For me, this meant making sure all of my bills were set up for auto-pay, that I had a guaranteed place to live, and that I didn’t have any appointments or events to deal with. I even made a detailed plan for what meals I would eat during the next 3 months (which I very quickly abandoned). It was also very helpful to me that my friends, family, and my partner knew what I was doing, and were supportive of me. I essentially dropped off the face of the earth during my 3-month bootcamp — I barely had any time to talk on the phone, let alone travel or hang out with people. I was so glad that I shared my expectations with my friends and family, because they didn’t pressure or guilt me into being available during that period of time. Set up your code environment. Online code editors like repl. it are great for learning and practicing, but in order to build comprehensive programs, you’ll need an I D E ( Integrated Development Environment). Get comfortable writing, running, and debugging code in an I D E before you get to bootcamp. If your program recommends an I D E, use that! Otherwise, V S Code is a popular and free option from Microsoft that a lot of developers like to use. Whatever you choose, having your environment set up will help you hit the ground running on day one. Get comfortable with the command line. As a programmer, you’ll use the command line to navigate between directories in your code base, to install and modify dependencies and packages, to build your programs, and so much more. You’ll have a much easier bootcamp experience if you’re already familiar with the basics of using the command line for navigation. To get started, here is a really handy cheatsheet of command line commands from Git Tower — the commands under “ Directories” and “ Files” are especially useful. Familiarize yourself with Git and Git Hub. Professional developers use Git (most often with Git Hub) to manage different versions of their code and to collaborate on code with other developers. Before starting a bootcamp, create a Git Hub account and practice the basics:create a repository (aka “repo”)fork a repositorystage code changescommit code changespush commitscreate branchesmerge branches and commits If that sounds like gibberish to you (don’t worry, it sounded to gibberish to me too once upon a time) check out this fantastic intro to Git tutorial to get started. Know your fundamentals. Even if your bootcamp teaches a language (or languages) from the ground-up, it probably does so at a pretty fast pace. I found it extremely useful to have solid understanding of the fundamentals of my language before starting my program. I was able to follow the curriculum with more ease, and to build on my fundamentals knowledge with more complex computer science concepts that I needed to understand for job interviews down the road. If you’re attending a web-focused bootcamp, you should also be comfortable with the basics of H T M L and C S S. My bootcamp didn’t teach these concepts at all, and knowing them well beforehand made a huge difference in my ability to dive into front-end frameworks without getting hung up on user-interface styling. I can’t speak to other languages, but if you’re studying Java Script, I highly suggest the following resources to prepare thoroughly: Eloquent Javascript, chapters 1–5 (or at least 1–4) Java Script — Understanding the Weird Parts H T M L and C S S Basics Treehouse Course Relax. A few weeks before my bootcamp started, the reality of what I was about to commit to for the next 3 months started sink in. The months of excited anticipation I’d felt gradually morphed into anxious trepidation — I didn’t know exactly what to expect, and despite all of my preparation, I worried that I was missing some fundamental knowledge. Doing everything I talked about in this post will help to ensure that you’re ready to crush your bootcamp from a technical perspective. That said, the most important thing you can do to ensure your success is to relax, trust in your work-ethic, and keep doing your best. You got this. Good luck getting ready for your bootcamp! Keep an eye out for Part 4: What to Expect from your Bootcamp Experience, coming soon.","['Software Engineering', 'Codingbootcamp', 'Guides And Tutorials', 'Hack Reactor', 'Coding']",https://medium.com/@rtownsend/an-unofficial-guide-to-doing-a-coding-bootcamp-part-3-preparing-for-success-67152457b39,0,[],0,53,rebecca,F,0.9971803645500265,0.002819635449973499
Shaylee Hansen,-WordPress Developer-Wife-Baker-and-doggieMom(#brusselsGriffon),V-SCHOOL ( a.k.a Coding Campus) : Day 3 – Shaylee Hansen – Medium,2015-10-01 07:23:20,medium,"V- S C H O O L ( a. k. a Coding Campus) : Day 3~ Today~ Just so ya’ll know today was a waaaay better day. I felt like I connected with my fellow classmates. We went out to lunch as a class with our wonderful Marketing Coordinator at a local restaurant that serves Pho’ ( I had Spring Rolls ;) ). After class for Career Prep we had a speaker come and talk to us about Imposter Syndrome. The speaker did a great job and was very relatable with his true life examples. After class I went to the Provo J S users group. There were A L O T of guys. Normally it isn’t wierd for me to be the only girl among guys but I have to admit, it was kinda weird. Qualtrics hosted the meetup and I must say it looks like an awesome place to work. I was really impressed(got a sweet swag t-shirt and free dinner from Chick- Fil- A ). I had to leave early so I wouldn’t miss my train ( yeah, yeah blah, blah train ), but I enjoyed the meetup group and wouldnt mind going again in the future. ~ What I’ve Learned ~ This next part is mostly for me. ( So If you don’t want to hear about technical mumbo jumbo you can stop reading ) I’m writing this so I can track my progress and refer back to it in the future… when I’m a high and mighty web developer (ha, ha). To catch you up/me up… D A Y O N E: Day one was all about introducing us to our file system. Did you know the Unix system is basically a file system? I didn’t until the other day. So I consider myself a Unix user based on the fact I own a Mac and practice web development ( he, he ). We also went over intial setup, which involves setting up the Apapche server, My S Q L and php My Admin( I think I mentioned this the other day). I learned that the commands cd ~ takes you to the “home” directory ( user stuff )and cd / takes you to the root directory, which is your root file system. Typically not a place for general( non-web developing) users. I also learned about permissions. I thought those were really scary at first until I reviewed them later and realised that they are pretty cool. For example, if you want to make a file so that everyone can access it, read it, and write it then you would type the command chmod 777 file. txt (whatever your file name is). If you want someone to only read your file then you can type chmod 444 file. txt. I H A V E S P E C I A L P O W E R S T O C H A N G E Y O U R F I L E S!!!! D A Y 2: Day two was the day we set up our first django app( I know I mentioned this yesterday because it sucked!!! ) The biggest take away from yesterday was that you have to install django into every project you create. It’s not something that you install once and you are done. The same goes for your virtual enviroment unless you create a project file that holds the virtual environment and base all your projects out of that directory. So that was kind of sad, mostly because I had installed django on my root system when I was goring through both django tutorials on my own which totally messed up what we were learning how to do in class and is what caused so many…issues. I also learned how to turn the virtual environment on. The command you use to turn it on is workon project(directory) We also learned about the M V C or in django terms M T V ( hell yeah! ). M V C and M T V acronyms stand for model view controller and model view template. They are essentially the same thing but here is how it works in Django. Model is based on models. py, view is the django template and controller is views. py. So basically we are updating 3 or more files at a time for every projects to get a web app going. D A Y 3: Day three (today ) was about relationship fields and the beginning of the “view”. Relationship fields are fields that don’t contain data but reference data on other models(whaaaatt!!!). I learned the process of inputting info into the database on php My Admin. You do the following when you are making a change to the model: 1) . /manage. py Makemigrations 2) . /manage migrate. You will want to run migrate after to update your database. On a less technical notes, I started to notice patterns and make connections on how to put pieces of the Django code together. For example everytime you make a class in model. py you have to make the same classes in admin. py That’s all folks!!! Until tomorrow…( Oct 1st, 2015 ) Originally published at http://shayleehansen. com/","['Django', 'Learning To Code', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/@HansenShaylee/v-school-a-k-a-coding-campus-day-3-b58edb5bfc82,0,[],0,0,shaylee,F,1.0,0.0
Oscar Wasil,,7 Restful Routes – Oscar Wasil – Medium,2018-05-27 19:44:14,medium,"7 Restful Routes7 R E S Tful routes are one of the most useful programming conventions out there. It helps you remain conscious of your controllers, and it really should help you keep them limited to seven actions. Below I’ll give a brief overview of the seven Restful routes. As an example we’ll pretend we are working with a photo application I N D E X Index would be the controller action while the H T T P verb is G E T. This would be used . for displaying all photos. get ‘/photos’ => ‘photos#index’ N E W N E W is the controller action and the H T T P verb would be G E T as well. This would return a H T M L form for you to be able to create a new photo. get ‘/photos/new’ => ‘photos#new’ C R E A T E C R E A T E is the controller action, H T T P verb is P O S T and this would allow you to create a new photo. post ‘/photos’ => ‘photos#create’ S H O W S H O W is the controller action, H T T P verb is G E T. This will display a specific photo. get ‘/photos/:id’ => ‘photos#show’ E D I T E D I T would the controller action, and the H T T P verb is G E T, yet again… Anyways this will return a H T M L form to edit a photo. get ‘/photos/:id/edit’ => ‘photos#edit’ U P D A T E U P D A T E is the controller action, and the H T T P verb is P A T C H/ P U T. This allows you to update a photo. patch ‘/photos/:id’ => ‘photos#update’ D E S T R O Y Destroy is the controller actions, while the H T T P verb is D E L E T E. This would of course allow to delete a photo. delete ‘/photos/:id’ => ‘photos#destroy’ Above I also added in Ruby code examples to add some visual assistance. Learning the routes will definitely help you organize your code not just for yourself but it will help make sure all developers are on the same page and help you focus on your app, and how to customize it instead of thinking how to setup your pages and routes. A big plus is also being able to setup a new app fairly quickly and easily.","['Ruby on Rails', 'Ruby', 'Coding', 'Codingbootcamp', 'Restful Api']",https://medium.com/@Fazza92/7-restful-routes-d573e6c09d5c,0,[],0,0,oscar,M,0.0053524621325809875,0.994647537867419
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 39 – Chingu – Medium,2017-07-31 06:02:11,medium,"Chingu Weekly Vol. 39 Project showcases, new people getting jobs, and another zany edition of Overheard in Chingu! Screenshot of daft. so. wow’s Inspire Bot! News & Random— Congratulations @dianastanciu for getting a full-time Front-end dev role!— Congratulations Ofem Eteng for getting your new job as a Machine Learning Engineer!— Thank you to everyone who participated in the Beta- Testing of Devgaido! It’s so awesome to see everyone working together to improve this very ambitious open-source project!— Speaking of open-source projects, this week we’ll also be beta-testing the Pair- Programming bot made by Daniel Segovia and Abigail (agathalynn) so keep your eyes out in #chingu-news for that! :) Overheard in Chingu Let’s plan a meeting next week when I get back from Vegas[ Google hangouts?] There’s also skype. Disclaimer though, if the baby starts crying I’ll have to listen and mute til he settles down. Commitment is one thing, but I think you also have to be a little fearless. Inspire bot says “ No matter how brilliant your mind or strategy, if you’re playing a solo game, you’ll always lose out to a team. ” - Reid Hoffman Great! if we have trouble communicating in English, Chinese could be a backup 🙂 Me too. Now I’m constantly checking what branch I’m on. ahhhhhhhhh we decided on a project!!! divided the tasks more and now got some A P I to read up!! this is fun!!! and scary at the same time 😂 Instead of studying for my final I went and got a pedicure. Because…. priorities. The trick is — don’t look at the whole thing, just look at the “next thing”. You can see the rest of this week’s Overheard in Chingu edition here. Shout-outs & Showcase@benjaminadk — Ben Brooke made this video tutorial called Slack Bot 101 For the Chingus!@spences10 — Scott Spence put together this nice “cheat-sheets” repo (for git, npm, yarn, hyper, now, graphcool)!@cbchien — Check out Brian Chien’s portfolio!@daft. so. wow — During launch weekend for Voyage, Steve went on a building tear! First he built Inspire Bot (as seen in this issue’s cover photo above). Then he saw Andrés Pérez speaking a bit of German in in Voyage and next thing we know, there’s now a Translate-bot! (translation A P I is Watson, I B M’s A I). @ziggysauce — ziggysauce wrote an article about completing the Local Weather app!@ B U I L D- T O- L E A R N — Khaled Allen & @awareness481 — @khaledallen and @awareness481 built this really cool app called Latex- Notes!@ B U I L D- T O- L E A R N — @smhrjn & @leovcunha — Check out this B2 L Web- Notes App in Vuejs!@ B U I L D- T O- L E A R N —@m-madden, @jaredabel, @pharaohlxvi — This is such a great idea for a B2 L project! From the excellent repo:“ Our target audience is a small group of animal lovers, and animal advocates in Donelson, T N who voluntarily rescue lost and stray animals in the city. There will be an open door for similar groups in the surrounding area. ” Check out the Lost & Found Pets app for Donelson here. @ B U I L D- T O- L E A R N — @pankaja & @leofis — Pankajashree R & @leofis recently finished Intro Bot, a slackbot that’ll help you get to know your team-mates (and also has a helpfulness score)!from Intro Bot’s landing page@jlouzado — Joel Louzado wrote this nice article on the importance of taking a breather called Breathe before you need to.","['Slack', 'Chingu', 'Freecodecamp', 'Codingbootcamp', 'React']",https://medium.com/chingu/chingu-weekly-vol-39-af97d355ed4c,0,[],0,23,chance,M,0.024461428631419813,0.9755385713685801
Henri Pietilä,,Hello World – Henri Pietilä – Medium,2017-08-11 19:03:15,medium,"Hello World This is my journey, On August 21st I will be leaving the San Fransisco traveling to Jordan to work at Re Boot Kamp to teach Java Script and Software engineering soft-skills to a class of 50% women and 50% refugees. I will be putting everything I have learned in the last three months and more to use. Join me over the next 3 months, as I:-travel. -teach. -build. -create. -learn.","['Travel', 'JavaScript', 'Refugees', 'Codingbootcamp', 'Learning']",https://medium.com/@HenriPro/hello-world-8ea0650bffe,0,[],0,0,henri,M,0.12572922953128143,0.8742707704687186
Spencer Cheng,,Dynamic + Static Libraries Explained – Spencer Cheng – Medium,2017-05-15 05:56:15,medium,"Dynamic + Static Libraries Explained What are libraries in C? A C library is simply a set of functions bundled up into a collection, so we can use them later. C libraries come in two varieties; static and dynamic. Static libraries Static libraries which have been around since the inception of C are like . zip files. They contain a variety of object files ( . o files) containing functions with a table of contents. A ‘librarian’ utility such as ar collects these object files which creates a statically linked library of executables. Static libraries are part of the build environment, meaning that object files are bound to the executable file before execution This means that only the executable file is required in order for the program to run. Some of the drawbacks with static libraries I mentioned in this post include issues dealing with file size and efficiency. Since all object files within a static library are linked to a program during compilation, the resulting file can grow to a large size — we may have linked functions that are not used by the program. If the library code is updated , the programs that use a particular library must be recompiled into a new executable. Additionally, programs with large executables suffer from slow execution times and larger memtory footprints. Dynamic libraries A newer approach to libraries is the dynamic library. Object files can be linked only when they’re actually needed during the execution phase. Let’s explore how to create a dynamically linked library: S T E P 1: Creating object files Well start off with preparing our . c functions in a directory: Next, when we have all of our . c files corralled, it is time to create object code. We’ll use the gcc -f P I C -c *. c command to compile our code into object files. gcc stands for the G N U Compiler Collection which is a compiler system for C. Whenever a dynamic library is loaded, the loader modifies some addresses in the code depending on where the object was loaded. Code that is built into dynamic libraries are position-independent code so that the shared library can be readily loaded into any address in memory. The -c option tells the compiler to assemble the . o files, but not to link them. *. c includes all . c files in the current working directory. Now we have all of our object files ready to be linked: S T E P 2: With all of our object files ready, we are now ready to create our dynamic library. In our directory where the . o files are located, we will run the following command:gcc -shared -o spencerslibrary. so *. o -lc The shared option tells the compile to produce an ‘object which can be linked with other objects to form an executable’ — or simply, a dynamic library. The -o flag allows us the name our library. In this case, I named it spencerslibrary. so. The -l(library) flag searches the the named library when linking. If more than one library is listed, the libraries are searched in the order in which they are found on the command line. We can now test our dynamic library. Step 3: Using our library Let’s create a main file to test our code: In order to enable our dynamic library, we’ll have to add it to our environment. L D_ L I B R A R Y_ P A T H is used by our program to search for directories containing the libraries after it has been successfully compiled and linked and is searched when the program starts. To set our environmental variable, we will execute the following command in bash:export L D_ L I B R A R Y_ P A T H=. :$ L D_ L I B R A R Y_ P A T H We can now run a simple command to test our code: The length of “ Dynamic libraries are fun” is 26!","['Holberton School', 'Libraries', 'Codingbootcamp', 'Coding']",https://medium.com/@spencerhcheng/dynamic-static-libraries-in-c-40cac36939d1,0,[],0,2,spencer,M,0.0317011062408683,0.9682988937591317
Dylan Thorwaldson,Software Engineer,"Day 1: Intros, Installs and Typing Tests – The Road to Code – Medium",2017-08-07 23:18:46,medium,"Day 1: Intros, Installs and Typing Tests Today kicked off my journey through the Galvanize Web Development Immersive Program here in Austin, T X. I was a bundle of nerves this morning, but now that I have met everybody, my nervous excitement has transferred into just plain old excitement! Everyone in my cohort seems so cool and interesting and unique and I just can’t wait to get to know everyone more! We installed several programs on our machines today, including Alfred 3 Atom Spectacle Surge Homebrew Git Node. js Now, most of these programs I already had on my machine, but we mostly just went through the exercise of discussing programming tools and what we would be using a lot of in our time in the program. Other than installing those programs and doing a lot of orientation/get to know you type activities, the only other programming specific item we tackled today was doing typing tests on typing. io. It was really interesting to not just take a typical typing test, but a test that was in a specific coding language. We did ours in Javascript, but there are many other languages available. I look forward to improving my W P M bigtime! The only other instruction we received was to get a lot of rest tonight because we are going to really hit the ground running tomorrow and the rest of the week, which sounds really exciting to me. One last thing I’ll say about today is that I really found value in the “ Learn How to Learn” lecture by our program director Scott Good. He spoke a lot about reflection and the importance of looking back in the learning process. This is what has inspired me to try to write a medium post every day of my program. We will see how it goes, but I am excited to learn a ton and reflect a lot to help retain info. Apparently tomorrow we are diving into the terminal and command line and a couple other things. I can’t wait to wake up in the morning and get started!","['JavaScript', 'Software Development', 'Coding', 'Learning', 'Codingbootcamp']",https://medium.com/the-road-to-code/day-1-intros-installs-and-typing-tests-1949e2d64e93,0,['Galvanize'],1,1,dylan,M,0.03184424790149141,0.9681557520985086
Giannini Charles,,Project 1: Conquered – Giannini Charles – Medium,2018-07-03 18:59:46,medium,"Project 1: Conquered On Friday, me and my teammate scored a very big win in our presentation. For Ironhack, we had project week 1, where we had to create a video game using H T M L, C S S, and Javascript. We were recommended to use the H T M L5 Canvas, and that’s what we did. I chose to partner with somebody to form Team Low Key O P. We created Space Dogfight. From the very day we were assigned the project, we aggressively began working on it. I remember driving from Islamorada to Brickell and rushing into a meeting to receive additional training on Javascript constructor functions and prototypes. Team Low Key O P stayed in that conference room from 3pm until 9pm working on those constructors and developing the first phase of our Space Dogfight. On Monday we ran into merge hell (as I mentioned in a previous post). Tuesday we ran into issues designing motion physics and shooting. On Wednesday, thanks to the use of a no tears guide, we successfully designed the basic shooting architecture and a stable game loop for our game. That guide can be found here. No we didn’t just copy the logic, of course. We had to understand the content of the code and change it in multiple ways, integrating it into our own. On Thursday, we had our first demonstration. I learned previously from the M D C Startup Challenge to have a wireless keyboard, and I used it in our demonstration. You can imagine my cohort’s excitement when I handed a keyboard to our instructor and challenged him to beat us at our own game (he did, to everyone’s shock). Thursday we had our final challenge; the asteroids. We spent hours trying to get the motion logic for our asteroids, but eventually we got them to work. Friday we had our final presentation. In the hours leading up to the presentation, we had multiple feature improvements. Ship motion, laser design, asteroid motion and creation of another asteroid. We were successful, and our presentation full of life. You can see our presentation here. We were amazed at the level of success we had, and we believed that we could truly learn to code. You can play our game here :) Space Dogfight. Here’s to the next round of Javascript; now we’re delving into the M E A N Stack. Best of luck.","['Humor', 'Ironhack', 'Coding', 'Miami', 'Codingbootcamp']",https://medium.com/@12gcharles/project-1-conquered-270d24314480,0,['Ironhack'],1,2,giannini,Unknown,Unknown,Unknown
Shawn Drost,,"(I am the cofounder of Hack Reactor, which is a competitor to Dev Bootcamp, a founding member of…",2017-07-17 18:32:17,medium,"( I am the cofounder of Hack Reactor, which is a competitor to Dev Bootcamp, a founding member of C I R R, and a school with high admission standards. ) This is an excellent article, and it is 100% true that admissions standards have a huge effect on employment rates. We’d like to see C I R R reports include something that is more independent of “inputs” (the students that a school selects to attend) and more focused on “delta”, like “change in salary”. Two things this article didn’t cover: C I R R is a dramatic step forward for the bootcamp industry. Prior to C I R R, there was no industry standard for calculating employment statistics, and in practice, any school could find some way of saying “99% of eligible alumni are employed”. This is not true of any C I R R member. Selectivity has many effects on an educational program, and some of them are very positive. If a smart high-schooler were considering Harvey Mudd and a community college that had a higher “delta”, they might expect to learn more from their peers at Harvey- Mudd. ( As Abi says, “ This could end up affecting under-served groups most and ultimately hurt diversity in the tech industry” — and does, at naively-selective institutions. Some, like H- M, manage to outperform on that axis. )","['Programming', 'Codingbootcamp', 'Web Development', 'Startup']",https://medium.com/@shawndrost/i-am-the-cofounder-of-hack-reactor-which-is-a-competitor-to-dev-bootcamp-a-founding-member-of-72779e18c57,2,"['Hack Reactor', 'Dev Bootcamp']",2,3,shawn,M,0.09843183983323926,0.9015681601667608
Crystal codes,"Wicked cool wife. Serial servant. ISFJ. Whovian. Software engineering student @TheIronYard. Wannabe hacker — ya gotta start somewhere, right?",Taking off the training wheels – Crystal codes – Medium,2017-07-16 17:02:14,medium,"Taking off the training wheels Sometimes, this is what it feels like without an instructor by your side to walk you through why something is (or isn’t) working. Week 3 was a doozy guys. In 24 hours, I was going from a mental high because I answered a problem that had taken me 6 hours — to an all-time low because we moved on to something I didn’t understand. That, my blog-friends, is the essence and beauty of being in a coding school. The ideas that you didn’t understand at all last week, are now so apparent and logical- you can’t N O T know them. And the materials that you’re going through this week… well, you’re kinda like homeboy up there ^^. We started out Monday with going through the Document Object Model ( A K A my boy, ‘ D O M’). It’s a tree-like structure that represents the current H T M L document. For each element D O M finds, it creates what is called a ‘node’ which is just a cute word for a Java Script object. We then dove head first into using our Java Script to write our H T M L. — “ Wait, what?! You can do that?!” ( My words verbatim last weekend. ) Heck yes you can! So then we moved onto event listeners, which allow developers to respond with interactive behavior and to events that occur on the D O M. For example, let’s say that when a user clicks a button, we want to display the date. Check out this little snippet! Credit: w3schools. com In our H T M L, we have a button named ‘my Btn’ that when a user clicks, the date is displayed. B O O M! Pretty cool, huh? We also went through a section on ‘template literals’, which can get a little crazy — but for now, let’s just look at a simple expression: Credit: css-tricks. com In this example, we are declaring the variable ‘name’ to return the string ‘ Ryan’. Next, we’re telling the computer to log (write out) the string using the variable. The time that this saves developers is I M M E N S E! This is also how those dumb spam e-mails are always able to say ‘ Hi Crystal!’ instead of something generic :) We are working our way into algorithms next, which I’ve always viewed as a buzzword in the development world. I can’t wait to dive in! Week 4 — On your mark, get set, G O! Much love ❤ Crystal","['JavaScript', 'Women Who Code', 'The Iron Yard', 'Web Development', 'Codingbootcamp']",https://medium.com/@crystalmcgowan/taking-off-the-training-wheels-da0eae29ea01,0,['TheIronYard'],1,8,crystal,F,0.9964206316603437,0.0035793683396563806
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",Why do students choose Bloc? Alumni and current students give their feedback,2017-06-02 16:33:10,medium,"Why do students choose Bloc? Alumni and current students give their feedback This post was written by Mary Bergeron, Director of Marketing at Switch Up. Bootcamps have grown quickly in recent years, and students now face more choice than ever. According to Switch Up’s research there are over 120 in-person bootcamps worldwide, and many more online programs. The sudden surge is the result of a widening skills gap in tech: the need for talent has exploded in recent years, and employers say there are not enough skilled candidates to meet the demand. A bootcamp can be a great option to skill-up or switch careers, but it is definitely an investment that can be out-of-reach for some: According to Switch Up’s 2016 survey, the average bootcamp runs for 11 weeks and costs around $13, 000. In order to attend, most students face the prospect of quitting their day jobs and using either savings or a loan to fund the program. In response, many students have turned to low-cost or free online courses to start building skills. These courses are helpful, but many lack the one-on-one mentorship and tailored curriculum that students need to land a job in tech. Bloc’s model is unique because it bridges the gap between an in-person and online bootcamp through a mentor-led, flexible program. Reviewers on Switch Up found this approach to be the perfect fit: they were able to schedule Bloc around other commitments, but enjoyed the same level of accountability as an in-person program. Below, we’ve profiled a few stories from reviewers, and the aspects of Bloc that made the program the best choice for them. The course strikes a balance between flexible and rigorous. Students at Bloc tend to take on more than the typical bootcamp student, since many balance the program with other responsibilities. On Switch Up, reviewers talked about their experience juggling the program with work or school. A common observation is that even though the program can be tailored to an individual’s schedule, it covers a lot of ground. One reviewer talked about his experience:“ I would heartily recommend Bloc to anyone looking for a cost-effective route to a new career in the ever burgeoning tech field. I’m only several weeks into the course so far, but I have learned plenty about basic user research, design principles, wireframing in Balsamiq and Illustrator, and constructing interfaces in Sketch. I’m on the part-time schedule (10–15 hrs/wk), which is a great option for people who need to work. I meet with my mentor once a week and it’s a quick 30 mins but we do go through what I’ve worked on that week and he offers his insights. This aspect of the program is probably most valuable, having a seasoned professional to learn from. I know as the course gets more in depth, I’ll benefit even more from having a mentor. ” The program leverages technology to make remote learning easier. One of the biggest challenges of an online program is that it is self-directed, so it can be difficult to keep moving when you’re stuck. Bloc students loved that the online platform is designed to help them keep track of their progress and access feedback in real time. The platform makes it easy to connect with a mentor, track assignments, and complete a final assessment via video chat. One student explains:“ At this pace, I meet with a mentor twice a week for about 1/2 hour via Screenhero (an app where you can make phone calls and also share your screen with the person you are connected with) — wonderful for showing your mentor exactly what you are dealing with on your end! So far I am very happy with the Bloc Curriculum. They split up the program into Modules. Throughout each module there are quizzes to test your knowledge, and at the end of each module you have to pass an assessment (which is like a mock interview via Google video chat) to make sure you have a good enough understanding of the content to move onto the next module. ” Bloc builds in a supportive community. We’ve often heard the criticism that online learning can lack the support system a student needs. Fields like U X design and software engineering are complex, and it’s important for students to overcome challenges quickly with the help of peers and mentors. Reviewers felt that although Bloc is online, it does a great job of building a personal, supportive community:“ I decided that Bloc was the right choice for me. In just seven months, I have been able to begin building a solid portfolio of design and front-end development work. In this time, I’ve also learned how to use approximately a dozen design tools and received extensive one-on-one direction from my mentor, who has been there to help me every step of the way. Whenever I’ve felt stuck on or needed feedback on an assignment, I’ve been able to connect with fellow students and receive feedback within hours, if not minutes. The cost-coupled with the hands-on mentorship you receive and the tools that you are exposed to-has been absolutely worth it for me. There is a tremendous amount to learn, but I absolutely feel that I made the right choice. There is a long road ahead before I’ll be ready to make my mark in the Design field, but I don’t feel that any other program could prepare me for the challenge as well as Bloc has thus far. Highly recommended!” Check out more Bloc reviews on Switch Up! What else do students and alumni have to say about Bloc? Check out more reviews on Switch Up or schedule a call to speak with a Bloc Student Advisor 1-on-1.","['Partnership', 'Tips', 'Coding Bootcamp', 'Happy Alumni', 'Alumni']",https://medium.com/newsonthebloc/why-do-students-choose-bloc-alumni-and-current-students-give-their-feedback-73abd8b2094c,0,[],0,0,bloc,Unknown,Unknown,Unknown
Scott Bowman,,A Simple Solution to the Failure of Coding Bootcamps,2017-08-09 12:32:03,medium,"A Simple Solution to the Failure of Coding Bootcamps Coding Bootcamp graduates are everywhere! According to Course Report, there was a reported total of 2, 178 graduates as of 2013 which quickly grew to 17, 996 by the end of 2016! This is partially driven by an extraordinary job market for web developers. The U S Department of Labor reports that nationwide there will be an estimated 188, 000 web development jobs by 2024, an increase of 27% over 10 years. With that many jobs, you might expect 100% placement rate of Coding Bootcamp graduates, right? The answer might surprise you… According to C I R R ( The Council on Integrity in Results Reporting), an industry-wide initiative to standardize student-graduate job outcomes and retention rates, there are huge gaps between coding schools in their placement rates and reporting. Previously we saw schools providing statistics like this: 93% of our graduates are employed as Web Developers, Software Engineers, etc within X months. The reality is that we often see 40–60% of graduates employed in relevant paying roles within 90 days. That number typically increases to 70–90% within 180 days. Of course, there are some schools that stand as outliers and have managed to break those barriers. But then again any school will tell you they are competitive. The Problem Coding Bootcamps fail to report the struggles their graduates face in transitioning careers. It is a big challenge to quantify this. The truth is that it is a competitive market and Juniors are having a harder time standing out than in 2013. How many times have you seen “ Junior” or “ Entry-level” web development positions requiring experience? Here’s a random sample from Dice. com:1. Jr. Q A Engineer:2. Jr. Full Stack Developer:3. Junior Developer: That is definitely a problem, and it is not isolated only to Colorado. In fact, many schools have only recently expanded their Career Services programs to better address the need for ongoing job support for graduates. Any good career counselor in this industry will tell their students that the key to success is continuing education and networking or bumping shoulders with other professionals. But, this can be a long-term and daunting task (especially for those introverts out there). The Solution: Bootcampers Collective Bootcampers Collective is an innovative new approach to accelerating career outcomes for Bootcamp graduates. We primarily focus on providing hands-on experiences developing live code for the community. The group structure consist of an online and in-person community of other Junior or transitioning web developers with the common goal to challenge themselves with the support of others. We organize Hackathons, or small-to-large team events where participants engage in collaborative web development, often with the goal of building a small business’s website in the span of a day’s work. Additionally members support each other, leverage the community to find coders for their own hobby projects, and generally share information they find valuable. Why is this Beneficial? Remember those job postings listed above? Remember where they wanted 1–3 years of experience for an entry-level position? That is where Bootcampers Collective comes in. Upon graduation from coding school, it is easy to lose a lot of the skills developed simply through failing to use them. Bootcampers Collective keeps your skills sharp. Participants can challenge themselves with a wide variety of projects (some paid) and continue to work together in teams to hone their skills. Bootcampers Collective gives you R E A L, resume-worthy experience. We organize projects like any Dev Shop would. Learn to work in a real production environment with a Sprint and Agile methodologies. Many of our websites are up and live around Denver as we speak. Bootcampers Collective helps web developers adapt to the job marketby employing the latest technologies on our projects. We have a laid-back but focused work culture that reflects local start-ups. Bootcampers Collective provides networking opportunities. Coding is not the only goal. Fun is one of our primary values. We create events that bring our participants together with software companies and professionals around Colorado. We also drink great beer! Bootcampers Collective is a springboard for entrepreneurship. We provide motivated professionals with the skills, structure, talent, and confidence they need to branch out and build their own ventures. Just ask Yakkee. com. Bootcampers Collective is always looking for leadership. Are you a self-motivated professional who wants to give back to the communities of Colorado? We provide the structure for members to present on a topic they find fascinating and with the opportunity to lead projects and study groups. Every individual has something unique to contribute to B C. Last but not least, Bootcampers Collective provides career coaching. We develop educational events that help answer the trickiest career questions our members face. We also have a professional on staff to provide career assistance. The Future As Bootcampers Collective grows, we have been collecting feedback about our members’ needs and adapting to meet these. Some major areas we have focused on are developing talent pipelines into local software companies (yes, we have successes), developing a mentorship program, and expanding our Career Services offerings. Moreover, we want to guarantee a paid role to each of our members who need the experience. This will happen sooner than expected! Keep your eye out for updates. Conclusion Junior Developers and Bootcamp graduates these days face an increasingly competitive job market that is growing without any regard for the barriers-to-entry in this volatile field. Bootcampers Collective is here to address that by providing job seekers with the experience, support, and continuing education they need to successfully bridge the gap. Give it a try! All are welcome. For more information visit us online: Slack Meetup About the Author A Career Services professional in Colorado with over 6 years of experience, Scott Bowman recently worked as Director of Student and Career Services for Refactor U, a coding bootcamp in Boulder that started in 2013. Scott led Refactor U’s compliance and placement reporting initiative with C I R R. org in late 2016 and early 2017. Currently working with Bootcampers Collective, Scott continues to provide assistance to those transitioning into Web Development in Colorado.","['Coding', 'Codingbootcamp', 'JavaScript', 'Community', 'Networking']",https://medium.com/bootcampers-collective/a-simple-solution-to-the-failure-of-coding-bootcamps-6a3be8a59a4a,4,[],0,52,scott,M,0.003373535711008196,0.9966264642889918
William A. Mooney,Christ Centered Dev. || Developer || Blogger,7th Week — Vivixx Coding Bootcamp – William A. Mooney – Medium,2017-07-28 08:29:39,medium,"7th Week — Vivixx Coding Bootcamp This entire week has been a blast to work with Rails. I’ve been spending most of my evening’s working on the Twitter Clone project which was started last week. I continued working on the assigned project all throughout the weekend and made a decent amount of progress. At the top you can see my landing page and below it is Twitter 2016’s landing page. I’m very happy with what I have done so far. I worked on this project the entire week and am nearing what I think would be Minimum Viable Product which was talked about last week. Below is a list of the work completed this week on my Twitter Clone project: Setup Modeling for Tweets Displayed Tweets Setup Tweet Form with Form Helpers Styled the Navigation Bar Created a Landing Page Styled the Home Page, Profile Page & Explore Page Worked on Trends & About Sidebars Setup Controllers, Forms, Database Modifications for Followers/ Following Finished the Landing Page Forms & Polished G U I Added Documentation Added Hyperlinks to Tweets & Fixed Related Bug Added Carrierwave & P G Gem Readied for Heroku Deployment Deployed to Heroku The Profile page for my Twitter Clone… Still to be completed: Setup Carrier Wave Gem for file uploading Update the Database for added Profile Features Get the top right Tweet button functional Update the Edit Profile for added features Possibly setup direct messages between Users Many of the basic features of Twitter work but at this time I still have a few thing’s needed to be finished. Most importantly of those is setting up the Carrier Wave Gem for File uploading. Once that is done I will be able to setup dynamic profile banner’s & avatar’s. Heroku Link to Tweeter — Work in Progress This weekend I will be studying Rail’s & working on this project some more. Christ Centered Dev. || Coding Bootcamp Student || Blogger","['Ruby on Rails', 'Coding', 'Codingbootcamp', 'Web Development']",https://medium.com/@williammooney/7th-week-vivixx-coding-bootcamp-990b4decb402,0,[],0,0,william,M,0.0038724765712618,0.9961275234287382
Kingsland - School of Blockchain,The world's first accredited school for blockchain development - Learn more at www.kingslanduniversity.com,BC — Get Paid (Handsomely) to Solve the Industry-Wide Bottlenecks Threatening to Derail Sector…,2018-03-12 23:15:16,medium,"B C — Get Paid ( Handsomely) to Solve the Industry- Wide Bottlenecks Threatening to Derail Sector Growth with Blockchain Author: Moe Levin Private investment in blockchain-based projects topped $5 billion over the past 12 months. Over $3 billion of that was via I C O — initial coin offerings — which represents an increase of 3000 percent over 2016. And the trend shows no signs of slowing. “ We see even bigger achievements on the horizon for 2018, with blockchain becoming a more widely adopted mainstream technology not only in the financial sector but also beyond including retail, logistics and healthcare, ” writes senior economist Carlo R. W. De Meijer in Fin Extra. “ The adoption of blockchain is expected to continue at an even faster pace in 2018. ” And you know what that means: a huge demand for blockchain engineers. Just as the 1990s were the heyday of the web developer, the next few years belong to the crypto architect. Now is the time to parlay your experience with Go, Python and Solidity into a six-figure paycheck. Yeah, that’s right — freelance blockchain engineers command upwards of $150 an hour, while their salaried counterparts are seeing paychecks in the $250, 000 to $300, 000 range — 1. 5 times the median salary of a “regular” developer. “ Blockchain expertise… comes dear. The online distributed ledger technology best known for powering Bitcoin digital currency, is an emerging specialty, ” writes Kim S. Nash in the Wall Street Journal. And while some leading universities such as Stanford and M I T are beginning to offer courses in crypto and bitcoin, “people with deep experience in the subject are scarce. ” That scarcity means high rewards for those who can understand and leverage the technology — or those who are willing to learn how. Why You Should Consider Blockchain But the ability to write your own paycheck is only the tip of the iceberg when it comes to the benefits you can achieve in the blockchain ecosystem. Here are five other reasons why now is the time to dip your toe in the crypto job pool: You get paid well. We hit this one pretty hard already. If you can develop a blockchain application, you’re golden — almost literally. Everyone from I B M to Air Bn B will want to hire you, and if you’ve got the talent, you can pretty much write your ticket. 2. You get great side benefits. If you joined a tech startup pre- I P O, you’d be looking to cash in on the deal when the company went public. The same thing holds true for a pre- I C O startup. As part of your compensation package you could negotiate for tokens that can become hugely valuable after the I C O. Of course, there’s no guarantee. But if you wanted a guarantee, you’d just go work for Big Blue and be done with it, right?3. You get to choose the interesting projects. Forget boring and mundane; think life-changing and the edge of awesome. This is your chance to work on rockstar projects, however you define that. Here’s just a short list of industries you could choose from:- big banks and tech giants. - academics - healthcare- government- agriculture- retail- real estate- consumer electronics- media Virtually every industry is exploring the implications of blockchain. “ Dozens of startups are using the technology for everything from global payments to music sharing, from tracking diamond sales to the legal marijuana industry, ” writes Rob Marvin in P C Magazine. 4. You can save the world. No, really. Blockchain has already been leveraged to create some pretty amazing projects and global initiatives. If you’re the type who’s driven by passion, you’ve got your pick of incredible projects that can let you sleep well at night. Here are just a few blockchain applications that will fulfill the desires of even the most ardent do-gooder:- Food Coin, a global blockchain ecosystem for food and agriculture businesses, which will enable everything from digital I D services to product origin authentication. - Blockchain for Humanity, a partnership between the United Nations and the World identity Network to help combat child trafficking through an immutable identification ledger. - Hydro Miner, an alternative eco-friendly energy source for the energy-intensive cryptocurrency mining business. - Clear Poll, the first blockchain opinion poll system that promises 100% secure and tamper-proof results. - Bit India, a blockchain wallet and crypto exchange for the streets of India which promises “a democratic digital currency platform that gives freedom and power in the hands of the masses. ” There have also been initiatives around eradication of hunger, food chain safety, and the environment. Whatever flag you want to wave, blockchain can help you wave it high and proud. 5. You get job security. In a tight job market, the last thing a company wants to do is to lose talented workers. That means once you’re on board, they’re going to do what they can to keep you happy. And if your project does get killed, you’ll likely find a home inside the organization quickly — or you can hop over to greener pastures elsewhere. How Do You Get Trained? Now that you’re convinced that blockchain is worth a go, your next step is to get the training you need to land the job of your dreams at a salary that will make your mouth water. And here’s the challenge: if it were easy to get up to speed on blockchain, there wouldn’t be a developer shortage. The good news: If you’re a software engineer now, the skills are likely well within your grasp. “ You’ll be surprised at how little of this technology is magic (read: none of it), despite the severe case of buzzword-itis the ecosystem has, ” writes blockchain technologist Matt Condon on Medium. “ If you make a living as a professional software engineer you have the ability to understand all of these projects and technologies at a deep level. ” It’s not the technical aspect so much as access to a standardized curriculum that will be recognized by potential hiring managers. And that’s a little tough with an emerging technology that seems to evolve daily. Sure, you could turn to a weekend coding bootcamp which will take your $1000 and give you a pretty certificate on Sunday afternoon. But most companies and recruiters take claims of such “training” with a huge dose of skepticism. Mark Dinan, a Bay Area tech recruiter, told Bloomberg that many of his clients automatically disqualify coding school grads. “ These tech bootcamps are a freaking joke, ” he said. The solution? Turn to a reputable, accredited university. Traditional institutions like Stanford, the University of Edinburgh, and M I T are starting to offer courses in cryptotechnology and blockchain, but their movement in this direction is slow. To truly “learn” blockchain to the depth you’ll need to create the cutting-edge projects companies dream of, the choices are few. In fact, there’s just one accredited institution in the world that offers certification in blockchain, and that’s Kingsland. Kingsland University — School of Blockchain is the world’s first and only accredited blockchain training program. The award-winning Kingsland University uses its decade of experience in innovative educational programs to equip professionals who want to take part in building the future on top of the blockchain. Through Kingsland, you’ll learn the practical skills you need to succeed in your career. And then with Kingsland’s H R advisory, you’ll get help locating the position of your dreams as well. For current developers who are eager to step up and claim their spot in the blockchain ecosystem, Kingsland University is your best option for a bright, blockchain enabled future. Moe Levin is responsible for the first global bitcoin conference in Amsterdam and is the founder of the North American Bitcoin Conference as the C E O of Keynote — a global events company. Levin serves as an advisor and board member for a number of blockchain companies including Unsung and R S K Labs. He is also a Co- Founder of Kingsland University — School of Blockchain, the world’s first accredited blockchain training program. To find out more about how the Kingsland University — School of Blockchain. Find out more about Kingsland’s leading-edge education at Kingsland University. com","['Blockchain', 'Developer Shortage', 'Coding Bootcamp']",https://medium.com/kingsland/bc-get-paid-handsomely-to-solve-the-industry-wide-bottlenecks-threatening-to-derail-sector-5624185cdbe3,2,[],0,192,kingsland,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 40 — All The Beauty In This Whole Life – conshus – Medium,2017-05-05 11:27:08,medium,"Day 40 — All The Beauty In This Whole Lifeliner notes: So yeah, yesterday was pretty awesome. I think React J S finally really “clicked” with me. It took incorporating it with Firebase to get the idea of “states” and setting them to get the app to behave the way you designed. Now I think the trick now is to figure out how to get the features I want to incorporate into a project using what basically amounts to html, css and vanilla javascript since React J S seems pretty restrictive and opinionated. It will be an interesting challenge when I redesign my personal site. Later in the day, I went to a mixer/workshop hosted by Purple, Rock, Scissors and Valencia College as an into to their P R P L Academy series. It was great to be around so many creative people from different backgrounds. Definitely looking forward to the next one. The new Brother Ali album “ All The Beauty In This Whole Life” is out now and it’s as great as I hoped it would be. You will be hearing many of these tracks on upcoming episodes of O U R show (k N Ow B E T T E R H I P H O P. com) Going to go back to try and keep the awesome going into the weekend. Oh and it’s F O O D T R U C K F R I D A Y! Make it a great one. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['React', 'Hip Hop', 'Coding', 'Codingbootcamp', 'Brother Ali']",https://medium.com/@conshus/day-40-all-the-beauty-in-this-whole-life-8dd12fac0fd9,1,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
chibueze ukaegbu,,LF Internship 2018: Code of Conduct – LearnFactory Nigeria – Medium,2018-05-07 18:14:27,medium,"L F Internship 2018: Code of Conduct To guide us and our interns towards achieving the best from this period, we put together a Code of Conduct, which is just an extension of what we use here internally. We believe that this will help us not just be better persons, but also maximize our potential. Below, we have included the Internship Creed and Code of Conduct, with the exception of the Non- Disclosure Agreement. We hope others find it useful. T H E L E A R N F A C T O R Y I N T E R N S H I P C R E E D· Respect Others, it builds up who you are. · Collaborate, teamwork beats going solo. · Don’t Compete; it reduces the value on you. · Teach Others, you are never taller than when you bend to help others up. · Be Humble, the greatest stoop to conquer. · Work Hard, hard work pays handsome rewards. · Be Curious, it opens your mind to limitless possibilities. · Ask Questions, you can never know it all. · Be Bold, courage conquers fear and opens doors. · Laugh at Yourself, it reduces the pressure to be perfect. · Be Simple, pride goes before a fall. · Be Truthful, trust builds lasting relationships L E A R N F A C T O R Y I N T E R N S H I P C O D E O F C O N D U C T While attending school during regular hours or during school-sponsored activities, students are expected to follow these basic rules, procedures, and expectations:1. G E N E R A L· Your first priority in the internship is to learn. Avoid distractions that interfere with or are counter-intuitive to that mission. · Be in the assigned place with appropriate materials, ready to work at the designated time that class begins. · Keep hands, feet, and objects to yourself and never intentionally harm another student. · Use school appropriate language and behavior at all times while maintaining friendly and courteous behavior. · Be polite and respectful to everyone including students, teachers, administrators. · Follow individual teacher instructions, class rules, and expectations at all times. · Do not be a bully. If you see someone being bullied, intervene by telling them to stop or immediately report it to Learn Factory Nigeria personnel. · Do not become a distraction for others. Give every other student the opportunity to maximize their potential. Encourage your fellow students. Never tear them down. · Internship attendance and participation in class are an essential part of the educational process. Regular attendance at school is necessary for student success. Furthermore, it allows students to achieve the maximum possible benefits from their educational experience. All students are encouraged to be present and prompt. Internship attendance is the responsibility of both staff and students. · Represent yourself in a manner that you will be proud of in ten years. You only get one opportunity to get life right. Take advantage of the opportunities you have at school. They will help you be successful throughout your life. · Cleanliness is next to godliness. The environment must not be littered with dirt from snack or food wrappers. · All interns must adhere to all instruction given to them and perform all task assigned to them by their superiors. · Absolute respect must be given to your teachers; they are making huge sacrifices to train you. · All given tasks must be completed to submitted on the stipulated time. · Anyone who damages any company property will be surcharged; such properties should be replaced immediately. · No immoral behaviors allowed in office. · Absolute decorum must be observed in the office at all times. · Work Hard, hard work pays handsome rewards. 2. D I S C I P L I N E· To achieve our goal, we have very strict disciplines. Observance is mandatory for everyone. This is akin to a military bootcamp. · An intern that flouts any of aspect of the Code of Conduct gets a strike against himself/herself. · After 3 strikes for phone offences within a month, such an offender will be dropped from the program with immediate effect. · Any intern that misses 3 classes in a month due to lateness, amounting to 3 strikes, will be dropped from the program with immediate effect. · Fighting, quarreling or abusive exchange of words are not acceptable. Each instance amounts to 3 strikes and offenders will be dropped immediately without reconsideration. 3. P H O N E E T I Q U E T T E· Once lectures commence, every phone must be put on silent mode. If anyone’s phone rings aloud during lectures, that is counted as one strike against the person. · No intern is allowed to excuse himself from class to answer a phone call. Failure to do so counts as one strike against the offending intern. · No intern is allowed to be looking at his phone once lectures is going on; all attention must be given to the teacher giving the lectures. Failure to comply counts as one strike against the offending intern. 4. T I M E A N D A T T E N D A N C E· Lateness is not acceptable. · Our day begins by 8am and runs till 6pm, Monday to Friday. Every intern is expected to be on premises by 8am. A grace window of 10 minutes is given for late coming; by 8:10am, the doors will be locked. · Any intern that comes late will miss the class for the day. Each lateness or missing of class counts as 1 strike. · R O A M I N G A B O U T I S N O T A L L O W E D. Once class resumes for the day, no intern is permitted to leave the premises till the close of the day or during the break period. Failure to comply counts as 2 strikes· Break period is from 1–2pm. Interns are allowed to go off the premises during this time, but must be back by 2pm, as classes resume immediately. A maximum of 10 minutes’ grace is allowed. · Any intern who fails to return within the stipulated timeframe for the break period will not have access to the class for the rest of the day and it will be counted against him as 1 strike. 5. P E R S O N A L R E L A T I O N S H I P S· Disagreements must be handled maturely. No fighting, quarreling or abusive exchange of words are acceptable. Offenders will be dropped immediately without reconsideration. · The company must not be over crowded with family and friends. Visits are allowed during break periods only. · Visitors are restricted only to the waiting room; failure to observe this attracts disciplinary action6. G I V I N G B A C K· Learn Factory Nigeria is making a huge investment in each intern. 3-month software training courses not as feature rich as ours cost about #350, 000. 00 and above in Lagos and other areas. Equivalent training program to ours cost in the range of $3, 200. 00 to $15, 000. 00. · It is required that interns give back by committing between six and eighteen months as a contract developer to Learn Factory Nigeria; most of which would be as remote developers. Such interns will be paid going rates during this time of service. Outstanding interns will be offered permanent employment opportunities with Learn Factory Nigeria or our partners. 7. S O C I A L M E D I A To raise adequate awareness of our program, there is a need for constant and regular presence on social media. To this end we require that every intern:· Create an account on Medium and send us his/her account name. We will add you up as an editor to the Learn Factory Medium page. · Every day, you are required to write a brief summary of your experience on Medium, along with pictures to back it. You will also share the above on your Facebook, Instagram, Twitter and Whats App accounts. · On Facebook, send us a friend request and we will add you to the Learn Factory page. When sharing your post on Facebook, remember to tag Learn Factory along with your fellow interns and friends. That’s all of it. Hope it’s helpful for a team out there. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'Code Of Conduct']",https://medium.com/learnfactory-nigeria/lf-internship-2018-code-of-conduct-6de42a32d7d,2,[],0,100,chibueze,M,0.0,1.0
Justin Ross,Software Engineer and Dog Evangelist.,"What Inspires Someone to Pay $20,000 to Enter a 12-week Coding Bootcamp?",2016-06-04 19:32:23,medium,"What Inspires Someone to Pay $20, 000 to Enter a 12-week Coding Bootcamp?“. . investing your literal life-savings in a 12-week crash course on the promise of creative freedom and a six figure salary. ” Turn away from the onslaught of the 40-hour work week; sell everything you own, and uproot. Now triple your rent, quarter your living-space, and take out loans so you can invest $20, 000 in an unaccredited 12–week software development bootcamp. In exchange for these sacrifices, you receive a vague promise and hopeful flashbacks of price equilibrium learned in early economics courses from college. The promise — you’ll leave the program in true competition with credentialed software engineers exiting 4-year degrees from prestigious universities. Self-governed outcome statistics Conventional wisdom tells us: “ If it sounds too good to be true, it probably is. ” This is the reaction you grow to expect in the conversations that ensue as you toy with the idea. This is the reaction you have yourself as you ponder investing your literal life-savings in a 12-week crash course on the promise of creative freedom and a six figure salary. This is the first stage of what I like to call the “ Hack Reaction” — derived from the Hack Reactor coding bootcamp. Like all good multi-step programs, it starts with denial, has an acceptance stage somewhere in the middle, and proceeds to reflection and, ultimately, life-altering decisions. As I consider comma placement in the paragraph above, the Hack Reaction unfolds not fifteen feet in-front of me. A future Hack Reactor student explains his endeavor to an older-looking C S E tutor giving a lesson across the table. The tutor dismisses the student’s investment in the program as a waste and suggests that, as a graduate of such a program, his abilities would be derelict. What, then, truly inspires folks to leave the comfort of the life they have built for such uncertainty? The impetus behind the final stage of the Hack Reaction is different for everyone. For me, there are a number of factors that led to my eventual leap of faith. Lifestyle — I have chosen to define my future by the feelings I want to experience. This new definition has led me to understand a desire for expressive freedom. My mind teems with ideas. I yearn to join the proverbial conversation, and the only thing standing in my way is a knowledge of software development. Community — The tech community exists on a foundation of inclusion and diversity. There is universe of free assistance, mentorship, and encouragement. Speed — Software engineering has me sold, but I don’t want to wait until 2020 to receive a B. S. — I can see my dream, and I have decided to start living it today. Focus — I’m interested in robust web-hosted applications, and I realize the value of focusing my efforts. Employment — Gaining employment in a new field is daunting and difficult. — Hack Reactor will train me on the methods they have found empirically effective. Rigor — In order to embrace my dream, I must devote all my time to it. Hack Reactor delivers structured curriculum requiring 11–14 hours per day, six days per week. Relativity — Time is relative — The feeling of a distant morning is a thing of beauty. My first session starts 41 hours from the publishing of this draft. Check back soon for updates on the Hack Reaction stages to come. I challenge you to respond with your inspiration for attendance or any questions you might have for a current attendee.","['Codingbootcamp', 'Higher Education', 'Software Development']",https://medium.com/@JustinTRoss/what-inspires-someone-to-pay-20-000-to-enter-a-12-week-coding-bootcamp-301ceccb1b5b,2,['Hack Reactor'],1,2,justin,M,0.00487975038744523,0.9951202496125547
Marshall Pritchett,,Path to Programmer: Chapter 3 – Marshall Pritchett – Medium,2018-07-10 15:03:50,medium,"Path to Programmer: Chapter 3 Hey you know that stuff you just started learning? Yeah, the stuff you aren’t really comfortable with yet and have almost no real-world experience in using. Its time to find a job using that. So, rewinding a bit — I passed the first module assessment of the Bloc Web Developer Track program with flying colors. Good, right? Well now its apparently time to start showcasing my (lack of) talent. As you progress through Bloc’s program, you get new mentors. Well, my new mentor has informed me that, even though I have no real experience in using Java Script or any of its important frameworks, I should start looking for jobs. The concept is sound. The more time you spend looking, the more results you’re going to find. In addition to this, the more interviewing you do, the more comfortable you get with the entire process. Enter, Imposter Syndrome. I know that I know a good chunk of what I need to know to be a web developer. However, there’s still a lot to learn to be job ready. In addition to this — I H A V E N O C O N T A C T S. When its all said and done, you can call an orange an apple, but it doesn’t change the fact that its an orange. I can call myself a web developer, but I still don’t know enough to do the job. But, despite all of my fears and internal struggles, the fact remains that I need to start looking. So where do I start? Meetups. Local groups of web developers talking about web development on a weekly or monthly basis. What a novel concept, right? Attend meetups, develop relationships, learn new concepts, etc. Its simple and effective. Cold call. Start calling companies, applying to job postings online. The old-fashioned way of finding jobs — looking for open positions. Its not as effective, but it still works occasionally right? When its all said and done, if you don’t try you fail. So let’s get to work.","['Web Development', 'Job Hunting', 'Technology', 'Programming', 'Codingbootcamp']",https://medium.com/@mpritchett516/path-to-programmer-chapter-3-be9a1388be03,0,[],0,0,marshall,M,0.012365503304385822,0.9876344966956142
Ngoc Tina Hoang,,Networking — the right way – Ngoc Tina Hoang – Medium,2018-02-01 05:00:27,medium,"Networking — the right way Be a Beacon — free image from www. pexels. com Me in 2014 : a social hermit — spending most of my social life at home with my family. I did not want to make new friends or put myself out there in front of a crowd of people. At that time I has not finished school and I went to a networking event that the people in my grad school’s program threw every month. These are the same people that were attending the same classes with me. I could talk to them in class about notes and reading assignments, but I could not get them to talk to me or hold a conversation with me for more than 3 sentences at happy hour. Me in 2015: a social experiment — I tried different ways to get myself more comfortable with networking. I searched on Google : how to network, how to be emotionally intelligent or how to get someone’s contacts, how to get someone to help me, how to ask the right questions, etc. I would make a point to try it once a month. I went to events at my grad school, I went on Facebook and joined local student and young professional groups. Soon I became more aware of my appearance socially on Facebook, Twitter and Linked In as well as my physical appearance. Being a petite Asian woman, I always felt that I had to speak louder, bolder or simply speak more to prove myself. — Doing any of these did not get me a connection. I did not know what I was doing wrong. However, I kept going out there to get the practice, even though sometimes I could sense that some people did not want me at their events or they did not want to include me. I was miserable until: The 2 minute drill — my “ah ha” moment, which felt at the time was more like a “oh no” moment. Here’s what happened: In my Real Estate Entrepreneurship class, there was an assignment to “greet” the guest who was a very influential developer in the area. The students in my class formed a line outside the classroom. One by one we would go in and the assignment was: to say whatever you want to say to this very influential developer. Each person got 2 minutes. I was the last in line — I wanted to delay it the best I could. Standing in line we talked among us about the guest, and all agreed that the assignment was unfair because we did not have any warning. I could hear noises from the classroom: laughters, faint speaking, claps, and the door opening and closing, one by one. Then when it was my turn. I greeted the whole class, and turned to the developer and introduced myself. I went straight to the reason why I was doing the graduate program and went on to outline my first Real Estate development project to him… just the highlights, and he even asked me some questions like he was interested in investing my project. He even poked fun at my naive evaluation. My 2 minutes have passed, we were still talking. I thought I did a pretty good job, because he asked me many questions back. I failed the assignment. In fact, the whole class failed. Why? Well, I did not close and a few other reasons. This developer would not remember me tomorrow, and actually I never saw him again. The example of a correct answer for this assignment would be: Hello, my name is [insert your name], it is so nice to meet you in person, here is my business card, I am a Real estate developer, I am new to the area and would love to chat. Would you like to meet up for coffee? — that’s it. They can say no that’s fine but most of the time they would be like “nice to meet you, or now that we meet in person, I will keep your contacts”. The basic expectation would be that they would remember you because you handed your card and did not waste their time. If they had time for you they would make some more small talks but don’t expect much. No one cares about your hopes and dreams and they may not even remember your name or where they put your business card. Many people have done it to me, and I have also done it to many people. Smiling, talking on and on about random things, but then nothing meaningful remains after the conversation. This is no fault of either party. Let’s just manage our expectation here. In several minutes, it is very difficult for a person to lay out all of their intentions, hopes, dreams, skills, stories, etc. Whether you are looking for a job, a connection, a referral, a coworking buddy or whatever, it takes time to express yourself to another person. It is also difficult for the other person to understand and process what you are trying to cram in the few minutes they meet with you. Let’s be honest and feel lucky that the names stick. Next time you see that person you remember their name and that is a success for them, but how sure are you that they remember your name as well? Networking can be hard because you have to do speed listening, speed talking, active listening, passive talking (aka body language) and then always be closing or ask them to continue the conversation more in depth some other time. Coffee, meetups or meetings allow the time, space and attention to really get to know a person’s intention and share your intention as well. Me: recently, I enjoy going to meetups, especially the Code and Coffee meetups in the Washington D C and Nova areas. I find these coworking meetups to be special to me because I can express my abilities and personalities in a new way — helping people on their projects or anything they are struggling with. People love what they help to create — this is cliche but true. To be more specific, I find that people remember me better when I help them solve a problem or when they help me solve a problem together. The first time I went to these meetups, I noticed that besides the organizers, there are a few developers who are always ready to help new people. They are these beacons of help — and people flock to them. I wanted to be them. I want to be able to help as well. I was a newbie with very limited skills when I first joined coding meetups, but there was always someone I could reach out to help them. Luckily, in the these meetups there is always a standup in the beginning where everyone introduces themselves, what they are working on, what they can help others with and what they need help on. When it is my turn to introduce myself, I always say what I am good at and that I can help X — a recent boot camp student — with what they said they need help on or that I could help Y because I have fixed the same I S O date string conversion so many times and I understand his frustration. This way makes it easier for me later to come over and talk to X and Y. As I do this, — helping others — other people in the room notice and they would approach me, ask me what I was working on and how they could help me. Working through a problem together reveals a great deal about skills, knowledge and personalities. Some people get so defeated by the problem that they won’t be able to form sentences to ask for help or express exactly what they are struggling with. Sounds familiar? I find it familiar because I have been there, often. I may not be able to help them get unstuck 100% of the time but I can just listen to them and let them vent. I am still learning to do this effectively and help more people. This has led to job referrals and leads to coffee and meetings and many new connections for me. This is how I learned to turn on my beacon of help.","['Networking', 'Codingbootcamp', 'Learning To Code', 'Job Hunting', 'Job Search']",https://medium.com/@tinatheace/i-learned-to-network-at-meetups-1799871ff386,0,[],0,9,ngoc,F,0.9227467811158798,0.07725321888412018
Jerry Weber,,My journey learning to code at Bloc Pt. 2 – Jerry Weber – Medium,2018-08-25 01:32:46,medium,"My journey learning to code at Bloc Pt. 2 So far, I have found javascript to be the hardest language. Technically, for a beginning developer all the languages can seem hard at first, just as learning a foreign language would be to anyone. Javascript however makes your brain utilize many different sources that H T M L & C S S don’t quite touch. I’m in the very early stages of javascript, so I imagine over time it will get easier. I can see how beginning programmers might feel frustrated because technology is constantly changing, so just when you’ve learned something and mastered it something new will come along. I will say this though, anyone can learn to code. Don’t listen to those who say you must be good at math, or a strong problem-solver, etc. Yes, those things can certainly help, and even perhaps put you a step or two above the rest, but coding in and of itself can help you become better at math, it can help you become better at problem-solving, and it can help you become better at just about anything that requires thought, detail, and constructing.","['Programming', 'Codingbootcamp', 'Web Development']",https://medium.com/@txhcjerry/my-journey-learning-to-code-at-bloc-pt-2-164cf8684f3f,0,[],0,0,jerry,M,0.02749960285941223,0.9725003971405878
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),First day of Ruby! Plus bubble sort – My Coding Journey – Medium,2017-07-03 23:01:37,medium,"First day of Ruby! Plus bubble sort Ruby/rails day 1 Everyone’s been telling me that coming from a full Java Script stack, Ruby would be kinda breezy. I haven’t done all that much writing in it yet, but boy is it nice to look at. Iterations are super cool and everything is an object, (take that how you like), so strings are mutable and all sorts of other interesting stuff. It should be fun and interesting, and I’m not quite sure how I’m going to receive rails, but I guess we’ll see. Bubble Sort We started learning sort algorithms today. We focused primarily on bubble sort but also touched on selection sort. David also gave a great explanation of Big O notation/time complexity. Here is the algorithm the way David explained it on the white board//in case gist doesn't work on mobile//bubble sort ""bubbles"" or moves the highest current not sorted item to the top with each iteration//thanks David for this version of the algorithmfunction bubble Sort(items) {//we use a nested for loop so that the iteration starts again after each ""bubble""for (var i = 0; i < items. length - 1; i++) {//a flag variable to allow for break if no swap has been made i. e its sortedvar should Continue = false;// ---------------- only loop until it hits the sorted partfor (var j = 0; j < items. length - (i + 1); j++) {if (items[j] > items[j + 1]) {var temp = items[j];items[j] = items[j + 1];items[j + 1] = temp;should Continue = true;}}if (!should Continue) {break;}}return items;}var arr1 = [3, 1, 3, 5, 9, 2, 4];bubble Sort(arr1);","['Algorithms', 'Ruby', 'Ruby on Rails', 'Coding', 'Codingbootcamp']",https://medium.com/my-coding-dojo-experience/first-day-of-ruby-plus-bubble-sort-17806d2dd7e5,0,[],0,0,leibel,Unknown,Unknown,Unknown
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,"Build, hack, learn: 50+ remote developer projects from the Chingu cohorts to start your day off…",2018-05-10 16:18:46,medium,"Build, hack, learn: 50+ remote developer projects from the Chingu cohorts to start your day off right Photo by Caleb Woods on Unsplash Hello again rambunctious learners and voracious coders! For those who just stumbled on this article and are like “what the $!% is a Chingu?” Chingu is building a remote collaboration city for motivated tech learners & builders. Developers, data scientists, designers, and digital marketers all can join teams to find level-up opportunities. Here is what we do: put motivated people with similar goals together in an environment that gives them the opportunity to level-up in a way they couldn’t otherwise. Chingu is also the Korean word for friend (친구). So, a lot has happened since the last Project Showcase… Maaaaany projects have finished Maaaaany people have gotten jobs Maaaaaaany people have applied to join future cohorts A legendary Chingu wrote a M E R N-stack book (set to be published next month so keep your eyes out for that 😉) And I’ve moved to Prague (gorgeous city — drop me a line if you come visit!) Thanks to everyone who made this possible! I want to give a big shout-out to every wonderful soul who contributed to the Chingu project over the past 3 months— from Cohort- Leads to Project Managers to the infamous Chingu- X team (what up Van Tabbert, Jim Medlock, El Sabbador Musaab Bakheit, & Vampiire). And to everyone courageous enough to step out of their comfort zone and build with others! This is no small feat. Thousands of people from 70% of the planet’s countries have participated in Chingu in the last year and a half and we’ve collectively built hundreds of projects together (not to mention the unruly amount of friendships/levelups). We’ve done nonprofit projects, teams have built impact-generating apps, and at this rate, it won’t be too long before we reach 1000 projects finished. The Chingu Moonshot is to one day see a team build a project that turns into a product and they go from trying to get a dev job to creating dev jobs. We are definitely in a new age of education and it’s people like you that make me so excited for the future. Kevin Kelly, founder of Wired, on the importance of Collaboration in our age: The things that are most surprising all have to do with collaboration in real time at a scale that was really unthinkable before, and that’s where a lot of these surprises have been originating (big innovations). Basically we’re kind of organizing work and collaboration at a scale that were just unthinkable before and seemed impossible. Without further ado, I present you a couple of projects. 😜 The Projects Note: I apologize in advance as I have inevitably made several mistakes with links, missing projects, names etc. Consider this article a work-in-progress as I’ll continue to edit and fix mistakes (please D M me if you have found any mistakes or missing pieces). Quizzly Bear A quiz creation app featuring a drag-n-drop quiz builder, quiz analysis and a dashboard. See the top quizzes, like your favorites and take quizzes! Stack: React, Redux, Express/ Node, Mongo D B Chingu project type: 🐻 Tier-3, Team: Louisheimel1, Kevin Galang, Vannya Github repo Methodize Methodize is a mix of Trello and Momentum aka Project Management meets a gourmet Productivity app. Stack: React, React Dn D, Redux, styled-components, express, mongoose, and jwt Chingu project type: 🦎 Tier-2, Team: @ Lucas T. @designbyinna @ Lady V Github repo Chingu- Coupons This is the Reverse engineered app for the famous Retail Me Not. com Stack: React, Node. js, Mongo Db Chingu project type: 🐻 Tier-3, Team: ram, Sandun Web Dev, Anshul2166 Github repo Gecho A video-music app Stack: M E R N ( React/ Redux/ React Router, Webpack, Babel, Express, Node, Mongo D B, S A S S) Chingu project type: 🦎 Tier-2, Team: @marylicious @ Oliver @ Raymond @ziggysauce Github repo S A F E Gardening — A Nonprofit project Updated the website for a non-profit organization to deliver a better U I and U X so that visitors to the site will want to stay on their site Stack: H T M L, S A S S, J S, Making it into a Word Press Theme for our client Chingu project type: 🦎 Tier-2, N O N P R O F I T Team: sosodope, beboptank, jemma, jin Github repo Cryptex — A Crypto Portfolio Guide We offer a free cryptocurrency portfolio planner. It pulls the current top 20 coins and suggests an investment amount for each, based on our formula and the user’s investment amount. Stack: Gulp, Bootstrap v4, Sass, P U G, E S6 Chingu project type: 🐦 Tier-1, Clone Team: Fancy Action( P M), sparta, Karthik Github repo Sprogner Speech recognition app to do tasks based on the user’s voice input. Stack: React, Webpack Chingu project type: 🐻 Tier-3, Team: @shashank7200, @adeen-s and @ Arvee Sprogner Github repo Grillber An uber for grills. Stack: M E R N, Apollo-server, and react apollo Chingu project type: 🦎 Tier-2, Team: underwoodkats, fmtabbara, yordanzhelevdev, andrwsalc Github repo Project Zone This project aims to connect programmers with the same interests over specific projects. Users can publish a description of their projects (current or planned) and others can browse through the projects and contact their author to discuss working together. Stack: React, node. js, Express, Mongo D B, Bootstrap, Jest Chingu project type: 🐻 Tier-3, Team: @heyjp, @ Sylvie Github repo Music Hub Allows the user to create, share and listen user-created playlists using different services such as Youtube, Daily Motion, Vimeo, etc. Stack: React, Redux, Redux-sagas, Express, Webpack, Passport, Mongo D B Chingu project type: 🐻 Tier-3, Team: Cristhian Ferreira, marianoheller, vitof Github repo World Community Grid A clone of I B M’s World Community Grid site. Stack: H T M L, C S S, J S, j Query Chingu project type: 🐦 Tier-1, Team: stufinn, laureng, laurend Github repo What’s the Scoop? What’s the Scoop is an ice cream themed, mobile first, Twitter clone. Stack: React, S A S S, Node. js, Express. js, Mongoose Chingu project type: 🐻 Tier-3, Team: jordanleo7, Misomighty, Tyler, ironicsushi Github repo Chingu Tabs A momentum clone. Increase productivity through a new tab, chrome store extension. Stack: React, Node. js, Mongo D B Chingu project type: 🐻 Tier-3, Clone Team: Eric H, Jai, valerie. s, glandon22 Github repo Pet Trackr Online message board for lost and found pets. Stack: Node. js, Express, Mongo D B, E J S Chingu project type: 🐻 Tier-3, Team: tmattlee Veredrec caleb-cox Github repo Cute-or- Not A full stack application that allows users to upload pet pictures and have other users vote on their pet’s cuteness (or lack thereof). Stack: React, Express, Node. js, Mongo D B, cloudinary. Chingu project type: 🐻 Tier-3, Organic Team: @ Kevin Briggs, @ John Gillespie, @mayerxc, @ Dereje Github repo Atomist This is a clone of the atomist. com site. Stack: H T M L, C S S, J S, j Query Chingu project type: 🐦 Tier-1, Clone Team: Jon Maldia 🚀 Github repo V S Code Clone Code Editor A simple code editor in the browser Stack: Vue, webpack, jest, travis, scss Chingu project type: 🐻 Tier-3, Team: @matthewburfield, @alyscole, @kaizen, @buoyaintair Github repo Project Match Project Match is a web app created with the M E R N stack with typescript integration. It’s primary function is to help programmers and designers match with projects they would be interested in. Project Match will then provide team collaboration tools to support new teams with features such as a dedicated platform for mockup reviews/redlines and group chat. Stack: Mongodb, Express, React, Node J S, Typescript, Mongoose Chingu project type: 🐻 Tier-3, Team: lilgangwolf, luoto, eric-miller, ilvcs Github repo Toucanory It’s a clone for a landing page that we loved! Stack: Html5/ C S S3 + Bootstrap + Js basics Chingu project type: 🐦 Tier-1 Team: @ Loubna / @ Ana Veiga Github repo Adopt- A- Cutie Pie — Nonprofit project aim Site to promote pet foster homes. Why? They provide a lifeline to animals who are out of options. Now this webpage needs a home too. Any animal saving organization is welcome to have this site customized and donated to them. Stack: Html, C S S, bootstrap, jquery Chingu project type: 🐦 Tier-1, Organic Team: Fullstackdad, kubie, Michael Github repo A N D E E S It is an organization and a tribute website for the Blade Runner movie and Relicants. Stack: Html, C S S & Java Script Chingu project type: 🐦 Tier-1 Team: @lucygracesmom @ Javilag @ Haberdashery @ Jesica Github repo Gecko Fit A nutrition application that users can use to look up the combined and separate nutritional values of a list of ingredients. Stack: C S S, H T M L, React Chingu project type: 🦎 Tier-2 Team: @ S Grimes, @abecel22, @ S D Bowen Github repo Marshmallow We did our best to clone Trello! Stack: React Chingu project type: 🦎 Tier-2, Clone Team: sipofwater, Tiffany, Veronica Github repo Resource R8 A site to rate and add resources for development studies Stack: Java Script, C S S and H T M L Chingu project type: 🐦 Tier-1, Team: dirkduplooy, tasesmuemils, Kraken Whisperer Github repo Trello Geck Trello clone app, project management, create Lists & Boards Stack: React, Node J S, Express, Mongo D B, Bootstrap Chingu project type: 🦎 Tier-2, Team: blarz Hernandez, Kenito Henry, Philness Github repo Chingu Medium Digest Chingu Medium Digest allows users to get the latest Medium articles from fellow Chingu members. Stack: Html, Css ( S A S S), Javascript, j Query Chingu project type: 🦎 Tier-2, Team: soreg sadou Github repo Chingu C M S C M S to replace github wiki for chingu docs Stack: M E R N Chingu project type: 🐻 Tier-3, Team: @gnnsampaio @jenovs @keith1111 @nik Github repo Flashcard app Online study app with digital flashcards Stack: React, Redux, Express, Mongo D B, straight C S S ( cause Y O L O ) Chingu project type: 🐻 Tier-3, Team: Mitalee, Jen, Sparta Github repo Voyage Voyage is a chingu collaboration project where we can add past Voyage projects are compiled and presented to the people around the world. Stack: H T M L, C S S Chingu project type: 🐦 Tier-1, Team: @ Westine Lao @shirlaine Github repo Inventoree A home inventory app to keep track of your belongings. User will first add a location, then they have a dashboard for that location where they can add individual items with details about that item, such as purchase price, serial number, warranty, etc. Stack: M E R N Chingu project type: 🐻 Tier-3, Team: Jarold, Jordan, Tia, Jason Mojica Github repo Medium A clone of Medium. Non-authenticated users can read articles, while authenticated users can like and publish articles, and edit their published articles. Stack: React, Redux, webpack, Express, node. js, My S Q L, S A S S Chingu project type: 🐻 Tier-3, Team: Jethro Fredericks, Hos Ti Github repo Bears-15 Cards Multi-user Flashcards application. Flashcards are widely used to aid memorization. Stack: Node. js, Express. js, Vue. js Chingu project type: 🐻 Tier-3, Team: @svmi3195 @tymczenko @ Tom Ski Github repo Bonsai Stack: html5, css, javascript Chingu project type: 🐦 Tier-1, Clone Team: zoey, nils. gova, lazycesar Github repo Simple Seed The app purpose is to help anyone to start growing their own food either in their yard or kitchen or balcony. Using a collections of tutorials and a badge winning system. Stack: M E R N stack Chingu project type: 🦎 Tier-2, Team: @ Jade @hix @ai @ Jazylabs Github repo Codemeets Application for posting local coding meetups Stack: Vue. js, Node. js, Express, Mongo D B Chingu project type: 🦎 Tier-2, Team: @rinat @louisf Github repo Quiz-drag app (transfer to Voyage-5) It is an educational drag and drop tool for students to learn different computer ports Stack: React Chingu project type: 🦎 Tier-2, Team: Briahna, Regina, Gabrielgs, Adamabundis Github repo Milk Jar Cookies It is the clone of landing page for a baker site Stack: H T M L, C S S Chingu project type: 🐦 Tier-1, Team: sanjana-1604 Github repo Task-management app Stack: javascript, css, html Chingu project type: 🦎 Tier-2, Team: Marcel, vince, brian, isac Github repo Travel Memories Stack: html, css Chingu project type: 🐦 Tier-1, Team: Mufasa, Jeminah, @ Yacine Github repo Zoezi Book A Fitness recording application, where a logged in user can register fitness data, like distance covered, time spent and weight Stack: Graphql, apollo-client, apollo-server, reactjs, mongodb, nodejs, flexbox Chingu project type: 🐻 Tier-3, Team: Joseph Myalla Github repo Portfolio Website A portfolio website to showcase future projects. Stack: H T M L, C S S, Javascript Chingu project type: 🐦 Tier-1, Team: @kmicks @ Carolyn Shin Github repo Pinterest Clone Stack: M E R N Chingu project type: 🐻 Tier-3, Team: Sjbrimley26 rbertram8 jorlee92 shil509 Github repo Crypto landing page Stack: html, css, java Chingu project type: 🦎 Tier-2, Team: akinwale-habibullah Github repo Insp-app Stack: H T M L/ C S S/ Angular5/ Type Script Chingu project type: 🦎 Tier-2, Team: @ Rodiel Martinez @luisjaquez Github repo Bit Helper Ever had a killer idea for an app, but never got to finish it? Bit Helper is here to help you find new team mates to finish your apps or join exciting new projects to develop together! Stack: React, Redux, Express, Mongo Db Chingu project type: 🐻 Tier-3, Team: Gherds (pm), shibatas, heyjp Github repo Atomist clone Stack: H T M L , C S S and Vanilla Java Script Chingu project type: 🐦 Tier-1, Team: @juz Qrios and @suman Github repo Speedstudy- Tracker Easy progress tracking for P1 X T’s Speedstudy Stack: React/ Redux, Mongo, Express Chingu project type: 🐻 Tier-3, Team: @ Maria B @codepapi @jp_lacy Github repo Hissues Student accommodation issue tracker. Stack: Mongo, Express, React, Node J S, Redux ( M E R N) Chingu project type: 🐻 Tier-4, Organic Team: Mortuie, nik, vivek Github repograd. then()grad. then() is aimed at you, to give you the information and tools you need to get a job after completing your training. Stack: Gatsby (react), styled-components, apollo Chingu project type: Tier-4 Team: mar-bi, miljan-fsd Github repo Do-um Stack: M E R N Chingu project type: Tier-4, Organic Team: @bakunawa, @snowleo208, @jordanleo, ellereeeee Github repo Gita Clue — Infrastructure for a remote collaboration city (in-progress) Chingu is innovating on how learners collaborate to level-up. This is a small piece but with incredible importance to that mission(more info in the next showcase)! Stack: Javascript, Node J S Chingu project type: 🚀 Chingu- X Team: the legend himself, Jim Medlock! Github repo Duo — Infrastructure for a remote collaboration city (in-progress) Optimal pair-programming matcher for motivated learners around the world Stack: In-progress Chingu project type: 🚀 Chingu- X Team: ziggysauce, Vampiire, @sparta, Daniel Segovia Github repo Express — Infrastructure for a remote collaboration city (in-progress) Stack: In-progress Chingu project type: 🚀 Chingu-x Team: Chingu- X (ziggysauce, Vampiire, @sparta, Daniel Segovia) Github repo Help-board — Infrastructure for a remote collaboration city (in-progress) Stack: In-progress Chingu project type: 🚀 Chingu- X Team: Chingu- X (ziggysauce, Vampiire, @sparta, Daniel Segovia) Github repo That’s all for this time! Check back in a few months for the V O Y A G E-5 S H O W C A S E!","['Web Development', 'Chingu', 'Freecodecamp', 'Codingbootcamp', 'Showcase']",https://medium.com/chingu/build-hack-learn-50-remote-developer-projects-from-the-chingu-cohorts-to-start-your-day-off-4c409acc5cec,2,['Momentum'],1,770,chance,M,0.024461428631419813,0.9755385713685801
Jason Chambers,,Tackling the Hack Reactor Interview – Jason Chambers – Medium,2017-02-02 01:49:19,medium,"Tackling the Hack Reactor Interview This is basically how I saw programming languages when I started. I’ve seen posts in the past laying out useful resources for preparing for a bootcamp interview. I’m going to do my best to lay out every good source I made use of to get me through the process, in order. I’d like to point out that before starting Code School I had zero programming knowledge at all. Like. . literally none, I couldn’t even tell you how to multiply by 2 with a function. Preparing for the Prep Code School Javascript Road Trip Part 1: https://www. codeschool. com/courses/javascript-road-trip-part-1 Code School Javascript Road Trip Part 2: https://www. codeschool. com/courses/javascript-road-trip-part-2 Code School Javascript Road Trip Part 3: https://www. codeschool. com/courses/javascript-road-trip-part-3 Completing these three courses prior to enrolling in the Hack Reactor Prep Program seemed to be the perfect amount of beginner knowledge to grasp the topics we covered the first couple weeks of Prep. There are also other resources available like Codecademy. But I didn’t like the format and felt that Code School presented the information faaaaaar better. Should I Attend that Bootcamp Prep Course? Here’s where you will encounter your first crossroads. You’re probably feeling pretty good about all the J S knowledge you just gained from completing the Code School tracks. However there’s still a few things missing from your arsenal before you can confidently say that you are ready to apply for that technical interview. A big plus of taking the Prep program is that you cover all the fundamentals tailor made to best prepare you for the interview. This includes knowledge of the J S syntax, iterating arrays, objects, strings, etc. But also working in an environment where you are forced to explain your thought process with a partner. They call it ‘paired programming’. Pair programming is a technique in which two programmers work together at one workstation. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently. It’s a very useful tool to have because a large part of the interview is collecting your thoughts, getting your outline down in plain text, then tackling the problem itself. While doing all of that you’re expected to also clearly explain your reasoning for every line you type. Don’t go from looking at the problem => silence => typing lines of code. You need to show you deeply understand what your approach is. Don’t go from looking at the problem => silence => typing lines of code. You need to show you deeply understand what your approach is. If you’re planning on making an attempt at applying to H R then the prep course is invaluable, plus the cost of prep goes directly towards your H R admission if you’re accepted. . So really no reason not to take it. Prep is done. Am I ready? You’ve reached this point and have completed all the prep course material as well as the Code School tracks, but are you truly ready? That’s ultimately up to you. If you can look at this prompt to the left and be able to voice your reasoning clearly in an interview situation then I would say definitely. But if you struggled to understand where to begin don’t sweat it, all of these sources below will give you the know-how to ace any bootcamp technical interview you come across. . So lets get started. Java Script: Understanding the Weird Parts - Udemy An advanced Java Script course for everyone! Scope, closures, prototypes, 'this', build your own framework, and more. www. udemy. com Covers all of the things that are most likely still confusing to you, just watching the videos should be enough. He has a great approach to teaching the topics. Eloquent Java Script Illustrations by various artists: Cover by Wasif Hyder. Computer (introduction) and unicycle people ( Chapter 21) by Max…eloquentjavascript. net Just the first 6 chapters of Eloquent will be enough. You can continue reading more if you like, but it can get very dry at times. Coderbyte | The #1 Website for Coding Challenges Coderbyte is a web application that helps you practice your programming skills, prepare for coding bootcamps, and…www. coderbyte. com Being able to complete all of the easy problems is good practice, I personally recorded myself so I could gather feedback on my reasoning and be sure I was explaining my logic clearly so a person (*cough* interviewer *cough*) watching me would easily understand where I was going. If you’re going to do these, I’d say work with a partner or record yourself and follow the ‘ Collect thoughts, pseudo-code, actual code’ mentality when working on them. . Yes even the easy ones you can solve without thinking. It all helps. Jukejc/ Toy Problems J S Toy Problems J S - Fun test prompts to test your knowledge of the basics of J Sgithub. com I’ve been putting together some toy problems I felt were similar to the format of the interview, the list is small as of now but I try to post at least one a day. Has a heavy focus on array and object manipulation. Good stuff to know. If you want to attempt them yourself you can fork the repo and work on it locally. If you get stuck on a problem the answers are included. . But I strongly recommend not looking at the answers until you have solved the problem. Closing Thoughts If you work through all of this information here, I don’t see any way that you could have an issue getting into Hack Reactor. . Or any other bootcamp for that matter. It’s definitely a lot of work. If you find yourself getting frustrated and stuck for longer than about 15–20 minutes I’d recommend just taking a quick breather. Walk around the room, do some push-ups, have a beer. Just get away from the computer for a bit and collect your thoughts. Often times just letting a problem dwell in the back of your mind for a bit helps you see an alternate approach to solve it and you’ll be left wondering why it took so long to write that two line solution. Thats all I have for now, I hope this information helps out someone who’s thinking about applying for Hack Reactor. If you have any questions, feel free to comment below.","['Programming', 'Coding', 'Hack Reactor', 'Preparation', 'Coding Bootcamps']",https://medium.com/@Jukejc/useful-sources-for-coding-bootcamp-prep-967f73ec2613,0,['Hack Reactor'],1,8,jason,M,0.004847072024143468,0.9951529279758565
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 43 — Can’t Take That Away – conshus – Medium,2017-05-10 11:36:10,medium,"Day 43 — Can’t Take That Awayliner notes: Yesterday, to illustrate a use case for Redux, we began modeling Baseball. That’s one thing about code. It makes you realize just how complicated things are that we take for granted. You really get a greater appreciation of things that seem so simple. I think that once you “see” that, they can’t take that away…. See what I did there. hahaha Today, I think we’re going to continue with the modeling a game of baseball in React J S and Redux. Looking forward to it, actually. The more exposure I get to React J S, the better the chance of me understanding it. Also…. I’m rocking another of the new shirts I made for the whole H I P H O P and C O D E thing I’m doing. Oh and I think I know what I want to do for my final project. It was in front of me all this time. I’ll let folks know once it gets approved. Till next time. Have a great one!peace piece Dwane / conshus H I P H O Pand C O D E. com( Just putting this here so I can use it as the feature image for this post)","['React', 'Redux', 'Coding', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-43-cant-take-that-away-9bc0533920af,0,['The Iron Yard'],1,3,conshus,Unknown,Unknown,Unknown
Lauren Granada,Junior Developer; Boot Camp Grad; laurengranada.com,Introductions: – lauren a la code – Medium,2018-07-03 20:07:48,medium,"Introductions: Hey! I’m Lauren, a 20-something living in the awesome city of Austin, Texas. I’ve found myself to be in a very transitional period of my life and thought it’d be useful to take notes along the process and maybe in the long run it’ll be useful to someone else in my shoes. A little more about me: When I’m not coding or blogging I spend a lot of time training my crazy Aussie, Brody. We like to be out and about, enjoying our beautiful city! In my free time I like to watch films, wine and dine at new places around town, and sometimes work on personal video projects or photography. My background prior to attending a coding boot camp: Videography and film production was what truly called me to Austin, but as life does, my plans changed. In college, I majored in Philosophy with a minor in Business (not really computer science related). But that’s the great thing about boot camps, you definitely don’t need a background in programming or computer science — though it would give you a boost. I dabbled in the law field because it seemed like the most logical career path related to my major. Long story short, I attended the boot camp instead of taking up law. What boot camp did I attend?: I rejoined my alma mater once again and attended The Coding Boot Camp at U T Austin October 2016 — April 2017. What am I up to now?: I made the bold move of quitting my job in a field that I no longer wanted to pursue in order to channel all of my energy towards making this huge career shift. That’s what I’m doing now, and there will definitely be a post 100% devoted to this topic in the future. How does this blog work?: As coding boot camps are popping up, I wanted to provide a timeline and list of goals that should be expected in the process. This blog is a list of my experiences, struggles, and any advice I wish I had been given along the way. Thanks for reading! Share, comment, and feel free ask any questions below!","['Coding', 'Codingbootcamp']",https://medium.com/lauren-a-la-code/introductions-ef8173b7a1b8,5,[],0,0,lauren,F,0.987739934147142,0.012260065852858035
Gabriel Diaz,,Paths of a Programmer – Gabriel Diaz – Medium,2016-12-01 06:51:52,medium,"Paths of a Programmer Eleven weeks down, one more to go. Just one more week that involves a solo project until the end of the web development immersive course at General Assembly in Austin, T X. I’ve learned a whole lot and am eager to continue building projects on my own, and of course, get a job. Reflecting on what post-bootcamp life will be like inspired me to write this article. I thought about the different paths my classmates and myself could take in the programming world, whether it be working at a startup, product management, or starting a business. Personally, I dream of being a freelancer who builds apps and websites from a beach in Costa Rica, but I also dream of working for an amazing company as well. The point is that there are different paths I can take, which is what’s special about knowing how to code. I spent hours a day researching bootcamps prior to coming to G A. I came across Kristen Leake, who had great advice about bootcamps and continues to help me with my questions about jobs, networking, etc. I recently had a call with some basic questions to summarize about networking, freelancing, and creating a brand, all things she has experience with. Networking We hear it all the time, networking plays a key role in getting a job. It’s no secret, and I’ve actually really enjoyed going to networking events and getting to know the tech scene. Kristen made a point that networking isn’t networking until you follow-up with the people you met. There is not much of a point in meeting someone at an event and hoping you see them around sometime. The important next steps are to connect on Linked In, meet up for a drink, and stay connected! When it comes to talking to people, it’s important to actually get to know the person and not just make it seem like you’re only talking to them in hopes of getting connected with a job. But when it came to making yourself stand out, Kristen said: I think it’s important to focus on how you can help or be of value to others before asking for favors from people. And if you ever feel like you don’t have anything you can offer yourself, try to connect people to one another. So say you can’t help a manager with his logo design, connect him to a friend who does great graphic design work. Freelancing Like I mentioned, freelancing is definitely an option I want to keep open for myself. Working from a beach or wherever I want sounds cool right now, but who knows if I’ll actually like it when I’m not working in a cool tech office or if I’ll like having to work on my own. Kristen has worked as a front end freelancer and shared the cons that any freelancer may encounter: Creating systems: At an office, a lot is taken care of for you. As a freelancer, systems managing accounts, creating contracts, and invoices are all things to attend to on top of everything else. Not working well with clients: Working with clients can work smoothly, or it can go, well, not so smooth. There can be times where you have no-shows to meetings, lack of payment, or someone who just isn’t treating you right. Don’t be afraid to be picky with who you decide to take on as a client. Creating Your Brand As of lately, Kristen has been focusing on getting into the business of writing a series of books that help people make the big bootcamp decision, gaining confidence, and overall helping people in reaching their goals. She is also a bootcamp graduate, and knows the value that the experience brings. This is why use her experience to make an impact on others. Stepping back from the insight I got from Kristen and looking back on the bootcamp experience, I’m a tad bit nervous, but much more excited about what’s next. I’ve learned to worry less about the future, and do the work I need to do now that will ensure that my future is bright. I’m excited to see which path my classmates will go down, but with the value G A has given us, I’m confident we will all be just fine. I look forward to the day I write a blog saying I got a job!","['Freelancing', 'Programming', 'General Assembly', 'Coding Bootcamps']",https://medium.com/@gdiaz1410/paths-of-a-programmer-7e2ebbb9fbc6,0,['General Assembly'],1,2,gabriel,M,0.01936733751390539,0.9806326624860946
Jaz Liu,Everything in the world is interconnected.,Coding Diary – Jaz Liu – Medium,2017-07-24 06:58:43,medium,"Coding Diary First Day of Online Coding Bootcamp The horrific moment of appearing in video conference I glance at the clock. It is 8:50am central time, one hour before eastern time. It seems that my first challenge in starting out an online coding bootcamp is remembering the time difference between Iowa and New York. As 9:00am approach, I close my bedroom door and sit down in front of my new work station setup specifically for the coding bootcamp. To my left is a simple Dell Ultra Sharp 17 inch external monitor, and to my immediate center a Macbook Air with a microphone and mouse attached. Nothing fancy, just functional necessities. I feel outbursts of nervousness as my fight-or-flight instinct hit me hard. I was never a social butterfly, and my introverted self tend to be socially awkward while facing others, be it face-to-face or through video chat. But I know it is too late to turn back now. I decide to turn on Zoom…then bam! I am live for all to see. I quickly take in the scenario: my instructor just said hello, my five fellow peers are looking around nervously, and I see my mortified self staring back. I panicked, but seeing how friendly my instructor and classmates are, my heart beat gradually slowed as the class took off. Blank as can be Interestingly, the class begins with a pop exercise. Find the sum of this array… Right off the bat, I recall something vaguely from the prework exercises a few weeks back. What W A S it? I rack my brains and thought hard. It had something to do with each do. As I thought harder, blood rushes to my head. In that moment, my brain decides to forget almost everything I learned throughout the prework phase and reboot from ground zero. It wasn’t until later on when I realize that I am the panicky type of coder: my mind has the tendency to draw blank and stop working when coding under pressure. I silently wrote a note to myself to not freeze up again in a challenge exercise and keep my head leveled. The coding setup in a nutshell For the first day of class, we went over languages we will learn throughout the course including Ruby on Rails, Java Script, S Q L, H T M L, C S S, and the Vue J S framework. We also learned basic terminal commands in i Term2, and familarizing ourselves with Sublime Text. Our instructor trained us to use Spectacle to organize the many windows we have open, then introduced us the Git & Github platform. We also learned about coding soft skills, and how it can be even more important than the technical skills itself. If you happen to delete someone’s code by accident, it doesn’t matter how good of a coder you are; in the end, you will not work well in a team. And let’s face it: you will almost always be on a team. Lastly we delve into blogging on Medium and creating a professional profile on Linked In. Our instructor taught us that a coder that blogs stands out from the crowd, and the ones who reaches out and network on Linked In are more likely to find a suitable job. Blank as can be. Again. Then came the unexpected surprise. It was another code challenge, but even harder this time. All I can say is, I lost my little reminder to myself earlier amongst the gibberish code running through my brain. I ran out of ideas to solve the problem, and when we were told we can use the web to help us, I didn’t even know what to Google. Twenty minutes later of fretting and agonizing, my brain decided to stop thinking and started asking random questions. What is wrong with me? What am I supposed to type? What keywords should I use? How much time do I have left? Am I being watched? To say the least, I didn’t write more than three lines of code. After the challenge, our instructor told us not to let coding get us down, because at the end of the day, there isn’t a day when developers think their code is perfect. Aftermath At the end of the day, I feel pretty bad about the challenge, not because I couldn’t finish it (we were told we probably couldn’t anyway), but because I know I could’ve done a lot better. After class, I decided to put my hands in the dirt amd take a break from coding. At night, I came back to my desk to work on the challenge and miraculously, it appeared to be easier. Which proves another point our instructor told us: breaks are miracles. Looking ahead All in all, my first day of online live class has been an unexpected one full of surprises, endless frustration, but bursts of excitement. My takeaway from today’s class: I know I code awful when under pressure and stress. Breaks are awesome and miracle workers. I am not a horrible coder if my code breaks. It happens to everyone, and that’s why there are errors to point us in the right direction. This concludes my blog post for the day. Thanks for reading everyone, and stay posted for more!","['Coding', 'Bootcamp', 'Diary', 'Codingbootcamp', 'Reflections']",https://medium.com/@jasliu2012/chapter-1-an-unexpected-beginning-d43ef4db7b3d,0,[],0,1,jaz,M,0.328125,0.671875
Anonymous,,Confessions of a Coding Bootcamp Student – Anonymous – Medium,2016-12-02 14:12:21,medium,"Confessions of a Coding Bootcamp Student I attend a coding bootcamp in the U S and I feel that someone needs to speak up on this: You get out what you put in. Stop bitching. Throughout my time at this bootcamp, I’ve busted my ass. I mean, I spend my nights and weekends studying while most students in my cohort spend it bullshitting as if they have that luxury. Interestingly enough, the ones who don’t put in the time outside of class, come late, or go days and weeks without attending are the first ones to complain about how the class is moving too fast, how the instructor doesn’t go into detail enough, how the program is a scam, how the program isn’t worth the percentage of the salary that they’ll potentially be making, or how they feel like the program isn’t doing a good job of supporting them through their struggles. *sigh* I’m tired of these same students acting like I’m near the top of the class because of some innate ability. I’m not some genius nor do I have any programming or some type of stem background. No, I’m near the top because I put in the fucking work and come to class. I sacrificed a full-time job for this, so you bet your ass I’m going to give this program 100%. What pisses me off the most is that, like me, they’re minorities. This is an opportunity for us to move into a tax bracket that most of our families can only dream of, but here they are…wasting that opportunity away. And the moment you try to address their work ethic in any type of way, they feel victimized and offended. Oh, please…we all have our own issues, so cut the shit. If you can’t handle the program then accept that truth and leave. So the next time you hear some coding bootcamp student complain about how their program didn’t work for them, ask them about their work ethic. If they’re honest, you’ll see why it didn’t work for them.","['Programming', 'Coding', 'Coding Bootcamps', 'Technology', 'Education']",https://medium.com/@Ranter/confessions-of-a-coding-bootcamp-student-dbf84d0c920c,1,[],0,1,anonymous,Unknown,Unknown,Unknown
Women Who Code,We are a 501(c)(3) non-profit organization dedicated to inspiring women to excel in technology careers. https://www.womenwhocode.com/,Announcing the Alchemy Code Lab x WWCode Portland Scholarship,2018-03-19 21:31:00,medium,"Announcing the Alchemy Code Lab x W W Code Portland Scholarship Original post published here. Although it is one of their core values, the folks at Alchemy Code Lab don’t preach inclusivity. Instead, they make sure that everything they do is imbued with a welcoming atmosphere, and in doing so, hope to facilitate their students’ best work. Often that includes providing vital financial support to students so that they can take the huge step of transforming both their careers and their lives. The Alchemy Code Lab x W W Code Portland Scholarship aims to make this possible. In partnership with W W Code Portland, Alchemy Code Lab is awarding two $5, 000 scholarships each quarter to women who are self-starters, forward-thinking, and engaged in the community. Located in the heart of downtown Portland, Alchemy Code Lab operates with a finger on the pulse of the industry. These scholarships will be offered for the very first time in January 2018, and will be applied directly to the recipients’ software development training tuition. If you want to be part of shaping tomorrow, you belong at Alchemy Code Lab. “ This partnership with W W Code Portland is a key piece of Alchemy’s strategy and mandate to help get underrepresented groups into tech, ” said Alchemy Code Lab C E O and Head Instructor, Marty Nelson. “ We’ve seen progress in the number of women being hired, evidenced by numbers being reported through Tech Town Portland and our own hiring data that shows how fast our female graduates get hired. And while the trend is headed in the right direction, we still only see about a quarter of tech jobs being held by women. Given that women make up half the population, we can’t look at a quarter, or even a third, as being ‘good enough. ’ We need to double down on the efforts being made until we reach parity. ” As part of the Code Fellows network, Alchemy Code Lab provides training that is intensive and unparalleled. Working in a collaborative space with in-person instruction from industry pros, students engage with both proven curriculum, as well as advanced coursework developed specifically for Portland’s tech and creative communities. Alchemy Code Lab strives to bridge the technical and the creative, while generating real opportunity for the Portland community through code. Bootcamp Instructor and W W Code Portland Java Script Lead Sarah Joy Calpo describes Alchemy’s program as a supportive process in which everyone is encouraged to try new things and share their learning. “ No one knows what they’re doing, ” Sarah Joy says of the program. “ Admitting that helps us create an environment where everyone can say ‘ I don’t know’ and, in turn, figure things out. ” Hands-on and student-centered, Alchemy Code Lab’s approach stretches well beyond the classroom. From honing interview skills to building resumes, social presence, and personal branding, the team at Alchemy wants to empower students to hit the ground running in an increasingly competitive industry. Alchemy Code Lab is deeply invested in launching developers from all backgrounds into rewarding careers. Over the past year they’ve awarded over $200, 000 in financial assistance to women and underrepresented groups through their Diversity in Tech Scholarship. The Alchemy Code Lab x W W Code Portland Scholarship fund goes a step further in guiding even more women into the tech industry. Are you ready to radically change the course of your career? The first step is to fill out Alchemy Code Lab’s online application, and indicate that you’d like to be considered for the Alchemy Code Lab x W W Code Portland Scholarship! For more information about W W Code Portland, check out our Meetup page or follow us on Twitter (@wwcodeportland) and Instagram (@wwcodeportland). Originally published at www. womenwhocode. com.","['Tech', 'Code School', 'Learning', 'Education', 'Codingbootcamp']",https://medium.com/@WomenWhoCode/announcing-the-alchemy-code-lab-x-wwcode-portland-scholarship-ad89c0b915f2,1,"['Alchemy Code Lab', 'Code Fellows']",2,1,women,Unknown,Unknown,Unknown
David Clark,Mindfulness | Humans | Animals | Earth | Coding | IG: the.coffee.smith,Working With APIs & RSI – L2Code – Medium,2018-06-05 01:10:16,medium,"Working With A P Is & R S I What I’ve Learned, What’s Coming Up, and Dealing With Physical Pain Photo by Me Listening: Chvrches “ Love is Dead” Drinking: Colombia by William Joven, micro-lot coffee This last week, per Thinkful’s curriculum, I started working with A P Is. Namely, Git Hub’s and You Tube’s A P Is. I have to say — I really learned a lot here. You Tube A P I Working with the You Tube A P I has been… “great”. It’s been a bumpy road. It’s not as easy as just reading the docs and understanding what to do. I’m sure it is for more experienced developers, but for myself, it’s still quite the process. This is an instance of where I solved an issue I was having. There I was, trying to figure out how to add the You Tube feature of displaying the total results returned from a search form submission (query). I knew where this data was in the You Tube A P I object (. page Info. total Results), but was having trouble figuring out how to show it on the page. I had little trouble getting the search results to turn up, but for some reason or another, adding this element to my feature list threw me off. I started working on this just before a mentor meeting, so I had to put it on pause once that started. Toward the end of our meeting, I remembered to ask my mentor about this. I started walking him through what I had already done, and before I knew it, I had fully coded the feature in, and it was 100% function. Hah! This was my first time doing something like this, and let me tell you — it felt great! Finally, I had come across something I hadn’t done exactly the way I was doing it now, and I did it just fine! I can only assume that this is coming from a point of better understanding of programming. View my You Tube A P I project here. View it on with rawgit to interact with it here. Functions I think I’m getting more familiar with just how functions work. You’d think I would understand them by now, but they’re pretty tricky. Functions don’t just take one thing and do something with it — Depending on the function, it could do one thing, two things, one or two things, or a multitude of things. There’s also methods, which are built-in functions that have certain requirements and optional features. Namely, I’m getting more comfortable creating callback functions, or calling a function within another function. Bouncing from line-to-line in code is new to me, so it can get pretty confusing at times. But the more I read other code, the more it makes sense. It’s definitely not easy right now, but my last project actually made lots of sense, and I solved most of my issues by stepping back and reading my code, or by Googling. My Mentor Also this week, I got a new mentor. I have to say that I’m pretty happy about this. My first mentor wasn’t great at motivating or explaining how things work. If I asked how this thing was performing what it was doing, they wouldn’t really explain it. Rather, they would say something ambiguous, or over my head, or say too fast, or more often than nought, say, “ Well you don’t have to do it that way. You could do this. ” It just wasn’t a good match for me. My new mentor has ~20 years of experience and seems to be a bit more easy-going and willing to take things one step at a time. Thinkful gives a new mentor when you… *drum roll* are admitted into the full-stack development portion of the program. The time leading up to that is really a focus on programming fundamentals. So, yes, I’m officially a student of front-end web development. What’s Next? The front-end portion is almost done. What?! It feels like I just started! Next, I’m working on my front-end capstone, which includes working with an A P I of my choice, building a project of my choice. I think I know what I’m going to do, but I won’t post it here until I’ve completely made up my mind. Pain. Lots of it. Not the learning type of pain, but the physical pain. I purchased an external monitor, a laptop stand, a keyboard, and a mouse, so that I could be more productive. Having a second monitor is life-changing when it comes to writing code. I can have A P I docs pulled up on my laptop monitor, while my terminal and text editor are running on my external. It’s great! Unfortunately, though, there have been some side-effects. My right fingers/hand/wrist/arm/shoulder have started experiencing some pretty intense pain from — what I can only assume — using a mouse. This is probably just R S I (repetitive stress injury) and not carpal tunnel syndrome, but I don’t take chances when it comes to my well-being. I’ve since stopped using the mouse and keyboard, and now have my laptop in front of me instead of to the side, and my external monitor just above my laptop. This doesn’t make for the ideal eye-height, but I’m waiting for my Magic Track Pad to arrive. I think the external mouse is what was causing the pain. I tried a vertical mouse first, then returned it when the pain started. The traditional mouse was even worse. Since I’ve gone back to the laptop’s trackpad, the pain has almost entirely dissipated, and is now mostly just tingling at some times. I think another contributing source is my desk height. While it’s at the standard 30. 5 inches, I need it to be at 25 inches max in order to get a 90º angle at both my legs and my arms. I’ve been considering getting an adjustable-height desk, but I’ve only found a couple that get down to 25 inches, and they’re expensive! If you have any suggestions, please let me know!","['Programming', 'Learning To Code', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/l2code/working-with-apis-rsi-53053721fc25,0,[],0,0,david,M,0.0035582779766708743,0.9964417220233291
adam tropp,,CS 100.9.1: Hash Tables and Hashing – adam tropp – Medium,2018-05-18 20:06:49,medium,"C S 100. 9. 1: Hash Tables and Hashing Ten posts in, we have reached the point where, following the pattern, this post should be called “ C S101. 0”! However, since this series is not nearly in-depth enough, nor am I nearly knowledgeable enough, to write a C S 101 course, we will call it C S 100. 9. 1. Don’t think that this means the content herein is, in any way, an order of magnitude less important than what we have covered thus far. In fact, hash tables are extremely foundational data structures, and probably should have been covered earlier in this series. See, I don’t know A N Y T H I N G?! ( Also, notice how I opted to go for 100. 9. 1 instead of 100. 91, mirroring the way software versions are released. Can anyone say M E T A?!) Okay, on to hash tables. You are likely familar with whatever implementation of hash tables your language of choice implements: dictionaries in Python, hashes in Ruby, objects in Java Script, etc. Let’s take the Python naming convention as an example, since it is the most indicative. A hash table is just that: a dictionary. When you think about what a dictionary really is, it is a list of key-value pairs, where looking up a key maps to a particular value. This can be particularly useful in solving problems where multiple pieces of information need to be known at every step, perhaps even some problems you would have thought to use an array (or several arrays) for. When used properly, hash tables can greatly reduce the time complexity of various functions, and can make code easier to understand. First, an overview of hashing. I mentioned that each key is “mapped” to a value. Of course, this does not happen automatically, but instead, the computer accomplishes this by way of a hash function. Understanding how to write a good hash function is beyond the scope of what most interviewers will expect of a junior developer, but it is not a bad thing to have some familiarity with, even if you can’t write perfect code for it. The problem with adding keys to a hash table is that keys can be anything. In arrays, it is simple to add items and check whether items are there; they are stored at an integer index, and we can check for an item at that index. Hash keys are not necessarily integers, so we need a way to standardize them and map them to a consistent set of possible indices. This is where hashing comes in. A hash function takes a particular key and converts it to a representation that can be stored in the table. Hash functions must always map the same key to the same location, and they must ensure that all equal keys map to the same location (in other words, 9. 0, the float, and 9, the integer, must map to the same location in memory). The problem here is that, when creating the hash table, we do not always know what keys and kinds of keys we will need to store. What is more, hash tables are not memory-efficient data structures, and can quickly grow unwieldy if we allot to much space for keys to be mapped to. The struggle with hash tables is finding a balance between allotting too much space and making sure that unique keys map to unique locations. When two different keys map to the same location, this is known as a “collision”, and it must be handled by the hash function. This, then, is the fundamental struggle of hash functions: map keys to as many different locations as possible without taking up excessive memory, minimize collisions, and when they do occur, handle them as efficiently as possible. Going back to our Python dictionary example, Python’s dictionary hash function works by taking the 32-bit binary representation of each key, mapping to the last three bits in that key, and if there is a collision at that location, introducing earlier bits until an emtpy slot is found. When 2/3 of the slots in the table are occupied, the table resizes (4x for a table <50, 000 entries long, 2x for a table >50, 000). This, however, is not the most common way to handle collisions. Far more typical is using “chaining”, wherein, a key is mapped to a location, and if there is a collision there, a linked list is created at that location, with each item in the list pointing to the next key that maps to that location. In any case, the bottom line is that hash tables are efficient precisely because we can write hash functions that optimize space efficiency while minimizing the number of collisions, creating a situation where, in the average case, an entry in the table is no more than 1–2 collisions deep, and the space required to make this happen is not substantially more than the number of items in the list. In fact, when used properly, a hash table with a good hash function can find a given key and its value, insert a key, and delete a key, all in O(1) time in the average case. It is important to realize that when hashing with chaining, in the worst case, and indeed, this is true for all hasing schemes: the lookup, insertion, and deletion times will be O(n). This is because, at worst, all items will hash to the same location, and we will be left with an n-length list of items. In practice, we can make this incredibly unlikely, and the way to do so is one of the most common and thus far undiscussed algorithm strategies in C S: randomization. The idea is that, with n keys to be hashed, each key is mapped to a random location, and thus each key is equally likely to be mapped to any location. In practice, this assumption does not hold up for various reasons, but don’t worry about that, and take it to be true. If this is true, then supposing that we have n keys and a table of length m, the expected length of each chain is n/m, since for each slot in the table, each key has a 1/m chance of hashing to it, and there are n keys. The expected chain length is referred to as the “load factor” of the table. If there are twice as many keys as slots in the table, the load factor will be two. If n is 10 times m, the load factor will be 10, and so on. This is not important. What isimportant is that these are constants, so, the cost of performing an action on the table will always be O(1+n/m), and thus will be constant. The tricky part, then, is writing a hash function that, as closely as possible, simulates the assumption we made that each key is equally likely to map to any given location, independent of where other keys map. Again, this assumption, known as simple uniform hashing, is a theoretical ideal that we can never achieve in practice, but we can approximate it as closely as possible, and this is where randomization comes into play. We call this algorithm universal hashing, and it looks like this:h(k) = [(ak + b) mod p] mod m Obviously, h(k) is the hash function for a particular key. p is a prime number larger than the universe of possible keys you are hashing, so for example, if you are making a table of bones in the human body, p is a prime number >206. a and b are random numbers between 0 and p. In practice, this function creates a situation where the likelihood of two non-equal keys hashing to the same location is 1/m in the worst case, meaning that our theoretical ideal is essentially met. Again, understanding universal hashing is way beyond what most interviewers will expect of you, but I figured at least having some exposure to it could only help you in your quest. Hopefully, having some sense of how hash tables work under the hood helps elucidate why they are so useful in solving problems. Indeed, they are some of the most common data structures in C S applications, and now that you know how they work, I urge you to begin thinking about when you can use them to simplify problems. In general, in situations where you want to make use of relationships between multiple data points, hash tables are often your best bet. I will leave you today with some wise words from a presenter at Py Con 2010 by the name of Brandon Craig Rhodes“ May your hashes be unique, your hash tables never full, and may your keys rarely collide” Thanks for reading! Til next time.","['Programming', 'Codingbootcamp', 'Computer Science']",https://medium.com/@adt6261/cs-100-9-1-hash-tables-and-hashing-6228c6a00cc3,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 19 — (Exam03) – Mike Brave – Medium,2018-09-08 05:55:03,medium,"42 Piscine Day 19 — ( Exam03) Edit: This is part of a series that culminated here, Next post. Previous post. Well I no longer fear failure as it has been my constant companion. “hello little fella, good to see you again, oh is that how today will go, fantastic, I’ll try to learn from it”. In short, I failed the exam. Not because I don’t know how to code, no not that but because my brain decided that remembering which library to use was no longer information worth remembering. Code was otherwise flawless and functional, but with a compile error, still compiled, still worked, but I failed the exam. One of my friends failed as well because he forgot to put them in proper folders, again code was fine but instructions weren’t followed. Such is the nature of the beast that is the piscine. It doesn’t even phase me anymore, no anger, no depression, just a hard lesson learned. My chances of getting in this time are ever slimmer as rather than show progress mine has been a downward slope, despite my ability to code being better than it was at the start, these dumb mistakes have really cost me. Most people did fairly well on the exam though, we are all improving, and most people don’t spaz out like me and make dumb mistakes. So for most a fairly good day. More people continue to leave everyday, but strangely I saw more than ten people at the exam that I’ve never seen before, and I’m here from about 8 am to 10 pm everyday, so I’m not sure how that happened unless they are purely nocturnal, even then I would have though, a couple of nights I’ve not slept well and come in at 3 am, several times I’ve come in at 6 instead of 8. I have no idea who they are or where they came from, they are clearly registered but they haven’t been here. My headcount is still around 85 every-night, but we had about 130 sign up for the exam, again it doesn’t really add up for me. It’s been cool to get to know some of the other students as well. One is a chemist that used to do research for the E P A, another a pharmacy tech, another a former nurse. We have people from all over Europe, all over the U S A, Australia, New Zealand, Africa, the Caribbean, Ukraine. I hear at least five different languages daily. I’m exposed to ideas I’ve never thought of, I just played one of the most enjoyable games of chess of my life. In the slack channel they have asked for volunteers to study really cool things, to mentor kids in programming and to do hackathons. I want to volunteer every time they ask, but I’m not actually part of the school yet, and if things continue as they are I may not get in, at least not the first time. But I still want to be here. I need to learn to be better about figuring things out on my own, but this is the place to learn that. It says a lot about a place when people willingly come back to potentially fail again and don’t feel cheated by the experience. Barely matters though, I’m growing my skills, I’m growing as a person, and as frustrating as this has been I have no regrets about having done it. Tomorrow is a new day.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-19-exam03-5be70b547184,0,[],0,1,mike,M,0.003228654060934749,0.9967713459390652
Mary Sedarous,Marketing and PR at Code Chrysalis. Undergrad at UW-Madison and Master’s from University of Tokyo. I tweet about spies @MarySedJP on Twitter :),The importance of using your voice – Code Chrysalis – Medium,2018-08-27 08:11:13,medium,"The importance of using your voice Even when you’re a software engineer Last week, Yumi Nogami (opera singer and voice trainer extraordinaire) visited Code Chrysalis to teach students the fundamentals of voice training. Communication is a key component of our curriculum and an important skill for software engineers. Your voice, and how you use it, is often one of the cornerstones of this skill. We began working with Yumi because, as stated before, communication is central to our curriculum. Internationally competitive software engineers need to develop soft skills like communication alongside their technical abilities. They especially need to be able to communicate in English, which we also teach. Most software engineers have never given a public technical talk and we want our students to be able to be assertive about sharing what they know and confident in their ability to learn what is necessary. By the time they’ve graduated from our immersive, our students will have given multiple presentations per week, both in class and to our partners. Our current cohort will be discussing their tech topics of choice at the Big Mini Conf and, like every cohort before them, presenting their M V Ps at Demo Day for graduation. According to Yumi, poor articulation, quietness, or even a mismatch between what you want to express and the way in which you vocally express it can all contribute to ineffective communication. Such an obvious statement, but one that is surprisingly easy to overlook. We sat down after class to talk about her background as an opera singer and voice trainer, and how her work connects with society. How long have you been working as an opera singer? I’ve been singing since I was a child, but my debut as an opera singer was shortly after I graduated college. So it’s been about 17 years now. I’ve been working as a voice trainer for the same period. What kind of people do you usually teach? I teach the basics of vocalization, so I have a wide range of students. I teach singing, of course, but as a voice trainer my main focus is helping people use their voices properly in order to express themselves. So, as a result, I teach everyone who makes their voice their job. Narrators, voice actors, actors, and even general employees — I instruct a lot of different people! What is the importance of one’s “voice” in your opinion? If you don’t know how to use your voice, it is difficult to properly express what you feel about things — not to mention your most important thoughts! If your enthusiasm and your technique for expressing that enthusiasm don’t match, I think you can start to feel really depressed. So that’s the sort of thing I try to fix as a voice trainer. What separates effective speakers from ineffective ones? Articulation is one of the first things that comes to mind. If you can’t speak clearly, then no matter how passionately you feel about something you won’t be able to reach people. After that is vocal range. If you have limited range, then you can’t express your passion either. The most effective speakers have really good control over the pitch of their voice, so when they’re speaking they can express both excitement and seriousness clearly and with impact. In fact, one of the things I teach is how to gain that same persuasiveness. What were your initial thoughts on Code Chrysalis? At first, I was worried about whether I would be able to train foreigners given the language barrier and other differences, but during the first lesson it became clear the difficulties they faced were exactly the same as my Japanese students. For example, the most common things people worry about are having quiet voices or poor articulation, or having a lot of thoughts but difficulty properly expressing them aloud. These are the types of universal problems I try to help with. However, people using different languages have different weaknesses when it comes to the muscles involved in using one’s voice, so I keep that in mind when I’m trying to help my students. The thing that surprised me most when I first came to Code Chrysalis was definitely the environment — it was so different and wonderful. Even I’d like to work at a company like this (laughs). The environment at the average Japanese company can be so psychologically unhealthy sometimes, so I hope all of Japan becomes more like Code Chrysalis. If you want to share your thoughts, you need to have a good mental environment, and if you don’t feel happy it is really difficult to express yourself. In the same way, if your work environment isn’t positive, it is really difficult to express your ability. This is why I was so impressed when I first came to Code Chrysalis. Now that you mention it, it’s not uncommon to hear that people feel difficulty expressing themselves in Japanese companies. It would be really nice if things changed, wouldn’t it. Absolutely. There are a lot of things that we can improve upon, but this is one of the things I most wish would change. In my lessons, I always try to make sure that people can have fun using their voices and expressing themselves, and I believe that expressive ability is connected to people’s hopes and dreams. That’s the type of lesson I want to create — one connected to people’s dreams. We’re really grateful to Yumi for coming to give voice lessons for the third time! In the meantime, if you’d like to see one of her performances, check out her Twitter. Code Chrysalis is an English-language based coding school located in the heart of Tokyo. Our programs include a 12-week advanced software engineering bootcamp, a beginner coding course, and an English communication immersive. See why we are an industry leader in tech education in Japan. Follow us on Instagram | Facebook | Twitter | You Tube","['Programming', 'Education', 'Technology', 'Codingbootcamp', 'Tech']",https://medium.com/code-chrysalis/the-importance-of-using-your-voice-d47e0c4cf605,3,[],0,3,mary,F,0.9963367130940759,0.0036632869059240857
Andrew Schittone,,Beginners Guide to Debugging in Ruby – Andrew Schittone – Medium,2017-07-11 12:49:22,medium,"Beginners Guide to Debugging in Ruby If you’re reading this article, you’ll probably agree that learning to program is difficult and can be intimidating at times, regardless of what language you’re starting out with. As a beginner, you quickly realize that most of your time while coding is geared towards figuring out where you went wrong in your code- whether it be a syntax issue, or just logic in general. It’s very possible to spend an absurd amount of time, as a beginner, trying to figure out where you went wrong on one error in your code as- so this blog post can be used as a guide to follow in order to debug your code a little bit more efficiently. Regardless of what language you’re coding in, it’s extremely important to start out by following the stack trace when you run your program and it breaks. To a beginner, it may look overwhelming, kind of like the computer is yelling at you- believe it or not it’s there to help you. There are different types of error messages that come back in the stack trace to help you figure out where you went wrong in your code, here are some of the most common types: Name Errors- if the Ruby interpreter finds a word that it doesn’t understand, it tries to interpret the word as a variable or method. This error will come back if the variable or method has never been defined. Syntax Errors- these types of errors are usually straight forward. There’s a syntax error in your program that’s preventing it from running properly. No Method Errors- a lot of times if you have a variable in your program with a nil value and you try to call a method on it, you’ll get this error. This error occurs when you try to call a specific method on a date type that it doesn’t work with. For example, if you try to call . to_a on a string. Argument Errors- this error occurs when you do not pass in the correct amount of arguments that a method requires. Type Errors- one way you’ll see this is if you try to perform a mathematical operation between a string and an integer, you’ll get this type of error. The best part about receiving these errors is that there will most likely be some sort of line number in the stack trace, where you can try to find the error to debug in your editor. It’s important to understand each of these and other errors that you may receive, so you know where to look and what to do to try and fix your code. This may seem overly simple if you’ve been programming for years, but for beginners, it’s imperative that you become comfortable with looking at these error messages, you’ll see them a lot! Another excellent way to debug your ruby code, is to use Ruby’s Pry Gem in order to break your program where you’d like. All you need to do is make sure your Pry gem is installed, and include “ require ‘pry’ ” at the top of your program. What pry will allow you to do is stop your program wherever you’d like, when you run it in your terminal, so you can test each part of your program separately before it runs the rest. It’ll enter into an irb-like environment in order to test out your code. Wherever you want to break your program, just include a “binding. pry” wherever you’d like, similar to below: This can be excellent when you’re unsure of what a variable is equal to at some point in your program, or you want to find out at exactly what point your program is breaking. I overlooked this when I first started to learn Ruby, however I’m relying on this more and more everyday to assist with debugging. Another way you can use pry is by putting “ Pry. start” in your text editor, in order to enter into an irb like environment right when the program is ran. You can than test your program from here and exit out of Pry if you’d like. Getting into theses habits of understanding and listening to error messages, and learning how to use specific gems such as Pry at an early stage can only help you out as you get into more advanced concepts in Ruby- such as object orientation, has many/has many through relationships, and object relational mapping. There are many other ways to go about debugging in Ruby, especially as you become more advanced- however you’ll find yourself using Pry a lot as a Ruby programmer.","['Programming', 'Coding', 'Ruby', 'Rubygems', 'Codingbootcamp']",https://medium.com/@aschittone/beginners-guide-to-debugging-in-ruby-a811b088927a,0,[],0,3,andrew,M,0.0037934542159017816,0.9962065457840982
Christina Angeline,,Coding School: 4 things you should do and I should have done prior to day 1,2017-05-05 02:08:22,medium,"Coding School: 4 things you should do and I should have done prior to day 11. Research instructors teaching style and philosophy. If they don’t fit with your learning style…… Bye Felicia!!!2. Find out which text editor your future school is using, and then read/watch tutorials on how your text editor works. 3. Read/watch tutorials on how to use the M A C terminal4. Read/watch tutorials on how the console. log() works with your text editor, terminal, and browser.","['Web Development', 'Coding', 'Codingbootcamp']",https://medium.com/@christina.kim.angeline/coding-school-4-things-you-should-do-and-i-should-have-done-prior-to-day-1-60112c86f63a,0,[],0,2,christina,F,0.9958366475488759,0.004163352451124042
HackerYou,"Hands-on, project-based learning. Proven results. We offer Toronto’s best full-and part-time coding courses to help you become the best developer you can be.",Summer Academy Ruby on Rails Project Showcase – HackerYou College of Technology – Medium,2013-09-06 17:08:35,medium,"Summer Academy Ruby on Rails Project Showcase This summer, students from around the world converged on Shopify H Q in Ottawa for Hacker You’s first-ever Summer Academy program. This full-time Ruby on Rails course was unlike any educational experience these students had had before. It was an intense summer of learning, professional development, and personal growth — but it was also a great opportunity to get to know some of the folks behind Shopify and meet like-minded developers-in-training from around the globe. While a handful of students had some existing coding knowledge, most had very little dev experience — and everyone was new to Ruby. We started from the start — installing Rails and setting up a Git Hub account. Over the weeks, we watched their knowledge grow and their skills expand. They went from Hello World to building out their own versions of Twitter and Flickr, to building the sophisticated apps you see here in this post. C O D E D O J O (click here for demo) Our first app comes to us from Sam Power, Tyler Sangster, Najwa Azer and Elaine Archer. This international team decided to build an app to solve a real-life problem of their very own: how on earth do you sift through the incredible volume of coding educational resources online to find the content that’s best for you? Code Dojo is a tool that allows you to search, filter and sort online coding tutorials, guides and courses based on subject, format and provider. Once you’ve found the right resources for you, community reviews help you make an informed decision. C U R R I A P P (click here for demo) This app is the brainchild of Ahmed Omran, Alexander Miloff, Nachiket Kumar and Paula Franzini. Like the group that brought you Code Dojo, this team decided to focus on a problem they understood well: student-teacher communication. Curri was born out of a desire to simplify the way students and teachers communicated about learning progress. The team understood the frustrations that many teachers and students experienced and wanted to create a simple solution for this common pain point. And thus, Curri App was born! S. A. M. Simple Appointment Manager was developed by Lucas Moore, Andres Ibarra, Andrea Del Rio, and Kate Hudson as a way to help you keep track of all your appointments with service providers. This app allows to you make sure your schedule is properly updated with everything from your next doctor’s appointment to your upcoming session with your tennis coach. This online booking and schedule management tool is intended to be a one-stop-shop where thousands of service providers can be managed. S M A R T P R O V I D E R (click for demo) It’s no secret — Canada’s population is aging, and it’s taking a toll on our health care system. The team behind Smart Provider got to work creating a tool that would allow homecare nurses and doctors to manage their case loads more efficiently and provider better care to more people. Smart Provider was created by Ron Victorino, Kathleen Gatti and Freddy Rangel. C A L E N D R (click here for demo) Our final group project came from Harman Dhillon and Tom Wark. Harman and Tom teamed up to tackle the problem of inconvenient scheduling systems in medical offices. They wanted to go a step beyond a simple appointment booking platform and incorporate a feature that allows patients to be notified when a new appointment becomes available that might better suit their schedule. Y O U S H O U L D R E A D T H I S (click for demo) Created by Karen Anderson, this curated quarterly reading lists prompts users with a series of fun questions designed to get a sense of their interests and preferences, and sends them to a unique book recommendation based on their response. We asked Karen to tell us about the experience of building an app, and this is what she said: “ Hacker You gave me a great high-level overview of the structure of an application and the individual components required to pull it all together. I designed my simple app to grow-up in to a ‘sampler’ project — i. e. a basic M V P that I can keep adding elements to as I continue to learn. ” B E T2 G O A L This app, created by Gael Rivaud, is an online social betting game for sports. The platform allows you to connect with members of the online community and place bids in an auction. M A G N E T I C P O E T R Y (click for demo) This app created by Kate Hudson needs little introduction. Built in Rails, this fun app allows you to arrange virtual magnets on an online fridge. You can even add your own words. We asked Kate about her experience building out her first apps: “ Hacker You was a rewarding experience for me because (with guidance) we were able to create small applications relatively quickly” she explained. “ Programming is mostly, if not entirely, solving problems and as a beginner, the multitudes of errors can be discouraging. It was very encouraging to be able to show people a working example applying concepts we were learning from the instructors. It was really awesome to be able to go from zero programming experience to making a tangible application that people can interact with. ” A R T I S T S U B M I S S I O N A P P (click for demo) When they began Summer Academy, part of Paula Franzini and Ahmed Omran’s goal was to develop an artist submission app for a local art collective’s upcoming 2013 exhibition. Together, they built the app that allows artists to register a profile and submit their work for review. When we asked Paula about her favorite part of Hacker You, she shared these thoughts: “ Reliving the experience of being part of a close-knit, intense and fun group of students, studying and relaxing together. The group — including the wonderful coordinators, mentors, and instructors — was a wonderful mix of fascinating people with diverse backgrounds. Two months ago they were a bunch of strangers to be shy in front of — now I feel like I have many new great friends. ” Working with the same arts organization, Paula also took on her own individual project, showcasing the artists and the art of a local exhibition, Vanier Quartier Numerique. We couldn’t be prouder of the amazing accomplishments of Hacker You’s first-ever full-time cohort. Over the last two months, they have put in a tremendous amount of effort, and the results are impressive. We now have newly-minted entrepreneurs building out products, and students going on to exciting new jobs (including one with Hacker You!). If you’re interested in learning more about the students, their work, and their projects, feel free to connect with Heather at heather (at) hackeryou. com. Congratulations once again to the inaugural class of Hacker You Summer Academy!","['Projects', 'Ruby on Rails', 'Coding Bootcamp', 'Hackeryou', 'Learn To Code']",https://medium.com/hackeryou-college-of-technology/summer-academy-ruby-on-rails-project-showcase-8ba30b5b2efe,3,[],0,0,hackeryou,Unknown,Unknown,Unknown
Roberto Busó-García,,Song to Self – Roberto Busó-García – Medium,2018-08-02 03:05:24,medium,"Song to Self And in conclusion, Walt Whitman once wrote:“ The question, O me! so sad, recurring — What good amid…”binding. pry An app deferred. I wake up from my recurring day-dream of being interrupted while quoting Whitman at the end of a lecture that no one wants to hear to find myself looking at code. But in a good way. I mean, what a wonderful thing this pry gem is, able to stop time so we can find an error we know is about to happen. A gem with the ability to halt the flow of events so I can figure out values and relationships, decipher error messages, to comb through characters. A gem with the power to provide hope. Because it’s all there, I know: in the code, in the messages, in those symbols and models. Inevitably, however, I usually end up feeling like I learned Greek to break the Rosetta Stone… without ever knowing coptic. At this point, this isn’t new. I know that there is a solution and I have experienced the ecstatic joy that finding it provokes. So I remind myself that there is a reward after every single struggle. We solve problems, we learn to be more idiomatic, to better think about efficiency and value. There is the joy of feeling like we’re better understood — even if it’s by a piece of software that translates to assembly language. Then there is the thrill of the quest for an answer. I find myself savoring this journey as I learn by failing: object by object, method by method, module by module. I get the sense that code can actually create meaning. And isn’t meaning what we all seek, when all is said and done, at the end of all things? A G I F file. Now, let’s go back to the situation at hand. The code broke and I bound pry. I look at my screen. The outside world around me is bright, hectic, loud. People passionately discuss nested hashes and the arrays within. Others scream platitudes, lost in a labyrinth of inner joins without an O R M to save them. And in a corner, alone, someone listens to Bad Bunny. None of that matters. Because on my screen, it is quiet. I look at it and I strive try to look *into* it . Whoa. The material world dissolves. The noise fades out. All that’s left is the code, the error message, me. And a cursor that blinks. I am one with the terminal, now wading in an expansive and dark pool of rake dbs, git adds and bundle installs. Inside this quiet world, I remember to step back from myself and what is in front of me. I struggle for a while, but slowly start to visualize the logic of this specific set of instructions, to verbalize where we are, to reimagine where we are going, to try and see the road we could follow to get there. And there it is: in Ruby, the idea of the self is flexible. Deep inside the console of my binary dreams, I remember that in Ruby, the self depends on context: that there is a fluidity to the sense of self, a certain degree of freedom to change. A rose is a rose is a rose…unless we are inside the orchid class. In this ability to redefine the self depending on context, I find magic and solace. I also find healing for my broken code. Leaves of Class I re-adjust variables and methods depending on the specific class and I feel the power in respecting the limitations of scope. I smile within: the code works, the tests pass. I celebrate the self, I sing the self…and what I assume Ruby shall assume. Through a muddled window, I look past the people, the trucks, the trains to find a sliver of sky. There is poetry in coding, perhaps.","['Ruby', 'Codingbootcamp', 'Programming', 'Walt Whitman', 'Learning To Code']",https://medium.com/@robertobuso/song-to-self-8d6b3b57408f,1,[],0,3,roberto,M,0.007688553723193651,0.9923114462768063
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18","JavaScript ""Prototype Chains"" – J.Lim – Medium",2018-06-05 14:12:27,medium,"Java Script “ Prototype Chains” J L’s Coding Bootcamp Story #9[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”5.  Summary of Code School’s “ Try j Query”6.  Java Script “ This” — Advanced7.  Java Script “ Code Reuse” — Part 1–1: Decorators8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”( Current)10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes Prototype chains are a mechanism for making objects that resemble other objects. When you want two objects to have all the same properties (either to save memory or to avoid code duplication), you might decide to copy all the properties over from one to the other. As an alternative, Java Script provides the option of prototype chains. This makes one object behave as if it has all the same properties of another object. var orange = { a:1 };console. log(orange. a); C O P Y R I G H T © 2018 Code Statesvar orange = { a:1 };console. log(orange. a); // 1// The value found there gets provided to the logging system as the result of the lookup If we ask for a property that the object does not have, the interpreter acknowledges the failure by providing “undefined” in response to the attempted look up of the “z” property. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefined Now imagine that our program called for an object bearing a resemblance to the orange one we already made. To achieve this, we would build a new object and give it all the same values stored at the same keys. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue =    {}; The new object called “blue” is set up to be a replica of orange object. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue = extend({}, orange); Although the effect of this copy operation on the blue object will last indefinitely, it’s important to remember that copying happens just at the moment during the program’s execution. C O P Y R I G H T © 2018 Code States The copying is completed and won’t be repeated. So, if our program modifies orange or blue over time, we’d probably only expect them to have the “a” property in common after the modifications. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue = extend({}, orange);blue. b = 2;console. log(blue. a); // 1console. log(blue. b); // 2console. log(blue. z); // undefinedvar rose = ______________; Let’s make another replica of the orange object by using a different strategy. The Object. create function can create objects with this lookup delegation feature. When passing our delegated fallback object, it produces a new object that delegates failed lookups to your fallback object. C O P Y R I G H T © 2018 Code Statesvar orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue = extend({}, orange);blue. b = 2;console. log(blue. a); // 1console. log(blue. b); // 2console. log(blue. z); // undefinedvar rose = Object. create(orange);rose. b = 2; You can still interact with this special object the same way you would any regular object. C O P Y R I G H T © 2018 Code States But, when you ask for a property that isn’t available directly, the lookup “falls through” up the chain to the prototype object. Since the prototype object has the property, the lookup ultimately succeeds. Notice that the “similarity” between rose and orange is achieved at the moment of lookup, not as a result of an earlier copying process. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue = extend({}, orange);blue. b = 2;console. log(blue. a); // 1console. log(blue. b); // 2console. log(blue. z); // undefinedvar rose = Object. create(orange);rose. b = 2;console. log(rose. a); // 1console. log(rose. b); // 2console. log(rose. z); // undefined For properties that can be found directly on the lower object, the prototype chain is never conducted. Since the key “b” can be found directly within rose, this isn’t considered as a “failed lookup” and the prototype relationship doesn’t come into play. As usual, completely absent properties are reported as missing. The main difference between the two techniques is in which moment you expect values on orange to influence the other two objects: a single moment of copying or every moment of lookup event. Modifying orange should reveal an interesting difference. var orange = { a:1 };console. log(orange. a); // 1console. log(orange. z); // undefinedvar blue = extend({}, orange);blue. b = 2;console. log(blue. a); // 1console. log(blue. b); // 2console. log(blue. z); // undefinedvar rose = Object. create(orange);rose. b = 2;console. log(rose. a); // 1console. log(rose. b); // 2console. log(rose. z); // undefinedorange. z = 3; console. log(blue. z); // undefinedconsole. log(rose. z); // 3 When we try to log the new property through blue, no property is found. Since the copy operation was one-time, the relationship between the two objects was over immediately. By contrast, when we look for the “z” property through rose, the failed local lookup results in a fail through lookup on the prototype object and the new value appears to be available on orange’s other style of doppleganger, rose. C O P Y R I G H T © 2018 Code States Let’s consider this prototype relationship on its own. The orange object has its own failed lookups. There is a top-level object that every Java Script object eventually delegates to. We call it “the object prototype, ” since it provides the shared properties of all objects. For example, every single object has a . to String method on it (even a new empty object). When you ask an object for its . to String property, you get an access to a function that can do the appropriate work. Once you’ve accessed the function, you can immediately call it and the object you initiated the property lookup on will have appeared to the left of the dot at call time. Thanks to how the parameter this works, the shared function will work as expected even though the to String method was technically stored only in the object prototype. A number of other useful helper methods are available there as well and it’s a good idea to look up the documentation about each of them. One of the most useful properties is . constructor, which makes it easy to tell which function was used to create a certain object. C O P Y R I G H T © 2018 Code States People frequently confuse the object prototype with this constructor function for objects. So, let’s visualize the two in different boxes for a moment. Whenever you ask an object about its . constructor, the object most likely doesn’t have a local . constructor property. So, the prototype chain gets consulted. The . constructor property on the object prototype points to the constructor function for making objects, which produces the object as the result. C O P Y R I G H T © 2018 Code States Even though this diagram shows only one of the three object prototype methods residing “outside” the boundaries of the object, this is how all properties actually work. They’re just references to other objects. C O P Y R I G H T © 2018 Code States We can put the representation of the object function back into the object prototype box, since we know it’s not actually “contained” there. C O P Y R I G H T © 2018 Code States Every value in the diagram is actually an object being stored elsewhere and referenced by the property (even the number objects and the function objects). So, we can remove Object’s highlighting to make the consistency clearer. Unless you take special steps, most new objects you create will delegate to the object prototype. But, some of the special sorts of objects you create in Java Script have extra features, above the beyond the basic characteristics of all objects. Arrays, for example, have methods like . index Of and . slice. Those are stored in another prototype object called “the array prototype. ” Since arrays behave differently from objects, it even has its own version of some standard methods like . to String. The array prototype delegates in turn to the object prototype, so that the non-unique aspects of arrays can be inherited from the object constructor and not every method will need to be re-implemented for arrays. C O P Y R I G H T © 2018 Code States Notice that both the array prototype and object prototype have . constructor properties even though one delegates to the other. When querying an array for its . constructor property, the array prototype doesn’t need to delegate any further up the prototype chain to find it. The lookup for . constructor in this example fails on the array instance. But, it doesn’t fail once it reaches the array prototype. A property on an object with the same name as a property further up the prototype chain is said to “mask” the property higher up. [ Note] This blog post is written based on a lecture from Code States. Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['JavaScript', 'Prototype', 'Arrays', 'Objects', 'Codingbootcamp']",https://medium.com/@j_lim_j/javascript-prototype-chains-cff594f35431,0,[],0,804,j.lim,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 48 — Workinonit – conshus – Medium,2017-05-17 10:58:06,medium,"Day 48 — Workinonitliner notes: I didn’t get what I planned to get done yesterday, but I did get some other things completed. My project has a side nav bar when the user is on a mobile device. For some reason, I was getting an error about velocity. After reading documentation, some Googling and try solutions from Stack Overflow, I figured it out. There’s one nagging side effect, but I think I can fix it with C S S. I also set up a few of the components that I’ll be using in my project. It’s really starting to take shape. A major component to my project is using Google Maps. Thanks to Tyler for putting me on to react-google-maps. Took some time to watch a You Tube tutorial to get more familiar. I was able to get a map embedded and geolocation to work. On my to do list for today is to add the ability for people to select locations from a list and create a tour. My plan is to just update the states of both the full list and selected list. We’ll see if that works. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Google Maps', 'Coding', 'Codingbootcamp', 'Code', 'Hip Hop']",https://medium.com/@conshus/day-48-workinonit-7df1ccdf1b98,1,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
Cameron Robinson,"Closet photographer and aspiring health nut working as a coder. I mostly write about figuring out life, faith, coding and tech.",Surviving After The Coding Bootcamp – Cameron Robinson – Medium,2018-03-19 11:34:39,medium,"Surviving After The Coding Bootcamp Tips that helped me out I’m not a big list guy but I know that the post-bootcamp life can be hectic and very stressful, especially with the money that you probably put in and this being a whole new career path looming over you. Here are the things I did and the mindset I had while initially job searching two years ago when I first got out of my coding bootcamp. You don’t know enough. That’s okay. No one else does either. I’m in my second job out of bootcamp and what I’ve learned from working with two teams is that everyone Googles looking for answers, everyone goes through Stack Overflow, when things break, half the time, more than one developer is looking at the problem. This is now your lifelong headache, but it’s everyone else’s too. Make one big unpolished web app and multiple small and polished projects. One is to show your versatility as a coder. The other is to catch the eyes of employers. Having clean code in a project with a less than pretty ui and projects that are clean and yet simple with a basic and visually pleasing design will help you along with getting that first web development job. Keep a few repositories active on Github(even it’s just changing the background color to your site every week). If your Github is dead and you have no recent projects you can point to, you’re pretty much telling companies to simply take you at your word when it comes to your skills. Do a coding exercise every single day (adding a list of sites to practice) There are a L O T of sites and you N E E D to keep your skills up (even after you get a job in order to plan for you next one). Here are a few sites to try out: Top Coder, Hacker Rank, Check. I O, Codewars, Code Eval, Codin Game Go to local meetups as often as you can. Meet other developers and see what is going on locally and what other developers using your languages, frameworks and environments are wanting to figure out or move into. Practice the terminology for your development environment. Don’t be like me and call characters the squiggly thing and that line thingy. Interact with online communities in your city and state and in general a few times a week: Slack, Quora, Twitter, Reddit, Stack Overflow and Linked In. Don’t freak out! You’re okay. And honestly, while I can’t 100% guarantee you getting a job, I think if you do these things, you’ll be fine. :)","['Programming', 'Coding', 'Codingbootcamp', 'Job Hunting', 'Self Improvement']",https://medium.com/@cameronrobinson_37662/surviving-after-the-coding-bootcamp-92ed080e11f7,1,[],0,3,cameron,M,0.09092395366218237,0.9090760463378177
Jonathan,,"My Experience at Codesmith, so far… – Jonathan – Medium",2017-08-12 16:51:25,medium,"My Experience at Codesmith, so far… If you’re reading this, I think it’s safe to assume that you’re looking join the Codesmith family — or perhaps just doing some research on how to get your foot into the door of the tech field. For that reason, I feel it important to share who I am, and where I come from (especially since this is my first post), since these are things that I had a lot of trouble accepting about myself before taking the leap that I did. There is a common misconception that the tech field is for “very intelligent people” or people who have spent years pursuing a computer science degree. Let’s briefly wipe the floor with that by sharing how I got here. My name is Jon. I’m 24 years old and was born and raised in Los Angeles, C A. I don’t come from a wealthy family, I don’t have a college education, and I have no prior coding experience. My previous work experience has been entirely in Customer Service. I worked in a call center for many years, and about a year and a half ago, I landed another customer service role at a software company. When I first accepted the position, I figured it would be another typical service job — helping the company’s customers in exchange for my compensation, but thankfully that wasn’t how things turned out. Working for a company in the tech field and working closely with real developers completely changed the way I view technology. Like many others, I grew tired of just using software — I wanted to create it instead, and so the journey begins… So, why Codesmith? With so many options for learning, what makes Codesmith tower above the rest? There are actually plenty of reasons, but the big ones in my eyes were community and teaching style, and most importantly, how they mesh together. We’ll solidify exactly what I mean as we walk through my first week here. Week One I lied — let’s actually start the night before the first day. Given that I had just committed to being jobless for a minimum of three full months, you can imagine that I was pretty nervous. I hardly got any sleep as my mind was focused on questions like, “ Am I making a mistake?” and “ What if this doesn’t work out?”. All of my doubts were cleared away the very next day. It’s immediately apparent that Codesmith fosters a very tightly knit community. They had us participate in a few games as a group to break the ice and make sure we were all comfortable with each other, which is rather important since we’ll be spending practically all of our time together for the next three months. They then proceeded to tell us about what we can expect over the course of the program, as well as what they expect of us (spoiler alert — they expect A L O T from you). During the debriefing, they break down what you’ll be learning, how you’ll be learning, and why these skills are so highly sought after by employers. Those doubts that I mentioned earlier? Gone. Later that evening (which I later found out happens every Monday), we had a family dinner. You read that correctly. Family dinner. Both classes ( Juniors and Seniors), as well as the staff all gather together for our evening meal. At the beginning of the meal the staff will share some fun and exciting announcements, followed by “ Shoutouts” where anyone, staff member or student, can give a shoutout to another person or group who’s helped them in order to show their appreciation for the support. Afterwards everyone is free to eat and hang out with each other for the remainder of the dinner. Noticing any trends? * Cough cough* community ( I tried to be subtle). Being the introvert that I am, I was hesitant to buy in. However, after taking one look at the seniors in the program, I was convinced that the buy in was worth it. Being able to count on anyone in your class for help, without any pressure or judgement is an amazing thing indeed. Speaking of getting help, we haven’t talked about coding yet, have we? Let’s do that. The first week’s coding challenges were reinforcing the basics and fundamental skills, so I won’t bother going into too much detail on exactly what the challenges were. What I’d like to highlight instead is the teaching style, as promised. The teaching style here is not for the faint hearted. Just like other programs, we’ve got plenty of lectures on concepts, and plenty of course material to work through, but what we don’t get is “hand-holding”. After a great lecture on concept, you’re paired off with another student and are asked to work through a series of challenges. You’re not given specific instructions, but rather a higher level guide on what should be happening as you work through the tasks with your partner in a pair programming style. Pair programming, you ask? The short version is that you and your partner will be writing code on a single computer, where one person “navigates” and tells the other person, the “driver”, what to type on the screen. Sounds easy, right? Not so much… Consider this — in our area of study we deal with highly technical terms and concepts on a daily basis. How can you clearly and concisely convey to your partner exactly what you’re thinking? Conversely, how can you correctly interpret what your partner is telling you so you can take action. The answer is a combination of honing your technical communication (a huge theme here at Codesmith) and struggling through the tough parts with your partner. Once you’ve completed a challenge, you’ve both grown immensely in skill, understanding, and camaraderie . Could you ask for any more? That concludes my thoughts on week one! Given that I’ve run through some of the core values that set Codesmith apart from other schools/academy’s, the following posts will focus more on the day-to-day for each week, as well as event highlights so you can get a feel for what the course is like after the introductory week!","['Programming', 'Codesmith', 'JavaScript', 'Web Development', 'Codingbootcamp']",https://medium.com/@jon.perera/my-experience-at-codesmith-so-far-b3cae5683ca,3,['Codesmith'],1,0,jonathan,M,0.0042130252697924414,0.9957869747302076
David Clark,Mindfulness | Humans | Animals | Earth | Coding | IG: the.coffee.smith,My Adventures into the Desolate Wasteland of Server-Side Programming,2018-08-04 22:56:49,medium,"My Adventures into the Desolate Wasteland of Server- Side Programming Photo by Marius Christensen on Unsplash If you hadn’t noticed, I haven’t posted in some time. That’s because I made the leap into server-side programming. And it has not been easy! Once you jump into Server- Side programming with Thinkful, you’re met with tons of new terminology, ways of thinking, and tools. I’m still not exactly sure how to set up the dev environment, and what all the tools do, but I’m hoping that comes with experience. Specifically, I’m currently working on creating a C R U D app that uses two different database collections that should be able to “talk” to each other in order to get information. In this case, it’s a “blog” app with authors and blogposts collections. When someone submits a blog post, the author should come from the authors collection, while the new post goes to the blogposts collection. Everything works when you do stuff within one database, such as getting the whole collection, getting a specific post or author, adding a new author, etc. But once you create a new blogpost, which requires an author, you can no longer make any requests to the posts route. Something is breaking somewhere! This happens locally and in the m Lab/ Heroku deployment. I’ve even had to look at Thinkful’s solution code, but couldn’t find anything I missed in there. My project is up on Git Hub. If anyone that reads this gets bored and has a look at it, let me know if you figure it out. “ You should read this…” Sure, when do I have time for that? I really wish I could dedicate my entire life to learning to code… When someone suggests a book I should read — code-related or not — or a Netflix show I should watch, or a trail a should hike, I feel a sort of angst. It feels like something else I simply don’t have time for, and don’t understand how they have time for it. I’m a fairly organized person, and I need no external motivators to get things done. But I’m also very busy. Having a kiddo, another full-time job, a spouse, and two dogs is not exactly without maintenance. This month, we’ve been training our new pup. Good thing she’s smart as a whip, so it doesn’t take as long as it normally would. It’s also time to start getting ready for the next school year. We need to choose extracurricular activities and sign up for them, which means lots of research, talking with our kid about them and gauging her interests, and then managing the state-funded website. It’s also summertime, so we have to manage summer camps. Currently, we owe one of them money — not because we don’t have the money, but because we don’t have the time to go to the post office to get a money order (we have an online-only bank). My wife’s grandmother came into town this last week as well, so we spent an evening with her. The week before that, I had a work fund raising party that I had to help plan and execute. I’m definitely not complaining. I’m very fortunate and in a privileged position to be able to afford to put in the money and the time to pursue this. I have a supportive partner and child, a job that allows me a bit of flexibility, etc. In a couple of years, I’ll look back on this and wonder how I ever could have done it without the system I have in place right now. And then I’ll realize that many, many, many single parents have done the same, and more! Or folks without the financial means to even get started. Or those who have been told so many times by people or society that they’re not worth it or cannot do something, and therefore cannot even try.","['Coding', 'Learning To Code', 'Self Improvement', 'Codingbootcamp']",https://medium.com/l2code/my-adventures-into-the-desolate-wasteland-of-server-side-programming-2cb479136ef7,0,[],0,1,david,M,0.0035582779766708743,0.9964417220233291
Pierre Hersant,I do stuff behind a computer,One year of web development after a bootcamp – Pierre Hersant – Medium,2017-08-01 07:52:11,medium,"One year of web development after a bootcamp Today marks my one-year celebration of working professionally as a full-stack web developer in Paris. Therefore, as many have done before, I decided to share my experience as a « bootcamp » developer. The sound of tinkling glasses resonated in the air as the head waiter ordered another table to be cleaned and setup again. The night was busy, a fresh evening of October in a dense touristic area of Paris ; I lingered for a moment, and gazed at the waiters rushing towards the table, swiftly removing glasses, plates, and cutlery, and within one skilled movement, replacing the dirty tablecloth with a new, clean one. The ballet almost felt artistic. Soon, new clients emerged from the waiting line, and the troublesome buzzer of the orders machine rang again, warning me of new cocktails that needed to be made. I did not plan to work as a bartender. Ever since my high school graduation, I was pursuing a dream of becoming a film producer. I started two companies, studied abroad three times, worked in every area in the movie business I could find, and produced a dozen short movies. I took less than two weeks of holidays between 2006 and 2015. But eventually, the market got the last word, and most of the « young and hungry » of the film industry were left on the sidelines. Those of them who kept « pushing hard and believing in their dreams » ended up filling the long lines of waiters and bartenders of Paris, or worse, unemployed and living on social welfare. I got into code out of necessity as first. I had to redesign a small part of a website for one of the companies that I started. I was in a rush, and I didn’t want to bother the web developer who did the first version for free, out of friendship. When I first looked into the source code of the H T M L page, I remember thinking : « Why are the lines of codes shifted to the right so much? » And then I spent the next two hours copying and pasting entire lines of code on google, trying to make sense of it. Eventually I was able to fix what I wanted to fix, and for the first time in almost 10 years, I felt a tingling sensation to the back of my head. I succeeded at a technical task that I never tried before, and a warm feeling of victory started to overwhelm me. This feeling has a name : empowerment. And to a certain degree, this is the feeling that pushes so many people to get into code. During the weeks that followed, I chased that feeling down on various coding websites, like Codeacademy, or Free Code Camp. I spent hours trying to solve the problems they gave me, also wondering how arrays and J S O N could ever be useful in a real life situation. One day, I realized I was spending more time everyday on coding than I was on anything else, including my personal and professional projects. On that day, I decided to cross the Rubicon, and applied to the French bootcamp « Le Wagon ». Le Wagon is a really impressive bootcamp. Boris and Romain, the two founders, understood the process that leads anyone to learn anything, a perfect mix of :theory (1h30 of class every morning), practice (6 hours of coding on problems related to the morning class during the whole day)and repetition (1h30 of live code at the end of the day, repeating the problems). The combination of these three key elements makes your brain go at least three times over the same subject. At the end of the day, you’ll feel like you really « got it ». To this day I’m still looking for any other class on any other subject that would take me through this exact process successfully. I know many people would pay top money for a course that would teach them anything that successfully. After Le Wagon, I started looking for a job. I knew I had it in me, but I did not know if any startup founder would trust someone with 9 weeks of experience. At the same time, I was lucky to be part of the first session of Lion, a training for startup employees devised by the French investor The Family. Coming from an environment very different from the startup world, I realized that Lion was the perfect addition to my technical training. During two more months, and as I was searching for a job, I met countless French entrepreneurs, who explained to our class what they were looking for in their employees. I remember clearly one speech an entrepreneur gave, where he explained how he got his first clients. The speech was not filmed, and therefore the founder felt free to speak his mind. I felt that this one class taught me, in two hours, things you’ll never get to hear even in the most prestigious M B As. Thankfully, after two months of searching, I joined a French startup called Hostnfly. I remember that when I applied, I thought I would never be taken. And when they hired me, I thought that they would fire me after 3 months when they realized that I wasn’t a « real developer ». This is why it took me a year to write this article. During one year, I discovered not only what it’s like to code, but also the art of developing products in a fast-growing environnement : every line of code that I write can be thrown away within the next three months, and in fact, often is. I realized how code, and technology, is nothing but a commodity that you can use and throw away at any time. The real value behind a company lies within the brains of the people who work to deliver. What you do right now matters more than what you did yesterday, and less than the challenges you’ll face tomorrow. The software industry is at a weird crossroads right now : an army of young bootcamp alumni is rushing into this business, looking for two things they never got where they came from : respect and empowerment. If the startup world was the gold rush, becoming a web developer would be like selling picks and shovels. What I learn after a year is that coding is more empowering than anything else in the world : anyone can learn the basics. Few people really master it. And only work can make you more successful at it.","['Programming', 'Bootcamp', 'Coding', 'Codingbootcamp']",https://medium.com/@elcortez/one-year-of-web-development-after-a-bootcamp-c872b62d0faa,1,[],0,184,pierre,M,0.004179610279582039,0.995820389720418
DevMountain,DevMountain is an industry-leading tech bootcamp teaching code & design. Our community loves sharing our craft & empowering the next wave of makers. #devmtn,Why You Should Make 2017 the Year You Learn to Code,2017-01-03 19:52:26,medium,"Why You Should Make 2017 the Year You Learn to Code Dev Mountain’s Provo Campus celebrates New Years with fireworks in Provo, U T Every year we make new year’s resolutions with the best intentions, and every year we break those resolutions by February. If you’re anything like us, you want to make a change for the better this year, but you may not be sure how. Make 2017 the year you learn to code and improve your career and quality of life with this versatile and valuable life skill. Employees with coding experience are quickly becoming a necessity in every industry, and it’s only going to get more important through 2017. So whether your goal is to become an entrepreneur, to bolster your existing career or to start a new one, Dev Mountain can help you achieve it with our highly accessible, highly effective coding bootcamp. With a team of professionals guiding your progress and other like-minded people encouraging your success, this year’s resolution will be the easiest, most impactful one yet. Here are some of the resolutions that you can check off your list by learning to code, and some reasons why you should do it with Dev Mountain. Why Code? Work for Yourself If your ultimate goal this year is to become your own boss, there’s no better way to get started than to learn to code. Whether your product is a new app or a new kitchen tool, learning to code will help reduce the start-up costs of hiring someone to do your code work for you and propel you into a more successful endeavor. Work From Home If you’re after the comfort and convenience of working from home, or want to spend more time with your family and friends, knowing your way around a computer can qualify you for more remote working possibilities. Become More Competitive Every year computers become even more essential to our everyday lives. This makes computer skills an essential part of any industry. Beef up your resume and become an asset to any company by adding computer coding skills to your skill set. Increase Your Salary Computer programmers make a median salary of about $60, 000 a year in Utah. If you’re looking to make more money this year, learning to code can help boost your bottom line! Why Dev Mountain? Structure and Support You know how hard it is to keep resolutions when you go it alone. Let us guide you through the steps to your ultimate goal with our proven program. We’ll give you the opportunity to work with real-world programming professionals and hone your craft with hands-on learning. Ease and Accessibility At Dev Mountain, we pride ourselves in making coding bootcamp as accessible as possible. People of any skill level can quickly get started in our program, and we have both full-time and part-time options. We’ll even cover your housing if you’re coming in from out of state! Impressive Credentials When you self-teach, it can be much more difficult for an employer to know for sure if you are qualified. Dev Mountain helps take the doubt away with a rock solid reputation, a team of professional staff that make excellent references, and a keystone project that you can show off to future employers. What are you waiting for? Your goals for 2017 are within reach. Learn more about our program on our homepage, and request a syllabus today to see more about what you can learn.","['Coding', 'Programming', 'New Years Resolutions', 'Learn To Code', 'Codingbootcamp']",https://medium.com/devmountain/why-you-should-make-2017-the-year-you-learn-to-code-66cdab05f68f,0,['DevMountain'],1,0,devmountain,Unknown,Unknown,Unknown
Masud Ahmed,,Self-taught vs. Coding Bootcamp vs. CS degree – Masud Ahmed – Medium,2018-08-01 13:58:02,medium,"Self-taught vs. Coding Bootcamp vs. C S degree As someone trying to break in to the wonderful world of “computer science” and software engineering, like many others, I’ve always wondered what exactly a computer science graduate has, in terms of tangible knowledge and skills, which gives them a “competitive advantage”. A quick google search about “learning programming” or “coding bootcamp” would lead one down a rabbit hole of endless debate over the best course of action for would-be career changers and the efficacy of a “coding bootcamp” in consistently creating good developers. As many bootcamp students and graduates have encountered, or will soon encounter, there are many who have doubts as to the quality of software engineers coming out of these programs. As someone from an Applied Economics background, with a specialization in Strategy and Game Theory, I’ve always tackled these problems of competition, in terms of a game with players. Just like in any game, one should have a good idea of the other players’ hands in order to be able to make the best move. Any knowledge of the other player’s strategy is extremely valuable. Due to this background, I can’t help but instinctually view all competitive market dynamics in the form of a simulated game, and mentally collecting/storing data about the associated “game” environment. A little weird, yes, but according to Elon Musk, odds are actually a billion to one that we are living in a simulation. Is this even real? Oh Elon, never before has someone so swiftly restored and destroyed my faith in humanity. But, I digress. In League of Legends or countless other strategy games, some of the most valuable tools are those which reveal areas of the map, or those which show an enemy’s “build”, so that one can effectively predict their opponent’s strategy and counter effectively. So, naturally, I was surprised to realize that I had never checked to see what made up a typical computer science degree. For the purposes of this article, we will take a look at a typical four-year degree in computer science. Disregarding other miscellaneous degree requirements, we’ll focus on the pre-requisites, core requirements, concentration requirements and electives specific to computer science which are typical to one of these programs. I spent some time searching through the internet and got an idea of the typical coursework in some of the top computer science programs in the country, finding that the typical bachelor’s degree in computer science would require about 14–15 courses on average to meet graduation requirements (2 or 3 introductory courses, about 7 core requirements, and 5 electives). Eventually, I stumbled upon the following article which not only did a much better job of explaining in detail all the requirements of a typical computer science degree, but provided links of freely available courses from some of the top institutions in the country ( M I T, Stanford, Berkeley etc. ). (http://blog. agupieware. com/2014/05/online-learning-bachelors-level. html). Layout of links for your own “free online computer science degree”. Following these guidelines, one can, theoretically, complete these courses, obtain mastery, and feel relatively confident that they have the same understanding as a graduate of one of these top schools. The main caveat being that it is probably much easier said than done. As I have learned in my own coding journey, programming is something which is far easier with feedback. Obtaining code reviews or feedback when you are simply stuck and cannot figure out what you are doing wrong is crucial to expediting the process of learning. However, the purpose of this article was not to advise anyone to go try to learn programming on their own. I have tried that for about 6 months, and would say that while self-learning may eventually work, a coding bootcamp would probably be a far more efficient way for someone to become fully immersed in the process of software engineering. It may be a good idea, however, to take a look at what your competition, the glorified computer science graduate, has under their tool-belt, that you don’t. Take a look, and maybe skim through the courses, and get a feel for the material. If you would like, actually select some coursework that interests you, and work through the material. At the very least, understanding an overview of what a C S degree entails may help you become more confident and layout a skeleton for your own strategy. Making a switch to an entirely new, and challenging field, is not easy, and a coding bootcamp allows you to place yourself in an environment focused on your objectives. Rather than spending time trying to schedule and gather contacts for your own tech meet-ups, or spending an endless amount of time trying to debug your own code, I am now fully immersed in a group of like-minded players operating as a cohesive team to expedite learning and eventually destroy my enemy in an interview (only half joking). For the purposes of this article, the tiny blue guys are my Flatiron School minions, the sorry looking red troll on the right is my future competitor, and the victory gem is my new job! Awesome!( Disclaimer: This article was written by a newly minted member of team coding bootcamp)","['Programming', 'Codingbootcamp']",https://medium.com/@ma539/self-taught-vs-coding-bootcamp-vs-cs-degree-c8fcec61c096,10,['Flatiron School'],1,0,masud,M,0.0,1.0
Damilola Oba Adesanya,Software Developer | Content Writer | KidsFan | NationBuilder | Civic & Educational Leadership Enthusiast! www.youracclaim.com/users/damilola-adesanya,My first dabble into framework at Findworka. – Damilola Oba Adesanya – Medium,2018-08-18 23:03:02,medium,"My first dabble into framework at Findworka. As it occur, the subconscious mind of the learner wants to relate its new learning experience with previous related learned experience. Having studied computer science when school have you define stuffs in abstract and lecturers exam threats without necessarily applying the definition practically (this is not to condemn schooling, but maybe the system has a lot to do than just exam threats that made it build robots instead of innovators. ) lead to the confusion about the practical concept of O O P in relations to laravel framework. The subconscious mind is important in learning experience because the body retains a primitive mechanism which has the ability to record and remember previous experiences. This is called ""conditioning"". It forms part of the way we learn and it enables us to perform actions habitually (without thought). This lead to the assumption that laravel framework is limited to creating ""blog"" project. After the installation of ""composer"" - dependency manager for P H P, followed by the laravel/installer command that installs the laravel framework, next is the command that lead to the subconscious assumption ""laravel new blog"". . . . to be continued.","['Laravel', 'Coding', 'Codingbootcamp', 'Framework', 'Blog']",https://medium.com/@dami.d.adesanya/my-first-dabble-into-framework-at-findworka-ddf095c58e74,0,[],0,4,damilola,F,0.7922705314009661,0.20772946859903382
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18",Why I started a blog as a coding bootcamp student – J.Lim – Medium,2018-05-20 14:56:57,medium,"Why I started a blog as a coding bootcamp student J L’s Coding Bootcamp Journey #1[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student( Current)2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”5.  Summary of Code School’s “ Try j Query”6.  Java Script “ This” — Advanced7.  Java Script “ Code Reuse” — Part 1–1: Decorators8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes# About Myself In the United States, I earned a Bachelor of Arts degree in Sustainability from Arizona State University in 2013 and a Master of Science degree in Higher Education from the University of Rhode Island in 2016. In South Korea, I started my journey at a coding bootcamp last month. I aim to complete the journey by the end of this year. # Goals To keep myself motivated to learn programming languages To enhance my writing and thinking skills ( I recommend reading Derek Mei’s blog post “ Why developers should know how to write”) To be inspired to become a software engineer who deeply understands the computer science fundamentals Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['Programming', 'Codingbootcamp', 'Blog', 'Technology', 'Tech']",https://medium.com/@j_lim_j/why-i-started-a-blog-as-a-coding-bootcamp-student-8f18ab44128a,2,[],0,24,j.lim,Unknown,Unknown,Unknown
SmartZoe,,"Bugs Squashing,The Coder’s game!! – SmartZoe – Medium",2018-07-05 10:30:16,medium,"Bugs Squashing, The Coder’s game!!“ The way get started is to quit talking and begin doing. ” — Walt Disney Learning takes a lot of determination and drive, because it means you have to first accept that you don't know something and then make up your mind to learn , I decided document my journey and trust me its not easy any pseudo writer available, I wont mind using one right now. Too much talk let’s dive in already , shall we? well I learnt something new today and interesting I read about someone that was sharing tips on using the V S Code and she shared that using theshift + ! + tab. gives you the html complete doc type syntax, I always knew this so I was like really so people don’t know this , thats why you should always share your stories because, ”you might never know what someone never knew”, However to cut the long story short I had a bug! A big bug!!!“ The pessimist sees difficulty in every opportunity. The optimist sees opportunity in every difficulty. ” — Winston Churchillsee my code below Do you notice anything wrong?well I didn’t But yet I kept getting this I don't like to see any messages in red, am sure you don't too As usual I ran to Mr Google but he didn't have any answers for me and then I went on to brainstorm with my fellow coders Emmanuel Raymond , Shalom Mathew and Andrew Miracle and yes we found it. Eureka so it turns out to be that “ Location” is a keyword and therefore can not be used as a variable name in Java Script, tadatada, squashing a bug is so sweet no pun intended, please animal rights activist don’t come for my head. But am just so happy I have learnt a new thing today, Coding is so much fun especially when there are no bugs but then many times the greatest fun is in debugging , there is a confidence that comes right after bug squashing!! Yassssssssss!!!!, lets go squash some more bugs# Little victories!# Big victories !# All are Victories!!","['Life Lessons', 'Codingbootcamp', 'Bugs', 'Programming', 'Internships']",https://medium.com/@asuquooduduabasi/bugs-squashing-the-coders-game-c56bab0ff04d,0,[],0,100,smartzoe,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 2 — (01) – Mike Brave – Medium,2018-08-22 02:49:31,medium,"42 Piscine Day 2 — (01) Edit: This is part of a series that culminated here, Next post. Previous post. Right so today was better than yesterday, still hard, spent all day in the lab, was helped and helped a lot of other students, feeling the flow. I’ve buddied up with a couple of the guys who did this before, collaborating with them we are pushing through pretty fast and not spending time on things that matter less. Apparently you are expected to get about 25% of the projects completed that are assigned. More important is doing well on the tests. There are some cadets (those who are official students and not trying out as we are) here who had nearly straight 100% for everyday. It’s intimidating. but I think I have a better idea of what’s expected now. The grading system is different than I’ve ever seen. If you don’t pass the first assignment perfectly all other future assignments are not counted. This continues onward. If the second isn’t perfect then the third onward isn’t counted etc. So most important is really nailing and perfecting the first several assignments rather than skipping ahead. We also found a study guide for the tests on github, apparently there are solutions to the projects on github as well but I’ve avoided looking them up as I actually want to understand what’s going on. But the link for the test study guides for those interested is here. A few of the guys and myself are going to do study sessions for the test coming up tonight, I think this will be a good use of time. Also of note, you have to be responsible to sign up for the work for the day, if you miss the timeline (11:42 P M — 8:42 A M) then you cannot sign up for the day. Some days you can sign up a few days ahead of time, I signed up for up to day 4. Some students missed signing up for today because they slept in past 9 A M, they had to have overrides to be able to do the work. Today the assignments were as followsgroups, paths, and replacing spaces with commasfind all the files ending in . sh, remove all that is not the file name (directory, file ending (. sh))count all the files and directories including the one you are inlist mac addresses with line breaks and no other datamake a file with a really strange name ( I didn’t get it figured out)skip every other line of outputreverse, alphabetical sort, only show loginslist number of users with bon in their namechanging numbers and letters from mrdoc base to gtaio lu Snemf base ( I have no idea what this means) Those were the assignments today, hope it helps someone.","['Programming', 'Ecole 42', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-2-a7d1a46cc7dc,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Nelly Sugu,"Fully and intentionally living my purpose of loving life and people by contaminating everyone I encounter with joy, happiness, hope and inspiration.","YES, YOU CAN (AND SHOULD) LEARN CODING – Nelly Sugu – Medium",2018-06-04 18:52:50,medium,"Y E S, Y O U C A N ( A N D S H O U L D) L E A R N C O D I N G Just think about what you did this past weekend… Remember checking for those likes on Instagram and Facebook? How about posting about how you felt about the N B A Finals game last night? Tweeted lately? Ubered anywhere? Watched some snapchat videos after a long night, in an Uber? Googled anything? Watched anything on Netflix or Amazon Prime? The list goes on. ( If you never do none of this please start a Masterclass and let me know where it’s at). Either way, you’d have to have been living under a rock or sleeping for the past couple of years (and still be sleep for that matter) to not be aware of how technology affects most, if not all, facets of our lives today. According to 9 To5 Mac, the average person with a smartphone spends about 2 hours and 15 min a day using apps, ~ 1 month/year. App Annie reported that, in 2016, a total 90 billion apps were downloaded from the App Store and Google Play store. In the same year, App Annie also reported that we all combined for a whopping 900 billion hours using those apps! All these apps and other technologies that are running the world today are being made by (software) developers. Who are developers?“ Developers are the people who are capable of building stuff for a world that is becoming increasingly more reliant on technology”. Software development jobs have been growing tremendously and are projected to grow even more. For instance, consider these projections: The U. S. Bureau of Labor Statistics projected that, by 2020, 1 million programming jobs in the U. S. will go unfilled. By 2020, 5 million jobs worldwide could be lost due to demographic changes and technological advancements. These numbers paint a vivid picture that everyone needs to learn coding for their future’s sake. Because, believe it or not, soon every aspect of our lives will be permeated with technology). Unfortunately, despite all the above reasons and the incentive that tech jobs are among the high paying jobs, most people haven’t been flocking to learning code. In fact, in 2017, there was O N L Y about 7 M tech workers in the U. S. 7 M people might sound like a huge number because of the ‘ M’ for million. But let’s put that into perspective: New York City population is over 8 M people. In other words, it’s like saying that O N L Y the people in New York City are equipped to seize the future in the United States, as of 2017. Credits: Wikimedia Commons Don’t get me wrong. By no means am I saying that in the future everyone is going to be a programmer. But I am willing to bet that knowing and/or understanding code might be what will allow you to flourish and keep providing for your family in this tech dominated future. So, why haven’t more people raced to learn coding. In my experience, I’ve noticed 2 main reasons that I would like to address:1. Most people think that they need to have a 4 year degree in a tech field to be developers. Short answer: Not anymore. At least for the most part. Long answer: I depends on the job. Still, in most cases, you don’t need a college degree in a tech field to be a developer. A 2016 stackoverflow survey found that 56% of developers didn’t have one. Here is how the surveyed developers in that survey answered where they learned software development: Credits: stackoverflow This article goes into more details about whether one needs a college degree to be a developer. 2. A lot of people still believe in the Hollywood-sold stigma that one has to be out-of-this-world intelligent to be a developer. Sadly, we have a movie industry that portrays computer programmers as mostly-male born-genius-math-wiz-with-no-social-life and depicts computer programming in a non fun light. Couple with a culture that only believes in what we see on television and a lot of people simply count themselves out of being developers without even trying it. In my personal experience, I’ve found that just about A N Y O N E with a learning and teachable attitude, grit and determination can learn and be good at coding. Coding is definitely challenging and it is not easy because you get exposed to different ways of thinking. But that doesn’t mean that it’s impossible to learn. Ask anyone that learned a second language if it’s easy. It is, indeed, learning another language (if not languages), the language(s) computers understand. The secret to getting good at coding, just like any other new skill, is P R A C T I C E and perseverance. It also goes a long way remembering that it’s not an overnight thing. And that just because you suck at it for a while does not mean that Y O U suck as a person. Plus, if you talk to any developer, you will find out that the problem-solving and creativity aspects of it overweighs, by a huge margin, the hardships and frustrations of learning it. Sounds awesome… But how do I get started?“ A man staring down at his shoes, each on one side of the yellow street line” by Nadine Shaabana on Unsplash It depends. Do you do well at learning things on your own? Yes:freecodecamp and codecademy are great places to get started. They are among the most popular resources that teach interactive online coding classes that you take on your own time. You can also join meetups around the world to collaborate with people who are using these same resources. They are a tone more free and/or relatively cheap self-guided resources online. Some of the pros of going this route is that it is free and that you eat as much as you can chew. One of the cons is that it might take you relatively longer to get your head around some concepts. This is the route I took. After graduating out of a 4 year Electrical and Computer Engineering program, it still took me about 2. 5 years to fully understand the ins and outs of web development (which is what I am mostly referring to as “coding” in this article) N O: If you excel more in a guided environment, you can invest in an immersive/bootcamp program like the ones offered by Trilogy Education Services — a Workforce Accelerator that partners with universities to help companies bridge the Digital Skills Gap. I am currently a web development instructor for a Trilogy part-time coding bootcamp at U C Davis in Sacramento, Ca. We currently offer 3 months full-time and 6 months part-time coding bootcamps at 35 leading universities around the world. Some of the pros of going this route is that you get taught the cutting edge stuff by amazing instructors and are more than 100% supported by a team dedicated to seeing you succeed through out the whole journey. One of the cons is that it is a considerable time and money investment. Whatever route you end up choosing, I can assure you that Y E S, you C A N learn coding. How can I be so confident? Well, in just a mere 5 months (since January) I experienced seeing my students with diverse backgrounds and age groups go from knowing little to nothing about web development to making some incredible apps using cutting edge technologies that it literally made me cry with tears of joy and how much proud I am of them. In addition, 9 years ago I landed in the U. S for the first time from Rwanda with -1 knowledge of coding (the negative is because I had little to no exposure to smart phones, computers, and technology as a whole). So, Made using http://www. ifyouretypingthisitstoolate. com/ A quick chat with one my students on her Youtube Channel","['Codingbootcamp', 'How To Start Programming', 'Coding', 'Motivation', 'Learning To Code']",https://medium.com/@NellySugu/yes-you-can-and-should-learn-coding-ae12ed33e51e,6,[],0,464,nelly,F,0.993450431676094,0.006549568323905924
Rachel U. Muñoz,art || tech || art && tech,Nearly a month after graduating from coding bootcamp,2016-11-04 19:21:18,medium,"Nearly a month after graduating from coding bootcampand I miss it dearly! Who would have thought that the 14+ hour days spent coding in an 8th floor office would be longed for like a cool summer’s night!? What I miss most: Pairing — having the ability to bounce ideas off of your partner and coming to a solution together (and most times in a more efficient//elegant manner) Stand-ups — another opportunity for collaboration! I miss the timely check ins where all members of the cohort would meet and talk about common problems encountered and the different strategies we used to tackle them All of the whiteboards — Walls that were painted into whiteboards, providing ample space to write out your ideas — perhaps draw a database schema, or a quick model of the classes and modules you may be thinking of creating, plus it was another avenue to gather feedback from othersand lastly, the constant sound of keyboard clicks, mutters to self, and small moments of victory — the cacophony of noises that created a soundtrack to the day — reminding you that you’re not alone in this journey and the pleasure it is to share these moments with others","['Coding', 'Programming', 'Coding Bootcamps']",https://medium.com/@r_munoz/nearly-a-month-after-graduating-from-coding-bootcamp-6256e2924960,0,[],0,0,rachel,F,0.9968375667324769,0.0031624332675230854
Alan Hong,"Programmer / Developer-in-training, former Air Traffic Controller, Pilot, Entrepreneur.",The Iron Yard Houston Day 8 – Alan Hong – Medium,2017-06-02 03:24:09,medium,"The Iron Yard Houston Day 8 My brain is mush… Today was all about Git Hub. A website centered around the collaboration of projects of any scale. Mainly for programmers and developers, but theoretically you could use Git Hub for anything project related! Very useful tool but those U N I X terminal commands… ugh. Nothing turns my brain into mush faster than using a Command Line Interface. It reminds me of the freakin’ Non- Radar days of Air Traffic Control! Imagine you have to separate aircraft without being able to see them. How would you do it? That’s non-radar separation. All you have is a radio to talk to the planes, a map, and a clock. You get a report from an aircraft, it’s a position report. You take a note of who called in, where he is, when he called in, where he’s going and how fast he’s going and write that all down on a flight strip. Still with me? Now do that a few more times for different aircraft going in criss-crossing directions at different speeds and different altitudes. Can you imagine all these aircraft in your mind, spatially? That’s the closest example I can relate to for Command Line Interfaces. You’re typing in commands, trying to imagine what the file system and remote Git Hub system is doing in the background, but like non-radar, it’s very difficult to construct in your mind. In Git Hub, you can have multiple branches of a project and then multiple people or collaborators working on different branches together. This allows for simultaneous updating, editing and adding of code; very efficient! But also dangerous! If the collaborators are not careful, you can overwrite each other’s code or even break the whole project by uploading untested code. But we were told that Git Hub is the norm when it comes to collaborating professionally in the industry. So it’s super important we all become proficient at it! Our Week Two Project was also given to us today. Most of us didn’t get an opportunity to start it in class today as understanding Git Hub was taking 100% of our brain power at the time lol. It looks pretty straight forward though. An entire website again, this time, with an emphasis on responsive design and mobile-friendliness. Thank god for dual monitors! :)","['Github', 'Programming', 'Codingbootcamp', 'The Iron Yard', 'CSS']",https://medium.com/@xiupan/the-iron-yard-houston-day-8-288ecb79953c,1,['The Iron Yard'],1,1,alan,M,0.0030826743350107835,0.9969173256649893
Jacob Moore,,Orientation – Jacob Moore – Medium,2017-07-11 12:57:37,medium,"Orientation So we had our orientation yesterday and for the most part I didn't take a lot from it. There were introductions and an idea for a schedule but nothing that went ""wow I'm ramped up"". That being said the best thing I took from the session was having a taco with a current student that's nearing the end. Got some really good advice. In a nutshell he said I could do the program 40 hours a week and be okay but if I really want to take a lot from it and get a better job then go in with the plan to be the best student and take on all the extra work. So that's the plan. Be the best.",['Codingbootcamp'],https://medium.com/@jacob.w.moore/orientation-dc2888302813,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Michelle Zaffino,,Inside Techtonica: A Student Update – Techtonica – Medium,2017-07-14 18:48:30,medium,"Inside Techtonica: A Student Updateby Michelle Zaffino, Techtonica volunteer Today at Techtonica, students are preparing for their first big exam. Three extra volunteer instructors are here, helping with review. It’s been an intensive couple of months for the inaugural class, and now they’re being tested. Reviewing Java Script Since June, our full-time, full-stack developer class has convened at the Armory in San Francisco’s Mission District. Students have learned everything from conditionals (if statements) in Java Script to writing algorithms and using A P Is. Students are learning more than just coding, though. This bootcamp is also a course on how to present one’s self to employers and network for jobs. Students recently received business cards through Moo, in preparation for O’ Reilly’s Velocity conference. The team descended on San Jose for the conference, where they heard top speakers in the field of Dev Ops, and saw a new side of engineering. After more in-depth learning, the students were ready for a little celebration and introduction to our larger community. Last month, the Wikimedia Foundation hosted the Techtonica launch party, an event where we delivered an update on student progress. At the festive cocktail gathering, guests sampled platters of vegetable crudité, fruit, and cheese while toasting Techtonica efforts. Techtonica founder Michelle Glauser welcomed the crowd and gave heartfelt thanks to many new sponsors. Instructor Erin Allard delivered a rundown of every element of course instruction the students have been through so far. There was an impressive number of already-completed learning objectives, even though the bootcamp is just getting started—the students are making great progress. Then we heard firsthand from the inaugural class. Nefis, Gabriela, Tonka, Diana, and Chelsea shared exactly how much they’re learning and how it’s already applying to their work lives. The students were all so appreciative of Michelle and her team, and it was very touching. Back to the Armory for more tech training. It just happens to be burrito day at Techtonica, sponsored by Chipotle, where when customers buy a burrito at the San Francisco Westfield Chipotle store, Techtonica gets 50% of the profits from each sale. Techtonica fans tweeted pics with their burritos to show their support. It’s so exciting to see so many people enthusiastic about women and non-binary adults learning to code. And all this momentum leads up to graduation day in December. Love what you’ve read and want to get involved? Techtonica is looking for sponsors, curriculum developers, mentors, board members, and volunteers. If you’re passionate about lending your expertise to enthusiastic individuals and seeing it make a difference, we would love your help. Techtonica hosts hackathons for program development and welcomes new volunteers. If you’re looking for new coding hires, Techtonica connects our graduates with job opportunities, too. Check out the Techtonica Twitter feed for more articles and recent press on all Techtonica activities and sign up for our newsletter.","['Programming', 'Coding', 'Techtonica', 'Women In Tech', 'Codingbootcamp']",https://medium.com/techtonica/inside-techtonica-a-student-update-1590dcdb6eab,0,['Techtonica'],1,4,michelle,F,0.9959987938535763,0.0040012061464237145
Horizons,,Are Programming Bootcamps Worth It? – Horizons – Medium,2018-06-01 00:49:57,medium,"Are Programming Bootcamps Worth It? Are programming bootcamps worth it? The bootcamp industry is exploding in popularity. According to Course Report findings, nearly 23, 000 people graduated from programming bootcamps in 2017. This is a 10x rise since the first bootcamps launched in 2012. They offer you the core skills you need to be successful in the programming industry, and are beginning to give universities and traditional four-year computer science degrees a run for their money. But are programming bootcamps really worth it? Can they produce value for you and help you achieve your career goals? And can they do this despite only costing an average of $11, 400, and lasting only an average of 11. 4 weeks? The answer, of course, depends on your personal drive, goals, and career aspirations. What are employers looking for? To determine whether programming bootcamps are worth it you need to look at the industry as a whole. What are employers looking for, and what do they need? Indeed. com reports that the key problem for companies in the tech industry is finding good talent. According to their findings, 86% of employer respondents reported that it is challenging to find and hire people for technical roles. Another 36% of employer respondents said it is “very challenging”. This challenge in finding sufficient numbers of talented candidates to fill a variety of their roles spells big problems for tech companies. One of these problems is that companies must work existing employees much harder, leading to employee burnout, and decreased innovation. When your team and resources are all spent maintaining and developing your existing products, there is little time to think creatively about the future. The other large problem is that companies must settle for candidates who are not quite as qualified. This also leads to a decrease in innovation, profits, and existing employee satisfaction. Tech companies, large and small, are frantically trying to find a solution to this shortage before it starts to threaten the vitality of the industry as a whole. One place they are looking to solve their talent deficit woes is programming bootcamps. In fact, the inability of universities to keep pace in producing well-qualified S T E M graduates is one of the primary reasons for the rapid rise of the programming bootcamp industry. Employers want candidates who they can feel confident will produce value on day one. They need as little overhead cost as possible when it comes to on the job training. This is exactly what programming bootcamps provide. Their graduates come to their jobs with solid knowledge of programming languages, highly developed practical on-the-job skills, and the soft skills fostered by the highly collaborative, intense learning environment of code schools. Can programming bootcamps pick up the slack? So are programming bootcamps worth it? Employers answer with a resounding “yes”. 72% of employer respondents on Indeed. com stated that bootcamp grads are just as prepared to be high performers as degree holders, with 12% stating that such graduates are more prepared. And of the 80% of respondents who went on to hire programming bootcamp grads, 99. 8% said they would do so again. The shortage of candidates and the massive amount of competition for talent in the tech industry have created a perfect storm. These two factors have collided to produce a highly valuable route to become a highly qualified employee at a tech company. Are programming bootcamps worth it? The final answer is up to you.","['Programming', 'Codingbootcamp', 'Tech Jobs']",https://medium.com/@horizons/are-programming-bootcamps-worth-it-81d36954961,2,[],0,0,horizons,Unknown,Unknown,Unknown
chibueze ukaegbu,,LearnFactory Internship: Day 10 – LearnFactory Nigeria – Medium,2018-05-12 04:59:22,medium,"Learn Factory Internship: Day 10“ Without ambition, one starts nothing. Without work, one finishes nothing. The price will not be sent to you. You have to win it”… Ralph Waldo Emerson The best crew!!! Focus… It’s surreal; the second week has already come to a close. Who would have believed our report? But in all things, we are more than C O N Q U E R O R S. The Power of 21. That is the message of Episode 5 of Eric Thomas’s B E P H E N O M E N A L O R B E F O R G O T T E N. The core challenge of today is to develop consistency by building habits. According to research, anything done consistently for 21 days soon becomes a habit. Don’t just be a starter, be a finisher. Don’t be stuck in the “start and stop” pendulum. Consistency makes you a master; it hones your craft through continual and focused practice. Following on from yesterday, we continue a showcase of our interns work. Stay to the end, there is something intense…8. Andrew Michael From top left: Profile, Konga, Newspaper (incomplete), Contact us9. Ezekiel Nnochiri From top left: Contact us, Konga, Profile, Newspaper10. Rutherford Ejimonu From left: Contact us, Newspaper, Portfolio11. Emmanuel Raymond From top left: Contact us, Konga, Portfolio, Newspaper12. Chilaka Michael From left: Contact us, Newspaper, Profile13. Chibuike Vincent From top left: Contact us, Konga, Profile, Newspaper14. Favor George From top left: Contact us, Jumia, Konga, Portfolio, Newspaper And then for the amazing, Favor George created a screencast of his portfolio work. Find it below Favor George’s Portfolio There is no progress without struggle. Stay thirsty, stay hungry, don’t ever be satisfied, because the day you do, is the day you start dying. May you find your way and may you walk diligently in it. Yes, I am a proud father, my interns make me proud. There is no greater satisfaction than knowing you are making a difference in people’s lives. I’ll see them next week (or later today, Saturday is our new Monday, lol). And I’ll see you too. P S: From left: Matthew, Isaac, Lawrence, Emmanuel & i C. ( Zoe is missing, she is on holidays; Arinze is out of town) I cannot fail to appreciate the best team in the world; without them, Learn Factory would be a lame duck. They are not just friends, they are brothers, and sisters too :). Thank you guys, you have made the last 2 weeks possible. i C Chief Code Smith","['Nigeria', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-10-74c1031f591e,0,[],0,265,chibueze,M,0.0,1.0
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu – Chingu – Medium,2018-04-02 13:56:59,medium,"Overheard in Chingu Accomplishments from teams in Chingu’s Voyage-4 Build-to- Learn cohort! 👇 I finished the Nav Bar Make a lot of progress with our back end and front end Vera and I worked out how to do the time/weather component using React/ Redux I wrote a React component and it looks amazing! Our team is progressing really well and our plan is to have an M V P ready by the end of the week! Then we will start building additional features. Had pair programming session with entire team on Cloud9 last night to work through a J S image array! A team-mate just got hired! — @ La Quita @ Roudy are pair programming tonight to develop the database/middleware A P I for our project We managed to figure out how J W T authentication works. At least we think we have figured it out. Pair programmed and banged out the frontend for the ‘about page’ of our app We had two team meetings this week on Discord and we are all going to be pushing code to the repo this week. Last week I had my first day as computer science student!!! I’m so happy Completed our sprints, finished error handling , working on learning more react Almost all parts of our U I has been completed. We have server-side code on Git Hub! Yaay! I got a job as a Graphic Designer and Web Developer! Completed our sprints :)i get a job as a hybrid front-end developer. I started as a freelance web developer and got 2 projects!!! The first one is almost done. one of my team-mates is starting a job next monday and I did my first test project for a remote job working with R N, still had not received the result of the test Fixed authentication and some other issues on the backendadeen finished web speech api and he is able to navigae on speech which is pretty cool Created a professional git workflow Dived and learned about authentication with Mongo and passport!","['Chingu', 'Codingbootcamp']",https://medium.com/chingu/overheard-in-chingu-d48631c65ae8,0,[],0,2,chance,M,0.024461428631419813,0.9755385713685801
Develop Me,"We are a talent and digital skills accelerator. Our core learning programmes are a 12-week Web Developer Bootcamp, UX Design Bootcamp + one day tech workshops.",Student Profile: Sam Maggs – Develop Me – Medium,2018-09-14 15:03:58,medium,"Student Profile: Sam Maggs Coding Fellowship Student Sam Maggs What were you doing before the course started? Prior to the course I was working in Customer Service and a range of other roles. Why are you attending the Coding Fellowship? My previous jobs did not excite me at all, and I had been interested in coding and web development for some time, but unfortunately found it very difficult to pick it up or learn in my spare time. After speaking to people who had attended and attending the taster evening, I was sold! What role are you looking for after the Coding Fellowship? Where do you see yourself in the future? My ideal role would be placed in a company that wants to see me grow in knowledge and experience, and that also works on exciting projects! I see myself (fingers crossed) buildings websites/apps and learning from others, to create work that I can be proud of. What was your coding experience before the Coding Fellowship? Very little to be honest, apart from the pre-course prep work and some other coding challenges. How have you found the Fellowship so far? Brilliant! Have enjoyed every minute. There is no denying that sometimes you feel overwhelmed, but what I like most is the fact I have learned how to work through things logically and come out of the other end. What have you enjoyed most? Learning. Haven’t had to challenge myself like this for years, so I feel like I have a new found love of learning! What have you found hardest? The many, M A N Y concepts of web development. So much to take in, but all very relevant and essential. What advice would you give to someone thinking of attending the Fellowship? Do it! Interested in becoming a web developer? Attend a Coding Fellowship Introduction Evening taster workshop. Sign up for updates about the course, students and employers.","['Web Development', 'Students', 'Coding', 'Learning To Code', 'Codingbootcamp']",https://medium.com/develop-me/student-profile-sam-maggs-36b7433208ad,0,[],0,0,develop,Unknown,Unknown,Unknown
Ben Thompson,"Aspiring Web Developer | Digital Marketing professional and dog lover | Chicago-located, Minnesota-born",I’m Going to a Bootcamp – Ben Thompson – Medium,2018-03-04 22:49:00,medium,"I’m Going to a Bootcamp Well, not physically going…more like attending. In a couple short weeks, I’ll be attending Bloc coding bootcamp, specifically, their Web Developer Track and I could not be more excited! Background & Frustrations I was originally introduced to programming in my job as a digital marketer (for more info, read about me). I took some serious interest in it and over time, started teaching myself how to code in my free time. I had a genuine interest in learning how to code and the more that I learned, the more I considered it as a serious career. I enjoyed the creative power that it provided and got some immense satisfaction creating projects (when they worked). I wanted to be completely self-taught for as little cost as possible. I went through Codecademy, Khan Academy, Code School, anything that I could get my hands on to learn what I could. I bought some cheap classes on Udemy, Udacity, and Coursera. Ultimately, the best resource was Free Code Camp. It’s such a wonderful resource for learning to code with guided projects and a Java Script-focused curriculum. I dove in and wanted to do well but learning on my own came with issues. I flew through the early parts of Free Code Camp — taking notes, learning a lot, and trying new techniques. Once I got to the intermediate projects, however, I found myself needing some serious help. In previous projects, like the portfolio, I could just look up cool resources to use like animate. css, Font Awesome, and more. They were simple to plug in but more advanced projects meant more advanced problems. This is where learning by myself became an issue. You would think being a professional searcher in my day job would help to be able to easily find answers but I ran into issues that were hard to describe, let alone find in Stack Overflow. I would spend days (of my free time) searching for answers to my issues or bugs and it really ruined the momentum I would have going. I didn’t have anyone to fall back on. I would ask the internet about my issues — whether it be Stack Overflow, Reddit, or elsewhere, I would get a gauntlet of conflicting answers. What I really needed was someone to explain what I was doing wrong, someone to tell me where I could improve or ask a specific question to. It was at this time that I really understood how a bootcamp can be beneficial. I heard a lot about the rise of bootcamps and they sounded appealing to people like me who want to completely change careers. The unappealing part was the insane cost and commitment. Not only would I have to quit my job and have no money coming in, but I would be paying an exorbitant amount of money that would put me in debt or force me to get a loan. I wrote bootcamps off for a long time thinking they were no option for me. After hearing that there are options spurred on by my lack of progress and frustrations learning by myself, I began to think of a bootcamp as a serious option. What I Was Looking For While doing as much research as I could, there were common themes that stood out to me — some things that I liked and some that I didn’t. Considering I am a career switcher who doesn’t have previous experience in the field, creating projects that build my portfolio was important to have. While most bootcamps do projects, I wanted a project-focused curriculum that would help to produce working apps/websites that I could show off and discuss in-depth in interviews when I was done with them. Also related to career switching was job support. Now, every bootcamp curriculum posted has some form of job support or a 6-month, money-back guarantee. Guess what? If I don’t have a job in six months after graduation (and submitting/accepting any offer like the small print lays out), then I’m clearly doing something wrong or have the worst luck of all time. The guarantee isn’t important to me. What is important to me is that I’m job-ready when I’m done with the bootcamp and that I’m not just thrown into the deep end. Whether that’s networking, practicing whiteboard interview questions, tweaking the resume, or just helping me apply to places, job support and getting a new job is the whole reason I’m doing this at all and therefore, a huge part of where I choose to go. The last crucial part of my bootcamp criteria was mentorship. Learning on my own previously wasn’t working the way that I wanted to, I needed someone who has knowledge and experience to fall back on, ask tough questions, and get feedback on the code that I was writing. Why wasn’t this piece of code working? Is there a better/more efficient way to do this? What else should I be learning to make this work? These were all questions I was asking myself constantly but, of course, could not answer without a mentor there to support me. Of course, money is an important consideration. I, like many, cannot just stop working and spend $15 K for three months of instruction plus however long it takes to find a job after that. Though full-time has it’s benefits to part-time, the part-time route clearly stood out as the best option for my situation. All that considered, Bloc stood out from the start. They are highly rated on Course Report and Switch Up (the two authorities on bootcamps, make sure to do your research there). They have an online, project-focused curriculum that ties in mentorship throughout. Their technical curriculum is paired with a job-readiness program from the beginning as well — which I really liked. Two mentor sessions per week, live Q& A sessions online, regular feedback on your code, and an active Slack community all lead me to choose Bloc. From my intro call all the way through signup, Bloc did the best job ensuring your needs were met and answering questions. Expectations Entering Bootcamp Expectations are an important foundation to lay before entering bootcamp. When I asked why some people don’t complete the program, the most common answer was that people underestimated the amount of time commitment it took just to stay on-task. I know it will take every waking moment of my free time to stay ahead of the game, but I’m excited. It will, no doubt, be tough going through this while keeping a full-time job, but I know that going in. 25 hours/week = 8 months of work. I want to do my best to shorten that and still get everything I can out of the bootcamp. I will be tracking my time with Rescue Time and hopefully sharing those numbers when I can to show how exactly I am spending my time. No bootcamp is perfect and I definitely have some reservations about where Bloc may fall short. Being online, I don’t get to network face-to-face with the people who are going through the same hard work every day like I am. Though I am in a major city and there are likely others doing it that I could meet up with, I’m not interacting with them on a daily basis and not networking for when we all get jobs in similar industries after graduation. What I ultimately want to get out of Bloc is a successful career transition, plain and simple. In order to do so, I have a lot to learn, projects to build, and people to meet — but I could not be more excited to do so. I want to gain a ton of knowledge and increase my coding skills to where I’m not some junior developer asking every question but contributing on day one. I’m excited to get feedback on my code from real developers to help my improve even faster. Lastly, I’m excited to improve my life. I know it will be a lot of hard work, but I welcome it with open arms. Nothing worth having comes easy. My hope is that I can help others in my same situation but also that I can look back on this and remember why I went into Bloc to begin with and how much I progressed after. By defining what I want to get out of it, posing questions/concerns beforehand, and reminding myself where I am at before starting the bootcamp, I cannot wait to re-read this post and have all the answers in the future. Originally published at benthompson. online on March 4, 2018.","['Programming', 'Codingbootcamp', 'Tech', 'Learning To Code', 'Bloc']",https://medium.com/@BenThom21/im-going-to-a-bootcamp-b3cc245e95cc,2,[],0,27,ben,M,0.0056139254201428125,0.9943860745798572
adam tropp,,CS 100.2: Big O – adam tropp – Medium,2018-05-16 21:38:09,medium,"C S 100. 2: Big O Okay, so I know I said that in my next post I would cover linked lists and believe me, that will come next week. However, it has since become clear to me that it is pointless to study concepts like algorithms and data structures without first having a thorough grasp of the foundational idea on which they rely: Big O Notation. Today, I will cover Big O and its many applications throughout computer science. To begin with, Big O is essentially a mathematical concept. In fact, if you can remember back to college or high school algebra, it is very closely intertwined with the degree and end behavior of a function. Take, for example, the function f(x) = 3x⁴ + 4x³ + x² + 2x +5. You may recall that the degree of this function is 4, since this is the exponent of the leading term. As x becomes arbitrarily large, the x⁴ term will dominate all other terms and determine the end behavior of the function. If you understand that, then you understand Big O. The other important thing to note about Big O is that it does not take into account constants. The leading coefficient, in this case 3, is, for our purposes, irrevelant as X approaches infinity, since, again, the effect that the degree of the function has on its end behavior will dwarf the effect of any term or coefficient. ( If you want to better understand the mathematical basis for Big O, and for that matter, Big O in general, I highly recommend watching this video https://www. youtube. com/watch?v=ei- A_wy5 Yxw&index=2&list= P L1 Ba G V1c I H4 Uhk L8a9b J G G356cov J76q N. It goes into the components of Big O, which are Big O, Big theta and Big Omega. It is not essential for our purposes to understand these concepts, but it will help you more fully grasp why Big O matters and how it relates to what we do as programmers. For now, suffice it to say that, in an academic context, Big O of some function provides a “lower bound” for the behavior of the function, Big Omega provides an “upper bound”, and Big Theta sandwiches the function between these bounds. Also note that, when we talk about Big O in the real world, the idea most closely resembles the Big Theta spoken of in the video. All that said, if you have 50 minutes to invest in your career as a programmer, I cannot recommend strongly enough that you W A T C H T H E V I D E O!). Okay, you may be wondering, so Big O essentially determines the end behavior of a function. Why should we care? In computer science, Big O relates to the concept of asymptotic time and space complexity. Asymptotic means as the input size grows boundlessly, i. e. , as it approaches infinity, and this is where Big O comes in. Say, for example, you have come up with two solutions to a problem in programming. Both work, but as I said in the previous post, and I cannot stress this enough: I T I S N O T E N O U G H F O R S O L U T I O N S I N P R O G R A M M I N G T O J U S T “ W O R K”. They must be optimal, or at least, closer to optimal than anybody else’s solution. Okay, so you know that you need some means of evaluating the two solutions. But what does optimal really mean? It means that the asymptotic complexity of the function is the best it can be, or good enough that any improvement would be trivial. It is important to note that I said Big O applies to both the time and space that a particular function takes. While this is true, it is often best to first consider the time complexity of a function. It is then important to note that a function does not only have one time complexity. Depending on the nature of the input, for example, a given algorithm can take vastly different amounts of time to run. Broadly speaking, we can have the “best case” time complexity, the “average case” time complexity, and the “worst case” time complexity. As programmers, we almost never consider the best case time complexity, since, in the best case scenario, all algorithms and data structures perform a job impressively well. The average case is important, but it can often be difficult to calculate and agree upon, so as beginners, we tend not to focus on it in our analysis. This leaves the worst case time complexity, which, you could say, is the most widely-used metric for evaluating a piece of code. After all, if you know how well a function performs in the worst case, then you know whether that function is worth using for a particular application. For example, if on average it took 1 second to log into facebook, but once every 19 times or so it took 30 seconds, you would probably think that facebook was a poorly made site and would look elsewhere for your social media jollies. Next, we must consider space complexity, i. e. , the amount of memory that a program will require. Again, we are only interested in the “ Big O” of space complexity, or how this number changes as the input size grows asymptotically. Again, it is acceptable as a beginner to consider space complexity an afterthought when evaluating a program. For now, think of worst case time complexity as the main feature of Big O analysis, and think of average case time complexity and space complexity as tiebreakers, should two solutions prove to be the same in terms of worst case time. Okay, enough theory. Let’s dive into some examples to help drive the point home. Throughout Big O analyses, there are some common values that will come up again and again. It is not recommended to memorize them, but instead, to understand how they are derived. First, let’s look at what is considered a very good Big O complexity, O(1). A time complexity of O(1) means that a process occurs in “constant time”, i. e. , that the time it takes does not depend on the size of the input. For example, consider looking up an index in an array. Whether the array is of length 1000 or length 10, finding the element at index 9 will take the same amount of time, and for this reason, looking up values in an array is considered a very efficient process. It is easy to understand that a program cannot be more efficient than O(1). Another common Big O complexity is O(n). This means that a process occurs in “linear time”, which means exactly what you would think given its mathematical definition. The time that the process takes grows proportionally to the input size. Take, for example, adding an element to the beginning of an array. In order to do so, all other elements must be pushed back by one index, which means, effectively, that each element in the array must be “touched” once during this procedure. Clearly, this means that the longer the array, the longer this will take. This may still seem like an efficient process, and indeed, for some operations, an O(n) algorithm or data structure would be a dream come true. However, for simply adding an item at the beginning of a collection, linked lists, which we will discuss in more detail next week, are more efficient than arrays. Logarithms come up very frequently in Big O analysis, and it is important to understand why. For example O(log n) is a very common time complexity, and is the Big O of one of the most efficient and widely used searching algorithms, binary search. In binary search, finding an element is done by locating the median value in a sorted data structure, and comparing the value you are searching for to the median value. If the sought after value is smaller, the median becomes the new high value, and the midpoint of the resulting data structure, half the size of the original, becomes the new median. The exact opposite process occurs if the sought after value is greater than the median, and this process repeats recursively until the value is either located or determined not to be present. It is easy to see why this process is logarithmic, and in particular, log base 2, since it will occur at most log base 2 of n times for some input size n. Since so many computer operations are binary, when we say log, we almost always mean log base 2. This however, is irrelevant, since according to the laws of logarithms, log base a of x and log base b of x always differ at most by a constant c, and constants do not matter in Big O analysis. When first learning to calculate the Big O of a function, there can be a strong temptation to simply guess based on the common values. You must resist this urge, and instead, reason through the code. For example, in a function with nested loops, the big O will be exponential based on the number of nested loops. For example, if you have a program that iterates over two different arrays of length n with nested for loops, the Big O will O(n²), since, for each item in array 1, it must perform an action in both array 1 and array 2. If, however, the loops are not nested, but are instead one, then the other, the operation will be just O(n). This may seem intuitively difficult to grasp, but if two loops are run side by side, the whole process will take O(2n). Since constants are irrelevant, this simplifies to O(n). Some examples are considerably tougher than this, but with time and practice, calculating Big O becomes second nature. I hope this helps you come to a better basic understanding of time and space complexity. Watch the video, it will truly help elevate your understanding far more. Beyond that, I have decided that I am going to start ending these posts with a cheesy, inspirational quote, since autodidacting computer science is a grueling task that warrants some extra motivation. Plus, I like cheesy, inspirational quotes. So without further ado, today’s words of wisdom come to us from H. G Wells: “ The only true measure of success is the ratio between what we might have done and what we might have been on the one hand, and the thing we have made and the things we have made of ourselves on the other” Til next time!","['Programming', 'Codingbootcamp', 'Computer Science']",https://medium.com/@adt6261/cs-100-2-big-o-5107b233d987,5,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Altcademy Team,The team behind Altcademy.com,Student Stories: Desislava Genova – Altcademy – Medium,2018-08-17 07:56:27,medium,"Student Stories: Desislava Genova Desislava is currently studying Full-stack Web Development Nano Major Q: About yourself Hi everyone, I am Desislava from Bulgaria. I currently live in Madrid, Spain. I am a designer. I began learning how to code by myself because one of my clients wanted an H T M L signature design. Back then, I had no idea how to do it, so I began learning some H T M L and C S S on my own to get it done. The whole experience got me very interested in web development. I began playing around with Wordpress using some templates. Later on, I wanted to customize my own templates. I started to fall in love with web development. “ Most people would tell you that they found web development interesting. But, in my case, I think it’s completely opposite. It found me!” I felt that there’s some gap between what I know and what I want to accomplish, so I wanted to learn more. Q: Why Altcademy? I actually saw many learning resources online. Ultimately, I liked Altcademy for being realistic. There are no high hopes or fake promises. Altcademy’s motto really resonates with me — “ Learn enough to learn more”. I want to truly understand the fundamentals and expand my knowledge. Altcademy gave me confidence in that. Things kinda clicked! I want to complement whatever I am doing with coding. Altcademy doesn’t require me to change my career, but I can still keep improving myself. In-person bootcamp is usually time-demanding, and I want to work full-time. Altcademy is extremely well-structured with logical exercises. I want to fill up basic knowledge first. I also get very excited about getting things to work. Q: What are you working on now? I am working on my portfolio website. I am familiar with graphic design with motions, so it was natural for me to add animations on my portfolio website. Check it out here! Q: What’s your long-term goal? Well, maybe it’s not long-term. I like to get into new things with incremental steps. I want to turn building websites into my core workload and competency. I think having a designer background gives me an edge and advantage too. I am beginning to learn Java Script now, and it’s very interesting. I want to learn more and continue to learn. Build something and get it out in the real world. Freelance more websites and get clients! Anything towards the these directions would be cool! This story is from https://www. altcademy. com/stories/@desislava","['Web Development', 'Learning To Code', 'Codingbootcamp', 'Learning', 'Student Stories']",https://medium.com/altcademy/student-stories-desislava-genova-d2eeb3c8bf26,1,[],0,0,altcademy,Unknown,Unknown,Unknown
Dex Mills,dexmills.com,Day 5 – Dex Mills – Medium,2017-08-12 06:55:17,medium,"Day 5 Well this one is a little late because I got a really late start on the day. It was nice to meet up with the group and start discussing our plans for attack on the group project. Right now we have an idea to pitch small simple sites to local restaurants and document how we come up with the designs along the way. Being that all of use are at no more than entry level coders, I think that the sandboxing and documenting our growth will be a great idea that will most likely pay off in the end. I sure hope it does as I am frustrated at my current position and looking for a fresh start in a field that I would like to grow in. After I finished with that after two hours of not opening my computer the rest of the day was mine. I actually spent most of the afternoon working on my own site to bring it up to speed and at least have a minimum viewable product. I would like to play with some animations on it but at this time I know that just having something on the web will lead to more opportunities. When I finished with that the job hunt continued. I thought that I was on the right path with my resume but after looking at it for the millionth time I spotted more errors that I should have come across earlier and I am at fault for sending something out that is not finished and not up to my standards to be honest. After fixing that and editing it some more I applied at 11 jobs. 6 of them were just quick apply that I am sure goes absolutely nowhere, but the 5 that I spent time working on my resume and cover letter are the best that I have done so far. Writing a good cover letter is still something that I have problems with as explaining who I am, and what I believe in can take many more words that a recruiter or program is willing to take the time with, is a difficult process. I see that as vastly needing to improve, as I have little expierence in the coding world and that is going to be my way into a least an interview. Thought Lab- Best one of the day. They asked for more than just a cover letter and I tried something vastly different and went along the lines of a poster that I have on my wall and repeated “ I believe…” with many reasons on why I am who I am. I found the process actually enjoyable and I will keep up with them as it does seem like a place that I would be a great fit. O C Tanner- This was the second highlight of my day as I know enough about O C Tanner to like what they are doing and how they go about it. I spent a good 30 minutes editing the shit out of my resume to go for the gusto on that. It was so good that I saved it and most likely will use it as a template for the next week or so. All of the other jobs were color by numbers and required the tooth pulling fun that is filling out resumes. I have not heard back from Dev Point but I did send them an email to thank them for the interview. I do hope that they get back to me with at least where I can improve if I did not get the position. I don’t think that I did but I see no harm in trying and see that I need to get on the Ruby program that I started years ago, and finally finish it. In case you did think that I was inside all day I wasn’t. I did spend some time in the great pool that is at my place and read a few articles on M V P and just getting shit done. It inspired me to stop being so nitpicky about what is out there and just get ti up. I’m not going for the white house, I’m just trying to get my feet wet and those articles helped along with the group project to inspire me for the next few days. Song of the Day- “ I Still Believe” Frank Turner and the Sleepinghttps://www. youtube. com/watch?v=m Kk Iys X2 Bow","['Job Hunting', 'Career Change', 'Web Development', 'JavaScript', 'Codingbootcamp']",https://medium.com/@dexmills/day-5-c10d5c9da78,0,[],0,1,dex,M,0.0,1.0
Michael Quiroz,,Galvanize Q3 Project – Michael Quiroz – Medium,2017-12-04 16:23:27,medium,"Galvanize Q3 Project We are now in quarter 3 of the program working on our Q3 project. I ended up choosing a project that seemed both interesting and challenging. Learning and interacting with a technology I have had zero exposure to. My partner and I decided to try and replicate Jenga in augmented reality. So far the technologies include using the new i O S 11 A R Kit, Swift4 and Xcode. So far using the Udemy tutorials have been very helpful in ramping of projects quickly and being able to jump right in and create objects in A R. To be honest it’s been pretty cool how fast we’ve learned to render planes and objects. Our next big challenge is how we will be able to interact with these virtual objects or nodes. Over the weekend I was able to build the Jenga tower, but I can already see where there us a lot of room for refactoring as I gain a better understanding of swift.","['Augmented Reality', 'Galvanize', 'Codingbootcamp', 'Web Development', 'Arkit']",https://medium.com/@michaelquiroz/galvanize-q3-project-774337b3a30b,0,['Galvanize'],1,1,michael,M,0.004965539448960512,0.9950344605510395
Niharika Narain,Fullstack Developer,Fullstack Academy — Senior Phase in Review – Niharika Narain – Medium,2018-03-23 20:31:57,medium,"Fullstack Academy — Senior Phase in Review We did it! I graduated from Fullstack Academy’s Software Engineering Immersive program a few weeks ago and wanted to write about what my experience was like in Senior Phase after writing about Junior Phase in my previous post. Although you have passed Junior Phase, you go into Senior Phase with a similar feeling as you did Junior Phase. The fear of the unknown returns and brings with it some anxiety. You work on multiple projects in this phase, two of which are in teams, and one is done individually. The Projects Senior Phase kicks-off with a week and a half long project where you build an e-commerce website. In this project, you get to synthesize all the knowledge you’ve picked up, and use all the major technologies you learned such as Node, Express, Sequelize, React, and Redux with some new challenges to continue growing as a developer. You understand the concepts at a deeper level due to this project. This is also the first time you work in a team so you get to learn valuable non-coding skills like dividing up work, dealing with disagreements on approach, holding regular update meetings like standups, tracking progress, and using the git workflow. Next, you have about four days to create an app in Fullstack’s hackathon competition with your cohort. This one is generally done independently, but you can choose to work with a partner if you want. The goal is to try and learn a new technology in this time frame and build a demo-able app. I built a game that is similar to pictionary, but also like the telephone game, where a player guesses what another player’s drawing represents. The four days are stressful, but they fly by and you have fun at the same time, because you’re building something of your choice with no hard requirements so you get to experiment and dabble in a zone you’re curious about! Lastly, it’s time for a capstone project which lasts three weeks long! You are back to working with a team and this project is still open-ended, but you and your team decide together what you want to build and set requirements for it. Teams are told to be ambitious and build something new and cool! There have been games, augmented reality apps, recommendation engine based apps, natural language processing based apps (which was mine!) and so much more that comes out of this. It’s amazing what the teams can build in such a short period of time. At the end of this project, you get to present your project to your friends and family, and be a part of Fullstack’s Demo Day which can be viewed live on Facebook! Other Components (pun-intended for React nerds) While Senior Phase is primarily project based, there are a few other components to it that help you land a job after the program: Algorithm practice every morning similar to a technical interview setting — students pair up and take turns interviewing each other and solving problems Lectures and workshops on various job search related activities such as but not limited to: Resume building, Networking, Interviewing Lastly, in order to kick-off the job search, Senior Phase ends with a mini-job fair type of event where you get the opportunity to network with some local companies Now you might be wondering, where did I end up? I ended up staying at Fullstack Academy as a Teaching Fellow for a few months where I mentor and get to help students that are in the current cohort. Overall, having done the entire program at Fullstack Academy now, I can confidently say that it was one of the best decisions of my life! If you’re thinking about it, definitely do your research by attending info sessions, trying out coding on your own, and making sure it’s the right next step for you, but outside of that, don’t let fear hold you back! Most of the people in my cohort were non-technical and several of those have already gotten jobs only a month after graduating.","['Programming', 'Codingbootcamp', 'JavaScript', 'Coding']",https://medium.com/@niharikanarain/fullstack-academy-senior-phase-in-review-6b01eaa63c27,1,['Fullstack Academy'],1,0,niharika,F,1.0,0.0
Alexander May,,Why attending Fullstack Academy is a great decision for US immigrant?,2018-05-06 18:46:53,medium,"Why attending Fullstack Academy is a great decision for U S immigrant? Disclaimer: I will not discuss why would you want to learn to code, it’s gazillions of articles about that and it’s still a question of personal choice. So I assume that at this point you already determined. Also, I assume that you’ve heard something about boot camp-style learning and coding boot camps in general. Cartoon by Phil Johnson, Writer/ Editor at I Tworld. com# whoami I came to the U S almost 5 years ago from the country, where M S Q R D and Viber were developed— Belarus. Despite that recently my motherland became pretty popular among blockchain and I T circles, I had nothing in common with the tech industry. My last 4 years in Belarus I was studying law at the major Belarusian university and planning to become an attorney after graduation. However, the circumstances changed, I moved to the U S A and settled in N Y C. As every transplant, I spent some time adapting to the new conditions and since the last year, I started to think more seriously about my continuing education. I decided that I want to learn how to code, applied to Fullstack Academy, and now after 6 weeks of Preparation and Foundations Phase, I’m entering Junior Phase of my journey. Why should you attend coding boot camp in N Y C A S A P? Tech scene is growing in N Y C at a great pace. Here is a great article about N Y C tech ecosystem. In order to avoid the gap between the number of projected jobs and applicants, New York wants you to learn how to code and provides many opportunities to do so for free. One of them is N Y C Tech Talent Pipeline Program and particularly their Web Development Fellowship. Follow the link to read about requirements. Long story short, if you qualify, this program will pay for your education (about $17k) in one of the best N Y C-based boot camps: General Assembly, The New York Code+ Design Academy or Fullstack Academy. Why did I choose Fullstack Academy? For me, the generous offer to pay for the education felt like the gift of the magi, so I applied immediately to the Fullstack Academy. I chose it because of the several reasons:1. It’s one of the best programs in the U S A according to the coursereport. com and switchup. com. 2. Curriculum. Fullstack is concentrating on Java Script and Node J S, not Ruby on Rails. I believe that Node J S is more perspective to learn especially for a new developer. I wasn’t accepted in the first place but they gave me an opportunity to participate in Fullstack Prep — a second chance to take an entrance exam and an interview after preparation program. I went through it and passed the exam. It was competitive, only 25 out of 60 people were accepted. Why is it a good choice for an immigrant? When I’m saying an immigrant, I don’t assume that everyone can do that. I mean that for some people with a certain background those options will fit better than a college. Here is the background: You are N Y C resident and authorized to work in the U S. You’ve gone to college in your home country. But the degree worth nothing at U S job market. You already studied general knowledge subjects and want to get certain skills instead of well-rounded development of your personality. You don’t have to be a computer science wizard or have a degree in C S. Better have a strong desire for learning and natural curiosity in the subject. You know English at such level that you’re comfortable asking questions about complicated topics, understanding answers, and can explain somebody those topics later on. You want to get those skills A S A P, and ready to commit A L L Y O U R T I M E to that for the next 6 months and A L L Y O U R F R E E T I M E, for at least 6 months more after getting a job, to get comfortable in a new industry. I, personally, think that it’s a great opportunity for everybody, who is underemployed, who has a useless degree or want to switch a career. And New York wants you to do that so bad, that they are ready to pay for it. Don’t miss this chance!","['Education', 'Bootcamp', 'Codingbootcamp', 'Immigrants']",https://medium.com/@alexander.mazhavy/why-attending-fullstack-academy-is-a-great-decision-for-us-immigrant-60d8d67e37a8,11,"['Fullstack Academy', 'General Assembly']",2,0,alexander,M,0.006647713270783119,0.9933522867292168
April Rueb,"Analytics solutions engineer. Grace Hopper Program and NYU alumna. Most likely coding, crafting, or running. aprilrueb.com",Career Change? From Editor To Software Engineer – April Rueb – Medium,2018-05-04 15:45:49,medium,"Career Change? From Editor To Software Engineer This post was originally published on October 28, 2017 on a personal blog that no longer exists. A few days ago, I received an email from one of my former N Y U professors. She had randomly come across one of my tweets and wanted to know if I’d let her journalism students interview me about “what I am assuming is a career change. ” I said yes to the interview, but I kept coming back to the words “career change. ” Is that what I’m doing? When I was a student at N Y U, I studied journalism and politics. I interned at i Village ( R I P) and N B C News. My focus quickly became social media because at the time social was still considered an intern task (this was also when social only included Facebook and Twitter). I moved from brand to brand, working my way up from an assistant at Parents. com who had to write Facebook posts in an Excel spreadsheet a week in advance so they could be edited by someone more senior, to Rodale, where I directed the social strategy for six brands and managed a team of 10 people. In all of my roles, I was always considered part of the editorial team, which wasn’t wrong, but it wasn’t the full picture. Yes, I spent a lot of my time working with editors, but I also had regular meetings with analytics, sales, P R, international, customer service — the list goes on. Social touches every department at a brand. It was through those interactions that my interest started to shift from the content to the technology used to share that content. What’s the effect of Facebook Instant Articles on engagement rate? Does the placement of social buttons on a page really matter? How do you take advantage of Facebook’s Marketing A P I to drive down C P C and increase C T R on paid posts? I started working more and more with the sole data scientist on staff, but I found myself increasingly frustrated that I needed his help to implement my ideas. I slowly began to explore coding on my own and in April of this year, I attended Facebook’s F8 conference. I went to a few of the sessions on the media track, but it didn’t take long for me to realize that I cared more about the sessions for developers. I came home more determined than ever to become a software engineer. In July, I was accepted into the Grace Hopper Program, a 17-week immersive coding course for women (why I decided on this particular bootcamp is a blog post for another day). I wrote a Runner’s World article I’d been putting off for months, How Running Every Day for 250 Days (and Counting) Has Changed My Life, which revealed my plans to quit, and I officially left my job in August. My entire focus these last two months, the junior phase of my coding bootcamp, has been learning technical skills. I took the final checkpoint last week and did well enough to move on to the senior phase of the program, which begins Monday. My goals for this week were to catch up on sleep and to think about what I want to do once the program ends, so my professor’s email came at the perfect time. As I told the students my career history yesterday, and as I answered their many questions, it all started to click in my head: the last 10 years did not delay my career as a software engineer (a secret fear), rather, they’re the reason I’m becoming a software engineer at all. Majoring in journalism instead of computer science wasn’t a mistake (another secret fear) because my interest in tech and how people consume content wouldn’t exist without that journalism experience. I was asked to give the soon-to-graduate students some advice at the end of my interview. What they didn’t know, however, was that I was telling them what I needed to hear: Don’t put too much pressure on yourself to find the perfect job. Your career is going to grow and shift in ways you can’t possibly anticipate. And it’s going to be incredibly exciting. So no, I don’t consider this a career change; I think this is the next step in a career that has been consistently evolving since I graduated. Ten years ago, I never would have imagined I’d be learning to code — isn’t that awesome?* New “ Never Stop Learning” sticker from Wes Bos.","['Programming', 'JavaScript', 'Codingbootcamp', 'Career Change', 'Women In Tech']",https://medium.com/@aprilrueb/career-change-from-editor-to-software-engineer-6b67bae4d5bc,0,[],0,0,april,F,0.9972060603775798,0.0027939396224202135
Gabriel James,,HSTS Now Offering Summer Coding Camps for Minority Female Students,2018-07-05 18:53:59,medium,"H S T S Now Offering Summer Coding Camps for Minority Female Students( Washington D C/ July 05, 2018) — High School Technology Services ( H S T S) has now announced their new summer coding camps in D C, geared at local female high school students. The program provides minority teenagers with 180 hours of rigorous and intensive Java training. During the 6 week coding bootcamp, students will learn how to do Java programming, develop Android Apps, and learn the basics of I T project management skills such as agile project management. H S T S has worked hard to develop a hands-on approach to their courses so students can learn creative problem solving, while honing their coding concepts. By joining the innovative H S T S summer coding camps, female minority students will be able to pave a way for themselves and create a career base in the field of computer science. H S T S works hard to maintain their standards, which is why all students go through a screening process to ensure their potential for success in the coding realm. In particular, students are vetted based on their prior knowledge of coding, interest in computer science and extracurricular activities related to robotics or programming. 6 out of 7 students in the classroom are freshmen female high school students who want to expand their coding knowledge beyond what they learned at school. A spokesperson for H S T S made an official statement about the institute’s work and their endeavor to offer coding classes for minority female students “ Here at H S T S, we have an all-inclusive approach towards education. We believe that the key to creative problem solving and true innovation lies in diversity. We always strive to educate a diverse student body. We are now very proud to inaugurate our summer coding camps for minority female students. ” The spokesperson further added “ So many young females hailing from minority communities have the passion for coding and computer sciences. But, they don’t get to pursue it due to lack of resources or education. We want to give competent and driven young girls the platform to expand their coding skills. Our easily adaptable courses are designed to provide extreme value to each and every student. By doing so, we bring the best out in each and every student and equip young girls with the right tools for success. ” H S T S is known to go beyond coding and encourage entrepreneurial thinking among their students. For instance, this summer program requires students to develop their business ideas and translate them into an actual Android App. At the end of program, students need to showcase their mobile Apps that are fully developed by them. Going through this process gives students valuable insight for business. All students that successfully finish the program shall receive a certificate of completion. Additionally, they can also be qualified for attending hackathon coding contests that are organized annually by H S T S. H S T S has been involved in coding and technology training since 2015 in D C. The institute offers over 30 coding classes online and in its D C office located in Mt Pleasant just two blocks from Columbia Height metro station. H S T S also offers similar training services to adults under Coding Bootcamps brand. For the more information, visit http://myhsts. org/","['Education', 'Summer Coding Camps', 'Coding Bootcamp', 'Coding Knowledge', 'Coding Classes']",https://medium.com/@gabrieljam69/hsts-now-offering-summer-coding-camps-for-minority-female-students-8d14f7e6d202,2,[],0,0,gabriel,M,0.01936733751390539,0.9806326624860946
Angelica Winkler,,"At the “Welcome to Ruby” house party, enumerables are the scensters doing ketamine in the upstairs…",2018-09-06 14:52:18,medium,"At the “ Welcome to Ruby” house party, enumerables are the scensters doing ketamine in the upstairs master bedroom. Elusive and full of deception, I have no interest in getting to know them. They all dress in their own special syntax, for no discernible reason — except maybe for the sake of making some inane statement. But after a couple of these parties and against my better judgement, I get to know . each; our moms are friends and so I am delicately hand-held through an artificial friending process. array = [1. 0, 2. 0, 3. 0]def conver_to_integer(array) array. each do |x|  puts x. to_i endend123=> [1. 0, 2. 0, 3. 0]. each is nice enough, it turns out. She’s steady, consistent, always returning the same original array. And she introduces me to her cousins . collect, . map, and . select. . collect and . map are identical twins who have the cloying habit of insisting on being treated as unique individuals, all the while presenting no notable discrepancies in personality. array = [1. 0, 2. 0, 3. 0]def convert_to_integer_with_collect(array)  array. collect do |x|    puts x. to_i  endend123=> [1, 2, 3]____________________________________________________________________def convert_to_integer_with_map(array)  array. map do |x|    puts x. to_i  endend123=> [1, 2, 3]____________________________________________________________________ #wtf At one of the usual parties, variables litter the floor and the stench of discarded decimal points (of floats, now converted integers) wreak havoc on my senses. The drinks are stronger than I thought. I need to eat something. And who’s guarding the snack table but . select’s aloof friend . max_by… We’ve never spoken. He attends these things infrequently enough that I’ve managed to skid by without making his acquaintance. But the snacks. He’s guarding so many snacks. In past snack pursuits, I’ve recruited the collective help of . collect, . length, . index, and . max to get what I want. These were clumsy schemes at best:array = [""short"", ""longer"", ""longest""]def find_longest_string(array)  all_string_lengths = array. collect do |string|    string. length  end  index_of_longest_string =    all_string_lengths. index(all_string_lengths. max)  longest_string = array[index_of_longest_string]end=> ""longest"" All this trouble just to avoid ever having to interact with . max_by. But there’s something about him tonight. Maybe it’s how he styled his underscore. Maybe I’m just drunk. Either way. It’s happening. array = [""short"", ""longer"", ""longest""]def find_longest_string(array) array. max_by do |string|  string. length endend=> ""longest"". max_by was not the reputation that preceded him. He was so much more. Down to earth. Elegant. Straight forward. Returning the single element that gave the maximum value from the given block. He stored the return value of the given block for each item in the collection, then did all the comparison sorting on those return values directly. And if no block was given, he returned an enumerator instead. I was in love. We hooked up that night. It was anything but clumsy. ___________________________________________________________________note: not condoning the recreational use of ketamine.","['Programming', 'Ruby', 'Coding', 'Codingbootcamp', 'Software Engineering']",https://medium.com/@carowink3/at-the-welcome-to-ruby-house-party-enumerables-are-the-scensters-doing-ketamine-in-the-upstairs-37fdd70c2a9,0,[],0,105,angelica,F,0.9964170508198368,0.0035829491801631862
Maddy King,Education x Tech,My place in the tech world – Enspiral Dev Academy – Medium,2018-09-10 13:35:18,medium,"My place in the tech world Enspiral Dev Academy is a web development school for everyone, based in Auckland and Wellington, New Zealand Bradley Adams, Dev Academy graduate, presenting to the class“ At some point in 2017 my life felt busy. I was working 2 jobs and planning a wedding for the end of the year. For a bit of extra cash, I started driving for Uber at night. I had a good paying job but we wanted to have a big family wedding and save for a house at the same time. I enjoyed the driving which made it easier. Switching the brain off and talking to genuine people was great. Probably talking too much every now and again. It was during this time I met a passenger like no other. She was heading to her graduation ceremony. Naturally we started talking about her study and what her course was like. She was so happy, excited and loved the study. I sat there thinking, “ Man she is going to be great at this if she loves the study this much. ” If her work didn’t feel like work then imagine what her days would be like. Ironically, I had been told before to make sure you find work you enjoy because it will make life so much more pleasant. The problem for me was I didn’t know what I wanted to do in my career. “ I left this day feeling like a million dollars. A mix of genuine people and passion felt great. It was so simple to start. ” I googled this school called Enspiral Dev Academy and to me it looked fairly simple. I liked some of the ideas on their website so I started to follow them on social media. I then saw an ad for A Day in the Life of a Dev Academy student, which I thought was great. Ten bucks to really see what this school was like and you got lunch. As I’m easily motivated by food this was a no brainer. I turned up expecting to be sitting through a lot of talking and trying to absorb what I could. Instead they talked though some basics and then said let’s give it a go. Damn. I didn’t know any of this. I didn’t ask enough questions. I don’t know enough about tech. I plucked up the courage to ask and I found that it’s not hard to start. Some teachers walked me through programs and helped with a real understanding that not everyone has done this before. I left this day feeling like a million dollars. A mix of genuine people and passion felt great. It was so simple to start. I thought bugger it, and tried to organise myself enough to give the course a nudge. Obviously, we didn’t have spare cash lying around so I borrowed some cash from my family. They were surprisingly very willing to lend or give money for school. Next, I needed to find the time. I started reading while driving for Uber and coding during breaks. This worked well to start with then as the wedding got closer cracks started to show. I had to take some time to chill. After the wedding, I got back into my school work and handed in my notice at the 9–5 job. They really wanted me to stay but the relationship I had with my employer was not the one I wanted. Putting the C A N in Kanban A few weeks later I started bootcamp. An experience I’ll never forget. Easily the best learning experience I have had. I have tried a few from private to public schools, apprenticeships to degrees and many in between. It felt like we were being shown how to do a job. There is a real link between the exercises we were doing and the jobs that were on offer. Working in teams to create code just like you would in a workplace. Using agile processes just like a workplace team would. Even taking in mindfulness learnings which help to create a great industry team. To cap off the learning experience, Dev Academy even helps you find work, supporting you with the basics like C V and cover letter writing for specific industry roles. To sum it up I felt like they weren’t just teaching us content, but instead were teaching us to be better people along a path we had chosen. This felt great. “ To sum it up I felt like they weren’t just teaching us content, but instead were teaching us to be better people along a path we had chosen. This felt great. ” Right now I am looking for a job with the right company to continue my learning and grow as a developer. Whilst searching for a job I’m continuing to write code for projects I started in bootcamp. There is still so much for me to learn and I enjoy finding new things to work on . Does it feel like I did the right thing? I enjoy this work more than anything that I have tried. I would do it again even if I didn’t want a career change. I have found some clarity which has been great. I am always happy to have a chat to anybody so feel free to get in touch: bradley. wayne. adams@gmail. com” If it’s time to upgrade your career, apply for Dev Academy today and see how tech can work for you → https://www. devacademy. co. nz/apply-now","['Tech', 'Learn To Code', 'JavaScript', 'Codingbootcamp', 'Careers']",https://medium.com/enspiral-dev-academy/my-place-in-the-tech-world-508abdb59516,1,[],0,70,maddy,F,1.0,0.0
Miha Fabjan,Creating Ninjas of the 21st Century at SmartNinja,"SmartNinja Q2–2018 Report: Improving Gender Equality, Higher Rates and the New Blockchain…",2018-07-09 13:23:01,medium,"Smart Ninja Q2–2018 Report: Improving Gender Equality, Higher Rates and the New Blockchain Curriculum We started with quarterly reports in order to be more transparent to our employees, instructors, students — the Smart Ninjas. We believe that in today’s world its more important than ever to build trust and what’s a better way to do it, than this. We have looked at the data from our last quarter ( Q2 2018) and these are the results. Hundreds of students from 7 different countries started a Smart Ninja course in Q2 Smart Ninja courses stared in 7 different countries. First group of students enrolled in a Smart Ninja course in Antwerp, Belgium The first Smart Ninja course in Antwerp, Belgium. 41. 3% of our students are female… this is 2. 4 percentage points more that Q1 2018. Percentage of students by gender in Q2 2018. Students who finish our courses rate them with an average of 8. 6/10… this is 0. 2 percentage points better than Q1 2018. Average course grade by students for all courses that ended in Q2 2018 (8. 6/10). Smart Ninja H Q team visited the We Are Developers conference in Vienna, Austria Smart Ninja H Q team at the We Are Developers conference The Smart Ninja team attended the We Are Developers conference in Vienna where we got to spend 3 productive, fun and educational days together. Since members of our team come from different backgrounds and do not share specific interests, we collectively managed to listen to a variety of different talks on tech, business, H R and other areas. Here you can read the key takeaways that stayed with us after the We Are Developers conference. We launched a new course: Blockchain and cryptocurrency technology The course is now available in 11 cities across Europe. The Blockchain and Cryptocurrency Technology course is now available in all Smart Ninja franchises. Learn more about the new course in a city near you: https://www. smartninja. org/ Did you like the report? Please give us a clap (or an applause) and share the article with your friends/followers on social media. For more news and updates please subscribe to our Medium channel! :)","['Blockchain', 'Smartninja', 'Coding', 'Codingbootcamp', 'Franchise Opportunities']",https://medium.com/smartninja/smartninja-q2-2018-report-improving-gender-equality-higher-rates-and-the-new-blockchain-d8ecb6edbd1a,2,[],0,113,miha,F,1.0,0.0
Jacob Moore,,Day 35 — Front End/Back End? – Jacob Moore – Medium,2017-09-01 16:27:21,medium,"Day 35 — Front End/ Back End? The Iron Yard Academy used to require choosing your development path right from the beginning. Are you going to do front end or back end? Then it was nearly 12 weeks of just that. I’m a bit torn on whether I would have been better with that approach. In the first week of our training we were told that near the end of our week 8 we would formally pick what our focus would be: front end or back end. Quick side note: it’s really either React. J S, Ruby on Rails, or Java. That seemed like a lifetime ago but it’s quickly approaching and I’m trying in earnest to decide what’s the best choice for me. I’m in all honesty not really looking at it in terms of the job market but what I actually prefer doing. So pardon the ramble as I break down the overall experience, thus far, for each side of the development struggle and what I actually do/don’t like about each. Front End For the front end I fortunately knew some H T M L and C S S with a small smattering of Java Script. Honestly I loved the H T M L and C S S. Every time someone brings up Flexbox I shrug it off. I liked it! I still do actually. There’s something enjoyable about making minor tweaks here and there then refreshing to see what’s changed. What I know I would love: making the designs in React. There’s some really great things that you can do on the Front End. I would probably enjoy this part tremendously. What I would rather not do: Manipulate the D O M, A P I requests, algorithms. Design meetings. Basically I would love to just manipulate H T M L and C S S. I know the Front End focus is a lot more than that in covering what can/cannot be done. Back End To call the first two weeks of back end a disaster would be polite. I’m trying hard not to be too harsh on those weeks mainly because they were marred by my personal life being wrecked with car issues and family health issues. The additional stresses played S O M E factor in this, especially with Mongo/ Mongoose. The shift to a more structured database like S Q L really helped out. My biggest concern with back end is really the Object- Relational Mapper ( O R M). For those not in the know an O R M is a method of getting to the database indirectly and typically allows for more complex approaches to the data. Mongoose and Sequelize are both O R Ms and my appreciation for them is extremely limited. I really liked doing direct data queries from S Q L databases. Doing the same activities with Sequelize really really bummed me out. What I know I would love: setting up the database, manipulating the data, querying the data. What I would rather not do: Install modules after modules after modules, then ensure they are marked required to use said modules. Honestly I spent hours setting up stuff the last few weeks. To be fair I’ve gotten faster at it. Just by color design I should go with React. I mean blue has been my favorite color since I was 7 when my sister kept making fun of me for saying yellow wrong. But I think it honestly comes down to the O R M ( Active Record) being awesome, the syntax looks rather tight, and the fact that I like dealing with data that I’m firmly behind going to Back End Development. I might down the road learn how to do Angular or React but honestly I’m more excited about doing back end. Also, an added bonus is the level of hands-on instruction between the two. There will be two instructors for back end for a whopping three of us. Thus ends my rambling on deciding between the two. Honestly this helped me figure out what I would rather do. Time to try and make a fake twitter like program work.","['Programming', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-35-front-end-back-end-a52365979b9c,1,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",A Walk in the Park – Emily Deans – Medium,2017-08-09 21:41:00,medium,"A Walk in the Park We took a little detour from our scheduled lessons/activities to go through a bit of Bash script, which at this point we have done very little exploration into. Bash is a ‘ Unix shell’ — a command-line interpreter — and ‘command language’ — meaning it can be used directly on your computer’s command line — and can read and execute commands from an input script. Snippet from our instructor’s Bash script It was an exceptionally beautiful morning (i. e. , gorgeous sunshine coupled with minimal humidity — a rare combo for D. C. this time of year), so after our brief Bash session we took a little class break and went for a walk to Mc Pherson Square. History Note: Mc Pherson Square is named after James Birdseye Mc Pherson, who served as a General during the Civil War and was the second highest ranking Union officer killed during the war. Back in the classroom, we got a little more time to re-work our ‘to-do’ lists to navigate between the database and our view files using Sequelize. Thus far, this has included the introduction of new ‘seeder’ files, which basically input permanent information into our program so that the page isn’t blank when it initially renders. We’ve also included ‘migration’ and ‘config’ files, which allow us to set up and input our schema and configure the specifications of our database connections, respectively. I still need to create a bit of code to allow for updates/deletes on existing items and also to create distinctions between the ‘complete’ and ‘incomplete’ list items. I’m planning on tackling the latter by triggering a change in the item’s object to toggle between ‘true’ and ‘false’ for the ‘complete’ status and then sorting those in two distinct arrays based on whether that status is true or false. Here are the routes, migrations, and seeders that are in place so far: Routes/ Seeders/ Migrations Song of the Day: “ Tear in Your Hand” by Tori Amos","['JavaScript', 'Women Who Code', 'Lesbians Who Tech', 'Code Newbie', 'Codingbootcamp']",https://medium.com/@emilyldeans/a-walk-in-the-park-78746444da11,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Danny Poit,,Reconnected – Danny Poit – Medium,2017-06-04 01:11:25,medium,"Reconnected As a kid, I had dabbled in programming on my T I-99/4 A. I remember spending hours copying lines of code from a book into the computer, followed by a rush of excitement and pride when it was finished and I got to watch a few sprites animate on the screen. So naturally, when I graduated high school 18 years ago, I enrolled at the University of Central Florida as a Computer Science major. That was what I had planned to do, and it was what made sense. T I-99/4 A, my first computer Things don’t always go as planned though. After the first semester, I realized I just didn’t have any motivation at that time. College was an hour drive each way, and I was dealing with a lot of anxiety being at such a huge school. ( U C F was already the second largest college in the state at the time. Now it’s one of the largest in the country!) So I decided to take a semester off. That turned into a few semesters off. Then, it turned into switching to the local community college. Fast forward several years, and I found myself in Boston as a Film Scoring major at the prestigious Berklee College of Music! Somewhere along the line, I had made the assumption that I needed to be making music for a living, and that was the solution to my motivation problem. I graduated Berklee Summa Cum Laude, and with my first child on the way, moved back home to Florida with my wife. Since then, I tried and struggled to find work writing music. I found some scoring gigs, but not nearly enough to provide for my family. Over the years, I discovered that, in order to find enough work writing music, I would probably have needed to pick up my family, move to a busy, entertainment hub like Los Angeles or New York, and work 12 hours per day minimum. Now, as a father of two beautiful boys, that is not the life I want for my wife and sons nor myself. So I found other work. While I love writing music, that passion doesn’t extend as much into performing or teaching music, so I have opted not to seek out those kinds of jobs. Instead, I’ve found myself in tech jobs: Technical Support, Client Services, Onboarding/ Implementations, etc. I’ve always had a proclivity for technology, and these types of jobs are a much better fit for me. However, lately I’ve been feeling like I need more out of my work life. I want my contributions to be more meaningful, I want to be valued more as an important player on the team, and I want to use my brain more. It’s not that I don’t like my current job; it’s just that I’ve reached a point where what I need in life is less of a job and more of a career. What’s it gonna be? I’ve explored various pathways for advancing my career: Project Management, Corporate Training, Advanced ( Level 2–3) Technical Support. But I couldn’t seem to find the right direction for me. Until recently, it clicked… I have always been interested in development. After high school, I learned H T M L and created lots of web pages about anything and everything. I created a web scavenger hunt for my friends, I used C S S to style my My Space page, and I built and hosted my own forum. During college, I took programming courses in Visual Basic, C, and Java. I’ve worked with developers at various companies and have made lasting friendships with some of them. Everything about a career in development makes sense to me. The deterrent to this career path had always been my perception that there was such a huge barrier to entry into development. Many of the developers I know have Computer Science degrees, and the few who don’t have been writing code for many years. But then, I stumbled onto the exploding culture of coding bootcamps. Knowing that people were going through bootcamps and successfully making the move into development careers gave me the needed push to take the leap. After weeks of intense research, I chose the Firehose Project to be the bootcamp that would help me make this transition. It was a big decision for me to pursue a career in development, but I am growing more confident everyday that I will accomplish this. I am certain this is the right path for me and that the Firehose Project will help me get there. Since I have made this decision, something cool has happened: I have had a torrent of ideas for development projects I want to do! Suddenly, there are all these cool things I want to make, like a curated music video site, a site that looks up certain D N S records, a cash flow tracker, a site that tracks political donations for reelection candidates, a family picture sharing site, etc. So many ideas! This decision has really lit a fire under me and sparked my creativity and enthusiasm. I seem to have reconnected with that curiosity and excitement I first discovered as a child on that T I-99/4 A.","['Programming', 'Firehose Project', 'Coding', 'Codingbootcamp', 'Development']",https://medium.com/@dannypoit/reconnected-53c98bd4793,8,[],0,6,danny,M,0.005565444989340519,0.9944345550106595
Jim Reinknecht,,This was actually really very well written and informative.,2017-11-03 07:53:27,medium,"This was actually really very well written and informative. I opened this wanting to hate it, and ended up liking it. I’m in on the back 9 of my cohort (ewww golf. Well the final 1/3rd) and I’m having a blast. I was really plagued with anxiety attacks over getting a job again in tech ( I spent 8 years in Tech, left for 13 years to do other things, regret it now). I managed to get a job while still in my boot camp as a developer in a smaller e-commerce shop. I was crazy lowballed in the offer; turned it down and stuck up for myself. However I was so desperate to not be poor this winter that I literally took the first job offer I was given. I’m still on the lower end of the pay scale for developers but it’s not forever. The platform blows, the websites need a lot of work, and the projects are small and annoying (find a way to put this widget in this part of our site and make it go), and I’m literally the only developer in the company, so I have no one to learn from but myself. Your article renewed my vigor for participation in the career events (my inherent laziness was getting the best of me — why bother? I’ve got a job in the industry?) to do some more networking and use my people skills more. The cold calling (blind resume submission) was getting me down on the lack of responses- probably 50–60 submitted, three actual call backs, resulting in one interview and one offer (hey my offer percentage conversion is 100%!!). Thanks again.","['Codingbootcamp', 'Rutgers University', 'Web Development', 'Dont Be Desperate']",https://medium.com/@captainjimscharters/this-was-actually-really-very-well-written-and-informative-daf606800bce,0,[],0,4,jim,M,0.005310771233322486,0.9946892287666775
Kardashwin,,5 Tips to help get you through your first month at Bloc.,2018-06-05 20:25:50,medium,"5 Tips to help get you through your first month at Bloc. Once you join Bloc, and go through your first orientation/mentor meeting you tend to hear the same tips over and over. These tips mostly consist of being told to stay consistent in your studies, ask for help, be prepared to mentally struggle and ready to persevere, and again ask for help. There’s a reason you hear this stuff over and over. It’s important. Being able to stay consistent and dedicate the proper amount of time to this program is a huge part of the learning process (something I struggled with quite a bit). Knowing you’re gonna struggle and being ready to break down those walls mentally, is a huge part of the mindset you need to have going in to this program. Asking for help might just be the most important thing (which is why I listed it twice). The following 5 tips helped me execute the tips listed above. First: Tell your family and friends. By now most people know what a coding bootcamp is. They know it can be grueling, its a lot of hard work, and most people know that web development is not something easy to learn. So when you tell your family and friends, make sure they know what you are getting in to if they don’t already. Telling your family and friends adds another layer of accountability for you. If they are good friends/family then they will ask you how studying is going, how much you have left before you finish, and be respectful of you having to study over hanging out with them. This alone should help with studying consistently. If you’re spending too much time with friends or family, they will notice and hopefully say something or ask about your studies. Second: Stay leveled. Staying leveled goes along with being prepared to mentally struggle. It’s important to understand why. There will be days where you will fly through 4 or 5 checkpoints in 2–3 hours, you will really grasp the content you are learning and your confidence will grow. On the other side of the coin, There will be other days where you sit in front of your computer for 5 hours stuck on the same checkpoint you began your day with. You will struggle, think its too hard, want to quit, etc (this becomes apparent while learning Javascript). If you stay leveled you’ll avoid getting too high on wins, which in turn will keep you from getting too low on losses. It’s not a race, it’s not a competition, it’s a process. Third: How to ask for help on Slack. What is everyones biggest fear when asking a question/for help? Most would probably say they are afraid of looking/sounding dumb, or asking a dumb question. For that reason you put off asking for help and continue to struggle on your own. It took me 2. 5 weeks to ask my first question on Slack. It took me so long because I was afraid of someone saying I was completely wrong, or that I didn’t understand what I was doing. I got over it by scrolling through Slack, and reading what other people were asking. At that point I realized there were people struggling to learn something I had grasped so easily, and there was no such thing as a dumb question in Slack. It is a great resource, and everyone has your best interest at heart. So ask away :). Fourth: When to ask for help on Slack. There is a fine line between asking for help because you don’t understand something, and asking for help so you can get through a checkpoint. Because Slack is such an amazing resource, you want to be careful not to abuse it the wrong way. I like to break down the coding practice, and whether or not I understand everything in the section try to complete it. If I’ve gone as far as I can mentally and can’t figure out why my code is not executing properly, then I will reach out to slack. Once you receive feedback and get through your checkpoint, It is important to go back and understand the why. Why you were wrong. So you can learn. However, if you fail to go back and understand what went wrong, then you are just using slack to pass through checkpoints and sections. You won’t learn as much as you should, and things will only get more difficult the further you go. Everyone is different, so it is important to find your breaking point where you need to ask for help, and when you do make sure you are retaining/understanding what went wrong in your code instead of just jumping to the next checkpoint. Fifth: Learn outside of Bloc. If you intend on building studying momentum and really staying focused on your course, then it is important to find other avenues to learn as well. It is hard to log in to Bloc every day and stare at a screen reading sections repeatedly. It is important to have variety in the way you learn. Downloading Code Pen radio and Developer Tea podcasts are a great way to fill down time or break time when you don’t want to be in front of your computer. If you are want more practice or are struggling learning something then I recommend looking at sources outside of Bloc to learn. I was struggling with Javascript and stumbled upon Eloquentjavascript. net. It really gave me the practice I needed to make me feel comfortable going through the Bloc checkpoints. Find your outside source and use it to supplement your studies with Bloc. It will go a long way in helping keep you focus and building momentum to study consistently throughout the week.","['Programming', 'Software Development', 'Bloc', 'Codingbootcamp']",https://medium.com/@ashwinroy30/5-tips-to-help-get-you-through-your-first-month-at-bloc-718e2b47ff7f,0,[],0,5,kardashwin,Unknown,Unknown,Unknown
Jerry Weber,,My journey learning to code at Bloc – Jerry Weber – Medium,2018-08-25 01:24:03,medium,"My journey learning to code at Bloc I began my online coding bootcamp experience at Bloc in July of 2018. A little over a month in as I write this and what I can say is it’s definitely challenging. The help is there though, whether it’s from your mentor, slack community, or even google, the help does exist. I have found that when I’m truly stuck and know that it might take me quite a while to figure it out, utilizing help is the best course of action to take. It helps point me in the right direction, which will allow me to become unstuck much quicker. Sometimes, the checkpoints aren’t as clear cut as they could be in letting you know what they are wanting from you in assignments, but I have found that it’s often a method of getting you to figure things out on your own, which will be very common while on the job.","['Programming', 'Codingbootcamp', 'Web Development']",https://medium.com/@txhcjerry/my-journey-learning-to-code-at-bloc-e8daa2019e81,0,[],0,0,jerry,M,0.02749960285941223,0.9725003971405878
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Chapter 1 — Team Projects Lineup – W3Develops – Medium,2018-10-03 01:31:44,medium,"Chapter 1 — Team Projects Lineup Once we accept our limits, we go beyond them. — Albert Einstein Projects for teams to reverse-engineer & build so you don’t freak out when the project-teams are launched ;p What is going on here!? So you signed up for a W3 Developss team project and just got thrown into a random chat with people from 100+ different countries. You’re with 3–5 other team-mates who are at this point probably strangers. You’ve never done anything like this before and you’re confused A F. What we going to build?! Don’t worry, this article is going to help you through this! Your mission for this Cohort, if you choose to accept it… Step 1 — As a team: Pick a project to reverse-engineer or a completely new idea to build. Step 2 — Accept that team projects are hard and your challenges will be numerous. Be open to the challenges and know that determination is everything. Step 3: Take ownership & *finish* the project, regardless of what happens. Developers ship projects/products — they don’t stay on the tutorial treadmill. Adapting to changing constraints and producing finished work is how you develop skills & confidence as a developer (not to mention get a job). If you take ownership of the project and are determined to finish no matter what happens, you will become a better developer and will create more opportunities for yourself. It will not be easy. Don’t say I didn’t warn you. 😉 You were accepted for a reason. We believe you have what it takes!p. s. Some teams spend too much time trying to pick which project to do and they fail. Don’t be that team! Don’t worry, we’ve made it easy! Pick one of these projects to reverse-engineer and clone it as a team. The foundational skills you’ll learn working as a remote dev team are more important than what you will build right now. Tier-1 — Clone a cool Bot Landing Page! Tier-1 teams are at the H T M Lto early Java Script phase of their learning journey. Some teams spend too much time trying to pick which project to do and they fail. Don’t be that team! Pick one quickly and get started. Option 1: Clone a landing page!#1 — Tickybot (this landing page and bot was built by another Cohort — big shout-out to Zsolt Meszaros who designed the landing page!)#2 — Gitlab#3 — Atomist Note: The main skillset & benefit from this project is learning to code collaboratively and work with others. What you clone doesn’t matter as much as getting started and learning how to code collaboratively. Option 2 — Don’t clone, create a landing page for your own idea! Here are some examples Tier-1 teams have done in the past: Code- O- Clock — Now you can schedule meetings, code, and get automated summaries, right in Slack. Stylesheet Library for Reddit (a project from a previous Cohort)q Bot — q Bot’s specialty is finding answers to all of your coding questions. Option 3 — Advanced Tier-1s — Clone the basic functionality of Momentum( See Tier-2 below) — Note: only do this if it’s within the abilities of the team. Here are some clone examples of past Tier-1 teams have built: Donut landing page clone (beautifully done!) Paypal-bot splash page clone (this one is a great example of how if your team-members are up for the challenge you can increase the difficulty: this page was created with React!) Code bursts! Tier-2 — Reverse-engineer Trello, build a chrome extension or help a nonprofit! Tier-2 members are around the intermediate projects area. Option 1: Clone Trello or build a Chrome Extension. Clone Trello and add some unique functionality. Clone a “next-tab chrome-extension”. What the ?*!% is a next-tab chrome-extension you ask? See the links below. Here is a list of Chrome Extensions to clone. Option 2: Build something completely new! Come up with a fresh new idea or something that can be valuable to others! This option is particularly good for members who have worked in teams before (especially former Cohort members). Option 3: Find a nonprofit and build something for them. This is the first time we’re adding this option so it’s an experiment. We’ve noticed that often people have connections or know of a nonprofit that could use some help. One of W3 Develops larger goals is to facilitate projects that create impact. Nonprofit projects definitely help with that. Teams have worked on nonprofit projects in the past. Here’s an example. Here’s another example. What have past Tier-2 teams built? (some examples) Bookmark. it — a bookmarking tool! (pivot idea) Turtles Tab — a super helpful next-tab chrome extension! (pivot idea) Dev-dash — a clean and gorgeous github repo viewer (clone) Trello (clone) Momentum (clone) Warning: don’t let the project scope get out of hand and be realistic with what you & your team aim to build. Tier-3 — Build a full-stack app or build a bot! Tier-3 members are between the Advanced projects and backend. For Tier-3, there is more room for flexibility with choosing projects, as people here often have already finished a W3develops Build-to- Learn project before and they can confidently lead a team to success. Option 1: Build a full-stack application, aim to create value and/or impact4 examples of ongoing tier-3 projects that aim to create impact and help others! Reverse-engineer Jobbatical — the basic functionality. Or reverse-engineer Airbnb. Or Twitter. I personally recommend coming up with a new idea that would have similar functionality as Jobbatical and build that. Maybe you can come up with an app that could help people in some way? Here are 4examples of Tier-3 full-stack projects by teams that aim to create impact and help others: Idea Nebulae — A place to share ideas & connect them to teams who build ( This has been in active development for a few Cohorts. Can your team do better?) Co/ment — Mentoring matchmaker for developers ( This has been in active development for a few Cohorts and is prepping for launch soon. Can your team do better?) Kronos Timzoner — Allow team members to see actual time in their timezones based on your time input (without having to do anything). Wanderful — Discover new locations to visit. Click Generate Random Destination below to start your journey! ( Developed in another Cohort) Option 2: Build a bot. In the next few months, W3 Develops is becoming a bot-building factory. Bonus points if you come up with project idea that can improve our community and help with the W3 Develops mission to create a builder’s paradise for developers! Meetup Bot Meetup Bot is a slack bot which gives you the list of meetups going on nearby your location. Intro bot A Slack bot to get to know your team mates. Ode to Numbers bot This is a slack bot for interesting facts about numbers. This bot lets you bring your metrics and dates to life! Option 3: Find a nonprofit and build something for them. This is the first time we’re adding this option so it’s an experiment. We’ve noticed that often people have connections or know of a nonprofit that could use some help. One of W3 Develops larger goals is to facilitate projects that create impact. Nonprofit projects definitely help with that. Teams have worked on nonprofit projects in the past. Here’s an example. Here’s another example. Does the team have to follow this exactly? No, we’ve tried to find a balance between structure and flexibility. Flexibility is important. Remember that, regardless of what you’re building, learning to code collaboratively is the biggest skill you will learn here. Once you learn these collaborative code skills, you’ll be an entirely different developer. More confident, more capable, more employable. That is all. Now go out there and level-up your skills and build something that stretches you as a developer & human! Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 2 — Schedule Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 4 — Standards & Builder’s Pledge Chapter 5 — Finished Projects & Other Cohorts Comments Chapter 6 — F A Q","['Web Development', 'W3develops', 'Pair Programming', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/w3develops/chapter-1-team-projects-lineup-d747f0702ff,0,['Momentum'],1,1,jonathan,M,0.0042130252697924414,0.9957869747302076
D Saunders,Excited about Big data + education + economy,Galvanize Weeks 3 & 4 of the Data Science Immersive: Sprint Learning,2018-10-04 03:00:33,medium,"It’s 6:15pm, we’ve been here since 8:30, and the conversation is lively around matrices and false positives. In their own corner, the web development students are obscured by monitors and every few days making celebratory noises. It is not clear if they sleep. It’s a regular day at Galvanize, but I think we may miss the peace soon enough, when 180 more web dev students are expected to join this floor of the hybrid campus-coworking building as Galvanize acquires another school, Hack Reactor. There are only about 21 of us data science students here and it’s hard to believe no one else wanted to join the fun in this 3-month program. Last week we covered hypothesis testing with power, bayesian statistics, multi-armed bandit, linear algebra, linear regression, regularized regression, cross validation, and took a brief moment for exploratory data analysis. By “covered” I mean we are now using all these on complex applied problems most of which I get about a third of the way through. This is apparently ok. That meant this week is the real deal — Supervised Learning! Haven’t we been supervised this whole time? Not as much as I would like…source Supervised learning is “the machine learning task of learning a function that maps an input to an output based on example input-output pairs. ” - Wiki. You sit in a zoo and observe large animals. You take measurements of each one, and label it “dog” or “horse” based on the zoo signs. Supervised learning produces an equation to explain the labels based on your measurements. Then when you see an animal in the wild, you measure it, put that in the equation, and if your model fit is good, you successfully predict if it’s a dog or a horse. “ Low-hanging-fruit” implementations of this exist in marketing, where you track the info on customers to predict their behavior (label them high spenders, drop-out risk) so marketing can target their outreach. So far, we have not spent much time on business applications of the material, and I realize I miss that world. Galvanize makes the hard science fun, but our final exam is about 2 months into the program (so we’re halfway there). It feels like being asked to do an appendectomy as a first-semester midterm, except I know enough to get in trouble and there is even a small chance I will get it right. My accustomed study habit is to get organized and have a meaningful time examining each object in the path of my hike — smelling the roses. At Galvanize, we are at ground level in an incredible mountainscape, except we are tied to a helicopter which does not stop. Most of my classmates find it brisk — but they are mathletes. Our instructors think eigenvectors are something fun to use on the weekend. I have always advocated for students to have applied curriculum. There is a more authentic reward system inherent in working on all applied problems, but I do see that it can cause a feeling of delayed reward. When you have easier questions and multiple choice and the ability to complete your assignments you can feel like you are making lots of progress and experience mastery, even though it is contrived. I intend to use data science for education, so it is exciting that this learning experience exposes me to a totally new way for me to learn. No matter what, I will absolutely have a high-level overview of data science work, troubleshooting skill in all the fundamental tech and math, and code from which to build more complex implementations. I will not mire in scikit-learn until I feel comfortable, or anywhere else, since I will be too busy using it. The bar is set very high to leave room for growth even for practicing professionals, which makes for a classroom of diverse mastery and field. It’s useful, challenging, and enthuses me for the more heterogenous student body universities can choose to embrace.","['Machine Learning', 'Codingbootcamp', 'Education', 'Education Reform']",https://medium.com/@dmariesaunders/galvanize-weeks-3-4-of-the-data-science-immersive-2e55bf0e8fdd,1,"['Galvanize', 'Hack Reactor']",2,1,d,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 3 — (02) – Mike Brave – Medium,2018-08-23 02:51:12,medium,"42 Piscine Day 3 — (02) Edit: This is part of a series that culminated here, Next post. Previous post. Mostly blogging right now as my brain was fried and I needed a break. I’ve been averaging around 13 hour days the first two days, today will probably be longer, but I also feel like today was the least productive workload wise but most productive actual usefulness wise. We finally started programming instead of terminal commands. Though I feel I really did learn a lot from those, I’m eager to leave it behind and just look things up as needed. Hopefully that’s a healthy attitude, because spending months on just doing terminal things sounds terribleto me. Today we started grading each other’s projects. It’s set up such that we have a certain amount of grading points that we spend to get someone else to grade our work for us, we earn them when we do the grading. There is essentially only a finite amount of points in circulation, when people quit they take their points with them, and shortages apparently can and do happen. It helps to be generous and willing to grade more than just being graded, I feel that was the intent of the system. I did ok when graded, but then I had to also factor that the computer graded me as well. This was for day 1 (00). The first two assignments out of 6 were done wrong, but I aced the other four. ironically if you fail the easier/earlier assignments then the rest aren’t counted, so I got my grade for the day was a solid zero. This was a blow to the ego, especially since it was something like changing the date/time to match the screenshot was the detail I got wrong. I figured timestamp changing couldn’t possibly be part of what they were asking as it wasn’t specified in words. I was wrong, and now I’m paranoid about being tricked or complacent again, which maybe was a more important lesson? I don’t know. Later on though several people asked me for help and I think I was actually helpful for them in how I explained some of the basics of programming, that made me feel a little bit better about my first day failing. I’m finding out that the assignments today actually have a lot of little tricks to get caught up on, I hope I catch them all, I’ll spend several hours tomorrow cleaning them up before final submission. I did manage to get a couple more of yesterdays work done today, but I’m not spending much time on polishing them tonight, I’d rather work on the actual programming. The test study guides show that it’s primarily programming things, so I would rather get a better grasp on that to be ready for that. assignments today were as followsa print alphabet function using only a special function ft_putchar (note all assignments today, the only function allowed is ft_putchar)print reverse alphabetprint digits on a single line in ascending ordera function that determines if a number is negative or positivepopulate and remove duplicates of a number sort (3 digit numbers, 012, 789, no two numbers the same, no reverse duplicates) -this is how far I got todaydisplay all two digit combination of numbers of between 00 and 99display the numbers entered as a parameter, display all possible values within an int type variable ( I’m a bit lost here)number sort, print combine (honestly I don’t understand it yet)that’s it for now.","['Education', 'Ecole 42', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-3-02-2a673908ac54,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Jacob Moore,,Day Four — The Struggle is Real – Jacob Moore – Medium,2017-07-20 13:01:06,medium,Day Four — The Struggle is Real So our homework for the night consisted of getting an H T M L file and a C S S file along with a screenshot of the webpage. We were told N O T to update the H T M L file but do everything in C S S. Sure. I hit a problem because I couldn’t get the images to connect to C S S so I “sort of” cheated so that I could actually do the assignment. More on the problem I experiences in struggles/understood. Struggles: I hit a wall with the homework assignment last night. I hit it hard. I got super frustrated over one single line of code. For whatever reason I could not for the life of me figure out how to get a single line of code to turn bold. I mean one line I just couldn’t get. There was no singular selector I could use that just made me mad. If I could only say “use this class and these two siblings I’ll get it”. I reached out to the group and explained and nothing. Someone looked at my code and they offered some advice but that wasn’t helpful. But after explaining it so many times it finally clicked that I was essentially saying “if I do this it affects all of this” over and over and over again that it clicked. It. Affects. The. Rest. So instead I just put the code at the top and let C S S precedence take place. Then went back and cleaned up one line of code that I had adjusted by itself. Problem solved. Understood: I picked up some of the design elements pretty quickly and for the most part I had the items mostly done in like an hour. So I felt pretty strong about that. Looking forward to: Using flexbox in practice. I also understood H O W I react to these frustrations and what I need to get out of the mindset of a funk of being frustrated. So that’s honestly the biggest takeaway. Today we’ll cover flexbox more in practice and actual use so that’ll be nice.,"['Codingbootcamp', 'Coding']",https://medium.com/@jacob.w.moore/day-four-the-struggle-is-real-2dab7b9689a0,0,[],0,1,jacob,M,0.0024356479040408972,0.9975643520959591
Clint Schmidt,Former CEO at Bloc. I build growth companies.,In-person Coding Bootcamps are Terrible Business Models,2017-07-13 08:14:10,medium,"In-person Coding Bootcamps are Terrible Business Models I worked for Michael Dearing at Harrison Metal in 2013 when he asked me to advise the founders of Bloc, the world’s first and largest online coding and design bootcamp. About a year later I joined the company as C O O, and last year became the C E O, so I’ve studied the coding bootcamp space closely for the last 4 years. It wasn’t long until I concluded that the in-person (or “on-premise”) coding bootcamp model is a terrible business. There are several reasons: No barriers to entry. Any developer with a few desks and a powerpoint presentation can start an in-person coding bootcamp. Since Dev Bootcamp ( R I P) pioneered the model in 2012, ~300 coding bootcamps have come into existence. Grand Rapids, Michigan has one, and Omaha, Nebraska, my hometown, has two! Competition is fierce as more plunge into the industry, which means they often resort to: Discounting and bogus claims to attract students. I’ve seen claims of job placement rates so disingenuous they’d be comical if they weren’t so predatory and rampant. Competitive pressure is intense: if one in-person coding bootcamp offers a 95% placement rate in 12 weeks for $14, 000, the new one across the street may promise a 96% placement rate in 10 weeks for $13, 000. Prospective students often want to believe they can get value by spending less time and money, so that’s too often what they are promised. Not only is there flagrant dishonesty abound, but: The unit economics are terrible. In-person coding bootcamps have tremendous financial pressure to fill every cohort with as many students as they can. Just like a restaurateur must turn a certain number of tables each week, an in-person coding bootcamp must play the same revenue per square foot game, with fixed operating costs (like rent, insurance, utilities, connectivity, teacher time, etc. ) incurred whether there are 5 students or 50 in a given cohort. No barriers to entry = excess supply = downward price pressure, which leads to less qualified teachers who will work for peanuts, unfavorable teacher:student ratios, and slim margins to fund growth or product development. Inherent pressure to behave at odds with student’s best interests. Coding is hard, and students require varying levels of time and intensity in their study to demonstrate job-ready proficiency. But with a classroom model, the cohort’s march through the curriculum must be completed in 10 weeks (or whatever) because the next cohort is waiting — on to the next! This requires “teaching to the middle” or “one pace fits all”, wherein many students need to go slower while others are being held back by the pace, so the school aims for the middle and shores up the laggards on the margins if they can. Not a great experience if you’re outside the hump in the distribution. Worse, because student dropouts carry a steep opportunity cost (can’t back-fill with another student mid-cohort), many in-person coding bootcamps often beg and cajole poor performers to “keep at it”, when they should invite the student to consider if it’s the best use of their time and money to continue. These issues are inherent to an on-premise model with a 1:many teacher/student ratio, and amplified by financial pressure. I could go on and on, but suffice it to say starting an in-person coding bootcamp does not sound like a good idea to me. If I were a prospective student who felt that I must be physically present in a classroom with an instructor to enforce my focus, I’d ask a heavy battery of questions before investing the required time and tuition, and foregoing income while in the program and job-searching thereafter. The most credible bricks-and-mortar bootcamps worthy of respect are few and far between, and are likely not financially lucrative or fast-growing (which is fine!). To find efficacy and financial sustainability, look to an entirely different model(s).","['Programming', 'Codingbootcamp', 'Education Technology', 'From The Ceo']",https://medium.com/newsonthebloc/in-person-coding-bootcamps-are-terrible-businesses-d4c9f122814,0,['Dev Bootcamp'],1,43,clint,M,0.0016856563134072108,0.9983143436865928
Alexa Moy,Software engineer in training,How NOT to Make a React Native App – Alexa Moy – Medium,2018-05-07 01:30:05,medium,"How N O T to Make a React Native App Being a new coder, I have a tendency to jump straight into a project rather than doing the necessary research to avoid hitting huge blockers. Until recently this has worked in my favor because of the extensive tutorials and posts online that hold your hand step by step. I had a pretty good working knowledge of creating React. js applications so I thought that creating a React Native app wouldn’t be too different. I had to learn sometime that with new technology rapidly coming out, not everything is going to be as easy and straightforward to master so with that I start off with the first and biggest mistake I made when creating my first React Native application. 1. Not doing more research and jumping on the first react-native tutorials I saw During my time at bootcamp, I quickly discovered what my learning style is. I code to learn and even if I don’t understand what I’m typing at the time, I piece together what different lines do and how they work together to produce a cohesive project. This was all and well while I learned the basics of heavily documented frameworks and libraries however this would prove to be my downfall as I attempted to make my first React Native app. I turned to Google and Youtube to find a quick and easy tutorial to get my i Phone simulator up and running. I had four days to piece together an app to demonstrate at the end of the hackathon in front of my peers. After the first day of working on this and doing some brainstorming and research on React Native, I was getting a red screen of death on my Xcode Simulator which leads me to a very important piece of information I wish I knew before jumping on the first tutorial I found. 2. Starting up React native for the first time and not realizing there are a couple different ways to do this There are two ways of initializing a React Native app from your command line: |create-react-native-app| and |react-native init|. I had no idea there was even a difference between the two which is why when I was following tutorials and documentation all together, I was looking for ios and android folders in my filesystem that you don’t get with create-react-native-app, which is what I used when I started up my app. C R N A also uses the Expo client which makes getting an app up and running as fast as possible. Remember how I said I didn’t do enough research? Expo docs have a specific page called ‘ Why not Expo?’ which outlines certain scenarios where Expo may not be the right choice to use depending on what your goals are for your application. One sentence in the docs particularly spoke to me (post hackathon of course) that said ‘ The intention of this document is to outline some of those cases, so that you don’t end up building an app with Expo and getting frustrated when you encounter an obstacle that you can’t overcome without detaching to Expo Kit or ejecting to using React Native without Expo at all. ’ In the next section I will go into ejecting a little more but basically what I learned from this is that I have 20/20 hindsight. So if you ever decide to learn a new library, framework, or A P I, R E A D T H R O U G H T H E D O C S. To give you a little more context to this issue, for a my project I wanted to create an interval training workout app that either played a sound or played text to speech on each interval. I went through package after package and followed the installation instructions step by step (and there were not that many steps) but had no luck and got the red screen of death again. This is one of the big issues when it comes to using C R N A opposed to react-native init. With C R N A and Expo, it is much easier to set up your project quickly but with those restrictions unless you eject the app. On the other hand, you do not have to worry about ejecting with react-native init but this method takes more development time. For more information differentiating the two methods, I found the following thread to be extremely helpful when deciding on which one is best for your needs: Difference between react-native-init and create-react-native-app · Issue #516 ·… I want to know the Difference between react-native-init and create-react-native-app, I&#39;m new to react native so…github. com3. Eject… don’t do it… unless you know what you’re doing So this is only an issue if you decide to go the create-react-native-app route like I did. It’s much faster development but you cannot user native modules unless you eject which if you know what you’re doing, by all means go for it. I for one did not know what I was doing and followed a tutorial that said to eject my app in order to incorporate sound into it. This is where I lost half a day trying to revive my app from the dead. I C T R L- Z’d but no luck. If it weren’t for the time constraint, I would later find out that I just needed to rework my entry point and filesystem so that everything was pointing to the correct files but the other part of this lesson was to C O M M I T O F T E N. I got so consumed in writing code that I neglected the many git commits I should have been making to my repo that I had to save all the functionality I had after my last commit and before ejecting. Thankfully I did save my initial set up with the infamous ‘ Hello World’ screen and was able to quickly rework my files back into that version, this time with many commits. 4. If you are familiar with React. js, the tags are very similar but not the same in React Native There’s not much too this point but it is definitely worth making a note of. Rather than your standard <div>, <h1>, <p> tags etc. , React Native has their own set of tags such as < View> and < Text>. You will quickly become familiar with them but also the properties associated with those tags are slightly different as well. The following is a small snippet from one of the screens for my app:< View style={styles. selection Container}> < Text Input style={styles. right} on Change Text={input => this. handle Change(input, 'interval Time')} default Value={this. state. interval Time. to String()} /></ View> Take a note of how each tag has a style property. This is very similar to how you would normally use C S S for styling but rather than applying to the child tags, it applies to the associated tag directly. To do this, simply import Style Sheet from react-native and create a stylesheet which will look something like this (note how the style is the same as C S S styling except in camel case):const styles = Style Sheet. create({ selection Container: {  flex Direction: 'row' }}); Getting used to the different tags for React Native was probably one of the easier parts for me but of course no one is perfect and I got stuck on being able to do your typical event handlers. I definitely was not having the brightest moment and rather than on Change that normally comes as a built-in property for input tags, the React Native counterpart was on Change Text which you can see in the first code snippet. This was another instance of my refusal to thoroughly read the docs beforehand really caught up with me here. There are definitely a lot of obstacles that I came across when creating a React Native application but in the end I was able to get a working app with about half of the functionality that I had planned out in less than four days. Although it took me awhile to really understand how to set it up for my first time, I can say with confidence that my second React Native app will go much smoother which is what makes the learning process so rewarding and enjoyable even through all the suck.","['React Native', 'Expo', 'Beginners Guide', 'Codingbootcamp']",https://medium.com/@alexamoy/how-not-to-make-a-react-native-app-dd76ed9777bd,0,[],0,285,alexa,F,0.9978460888224202,0.002153911177579817
phavor sparks,Building solutions through software and technology,"LearnFactory Internship: Day 42 (June 28, 2018) – LearnFactory Nigeria – Medium",2018-07-01 05:01:34,medium,"Learn Factory Internship: Day 42 ( June 28, 2018)“ Patience and Persistence are the greatest qualities guaranteeing success”…i C Reactive functional Programming Reactive Programming I sat awkwardly gazing into the looms of unending React lines not knowing where to go from where… I had a notch to follow up my shallow knowledge on React by building Apps and perhaps a great site. What met this exciting Idea became more complex than React Routing… But wait a minute, I paused to fully ascertain the level of my knowledge of React before I kick-start myself into a White Elephant project as a Super Eagle team led by some bunch of brilliantly tired boys who were going to get their super green wings stripped off them and sent home via a Sea transport. I was not about to have the same experience with my new girlfriend ‘ React’. Thus, the thought was right for a break. Did I really know React?this. state I started off by answering the query: what really is this. state. It turned out the answer was hazy and lackluster, while I had a handle on it’s counterpart this. props I was yet to be confident with this state. I found myself in a state of statelessness; with the help of my best buddy google. com I had to clean up the cobwebs and shed more light on this mysterious state. a state of collaborative reacting What state am I in React is a beautiful and powerful library, the lovely speed it brings with virtual D O M and re-rendering of elements on the D O M rather than the whole page is quite unique. The relationship is quite simple -> you pass props from parent components to children components and this is uni-directional. Thus, children have no privilege of changing their received props nor do they have the ability to pass it on to their parents. I quite wondered at this behavior that React brings… what if I needed to change a component’s “own” property, would I need to go from the parent component who could be living some layers way up from where I was at the moment? My Mentor Calm and Strong I wasn’t the only one caught up in the deep nested component interaction as other interns were dealing with same issues. Taking the time out to get to the root of this I discovered state was just as friendly as my mentor chibueze ukaegbu. I quite miss his presence here at the Factory. Leveling Up With The State Unlike props, the component state is completely handled by the child component. The parent component doesn’t need to be informed, he barely even cares. The state is meant to be controlled by the kids… An instance: When we celebrated Shalom Mathews and @grace yesterday which happened to be their birthday… our instructors (parent component) weren’t necessarily concerned with the singing and dancing nor were they concerned with the pictures and brief talks about the celebrants… because that was the “state” of things for we interns… they only cared about the “props” that came in. Like the cake and wine… Gracify. Js doing her thing reactively Coda Bae Shalom Mathew Reacting beautifully. The good thing with React is that the state and props could interact in some special ways as our Video Instructor “ Andrew Mead” shows us in his React tutorial. How to get to 404 With some level of solidification earned on states and props we moved into React Router as our instructor Mr. Matthew takes us through erecting the Home page, Product page and 404 page. Didn’t know routing could be much fun. If you wanted to get to the 404 page, you could write something like this:react-routing snippet This line < Route path=”/*” component={my404} /> would take a seemingly lost user to your beautifully designed 404 page and gracefully lead the user back to known lands if the developer is kind enough to write it in. Stateless Functional Components The name had beguiled me. I had a cobweb preinstalled at this junction. What the heck are stateless functional components I asked my growing mind turning towards my buddy google. com and believe me, I did not make it 5 lines into the results I received; because I wasn’t ready for the information. But now? it feels good writing about it. Most of our React components are built on class basis like this:creating a class based component In the example up above, we have created a Menu component that is based on React’s Component Class. We essentially subclass Menu from React. Component which you would obviously import in the beginning of your script. Writing stateful components come in handy when states have to be managed and at such the component has to be class-based. Components built with this method have great advantages especially when testing our React App as they are easier to test. One thing I would like to bring to attention is what goes on behind the scene. It’s a very expensive process for the Engine to read through the code base of the React Module in-order to generate the class Components. This makes it quite slow. But you probably wouldn’t notice. Thus, the introduction of stateless functional components is important. When we have components that just make use of props and have no need of managing state, we could easily convert that component to a stateless functional component or write it like that ab initio. Before we get into the syntax and construct, it’s essential we note that stateless functional component isjust a component that is a function. faster than the class based componentsreturns a value implicitly or explicitlycannot use inline export default as we used above Alright, let’s get to constructing one ourselvesstateless functional component In the example above we implicitly return the div with class name = ‘menu’. Notice that we used the export default last. If your Menu component needed some props to function, all you need to do is to pass in props as a parameter in the function. const Menu = (props) => {// happy hacking…} Learning is for the strong! Never stop learning and don’t give up on any topic that seems difficult at the moment. Here at Learn Factory we are Reactively finding our way to Database soon. That should be our next stop, am excited to get to monogdb, mongoose and nodejs… We are a Happy Family here at Learn Factory… when coders unite… Many thanks to the P E N G O D Eazi, whose literary state is more than inspiring! He makes writing even more fun. And to the family that makes coding fun, keep the factory lit with joy and make you forget the sighs of wicked bug experiences @my Team Mates here at Learn Factory Nigeria Eazi the P E N G O D and My humble self Reacting with Hot Brains Beautiful People with Beautiful Hearts Eazi the Pen Master writes… To Andrew Miracle the C O D E M A S T E R for his unique and exquisite way of bringing code writing to life and his innate ability to effectively communicate his code lines without blinking an eye. The big Red Headset dude! Code Master Andrew Miracle cool as ice Learning from him has been an awesome experience, I can now handle most difficult React challenges with zest and ease. These days I go home in sheer elation eliminating the agonizing days of trepidation. Prior to meeting this amazing geek of a guy, I, an ardent lover of music and symphonies, with my funny looking earpiece enjoying the flow of music marveled at Andrew’s Flair and passion for music, I would consider going for a big red headset like his appended to my ears sitting over a big red laptop like his beating on my keys while enjoying the flow of tunes. It’s been a lovely experience! Be Calm and Keep Coding… phavor sparks Just negodu (look at) what we are doing; we are turning out geeks and coders extraordinaire… Prepare for the next round of internships; applications will soon be opening. Yes, you had me right, :) Enjoy your dayi C Chief Code Smith","['React', 'Codingbootcamp', 'Internships', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-42-june-28-2018-7fc578451cb4,0,[],0,80,phavor,Unknown,Unknown,Unknown
Connie Dang,"My adventures in the world of coding, data and career change! DANG, there is so much to learn.",Last coding adventures of 2016 – Connie Dang – Medium,2017-01-01 19:34:58,medium,"Last coding adventures of 2016 Share your knowledge by teaching someone. Amaze yourself. I have a family member who is also interested in learning computer programming but he is doing it through a computer programming degree from a technical school. The last best thing I did during 2016 may have been answering his questions about web development to the best of my knowledge. I introduced him to opening “inspect element”, using console. log(), divs, the box model, positioning items, bootstrap and flexslider. I was honestly amazed at how much I knew. Sure, I’m still struggling with A J A X calls but I’m definitely making progress! I showed him my memory game again since he saw what it looked like when I first took it home from class. I was able to walk through my code and explain how I made the win/lose messages only visible when certain conditions are met. In return, he gave me suggestions on the visual appeal of the game such as stacking all the buttons in the middle of the start screen and making them bigger. Don’t be afraid to show off your product to friends and family even if it’s unfinished. They are a fresh pair of eyes and may see ways to improve your product that you haven’t noticed. They have also seen your starting skill level and can attest to how much you have learned even if you feel like you haven’t learned anything worthy of showing. Fixes I’ve made today: Problem: Changing the location and appearance of the buttons changed the way the cards were flipped and the span tag displaying the number of clicks Fix: Lots of little tweaks here and there. See details below. 2. Problem: When the buttons were placed in the middle of the starting screen, their tiny size and font left the screen with too much blank space. Fix: Fixed the size of the buttons with col-sm-4 and larger text size. If I had changed only the text size on the buttons and not the size of the buttons, the words will go out of the buttons on hover as I had set them. 3. Problem: Since the location of the buttons were changed, the span tag was off centered Fix: Made title larger for aesthetic reasons and centered span tag using text-align: center. 4. Problem: When flipped, the cards looked like they shifted horizontally and then vertically on top of the span tag. This is because the title and span tags became larger but the height and width of the cards container remained the same. Fix: This one took a while to fix. I’m so proud of myself for figuring this out. In the end, the secret was in the mg-tile-inner, which is the container for the cards. Remember that it’s really two cards put together back to back and you’re flipping them from one side to the other. When we first created the game, we had these inner tiles inside of a grid upon which the cards rest. I have taken away the grid to make the cards look more clean and easier to style. What I needed to target were the inner tiles. The width of these inner tiles became max-width with the same amount of pixels. The height of these inner tiles went from 200px to 255px. What does this mean? Resizing the title and num Clicks span made the cards look like they moved more than it should have when clicked. Visually, max-width limited how far horizontally the cards can be flipped. In reality, it keeps the cards from flipping out of the box horizontally. It can only be flipped horizontally as far as the max-width allows. I also increased the height of the inner tiles. When it was limited by 200px, the tiles ended up flipping out of the inner-tiles. With 255px. the cards are still in the space of the inner tiles when flipped giving it the illusion that it is still within it’s container when clicked on. Visualization of the grids and tiles used for the memory game Visualization of flipping the card along the x-axis (left) and y-axis (right)5. Problem: The red border looks good but it’s not the best. I wanted a border with a color that stands out from the background. Fix: Changed the border of the cards to white. Now the cards look very crisp and clean. — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — — Today I learned ( T I L): I know much more than I think. I’m slowly but surely making my own slow, steady progress. I wish there were more formatting options available on Medium. D A N G. I think I’m starting to get the hang of things 1/4 of the way through bootcamp.","['CSS', 'Web Development', 'Codingbootcamp']",https://medium.com/@cdang/last-coding-adventures-of-2016-e44abd710bac,2,[],0,1,connie,F,0.9745464392093149,0.02545356079068508
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",A Solution – Emily Deans – Medium,2017-07-09 02:59:29,medium,"A Solution Here’s one approach to solving yesterday’s posted challenge, followed by a little visual breakdown of a way to process some of the logic surrounding it… Solution Code Matrix breakdown Breakdown of loop process (and wi-fi info for campus — whoops!) Hope everyone is having a good Saturday night, and I’ll be back here tomorrow with some new additions!","['Codingbootcamp', 'Women In Tech', 'Women Who Code', 'Lesbians Who Tech', 'JavaScript']",https://medium.com/@emilyldeans/heres-one-of-the-code-solution-approaches-for-yesterday-s-challenge-followed-by-a-little-visual-ca51452426ce,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Simon James Brady,,We Make Like Bananas and Split – Simon James Brady – Medium,2017-10-01 21:05:08,medium,"We Make Like Bananas and Split A T D D Playground Quest Continues Our team’s final coding-bootcamp project has entered a new stage of development. We have stepped beyond a monolithic Rails application into a separated front and back end structure using Rails, Express. js, and React. This seems contrary to the age old adage, ‘ If it ain’t broke don’t fix it’, in that we had a fully functioning M V P slightly ahead of schedule. It was simple in its structure, compiling a series of functioning applications we had each built, being an Action Cable chat application and a Ruby compiler that read from the chatline, coalescing into our Frankensteinesque creation. Why So why the decision to split? We have dedicated ourselves to following an agile workflow mentality, and divvying up between front and back end allows the group to divide and conquer. So, in order to yield a more professional and polished product, it seemed prudent to separate. We have further honed our product as well. We previously decided to stick to the testing playground. Still, we were faced with two possible avenues. We could either start an app, and demo said application this coming Friday, or we could develop a fully polished, and tested playground using Travis C I. Obviously, we went the route that would involve more testing. This avenue is considerably more difficult, yet we hope ultimately more rewarding. The challenge remains to replicate our early successes and that will surely be more difficult than we think it is. In the end, only time will tell.","['Ruby on Rails', 'Tdd', 'Travis Ci', 'Codingbootcamp', 'Coding']",https://medium.com/@simonjamesbrady/we-make-like-bananas-and-split-185236ab86a1,0,[],0,1,simon,M,0.002634710181879993,0.99736528981812
Belma,"Passionate about #Agile #WebDesign #WebDevelopment #PWA // If you can read, you can create an app // #WebDeveloper in the making",Learning to become a web developer: Part 1 – Belma – Medium,2018-04-03 05:53:12,medium,"Learning to become a web developer: Part 1 The Graduation Cake for the Harakeke 2018 cohort How it all started Initially, I attended a professional development workshop at my workplace about 10 years ago. I was an English Language Tutor back then, and I was always keen to learn about new technologies that made language learning easier. My only involvement with computers was in the form of a tutor, setting up Moodle course sites for my students. The workshop I attended was on Virtual Environments, and it was virtually by sheer luck that I went along to the session. I met a wonderful tutor, who became my mentor for the next few years. We never acknowledged that she was my mentor, but it was due to her enthusiasm for technology and having the patience with me to encourage me on this path of becoming a ‘geek’. I have a long way to go yet to earn that title, but thanks to Dr Clare Atkins that I can actually contemplate this option at all. She sadly passed away last year, and I miss her dearly. I hope I can become a geek one day — she once told me that I could become anything I wanted to be. So my journey into the unknown continues… I really didn’t know where to begin, or what to do. But I knew I had to learn what I didn’t know. One of those brilliant ideas that Clare suggested was to attend an upcoming workshop for women who were interested in becoming developers, http://railsgirls. com/motueka, so I signed up! This was another turning point in my new career. I met a group of savvy developers, who couldn’t do enough to help us at the weekend workshop! Thank you Charlie, Dr Craig and Craig for being such cool developers, I just wanted to be just like you when I grew up :-) These wonderful people were also part of Enspiral. I was curious to know what that was all about so I asked. Once again, I’m so glad to this day that I built up enough courage to ask. You see, I’m a quiet, introverted person, who’d like to watch and observe things from a distance. But on this occasion I just had to find out. My curiosity led me to Dev Academy, an intensive web developer boot camp that guarantees turning newbies like me into Junior Web Developers by offering a remote preparation phase, followed by an immersive 9-week boot camp. Before diving into it, I had to do my research of course. I was fortunate enough to ask some of the volunteers at the workshop who had completed this boot camp. What stood out for me from one of those graduates of Dev Academy was the advice of coding everyday. Whether it was by watching You Tube videos or enrolling into online courses like Free Code Camp, just code she said. Self-taught, for a while I took that as a challenge and said to myself, well, if I start learning to code at my own pace and save money at the same time, then I’d know whether I was really serious about changing careers. I had to put my money where my mouth was, literally. I must admit, saving the money was the easier part. Keeping the extra-curriculum activity of learning on my own was far more difficult. When I finally signed up for the boot camp, I just knew I hadn’t done enough preparation, I wasn’t ready. The Boot camp The boot camp had a preparation course of its own — Phase 0. This is where it began to occur to me that I wasn’t ready at all but I continued on. During this phase I also became ill and had to take time off work. Unfortunately, it wasn’t possible to continue learning during this time, even though I seemed to have all the ‘free’ time. It was a difficult period in my life and I’m glad to say it’s all over, well at least that particular condition. The end of Phase 0 arrived. I must add at this point that I couldn’t have made it to the end without the help of some wonderful friends I met during Phase 0. It was towards the end of this prep phase that we had to pair-up and complete a number of tasks together. I found this extremely challenging, but really enjoyable at the same time. I guess it all depends on who you end up working with. Thank you Brian and Peter for your patience and assistance during this period, I’ve learnt a lot from you! The big day arrived. You know the expression ‘impostor syndrome’, well, I discovered the real meaning of this when I started the boot camp. I was told that since I had completed all the tasks, in the form of nine sprints, then I could attend the summer boot camp. I still didn’t know enough but again, I went along. Third day into the boot camp, those emotions of being an impostor came out. I was struggling with the amount of concepts that were coming at me, left, right, centre. I wasn’t able to keep up, instead I was falling behind into the oblivion. Oh, how much I had wished that I had completed all the exercises on Treehouse, or watched all the videos on Java Script on You Tube… This time I knew I wasn’t ready for sure, and didn’t know what to do about it. So I stayed on. The first three weeks of the boot camp, Phase 1, was all about server-side rendering, the back-end stuff. This was supposed to be the ‘easy’ stuff as we were told that React and Redux, which was coming in Phase 2, was more difficult to grasp! Yes, I was terrified, to say the least. Sure, how could client-side be more difficult than the server-side? In week 4, Phase 2, I decided to have a chat with Marion and Dougal at Dev Academy, who basically provide a shoulder for students to cry on, and they listen for eternity. I was too embarrassed to talk to the course tutor, Don. I really just wanted to disappear, disappear fast. During this period, I also had a chat with my husband, who was back at home with our son, as the school term started in week 4 of the boot camp. The boot camp was in Auckland, and we live in sunny Nelson, a few hundred kilometres away. My rational was that if I was struggling so much and getting no where, then I should at least be with my family and spend some quality time with them instead. I also knew that I would have stopped there and then, and never bothered to continue becoming a web developer. I would have had to accept defeat and give up my dream. You see, I was linking my slow-uptake with the notion that I was not ‘clever’ enough to understand the new concepts that were introduced everyday. I accepted that I was slow, and needed longer time to digest everything. My husband was extremely supportive, and said what ever I had decided, he would have supported my decision. He’s very good with his magic you see, his spell somehow worked. I didn’t want to let my family down, and I certainly didn’t want to give the impression to my son that if things get difficult, you can just run away from them. When Don asked me on Friday of week 4, whether I was going to come back the following Monday, I said yes. But only because I wanted to say goodbye to the cohort before I left. After talking to my husband, and having decided to return on Monday to say goodbye, once again, I decided to stay instead. I knew it was going to be embarrassing, and testing the patience of everyone who would have paired up with me, nevertheless I stayed. Stayed to face my own demons. React and Redux was just like the way they said, especially React-server. I had no idea there was so much to web development. I have a whole new respect for developers, network administrators, database administrators… all of the I T professionals. I still have so much to learn about I T, computing, the Internet… Learning and having to keep up was difficult enough. Then the projects came along. We had to choose a personal project, a multi-day project, and a final capstone project. I thought to myself well, if they [the cohort] didn’t know that I was a ‘fake’ by now, they certainly would find out that I can’t put a router together now! During one of those projects, Don was checking-in with each team, and asking us how things were going. I felt, probably out of guilt, that I should have mentioned the elephant in the room, and said that technically everything was going well thanks to the technically-savvy team members [pointing to the others], and that they were carrying me along. Ouch! I don’t know why I said it, maybe because I wanted a way out, or maybe I wanted someone to say that I didn’t know what was going on, or simply because I wanted some sympathy. I don’t know. All I know was that I was actually being a real impostor, I wasn’t suffering from a syndrome at all. Don and I had a chat, following my comment. I just wanted to sink in a hole on the floor, and really disappear this time. But there was no chance of that. Don mentioned that when there are students on the cohort, who really struggle, staff usually advice them to do a roll-back, i. e. repeat the boot camp at another date, with a different cohort. Then he said that he never felt that he needed to have that roll-back conversation with me, because it was never necessary. Don is a very nice person. If you’re lucky enough to meet him one day, you’ll know what I mean! The reason he gave me was that the cohort, the rest of the students, wouldn’t have let me go! How was I supposed to respond to that? Well, I didn’t as I was totally speechless. He also said that I was to take charge of my learning and lean in. Embrace the struggle, fight the struggle and defeat the struggle. I was no longer allowed to be afraid of the technology, but I was to develop a relationship with it. I had already built a relationship with the rest of the cohort, it was time to get to know the web developer tools. It was such a relief to hear those sentiments, and I’ll cherish my cohort forever. I still wish I could have offered them something in return. You see, I was always taking from them. Maybe having being a teacher for so long, made it difficult for me to be the slow student who constantly fell behind. It’s just not because I didn’t want to learn from them, but it was because I was stopping them from learning. We all had our own struggle and different levels of stress during the boot camp. I’m just so grateful that they accepted me as I was, as I am. Maybe I was extremely lucky to be in the same cohort as these wonderful people, who are now my friends, but I think it’s also due to Dev Academy’s ways in which everyone supports each other and practises to have integrity, be kind, and be empathetic. We practised those skills, I K E, along with a start to each day with a session of mindfulness, as well as the regular deep-dive sessions on how to listen, how to give feedback, and how to have ‘difficult conversations’. Not to mention the yoga sessions twice a week, which should be thrice a week really :-) The boot camp was fast-paced but wholesome. I learned to be kind because I was working with kind people everyday. I learned to listen to others, because they took the time to listen to me. I’m responsible for my own learning, and they knew it was going to take longer than anyone else in the cohort, and they had accepted it. They made me feel welcome. If Dev Academy trains the future developers the way I experienced it, then I look forward to being part of that industry. It has a very bright future. Back to self-taught Where to now? Well, for me, it’s back to square one. I can’t give up now as I’ve come so far. I’ve reached the point of no return. My journey into I T couldn’t have been possible without the support of so many people along the way. I don’t want to let them down so I shall carry on. The first part of my plan is to revise everything from functions to postman. Yes, it’ll be at my own pace, but I know that’s how I learn. I’m planning to revise, learn, re-learn, practise, and code, yes code, everyday. I may have to pick up the pace three months into this plan, because I’ve recently found out that I’ve been demoted at work. Unfortunately these things happen, especially in the public sector. There wouldn’t be any point of regressing when I’ve just completed a boot camp to become a Junior Web Developer. I’ve updated my Linked In profile already. Another reason for me to code everyday, and contribute to open source projects, otherwise I’ll really suffer from impostor syndrome.","['Web Development', 'Soft Skills Training', 'Learning To Code', 'Codingbootcamp', 'Learning And Development']",https://medium.com/@AgileBelma/learning-to-become-a-web-developer-part-1-7ddbda60936c,0,[],0,100,belma,F,1.0,0.0
Jamie Ronin,,Explaining Exercise 1 of: Whirlwind Ruby Exercises – Jamie Ronin – Medium,2018-03-01 18:55:44,medium,"Explaining Exercise 1 of: Whirlwind Ruby Exercises Photo by Rakicevic Nenad on Unsplash Hello Actualize coders! I recognize that some of these new Ruby concepts can be kind of daunting, but don’t worry, you’re catching on quickly! Here is an explanation of the first exercise from the Whirlwind Ruby Exercises to give you a better understanding of O N E way to solve the problem. Remember, there are 16 ways to solve something, so if your way is different, congratulations! You figured it out on your own and that’s a lot of programing right there! So without further ado… First create a file somewhere in your /code/actualize directory. In your terminal you can use cd code/actualize Then make a file with touch ruby_exercises. rb Then open the file with subl ruby_exercises. rb (or whatever you called it). You’re ready to start!1a: Create a program that asks the user for their favorite 5 foods. Then display those foods as an array, using the “p” keyword. This problem asks us to do three things: 1) Ask user for input 2) Get user input and 3) print that input. We’re good programmers so we are going to tackle these one at a time. Ask the user for their favorite 5 foods: We can use the p tag to print statements to the console. To prompt the user for input we could start the file with: p "" Please enter your 5 favorite foods below by typing a food and pressing enter:” Let’s make sure this works by testing it! In your terminal enter: ruby ruby_exercises. rb to see if it’s working. You should see the phrase you typed! Ye Ee Ah Hh Hh! Get user input: We use gets. chomp to ask the user for input. The trick is, we need to ask them 5 times to enter something. If you notice that you have to do something more than once, it’s probably time to use a loop! Since you know we need to do something 5 times, we can use a . times loop:5. times do end We also know that we want to save the input after every time the user enters something. This is a good time to use an array! We want to define the array outside and above the times loop. If we defined the array in the times loop like: * Don’t do this!5. times do favorite_foods = [] favorite_foods << gets. chompend^^ B A D ^^ Then favorite_foods would get reassigned to an empty array on each iteration of the loop and by the end you would have only saved the last gets. chomp from the user. S O, instead we do this:favorite_foods = []5. times do  favorite_foods << gets. chompend^^ G O O D ^^ Great! Now you are giving the user the opportunity to enter 5 foods and you are saving them to your favorite_foods array (without reassigning the array to an empty array)! You wont be able to see the input yet, but it’s a good idea to test our new code by running ruby ruby_exercises. rb again. It should give you the opportunity to enter in something 5 times. 3. Print the input from the user: Now that we have the information saved in our array, it’s time to print it out. p favorite_foods Notice how favorite_foods isn’t in “quotes. ” That’s because we don’t want to print out a string that literally says ""favorite_foods"" we want it to print out our array that we called favorite_foods. Now that we’ve added this line to the end, our code should look like:p "" Please enter your 5 favorite foods below by typing a food and pressing enter:""favorite_foods = []5. times do favorite_foods << gets. chompendp favorite_foods1b: Now, instead of printing out the array, output 5 separate lines of each food, with the prefix, “ I love”. The example output is: I love cobb salad I love spaghetti I love pizza I love Swedish meatballs I love mac and cheese So we already have the user input, now we just need to output it in a special format. We want to go through each input and print a new line for each individual input… we’re doing something more than once so guess what time it ise used a . times loop above because we knew we wanted to ask them exactly 5 times. We could use a . times loop again, since we know they entered 5 items, but, I prefer to use the . each loop because it is more dynamic. The . each loop will go through each element of your array, no matter how small or how big it is. This could be helpful down the line if someone was to change how many inputs they wanted from the user. In 2 months, your boss may tell someone “ Hey, I only want you to ask them for their favorite 4 foods now!” and someone might go in and simply change the 5. times to 4. times and not look below to see there was another . times loop for output! If you use an . each loop you wont have to worry about that, because no matter how many things they shovel into the favorite_foods array, the . each loop will go through each of them!p "" Please enter your 5 favorite foods below by typing a food and pressing enter:""favorite_foods = []5. times do favorite_foods << gets. chompend# new code below !!!! favorite_foods. each do |food| p "" I love "" + foodend Ok, so let’s explain the inner workings of this each loop:favorite_foods. each → This means you want to go through each of the items in the favorite_foods array. |food| → As you go through the array you need to be able to reference whatever item you are on. You could just as easily called this |item| or |element| or even |blah_blah_blah| , but I used |food| because it makes sense to me as a human being. Now, when we reference food in the p statement: p "" I love "" + food we are telling it to print out “ I love ” and whatever the element is for that iteration. In our example output: I love cobb salad → the first time food is cobb salad I love spaghetti → the second time food is spaghetti I love pizza → the third time food is pizza I love Swedish meatballs → the fourth time food is Swedish meatballs I love mac and cheese → the fifth time food is mac and cheese Time to test our code by running ruby ruby_exercises. rb And Taaadaaaa!1c: Finally, change your program so that when the list is printed in the terminal, each food is prefaced with a number, beginning with 1 and going up to 5, for example:1. cobb salad2. spaghetti3. pizza4. Swedish meatballs5. mac and cheese Alright, now all we are doing is changing the output a little. We still keep the input we did in 1a and used in 1b and we still use the . each loop from 1b, but now we want to count instead of saying “ I love”. We slightly modify our code to accept a counter:p "" Please enter your 5 favorite foods below by typing a food and pressing enter:""favorite_foods = []5. times do favorite_foods << gets. chompend# new code below !!!!count = 1favorite_foods. each do |food| p count. to_s + "". "" + food count += 1end Let’s explain what’s going on:* count = 1 we give our counter an initial value of 1 (since the first time we go through we want it to print “1. cobb salad”). * We then enter the loop. * The first time we go through the loop count still equals 1, so when we get to p count. to_s + "". "" + food → count equals 1 and food equals cobb salad. (we use the . to_s on count because count is a number and we are trying to print out a string. We use . to_s to convert 1 into “1”). If you don’t convert it to a sting you’ll get the: String can't be coerced into Integer ( Type Error). * Then we add one to the count with count += 1 (which is just shorthand for count = count + 1). * Now we start the loop again, because there are still more items in the array!* Now when we get to p count. to_s + "". "" + food → count equals 2 and food equals spaghetti. * Then we add one to the count with count += 1 . * We keep doing this until we make it through each item in the array. Now run your code again using ruby ruby_exercises. rb and… I hope this helps and please feel free to slack me with questions!","['Programming', 'Codingbootcamp', 'Ruby']",https://medium.com/@jamie.mackillop.jobs/explaining-exercise-1-of-whirlwind-ruby-exercises-5e8b494a06f0,0,[],0,1,jamie,F,0.7582899308015347,0.24171006919846527
Nick Messina,Co-founder @YonderWork and remote work connoisseur.,"As traditional education programs become increasingly expensive and irrelevant, this makes A LOT of…",2017-05-04 15:56:27,medium,"As traditional education programs become increasingly expensive and irrelevant, this makes A L O T of sense. Keep up the good fight in getting this change to the G I Bill pushed through.","['Gi Bill', 'Codingbootcamp']",https://medium.com/@Nick_Messina/as-traditional-education-programs-become-increasingly-expensive-and-irrelevant-this-makes-a-lot-of-6b87ff935c5e,1,[],0,2,nick,M,0.0026660742057320595,0.9973339257942679
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 22 – Mike Brave – Medium,2018-09-11 01:14:36,medium,"42 Piscine Day 22 Edit: This is part of a series that culminated here, Next post. Previous post. I had a chat with one of the prefects, cool guy, one of the coolest I’ve met actually. We talked about the importance of being the kind of person who figures things out, how often when you are programming what you are actually doing is creating the future, making things that don’t exist yet and so you can’t rely on what’s been built before, there is no instructions only pieces of them scattered about. How sometimes you trust a function to work a certain way when you don’t fully understand how it works so debugging is that much harder. As it turns out almost everything we learn in the piscine is considered beginner level for Cadets. I had a good laugh about how the things I find so hard are still considered training wheels. He also had a great point of view from someone who came from a more experienced coding background, for him it was quicker to pick up what was being taught, but was harder to unlearn bad habits he had picked up before. Things like learning coding standards (the Norm) or even how to pick apart base functions and make our own libraries as we do. A lot of what we learned also wasn’t part of any normal curriculum so it was still new to him as well even with knowing a lot of the techniques to solve it already. So he still struggled in his piscine, but with entirely different struggles than myself. I really valued that other point of view about it. Also he only had great things to mention about the program as a cadet, how it’s made him a better coder, one who understands what’s going on, how positive the environment has been and how much more confident he is now because his code has improved so much. I can’t think of a more glowing review for 42 than what he said, and the way he said it was with the tone and intent of giving us hints in the right direction. To “not memorize” or “rely too much on github”. We all agreed. I left the conversation feeling relieved, hopeful, and grateful for the insight. But later on I began to realize that I’m probably a lot less ready skillswise than I hoped or thought I was. Also a sidenote, there is one guy here who most of consider one of the smartest of the piscine. He had no experience programming but has picked it up incredibly fast, so even though my own experience makes me skeptical that someone with no experience could do great, there is at least one exception I know of. He did prepare for the piscine ahead of time though by reading the C programming language by Kerninghan and Ritchie, which is the book most recommended for those who come to the piscine. He has also made an effort to spend a lot of his time with other smart people, and came into it already humble, focused and ready to learn. So it can be done, not by me but it can be done. Also today was the first day for the new cadets coming in, some of my friends were friends with them already from their previous piscines. One of them said in passing that the last piscine they changed the amount of points each question is worth, which shifts it decidedly harder as before the minimum to pass the final was to have mastered a smidge more than all of the level 2 questions, now one would have to have mastered more than the level 3. This has made me concerned and also somewhat defeated. I could have maybe pulled off learning the parts I don’t fully understand about level 2, I’m not sure I can pull off most of lvl 3. I’m not the only one feeling defeated either, there is a sizable group of people barely coming to the lab anymore, already mentally having given up, I see them at lunch or out playing basketball, we trade conversations in the hallway, but they are rarely in the lab. They are passing time until their flights leave on Saturday, perhaps there is some sliver of hope to still get in, but I’m not so sure. One of my friends picked up how I was almost a professor in China and has started looking into teaching english abroad jobs, I worry that’s his way of giving up as well. The count in the lab today is about 71. I ended up taking a nap today to try and shake that feeling of defeat so that I will actually try to get something done. This is more a mental battle with myself than anything. Unrelated to the piscine but still part of how I’m feeling about learning to code is that earlier today I was reading comments on hacker news about how to be a better programmer and I recognize many of the practices in place here which made me only more impressed with what 42 is trying to do. I came away making a list of books to read at a later date and made a google doc listing many of the tips on how to make better software, work better in teams and format the code you create. I also watched an old talk by Don Norman entitled it’s all about experience, which oddly enough made me feel better about my past jobs in the service industry and as a Graphic Designer, that a lot of my past experiences could in fact help me to create better software, because I know how to find out what people want, how to speak to them, to find out problems. My delays in getting around to learning to code will have it’s own advantages as I go forward. I mean it won’t necessarily make me better at code, with it will help me to code what matters and work better with others, which are useful skills in their own right. It’s hard for me to completely put my feelings into words today and the ones I’m finding don’t quite do it justice. In some ways I feel almost defeated, but also hopeful at the same time, “ Out of my depth” would be the simplest way to put it, but it’s more positive than that, less hopeless so it doesn’t quite fit. It’s more like I thought I was close to being an adult only to realize that I’m still a child, this is simultaneously frustrating and relieving. I feel like I’m on the path, that I’ve gained some much needed perspective and insight about the process to be a great developer, what’s needed and what I still need to learn, but that the overall lessons from said insights are just how little I truly know and how long the journey will really be. It almost feels like if this were a T V show like I’ve beaten the odds at the end of a first episode when there are many seasons yet to follow. I know I want to attend this school, but the challenge ahead isn’t “beating” the piscine as I thought when I arrived, but rather being good enough at coding that the the challenges ahead(like the final)would seem an obstacle rather than some monumental triumph. The piscine is just a beginning, it’s actually the easy part. I want to be a great developer, I’m not convinced that I’m there yet, so the question becomes what comes next. Do I retreat to learn as much as I can on my own and return at a later date, do I push myself to the extreme to try again immediately? Could I mange to pull off some sort of last minute miracle and get in the first time as I’m often known to do? But the larger question is would I feel ready and prepared if I got in the first time, would it be enough? Would the vote of confidence of having gotten in be enough to make me feel worthy of the opportunity, and how much of my current self doubt is unfaithful to the reality of the situation? I don’t actually know. I only know that I feel like I’m lacking the skills to accomplish the task ahead despite having learned and grown so much, despite having done more in less than a month than I previously believed possible, all I see ahead is a lifelong journey to improve my craft of coding. I’m grateful, I’m humbled, I’m doubtful of my chances to pass the upcoming final. We will have to wait and see. Week 3 photos have come out, I’ve still managed to not end up in any of them. Usually I try to dodge cameras but here I haven’t, somehow I’ve just not been photo worthy so far despite always being about 5 feet away from whatever was. Speaking of photos here are some links. Check the twitter page for other photos to see what it was like. week 1 photos hereweek 2 photos hereweek 3 photos here","['Programming', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-22-5a8878580283,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Gabriela Parra,Sharing my personal coding journey and learning about badass technologies. I promise giphys.,Coding: Best Decision Ever. – Gabriela Parra – Medium,2017-06-10 05:42:14,medium,"Coding: Best Decision Ever. I’m a learner, this has been my identity for as long as I can remember; always fascinated by knowledge. I’m also a builder, even when I was a kid I used to collect random pieces of paper, wood, and anything I could get my hands on to shape later into something new. I stubbornly moved the furniture around in my bedroom and my Legos never stayed the same. As you can tell, I don’t like staying put. Being active both mentally and physically is a big part of who I am; it defines me. My curiosity has taken me to a lot of places. From building electrical circuits with my dad and doing origami to pursuing a degree in Mathematics. I also got interested in Architecture and later on explored Finance, and I could mention so many more things! But what I want you to know is how I felt about all the bits of information I have in my head. I felt lost. I felt as if I had all the odd pieces of the puzzle without being able to see the big picture — until I coded my first program… Then a lot made sense. I built a small C L I Tic Tac Toe game in my first coding language, Ruby. I think fewer things in my life have taught me more than that experience. I learned that coding is not about looking at the end goal, is about moving forward. It’s not about how many errors you get, it’s the resilience you fight them with. Sure, I got highly frustrated at times, but that seemed insignificant in comparison to how I felt when I reached a solution. It was thrilling, there’s not a better word I could use. And now I joined a coding bootcamp, Ironhack. I did it because I have found the coolest and most challenging tool out there. The possibility of turning essentially any kind of knowledge into something useful is why coding makes sense to me. Isn’t it wonderful how someone typing code with their fingers could change the world? I couldn’t be more excited to be on this journey.","['Programming', 'Coding', 'Codingbootcamp', 'Developer', 'Web Development']",https://medium.com/@gabrielaparra/coding-best-decision-ever-144489a7f943,1,['Ironhack'],1,2,gabriela,F,0.9952923213944908,0.004707678605509256
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 60 — VOYAGE-5 IS UPON US! – Chingu – Medium,2018-05-28 18:20:02,medium,"Chingu Weekly Vol. 60 — V O Y A G E-5 I S U P O N U S! Another batch of remote tech teams have been launched!! 💯 Photo by Songeunyoung on Unsplash News & Opportunities🎉 Remember Voyage-5 members, you can opt-in for Pair-programming in the weekly check-in (found in your weekly update email). 🎉 Congratulations Katherine on getting the developer job offer!🎉 Congratulations Anton Tymczenko on the new dev job!🎉 Congratulations Kevin on the new front-end dev job!!!🎉 Congratulations Jon Maldia for graduating from P R O J E C T C O D E and getting the outstanding leadership award (no surprise there haha)!“ So happy to share this moment with my family. Graduation day from #nypl’s #projectcode I got an outstanding leadership award and a best group site award. ”🎉 Congratulations @ Alex V for finishing the React Nanodegree!!🎉 Congratulations @jordanleo for finishing the F C C Backend Dev Cert!🎉 Congratulations Van Tabbert for finishing A N O T H E R Udacity nanodegree! M Y G O O D N E S S Y O U’ R E A N I N D U S T R I O U S B U N C H! Voyage-5 Teams have been Launched!! The Bears 🐻, Geckos 🦎 and Toucans 🐦have been launched and teams are working their way through Act 1 on the Voyage Project Roadmap (some are already into Act 2 already!). June 4th is the due date to have project setup Act 1 finished. Let’s do this! Shout-out to the incoming Voyage-6 members! Voyage-5 has been launched, now it’s time to facilitate M O R E teams in Voyage-6 launching next week! 🚀 Can’t wait to see all these projects come in the next few months!!! Shout-outs & Showcases🔥 A legend returns! Florin Pop is joining Voyage-5 (whatever team gets him is extremely lucky!). Check out his past run of coding to see just how I N D U S T R I O U S he is. 🔥@adeen — Check out Adeen’s portfolio page. I love that he added the word Persistence on the main page!🔥@raymond wrote this great article I bet many of us can relate to called Thoughts and Feelings about Programming after 6 months. 🔥@aki → Calling all Japanese whisky affectionados! @aki made a minimalist ode to Japanese whisky, which you can check out here!🔥 Jon Maldia — Check out @jon-maldia’s memory game here!🔥 Diogo Ribeiro ( Designer. Maker. Developer) — Check out @ Diogo’s portfolio page! He is a multi-faceted individual with many interests/skills, as shown below by a cubist rendering of Iron- Man you can find in his portfolio site!😂 Parminder Singh has been up to his usual M A C H I N E L E A R N I N G adventures, this time he was exploring the V A E- G A N neural network model. He proceeded to train it to make himself into a smiling woman. ;p Shout-out trion!🔥 Have a look @kaizen’s solid app, which has the use-case of “ Find a mentor in your neighbourhood to teach you a new skill”. Overheard in Chingu Random lines taken out of context from the Chingu cohorts (click above title for the whole article)! A big hello from Scotland :flag-scotland: Hey! Where in Mexico? I’m in C D M X 🙂 Hello from Mexico, I am really excited to be here Hello from Bulgaria :flag-bg: to everyone 🙂 I am really excited to be here Hi everyone from Germany. :germany-flag: Super excited to be here ❤hello from Barcelona 😄 Read a lot about Chingu. Now I’m a part of the family !! Feeling awesome !! Hello from Russia 🙂 :ru: Hello from Nigeria:flag-ng: Sending you bits of data from Philippines! Hello from West Texas! Hello from Ukraine!:) Hi everyone!! Finally it’s happening 😆 Nice to meet you all! Hello everyone! Greetings from California 🐻 Hello from Mexico, I am really excited to be here Hello from England :gb: 😀eastern europe, i’m night person btw, so i’ll be better in couple of hours 🙂 Hello everyone, I’m from Malaysia. And it’s morning 6:29am over here Quotes to Go Problem solving, team working and communication are the skills that are currently most in demand in the workplace. Sean Rush, president and chief executive of J A ( Junior Achievement) Worldwide, an organisation that helps teach entrepreneurship in schools and links students with local business people, notes: “ Communication and collaboration are essential in a list of 21st- century skills; so much of work in the future will require things to be done across boundaries. ” As our data show, that future is already here. — quote from The Economist/ Google joint report titled Driving the Skills Agenda: Preparing Students for the Future","['Udacity', 'Chingu', 'Freecodecamp', 'Reactjs', 'Codingbootcamp']",https://medium.com/chingu/chingu-weekly-vol-60-voyage-5-is-upon-us-cfbe665b69,2,[],0,250,chance,M,0.024461428631419813,0.9755385713685801
Bill Press,SVP Engineering at Optimizely,We’re running Optimizely’s Hack Reactor Scholarship and Internship program again. Here’s why.,2018-10-02 00:47:51,medium,"We’re running Optimizely’s Hack Reactor Scholarship and Internship program again this year. Here’s why. I’m happy to announce that Optimizely is launching, for the third time, I/ Own It — a boot camp scholarship and internship program that provides a path for individuals who are underrepresented in tech, and who have no professional technical experience, to begin a career in software engineering. I/ Own It provides three full scholarships to Hack Reactor’s Software Engineering Immersive followed by paid three-month internships at Optimizely in San Francisco. Together, these run six months, starting with the Hack Reactor immersive on January 2nd, 2019. The deadline for application (which you can find here) is October 26th, 2018 and it is open to anyone who is underrepresented in the tech community. The I/ Own It program was established in 2015 by Jenny Lin, one of our engineering managers at the time. The purpose was to cultivate and support the participation of women in engineering at Optimizely and in our industry. When we ran it again in 2017, we decided to open it up to people from other underrepresented groups. Both of these programs have had significant impact. Two alums have gone on to create their own startups, and two are now successful Optimizely engineers (one of whom, Jess Chong — now a Senior Software Engineer — is helping to run the program this year). I/ Own It is different from other coding boot camp scholarships. Typically, boot camp participants quit their job, spend a quarter in an intensive boot camp, and enter a job market with no professional experience. I/ Own It, though, doesn’t just provide simple scholarships; I/ Own It provides internships, too. These give hands-on industry experience right out of the gate. Also, I/ Own It provides mentors to the winners, so each has an experienced, professional engineer that has their back. I can’t overstate how important and helpful these are, especially when finding that first full-time job. There’s a reason comprehensive boot camp scholarship programs like this are rare, especially at companies our size. It’s expensive and takes a lot of energy to make happen. So why do we do it? Because we think it’s that important. We are deeply committed to diversity, equity, and inclusion, not just at Optimizely but for the world at large. We believe our industry will have the most positive and powerful impact if it includes the broadest diversity of background, experience, and thought. Of course, it must be said that I/ Own It benefits Optimizely with this increase in diversity of background, experience, and thought. Every intern leaves their mark on our organization and, happily for us, a number of them transitioned from internship to full-time Optinauts. Each and every one has brought talent and perspective to the organization, and each one has made both our software and our culture better and richer for it. Finally, and most significantly, I/ Own It has had a transformative effect for the individuals who have gone through it. I encourage you to read their stories on the Optimizely Engineering blog: here’s Jess’ Q& A, and here’s Brie’s post about I/ Own It. So what’s next for I/ Own It? For one, we hope to continue to provide this program every year going forward. It’s proven to be a powerful and effective way to increase the diversity of talent and experience both in our company and in our industry. Second, if you are a fellow company interested in running your own sponsorship program, we want to help you. We will be following up with a blog post about how to start your own. Stay tuned.","['Coding', 'Experimentation', 'Optimizely', 'Codingbootcamp', 'Diversity And Inclusion']",https://medium.com/engineers-optimizely/were-running-optimizely-s-hack-reactor-scholarship-and-internship-program-again-here-s-why-7b5223bb6312,2,['Hack Reactor'],1,101,bill,M,0.004447646971127565,0.9955523530288725
Gohar Iqbal,Tech enthusiast and an engineer who can code. Passionate about technology that can positively impact society,Why I Left My Job and Decided to Become a Northcoder,2018-05-28 19:36:09,medium,"Why I Left My Job and Decided to Become a Northcoder Two weeks back, I went from being a full time employee to being a student (and being broke). It was a similar feeling of excitement when I was going off to university. This time however, I felt a bit wiser going in with four years of experience I accumulated in the Nuclear industry as a Systems Design Engineer. Most important of all though I had a hunger to learn and make most of this opportunity. I became a Northcoder and started a coding bootcamp in Manchester — an upcoming tech hub in the U K. This is my story of how I left a cushy job to retrain as a Software Developer. Being a bit of techie, I was feeling very frustrated by the lack of cutting edge technology being used in industrial automation, especially while witnessing the recent A I spring. Here I was programming 20 year old technologies such as Programmable Logic Controllers that were treated as magic black boxes by the people working in the industry, while Deep Mind was beating humans at the Chinese game Go like there was no tomorrow. I came across inspiring startups such as Verve* that are not only trying to simplify how we break down our electricity bills, but rethinking the future of the electricity prosumer. So last summer I finally decided it was time for me to make a change so that I could also play a part in shaping our future. I knew the journey wouldn’t be easy as I would have to gain new skills, build professional networks and retrain to become a Software Developer. So where did I look first? Yup, T’ Internet. With thousands of free online courses that anybody can do in their free time it was the best place to start. I instantly started a Data Science course on Dataquest and the legendary machine learning course on Coursera taught by Andrew Ng. I learnt to use Python libraries such Pandas and Matplotlib to manipulate large datasets and visualise them. I studied the maths behind Linear Regression, Logistic Regression and basic Neural Networks. I didn’t become a Machine Learning expert, but the course gave me a vital understanding of how to develop simple models and apply fundamental Machine Learning algorithms to a dataset. Even though I felt quite happy about the new things I was learning, balancing courseworks, a full-time job and building new networks was very time consuming. I barely had a social life while I was doing all these things — but I knew I would have to make some sacrifices in the short term. I also knew that I was missing a key skill from my growing toolset — web application development. Becoming a full stack developer would not only enable me to work for exciting startups, but I would also be able to make applications that could utilise technologies such as machine learning and bring it to the masses. What I hadn’t figured out was how I would shorten this process of retraining — after all working full-time was taking a massive chunk of the day. One wintery evening I attended a tech meetup ( Blockchain Manchester) hosted by a startup based in Federation House. After a pleasant but informative evening, full of beer and pizzas, I googled the startups based in the old but magnificent building. Naturally I was quite intrigued by the tenants of the Federation House and started to explore what they all were up to. This is when I first found Northcoders — a coding bootcamp that offered both full-time and part-time courses for aspiring coders. It was a light bulb moment — I had stumbled across an organisation that would not only help me realise my goals but also strongly resonanted with my values. I immediately applied for the full time course and the rest is history!* Disclaimer: I am a Verve shareholder and the views expressed in this post are solely my own and have not been endorsed by Verve.","['Machine Learning', 'Codingbootcamp', 'Career Change', 'Manchester', 'Engineering']",https://medium.com/@gohar_iqbl/why-i-left-my-job-and-decided-to-become-a-northcoder-8a1c90160ee9,0,[],0,72,gohar,F,1.0,0.0
Anthony Jarina,,The Bootcamp Bubble – Anthony Jarina – Medium,2017-07-20 18:10:32,medium,"The Bootcamp Bubble With news that Dev Bootcamp will be closing it’s doors at the end of the year, I got around to revisiting my feelings on what I consider a “coding bootcamp bubble” and what I think is likely to happen in the next few years. Sooner or later… At the end of the day, these bootcamps are businesses. Something I notice with some of them — particularly the one I went to, Coding Temple — is the low barrier of entry. Placement tests are easy or non-existant for these bootcamps, resulting in more butts in seats but ultimately a watering-down of output (read: quality students) for the bootcamp itself. Businesses need revenue and in the case of a coding bootcamp, that revenue is provided by the students. What if the student is of lower quality? What do you do if the student just isn’t cut out for technology but you’re a couple students low on your cohort quota? Business rules would dictate that you admit them as long as they can pay the tab and I think that’s what many of these companies do. Then these students go through the program, either get a job or don’t. If they don’t, then they become your problem for months because they become emblematic to a degree of the type of professional your company can provide. All because you as an ambassador for your company didn’t take the long-view. I dunno, maybe I’m a little bitter. But there are many reasons why I take such a harsh approach. When you’re attempting to learn and someone who has no business being in a coding bootcamp (and is simply there because they were able to fill the quota) derails the entire lesson for a large chunk of the day because they can’t keep up, these things chip away at the quality of output. A student could end up feeling robbed. It ain’t the coding that’s difficult to deal with… it’s the dumbass sitting next to you! Or if another student who has more experience in a language bitches about assignments being too simple or rudimentary doesn’t have the wherewithal to seek out more complicated projects on their own, morale tends to slump in other students who might still be wrapping their heads around the class material. All in all, it’s a tricky balancing act and not easy to be sure, but I think a better job could be done by some bootcamps not only in their financial structuring, but also with who they admit, things may be tougher in the short term but that bootcamp then becomes adept at churning out high quality students who are of use to their company. Beyond that, a certain strictness is almost mandatory when it comes to collecting assignments, hard deadlines on projects, and more required hours of attendance. 9–5 ain’t gonna cut it when employers and technical interviews become a part of the conversation. E V E R Y T H I N G the student hands in goes on Git Hub. Furthermore, the student should be forced to hack their own spin on an assignment and put that up, too. As currently composed, only the minority of bootcamps seem to be adopting this approach. The curriculum needs to have a central focus and not get distracted with creating students who are half-assing 10 languages or frameworks instead of whole-assing 2 or 3. As the next couple years come and go, don’t be surprised to see bootcamps dying just like Dev Bootcamp either due to a poor business model or because of some of the issues I’ve listed. While I feel great that I have a cursory knowledge of Python, Django, Flask, Java Script, Angular 1. x, j Query, H T M L/ C S S, S C S S, my S Q L, and others… I’d rather be a fucking killer at Python. I bet there are a lot of people who feel the same (albeit with C++, Java, C#, etc). As these companies die, we will also likely notice a reflection in the industry where companies are less likely to hire bootcampers (or bootcampers from specific “schools”) simply because they can’t hack it after their half-assed 10 week programs. This will lead to less people going to bootcamps overall, and certain ones in particular because the “too good to be true” attitude will prevail. Prospective students will think, “nah, a bootcamp can’t get me employed in the tech field after all” and not bother enrolling. I’m aware I’m offering a lot of problems and not a lot of solutions. Some solutions are scattered throughout this post. Bring in better quality students: Their talent or lackthereof should have a “floor”. If they don’t meet a standard (which should be H I G H, not just building some piss-poor f*cking “about me” website), they’re out — even if they can pay. If a student is derailing the lesson for the day, they have to be told as much: One person can’t ruin the potential productivity of a full day because they can’t copy what’s on the projector screen or want to traipse off into some unrelated tangent. Longer days: I hate to say it, but 930 to 4 doesn’t cut it. These languages are D E E P. A day shouldn’t be devoted to learning arithmetic in Python. That’s fucking absurd. Any schools out there doing this with a language should be embarrassed and shut down immediately. Pare down the curriculum: This was my biggest frustration, and I’ve had conversations with instructors and colleagues about it. Why make someone unhireable in ten languages when you can teach them 3 things that are related in a really good, comprehensive manner? If they demonstrate an understanding in H T M L/ C S S (which, in my opinion, should be bare minimum before even stepping foot in the classroom), then teach them how to use Python, Django, my S Q L/ Postgre S Q L or even the M E A N Stack to build a functional e-commerce site. Then a functional app. Then maybe some games. Build the cost of some server space into their tuition so they can host this stuff on an actively updating resume/portfolio website. Am I crazy? Is this hard? Anyway, I’ve been on the soapbox long enough. I am admittedly frustrated at the state of things, but I can’t complain. I’m gainfully employed and on my way to a great career. Not everyone will be so lucky, however. This is for them. It’s also for the bootcamps out there who want to survive. The tech industry is sink or swim, and not just for developers.","['Programming', 'Careers', 'Codingbootcamp', 'Coding', 'Technology']",https://medium.com/@anthonyjarina/the-bootcamp-bubble-ce7cef122986,1,"['Dev Bootcamp', 'Coding Temple']",2,0,anthony,M,0.004907680596533925,0.9950923194034661
Ryan Brockhoff,Web Developer | Entrepreneur | Writer,Coding Bootcamps: 10 Traits You Should Have – Ryan Brockhoff – Medium,2018-10-01 14:10:01,medium,"Coding Bootcamps: 10 Traits You Should Have Photo by N E S A by Makers on Unsplash There is no shortage of web developer positions available in the U. S. , and alongside that, no shortage of web development bootcamps. What once might have been seen as taboo, is now a widely accepted fast-track education system for those wanting to make their jump into the tech industry. And while these bootcamps are the real deal — there is inherently more risk to this decision. Most of that risk is based on your expectations, and what you’ll need to accomplish to be competitive. In order to make a more concise decision, I’ve outlined the 10 traits I believe to be important for bootcamp and post-bootcamp success. Traits for Success:1) Highly Motivated by Challenging Situations My personality is already geared towards bootcamp-like environments. I found out at the age of 20 that my mind was at its best in more challenging situations. While traditional university work was boring, I received my best grades at a private Spanish university where half my classes were in my second language. In a challenging environment where I was pushed to my limits, I was highly motivated and curious. I was fortunate enough to have this experience and understanding previous to my web development bootcamp. You will have countless struggles and bugs. Not just during the program, but for the rest of your career. It’s essential to your success that these struggles excite you. Because despite frustration, there is no better feeling in the world than solving an issue in your code. It’s also important to note how you channel that frustration when it hits you. Do you give up? Do you need a five minute break? Does it make you even more competitive to solve it?2) Ability to avoid distractions There will be a multitude of potential distractions that will take you away from your studies. In a traditional setting, watching a movie or hanging out with friends is completely normal. In a bootcamp setting, you should plan on having no social life. Every once in a while, we all need to take a break and replenish. But for the most part, expect to be coding every day for the majority of the day. Three months instead of 4 years for the same job? You’ll have to work incredibly hard to compensate for that time difference. On average, I spent 10–15 hours a day working on something project/code related. There’s a difference between consciously taking a break from a challenging problem, and unconsciously being distracted by a video game or nearby ping pong table. Be intentional with how you spend your time. Individual distractions might seem harmless, but every distraction from studying adds up over the course of the program. 3) Self-awareness In my experience, most people have (and admit to having) at least a few weaknesses throughout the program. Maybe for you it will be C S S, and for others it will be Javascript. My bootcamp frequently tested me to see what information I was retaining, and what areas I could improve upon. It’s important to be self-aware of your skillset and what topics you find challenging. Whatever you struggle with, you need to spend your limited free time studying until you understand it well. If you struggle with the backend (database/server), then make that the emphasis of your personal project. Be aware of what you struggle with, and take every opportunity to work on it until you’re equally comfortable. We, as humans, tend to avoid more challenging work. Override that default response for the sake of learning more. 4) Productivity Waking up at 6am might make you feel more productive. But unless you’re coding and using that time wisely — you might as well sleep in. A key to your success will be developing productive habits for studying and organizing your learning experience. Make sure you can separate what makes you feel productive, and what actually produces results. Your productivity will also revolve around your ability to debug and resolve issues in your code. At first, you will struggle endlessly with bugs and not understanding what is breaking your code. As time goes by, you will become a much better problem solver and need less help. Mentors/instructors are there to help you be more productive by spending less time debugging in the early stages. Without their help, you might spend hours upon hours trying to demistify some issue in your code. Bootcamps help speed up this process — but only so long as you ask for help. Never be afraid to ask for help. You’re paying to study in the same room as experienced developers so you can specifically avoid this pitfall. 5) Don’t have an ego Even if you were an excellent student and knew how to code 10 times better than any junior developer on the market — if you can’t admit fault, stay humble, and learn from your superiors — you will not be successful. The only way to be successful, is to fail — and to fail often. Find humor in your mistakes, and realize that every developer makes similar (and just as embarrassing) mistakes at the start of their career. Do not be afraid to ask questions or ask for clarification. Some students are insanely talented at Javascript and understanding logic. And you might feel inferior because they’re “smarter” than you. But everyone, at some point, will struggle with a given topic. You cannot compare your skillset or what you learn quickly to anyone else in the room. Just focus on your own learning, and work harder when you struggle with something. You are the least experienced developer at your first job. The senior developer has far more important issues to deal with than your ego. They won’t want to hire or work with you. So if you think you’re the best thing since ketchup, think again. Stay humble. 6) Have the proper motivation Simply wanting a high paying job isn’t enough to motivate you throughout a program. You will be working on a bug in the final stages of your personal project at 3:30am, reading your 18th forum from Stack Overflow. Money won’t even cross your mind at that point. You have to genuinely love coding. Because if you don’t, you won’t designate enough time or attention. But a “passion for coding” as a beginner won’t be very intense. Passion, or an intrinsic motivation to do something, grows over time. You’ll be sort of interested in solving a small problem, and as the coding task grows — so will your interest. So, according to Cal Newport, your bootcamp experience is where you develop your passion. So you shouldn’t feel like a fraud if coding isn’t your favorite thing in the world after 20 hours of studying. Passion comes after hard work — not before. 7) You want to constantly learn This isn’t a career path where you learn the material — and then you magically know everything. In order to be competitive, and to keep your career momentum, you’ll have to constantly learn. And the thought of that should excite you. You’ll never be bored, and you’ll always have D O C S to read or new tutorials to watch. You’ll have to keep learning once you graduate, and then keep learning at your first position, and then keep learning to move up in the tech world. It never stops — and that’s fantastic news for those of us wanting to learn for the rest of our lives. 8) You work well with others and on your own Unless you’re seeking freelance work, you will constantly have to communicate effectively and work well with others. You’ll be collaborating and pushing code with a team most likely for your entire career — so you better be a team player. Which is also another reason why being humble is crucial. But being friendly and ego-free isn’t enough. You have to effectively communicate (second time I’ve written this, hint hint) with your team. Don’t write ambiguous merge requests. Don’t slack your superior with a 2 page essay on an issue you’re having. When you communicate with others, think of what information they need to understand you, and how to do as productively as possible. But you also have to be great at working on your own: solving your own bugs, working from home in a productive way, creating and following a learning path to advance your skillsets. Working as an individual, in my less experienced opinion, is just as important to “bridging the gap” between where your company needs you to be — and where you are upon hiring. 9) Be able to network with others Networking is huge in any industry, and your ability to find new opportunities for growth will stem from your network. It’s not like you should already be walking into tech meet ups, bumping shoulders with developers in your area. But eventually, you’ll want to attend meet ups. Often there is free food, people you can easily talk to (because unlike your non-developer friends, they want to have technical conversations), and important lectures from super smart people. Make connections and be a part of your city’s tech community. Socializing isn’t something we think of with a web development career, but it’s an important skill to foster your personal development. 10) Flow state I could talk about this for hours, and I subjectively overemphasize flow state as a skill for web developers. But the ability to get lost in your work, where you forget what time it is — or even forget to eat — is crucial. Most of you have experienced this to varying degrees, but you probably haven’t studied it or specifically tried to enter a flow state while working. Long story short: those who can systematically enter flow state are happier and more productive than their peers. I have a link in the resources below to learn more about it. Hopefully this article helped you better evaluate whether or not a bootcamp is right for you. I truly believe anyone who is flexible and motivated to learn, can learn just about anything. So this list isn’t meant to be a make or break indicator of your potential success. But this should help you feel more confident moving forward knowing what it takes. See a trait missing? Have a counter-argument to one of the traits listed above? Leave a comment below and share your insight! Resources: Career Path: https://80000hours. org/ Flow State: https://daringtolivefully. com/how-to-enter-the-flow-state","['Programming', 'Coding', 'Codingbootcamp', 'Developer', 'JavaScript']",https://medium.com/@brockhoff/coding-bootcamps-10-traits-you-should-have-8379fc013b25,5,[],0,155,ryan,M,0.024172097739259983,0.97582790226074
Abiola Ilupeju,,Moat Academy: celebrating two years of raising remarkable software developers with our Alumni’s…,2018-09-10 04:32:38,medium,"Moat Academy: celebrating two years of raising remarkable software developers with our Alumni’s stories Some of the participants at Moat Academy Bootcamp Moat Academy ( www. moatacademy. com ) is a coding boot camp in Lagos, Nigeria; a software developer hotbed where we have created an environment that fosters rapid growth and high performance for our participants to become remarkable developers even without prior knowledge in software development. One of our aims as an organization is to improve the quality of software being developed, and the technical capabilities in Nigeria; this we cannot do alone, so we adopted the strategy of raising professionals who will inculcate globally accepted best practices in software development and who will go into various technical companies or even set up theirs. They are the new face and advocates of quality software development; they are our Alumni! No wonder they are having an accelerated career. Next month October 2018 will mark two years that we had our very first coding boot camp. During this period of celebration, we can’t but put these remarkable Alumni on the spotlight. We want all our Alumni to know that they are coworkers with us in making locally developed software products competitive in the global market and we appreciate them all. However, due to space constraint we can only showcase some of them as we share their stories: Mariam Adedeji, Software Developer, Software Business Solution ( July 2017 set):“ I work with S B S C( Software Business Solution Consulting) as a software developer. . The training at moat academy has given me full confidence of a skilled software engineer. After 2 years of no job after my N Y S C, I took a bold step of going for training in software development with no prior knowledge in the field. I remembered when I decided to go for it; I was still scared because I knew how difficult it was for me to pass the only borrowed course from computer science department back then in university and Mrs Abiola assured me not to worry, that I would be surprised how smooth it would go. Today I’m proud to say that I’m working in a third company as a software developer earning a 6 figures salary in a reputable organisation in just a year after my training at Moat Academy. I thank God and I thank moat academy “ Daniel Makonor, Software Engineer I I Telnet Nigeria Limited ( April 2017 set):“ Within the past 1 year I have worked in two start-ups ( Insidify Limited and Start Up Studio) and currently resumed at Telnet Nigeria Limited as a Software Engineer I I. The time spent at Moat Academy in April 2017 formed the foundation in my programming journey and helped to better understand new languages. It was a stepping stone to get rooted and adequately prepare to take up the new challenges I face daily in my current role. ” Mustapha Omotunwase, Software Developer ( Digital Lab) Fidelity Bank — April 2018 set:“ I was impressed with the learning culture which made me grounded in the fundamentals of programming as well as standards and policies to thrive and succeed in Information Technology Industry. Moat academy holds a special place in my heart. ” Fisayo Idowu, N O C Engineer Interswitch Nigeria ( April 2017 set):“ Moat academy is an excellent choice for anyone who desires to follow a career in the Software space. They have well-seasoned trainers with vast knowledge of how the industry works. Their teaching method is quite engaging and this made me to push myself to be better and achieve more than I ever thought I could. Opting for moat academy still ranks very high amongst the decisions I have made. The Impact the academy has had on my career has been massive. The work ethic, the family feel, the free consultancy” Olusiji David, Dipole Diamond. Software Engineer. ( July 2017 set):“ Learning the fundamentals of Software development in the immersive Moat academy boot-camp set me up immediately for an amazing career in technology. My career and life in general have been on an upward trajectory since then and I face a future filled endless possibilities. Thanks to Moat for providing me with that solid foundation to build on” Orolu Olajide, Head of I T Royal Coast Technologies ( April 2017)“ My time at Moat helped me with the understanding of Content Management Systems, Database analysis and the use of M V C frameworks. These skills have come in very useful in my day to day activities at my place of work” Akugbe Ode, Software Developer, Olivet Cloud Solutions Nigeria Limited:“ Before coming to Moat Academy, I had not written any code in php and my knowledge of web technologies would rank 2 or 3 on a scale of 10. After 10 weeks of intensive training I built a full fledge project team collaborative application which I called Cohort. This was only possible because of the quality of training I received from Moat Academy and the support gained from the community ( Moat Academy). The training I received from Moat Academy helped me learn industry standard, industry best practices and cutting edge technologies such as version control, code igniter php framework for building web applications. I went on to learn php Laravel web framework which most company sorted. Currently, I work at Olivet Cloud Solutions Nigeria Limited as a Software Developer in the Production department. As a software developer at Olivet Cloud Solutions, I have been involved in projects and my goal of becoming a world class developer is being realized because of the quality of training I received at Moat Academy” Afeh Araromi, Junior Developer, Business Solutions Dipole Diamond Ltd:“ The greatest from my point of view is the essential foundation I got from my training at M A. I get to see new things been done at my organization (which I am thankful for) regularly so I know my learning cannot stop. Without the M A foundation, I would not have the confidence to believe, and the courage to dream that I cannot become better at programming, and applying it as a tool to proffer tangible solutions. ” Bunmi Oluwasade. Founder, Avaley Consultings, Trainer with Google on Digital Skills For Africa programme:“ I run an ecommerce store at the moment and then I’m also a trainer with Google for the Digital Skills for Africa program. Basically, learning at Moat Academy gave me an edge and boosted my confidence in the digital marketing space, even though I didn’t pursue programming full time. The knowledge I acquired has also enabled me become independent as I run a digital consulting company too and we really cannot talk with our clients without advising them on the kind of websites to build, how it should be responsive and search engine optimized and so on. So, really the knowledge gained from Moat Academy has indeed given a headshot in my field. ” If you are thinking of accelerated career, think Moat Academy!","['Programming', 'Codingbootcamp', 'Coding', 'Developer', 'Careers']",https://medium.com/@abiolailupeju/moat-academy-celebrating-two-years-of-raising-software-developers-with-our-alumnis-stories-86fb697edcd8,0,[],0,0,abiola,F,0.7743589743589744,0.22564102564102564
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 61 — A Chingu just published a MERN-stack book!,2018-06-04 07:14:31,medium,"Chingu Weekly Vol. 61 — A Chingu just published a M E R N-stack book! Chingus getting jobs, publishing a tech book, and projects galore! Grab a beverage ☕️ 🍵 🍷 of your choice and dive in!eddyw’s book is out!!! News & Opportunities🎉 Congratulations @jprogm on getting the new dev job!!🎉 Congratulations @ A K on getting your internship at I N T E L!!🎉 Congratulations @lubo on your Web Design & Development Master’s defense!!🎉 Congratulations to @alex V on getting the full time R E M O T E software job!!🎉 Shout-out to @fancyaction who went to a Hackathon over the weekend and learned Database Implementation for that! J O B S, J O B S, J O B S, M A S T E R S, P U B L I S H I N G A B O O K! So…a Chingu just published a !?$ I N’ M E R N- S T A C K B O O K! M A S S I V E S H O U T- O U T T O eddyw! I’ve had to keep this a secret for months (which was S U P E R hard). I’m so proud of Eddy, who has been around since the early days of Chingu and is one of the most interesting humans I’ve ever met. I encourage anyone interesting in the M E R N-stack ( Mongo D B, Express, React, Node. js) to pick this gemstone up. You can grab your copy here. Cheers to these team-mates!🍻 On the weekly check-ins there is a question that asks: Is there anyone on your team who has been super helpful, kind, hard-working, etc. and deserves a shout-out? Here’s the list from last week:🔥 🔥 🔥 🔥dirkduplooy, Paul Shreeman, Rodielmj, @ Fancy Action, @ Donte, @mbrandon32 has helped to keep our team’s progress moving, Nills, Jared Shiller is doing a great job leading the way!, Lennyroy Robles, Jackhowa, ziggysauce, Nari Roh, sosodope, @fourwadsmart, @ Tim H, @ Julis, jffy, Jemimah O. and Anirudh, @javamajk, A H M A D, @is343, @ Aryan J, @vasiljevs, @milana, @fancyaction, Aryan Jabbari, @mgrienauer, Madison Crocker, Ziggysauce, Oliver in pair programming, @gabrielg has provided an inspired idea, all of them are doing great!, crisner, @ Chris Von Wilczur, Oliver, @ The Sharp Report, @ Em Estabillo, @sdbowen, @ A K( Ayush Kumar), Ahyungss, Jemimah and b lg, @ D E J I D O P E, Miguel E. , @thinktwice13, @ N I L, psongpin, Mufasa On Acid, @ansi, Marshall, Em Estabillo, Ishidor, ergofox, milos, @alex, megclaypool Welcome aboard Voyage-6 lifelong learners! Another week, another Voyage launch! Bring on the projects, bring on the perseverance, bring on the level-ups! 🚀 Shout-outs & Showcases🔥 Nerajno johnson & Lennyroy Robles brought the 🔥 during their pair-programming session last week and built a Chuck Norris Joke Machine!🔥 @soreg dropped his portfolio in #community-chat last week — check it out here!🔥 @bytenaija made this awesome Crime Map app, check it out here!🔥 @ Veronica is getting ready for Voyage-6 in this great article called Making time for coding!🔥@emsestbillo wrote an article about her first Chingu Voyage kickoff!🔥 Mohamed Khaled Yousef — Check out M K Y’s Arcade game!🔥@puritanic is up to his usual tricks with another project, this time a Travel- Agency!🔥 Oleksandr Malakhov (alexever17)and his team are building a game using Phaser. js for their Voyage project. Looks like he’s be prepping right! Check out this tutorial game her made! Overheard in Chingu To awesomeness and 5 am coffees ☕️ I reached out to a friend who was in a previous Chingu cohort to get some live practice on using Git Hub (along with V S Code and Live Share). We had a great talk with @jarrku about the nonprofit project in the news channel and we one of those who we lucky enough to help him with the nonprofit project. We managed to organize a meeting with everyone and worked on the points for Act 1 and defined what the M V P should be. Chingu of the Week This week the honors go to Oliver! From helping people outside his team with impromptu pair-programming sessions, to co-costing a live talk on Pair- Programming, to helping a member find a new team, Oliver has been on fire since Voyage-5 started! We are so lucky to have a person of Oliver’s calibre in our midst, and he’s a inspiration for the power of helping others! Quote to Go“ There are no teachers, no lectures, and there are no classes. The idea is that rather than having one person in front of the student transmitting the knowledge vertically. Each individual is going to become a source of knowledge for their collegues around them. For this, it’s a lot like when you go into the job force… When you have a question or when you come across a problem you are going to need to have the skills necessary to be able to go out and seek the solutions of your own to develop new things. To know what your problem is, and to begin developing steps and going out and searching for that information as to how you’re going to resolve the problem. Right from the start our students are learning how to do that on a daily basis with peer-to-peer learning, with project based learning. They’re confronted with a project. We give them very little information as to how to resolve that project because we want to be able to go out and experiment, to explore that environment and to come up with their own ideas rather than giving them a prewritten solution and just seeing them make that. ” Brittany Bir, C O O of school 42, heard on a podcast on education in the 21st century Until next time! 🚀","['Chingu', 'Freecodecamp', 'React', 'Codingbootcamp', 'Phaserjs']",https://medium.com/chingu/chingu-weekly-vol-61-a-chingu-just-published-a-mern-stack-book-7b177b369d3b,1,[],0,330,chance,M,0.024461428631419813,0.9755385713685801
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Node Mode – Emily Deans – Medium,2017-07-26 00:47:58,medium,"Node Mode The past two days of our introduction to back-end have been primarily focused on working with Node. js. For those not familiar, Node is an asynchronous, open-source, Java Script runtime environment. I previously thought Node was a ‘framework’, but learned today that it differs in that most frameworks actually contain their own runtime environs, and also have their own internal libraries. A notable aspect of Node is that it allows you to work with A N D run your code completely outside of the browser — a significant shift from a front-end approach, which almost exclusively focuses on browser presentation and display. In addition to brushing up on some new terminology and getting basic instruction on how to install and run Node, we jumped into a few programming exercises to practice running our code and working through error message syntax via the terminal. We were also introduced to the world of npm ( Node Package Manager), which allows you to download “packages” of other people’s code to incorporate into your own programs. Last night’s assignment involved downloading and utilizing the ‘moment’ and ‘chalk’ npms to create a very simplistic program to run in the terminal. It ended up looking like this: Program running in terminal Program code As you can see from the code above, the ‘chalk’ npm enables color change assignments to text in the terminal through very brief code additions, while ‘moment’ allows you to track and evaluate varieties of information related to time — including time zones, daylight savings considerations, duration of time broken down into a variety of increments, etc. I definitely see how npms are extremely useful resources to have on hand, as they allow you to incorporate a bunch of cool functions and features into your program without implementing a ton of extra code. Excited to continue playing around here for a bit and seeing what else I can find… Song of the Day: “ Never Been Wrong” by Waxahatchee","['JavaScript', 'Code Newbie', 'Lesbians Who Tech', 'Nodejs', 'Codingbootcamp']",https://medium.com/@emilyldeans/node-mode-479b28ce0eb1,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Oscar Clyde Foxglove,,V School: The Scam that Gives Coding Schools a Bad Name,2018-02-02 20:46:36,medium,"V School: The Scam that Gives Coding Schools a Bad Name It’s fairly common to feel skeptical when someone offers easy solutions to difficult problems. So, when coding schools first started to make an appearances within the last decade, there were many who weren’t convinced. What these schools seemed to promise was nothing less than a fast track to the kind of education that leads directly to rewarding, lucrative careers. That said, many schools are actually fulfilling on this promise. It’s estimated that in 2017, approximately 23, 000 individuals graduated from coding bootcamps, and 73% of coding bootcamp graduates report being employed in a full-time job requiring the skills learned at bootcamp, as well as an average salary increase of 64%. But while many coding schools are working hard to set themselves apart as affordable, reliable programming-education options, a few institutions seem content to just take the money and run. Consider V School. V School is a coding bootcamp located in central Utah. It offers online and in-person courses on Java Script, Python/ Django, and Front- End Web Development. And, according to V School founder Mo Reader, they also maintain a job placement rate of 100%. To reiterate, V School claims that everyone who goes through the their program gets hired with 30 days (on average). However, the numbers say otherwise. According to a recent report published by the Council on Integrity in Results Reporting ( C I R R), V School’s job placement rates are significantly lower than advertised. C I R R details that fewer than half (47. 4%) of V School graduates find full-time employment in paid, in-field positions within 90 days. And after six months, that number only climbs to 57. 9%. Even when including non-full-time, non-paid, and non-in-field positions, over a third of V School students are unable to find employment after 90 days. And that’s only scratching the surface. The report also shines a light on how few graduates V School is actually turning out. From june 2016 through December 2016, V School reported only 19 graduates (students who attended 95% of classes and completed their final projects). If only half of those students are transitioning into careers in the tech industry, that’s only about 10 people who actually end up benefiting from the V School curriculum over a six-month period. With that in mind, one has to wonder just how effective V School’s programs really are. There’s no denying that coding is a valuable career skill. According to Burning Glass, jobs that require coding skills pay on average $22, 000 more per year. Coding bootcamps can help students develop the kinds of skills that make employers sit up and take notice, but not every school is up to the task. Those who are interested in learning code have many options, and that makes choosing the right coding bootcamp all the more important. Do the research, compare the claims to the data, and find a coding school that can back up every promise it makes. After all, it’s your future. Find a coding school you can trust, and you can help ensure that future will be a bright one.","['Programming', 'Codingbootcamp', 'Development', 'Coding']",https://medium.com/@oscarclydefoxglove/v-school-the-scam-that-gives-coding-schools-a-bad-name-495e1dd2e19f,2,['V School'],1,1,oscar,M,0.0053524621325809875,0.994647537867419
Jamie Bort,"Software engineer, philomath, traveler, and bibliophile.",What I learned this week. Week 1. – Jamie Bort – Medium,2017-07-02 05:43:11,medium,"What I learned this week. Week 1. Class started on Monday. Today is Saturday. There are 22 or 23 of us in class. There are two instructors, one T A, one office admin. , and one director. All of them are friendly, knowledgable, patient, and helpful. On day one we introduced to Slack, Git Hub, and Terminal. We learned how to commit to and clone from a Git Hub repository. Which means we learned what a repository is and what it is used for. ( Later we’ll learn how to merge, fork, and do other things with Git as they become necessary. ) Terminal is promising to be a powerful tool. Once we were shown the basics we haven’t returned to learn anything new. But that’s fine. I’ll pick it up the more I use it. While Slack is a great communication tool there isn’t much to share about it here. The day ended with being given a bit of homework. Specifically reading material to study for the following day. The teaching model we’re using is a flipped classroom. ( Side note, this model R E A L L Y works for me. ) On day two we dove into creating a website with H T M L. We learned about tags, semantic markup, links to U R Ls and images both online and hosted locally. On day 3 we learned about C S S. Including selectors, attributes, fonts, and styles. Starting on day 4 we continued with C S S but started messing around with H T M L at the same time. We continued in C S S with the box model and background images. On the fifth day we continued to put it all together by introducing new tags, selectors, and methods; including forms in H T M L. Today is spent the day catching up with reading, exercises and assignments. Tomorrow I’ll dive into the weekly assignment. I am anticipating quite a challenge. But again, I am looking forward to it.","['Codingbootcamp', 'HTML', 'Education', 'Challenge', 'Development']",https://medium.com/@jamiebort/what-i-learned-this-week-week-1-29a1318a71ba,1,[],0,1,jamie,F,0.7582899308015347,0.24171006919846527
Abdoul Diallo,// Love. Learn. Code. Blog.,"As a new Ruby programmer, one of the things that must be frustrating you, border-line driving you…",2018-05-08 04:17:41,medium,"R U B Y self H E L P [ for dummies ]‘self’ got you all twisted? As a new Ruby programmer, one of the things that must be frustrating you, border-line driving you nuts (if you’re anything like me), is a four letter Ruby keyword called self. And oh, if you haven’t heard yet, ‘everything’ in Ruby is an Object! … yeah. So what in the world is ‘self’? According to the Ruby Language Docs, under the Modules & Classes section:self refers to the object that defines the current scope. self will change when entering a different method or when defining a new module. In plain english, it simply means that depending on where you are in your Ruby program, self changes. The goal of this blog post is to simplify the explanation of self such that it becomes easy to understand and follow as it changes as you move through your Ruby program. To accomplish that, we will tackle the basics and break them down into three main components. The first: 'self' outside of a class/module Initially self is set to main, an instance of the Object class that is automatically created when a Ruby program is interpreted. Here, outside of a class in the main scope, self refers to an instance of Object, called ‘main’. And it looks like this:‘self’ refers to main and self. class returns => Object‘self’ refers to main and self. class refers to an instance of Object The second: ‘self’ inside of a class or module (scope) In a class or module, self refers to the class or module itself. That’s the case when we simply define a class or module and use self between the class & end keywords. It also refers to the class itself when we define a class method using self like this def self. lil_baby end . Inside a class & a class method, ‘self’ refers to the class itself The Third: ‘self’ inside of an instance method In an instance method, self refers to an instance of the class inside of which the instance method is defined. In other words, it inherits from the class object that it gets called on. ‘self’ inside of an inside method refers to an instance of the class (it’s defined in & gets called on) In conclusion According to Flatiron School’s Module 1 lesson on self, every object is aware of itself and we can define methods in which we tell objects to operate on themselves. We do this by using the self keyword inside the body of an instance method, to refer to the very same Object the method is being called on. Hence, we have the analogy of our Ruby Objects as being alive. And this, therefore, resonates well because every Object is, quite literally, aware of itself. Duh! self itself! knows itself. Understanding the following three points give you a solid foundational understanding of self:1- self outside of a class refers to main2- self inside of a class (scope), module & class method refers to the class itself3- self inside of an instance method refers to an instance of the class‘self’ explained in the three different scopes Last but not least, bear in mind that ‘self’ always refers to the current Object. Now that you understand self, go do your thang! … References:1- https://docs. ruby-lang. org/en/2. 2. 0/syntax/modules_and_classes_rdoc. html#top2- https://www. jimmycuadra. com/posts/self-in-ruby/3- https://learn. co/tracks/web-development-immersive-2-0-module-one/object-oriented-ruby/object-s-self/self","['Programming', 'Ruby', 'Ruby on Rails', 'Self Ruby', 'Codingbootcamp']",https://medium.com/@diallo.abdoulrahime/as-a-new-ruby-programmer-one-of-the-things-that-must-be-frustrating-you-border-line-driving-you-6cc274eddcc7,0,['Flatiron School'],1,10,abdoul,M,0.0,1.0
chibueze ukaegbu,,"LearnFactory Internship: Day 25 (June 1, 2018) – LearnFactory Nigeria – Medium",2018-06-02 14:26:07,medium,"Learn Factory Internship: Day 25 ( June 1, 2018)“ Learn, continue learning. That is the only way to stay ahead. ” . . i C That smile… Lawrence took the interns on a journey through new Java Script syntax introduced with E S6/7. Today, he dealt with Arrow Functions and Destructuring. Another tough but necessary concept to digest; they swallowed hard, this particular meal will take a while to sink in. Mia familia I got this message this morning from one of the interns, and it really touched me. You never know how much you are touching lives till you are absent. I am grateful for this opportunity granted my team and I to make a difference in the life of these young ones. I have been in Lagos for the last 1 week, came to be a part of the epoch-making Techpoint Inspired 2018 event (https://inspired. techpoint. ng). It was simply mind-blowing and all shades of cool. From the dashing young chairman of God is Good Motors ( G I G M), Chidi Ajaere; to the lovely C E O of Google Nigeria, Juliet Ehimuan; to Cynthia Adaeze Chinule of Maths Afrique International, an amazing young woman challenging the status-quo of teaching Maths in local language; it was a roll-call of awesome people in the tech space. I had absolute fun. Pics from Techpoint Inspired With Dami; Wale ( Techpoint C E O) and Ifeanyi ( Lead Writer, Techpoint) But, I missed my own. And can’t wait to get back home to see them… Don’t worry babies, Daddy’s coming home :). I N T H E S P O T L I G H T In the spotlight today is Chibuike, our quiet ex-corper. Handsome corper I am Chibuike Vincent, an indigene of Enugu state and the first son of three children. I studied Computer Science at Federal Polytechnic Idah, Kogi state. My best love is my parents, who have sacrificed a whole lot to make my life better. My best food is any swallow with white soup. I am ambitious to becoming the best web developer in Africa. I am an introvert but the best person to be with when discovered. I love tech and wish to put my best in the tech world. I live in Enugu with my parents but just finished my national call ( N Y S C) here in Aba. The best thing that happened to me in Aba is that I got a new family here # Learn Factory Nigeria and will always love my new family with my life. Oh my. Why are my boys fine oo… He came a corper; he became family. This is the spirit of Learn Factory Nigeria. Well, it’s the end of the week again. Do have a blast, and I’ll be seeing you next week. i C Chief Code Smith","['JavaScript', 'Coding', 'Codingbootcamp', 'Internships', 'Learnfactorynigeria']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-25-june-1-2018-c1818f5f2f77,0,[],0,33,chibueze,M,0.0,1.0
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,Web Dev Bootcamp & Time Management – L.J. Yockey – Medium,2017-07-02 19:55:55,medium,"Web Dev Bootcamp & Time Management This past week, I’ve been working on my final project for Thinkful and building my portfolio. It seems that the closer I get to graduation, the more tasks need to be juggled. There are many different kinds of Web Development bootcamps. The program that I’m in is self-paced. I meet with my mentor, Rachel, 3 times a week and attend the occasional Q& A session. The flexibility has been great! The only issue that I had in the beginning was determining whether or not I was keeping an appropriate pace to graduate on time. Initially, I worked tirelessly on a daily basis. There was little balance in my life. I spent about 30–40 hours a week on Thinkful. Being new, I didn’t know how long it would take me to complete any particular project, so I didn’t want to take any breaks. After about a month or so, I was advised that my pace was above-average. Still, I didn’t stop. Eventually, I ended up with a decent workflow. As I’ve posted before, I work as an I. T. Technician at the Golden Nugget. Believe it or not, there’s a G I F for that! Anyway, I work 8am-4pm Monday- Friday. When I get home from work, I typically spend about 4 hours on my computer. On the weekends, I spend most of the day on my computer as well. Some of this time is spent working on projects, while other time is spent tinkering with my Linked In account or other administrative tasks on my to-do list. Speaking of to-do lists, they have been the most helpful tool in staying on track. I’ve been adding deadlines to my calendar for certain milestones in my final capstone. I have a “stretch” deadline and another deadline a few days later, in case I run into any issues ( I have to remember that I’m still new to all of this and give myself time for possible, unexpected hiccups). Trello has been an amazing tool for breaking up my projects into smaller tasks that are much easier to digest. Most importantly, I share these goals with Rachel so she can tell me if I’m being unrealistic. Sticking to a schedule makes it easier to veer off the course for a day to socialize or even just to take a break. I’ve found it very important to have balance in my day-to-day life. Having a schedule with ambitious yet reasonable deadlines helps with that balance. This upcoming week will be an exciting one. I’m building the A P I for my final Capstone using a S Q L database, attending my first-ever tech meetup, and meeting a developer from the L A area! I feel like Steph Curry after he makes a 3-pointer. Thanks for reading!","['Programming', 'Codingbootcamp', 'Coding', 'Sql', 'Web Development']",https://medium.com/@Ljyockey/web-dev-bootcamp-time-management-dc5aff11097e,0,['Dev Bootcamp'],1,6,l.j.,Unknown,Unknown,Unknown
Harry Chen,Co-founder of Altcademy,Am I suitable to code? – Altcademy – Medium,2018-08-06 09:37:23,medium,"Am I suitable to code? No. Don’t take no for an answer. Misconception #1 — you have to start learning when you’re young. Not true. Many amazing coders began coding when they attended college (so around 18 years old). You don’t have to be coding since you are ten to be good at it. A great example of a late bloomer would be Wayne Gould. He is the man responsible for popularizing the Sudoku puzzle. After retiring at age 52, Wayne started learning to code and spent six years to develop a program that can generate Sudoku puzzles in bulk. He went on to supply those puzzles to newspapers and magazines in Europe and America. Misconception #2 — you have to be great at math This is a common misconception and one that prevents a lot of people from taking the first step. Honestly, you just have to know basic maths. What is the result for 1+7? If x + 2 = 10, what’s the value of x? If you understand those two equations, you will be okay at coding for web and app development because most web and mobile applications deal with qualitative things rather than quantitative things. Unless you are pursuing data science or advanced algorithms, further understanding of mathematical theories is not required. Misconception #3—you have to quit your job Do you have to quit your job to have kids? You certainly can, but you don’t have to. Likewise, you can learn coding while working full-time. When you quit your job, you are also foregoing the monthly income that you could be earning. This is an opportunity cost and should be counted as part of your total cost. Learning part-time is less risky and allows you to learn whenever you want. If you decide to study part time, spending a few hours a week of learning can already produce great learning outcomes. The key here is you have to make those hours count. Plan out a time slot which you know you will not be interrupted by others. Misconception #4—you have to study it at a university or a college What exactly does a university course provide? A syllabus, an instructor and teaching assistants. None of the above matters unless you actually put in the time to learn. If you have passion, devotion and perseverance, nothing can stop you from learning how to code. So, do you have to learn coding at a university? Not really. There are plenty of free resources available online. Having a structured syllabus and a mentor to guide you can make your learning process much more effective and efficient. In-person and online coding bootcamps (like Altcademy) can offer a comprehensive syllabus and mentorship support while being an order of magnitude more affordable than universities. Misconception #5 — you have to be gifted Coding is a skillset learnt and acquired over time. Yes, some people find it easier than others to learn how to code. But, coding isn’t a 100 metre dash. Coding is an ultra-marathon. Focus on your own progression and improvements, and don’t compare yourself with others. Make sure you are becoming better every day. Once you have learnt the fundamental concepts and become comfortable with coding, it’s important to move forward and find a niche that you are passionate about. It could be front-end web development coupled with graphics design. It could be group chat systems or financial trading systems. It could be building tools for other fellow coders. As long as you keep learning and keep pushing yourself, you will find a place where you can shine. Find your reason to start Instead of focusing on why you are not suitable to become a coder, look for reasons on why you should learn to code. Coding is more than just a skill; it is a different paradigm on how to think. Many of the conveniences we enjoy today is the result of code and software. Facebook, Instagram, Uber, Google and Air Bnb are all powered by software. Learning to code can be one of the best decisions you make in your life. This is written by me and the team at Altcademy — an online coding bootcamp with 6, 000+ students from 88+ cities.","['Programming', 'Coding', 'Learning To Code', 'Learning', 'Codingbootcamp']",https://medium.com/altcademy/am-i-suitable-to-code-92bfe6118d7,2,[],0,102,harry,M,0.004769167110007685,0.9952308328899924
Hersh Patel,Founder of Hindsight. Bringing better context and related content to information. Research nerd.,Hiring Technical Employees as a Non-Technical Founder,2018-03-20 17:01:35,medium,"Hiring Technical Employees as a Non- Technical Founder About a year ago, I decided I wanted to build a software product to improve research across the web. It was a problem that persisted in my financial career. Yes, my financial career. I wanted to build a software product with no software development expertise. A tall order. But possible. I want to share with others in a similar position the steps I took and the resources I used to assemble a technical team that could breath life to my idea. The one thing every software developer despises is being managed by an individual who knows N O T H I N G about coding. If you don’t know what it takes to develop software, how will you be able to effectively manage a technical team. Therefore, if you are a startup-founder who is building a software product and do not have a technical co-founder on board, learn how to code! It will enable you to better direct your technical team, understand what is required from your technical team, and outline reasonable expectations. And even sometimes (more often than you think), get your hands dirty and develop some features for your product. There are a few ways to efficiently learn how to code. The time you spend and resources you utilize depends on how much you want to learn. I went through Flatiron School, a four month full-time software development program, that taught me not only the basics of coding but gave me the skills to develop programs myself. However, it is a time and capital investment ($15, 000 for the immersive four-month program). Flatiron School also offers a much more flexible and cheaper online program, which costs $1, 500 a month. There are also other bootcamps ( General Assembly, Full Stack Academy, Hack Reactor), so check them out and see which one is the best fit for you. Finally, take advantage of online resources such as Code Academy and Udemy, but I recommend in-person programs as the best bang for your buck (blog post on Development Bootcamps forthcoming). You may be asking, if I spent so much time learning how to code, why do I still need to hire software developers? Even though you may be riding high on the confidence of deploying your first full-stack application, it takes Y E A R S of experience to be able to effectively deploy production-ready software for your market. Plus, who will take care of business development, financials, human resources, marketing, etc. ? Therefore I strongly suggest you bring on a technical co-founder or a technical team to lead the technical development of your product. As Hindsight depends on machine learning and data science algorithms, I needed a data scientist and a software developer to execute my vision. There were two options: (i) hire one individual who could do both or (ii) hire an individual for each role. I looked into both options but ended up hiring an individual for each role. Here are the resources I used. Your Network: Maximize your network. Sourcing from within your network ensures that you are vetting individuals you personally can vouch for or someone you trust can vouch for. Start here! Angel List: Angel List is an online social platform for startups so it naturally is the best online platform to find your technical employees. All candidates on Angel List are open to startup opportunities B U T not all are open to cofounder roles or early stage startup roles. Thankfully, candidates explicitly state what roles they are open to so that discovery is done for you. You will generate the most meaningful discussions with the highest volume of candidates using Angel List but the quality of talent varies. Regardless, this a must-use online hiring platform for early stage technical positions. Vettery: Vettery is an online hiring platform specifically for technical candidates. Vettery hands down has the highest quality talent on the web as it has a strong vetting process for all candidates listed on the website. However, most candidates are looking for senior development roles and are expensive hires. Moreover, Vettery takes a cut of the first year cash salary so that is an additional cost you need to account for. Bottom line is that Vettery has the best talent, but it comes at a price. For a startup founder, it is worth checking out Vettery if you can afford it. Meetups: There are many Meetups ( Crowded Tech Job Meetup) organized to connect software developers with employers. However, most of the candidates here are not looking for startup positions, or are junior developers fresh out of bootcamps who do not have the experience to execute in an early stage startup. Check some out but do not expect much. As a non-technical founder, assembling a technical team is a daunting and crucial task for any software startup. However, it is not impossible. I believe it is important for non-technical founders to know the fundamentals of coding not only so that they can manage a technical team but also better understand their product. Once a technical founder has a base line skillset to understand software development and the requirements needed to develop the product, he can then use his network or online/in-person resources to find the right technical talent to join the team. Just because you do not know code does not mean you cannot successfully start a software company. It is just one of the many problems you will solve your in your path to success. Good luck! Originally published at medium. com on March 20, 2018.","['Startup', 'Codingbootcamp', 'Technical Cofounder', 'Coding', 'Hiring For Startup']",https://medium.com/journalism-innovation/hiring-technical-employees-as-a-non-technical-founder-51e053407674,0,"['Flatiron School', 'General Assembly', 'Hack Reactor']",3,0,hersh,M,0.0,1.0
Matthew Burfield,Front-End JavaScript Developer,Here’s how I’m 100% confident my voyage 4 project will get finished,2018-03-21 22:48:30,medium,"Here’s how I’m 100% confident my Voyage 4 project will get finished“ A long-exposure shot of a freeway leading into the city with red and yellow light trails” by Joey Kyber on Unsplash Since we are just under a month away from the finishing date of Voyage 4, I thought it could be a good idea to write an article on why I’m so confident my team is going to finish. And how you can be too. The truth is, I’ve had this confidence from day 0. Of course, as a team we’ve had the usual set backs Our project manager had to leave the team just two weeks ago due to personal reasons. All of our team are part-timers with full time jobs, so sometimes we go days without communication. Or sometimes we won’t be able to contribute anything for a week due to external circumstances. We have timezone issues — so we are rarely online at the same time. The first time we were all online at the same time was 3 weeks into the voyage! This was also our first team meeting (at midnight my time) We can’t even have voice/video meetings due to poor internet connectivity issues, so everything needs to be done in chat at snails pace! And on top of all that, we are building our app in using a framework I have never even used before!! So, you might be wondering why — given all of these reasons for failure that I’m so confident we can finish our project. And how have I had this confidence since day 0, before I even knew my team of any of these issues we’d be facing? Before all of these setbacks. Quite simply, I’ve committed to finishing. There are no excuses. There are no external forces that can stop me. Now this isn’t me ripping on me team mates. My team mates are awesome, and they’re committed just like me, we’ve been able to find a groove these last couple of weeks and are working well together. My only point is that when you commit yourself to finishing your project, truely commit, then nothing can stop you. Now you might be asking yourself But what if I don’t know how to do X Y Z by myself? Definitely get help from your team mates when you can — you’re all in this together after all. But don’t forget that Chingu is not just groups of individual teams building separate projects at the same time. Chingu is a community of developers all willing to help, and learning together. I like to think of it like we’re all in the same team, so don’t be afraid to ask! :) I have committed myself to finishing this project, all other factors don’t matter. Don’t worry about what’s out of your control, you can’t do anything about it anyway so it’s just wasted energy. Focus on what you can control. These are some things I can control: I can dedicate one hour every second morning to working on my project. I can leave as many positive messages as I can in my teams group chat, for them to read when they next come online. I can be an active participant in the chingu slack channels so we can all continue to learn and get better. I can commit to finishing this voyage 4 project! So commit to finishing and I’ll see you at the finish line. You got this!","['Life Lessons', 'Chingu', 'Codingbootcamp', 'Determination', 'Web Development']",https://medium.com/chingu/heres-how-i-m-100-confident-my-voyage-4-project-will-get-finished-b1d0a380fd86,0,[],0,149,matthew,M,0.0034518646899117703,0.9965481353100882
chibueze ukaegbu,,LearnFactory Internship: Day 9 – LearnFactory Nigeria – Medium,2018-05-12 04:08:50,medium,"Learn Factory Internship: Day 9 Live to be satisfied… Give of yourself, and you will get abundance in return. Concentration that only Code can give… Let’s cut to the chase. E T’s ( Eric Thomas) sledge hammer was out, and wow, did he hit us good today. Episode 4 titled “ G E T R I C H O R D I E T R Y I N G” posed the big question: “ What am I living for? A M I L I V I N G F O R A C U R R E N C Y O R A L E G A C Y?”. His proposed path for wealth is a strange formula: G R D T = D G + P G + G G, which are also 3 principles:#1 — D G ( D I S C O V E R Y O U R G I F T: Stop being a copycat, be an original). #2 — P G ( P E R F E C T Y O U R G I F T: knowing your gift is not enough, hone it to perfection. Go beyond average to Good then Great and then Phenomenal). #3 — G G ( G I V E Y O U R G I F T A W A Y: share your gift with the world, build others up. You reap what you sow; so by sharing your gift, you will get value in return). E T closed with a profound quote: “ Deep down we know this one thing: What matters in this life is more than winning for ourselves. What matters in this life is helping others win, even if it means slowing down and changing our course. ” Matthew, a man in whom I have delight Today I don’t have much to say: with our deadline fast approaching, the interns are building feverishly. Guided by Matthew, they built the home page of a newspaper website. I will dedicate the rest of today and tomorrow to showcase some of their works: the good, the interesting and the absolutely beautiful. From Wednesday to Friday, as part of the classwork and take home assignments, each person is required to build 4 things: A Contact us page, Profile page, Newspaper homepage and Konga (from Friday last week). I am impressed with what how much they have grown, especially with the deadline as a fire on their tail. much kudos to Matthew and Isaac, they have been beyond wonderful Our call, our joy… Code!!! Without further ado, here are the ladies and their works: From Left: Bernadine, Shalom, Grace, Chinenye, Zoe Asuquo (behind), and L F’s own Zoe1. Shalom Matthew From top left: Contact us page, Profile page, Konga (incomplete) , Newspaper homepage2. Bernadine Eze From top left: Newspaper homepage, Profile page, Contact Us, Konga (incomplete)3. Zoe Asuquo From top left: Contact page, Konga (incomplete), Profile Page, Newspaper page4. Grace Onoja From left: Contact page, Newspaper homepage, Profile Page5. Chinenye Etunmu From top left: Contact us, Konga, Profile, Newspaper Then, 2 of the gentlemen (both of who joined us on Monday as replacements for those dropped)…6. Chidera Ugwuanyi From left: Profile page, Contact us page, Newspaper page7. Ekene Anthony From top left: Contact us, Konga (incomplete), Profile, Newspaper Give of yourself, and you will get abundance in return. L E A V E A L E G A C Y A N D D O N’ T W O R R Y A B O U T A C U R R E N C Y. Stay tuned. I’ll see you tomorrow. i C Chief Code Smith","['Design', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-9-a6034f26afc6,0,[],0,114,chibueze,M,0.0,1.0
Holly Valenty,Full-Stack Developer and Tech Education Enthusiast.,Seeing-the-Finish-Line Reflections – HollsMarie – Medium,2018-04-05 03:12:57,medium,"Seeing-the- Finish- Line Reflections First things first, I passed my C# exam on the first try, and earned a “red-belt”!! Real time footage of me finding out I passed. Ok. That’s done. I’ve been doing some reflecting this week. Maybe it’s the full moon, maybe its mercury in retrograde, or maybe it’s the fact that I woke up today and it was 26 degrees out again. I don’t know. But here is what I do know. 78 days ago I did not know how to code. Maybe I knew a sliver of H T M L and C S S, but seeing code on another person’s text editor looked like hieroglyphics to me. While working at The Iron Yard I would try to follow along with our instructor’s “ Introduction to code” crash courses (shout out to Tasty Code) and only get as far as downloading a text editor before getting totally lost and giving up. Please note: I kept that text editor downloaded on my computer for a long time, the way a 6 year old girl carries an empty purse. Yet, here we are with 30 days left at Coding Dojo. In 30 days, I will have graduated a coding bootcamp and completed something I never thought I could, or would, do. This journey has been a whirlwind, and I can’t believe it’s almost over. I don’t want it to be almost over. The Saturday before my program started, I was sitting on the floor of my Air B N B, while my mom sat quietly reading a book on the uncomfortable futon (where I’m also writing this from now. Still uncomfortable). I remember trying to shove knowledge into my brain so I could be as prepared as possible for Monday, and thinking “ Holy sh*t, what did I get myself into?”. I truly thought I would never be able to comprehend and understand the material I was trying to get acquainted with. On day one of class, my heart was in my throat and I thought I was going to vomit on the bus. I sat, clutching my phone in my hand, texting my sisters to try and calm down. I was so nervous for what I was about to begin. I thought there was no way I could make it out alive on the other side. I thought that I was in way over my head. I thought everyone in that room on day one would see right through me. I thought they would all know I didn’t belong there and shouldn’t be there, or that I didn’t know what I was talking about. I thought they were all smarter than me, or more skilled than me. I thought they all knew more than I did. I thought they all prepared better than me. By day three, I was just praying I would at least make it through the whole program and not have to return home with my tail between my legs, a code-school drop out. But it did get better. Not easier, but better. I realized we all had no idea what was happening, and almost all of us were starting from the same point. We got acclimated. We all became friends. We all relied on each other. I guess that’s why this all feels so surreal. I can’t believe how far we have all come and how quickly the time has passed. So in 22 days, I will graduate. And in 30, I’ll be done with the program as a whole. I’ll be a full-stack Junior Developer in three different stacks. A month to me used to seem like the longest time in the world to have keeping me from the end of the school year, but when I realize that I only have one month left of this program, I want to take time back and relive it all over again, even the crying and the broken code. Ok, maybe not the crying, but I do want to do it all one more time. Whatever your challenge is, soak up the experience. When you’re in the hard stuff, and in the thick of it, remember that you’re solving your problems, your working on your happiness, and you’re only improving and bettering your situation. And If I have any advice for anyone going through, or thinking of going through a program like this, it would be the following: You’re not behind. Everyone is starting from the same point. You can do this. Lean on your cohort. Lean on your peers. Help each other, and encourage each other. Remember to close your computer and go the f*ck to sleep. In other Life-in- Chicago news: It snowed today. It’s April and it freaking snowed. There’s supposed to be more snow this week. We just started our final stack, M E A N, and it’s known as the hardest one yet. Excellent. Also — would you be interested in reading more about my journey post-code school? If so let me know!2 stacks down. Check me out.","['Coding', 'Codingbootcamp', 'C Programming', 'Chicago', 'Full Stack']",https://medium.com/hollsmarie/seeing-the-finish-line-e4f53e62dc0c,1,"['The Iron Yard', 'Coding Dojo']",2,318,holly,F,0.9923533354849922,0.00764666451500782
Miha Fabjan,Creating Ninjas of the 21st Century at SmartNinja,6 Reasons Why You Should Learn How To Code – SmartNinja – Medium,2018-08-09 09:05:27,medium,"6 Reasons Why You Should Learn How To Code Did you ever wish you would learn to code so you would be able to quit a lame job you have and start working in some cool tech startup? You know, the one that allows their employees to work remotely and pays them very well? All the co-workers look so amazing and they all seem to have fun while working there. Too good to be true? It might be. But here are the 6 reasons why you really should learn how to code and change your life for the better. You Can Quit Your Job Did you know that the average person spends 90. 000 hours of their life working? Do you also know that 80% of people say that don’t like their job? It’s true. Are you one of them? So what stops you from finding a better job? With being an adult comes responsibility. You might have a family and mortgage to pay so a steady income is an important factor to keep your life standard. But there is another way. What if you have a skill that companies fight for? One of those skills is coding. With that skill, you will be able to find a job that fits your “perfect job” dream. Or maybe you’d want to work independently, as a freelancer. So you can choose projects that you like and excite you. Coding Skills == Freedom. You Will Make More Money The perfect job is not all about the money. Instead, it’s day to day excitement and challenges that fulfill your life with a rewarding feeling. But making a decent salary is a big factor for a lot of people. With money, you are able to afford a lifestyle you want. You are able to take a vacation at places you dreamed about since you were a little kid. Or invest in a hobby that fulfills you. Let it be painting, golfing or street racing. Learning how to code will help you find a job you will love and still get paid a well. Coding already is one of the “hottest” skills companies are looking for. Invest in learning how to code so you can invest in yourself. You Can Work Remotely A lot of people imagine that working remotely is sitting on a beach, with a cocktail and a laptop, right? Well, it’s not far from the truth. There are hundreds of companies who are looking for remote workers, who know how to code, to work for them. You don’t even need to be a coder. You can be a digital marketer, project manager or any other occupation where coding skills are a plus. Even if you don’t do coding at your job, knowing how to code is still important because it helps you communicate better with coders, understand their needs and set the right expectations. Working remotely will give you a sense of freedom that 99% of people can only dream about. Working from amazing parts of the world can be exciting and rewarding for you. You Will Meet Amazing People Ever since the birth of the internet, the innovation was never growing at such a fast pace. Talking about artificial intelligence, self-driving cars or taking trips to Mars. This would never be possible without programmers and entrepreneurs who are eager to invent the future. If you will have skills like coding, you will be able to work with amazing people that inspire you about the future. People who are excited and have a positive mindset. Work with a team of people on challenges that help future generations live better. There’s nothing more exciting than that. You Can Do Side Projects Do you have an idea for a side project? Knowing how to code helps you turn ideas into reality. With understanding how tech works you will find new ideas all the time. But this time you will be able to turn them into reality. Maybe it’s only a website for your aunt’s hairdressing business or a new Android app that helps older people meet for a round of cross-puzzle marathon. The sky is the limit. Maybe one of your side projects even picks-up and you can start your own company. This opportunity could never happen without first learning how to code. You Will Have Fun Learning new things will become part of your daily life. In the tech world, new and interesting stuff is rolling out every day. But a little challenge now and then is good. Learning new stuff will become exciting and fun. Do you remember that feeling after you spend 3 hours of trying to understand something and then you suddenly figure it out? That’s what this is! You were not put on Earth to do your 9–5 and wait for your retirement. Like it or not, you will spend the majority of your life working. So if you are not happy with your current job, why not trying something different? I think that coding might be just the right thing to try it out. So where should you start? Online or in-person courses? Did you like this blog post? Please give us a clap (or an applause) on this article on Medium and share it with friends/followers. For more blog posts and news about Smart Ninja subscribe to our Medium channel!","['Coding', 'Programming', 'Codingbootcamp', 'Remote Working', 'Tech']",https://medium.com/smartninja/6-reasons-why-you-should-learn-how-to-code-f6605c64023a,1,[],0,6,miha,F,1.0,0.0
Shaurice Pearson,I am a Front-end Developer with aspiring determination to find the right fit and culture.,Well…. A Week off of Coding Bootcamp Kept Me Sane… – Shaurice Pearson – Medium,2017-01-04 16:30:43,medium,"Well…. A Week off of Coding Bootcamp Kept Me Sane… This has been an emotional rollercoaster for me and I knew being a single mother to a three year old that I would have my own share of uphill battles from the beginning. . I have hysterically laughed, laughed under pressure, even cried covering my face with my laptop but I have been lucky enough to have a support system help me stay on track and finish this short term goal that helps in the long run. . So it was great that I found out we were getting a week long break for the holidays(thought we were just getting a couple days. . ) So today is the second day back from our holiday vacation, which lasted about a little over a week. . I have realized that I have come pretty far from where I started on the first day of class. . Although I still beat myself up because I have always been much harder on myself than I should. But having this week long vacation kept me sane. . I was able to meet up with a couple classmates and catch up on a couple assignments(but not all of them); I was able to actually sit down with my son and play a couple rounds of Star Wars: Battle Front and enjoy the time with him(because I feel like he grew up in the few weeks I have been in class;) I was able to(somehow) get a couple hours of pay at my job that somehow manages to keep me on the payroll. . ( T H A N K Y O U!!) I could sit down and have conversations with my family and not worry about homework the next day. . I was able to catch up on a show E V E R Y O N E else was talking about( This Is Us. . ) I found out that I was 2 weeks late on Alan Thicke passing away. . That’s when I knew I was in a coding bubble. . I love coding and being here at the bootcamp but it goes to show you that that you do N E E D a S E R I O U S dedication to learning the material because I also found out that it’ll be a couple years before I feel I am ready to take on a remote job with programming. . Life happens, but being a single mother, life happens M O R E and it’s a real skill learning to balance life and work that I have to improve on, but the daily sacrifices right now…. seem to be worth it for my son’s future. .","['Coding', 'Programming', 'Coding Bootcamps', 'Bootcamp', 'The Iron Yard']",https://medium.com/@shauricenicole/well-a-week-off-of-coding-bootcamp-kept-me-sane-8ba8c891c648,0,[],0,0,shaurice,F,1.0,0.0
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),More rails models and relationships – My Coding Journey – Medium,2017-07-07 21:38:44,medium,"More rails models and relationships Ruby/ Rails Day 5 Today we went deeper into Rails Models and relationships/foreign keys in those models. Rails offers some really cool built in methods to deal with foreign keys. You can just add a method like belongs_to in the model class and creating new instances with those foreign keys becomes super easy. There are lots of other great methods but I’ll leave it at that, for now. Today’s algorithms were the Radix and Insertion Sorts. Unfortunately I missed the beginning so I hope to look into those at some point. In other news, my beta portfolio website is up at leibelhecht. com, and I hope to write a post about that project soon. Have a good weekend everyone, see you next week!","['Ruby', 'Ruby on Rails', 'Algorithms', 'Coding', 'Codingbootcamp']",https://medium.com/my-coding-dojo-experience/more-rails-models-and-relationships-aa32ac6ddb8,0,[],0,0,leibel,Unknown,Unknown,Unknown
Björn Schmidtke,"Björn is an Entrepreneur, Web Developer and AI expert. Next to co-founding the Agency Penguin Digital, Björn is teaching coding to kids.",Virtual Box — fixing all the errors – Penguin Digital – Medium,2018-08-29 09:51:17,medium,"Virtual Box — fixing all the errors Lately, we create a lot of events to learn how to code. For these bootcamps we use a Virtual Box ( V B) Image ( Ubuntu), where we preinstall a bunch of tools and make sure that everyone in the course has the same environment. Everytime we distribute the image there are a bunch of problems occurring once we ask the students to import and start the machines. Since it’s a handful of problems that occur over and over again, it makes sence to write a post for future reference and also to share this knowledge among other instructors. Especially given that some of those errors are not self explanatory and very tricky to google. So, here we go:(1) Network Adapter does not exist. Problem: When starting a machine, an error happens: “ Network Interface not found”. Reason: If you distribute an image that is configured to use a custom “ Host-only Adapter”, there might be a problem that this network interface is not automatically imported. Solution: Go to “ Global Tools”, create a new “ Host-only Adapter” (press “ Create”). Go to the Machine “ Settings” — “ Network” and “ Adapter 1” or 2, … wherever the problem is. Press “ O K”. Now this problem is resolved. (2) Virtual Box on Mac throws en error with talking about “ Kernel Drivers” Problem: Starting a machine in Virtual Box on Mac throws an error “ Kernel Drivers not Installed” (or simmilar). Reason: During the V B installation, you need to grant a special permission. The only time the option shows is during the installation process and you cannot fix it afterwards. Solution: Uninstall Virtual Box ( Applications, right click, remove); Empty Trash; Unmount the installation image; restart; install Virtual Box again. During the installation: Open “ System Preferences”-“ Security & Privacy”-” General”. There will be a message to allow apps from Oracle… press allow as soon as it shows up there. (3) 64bit error on Lenovo and H P Laptops Problem: When starting a machine, an error message shows saying something like“ Cannot run 64 bit O S” or “ Virtualization error”. Reason: Those laptops come with disabled virtualization settings per default. Solution: Go into the Bios ( Restart and press during start: < Enter> on Lenovo / < F10> on H P). In the Bios you have to find a configuration to “ Enable Virtualization” (google if you don’t find it). Save and Exit. Now it should work. B T W: Lenovo Yoga models require to press < F N+ F2> to enter Bios. (4) Black screen with blinking cursour Problem: When starting the machine it seems to start (or not) but after some time stops and shows a blinking cursor. Reason: We are not sure yet. Solution: For us it worked best: First make sure 64bit is enabled in the Bios (see above). Afterwards reinstall Virtual Box and download the image again. Make sure to delete the whole image and everything related to it. Also make sure that the V R A M setting has more at least 24 M B allocated. We hope that helps. If you encounter more problems during your camps, post a comment! This post was made during the S H S G Summer School Coding Bootcamp in St. Gallen, Switzerland by virtue of the Penguin Academy, an organization that supports and organizes coding events all around the world. 👩‍💻👨‍💻🐧","['Linux', 'Virtualbox', 'Codingbootcamp', 'Switzerland', 'Coding']",https://medium.com/penguin-digital/virtual-box-fixing-all-the-errors-395255514371,0,[],0,5,björn,Unknown,Unknown,Unknown
Simon James Brady,,"Stumbles, Setbacks, and Successes – Simon James Brady – Medium",2017-10-05 03:00:06,medium,"Stumbles, Setbacks, and Successes Our T D D project continues Final projects are generally the culmination of days, weeks, months, or even years of effort, and are nigh impossible to navigate entirely smoothly. Our T D D focused web app is certainly no exception. The past two days have been fraught with setbacks, bugs, and breaks in our code as we attempted to integrate a separate front and back end. Our workflow stalled as, due to the nature of Action Cable, both the frontend and backend needed to be functional and ‘talkative’, so to speak. The backend generates a channel and listens for a reciprocating response from the frontend in order to generate the direct connection. If one side fails, it becomes impossible to test functionality. Further, the manner in which we were able to ‘grab’ the code from the text boxes changed, necessitating an overhaul of our frontend. Once we overcame this obstacle, we were faced with issues regarding security. The nature of our application allows for the creation of functioning code files, necessitating going back through each line to ensure our work was properly sanitized. These are but a few of the many bugs and errors that we rooted out and eliminated, but the emotional toll was surprising. Perhaps it is in contrast to the relatively simple development of our minimally viable product in the days prior, where just about everything functioned as we intended from the get go. It was thus difficult to be met with error after error when attempting to replicate our past successes. Still yet, we overcame. Our project is entering into its final days as our Friday deadline approaches. Our back and frontends are at long last linked, and our code once again functions. Disasters have been averted or confronted at every turn and our product is all the stronger for it. As ever, onwards and upwards.","['JavaScript', 'Tdd', 'Codingbootcamp', 'Final Project', 'React']",https://medium.com/@simonjamesbrady/stumbles-setbacks-and-successes-d8fbf78edbd7,0,[],0,7,simon,M,0.002634710181879993,0.99736528981812
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,Bootstrap is My New Buddy. Day Three at Computer Programming Bootcamp.,2017-08-03 16:03:11,medium,"Bootstrap is My New Buddy. Day Three at Computer Programming Bootcamp. Today, we became familiar with Bootstrap (which is awesome! Thanks twitter!), and were introduced to Java Script. Cool. But, for a second, I wanna get a little … #meta. I’m enjoying this. And, by “this”, I mean, “school”. I can’t guarantee after three whole days that I know now that I’ll love coding as a profession (though, I suspect I will), but I can say as a fact is that I am enjoying school. And that’s a # B F D! Knowing that I am going to enjoy my working hours for the next few months is a pleasure to look forward to. But, more significantly personally, it’s a gigantic departure from my previous life. It wasn’t long ago that I had dreaded the thought that I was going to have to merely tolerate my 9–5s. Not because of my job really, but because of my own dissatisfaction with it. I think that’s a sense shared by a lot of working people out there. Just having something to look forward to on a day-to-day basis is refreshing. In fact, it’s more of a surprise than it should be, really. Like, this feeling should be normal. Right? But, in any case, for the next several weeks at least, I’ll be happy. And that’s cool. I also do legitimately feel like I am on the cusp of something big. Big, personally. At least. The primary language taught at the Redwood Code Academy is Javascript (and then C# within the . Net framework during the latter half of the course), so the work we began this afternoon was preparation for the material we’ll be covering for the next many weeks. I can at least now write working If/ Else statements Which, as a former law school applicant, got me thinking: There has to be an opportunity to hack L S A T logic games with a Javascript app. Wonder if L S A C provides bonus point for thinking outside of the box?? Continue to days four and five H E R E. I’m interested in knowing what questions that the readers of this bootcamp blog may have. Is there anything specifically that you would like to know about my experience? If you are a prospective student, are there any questions that I may be able to answer that could address your concerns? Any suggestions for the blog? Hit me up. Email: sbogucki @ mail. usf. edu.","['Tech', 'Coding', 'Codingbootcamp', 'Programming', 'Software Development']",https://medium.com/@sbogucki12/bootstrap-is-my-new-buddy-day-three-at-computer-programming-bootcamp-d1a814d40258,0,['Redwood Code Academy'],1,12,steve,M,0.0037574028300791295,0.9962425971699209
Cassy Myers,Web Developer. Traveler. Self-declared brownie addict.,How to Prepare for a Programming Bootcamp – Cassy Myers – Medium,2018-05-12 01:45:37,medium,"How to Prepare for a Programming Bootcamp There’s nothing less fun than showing up unprepared for school or a social function, especially when said school program is thousands of dollars of your own hard-earned money. I’ve been waist-deep in programming bootcamp preparation for months, trying to focus my brain, slow my pulse and keep my stress level low enough that my hair stops falling out. ( Kidding, this mane is flawless. ) I’ve finally started my course, which means that I’ve prepared as much as I could…. up to the last second, folks. My brain is literally mush. I’ve got notebooks full of scribbles and a hard drive packed with downloaded books and lectures. Here’s how I prepared for my programming bootcamp: There’s tons of online resources meant to prepare you for the basics of computer programming. Though I spent over 300 hours preparing, you by no means have to spend this much time, especially if you have any familiarity with web design or programming in general. I always take over-preparation to the extreme. I compiled a list of all of the preparation work I raked through, as well as a rating of how useful it was overall to my understanding. ( And here’s more information about how I chose my bootcamp) Now that I’ve finished with the bootcamp, I have a better grasp on how useful each piece was to my overall understanding of the overall online environment. Please see below: Sometimes the prepwork isn’t so difficult… Primary Focuses: Full Stack Whether or not you know you are going to focus on front end or back end, you should have a basic grasp of both and how they integrate. You don’t have to dive deep into front-end language if you know you want to work with database tech, however, you should understand how users are able to interact with the database. Similarly, even if you know you want to be a Web Designer, you should still have a basic understanding of the logic that goes into back-end languages, how authentication works, and other server-side integrations so that you are able to understand how the code you write fits in with the larger picture. I’ve broken down the resources by language and by which side they focus on for your convenience: Front End: Client-side language This is a creatives’ paradise: Animations, moving parts, beautiful fonts and colors galore! While H T M L and C S S are relatively easy, their behemoth of a step-brother, Javascript, took me considerably longer to grasp to the full potential that I use it today. If there was one thing that I wished I focused on more for my programming bootcamp preparation, its learning Javascript syntax. Its a powerful tool, and you can create entire websites using J S alone, so I highly recommend spending some time studying vanilla javascript before moving on to the additional features on top of Javascript. Check out these free resources to help solidify your understanding of the inter-webs: Code Cademy: Free resources with H T M L, C S S, S C S S/ Sa S S, Javascript, j Query (almost obsolete) W3 Schools: easy examples using H T M L/ C S S and the like E Dx Courses: a plethora of information (all fo’ free! with classes ranging from basic computer knowledge to advanced A I classes. Super neat!) C S S Flex Box Frog Game: Super useful game (feel like a kid for a bit!) that will help you understand how flexboxes work, which is how you can create responsive websites C S S Grid Garden: Easy way to learn about the C S S grid through another game! Free Code Camp Youtube: I cannot recommend Free Code Camp’s Javascript channel enough. Its the best resource I have found. Code Pen: Inspiration and code snippets from designers You Dont Know J S: A wonderful book explaining the ins and outs of Javascript. Free online on Github Eloquent J S: Another in-depth book on Javascript Back End: Your programming bread and butter In my programming bootcamp preparation, I actually found these resources to have more of a “flow”, they were easier to see where to start, what to learn when, and how each piece fit together, whereas frontend is a bit more messy and creative. Ruby stole my heart. In comparison to other older, clunkier languages, theres nothing easier than the grammar-free syntax, programmer-first mentality of the language. No hours stressed out over an unclosed parenthesis…no grammar so complex it makes your eyes cross. Just easy, almost-can-read-as-english, Ruby. Here are my favorite resources: Codecademy: Great tool for learning Ruby (and Javascript, although I felt there are better options available, to be frank. They lost me when switching from older legacy syntax to newer versions. I felt like classes were rushed and better off taken multiple times in order to grasp the meaning) Free Code Camp: I can’t recommend this coding website enough. Free, intuitive, and H A V E I M E N T I O N E D T H E I R Y O U T U B E C H A N N E L S? Eloquent Ruby: A great read on the ins and outs of the language. I used this in conjunction with videos and tutorials Odin Project: Tutorials from Frontend to Back End. Learn as you go. A fabulous resource for those that learn best hands-on. Zen Ruby: Exhaustive blog all about Ruby. Great resource to start from the very beginning M Y S Q L: A great resource to learn all about M Y S Q L, a relational database you’ll more than likely use. Ruby on Rails Tutorial: A great resource to help you learn how to use Rails, the amazing system built on top of Ruby Rails for Zombies Redux: Whats better than learning through games? Um, zombie games. Duh. Railsfor Zombies…… And M O R E because…. Zombies. While this is not an exhaustive list of all the resources I used, I feel it represents the bulk of the information I consumed before starting this journey. I hope it helps you on your path towards web development and software engineering. Programming bootcamp preparation is no joke. I watched others in my course fall behind because they didn’t finish the bare minimum prep work before starting the course. Don’t be one of them! The more times you see a concept, the higher the likelihood of it being confirmed in your long-term memory. Read, read, read…. ladies and gents. For anyone interested, the program that I took (and will recommend- Blog Post coming soon!) is: Le Wagon Bali How I Prepared For my Programming Bootcamp was last modified: May 11th, 2018 by Cassy Originally published at awaywestray. com on May 12, 2018.","['Programming', 'Technology', 'Information Technology', 'Coding', 'Codingbootcamp']",https://medium.com/@cassymyers/how-to-prepare-for-a-programming-bootcamp-38ff5663ace,0,[],0,0,cassy,F,1.0,0.0
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 11 — (08) – Mike Brave – Medium,2018-08-31 04:33:26,medium,"42 Piscine Day 11 — (08) Edit: This is part of a series that culminated here, Next post. Previous post. Today most of us are prepping for the next exam, I started to as well and I’m glad I did as it showed me which foundational knowledge I was lacking in. I ended up spending most of the day understanding pointers more thoroughly and also understanding argc/argv. With those a little more understood I’m a lot more prepared, I’ll keep studying for a few hours, and again in the morning. I don’t expect I’ll do as well on this test as the last one, this last week really kicked my butt I’ve felt behind the whole time. Everyone I talk to either is keeping up fine or is so far behind that to them I seem like I’m way ahead, there doesn’t seem to be much of a middle ground where I’m at, or at least it feels that way. I’ve barely looked at day07 due tonight, or day08 due tomorrow, day09 is also due tomorrow before the test. I’m not sure if they are going to get done or not. I just want to understand this crap, it’s almost pissing me off not understanding. A warning about day09, you have to sign up for each assignment individually, each is released one an hour, to get decent credit for the assignment you have to do more than half, which is about 15 assignments. They are small assignments and you can pick and choose which to do, so in a way it’s easy points, but the timing is awful and I think that’s by design. My friend who was thinking about leaving had seemed to pretty well decide to go, but then sat down at a computer and started working on figuring things out again, all I did was smile, nothing needed to be said, I was proud of her for trying. It reminded me of how sometimes I’m better with women after they have initially rejected me because now I’m no longer holding myself to a standard making me awkward, perhaps by allowing herself to have already failed she is now free to succeed by no longer living under the pressure and strain of needing to. Probably I’m reading too much into this. We had another study session tonight, the girl that was kind of in charge arranged for one of our classmates that really knows his stuff to come down and explain some things to us (pointers mostly) and I was grateful, but it was interesting to see him have little patience with the people he was teaching. Which is fair, he is as stressed as we all are and taking time to help with something he already understands. Ironically one of the other girls who sort of rubs me the wrong way was actually a great teacher, but still bugged the hell out of me. I’m not sure what it is about her, I think it has to do with a sort of patronizing tone, but I can’t quite place it. The girl that put it together got doughnuts for everyone too, a really nice gesture. I’m not quite sure why she’s trying so hard to put these together as she was barely there and didn’t stay long at all. I’m curious as to the motivation is all, not ungrateful. I felt more isolated today, everyone was sort of already talking to someone else and I didn’t really want to interrupt. I know most of these people are friends or at least know me by name acquaintances, but it still sort of felt like intruding today. I still did talk to people mind you, just not as many as I would have liked to or should have. I’m still running into people I’ve not met before, and I’m not sure how that’s happening, I’ve been fairly social, I wander around, I talk to people and yet it sometimes feels like when a new character is introduced on a sitcom. Suddenly a new person who really was there the whole time but you had never noticed. My personal headcount tonight was 95. I saw two people leave this morning with luggage and a mom picking them up. I’m not sure how many others have left and how many are just nocturnal or only putting in smaller hours. A lot of the people who did piscine’s before were complaining today about hoping they get in (apparently the acceptance letters from last month are only just coming out). I guess some student they didn’t feel were very bright or capable got in so their reasoning was along the lines of “if they let her in, surely they will let me in too”. But I was sort of turned off by the logic of it, it felt sort of asshole-ish in a way. Like I can see the logic sure, but it was the entitled tone I guess. Today was productive, perhaps not in the most useful of ways, but I learned a ton so I’ll call it a success, even if I’m fairly sure I did last nights assignments right and the computer marked it wrong, all good here. Assignments today were as follows:split whitespaces, split characters into words using spaces, line breaks, and tabs. create a libraryboolean to run the main in the photo properlymacro A B Scompile the main in photostore program arguments in an array and return the address of the arrays first boxnow display the content of the array created in last function","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-11-08-79bc273f33a2,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Daniel Teale,,My life before and “after” Ruby – Daniel Teale – Medium,2018-09-10 08:48:22,medium,"My life before and “after” Ruby So its Monday of week 4 at Coder Academy and we’ve been told that the course is now finished with pure Ruby, so I thought I’d tke advantage of this lul in content and do a write up. So how do I feel after Ruby? Before I started this course I knew very little about Ruby. My previous experience in coding was limited to some online Python courses I did online a few years ago and some Javascript courses I did when I decided to do the course; my Ruby was purely what I learned in the 6 lessons of pre-work (it didn’t really stick). It’s easy to compare to Python, the basic syntax is similar although seemed like more work (ending blocks with end , dealing with limited scope), “ Why don’t we just learn Python?” I kept asking myself. As we got deeper into the content, the beauty of Ruby started to shine. For starters, syntactic sugar. My whole time writing Python I never thought “ That piece of code looks nice”. Not so with Ruby. . (((gets. chomp). split("" "")). each {|k| k. capitalize!}). join("" "") Hot. . Ruby offers so many shortcuts, Python forces you to indent and use new lines, making what could be a simple piece of code time consuming and large on the screen. For example:eat(cook(prepare(buy(['flour', 'sugar', 'chocolate'])))) This monstrosity can be written aseat cook prepare buy ['flour', 'sugar', 'chocolate] Hot. Our class has even taken upon themselves to have competitions to see who can solve the daily challenge in a single line of code, a fun if ultimately fruitless exercise. I learned that Ruby is a two-edged sword however, whilst Python is comparatively laborious compared to Ruby’s “magic” it is also explicit and easy to debug. I have spent some time debugging problems which appear completely logical, however due to Ruby’s inate ability to ‘fail gracefully’ and hide complexity’; failed to make itself obvious. Either way it has been an enjoyable experience and I’m amazed at how far I’ve come in such a short amount of time but I’m also aware of how much I don’t know. For now I’ll continue to keep my head down and take things one step at a time and try not to look up at the mountain in front of me I have yet to climb.","['Programming', 'Ruby', 'Codingbootcamp']",https://medium.com/@djteale90/my-life-before-and-after-ruby-9927fd62cda9,0,[],0,10,daniel,M,0.004259946531406404,0.9957400534685936
Jordyn Kimelheim,Developer and writer based in Philly. Lover of breakfast food.,The Refactor Factor – Jordyn Kimelheim – Medium,2018-03-02 03:21:57,medium,"“ That’s not writing, that’s typing” — Truman Capote upon being informed that Jack Kerouac didn’t revise his work. “ I’m not a great programmer; I’m just a good programmer with great habits. ” ― Martin Folwer, Refactoring: Improving the Design of Existing Code In my bootcamp cohort at New York Code + Design Academy, we usually start the morning off with a coding challenge. A little rough when you’re still on your first cup of coffee, but overall they’re a fun way to warm up for a productive day of learning. It’s particularly gratifying when, having completed the challenge, I have the opportunity to present my code to the class. I’m among the subset of generally anxious people that actually thrive on being in front of a room — it’s easy for me to slip into performance mode. So I’m standing up, having fun, excited to use the projector, talking through my code. And then this thing happens and the wind in my sails is dramatically taken from under me. Like, The Endurance stuck in pack ice for 6 months level of no wind in sails ( I know, I know, the wind was not actually the problem in that situation, don’t @ me it’s a metaphor): A classmate pipes up to let me know my code could have been written in a more condensed or efficient manner. It makes me really defensive. I mean, I solved the problem, right? Why am I being criticized? Here’s a lightly fictionalized, emotionally true sample dialogue: Me: And that’s how I used Java Script to end world hunger. Classmate: Yeah but why didn’t you use a for loop. Me: Okay that would be shorter but I learned the method I used yesterday at 10pm so I honestly don’t feel that bad. And the class laughs, which is my goal because it distracts from the truth: I’m embarrassed. Because that other student? That student is R I G H T. My code works, sure. But it’s clunky. It’s bulky. It’s inelegant. As my journey into code barrels forward, I’ve come to realize that there are many solutions to a given problem — but some of those solutions are better than others. Maybe they’re easier to read. Maybe they’re shorter. Sometimes they just plain work better. For example, if you’re trying to guess the correct number in a list of numbers 1–100, it might take you up to 99 guesses to find it. Use a binary search algorithm? Worst case scenario, you’re guessing 6 times. (h/t to Aditya Y. Bhargava for lucidly explaining this concept). The question then is, how do you get to the point where you’re not just solving a problem, but finding the right solution? Or at least, one of the righter solutions? I suppose the way you do this is by coding a bunch until you have an instinctual feel for what kind of solutions you should be reaching for. But perhaps more importantly, you need to revise the hell out of your code until it shines. The first time programming really clicked for me was during a Codeacademy Ruby tutorial where they introduced the concept of refactoring, or restructuring your code to be more legible and less complex. It’s just like writing! I have a B. A. in English and according to my most recent tax filings made about 10% of my income in 2017 from freelance writing gigs. Writing is a thing I can do. As a writer, you need to revise your work constantly. First drafts are never good (if you need proof, consider how this blog post once had a 300 word explanation of how binary search algorithms work). There are many, many ways you can express an idea, and you have to put in the work to express that idea in the best way you can. Refactoring is, of course, only one way to revise your code. It doesn’t change the core functionality. Sometimes, you might actually want to change the functionality! (if I had used that for loop in my coding challenge example, I would have ended world hunger in an entirely different way than the method I used). However, as a beginner it’s probably the simplest way I can immediately improve my code quality. So from now on, I pledge to pay closer attention to the code I write. I’ll make sure that my variables and functions have clear naming conventions (goodbye, “function whatever(thing)”). I’ll be careful about how I indent and where I put brackets. It’s not everything. But if I can be a little more precise, a little more thoughtful with my code? It’s a damn good start.","['Programming', 'Codingbootcamp', 'Coding', 'Writing']",https://medium.com/@jordynkimelheim/in-my-bootcamp-cohort-at-new-york-code-design-academy-we-usually-start-the-morning-off-with-a-f8ae401bba18,0,[],0,52,jordyn,F,0.9112598969126946,0.08874010308730539
Alan Hong,"Programmer / Developer-in-training, former Air Traffic Controller, Pilot, Entrepreneur.",The Iron Yard Houston Day 12 – Alan Hong – Medium,2017-06-07 23:01:37,medium,"The Iron Yard Houston Day 12 Javascript arrays and loops today! Ever since I’ve been doing coding challenges more than a month ago every day, I’m pretty darn comfortable with manipulating arrays and loops. Our daily project today had us using for loops to solve some coding problems. Well… at least, we’re supposed to use for loops… because if my experience using W3 Schools’ References and M D N’s References, I know some helpful built-in methods right off the bat that we could totally use instead of building a for loop from scratch. Is that cheating? I don’t think so lol. I mean, we’re allowed to look up stuff anyway and refer to reference guides! What’s to stop us from discovering super helpful built-in methods that we could use in certain cases to save some work. Especially, if we can demonstrate how to use them effectively, right? :) Find the largest number in an array? array. sort() that shiet and return the first or last array item (depending on how you sorted it). Need to reverse an array? array. reverse() works as you’d expect lol. Need to join two arrays together? array1. concat(array2). Boom, done. Need the sum of an array of numbers? array. reduce() is totally built just for that. Someone painstakingly built these methods right into Javascript for us to learn and use. So let’s use em! :)","['JavaScript', 'Codingbootcamp', 'The Iron Yard', 'Programming', 'Coding']",https://medium.com/@xiupan/the-iron-yard-houston-day-12-2f3b678866bc,0,['The Iron Yard'],1,0,alan,M,0.0030826743350107835,0.9969173256649893
Jehoshuah K,New Fullstack Developer,Stranger in a strange land… – Jehoshuah K – Medium,2018-08-14 15:37:52,medium,"Stranger in a strange land… Not long ago I had the realization that I was spending my only life on something that didn’t engage me. After spending nearly five years working in the typical office role of middle management, I discovered I had stopped trying. I was no longer being challenged, and frankly hadn’t been in a very long time. I was complacent, bored, and worst of all, still somehow underpaid. That was when a friend told me about coding bootcamps. They themselves had gone through one, and after a few months of searching for a job, landed one that paid very well. So I started researching. Coding bootcamps have become increasingly popular over the last few years. They offer in-demand skills over a condensed timeframe. After reading (and re-reading) other people’s blogs and journals describing their own journeys into one, I decided I would give it a try. I settled on a bootcamp that focused it’s education primarily on Javascript, opting to go deeper in a single language rather than spread my learning over several. After spending so much time in a very familiar and “safe” environment, I willingly stepped out of that shelter into an unknown land that would prove to challenge me in ways I could not expect. Actual footage of me quitting my job and starting my coding journey There’s something I should mention at this point that will become a main concept of this story. Something I would have never thought would cause me as much anxiety as it did. I am not “passionate” about programming. Maybe that didn’t cause you to fall out of your chair, but believe me when I say it caused me a serious amount of stress. To explain: as I began to make my way into the bootcamp program I kept hearing other students talk about how they L O V E D programming, or how they D I S C O V E R E D their P A S S I O N for programming after spending M O N T H S teaching themselves things, or even how they’ve already acquired their computer science degree and decided to add this on top of it. I became panicked that I didn’t have this engrained passion others spoke so often about. Not only that, but I knew not one ounce of computer programming. I wasn’t so sure I’d made the right decision after all. ever feel like you’re about to be cooked alive? Now, my bootcamp split up their program into 3 distinct phases. The first phase, known as “foundations” is done remotely where the student completes various self led work and multiple tests to check understanding. Several of these are considered “critical” where, if the student is still struggling with the material, they may be asked to repeat the phase or even asked to resign the program. Since I knew nothing, I even attended a “pre-bootcamp” Prep course to help give me a bit of a boost starting off. To be honest, I don’t think I would have made it had I not done that. Theres a part of this journey that other journals never mentioned: the emotions you would feel. I’m not ashamed to admit that on several occasions during the foundation portion of the bootcamp I experienced more self doubt than ever in my life. See there’s this thing called “imposter syndrome”. If you’re unfamiliar, it’s when you are utterly convinced that you suck and that everyone else who’s involved in whatever you’re doing must be doing so much better than you. Now you may be thinking, “just remind yourself that isn’t true” and I’ll tell you, sure! Try that and let me know how it goes. Spoilers: it doesn’t work. I will never forget how I felt during one of those “critical” tests that would be used to decide my future as a programmer. Absolute despair. I was certain I didn’t understand any of the material and that I simply was not cut out for this. I couldn’t do it. I didn’t have any dream of programming like all those other people. I didn’t have this naturally discovered passion that I could grab onto and weather the storm of self-doubt with. Part of that was due to how isolated I was in my struggle. Yes, there are discussion boards online but if you’re experiencing the crushing fear that you don’t understand the material they’re trying to teach you, I may advise against going to online forums full of very experienced programmers. It’s like going to one of those “drink wine while you paint” things but everyone else is Rembrandt. Oh, and there’s no wine. At least let me drink! The other major factor exerting pressure on me was that constant reminder that I didn’t have a job any more. There would be no more paychecks, no safety net to catch me if this didn’t work out. It had to work. So I struggled on toward the finish line, until finally I completed the foundation section. After experiencing all the stages of grief several dozen times over, I managed to make it to the “on-campus” portion of the bootcamp. Finally I would meet all those people who were so much better than I was at coding. The interesting thing was, as I chatted with my new classmates, I discovered that I wasn’t alone in how I had felt that time. As it turns out, practically every one of us had felt almost all of the same feelings during that brutal time. While there were some of us that came from coding backgrounds or held computer science degrees, it didn’t take long for the playing field to level out. I wasn’t the only one not getting things, or having a hard time handling certain concepts. We were all pretty much the same. Almost. The only thing that remained a true difference was how so many of us had these passionate reasons for being there. So many stories were shared about how they “found coding” or discovered they “loved programming” after spending an afternoon messing around one day. I felt this silent pressure suddenly pressing on me. I didn’t have anything like that. It was almost like I shouldn’t be allowed in the clubhouse if I can’t talk about how much I loved programming. The truth is, I didn’t really love it. There were things about it I could take and make my own. There were moments of sweet victory after finally getting a piece of code to work. There was the knowledge that no matter how long I worked with programming, I would never be able to know everything. I could never get bored, since it’s always changing. As I thought about all of that I realized, even though I didn’t have these wonderful sounding origin stories the others did, I had enjoyed many of the same things about coding that they did. I loved the challenge and hated losing. I stood up and cheered alone at home when my code passed a test, just like the rest of them. I found myself reading documentation about something for hours just to understand how it worked. I had just as much a right to the world of programming as anyone.","['Programming', 'Coding', 'Codingbootcamp', 'Personal', 'Bootcamp']",https://medium.com/@musicalbard/stranger-in-a-strange-land-6adaa12c05e2,5,[],0,18,jehoshuah,Unknown,Unknown,Unknown
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,"So I’m supposed to be a Project Manager for my Remote Dev team, what the ?$!* do I do?",2017-07-21 14:27:43,medium,"So I’m supposed to be a Project Manager for my Remote Dev team, what the ?$!* do I do? Photo by Maxime Bhm on Unsplash This brief article will help you adjust, adapt and succeed with your Project Manager opportunity. What are the benefits of being a Project Manager?“ The only real training for leadership is leadership. ” ~ Antony Jay” You’ll gain leadership skills through experience. How often do you think someone applies for a Junior Developer job with not only team project experience, but also experiencing leading dev teams? The skills you will learn overcoming challenges as a B2 L- P M will make you stand out to employers. You’ll impact the Chingu community by helping your team finish the project. There is so much opportunity and potential made possible by so many developers coming together to work on projects, but without a Project- Manager, most projects aren’t successful. As a project-manager, you’ll be able to change that and help the developers in your team level-up their skills in a way they might not be able to otherwise. We’ve got a Master Projects List where all finished projects go. Your team’s project will find a home here and contribute to Chingu’s crazy goal of having 1000 projects in here by 2020. What does a Project Manager do in the Build-to- Learn projects? The primary objective of the Project Manager is to do whatever it takes to ship a finished project. That may sound scary, but it’s really not. We’ve designed the Build-2- Learn Process to make it much easier. This article explains the B2 L Process in great detail and will give you a clear idea of what to do. Project- Manager Support If you’re assigned as the Project- Manager for your team, you’ll also be added to a private channel in Voyage called #project-managers. This will have all the project-managers in Voyage. You’ll be able to ask for advice and share tips, resources, etc here. Also, if you need support, you can reach out to me or anyone in Chingu at any time for help. We’re all in this together to ship projects and level-up our skills. Questions are not only welcomed, they are encouraged!","['Project Management', 'Chingu', 'Digital Project Manager', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/@tropicalchancer/so-im-supposed-to-be-a-project-manager-for-my-remote-dev-team-what-the-do-i-do-4fb8a244b85f,0,[],0,28,chance,M,0.024461428631419813,0.9755385713685801
Creative Fleurish Coder,You may know me from the Creative Fleurish website where I focus on the topic of creativity. This is where I write about my adventures in tech.,How I Landed C4Q’s Access Code Fellowship – Creative Fleurish Coder – Medium,2018-03-19 14:46:41,medium,"How I Landed C4 Q’s Access Code Fellowship It was week five of the New York Public Library’s Project_<code> Phase I I coding class. It was love at first sight for Bootstrap and confusion at first function for Java Script (the same goes for j Query). I already started working on my Alexander Hamilton website at home and my husband noticed that I seemed to be enjoying the coding process. A few days later, he forwarded me an email flyer about applying for the Access Code Fellowship. Since the coding class at the N Y P L would end on week ten, it seemed sensible to start working on my next move. The C4 Q Logo With the Access Code Fellowship, Coalition For Queens ( C4 Q) aims to teach “coding and professional skills to talented adults from diverse and low-income backgrounds. ” Interested parties fill out an application. In the application, you answer questions about your education, career, passions, experiences with failure, and background with coding. If they like your answers, they invite you to take part in round two which consists of an interview with a member of the tech industry, a math test, and a logic test. During your interview, you go through a logic puzzle with your interviewer. My interviewer turned out to be a developer at Artsy. He was super nice and our interview felt like a friendly conversation. I Got a Fever and the Only Prescription is More Scrap Paper After the interview came the tests. Personally, I didn’t find the math and logic tests to be all that difficult. For math, we were tested on algebra, simple geometry, arithmetic, fractions, exponents, and probability. For logic, here’s an example of a logic puzzle. My only gripe was that we were given a total of two pieces of scrap paper. When I asked for more for the sake of double-checking my work, that request wasn’t acquiesced and I was told to scribble around my answer sheet. If your interviewer signs off on you and you did well on the tests, you move on to the final round: a two-day Java Script workshop. Each applicant is evaluated on active participation during the workshop, ability to be a team player, the merit of a completed homework assignment, and the score on a final assessment exam. The bulk of the workshop was devoted to listening to lectures and solving pair-programming problems. On day one, July 20, 2017, we dove right in and learned about data types, arrays, conditional statements, switch statements, and loops. I knew learning Java Script in such a rushed format would be difficult so I deliberately turned off the data on my phone to cut off distractions. Towards the end of the day, I turned the phone back on and a text message popped up from a friend: “ Sorry about Chester. I know you loved Linkin’ Park. ” Forever My Favorite Band I don’t know any Chesters in real life. The only Chester I care about is the lead singer of a band that I have worshipped for more than fifteen years: Linkin’ Park. Right away, I did a quick Google search and saw this New York Times headline: “ Chester Bennington, Linkin Park Singer, Is Dead at 41. ” With the news confirmed, I immediately wanted to curl up in a ball and cry my eyes out. Unfortunately, my mourning would have to wait. The workshop ended around 6:00 P. M. so I rushed to the New York Public Library to work on the homework assignment: a detailed proposal and user story for an original mobile application idea. I worked on the proposal for two hour with tears running down my face the whole time. Crying in public is not a particularly dignified thing to be doing, but this is what happens when one has a packed schedule. Right after I finished the homework assignment, I had to attend my Project_<code> Phase I I class that same evening. After class, I arrived home around 10:00 P. M. and proceeded to cry myself to sleep with Linkin’ Park’s “ Leave Out All the Rest” playing me off to dream land. Despite the less-than-restful night, I woke up early the next day and reviewed Java Script with Codeacademy. Then, I headed off for day two at the C4 Q workshop. The next day was a blur of functions and problems. One clear memory I have is making a conscious decision to not cry and curb my mopey feelings. There were a lot of pair-programming problems scheduled for that day and it wouldn’t have been a pleasant experience for my partners if I was a sobbing mess. That would have to come later. Time seemed to crawl slowly throughout that day. As nervous as I was for the final assessment, I was also grateful that this meant my day was nearly over. For me, the problems on the final assessment were not curve balls; they were fair questions. After I turned in the assessment, I walked away feeling satisfied with my answers. While my particular experience applying for the Access Code Fellowship was uniquely stressful for personal reasons, I was fairly happy with my performance throughout the long process. I guess the people at C4 Q felt the same way. Less than two weeks later, an email hit my inbox with an offer of acceptance. Six weeks after that, I was sitting in a classroom with the rest of my i O S cohort learning about the fundamentals of Swift. Yay Swift!","['Coding', 'Linkin Park', 'Tech', 'Adversity', 'Codingbootcamp']",https://medium.com/@creativefleurish/how-i-landed-c4qs-access-code-fellowship-567d1aa8382d,3,['Code Fellows'],1,0,creative,Unknown,Unknown,Unknown
Chris Lofton,,The education space is fraught with predators. – Impact Hub Austin | Workforce Development Accelerator – Medium,2018-05-23 05:32:50,medium,"The education space is fraught with predators. Photo by paul morris on Unsplash Financial Aid and Student Loans A few years ago I was researching post-secondary education options, and it felt like the goal was to sell me on a program and then help me pay for it through financial aid and students loans. Imagine the state of higher ed around the time when I T T Tech had 140 locations up and running. I T T Tech degree programs cost between $45, 000 and $85, 000 a year, and the average income for grads was $38, 400. Their student’s default rate on their student loans was 22% in 2014. I T T Tech left students in debt without the ability to finds job to pay back the debt, and thus I T T Tech closed its doors…because they were bankrupting 1/5th of their students. In 2014, only the University of Phoenix had more students who had defaulted on their students loan than I T T Tech, and today, they have an N F L stadium named after them. Needless to say, all of the options I explored felt scammy, and I chose to enroll in a coding bootcamp instead. The financial risk was much lower. I believe I paid around $1, 500 for a 10-week class. Prior to this time in my life, I attended Texas State University. I graduated in 2010 and at the last minute, skipped a double major in Philosophy and Psychology to just major in Psychology, minor in Philosophy, and no longer spend any more time in a classroom where everyone thinks they’re right and feels compelled to explain why. I paid a lot of money for a B. S. degree from Texas State. In fact, I am still paying it. Lucky enough for me, I, or should I say my parents, had good enough credit that they could co-sign a student loan with me, so I could afford the college experience. I’m not sure how people without good enough credit pay for college. I’m not sure college was worth a $30, 000 experience. I definitely learned a lot, but I’m not sure what I learned was worth $30, 000, and I’m not sure I had to do the learning in college. I’m honestly not sure universities, even publicly funded universities, have the best interest of their students in mind. About 50% of college students graduate with a Bachelor’s Degree in 6 years. What does the other 50% do to pay off their student loan debt with no degree to earn a job that pays enough to pay off their student loan debt? Even if you have a degree, will you make enough money to pay off your student loan debt? Are colleges catalysts for education, or are they debt factories? My experience in Teach For America and K I P P taught me that education is sacred. Education is the essential component of culture. It allows our species to communicate, grow, learn, and survive. Operating with integrity and doing the best by our students is the only option, and perhaps we can be the difference for a few hundred people a year — and One Day more.","['Austin Coding Academy', 'Coding', 'Codingbootcamp', 'Impact Hub', 'Workforce Development']",https://medium.com/impact-hub-austin-workforce-development-accelerato/the-education-space-is-fraught-with-predators-43a7b230deb4,16,[],0,12,chris,M,0.13713656176653735,0.8628634382334627
Allan Gao,An aspiring web developer. NBA nerd.,The Coding Bootcamp Experience - Impressions and Reflections,2018-09-09 00:54:22,medium,"The Coding Bootcamp Experience - Impressions and Reflections Inspired by the endless possibilities that the technology industry had to offer and looking for a change in direction, in August 2018 I decided to attend the Coder Academy Fast-track boot camp located in Sydney, Australia. The first orientation day introduced me to my new classmates, or more appropriately, my new colleagues. Our cohort comprised of people from all walks of life and from different countries around the world, from Russia and Canada, to Nepal and Mexico. Each had their own unique stories to tell and life experiences to share, but had gathered here in unison with one singular focus — to become web developers by the end of the 6 month boot camp. Right from the get-go, we were exposed to the tools that are essential for any web developer. Our first week focused on familiarising ourselves with the command line terminal — the interface in which the. To those that are unfamiliar with the terminal it may seem intimidating, with it’s cryptic phrases and terms making it seem difficult to understand much less utilise. However, it’s importance is undeniable. It is the most basic part of a developers toolkit and allows for basic work such as running programs and creating files seamlessly. Once you can manage to work your way through the terminal and further explore it’s functionality, it will become the trusty screwdriver inside the developer toolkit. Next on our list to get to know up close and personal was Git/ Github. Before the bootcamp I had tried to understand what they are and why it was so essential to software development, but looking at the home pages for Git and Github as well as You Tube video explanations made me somewhat more confused. Terms like “repository” and “pull-request” may as well have been in a foreign language for me when I first encountered them. It wasn’t until a great explanation from our educator/advisor Saad that it became quite clear why. Git is a piece of software which essentially lets people access a central chunk of what is usually code, and make alterations to it without stepping without interfering with each other. All of these processes are confined to the local machine in which Git is being used. To showcase the projects which use git to the world, Git Hub is the most popular website that is being used. Git/ Github work hand in hand to foster collaboration because it is open-source, whilst also allowing a glimpse into the hard work of code behind an intricate project. Our first foray into actual programming with a language came with Ruby. Within less than two weeks, we were taught core topics such as data structures, methods, objects and classes which make up fundamental programming concepts. Within less than two weeks I went from writing simple Ruby syntax to making terminal apps such as a banking simulator and simple trivia game. Although admittedly I still require reinforcement in my knowledge in the aforementioned concepts, I will strive to learn something new everyday. As I’ve recalled so far, the learning process has been intensive. Whether it be something like the self concept in Ruby or Rspec, there is something that will leave me thinking — what is going on? The feelings of not understanding something immediately can be somewhat distressing, and can lead to self-doubt ( It could also lead you down the stack-overflow rabbit-hole). Aside from the emphasis on the technical side of web development, Coder Academy have also highlighted the importance the mental aspect of what it takes to be a successful developer — an underrated and often neglected part. Reflecting on the advice bestowed by our mentors and educators, it is important to adopt certain attitudes in order to accelerate learning and personal development. The fixed-mindset vs growth-mindset debate was touched upon as one of they key features of determining an individual’s potential success. Throughout most of my life, I have somewhat always had an outsider’s perspective of a fixed-mindset — the belief that an individual’s success is predefined by their natural talent and ability. Perhaps a deviation from this outlook is in store for me. Rather than focusing on how good other people are, I should focus on being the best version that I can be. By adopting a growth-mindset — one in which your abilities can be developed through hard work, good strategy, and input from others, eventually as I hope, the feelings of self-doubt will dissipate and allow me to become the best developer I can be. Tune in to this space for any cool and interesting developments in my coding bootcamp journey! For more info on Coder Academy: https://coderacademy. edu. au/fast-track","['Codingbootcamp', 'Ruby', 'First Impressions']",https://medium.com/@allangao95/the-coding-bootcamp-experience-impressions-and-reflections-9f7c88c3dc9,0,[],0,0,allan,M,0.0026786092406725108,0.9973213907593275
James B,Learning Coding at The Iron Yard Las Vegas https://github.com/SquaredDev,The Iron Yard is shutting down – James B – Medium,2017-07-20 16:26:30,medium,"The Iron Yard is shutting down Just got word from my instructors that The Iron Yard is shutting down after my class. The instructors have committed to complete the courses and have retention bonuses, but all the campuses are closing after classes have finished. Lots of things to figure out. Time to do some figuring. Here’s a link with more info. The Iron Yard to Shut Down Breaking News The Iron Yard, a technology education company that offers full-time and part-time web development courses…www. 1063word. com And now official word. http://blog. theironyard. com/","['The Iron Yard', 'Endings', 'Web Development', 'Codingbootcamp']",https://medium.com/@boydston.j/the-iron-yard-is-shutting-down-6b5ea244ab46,1,['The Iron Yard'],1,0,james,M,0.004514259074712186,0.9954857409252879
Adam Belton,I'm a Canadian masquerading as a Brit so I can live amoung the Dutch with my Australian wife and our two Romanian dogs.,On Coding Bootcamps – Adam Belton – Medium,2018-05-27 10:28:22,medium,"On Coding Bootcamps During the three months between being accepted into the Codaisseur Academy, an intensive, 10-week full stack Java Script program in Amsterdam, and leaving the safety of my established career, I kept a close eye on the comments section of the academy’s Facebook advertisement. It was mostly people tagging their friends, with a few optimistic comments about what a great opportunity it was and a healthy dose of skepticism about the idea of learning such a complicated skill set in such a short period of time. The little voice in the back of my head kept asking am I crazy? Is this a scam? Can I really switch careers in just 10 weeks? I’m a reasonably impulsive person and had known for a while that I desperately needed a new challenge, so I was willing to take a chance. And now that I’m just over half-way through the program, I feel qualified to address some of that skepticism. Codaisseur Academy First off, there’s a few common misconceptions that need to be addressed. The first is what it means to be a professional web developer. Most of the skepticism I’ve come across (including my own) comes from the misconception that “professional” means expert or highly skilled. I’ve come to accept that it doesn’t. A professional web developer is someone who is a web developer by profession. And what coding bootcamps offer is a concentrated curriculum that teaches you the basic skills you’ll need to be successful in that profession. They introduce you to some popular languages, frameworks, libraries, tools and workflows, and support you while you develop your skills through exercises, assignments and projects. They cover some basic C S theory and industry best-practices ( T D D, Scrum/ Agile), but the focus is on building things. If you work hard and push yourself, you’ll round out the essential skills that companies value in a junior web developer. The second big misconception is that you need a bootcamp to learn programming. You don’t, and any good bootcamp will tell you that. There are countless free/cheap resources available online (see below for a list of some of my favorites) that cover the exact same content. The value of a good bootcamp lies in its format. Again, they offer a concentrated curriculum. You learn the skills and technologies that are most relevant for a junior web developer. One of the biggest challenges with teaching yourself is knowing where to start and where to go next. There’s so much information out there and having someone to curate your learning path can be invaluable. Furthermore, technology changes quickly. That online course you’re following might be outdated. It’s important to understand the fundamentals of the tools and technologies you’re using, which older versions can still give you, but when your goal is to make yourself marketable to an employer, relevance is important. A good bootcamp might also offer some sort of job guarantee. In the case of Codaisseur, their profit model relies on your success. If you don’t land a job within 4 months of graduating, they don’t get paid. Potentially the biggest misconception about coding bootcamps is that their curriculum facilitates success on its own. Most bootcamps have impressive hire rates, but their graduation rates are usually considerably lower. My class has lost about 25% of its students in the first 5 weeks and I expect we’ll continue to lose more. Learning to program is hard and bootcamp schedules are unforgiving. You’ll cover each topic in a day or two, and there will be times when you just don’t get it. The curriculum builds on itself so a deficiency in your understanding of a particular subject can severely impair your progression. To keep up, you’ll have to be resourceful and fill in the gaps on your own ( Youtube and Udemy can be great for this). As a result, most of your evenings and weekends are spent studying. Some people really struggle with the intensity, and even with the additional effort, there’s no guarantee you’ll pick it up. The lesson materials and assignments on their own won’t always be enough and you’ll have to be prepared to do everything it takes to keep yourself afloat. At the end of the day, your success is entirely dependent on you and your own style of learning. Coding bootcamps are intense and you’ll need to be honest with yourself about whether they make sense for you. It’s still too early to say definitively whether quitting my job and enrolling in a coding bootcamp was worth it, but after 5 weeks, I’m optimistic about my future career. Over the last few weeks I’ve deepened my knowledge of H T M L, C S S and Java Script. I can now build full stack applications with React/ Redux, Node, Express/ Koa and Postgres. I’m familiar with a handful of other related Java Script libraries. I’ve started learning Type Script and can build a statically typed backend and test it with Mocha & Chai. I can write S Q L to interact with my database directly. I can work effectively within a development team using the scrum methodology and my previous career experience lends additional perspective when solving problems. I don’t think I’d have made the same progress without Codaisseur Academy, but I don’t think they deserve all the credit, either. I’ve worked hard to get to where I am. If you’re considering embarking on your own coding journey, I think a good coding bootcamp can help. Just know what you’re getting into, and know yourself. You’ll maximize your returns by putting everything you’ve got into it, and you should be prepared for one of the most challenging and rewarding experiences you’ll ever have. Free Resources: Traversy Media Youtube channel Free Code Camp The Odin Project Cheap Resources: Rally Coding Traversy Media( Note: The links above are to the company websites for two of my favorite Udemy instructors. I’ve found Udemy to be a great resource I F you find the right teacher. These two are fantastic. If you’re interested in trying one of their courses, make sure to go through their company websites to get the best price. )","['Programming', 'Coding', 'Codingbootcamp', 'Web Development', 'Full Stack']",https://medium.com/@thelastgreatcynic/on-coding-bootcamps-657422f918aa,0,[],0,130,adam,M,0.003677030249871331,0.9963229697501287
Wendy Lee,Former tech giant bean counter turned digital nomad & tech-extrodinarie-in-training.,Le Wagon Week 2: Shut Down Sexist Jokes – Wendy Lee – Medium,2018-03-08 00:00:00,medium,"Le Wagon Week 2: Shut Down Sexist Jokes Since today is International Women’s Day, the timing is perfect for what’s been on my mind this week — our general lack of resistance to sexist jokes. Women being a minority in the tech world is no news. During my time at the tech giant, despite being in the non-technical side of the business, decisions makers were still often men. No surprise. Given those odds, I applaud Le Wagon Shanghai for creating a 50/50 gender mix in our current cohort. That is an achievement in and of itself. Yet, despite such effort to achieve gender equality, I was reminded how quickly one rotten tomato can undermine progress. On Monday, an alumni mixer took place for us to casually meet former Le Wagoners, to hear their experiences, and to pick their brains. As is typical with these events, we gathered at a bar. The alums were mostly from previous Le Wagon Shanghai cohorts, who happened to all be men. Around 8 alumni each gave a short speech on what they’d been up to since the camp, and passed on tips and wisdom. It was all very interesting and informative until one former student, let’s call him Rotten Tomato, began to speak. According to his own account, he was on his way to the gym when a fellow alum asked him to join, signaling this would be an impromptu speech. Before he began to give us his f-bomb filled wisdom, he addressed the male portion of my batch. I paraphrase, “ You guys are so lucky there are so many girls in your class. We only had one girl, and she was… well kinda like a guy. It’s not motivating to come up with solutions when there are just dudes, but when there are girls to impress? Well that’s more fun!” Now, imagine a much more exaggerated, frat-house, or “locker-room” version of the above words. Shocked, I rolled my eyes so hard. In hindsight, I wish I had call him out right there and then. No one did. But no regrets. Now I tell the world about it. I am 200% sure Rotten Tomato thinks he was just having some good afterwork fun, thinking he was hilarious to make jokes about not having women in his class. I could let it go, but I would be guilty of perpetuating the issue. No sir, we women did not join a coding camp to entertain you, nor for men to impress us. And if you needed women to be present to motivate you, then that’s a different set of issues. It’s not the first time I’ve heard sexist jokes. Let’s be real, they are all around us. But on Monday night, it became personal. I ruminated over the all-male alumni panel, and the implication of having a majority male team who leads our camp. This reflects the tech world at large. What does it mean to have men who make most of the decisions for me as a student, employee, and consumer? The next day, a quick chat with a fellow female classmate revealed that I was not the only person disgusted by Rotten Tomato. I again questioned why no one spoke up? Why, when he was going on and on about his female classmate not being feminine, no one told him to stop? Fortunately, besides this one Rotten Tomato, all the men that I’ve encountered so far in Le Wagon community have all been wonderfully respectful and pleasant to work with. But we, both men and women, must all take upon the responsibility to stop this type of behavior. Jokes are words, too. Laughing at them is consent. Let’s not give power to lame, sexist jokes. So that was the biggest takeaway in week 2. I’m now exploring ways to get involved with female empowerment in the tech world. To have more female leaders means more participation is needed. Oh, and I did learn more Ruby & Object- Oriented Programming as well! Originally published at wanderlustwendy. com on March 8, 2018.","['Sexism', 'Iwd2018', 'Women In Tech', 'Le Wagon', 'Codingbootcamp']",https://medium.com/@wanderlustwlee/le-wagon-week-2-shut-down-sexist-jokes-c55ff8cddaa4,1,[],0,4,wendy,F,0.9963612040133779,0.0036387959866220738
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 12 — Exam01 (09) – Mike Brave – Medium,2018-09-01 05:56:13,medium,"42 Piscine Day 12 — Exam01 (09) Edit: This is part of a series that culminated here, Next post. Previous post. I failed my test, and I failed it for stupid things that I thought I knew, and I thought I could figure out, and that I thought I had mastered. But when I needed the knowledge the most, it escaped me and I coded things that were so close to what was needed, but ultimately not enough. I’m embarrassed, and angry at myself for not being more prepared, not having used my time as wisely as I should have. If I could do it again I would have worked on a few test preparation questions a day, everyday instead of trying to study for two days before the exam. As I studied for the exam I found gaps in my more foundational knowledge that needed addressing so it’s been one of the most useful exercises I’ve done so far. I feel left in the dust by the current assignments because I never completely grasped some of those concepts that were needed but tried to carry on all the same. So new plan, allocate a certain amount of time to learn, a certain amount to figure, and a certain amount to ask questions. Then I will spend the rest of my time going over test prep questions and asking for help until I completely understand the concepts and can build it in my sleep. The silver lining of my failing is that a lot of people I didn’t really know before have ended up being really kind and sort of supportive. I’m grateful for that at least, it has relieved some of those feelings of aloneness that I was previously struggling with. Day nine was technically easy points, but oddly allocated, I didn’t get any of it done as I was studying. I may have chosen poorly here. That’s all for now, I’ll try to get something done tonight, until tomorrow.","['Education', 'Ecole 42', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-12-test01-day09-56c898362ba5,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Michael Gallipo,,The Odyssey — A Roman Coding Adventure – Michael Gallipo – Medium,2018-05-28 01:30:03,medium,"The Odyssey — A Roman Coding Adventure Sure the original “ Odyssey” was written by a Greek poet, but the Romans appropriated freely from their Mediterranean siblings and I feel no shame in doing the same. Over the course of my career I have written a lot — newsletters, mass-distribution emails, etc. But in almost all of those cases, I was comfortable in the knowledge that I knew more (or at least as much) about my subject material as any of my likely readers. This will almost certainly not be the case with this blog, so in that sense, it’s venturing into new territory. So I will just need to embrace the saying emblazoned on the front of one my t-shirts “ Everything I say is fully substantiated by my own opinion!” Why Coding? Perhaps a little background is in order before getting to the story. Although I had some early experience with computers (took my first programming class at age 11), I have spent most of my career in money management. In many ways, it was very enjoyable. Because almost any event could impact my work, I never knew what any day might bring. But that also meant that almost everything was open-ended. But with coding, while there may be multiple ways to accomplish something (more on that to come), at the end of the day, your code works or it doesn’t. Full stop. The challenge inherent in that appeals greatly to the kid who loved geometry proofs in school or who got a perfect score on the logic games portion of the L S A Ts. Whiteboarding As part of our bootcamp training, we are introduced to the soft skills needed to succeed in our new profession. The other day, we were introduced to technical interviews and taught a process to whiteboard algorithms. During this process, our instructor talked about one of her technical interviews where she had to devise an algorithm to convert regular numbers to Roman numerals. And thus, a seed was planted. The next day, while I mulled over some of the other problems in our example set, I couldn’t get the Roman numeral problem out of my head. In the midst of other activities, I kicked it around in my head. Solving it — the first time The first step to solving was realizing that the Romans treated each column in our numbering system separately. Thus a number ending in 9 will always end in I X whether its 9, 19, 129 or 1099. The logic within each column is the same, only the letters change. For ex. , the logic behind X X X (30) is the same as I I I (3). From there the key items were to figure out how many digits the number was and be able to extract each digit individually. I then used a series of if/elsif’s to determine the “ Roman” value of each digit and add each segment to the result string. One small section of the code (dealing with the hundreds column) appears below:if @number. to_i > 99  if hundreds_digit == 0  elsif hundreds_digit < 4   hundreds_digit. times do     roman_numeral += "" C""   end  elsif hundreds_digit == 4   roman_numeral += "" C D""  elsif hundreds_digit < 9   roman_numeral += "" D""   if hundreds_digit > 5    (hundreds_digit - 5). times do     roman_numeral += "" C""    end   end  else   roman_numeral += "" C M""  end else end After a little bit of debugging I was thrilled that the code worked. At my instructor’s suggestion, I shared it with the group. A while later she came back with, “ Great. Now how about Step 7? How would you refactor it?” I stared at the screen for a few minutes, perhaps muttering a couple of N S F W phrases to myself, thinking to myself, refactor? I just barely solved it and got it to work. How the heck am I going to change anything? If I had any better ideas, that’s what I would have done to begin with. Having completed another tricky (for me at least) exercise in the interim, I was pretty fried and decided to call it a night. Solving it…. again The next day, I thought about the problem again. And thought about the logic I had used to break it down initially. I kept coming back to the part about the logic of each column being the same. That sounds an awful lot like something a loop is good for. Then I thought why not create an array akin to a lookup table. I could use the column I was in as one index variable and the actual digit of that column as the second. With that insight, my nearly 100 lines of code became 24 (presented in their entirety below). def roman_numeral(number) @number = number. to_s length = @number. length roman_numeral = """"roman_array = [["""", "" I"", "" I I"", "" I I I"", "" I V"", "" V"", "" V I"", "" V I I"", "" V I I I"", "" I X""], ["""", "" X"", "" X X"", "" X X X"", "" X L"", "" L"", "" L X"", "" L X X"", "" L X X X"", "" X C""], ["""", "" C"", "" C C"", "" C C C"", "" C D"", "" D"", "" D C"", "" D C C"", "" D C C C"", "" C M""], ["""", "" M"", "" M M"", "" M M M"", "" M M M M""]]i = 0 length. times do  i2 = @number[length - (i + 1)]. to_i  roman_digit = roman_array[i][i2]  roman_numeral. insert(0, roman_digit)  i += 1 endif roman_numeral == """"  puts "" The Romans did not have the concept of zero as a number but used the word nulla"" else  puts roman_numeral endendroman_numeral(2018) # => M M X V I I I The takeaway from this exercise for me is that there is almost always a better, more efficient, more elegant way to do something. Just because something works, doesn’t mean it can’t be improved. Just like Roman numerals themselves.","['Programming', 'Codingbootcamp', 'Coding']",https://medium.com/@michaelgallipo/the-odyssey-a-roman-coding-adventure-ee8aca2801a7,1,[],0,19,michael,M,0.004965539448960512,0.9950344605510395
Alex Kharouk,I used to write books. Now I write books and code.,Yesterday’s Work Rewards Me Today – Alex Kharouk – Medium,2018-08-09 17:19:43,medium,"Yesterday’s Work Rewards Me Today I’ve been coding now for almost three months. Small change, little steps, I know. However this week marks the next step of my life as a software developer. I was accepted into a bootcamp in London, Makers Academy. I’ve begun the pre-course work yesterday and am already making tidal waves of movement in my learning. There are many posts about life as a web developer, or one’s process of getting that first job. I’ll be submitting this into the category of “the developer’s journey via bootcamp. ” I think these are important posts. Bootcamps are expensive. So is your time. But you might want to go to a bootcamp. Maybe specifically Makers. Hopefully I can give you some context of the journey. First Two Weeks I think a common trait that is shared amongst eager learners is ‘rapid passion. ’ Passion that builds so fast that you just don’t know what to do with it. Maybe you write a song about it, or you build a project. You need some kind of outlet for all the passion. When I first started to code, I had the case of the rushin’ rapid passion. I created a simple website to display what beginner knowledge I knew. Then I moved towards a blog created on Word Press, where I posted constantly about this H T M L tag or that C S S attribute. I felt like I was learning enough to talk about it. Which is fine, even if I read it back now and think of how little I knew back then; the irony will be outstanding when I read this post a year from now. Then as the first two weeks pass, there’s that dipping point. Many don’t make it back. That’s when you realise there’s more to programming than just H T M L. There’s Java Script and other languages. Front-end; Back-end. Full-stack or node stacks with a sprinkle of dated M E A N stacks. Keywords start to emerge, as if bidding you to come with them. Learn that framework or this language. This framework gets the $$$. That language is older than the person who wrote it! All these words. They can overwhelm you. And it’s at this point the dipping occurs. The overwhelming world of software development comes at you, like paparazzi after a leaked affair. During my first two weeks I thought I could do it all. Bought many Udemy courses, believing in those 99. 999999% discounts they always claim to offer. Signed up to all the online courses. Even considered to enrol into a remote bootcamp right then and there. Luckily I took a step back. Since I already purchased the Web Developer Bootcamp for ten quid, I decided to only play with the thought of attending a real in-person bootcamp once I finish that course. First Month Passed, Enter Month Two Next thing I know, I’m out of that dipping point and into month two. At this point I’m really happy with myself. Six months ago I used to be the kind of guy who’d thankfully join the dipping crowd. Not this time. I stuck through it. I’m even making great progress on the Web Developer Bootcamp. However I was going through the Java Script material and it was tough. Terrifying. The instructor then introduced j Query and I started feeling that overwhelming pressure of Imposter Syndrome. The whole time I was thinking damn, I have an english degree. Why am I even doing this? Oh no. A second dipping point! This time I stepped back. Not to quit (although I contemplated the thought), but to try another language out. Now I doubt this is recommended by the pros, but it worked for me. I decided to try out Python. I even went to a workshop titled Python 101 at General Assembly. Funnily enough it actually helped me grasp the things that confused me the most about Java Script. I started to see what Object Oriented Programming actually meant. And why everything is an object. I began to understand context, as well as scope. The clicks began coming in. Later on, this will allow me to understand the Ruby fundamentals faster. Now, whilst I have a better understanding, it’s not the perfect understanding. I don’t have enough experience with O O P, but at least I know the keywords to search for in Google whenever I have a question. So Python helped me get back into Java Script, and allowed me to continue the journey. Both languages went on hold as I begun to learn Ruby for Makers. Month Three is Just Around the Corner from Today So I finished that course with a basic understanding of front-end and back-end. How A P Is work and what are libraries and frameworks. Honestly, I’m really thankful for the course. It gave me a kind of T L; D R of what the Web Development World looks like. I didn’t absorb 100% of it, but it left me curious. Which leads me to why I’m writing this. I never really thought about my future until last week. There was a time where I was in a rough spot, before I decided to make some healthy life-changing choices. It was during this transition that I discovered to code. Once I began feeling well-adjusted, with this ‘coding’ thing in my toolbox, I realised: Wow. I love this. I want this to be the thing I do for the rest of my life. I finished the online course curious. I then finished a few other courses, still curious. Then I decided to take the step to join Makers. Because I’m curious. Not only of code, and what languages can do, or what apps I’ll make, but I’m curious about the future. What I will see and do. Who I’ll become. What do you think? Do you agree with all the dipping points and high passion rates? Let me know if you think I’m terribly wrong. Or let me know if you want to mix it up, by reading my previous blogpost about Ruby Modules and Mixins. Thanks for reading. Until next time. This was originally posted on my beautiful Github blog that you can find here. Want more? Follow me on: Twitter Github","['Programming', 'Makers', 'Codingbootcamp', 'Software Development', 'Learning To Code']",https://medium.com/@codelist/yesterdays-work-rewards-me-today-92d843c9e05b,1,['General Assembly'],1,4,alex,M,0.031470551299761396,0.9685294487002386
Colorado Department of Higher Education,Official Account for the Colorado Department of Higher Education emphasizing access and affordability for all. #highered #StateOfCo #edcolo,Charting new pathways with certificates – Colorado Department of Higher Education – Medium,2018-03-07 22:01:00,medium,"Charting new pathways with certificates Higher education pathways include much more than four-year degrees, and one route is short-term certificates. Typically, these programs focus on teaching specific skillsets in a year or less. At the Colorado Department of Higher Education, we didn’t have to look very far to find a success story: our own Alex Creighton graduated from a coding bootcamp last year and pivoted into a new career field. Today, Alex is an application developer in the Data and Research Division and G E A R U P, where he’s helped shore up our database. We interviewed Alex to learn more about his higher education journey. After earning a degree in art history, Alex Creighton got a certificate in coding and is now an application developer with Colorado G E A R U P. C D H E: Where did you go to get your initial degree, and what was your major? A C: I went to U Mass Amherst in western Massachusetts. I studied art history there. Where did you earn your coding certificate, and why were you interested in the program? I did a three-month intensive program with General Assembly. I chose this path because I was interested in learning within a more structured environment and also wanted to take advantage of their existing professional network in Denver — things that would have been unavailable to me just learning on my own. How were your classes structured? How long was the program? What kinds of skills did you learn? Class was from 9 a. m. to 5 p. m. Monday through Friday. We had instructive lectures throughout the day and then hands-on labs in the afternoon. There were four segments to the class, and each one included a large cumulative project at the end. We learned a range of technologies, such as coding languages, as well as different forms of professional best practice-type methodology. What was your favorite part of the program? The most challenging part? My favorite part was the projects. The prompts were usually very open, so they allowed for a variety of creative responses and solutions. I built lots of fun things that crossed the line between video games and informative applications. One of the hardest aspects was overcoming the emotional throes of hitting a major technical roadblock in the middle of a project –sometimes seemingly simple tasks became all-consuming snags. Would you recommend getting a certificate? Why? I would — yes — but only after having done your research and being honest with yourself about your level of interest and commitment. I waited over a year to be sure about my jump into technology, and even then I still had anxiety over my decision. Now that I’m on the other side, I couldn’t be happier. I’m constantly engaged by the work and am still learning every day. What impact has earning a certificate had on your career? It has afforded me a lot of opportunity — it also got me this job! Having only an art history degree before this meant grappling with a vastly different environment for employment. What advice do you have for students who can’t decide if they want a four-year degree or a credential similar to yours? I would say that a certificate such as the one I received is targeted and effective for preparing someone for a technology-related job. It is not a replacement for gaining a well-rounded education, learning to write and express oneself clearly or analyze and evaluate information. And while those things are not necessarily guaranteed by a four-year degree, there is certainly more room to explore and gain maturity in those aspects within a traditional academic environment — and those are skills that I think are demanded and appreciated universally.","['Education', 'Certification', 'Higher Education', 'STEM', 'Codingbootcamp']",https://medium.com/@CoHigherEd/charting-new-pathways-with-certificates-7456b62e0ad0,11,['General Assembly'],1,3,colorado,M,0.0,1.0
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18","JavaScript ""Call, Apply, Bind"" – J.Lim – Medium",2018-05-23 16:49:14,medium,"Java Script “ Call, Apply, Bind” J L’s Coding Bootcamp Journey #4[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”( Current)5.  Summary of Code School’s “ Try j Query”6.  Java Script “ This” — Advanced7.  Java Script “ Code Reuse” — Part 1–1: Decorators8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes“ Call, ” “ Apply, ” and “ Bind” are used to control the scope of “this. ”# Call& Apply# Bind[ Note] This blog post is written based on a lecture from Code States. Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['JavaScript', 'Codingbootcamp', 'Coding', 'Programming', 'Tech']",https://medium.com/@j_lim_j/javascript-call-apply-bind-becb07329c55,0,[],0,11,j.lim,Unknown,Unknown,Unknown
Chris Lofton,,The Problem – Impact Hub Austin | Workforce Development Accelerator – Medium,2018-05-02 00:32:27,medium,"The Problem Last week we were asked to describe the problem our venture is solving. Graduation at our San Antonio Campus, April 2018 According to a recent study, over 50% of Americans report being unhappy in their jobs. An average American will work 90, 360 hours in a lifetime. Can you imagine spending that much time doing something you don’t enjoy? According to Tech Republic, there are half as many African Americans and Latinos in tech as in the rest of the private sector. Why aren’t these segments of our population equally benefitting from the money and opportunity tech careers provide? According to the Center for American Progress, 15. 6% of Texans fell below the poverty line — $24, 340 for a family of four — in 2016. 42. 7% of those Texans are African American or Latino. According to the N C W I T, about 26% of professional computing jobs in the U S are held by women with African- American and Latina women holding only 4% of the professional computing jobs. Earlier today, I was discussing with a colleague in the W F D accelerator how the term “ Workforce Development” misses the point. Instead we prefer “ Human Development”. We’re talking about human beings and their wellbeing — food, shelter, water, healthcare, and happiness. Austin Coding Academy a great option for those who are looking for a more innovative and exciting career in technology. We’ve built a strong program and have the opportunity to help a lot of people. We have a lot more work to do and are committed to doing it right. One of our San Antonio graduates presenting his final project","['Diversity', 'Web Development', 'Coding', 'Codingbootcamp', 'Austin']",https://medium.com/impact-hub-austin-workforce-development-accelerato/the-problem-bcb916a57e08,0,[],0,6,chris,M,0.13713656176653735,0.8628634382334627
Jordan EnglandNelson,Software engineer. Journalism survivor.,Leave journalism. Learn to code. – Jordan EnglandNelson – Medium,2017-04-07 02:36:05,medium,"Leave journalism. Learn to code. Why software and journalism are more similar than you think. Note: My comments about journalism should be taken with a grain of salt. I was a journalist for many years and loved the work immensely. Good journalism helps us understand the world, and those that continue to produce it should be praised for the personal and economic sacrifices they make to keep us informed. Everyone knows that journalism is in very bad shape. Newspapers are dying, real salaries and ad revenues are declining, and the pressure to produce more content in less time continues to mount. And yet, journalists put up with these horrible work conditions because the work is fulfilling and they can’t bring themselves to join the “dark side” by taking a job in marketing or P R. As a journalism survivor who jumped ship for a marketing gig and then jumped ship again to learn how to code, my advice for disillusioned journalists is to have an open mind and broaden your search for meaningful work. Don’t limit yourself to P R or content marketing just because you already have many of the skills those jobs require. Remember that writing is just one of many arrows in a journalist’s quiver. Finding valuable information, quickly understanding unfamiliar systems, distilling complex ideas and expressing them clearly, concisely and on deadline… those skills are more transferable than your measly paycheck would lead you to believe. But rather than simply taking your soft skills and applying them to more-lucrative-but-less-fulfilling ends, why not acquire new, harder skills that will allow you to impact the world in other ways? The parallels between journalism and software engineering are stronger than you think Newspapers used to be the way that information moved around the world. Now, we have the Internet and A P Is. If writing and reporting were the skills needed to wield influence in the age of newspapers and network television, doesn’t it follow that writing code and understanding open-source frameworks would be the most effective way to enact change in the era of Facebook and Google? I can tell you that it is not easy to leave journalism. But if you understand why you got into journalism in the first place, you might be surprised to find that building software can be as creative and fulfilling as breaking a story on A1. Why journalism? If all you care about is getting paid to put words together, then yes, maybe writing ad copy or press releases is a viable alternative to journalsim. But if you became a journalist because you wanted to comfort the afflicted and afflict the comfortable, writing copy that’s not fair and balanced will feel like playing tennis with the nets down. It is a journalist’s job to inform. If you think advertisers entice, marketers manipulate, and P R agents influence, then you probably won’t like working in those industries, no matter how sparkling your copy is. Words are just a means to an end. If you don’t believe in the ideas or the mission behind those words, you won’t enjoy the journey. Of course, journalism is not the only honorable profession out there. There are myriad ways you can parlay your journalism career into other meaningful work. But there’s no reason to limit yourself to the humanities. One of the advantages of being a poor journalist is that no matter what industry you relocate to, entry-level positions are likely to pay as much (if not more) than the job you’ve held for the last 5 years with no raise. One of the many advantages of learning how to code in 2017 is you can learn for free online, gain experience coding for non-profits, or a pay $12, 000–18, 000 for an accelerated three-month bootcamp. It won’t be easy, but you’re a smart-ass journalist with a chip on your shoulder. If you can make it as a journalist in the Internet Age, you can make it anywhere. Why code? The reasons I love building things with code are the same reasons I loved being a reporter: I am directly responsible for creating (rather than selling) the core product I learn at least a dozen new things every day I work with incredibly smart people I feel that my work has an impact Personality-wise, journalists have a lot more in common with software engineers than you might think. Both groups are passionate and opinionated about their area of expertise, and both have an inflated-and-not-entirely-unjustified sense of self-importance: coders because they are paid too much, journalists because they are paid to little. Truth be told, the nail in my journalism coffin was the realization that no matter how relevant or well-reported my stories were, I could not fight the laws of supply and demand. Ultimately, there are only so many ad dollars chasing so many eyeballs. When those eyeballs were reading newspapers and paying for subscriptions, news publications could support the kind of reporting that topple presidents and inspire young people to enter the profession. Now that most people’s eyeball time is spent on free digital platforms powered by a relentless tide of user-generated content, the economic and socio-cultural influence once wielded by the owners of the printing presses has passed into the hands of technologists. If you work in print, you may have a dim view of technology and its role in shaping our future. But just because digital technology has disrupted your industry doesn’t mean that you can’t learn to harness the power of those same technologies. From problem-identifier to problem-solver During my first post-journalism job interview, the recruiter said, “ We are looking for problem-solvers, not problem-identifiers. In what ways has journalism prepared you to work at a startup?” The question confused me. Filling a large, metropolitan newspaper full of interesting, relevant and factually correct stories seemed like a pretty significant problem that journalists have to solve every single day. Clearly, this person had never worked a breaking news story, coaxed information out of a skittish source, tracked down a public document or done any of other countless scrappy things journalists do to “get it done”. I still believe that journalism is excellent training for solving problems. But now that I’ve acquired some of the Jedi powers that code affords, I can’t tell you how empowering it is to be able to have an idea and the skills to turn that idea into reality. The idea for my first full-scale web app actually came from an old source from my days as an education reporter for the Orange County Register. As an administrator for the county’s special education department, this source was complaining about how tedious it was for teachers to keep track of their students’ progress. By law, every student enrolled in a special needs program must have an individualized education plan ( I E P) that contains a list of behavioral and academic goals that are unique to that student. An I E P is a legally binding document, and parents can sue a school if it does not live up to that agreement. Since a teacher could have 10 or more students, with each having as many as ten goals, the dirty little secret was that teachers are forced to fudge the data. It is just too unwieldy to carry around 100+ spreadsheets and keep a runny tally of the progress. As a journalist, there may have been a story here: “ Inadequate technology and excessive bureaucratic demands on teachers leads to suboptimal care for students with special needs. ” I could have dug up numbers on how many times the county had been sued when schools failed to effectively monitor and enable student progress, got quotes from teachers and irate parents, and then built a story around the issue. As a programmer, I was able to learn about the challenges teachers and administrators were facing and then build a solution — a web application that makes it simple for teachers to manage goals and to track student progress in real time simply by clicking a few buttons on their phone. In conclusion… Identifying problems that code can solve requires the same insight that sourcing interesting and relevant news stories does. The difference is what you do after you’ve identified the issue. If you enjoy putting words to paper and creating meaning out of chaos, you may enjoy building software that makes the world run more efficiently. Further reading…. Click here to read my post about the I E P Goal Tracker Screenshots from www. iepgoaltracker. meteorapp. com","['Journalism', 'Media', 'Software Development', 'Coding', 'Codingbootcamp']",https://medium.com/@jordanenelson/leave-journalism-learn-to-code-64ae08745ec3,3,[],0,7,jordan,M,0.260366511103154,0.739633488896846
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 41 — For Da Love Of Da Game – conshus – Medium,2017-05-08 11:13:49,medium,"Day 41 — For Da Love Of Da Gameliner notes: It finally happened. After 8 weeks out of 12, I got my first “ Incomplete” assignment (sidenote: I did get 2 “ Exceeds Expectations” on other assignments also, just saying. haha). In my defense, it was a photo gallery built using React J S and React Router and it was the my first time using either. Although I was able to get the basics completed like showing the albums, logging in, creating albums and adding photos, I just couldn’t figure out how to get Router to show the pictures in the album. I did add some complexity by having the data persist using Firebase so that didn’t help my situation. haha The point is, that Brian, the instructor, said they design the homework assignments to really test you and be almost incomplete-able (is that a word? it’s like 6:30am and I’ve been up coding. haha). If I went through this whole intensive process and not fail at something, am I really pushing myself to my limits? At least, at this point, I’m pretty sure I can get it to work now, which I will do once I finish writing this post. Also, I had a super great time (as usual) on the radio show on Saturday. You can listen to that at k N Ow B E T T E R H I P H O P. com“ The only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. ” Steve Jobs Some of the realest words spoken. Alright, got to an assignment to complete and some reading to do. Looks like we’re going to be learning Redux. Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['React', 'Coding', 'Codingbootcamp', 'Programming', 'Hip Hop']",https://medium.com/@conshus/day-41-for-da-love-of-da-game-4ec067c6e45f,0,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
Shohei Narron,"Born and raised in Japan, working in Silicon Valley, sent back to Japan as an expat. Founder of Innovators in Japan.",Teaching Tech and Entrepreneurship in Japan – Innovators in Japan – Medium,2018-08-26 14:42:19,medium,"Teaching Tech and Entrepreneurship in Japan Fixing Entrepreneurship with Education: The dreaded bow-shake-combo…a sign of cultural progress? Source: Reuters Entrepreneurship education, from tech bootcamps to product development intensives, have inserted itself into the general vocabulary of Silicon Valley. You’d know a few people who quit their jobs to study Java Script for a few months, coming out with a new job and career if you live in the Bay Area or New York. Not so much in Japan. In fact, not at all. In a country where switching jobs is considered a risky move, where working for a startup is a sign of your inability to get a corporate job, technology entrepreneurship has taken a back seat to more traditional fields of work, stifling what creativity and ingenuity this land of the rising sun could have conjured into the world. Until very recently, students were told to study hard in order to enter good universities, get a good job, and stay at that company until they retired. There are many small reasons adding up to one gigantic system that’s been in place since the 40s, and you’ll see very quickly how each of the following bullets reinforces other points: Seniority-based promotion system The seniority-based promotion system made it so that employees were promoted based on when they joined and how old they were, with very little consideration to the actual value each employee contributed in an organization. Lifetime employment And because of this seniority-based promotion system, there was a heavy emphasis on unconditional corporate loyalty. During the post-war period of the 50s, 60s, and 70s, things were going so well that employees had very few reasons to leave your company for greener pastures (your company was most likely on that green pasture). Lack of human resources movement Due to the norm of lifetime employment, very few employees actually switched jobs, much less careers. Employees were incentivized to keep their heads down and do what they were told. And since they weren’t being evaluated on actual skill and outcome, what was the point in learning new skills or moving up in a career?“ Don’t rock the boat” So what do you do when you are stuck in one company, move up as you get older, and without much result-oriented evaluation? You quickly learn not to rock the boat, no matter how positive the outcome may be. You maintain the status quo that will allow you to move up just like everyone else. Don’t try to do a better job than your boss, or try to jump ship, or your peers will think you as an overachiever (which never goes well in Japan), out of line, showing off, etc. Anecdote: Someone I once talked to said that Japanese salarymen would rather show a 0 win, 0 loss, 10 draw result then a 7 win, 2 loss, 1 draw result, since losing at any point shows your inadequacy and history of failure. Imaging what kind of creative ideas this nurtures. These are polar opposites of what Silicon Valley and other hubs of innovation encourage people in their ecosystem to do, from failing fast, trying new things, working in a diverse environment, etc. Now, these points above are old-school perspectives from our parents’ and grandparents’ generations. And things are definitely changing — there is a burgeoning startup ecosystem across Japan, and these startups are raising billions of yen every week from investors who see the light at the end of the tunnel. But changing a deeply-ingrained perspective takes more time, energy, and advocacy than you might have imagined, especially when society at large still operates on an archaic system that doesn’t fit into today’s economy. Let’s also not forget that a good majority of the Japanese population still benefits from this system. And that’s exactly why Japan needs more bootcamps — if not to help launch the next rocket ship startup, to educate Japanese youth on the art of the possible. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Enjoy the feature so far? Let us know with some 👏👏👏!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Sample Notable Entrepreneurship / Coding Bootcamps in Japan: Code Chrysalis Founded in 2017, Code Chrysalis is a 12-week, all- English immersive coding bootcamp aimed at “building autonomous and versatile software engineers” who are ready to take on software engineering roles at up-and-coming startups. Not only does the 12-week curriculum teach foundational skills in technology, but also industry-specific tech talks to understand the rapidly changing technology environment. One week towards the end is dedicated to learning an entirely new coding language of the students’ choice in order to teach how to pick up new skills in this ever-changing environment. Kani Munidasa, Founder of Code Chrysalis, was himself a former graduate and contributor to Hack Reactor, a San Francisco-based coding bootcamp. He grew up being a fan of Japanese electronics products, but knew that it had been experiencing a steady decline in global competitiveness. He saw the lack of career change / education opportunities, which led to a lack of motivation to pursue education outside of work. In addition, the lack of English comprehension and need for precise instructions / requirements were key obstacles to Japanese software engineers leading the world in cutting-edge innovation. So instead of offering a cookie cutter coding bootcamp, he also added an English-slant, and an opportunity to instill a Silicon Valley-like mindset for his students. In short, Code Chrysalis aims to teach not only the technical skills to become a developer, but also the mindset to constantly adapt and compete in the ever-changing tech landscape, in English. Monozukuri Bootcamp ( Fab Foundry) Monozukuri Bootcamp organizer Fab Foundry Monozukuri Bootcamp is a bootcamp for hardware startups, with an added product demo day in both Kyoto and in New York. The bootcamp is sponsored by I B M ( New York) and Kyoto-based Makers Boot Camp, a hardware V C and makerspace. The idea behind this bootcamp is Monozukuri, of craftsmanship. A combination of “mono” (thing) and “tsukuri” (production), the Japanese term signifies a focus on each physical object being created at that moment in time. The bootcamp selects a small number of hardware startup teams with prototypes to run through their six-week program. As part of the curriculum, they mingle with Makers Bootcamp members and local manufacturing experts in one of the biggest craftsmanship capitals of Japan. A network of 100 prototype experts from the Kyoto Shisaku Net is part of the appeal, along with a demo day with potential investors both in Kyoto and New York. While the bootcamp is geared towards non- Japanese teams, it has taken Japan’s national obsession with small-scale, independent creators and mixed in the latest tech venture capital flare. Providing their expert network, and opportunities to mingle with investors and Japanese V C community members, while not strictly educating Japanese founders, will continue to open up people’s minds about Japanese entrepreneurship environment (especially in hardware), driving funding and talent back into Japan. Kyushu University Entrepreneurship Bootcamp Official Logo Nestled in the economic hub of Kyushu island in the south of Japan, Kyushu University’s Entrepreneurship Bootcamp aims to educate next generation leaders not only in pure startup building, but innovation in industry, academia, and government. Funded by alumni Robert T. Huang, Taiwanese founder and retired chairman of S Y N E X Corporation, it has adapted the “24 Steps to a Successful Startup” by M I T Bootcamp to educate its participants about technology and team building, as well as general leadership skills to spot and act on global opportunities. With M I T-based instructors to support their cause, participants matriculate through a 3-month prep period where they learn about marketing strategy, finance, design thinking, and other core disciplines, culminating in a 10-day rapid prototyping & business planning session, and a pitch to potential investors in the U S. What is notable about this bootcamp is its focus on teaching innovation through an entrepreneurship lens which aims to develop world leaders rather than exclusively entrepreneurs. In a mature nation like Japan, with its myriad social structures in place, perhaps there is more urgent need to create leaders to change the bureaucratic machine from the inside, rather than completely disrupting, and rebuilding from the ground up. Bonus: T E C H:: C A M P T E C H:: C A M P Founder Mako Yukinari T E C H:: C A M P is less a bootcamp, and more akin to a Netflix for technology education. From as low as ¥12, 800 (~$110) a month, students can pick from a long list of topics to learn the latest in technology, from web design to V R development. With over 10, 000 enrolled students coming from all walks of life, T E C H:: C A M P boasts 98% satisfaction. Along its users are university students who augmented their theoretical knowledge with practical skills; the President of Japan Taxi, who experienced first-hand what mobile app building entails; and an entrepreneur who, frustrated with the app a contractor built, decided to learn how to build his service himself. In addition to course content, T E C H:: C A M P offers career counseling and course mentorship, adding a social aspect to learning to keep students engaged.","['Startup', 'Education', 'Coding', 'Codingbootcamp', 'Entrepreneurship']",https://medium.com/innovators-in-japan/teaching-tech-and-entrepreneurship-in-japan-89ae228823d1,6,['Hack Reactor'],1,15,shohei,M,0.0,1.0
Roberto Busó-García,,Clocks With Hands and Elements Appended to Divs – Roberto Busó-García – Medium,2018-09-06 12:46:02,medium,"Clocks With Hands and Elements Appended to Divs Looking at the digital representation of a clock on the right hand corner of my laptop, thinking random thoughts about old Mexican songs. Tonight I need to write about process, it seems, and the time is running out. But it is not quite running, is it? A 52 suddenly changes to 53 and that’s it: no real suspense, no magic, no romance. A bolero starts playing in the old jukebox inside my head, Roberto Cantoral’s El Reloj. Wallowing in pain in the midst of the vibrant guitars of a trio, he asks a clock not to mark the hours. He begs the clock to stop time in its hands. So cool: clock used to have hands and held the inexorable passage of time in them, our date with fate could be suffered through a series of audible tic tocs and… The digital clock turns to 57. No magic, true, but same result: I need to hurry, get the assignment done, perhaps get some rest. Lucho Gatica’s rendition of El Reloj The task at hand: try and write a blog about process as I begin the journey of learning how to code in Java Script from scratch. It’s been a little less than two weeks since I saw my first line of Java Script code ever, so you can imagine how little I know. But still, writing about the process of learning sometimes does help the process of learning. We’ll see. One of the many challenges I’ve faced in coding bootcamp is how to try and carve the time to practice coding on my own, how to come up with small projects that make the process more engaging and relatable than the myriad labs we are assigned and that are designed to challenge us and push us. There’s no time to do all the work, all the reading, all the blogs — and yet, it is only by practicing code outside the framework of the program that everything comes together. In the end, I feel it all comes down to time: there is only a set amount of it, digital clocks be damned. So we must make choices. I chose to spend the time I had carved to research a mandatory blog post to practice by coding a very simple, very small Java Script on my own. Time permitting, ahem, I may even get to write about my experience doing this. So here we are and here we go. What did I do? First, I gave myself parameters. I would not work more than five hours on this: in fact, when the five hours were done I would stop wherever I was at that time. The next ‘rule’ was that I would try to do things I hadn’t done in labs and exercises yet. Not that these had to be complicated deliverables, but I wanted to learn how to do new things, whether they ended up being simple or not. Most important of all, I wanted to see if we could tell some kind of story. Lost in the woods of reduces and event delegations, I momentarily lost sight of the power and possibilities that this language provides the developer. Could we create some kind of interactive narrative in less than five hours, with less than two weeks of Java Script and no idea for a story? That would be the challenge. After setting up the ground rules, the next step in my process was to come up with a rudimentary design. In this case, I focused on the few actions we have already learned Java Script to be adept at: ‘listening’ to events from the user via the mouse and keyboard, providing information about where elements are on a screen in relation to those events and gathering information from outside sources via U R Ls. Because of the time constraint, I knew that the look had to be bare: not a lot of time for styling, interface design and coding logic here. So I decided to create an app with no real instructions that waits and reacts for the user. The idea would be a blank screen ( I did change the color to a dark green) waiting for the user to interact with it. If the user hit any key, the app would provide hints guiding the user to communicate with the mouse. After adding the keypress event and asking the browser to ‘listen’ and react whenever a key was pressed, I was not satisfied. Yes, it was clearly the start of some kind of utterly simple interactive experience. But beyond that, whenever we showed the text (or appended the H T M L element to the div, if you’re in the mood for that sort of language) it just popped up on the screen. Well, that’s kind of rude, I thought. Wouldn’t it be much nicer if we could fade in and fade out the text from the screen? How would we do that? Calling Google and Stack Overflow, phoning my friends! And of course there is a way. There are many ways. First I looked at how to do this using vanilla J S with help from an unknown friend Codepen who goes by the name of istref: Istref’s Solution for Fade Out Well that’s cool. But it seemed like a lot of work for something we’d be using all the time. So I kept looking and bumped into the j Query library and its animation effects. After reading through the documentation, I went ahead and installed j Query for this project and voila, with a simple fade In() I had what I needed. Actually, though I wrote that short paragraph in about fifteen seconds, it took me a good half hour to research the different ways of fading in and out elements in Java Script and then reading up on j Query, installing it and getting the fade In() and fade Out() to work properly in the context of my small app. But it was well worth it! Good: we have the app telling the user what not to do and not being visually rude about it. But what happens when the user does click the mouse button? Does it have to be in a specific div, in a button, in a span? We started an interactive narrative by introducing a trial and error dialogue, but then what? I did not want to use buttons like we had before, I thought it would be cool to experiment with expectations a little bit. If a used clicked on the screen, anywhere on the screen, nothing should appear, I thought. Perhaps it could rain. I had read somewhere that there were various A P Is for sound libraries, music and audio effects. And of course Java Script must have ways of handling audio. So I went back to Google…and Google came back to me. After reading a host of different ways of handling audio, I landed on Google’s Sound Library inside the ‘ Actions on Google. ’ Using the H T M L Audio element in your code, you can then access this A P I of sounds via U R Ls that lead to specific sound effects. I found a nice rain effect, got the U R L and then created a new Audio element in my program, assigning it to a variable. Once we had that, we only need to . play() and . pause() to activate the sound or song. Pretty great. Could not get to capture the sound in the video. Just imagine the rain. Part of the process of learning how to code by doing is spending (investing? wasting?) a ton of time looking for the wrong answers in the right places or for the right answers in the wrong places. This happened to me many times and particularly in this case. After having figured out how to include the rain sound effects in the app, I wanted the sound to — yes — fade in and fade out. I found out that it was not that simple(at least for me). After looking into various different solutions for this and breaking the code in many ways, I gave up. Part of the process, I guess. Just like the previous two examples, I continued to explore new ways of doing things with the next few elements in my app: showing elements wherever the mouse was clicked, making a specific part of a created element ‘clickable, ’ disabling functions during time Outs. Some of them worked, some of them did not. But those that did not taught me even more than those that did. As you may sense, the time has come for me to stop writing and start coding again — yet here I am, looking for an ending. The rhythm fails me and closure teases me from a distance. The hands of that old clock ain’t stopping for me, for this blog post or for anything else. Oh my. One day I may be able to sit down and write a proper technical blog, perhaps.","['Web Development', 'JavaScript', 'Codingbootcamp']",https://medium.com/@robertobuso/clocks-with-hands-and-elements-appended-to-divs-9de8cc8b7399,0,[],0,10,roberto,M,0.007688553723193651,0.9923114462768063
Daniel Heron,https://about.me/superheron,Coding Bootcamps in New Mexico – Deep Dive Coding – Medium,2017-12-04 22:44:07,medium,"Coding Bootcamps in New Mexico With a population just over 2 million people, I notice that New Mexico has an emerging tech scene. After moving to Albuquerque, I started working at Deep Dive Coding at the beginning of 2017, I have met a lot of developers working remotely for both large and small tech companies from their homes. There is a hidden industry of remote developers learning to code and working remotely while living cost effectively in New Mexico. The coding bootcamp is a growing industry. In the last 5 year of its existence, the number of students has increased five times. Larger educational institutions can be slow and take a few years to change curriculum, which leaves the industry teaching and working in old and deprecated systems. If a city is trying to drive innovation in a growing tech industry, it will not do so with basic computer science education. With that said, bootcamps are not a replacement for traditional C S degree. If you can afford to do both, do a traditional C S degree and fast paced coding bootcamp to get both the theoretical knowledge and hands-on practice required to really excel. Python + Machine Learning Workshop at Deep Dive Coding If you choose to do a bootcamp, you should consider taking it in a city away from your hometown. If you are interested in taking one in New Mexico, here are a few things to consider and list of available bootcamps. New Mexico is more cost effective. When choosing a program remember to factor in the cost of living; and New Mexico has one of the lowest costs of living in the U S. Price transparency is important, don’t forget to calculate food, housing, transportation, etc. Go away for bootcamp. When my friends joined the Military, they went away for bootcamp. Why not do the same for developer bootcamp? Our students from other cities and states mention that it helps them focus on the task at hand: learning to be a programmer. You also have the chance to get to know other budding programmers and a new market different than your hometown. Experience a unique culture. Thanks to it strong Native American and Hispanic cultural roots, New Mexico is very unique in the United States. There are pueblo style homes, and red and green chile everywhere. The dry climate can take some getting used to, but it’s a place unlike anywhere else to experience while you are training for 3 months. Coding Bootcamps in New Mexico Deep Dive Coding (formerly Dive Dive Coders) Established in 2013 by a local entrepreneur, acquired by the local community college in 2015. Focus: Fullstack web development, recently expanded to other verticals including Java enterprise software and Android mobile applications. Unique Traits: First coding bootcamp in New Mexico, accepts veterans benefits, offers housing, college credit and child care. Cultivating Coders Established in 2016, formed by alumni of Deep Dive Coding. Focus: Working with high schoolers and remote under-served populations Unique Traits: Great work cultivating more diversity, especially with local Native American reservations, provides mobility of when/where the bootcamp is conducted Parallax Code Academy Established 2017 by local developer, Never quite took off Focus: i O S development Unique Trait: Formed a local mobile development shop called Pixegon, partners with Cultivating Coders If you know of any other coding or tech bootcamps, feel free to message me. @superherondan on ( Twitter). I’ll try to keep this list updated!","['Programming', 'Albuquerque', 'New Mexico', 'Codingbootcamp', 'STEM']",https://medium.com/deep-dive-coding/coding-bootcamps-in-new-mexico-9ef092cab8cc,6,['Cultivating Coders'],1,0,daniel,M,0.004259946531406404,0.9957400534685936
Amber Wilkie,"Software developer: Ruby (Rails), Javascript (React). Photographer. Professional dabbler. Entrepreneur at heart.",Bootcamp Week Eight: Big Group Rails Project – Craft Academy – Medium,2016-10-01 11:03:12,medium,"Bootcamp Week Eight: Big Group Rails Project After last week’s Javascript / Angular J S / Ionic project, it was lovely to get back to Ruby and Rails. As a group, we are building Slow Food Online, a marketplace for hungry folks who want to order dishes from various restaurants in their area, and have the food delivered. Not unlike the real-life Foodora! We started the week with a “design sprint”, mapping out databases, sketching Lo Fis and filling up our to-do list ( Pivotal Tracker) with scads of features and chores. We’ve discussed teamwork, pair programming and dealt with some interpersonal conflicts and challenges. You know, all the actual hard stuff. ( The coding bit is the easy part. ) The app is coming together. As of Friday afternoon, we have Customers, who can view Menus, which hold Dishes, and add them to their cart. Soon enough we’ll have Restaurant Owners, who will be the only ones to create those Menus and Dishes. It doesn’t look like too much yet but I suspect by the end of the weekend we’ll have some actual functionality in place. My attention was split this week as I came on as a mini-contractor for Craft Academy to work on the English language section of their website. I’ve included some screenshots below. The new english version of Craft Academy — https://craftacademy. se/english I’ve been pestering Thomas, the owner, to put up an English version since my first day at the bootcamp and he finally took charge on that, by hiring me to write the copy! Bootcamp Alumni presentations I quickly realized I wanted to change the entire site and was given the flexibility to do it. So I re-wrote all of the copy, changed sections, and removed lots of unnecessary text. ( And I should certainly also note that I didn’t do any of the design on this — I just tweaked what they already had and used their styles to fit what I wanted to say. ) It was fun and exciting (marketing and writing are two of my other interests), but took my attentions away from coding. On Friday afternoon when I could finally spend a good chunk of time writing code, it felt really good to get back in the groove. Linktastic The best things I saw on the internet this week (plus mopping up extras from all the other weeks I kept forgetting to do this): Code Newbie: Scrum Master I’ve been listening to the Code Newbie podcast since I started this bootcamp and it’s a *wealth* of tips, information and inspiration for new coders. Highly recommend! This episode is all about Agile and understanding the terminology, but whatever your (new) coding interest, Saron’s got something for you. The newest episode about the Mother- Son team was really great for folks just starting bootcamp. Oh Shit, Git Tongue-in-cheek but actually helpful advice for people who fucked up something in Git but don’t know how to Google for the problem. Indie Hackers: Design Basics Super-basic design guidelines for folks who “don’t do” design. Short read, invaluable. How to find time to be a better developer Javascript vs. Ruby (video) Funny things for very nerdy people.","['Programming', 'Web Development', 'Codingbootcamp', 'Ruby on Rails', 'Copywriting']",https://medium.com/craft-academy/bootcamp-week-eight-big-group-rails-project-9d89c6a677f6,0,[],0,1,amber,F,0.9973576287684124,0.0026423712315876606
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 21 — (Rush02) – Mike Brave – Medium,2018-09-09 23:20:44,medium,"42 Piscine Day 21 — ( Rush02) Edit: This is part of a series that culminated here, Next post. Previous post. I find myself listening to happier music today, things with ukulele’s, things with a triumphant finish, things about returning home and living a simple life. It’s not just me more optimistic today either, I see other people with Elton John on their playlists. The mood seems more optimistic and relaxed than previous days would have let you think possible. My one group member for the rush project is a guy who I really like, funny, great storyteller, and smart too, really knows his stuff when it comes to code. He had previously told me he wanted to work on it, well I haven’t seen him all day, and barely saw him yesterday, I looked at his hours and he has a trend of doing less hours on the weekend, significantly so. and I get it, I basically took yesterday off too, physically here but mentally elsewhere, so I get it. My other group member even less than him, so… I don’t think this project is getting done. Not for dislike of people or lack of skill but rather due to scheduling conflicts. A lot of people are absent today as well, probably taking the day off as it is the weekend. I count about 70 people in the lab right now at 4 P M. Some of us are working on projects, some studying, others procrastinating with phone games, others watching U F C fights on one half of the monitor with terminals filled with code on the other. Most are at least making an attempt at being productive, but there is still a lingering feeling of procrastination. One of my other friends was showing me the games to get into the Amsterdam piscine equivalent, I may have to later make another post later listing all of the other affiliate programs and schools. I know in our slack we have had contact from Russia’s 21 since I’ve been here. I wonder if the school takes advantage of setting up an alumni network. The college I got my degree from was not prestigious, no not even close, but the way they approached setting up an alumni network was what made them so successful at placing interns and jobs post graduation, it was their one killer advantage. The more prestigious schools like Harvard do the same, just also with the added bonus of their reputation, why not both? Setting one up between the affiliate schools would be one step short unstoppable, want an interview at google or facebook, “talk to harry who was in the program two years ago”. If it doesn’t exist yet, it should. If I get in maybe I’ll help facilitate setting it up. So far though it hasn’t been mentioned. In truth even being here I’ve had minimal interaction with cadets or prefects, perhaps I could have been more proactive and changed that but I didn’t. The website is still the best source of information, and even that leaves a lot of questions unanswered. Ironically I was offered two jobs today, one for my previous Graphic Design work and another for my blogging about the piscine. It was validating, but ultimately made me laugh and say something along the lines of “ I guess I’m better at marketing than coding”. Maybe I’ll have to utilize my past skills to pay the bills as I continue to learn. I have this crazy idea to someday be one who bridges gaps for others, you know the team lead who can translate between management, marketing and tech. Use my past as a designer to better understand a problem before we start writing code, to better work with the clients, speak to our users, flesh out the specs, prototype better, faster, more efficiently. But all the while still being the guy with a strong tech foundation. I forget the name of the title but the one who goes between departments, knows how all of them work and facilitates your teams ability to get things done. Helping to shape the things we make, speaking with and for all the stakeholders involved, promoting understanding and best practices. In short helping to help a team make awesome shit. A guy can dream anyway. I do at least.","['Startup', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-21-rush02-ee827444d3f6,2,[],0,51,mike,M,0.003228654060934749,0.9967713459390652
Dave Hoover,Solidity Squirrel,My Journey through Dev Bootcamp – Dave Hoover – Medium,2017-08-09 04:22:16,medium,"My Journey through Dev Bootcamp Note: This is part 2 of my recollections of my Dev Bootcamp Journeys. You can read part 1 here. In 2010, I was in Malmö, Sweden to speak at Øredev. As I tend to do at conferences, I’d quickly worn myself out, and had retreated to my hotel room for some rejuvenating solitude. It was in that little hotel room that I re-read one of my favorite patterns from A Pattern Language. The “ Network of Learning” pattern asserts the following:“ In a society which emphasizes teaching, children and students — and adults — become passive and unable to think or act for themselves. Creative, active individuals can only grow up in a society which emphasizes learning instead of teaching. ” And then advocates:“ Instead of the lock-step of compulsory schooling in a fixed place, work in piecemeal ways to decentralize the process of learning and enrich it through contact with many places and people all over the city. ” I had read these same sentences in 2003, but they finally struck a chord in 2010. These became my internal rallying cry as I gradually found my way into my role as one of Dev Bootcamp’s co-founders. In 2012, just a year before Dev Bootcamp Chicago’s first students arrived, I realized that my life’s purpose to “decentralize education” wasn’t actually a great purpose. A T E Dx talk by Simon Sinek inspired me to ask myself, “ Why? Why do I want to decentralize education?” And the answer came to me immediately: “ To unleash latent human potential!” This motto helped guide me into a situation where I believe I maximized my opportunity to make the biggest improvement on the most people’s lives (while still providing for my family). That situation was launching Dev Bootcamp Chicago. Emphasizing learning instead of teaching Between October 2012 and April 2013, I found six midwestern software developers willing to give teaching a shot. But I preferred not to emphasize the teaching, and instead focus on the learning. It was a struggle to balance these two concepts. Great teachers can make a huge positive impact on people, and in my experience, great teaching is synonymous with facilitating learning. Yet, less-than-great teaching can still be sufficient, as long as learning is happening! The learning is literally all that matters. The teaching is just a means to an end. And by the end of the 9 weeks, we expected the students to be learning faster than we could teach. Out of the network of wonderful people I’d become connected to over the first dozen years of my tech career, I hired Mike Busch, Jen Myers, Kevin Solorio, Alyssa Diaz, Abi Noda, and Nate Delage to help our students learn how to develop software professionally. All six of them were coming from full-time software development roles, and none of them had any full-time teaching experience. And yet, with the help of Tanner Welsh (visiting Dev Bootcamp San Francisco teacher), Alex Botsford (program coordinator), and Elliott Garms ( Chicago co-founder, employer liaison), this group of people formed the most inspiring learning environment I’ve ever seen. Bringing your whole self Countless students have told us that Dev Bootcamp didn’t just teach them how to code, or launch their career, but the program actually made them a better version of themselves. I could tell dozens of stories to illustrate this, and I’m afraid to tell any of them and exclude others. Perhaps I can just point at Abraham Sangha, a 2013 grad who went on to speak about virtue at a programming conference. Thinking of Abraham, I’m reminded that one of the magical things about the culture we created was an invitation to truly be yourself while you were at Dev Bootcamp. Abraham already knew a lot about virtue and public speaking before he walked in our door. After he walked in the door, we invited him bring his whole self into the space, to tell us something quirky about himself. He felt safe enough to do that, integrated his existing expertise into his new tech skills, and our community became better for it. Students as Teachers Our first cohort, the “squirrels”, arrived on April 22nd, 2013. Three weeks later, the “foxes” arrived. On June 3rd, the “otters” arrived and then the space was finally full! We wanted our students to feel ownership over the space, and co-creators of the program with us. We were extremely fortunate that our “squirrels” took that seriously. The staff didn’t work weekends, but the students nearly always did. And the first weekend that the “foxes” were at Dev Bootcamp, the “squirrels” created a Weekend Pairing board, later entitled Pairing is Caring. The “foxes” could sign up for time with a “squirrel” to get help. It was spontaneous, inspired, and beautiful. And as far as I know, every Chicago cohort has continued paying that original squirrely gift forward. Converting skeptics One of the most humbling aspects of launching Dev Bootcamp Chicago was the skepticism I heard from software developers that I looked up to. Most notably, Dave Astels and Corey Haines were initially turned off by the concept of launching people’s careers with only 9 weeks of on-site learning. I had spent 12 years growing my career, and had earned some respect in the community. It was a tough blow to the ego to have these two great technologists think poorly of my new endeavor. But my purpose was intact. I was convinced that Dev Bootcamp unleashed copious amounts of latent human potential. So I hoped that it was just a matter of time before they’d see its merits. A year later, Dave became a strong volunteer mentor for us, and posted about how his mind was changed. ( Shout out to Kevin Solorio for working on winning Dave over. ) Corey eventually got so involved that he spent three weeks with us as a visiting teacher. It was gratifying to watch these two appreciate the same things I did about Dev Bootcamp when I first saw it in action. I should also take a moment to note that we had a legion of volunteer mentors, and eventually another legion of alumni mentors, who spent countless evening hours with our students. The Chicago developer community has mentoring in its D N A! Establishing a Holacracy In late 2013, the leadership of Dev Bootcamp assembled in Tiburon, California to begin a new chapter for the company. At that retreat, we:formed the leadership team that would launch Dev Bootcamp N Y Chired Jon Stowe to replace Shereef Bishay as our C E Orebooted the company using a new self-organizing governance model called Holacracy This was a lot for the company to digest all at once. While 2014 was another great year for Dev Bootcamp Chicago’s students, it was a hard year for the company. Learning how to use Holacracy effectively takes significant time and effort. We eventually got the hang of it, and I grew to appreciate the clarity & autonomy it provided, and its processes for resolving our tensions. But it was a hard road for many of us, particularly for our new C E O and our new N Y C team. The complexity of their jobs alone was daunting, but to add a new governance model to that mix was extremely frustrating at times. Dev Bootcamp at the White House I had the privilege to represent Dev Bootcamp in a White House initiative called Tech Hire. It was an incredible experience, giving me the opportunity to travel to Washington a half dozen times in 2014–2015. I spent time with White House advisors and and other bootcamp leaders to help push the initiative forward. I could tell some fun stories here, but nothing compared to getting to be there and listen to President Obama talk about the opportunity that coding bootcamps represent to our country. Losing control In June 2014, Kaplan acquired Dev Bootcamp. I don’t actually know what I’m allowed to say about that at this point, so I won’t say much. I will say that Kaplan and I eventually disagreed about how to expand the company, and eventually that disagreement led to me fading into an advisory role in mid-2015. Looking back now, I don’t actually think I had the right approach. I do believe my approach was less wrong than their preferred approach. Regardless, I don’t think Dev Bootcamp would have survived with either approach. I have more to say about how Dev Bootcamp could have survived, and my hopes and dreams for coding schools of the future. To be continued…","['Programming', 'Codingbootcamp', 'Coding', 'Education', 'Learning']",https://medium.com/@davehoover/my-journey-through-dev-bootcamp-f326a6788980,2,['Dev Bootcamp'],1,18,dave,M,0.0017823361110676818,0.9982176638889323
Jade Seravla,,"Sun, Sea and Software Development – Jade Seravla – Medium",2017-08-10 00:03:32,medium,"Sun, Sea and Software Development I had always been curious about tech and mystified about how some people could just create cool web apps or understand A I. In my previous employment working for a telecoms company, I found myself not only wanting to know where to find a feature in our app but H O W to create that feature. The Techy’s would gladly spend their lunch times explaining intricate details to me that sounded like rocket science in Japanese, but made me want to try harder to understand all of it even more! I later was lucky enough to take a sabbatical and travel the world for a few months to ponder how I would enter this programming world. During my travels I’d often start conversations with people in my hostels, or on public transport or on the beach ( I’m sounding like a stalker, but I’m not really!) and I’d start asking them what they did etc. A lot of them were remote workers and a high percentage of those were programmers. One of my friends I reunited with in Thailand gleefully showed me his work as we spoke about programming and I fell in love with the idea of me becoming a coder more and more. After gaining an amazing tan and a few more stamps in my passport, I had a few options:1- University: But a computer science degree would be expensive, time-consuming, and meant I wouldn’t graduate until god knows when. 2- Self- Learn: There is a ridiculously large amount of information out there, but I can wouldn’t know where to begin!3- Bootcamp: I love the academic structure of having a course to follow, I love people and there would be more here than in my house alone coding, and it wouldn’t take me forever to learn if I put all my time and effort to really achieve this. Option 3 was by far the best option, and Makers was where I decided I would complete my training. I had come to have a little look round before even submitting an application and fell in love with the place instantly. People looked happy, and there was a warm and friendly atmosphere as soon as I walked in. This coupled with its great reputation and success at turning anyone from any walk of life into a Developer sealed the deal for me. I went straight home after my visit, and 3 days after I had arrived home from months travelling, I decided no time was better than the present. I applied.","['Programming', 'Makers', 'Travel', 'Codingbootcamp', 'Software Development']",https://medium.com/@jjadeseravla/i-want-to-be-a-programmer-abfe7e99a03a,1,[],0,7,jade,F,0.9374173337974243,0.0625826662025757
Katie Knecht,Design/Developer 💻🎨,What to do when you’re stuck on some code – Katie Knecht – Medium,2018-03-11 17:27:55,medium,"What to do when you’re stuck on some code Research, research, research! If you don’t know what you’re doing wrong, how can you fix it? Youtube, Google, all of the internet’s fine ammenities. Repeat, repeat, repeat! Repeat the problem over and over again until you get the concept. Then try to figure out what and why something is wrong. Don’t be afraid to ask for help! Ask coworkers, fellow students, mentors, anyone in your professional circle on what you’re having trouble with. Walk away from it! Sometimes when you get frustrated, it’s easy to get angry with yourself or the problem, so it’s better to walk away or take a break and come back with fresh eyes. Just keep swimming! Never give up and keep trying!“ Perseverance is failing 19 times and succeeding the 20th. ” — Julie Andrews","['Life Lessons', 'Coding', 'Codingbootcamp']",https://medium.com/@katieknecht/what-to-do-when-youre-stuck-on-some-code-66736d166e6f,0,[],0,10,katie,F,0.9978914988105348,0.0021085011894651
Sawyer Merchant,,The Importance of Refactoring in TDD – Sawyer Merchant – Medium,2016-11-07 15:07:43,medium,"The Importance of Refactoring in T D D The first code I wrote using Test Driven Development was off somehow. It seemed like T D D’s prescription for writing the simplest solution to get the test to pass pushed my code in a direction that it would not have taken if I were working on the problem with the end in mind. For all the planning that was going in, the code coming out seemed to not look well-planned. Realizing what I was doing wrong helped shed light on two points about learning T D D and Agile that I wanted to share. First, a stripped down, super simplified summary of Agile Test Driven Development: Plan out what needs to be accomplished Break up the plan into pieces that each can be accomplished a reasonable time frame Prioritize those plans Take the first plan and break it up into smaller pieces. Then for each of those smaller pieces: Write a test Run the test to make sure that it fails Write the simplest code possible to get the test to pass Run the test to make sure that it passes Refactor My problem was paying too little attention refactoring. Conversations with other developers starting out make me think that this is not uncommon. Misunderstanding resources like this one might be reinforcing this mistake: This belongs to @scottwambler at agiledata. org and it is the first thing that comes up when I google ‘ Test Driven Development’ [posted with permission from the author] Related to under emphasizing the refactoring step is misunderstanding the purpose of writing a too-simple-to-be-useful first pass. Diagrams like this one above and other explanations gave me the impression that the emphasis should be on moving quickly… get your test to pass and get on to writing your next test. To Scott’s credit, at agiledata. org this diagram is followed by the forumla that helped shove me toward understanding: T D D = Refactoring + Test First Development Once refactoring’s role in the process began to dawn on me, the purpose of the too-simple-to-be-useful first pass became clear: The first pass is just to test the test. I am sure I may have even read this somewhere before, but it took getting stuck to help it make sense. Now I keep in mind while writing the first pass that the code will likely change or be replaced completely. After refactoring, your test has now failed once without a solution and passed twice, once with a stupid simple solution, and once with one more inline with what you are trying to accomplish. You can now have confidence in this test and forget about it unless it fails. If you had instead tried to get the test to pass first time with an elegant solution, you may have overlooked a flaw in your test’s design. This becomes more evident as the number of test increases, and leads to the second point about the refactoring phase: Refactor everything that needs it, not just the code that helped pass the latest test. I was stymied by my love of every piece of working code and my fear of breaking anything, when I should have realized that my tests now free me to experiment and be notified (thank you guard!) if I break anything. A properly scoped eye for refactoring while practicing T D D involves considering all of the code that has come before, and any that will be needed to implement the very next step. A great article on what to test by @christiancarey1 can be found here.","['Software Development', 'Tdd', 'Learning', 'Codingbootcamp']",https://medium.com/@SawyerMerchant_46940/the-importance-of-refactoring-in-tdd-a1543ccaba8a,0,[],0,2,sawyer,M,0.17300846937523015,0.8269915306247698
Jacob Moore,,Day 60 — How to send a proper(?!) follow up email after a phone interview,2017-10-06 23:58:53,medium,"Day 60 — How to send a proper(?!) follow up email after a phone interview Whenever you interview it’s customary to send a follow up. If it’s in person sending a thank you card is basically awesome. Everyone loves getting mail. Even sending a thank you email afterwards is super important. But what about phone interviews? I say yes. Do it. It shows you have an avid interest in the position, want to show appreciation for their time, and it’s just the nice thing to do. So. What should you actually S A Y in a follow up email? Without even looking it up I can type a general email that would be appropriate: Hi ( I N S E R T N A M E), Thank you for the opportunity to talk about (some position) with me! I greatly appreciated the time away from your work to go over the position, answer my questions, and consider me for the role. I took a lot out of our conversation and I look forward to talking more about the position. If you have any additional questions for me that I could answer please let me know. Again, thank you for the time! Sincerely, ( Your Name) Cool. That all works for nearly every job known to mankind. You made it personal. Gave appreciation for their time. Showed that you thought about the conversation and left it open for them to follow up with you. O R You can do what I did because…why not? I know what you guys are thinking…great…. the follow up email… It’s professional courtesy to follow up so don’t hold it against me. You can, and should, hold it against me for using an animated gif from the prequels. I really appreciate the time and the chat this afternoon. I love the idea of the apprenticeship and I’ll eagerly watch for an update about the position, but not too eagerly as I don’t want to appear too needy. Anyway thanks for considering me for the apprenticeship. I’d be honored to be the Chewbacca that never gets a medal. So…choose wisely. Probably best to go with the first one.","['Interview', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-60-how-to-send-a-proper-follow-up-email-after-a-phone-interview-fa41beabff97,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,My Thinkful Halftime Report – L.J. Yockey – Medium,2017-06-10 20:10:20,medium,"My Thinkful Halftime Report I cannot believe that I am already 3 months into the 6 month Web Development program at Thinkful. I’m very happy that my mentor, Rachel, encouraged me to write about my journey! When I started, I had only 2 repositories on Git Hub, and I hardly knew how to use them. Now, I have 34 (and counting!). Of my 403 contributions in the last year, only 5 of those were pre- Thinkful, but why tell you when I can show you: Clearly, projects have been a big part of my journey at Thinkful. Here’s a recap of what I’ve done up until this point: One of my earliest challenges was to add various C S S layouts to some starter files. Part of the challenge was to limit myself to a certain amount of time. I cringe sometimes when I look at the header of the position exercise, but I want to keep it there so that when I look at more recent projects, I can see how much I’ve grown. Next were projects like Greg’s List and Analog Sea. In both projects, I was provided with a design with specs from which I could build and style my own page. This project was crucial to my confidence in the idea of becoming a developer, as I felt much more comfortable developing something that someone else had designed vs. coming up with a design myself. Next was a challenge on responsive C S S in which I built a C S S file for a responsive grid layout. This is was first (and only lol) time that I made the grid myself instead of using Bootstrap. Codecademy taught me to use Bootstrap without explaining how/why it worked the way that it did. This challenge made me more understanding and appreciative of Bootstrap. Now that I’m a little more comfortable with C S S and the grid system, I may build my own reusable grid. css file to make my apps load more efficiently. #respect Next were a couple of Java Script drills: Text Analyzer and Shopping List in which I had to add some of the Java Script to the starter files. Considering how much I love Java Script now, it’s kinda funny to think back and realize how badly I struggled with array and object methods. Now, I love arrays and objects! Awww I gained more comfort with objects after working on the Disneyland Quiz, the text-based Quidditch game (side project not for Thinkful) and the basic You Tube A P I, which I talked about in one of my previous posts. These projects gave me the basic level of confidence I needed to start working on my first capstone: Kitty Opinions. From Kitty Opinions Once I finished my capstone, it was time to move to backend development. I learned about Nodejs/ Express, Mongo D B/ Mongoose, S Q L/ Sequelize, and Mocha/ Chai testing. I did several projects during this time, but I was the most proud of the blog app using Sequelize as it was my first time building an entire backend app from scratch without any starter files. All of this led me to my next Capstone: Hospit Alert. Hospit Alert was the perfect summary of everything I’d learned up until this point. Some things that I thought would be easy proved to be quite challenging and it took me longer to complete than I had hoped. I submitted the project yesterday and was notified last night that the project would likely be approved. With this weight off my shoulder, I’ll be able to move on to the next subject: React. I still can’t believe how much I’ve learned in a short amount of time! The support has been amazing. I’m very happy that I chose to take my education in web development more seriously by enrolling in a program. I feel much more confident that I will be able to get a job soon! So topical!!! Thanks for reading! T L; D R — Things are going pretty well at Thinkful and I’ve learned a lot.","['Web Development', 'Codingbootcamp', 'Coding', 'JavaScript', 'CSS']",https://medium.com/@Ljyockey/my-thinkful-halftime-report-80cecbf3ed30,1,[],0,9,l.j.,Unknown,Unknown,Unknown
Rutherford Ejimonu,"ITSM,ISTQB. Frontend Web Developer,Tester,SEO Specialist and lover of everything Creative.","Coding is No Beans — One Week of Fun, Work and More Work At LearnFactory Nigeria",2018-05-06 12:14:33,medium,"Coding is No Beans — One Week of Fun, Work and More Work At Learn Factory Nigeria Learn Factory Interns I first learnt about Learn Factory Nigeria through a Techpoint article about tech development in the Southeast and Aba in particular. This was around second week of December 2017, which coincided with the first major tech show in Aba “ Aba Startupgrid. I planned to attend the event but missed it by a day as I got into Aba late. But the event aroused my interest about what was happening in Aba tech scene. As fate will have it, I stumbled upon a Techpoint article while scrolling through my phone inside a keke on my way home from an errand earlier in the day. Reading through the article, I learnt more about Startup South event and then some notable names in Aba tech scene, one of which was Chibueze Ukaegbu’s inspired Learn Factory Nigeria. I was so impressed with what I read that right inside the keke, I began googling “ Chibueze Ukaegbu” and Learn Factory Nigeria. Getting home, I mentioned it to mum, refreshed and headed back towards Brass junction ( a major bus-stop along Aba Owerri Road), Aba to start a tour of my newly discovered Aba tech scene. My first point of call was Learn Factory Nigeria. I spent a considerable amount of time with the manager Mr Matthew, who gave me a download of things happening within the space and their plans for 2018. I took a quick mental scan of the surroundings and was quite impressed with what I saw and decide there and then to be part of their future. This was at the back of my mind as I made my way back to Lagos after the holidays. Today I’m part of Learn Factory Nigeria 2018 Interns, on a six months journey to groom master software craftsmen and women. In the past few years since leaving school, I have found myself working on another side of I T which involved me building websites with mainly Content Management Systems ( Word Press ) aside working on S E O and Content Development and Marketing for Doers Technologies. At the last count I have worked on over 30 Websites till date; all using C M S which is all about to change with Learn Factory Nigeria 2018 Internship Program. So far so good and the signs are there for what lies ahead of all of us in this journey. The interns First week at Learn Factory 2018 Internship have been fun, work and more work. It has been a whirlwind experience listening to the likes of Aniedi Udo- Obong, the Google Program Manager, Developer Ecosystem for Sub- Saharan Africa, Daniel Chinagozi, the founder of Innovation Growth Hub, series of life changing tips from Eric Thomas and Steve Harri’s Life is a week, who himself called in within the week to speak to us about our journey into discovery, performance and mastery. From listening to Steve on Rhythm 93. 7 every evening as I journey back from work at Lagos Island to now seeing him call in and us asking him questions directly, I mean how can one describe that? Steve Harri Calling In During this journey, we will be covering the following Month 1 — Introduction, Tools Setup and Core J S Month 2 — Building U I With React Month 3 — Node. js, Express, Graphql, Mongo D B Month 4 — Mobile development, A W S and Google Cloud platform Month 5 — Desktop development and Visualization Month 6 — Alternative J S Frameworks and Final Project This first week, we have gotten our hands dirty with Linux, Git, H T M L5 and Bootstrap. This was to reinforce all that we leant via the program pre-requisites and covering other concepts along the way. As a Microsoft Windows person, I wasn’t certain how the transition to Linux environment will turn out, having not worked with that platform before, neither have I really put Git Hub to its proper use. It was a bit scary for me. All these have been put to rest by Learn Factory’s amazing team. Now aside from the concepts of whatever I might have known previously about Linux environment ( Ubuntu) and Git ( Git Hub), these I have taken a bit further by putting those concepts into practical use. It’s obvious that the journey will get tougher as we enter another week of coding and character building. It will be a week of sleepless nights ( in the voice of our Chief Code Smith Chibueze Ukaegbu ) but as we all know, the proof of desire, is in the pursuit. For me, it’s time for sacrifice and time to pursue my desire.","['JavaScript', 'Coding', 'Codingbootcamp', 'Learning To Code', 'Full Stack Developer']",https://medium.com/learnfactory-nigeria/coding-is-no-beans-one-week-of-fun-work-and-more-work-at-learnfactory-nigeria-3747dff569b0,2,[],0,199,rutherford,M,0.0,1.0
NEXT Academy,"We are South East Asia’s best tech school focusing on coding, marketing, data and design.",Let’s Get Started On How To Build An App – NEXT Academy – Medium,2018-03-07 10:52:46,medium,"Let’s Get Started On How To Build An App Computers have made our lives easier, from simplifying bill payments to safeguarding sensitive information. The internet has taken this one step further and provided equal access to everybody. Now, anyone from anywhere in the world can download or build an app. In fact, let’s explore how to build an app. But before that, a quick introduction. There was a time when the most popular computer softwares were M P3 players and file compressors. Those days are long gone, along with Geocities and Napster. But apps have since evolved, and today you can get apps of all kinds that do things you never knew you needed. Examples would be apps that convert D O C files into P D F, or image optimizers that help your pages load quicker. This excludes other wacky apps such as Flappy Bird, a frustratingly simple game, and Pointless Button, which does exactly what its name says. The Big ‘ Why’ The reason for building apps can vary from person to person, but it mostly ties down to earning an income or wanting to solve a problem. Some companies have managed to do both, examples being Uber, Airbnb, and Whats App. Of course, the highest priority of learning how to build an app is technical knowledge itself. This means knowing a programming language. It’s a very individual choice, and it depends on the app you want to build as well as which one feels most intuitive to you. The rest relies on elbow grease. It may seem daunting, but when everything is broken down into manageable chunks, building an app isn’t as far-fetched as it seems. To give you an idea of the thought process behind this, we’ve asked Er Whey, our resident developer, to break down the steps he’d take to create an app that acts like Snapchat or Instagram Stories. p. s. Er Whey had been through our Full- Stack Web Development Bootcamp years back. Getting Started Of course, before you start building an app, you’ve got to determine what it does. You can come up with a fresh idea or try to build a clone of an existing app. The latter is a good way to practice coding without needing to pry your brain for a new idea. Pro-tip: If you’re learning how to build an app this way, make sure you don’t copy-paste any sample code and write things from scratch instead. 1. Determine the big picture Like Snapchat or Instagram Stories, the purpose of this app is to send messages that disappear once read by the recipients. With that goal in mind, we can start breaking down the individual functions as well as the user interface for both sender and receiver. This can also be where you decide on the programming language. It can be based on your familiarity with the language or the requirements of the project. For instance, if your company only puts out Android apps, then you’ll have to use Java. For this instance, Er Whey chose H T M L, C S S, and Java Script as they’re fairly straight forward and don’t require any special I D E ( Integrated Development Environment). ( We cover H T M L, C S S, and Java Script in our Front- End Web Development course. )2. Plan the user flow This is where you take into account the user experience. First, what is the general look of the app going to be like? Are there going to be any specific themes? Colors? Menus? Next, how will things look like on the sender’s end? Will they be able to send messages to anyone, or will they have to add users to a list? On the recipient’s side, what happens upon receiving a message? Will the message disappear once they close the window, or will it be time-based? Thinking about the user flow might seem easy, but when you really get down to the specifics, you’ll realize that there are more elements to a simple app that you thought. It’s good to document the user flow in words before moving onto visualization. e. g: John wants to send a picture of his new car, but he doesn’t want the picture circulating the internet forever. For his peace of mind, he will need to be able to tell that his message was read and deleted. Sara, as the recipient, will need ample time to read the message so that it doesn’t disappear before she finishes. 3. Visualize the app This is where you sketch the rough design. You can use wireframing apps like Wireframe. cc or even the trusty pen and paper (a lot of my colleagues prefer the latter). It’s a great way to determine your display real-estate, and you’ll be able to see the limitations of one platform versus another. Where do you align the buttons if it’s a desktop-based app? How many of those buttons would need to be removed for the mobile version? How can you display the most information in an efficient manner? Can you reduce the number of displays through the use of clever designs? Uncovering potential problems at this phase is much better than running into them during the actual coding. 4. Determine components You’ll now need to ascertain all the moving parts required for this project. Do you need external resources? What about back-end servers with databases? In this case, Er Whey chose a couple of intermediaries for functionality. They are Whats App and Bitly, specific for the purpose of this app. 5. Get your hands dirty This is where the coding begins. Using the wireframe you’ve created earlier, you can start building the scaffold. For this project, H T M L will be used for the basic structure, then C S S for styling purposes. What you’ll have is a website without moving parts. You’ll probably end up with a webpage that has fields like ‘ Recipient’s Phone Number’ and ‘ Message’ on it. But for now, you won’t have the ability to take a user’s input and process them. This is where Java Script comes in. Using this powerful programming language, you’ll be able to process information and do fun things with them. Break down the tasks you wish to program, then tackle them one by one. A brief example of this would be: take values (phone numbers and messages) from the user and send them to Bitly for processing. Then, get that resulting hyperlink and forward it to the recipient through Whatsapp. Finally, delete the message or link once opened. You’ll code each of these functions, chunk by chunk, until you have a working app. Of course, that’s the ideal scenario. What tends to more is lots of debugging, documentation reading, and cursing at the monitor. But if you hunker down and actually put in the work, you’ll get there. Continue Learning How To Build An App All this assumes that you’re coding alone. If you’re building an app with other people, then you’ll also need to learn about version-control platforms, as well as how to code in a team. That’s it! You now get the gist of how to build an app. If you’re a non-coder, the only thing stopping you from building an app is not knowing a programming language. And our Full- Stack Web Development course will equip you with a comprehensive understanding on coding. Taylor’s University X N E X T Academy Coding Course For Teens If you’re a teen or a parent of one, then you can learn how to build the app above in just 5 days! This joint program, brought to you by Taylor’s University and N E X T Academy, will give teens aged 13–18 the exact skills they need for a brighter future. Besides learning H T M L, C S S, and Java Script, participants will also enjoy a meet-and-greet session with Taylor’s University students and staff. There, they’ll discover real-life applications of code, as well as explore the teams’ various tech projects. It’s a great way to get your child started in the world of tech as well as help them pave a career in the industry. Don’t let your children get left behind. Let them learn how to build an app and give them a leg up instead! For full info, click on the button below. Tell me more about coding for teens Tell me more about coding for teens","['Build An App', 'Coding', 'Coding Bootcamp', 'Next Academy']",https://medium.com/@NEXTAcademy_/lets-get-started-on-how-to-build-an-app-456c43d14c9a,0,[],0,23,next,Unknown,Unknown,Unknown
Ruth Ng,I Lead Growth at Northcoders. I largely write about JavaScript and Philosophy — my two greatest passions!,8 JavaScript Experts you Must Follow on Twitter – northcoders – Medium,2017-08-03 07:54:18,medium,"8 Java Script Experts you Must Follow on Twitter Used right, Twitter is a fabulous way to get all the latest developer wisdom delivered straight to you. Whilst a short list of 8 doesn’t even begin to scratch the surface, these Java Script heavyweights are must-follows. Brendan Eich Brendan Eich@ Brendan Eich On Medium: Brendan Eich Why should I follow this person? He created Java Script. If somehow having written Java Script itself is not reason enough, he’s also the co-founder and former C T O of Mozilla. Trivia: did you know Brendan Eich put Java Script together in just 10 days? Eric Elliott Eric Elliott@_ericelliott On Medium: Eric Elliott Why should I follow this person? Eric describes himself a ‘compassionate entrepreneur on a mission to end homelessness’. He is campaigning to end poverty with code. He’s incredibly knowledgeable about all things Javascript, and we treat his word as law here at Northcoders! John Resig John Resig@jeresig On Medium: John Resig Why should I follow this person? Heard of j Query? We bet you have! John Resig is the man behind it — the creator of the most popular Javascript library in the world. He’s committed to making learning to code accessible to all, and is an Engineer at Khan Academy. Lea Verou@ Lea Verou On Medium: Lea Verou Why should I follow this person? Professional front-end web developer Lea Verou is the author of the superb C S S Secrets Book. We highly recommend it! She’s also one of only seven W3 C C S S Working Group Invited Experts. She posts interesting, informative Tweets on best practices, design, U X and code. Axel Rauschmayer Axel Rauschmayer@rauschma On Medium: Axel Rauschmayer Why should I follow this person? Dr. Axel Rauschmayer has worked extensively with Java Script, and has authored Speaking Javascript and Exploring E S6. He also blogs thoughtfully on fascinating topics mostly around Javascript at 2ality. com. You don’t want to miss his top-notch content! Dan Abramov Dan Abramov@dan_abramov On Medium: Dan Abramov Why should I follow this person? Dan Abramov is a React hero. If you know React, you’ve probably heard of Redux. Dan Abramov came up with Redux whilst writing some code to show at a React Europe demo. He’s also behind Create React App, React Hot Loader and React Dn D. We think all of that speaks for itself! Joseph Zimmerman@ Joe Zim J S On Medium: Joe Zim’s Java Script Corner Why should I follow this person? Joseph Zimmerman is a veteran Java Script developer who has been coding since he was 12. His specialism is with front-end languages. By following him, you’ll get all his latest wisdom and easy links to learning about best practice at his utterly fantastic blog. Kent C. Dodds@kentcdodds On Medium: Kent C. Dodds Why should I follow this person? Elite Java Scripter Kent C. Dodds is a developer at Paypal. He lives to make software development accessible to as many people as possible. We like his laid back yet awesome content! I’m confident you’ll enjoy following these fantastic people, and learn lots in doing so! Who else can’t be missed? Let me know @ Ruth Y M Ng! ( And maybe follow me?) Ruth is a full-stack Java Script developer, and leads growth at Northcoders, the Coding Bootcamp for the North of England","['JavaScript', 'Twitter', 'Front End Development', 'Coding', 'Codingbootcamp']",https://medium.com/northcoders/8-javascript-experts-you-must-follow-on-twitter-b3293fb14ab5,0,[],0,121,ruth,F,0.996637042630537,0.00336295736946304
Wayne Fagaragan,,First Day Impressions – Wayne Fagaragan – Medium,2018-07-10 06:34:09,medium,"First Day Impressions I’m taking the coding training because the teacher that was teaching coding last year is not returning in that position. Originally, three of us at Kapolei Middle School went for Project Lead The Way ( P L T W) training for their Apps Creator curriculum, but not using the knowledge learned for a year made it difficult to maintain that level of understanding. Since the coding teacher is leaving the position, the principal naturally asked the two other teachers trained in Apps Creator to take on the task of teaching that coding class. I wanted to take this training so that I can reacquaint myself with coding principles and so that I could learn more about the craft. My first impressions of the training is that I like the one to one teacher/student ratio. But I do understand that normally there are more teacher/students that take the class, so I will take advantage of this opportunity. Mel, my trainer said that I worked fairly quickly, but although I felt like I did work quickly, I am still not confident in what I am doing. Yes, it has just been one day of training, but I want to be competent and confident not only for myself, but for my students. I like the tools that have been shared with me. I like figuring things out and tools such as Glitch allow me to backward engineer, allow me to work on my own without bother others too much and it gives me instant assessment of the work that I am doing. The training that I receive will go towards continuing an after school coding class at Kapolei Middle School which I hope can continue to be taught in the mainstream school day. The latter sentiment will depend on how well I learn and understand the 2-week material. I look forward to learning more and I look forward to applying new skills for the betterment of my students and for creating things that will benefit myself and my community.","['Education', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@wayne_fagaragan/first-day-impressions-b991eda51a9b,0,[],0,0,wayne,M,0.004536045156838569,0.9954639548431614
Kyle Combs,Software Engineer | CS Resident | Music Nerd,Pair Programming: Codesmith’s Algorithm for Self-Confidence,2018-10-01 05:06:37,medium,"Pair Programming: Codesmith’s Algorithm for Self- Confidence One week ago tonight I was more nervous than I’d been in a long time. I woke up at 2 a. m. in a bit of a panic and couldn’t go back to sleep. The next morning I was to begin an intense, 13-week Software Engineering Immersion Program at Codesmith here in N Y C. Had I really quit my job and decided to go back to school? What was I thinking? There was no way I was going back to sleep, so I grabbed my headphones, queued up Tom Petty’s Wildflowers album and went for a walk around the East Village. This album has been the soundtrack to pretty much every big life change I’ve made as an adult. It has a way of calming me down and helping me take those big steps forward that really make life worth living, so it seemed like the perfect background music for that late night stroll. I turned 40 this year and decided it was time to start thinking past what stamp I was gonna add to my passport next. While I may have taken the long road to a career in coding, it’s not that strange that I ended up here. I have worked in restaurants since the day I turned 16, but over these past few years, I began to realize that I just wasn’t getting the personal satisfaction from it that I always had before. There wasn’t any challenge to it anymore. And as my 3rd-grade teacher, Ms. Weems, can probably still attest to, if I’m not challenged I’m bored, and if I’m bored I get more than a little crazy. Basically, it was “time to move on. ” I was that weird kid that begged his parents for books of logic puzzles to occupy my time on long family road trips. In high school, I started building computers on my own, and by the end of my freshman year of college I’d taught myself H T M L and was designing web pages for local bands in exchange for free tickets to their shows. I took a few turns along the way that took me off the coding path, but life had come full circle and brought me back. As I walked into Codesmith’s facility in So Ho my nerves had calmed a bit and turned more towards excitement. I had done it. I was finally here! We started the day with a little low-key breakfast/meet & greet followed by a short lecture about what our time would be like over the next 13 weeks. Quickly from there though, we were paired up with another cohort member and dove right into the work. I’ve struggled my whole life with thinking I was the smartest person in the room even when I most certainly wasn’t, but let me tell you right now, that wasn’t the case on that first day or any day after. We are all different ages and come from an array of different backgrounds. Everyone is accomplished and seriously sharp, and as intimidating as it was to be sitting amongst them, I looked around and realized I felt exhilarated and alive! Over the next 6 days, we all went through a rollercoaster of emotions as we traversed the daily challenges of learning to code the Codesmith way. I had been working on learning to code in my spare time for almost a year at this point, but by day 3 we were already covering advanced computer science topics I had never even heard of. Every new challenge literally started with me staring at the screen trying to make sense of something that might as well have been written in Mandarin, but through the powers of Pair- Programming, one of the core principles of Codesmith’s approach to teaching, I quickly realized that by working together my cohort-mates and I could accomplish just about anything. Cohort 7 diving deep into Pair Programming on Day 1 Pair- Programming works as such that one person is the driver (the typer), and the other is the navigator (the one telling the driver what to type). The first major benefit to this approach that I hadn’t even thought about before was that it kept me focused on the problem. I couldn’t stare at the wall for 20 minutes contemplating life when I had to either be typing or dictating the whole time. I was engaged every minute. Beyond that though, Pair- Programming has so many more benefits that I’ve learned this week. Sometimes I understand something faster than my partner and get to hone my skills by explaining to him, and sometimes it goes the other way and I get to learn from another person’s approach. I am notoriously a bit of a control freak and Pair- Programming makes you relinquish some of that control and realize you have a lot to learn from whoever you’re working with. More than anything though it is helping me build confidence in myself as I have to actually learn to explain my thought process to someone without being able to implement it on my own. I’ve never been very good at talking in front of a group of people. I get really nervous and my heart starts feeling like it’s going to burst right out of my chest, but after a week of walking someone through every thought in my head hour on end, I spent my Saturday night after class standing at the front of the room with my laptop plugged into the big screen projector helping my cohort-mates better understand some data structures I had never even heard of 2 days before! The first week is over now, but there is a long way to go. Every day is a new challenge, and though we had some near breakdowns, we learned to come together as a team and support each other. Each one of us picks things up at a different pace and some things just make more sense to certain people, but the beauty of working together as a team is that whichever one of us makes sense of it first is there to help push the rest of the team along. Every 2 days we change to a completely new subject and get a new Pair- Programming partner, but together as a whole team, we make sure that nobody gets left behind. I can honestly say that in just one week I’ve learned something from every single one of my cohort-mates and I hope I’ve taught them all a thing or two as well. Though my nerves have calmed, for now, I know there are many more stresses to come and while it will probably be the Rock, Paper, Scissors algorithm that wakes me in a cold sweat next time, there is one thing I know for sure now: I am exactly where I want to be for the first time in a really long time. If you enjoyed this article, please give it some Claps and Follow me to get notified when I post something new!","['Programming', 'JavaScript', 'Codingbootcamp', 'Codesmith', 'Self Confidence']",https://medium.com/@kylecombs/pair-programming-codesmiths-algorithm-for-self-confidence-bbd6f7397e6d,5,['Codesmith'],1,325,kyle,M,0.017754788200754927,0.9822452117992451
Yan Fan,"Co-Founder & CTO of Code Chrysalis, a coding bootcamp in Tokyo. https://www.codechrysalis.io",Kumiko Haraguchi: Journey to Code Chrysalis – Code Chrysalis – Medium,2017-08-01 10:37:24,medium,"Kumiko Haraguchi: Journey to Code Chrysalis Kumiko Haraguchi is one of the students in our first cohort and we recently sat down with her to learn more about her background and how she got into coding. Kumiko-san! T L; D R Kumiko was born in the Aichi prefecture. Upon graduating from high school, she studied abroad for a year in Vancouver, Canada studying English. While working at a guest house, she realized the power of the web and subsequently enrolled in university to study the subject. After her university graduation, she worked for a system integrator as a systems engineer but found that she had few opportunities to actually code in her job. Unsatisfied, she worked as a frontend developer for a development shop in Shibuya before joining Code Chrysalis’s first cohort to improve her skills as a software engineer. Code Chrysalis: What’s your story since you graduated from high school? I have always adored other countries and cultures since I was a kid. After I graduated from high school, I wanted to study abroad in Canada to improve my English skills so I worked for two years to save up money. I worked for two years to save up money. Eventually, I found myself in Vancouver and I studied English at an English school for the first month. I thought there were too many students and I did not get many opportunities to talk, so I switched to a school that specialized in speaking. Through those classes, private tutors, and working at a guest house, I was able to polish my practical English skills. After coming back to Japan, I took several odd jobs where I could use my English. Class presentations. How did you become interested in programming? After coming back to Japan, I worked at a guest house for foreigners. One of my colleagues there was in charge of the website and I was really impressed by how much the website dramatically increased business for the guest house. That was when I realized the power of the web and programming and became interested in learning how to code. How did you get started with learning how to code? I searched and enrolled in a university that provided lectures on the web and also had scholarships! I majored in Media Sciences, where I got to learn about the web and also learned some Java. University let me study a wide range of subjects like marketing and the business of the web. So that means you were about 27 when you entered university — -were you self-conscious about that? I didn’t care at all. I really enjoyed university and made some great friends. I didn’t feel very different. Haha, that’s because you look so young. What did you do after university? I started working for a system integrator as a system engineer after university. Even though I was told I had the opportunity to code during my job interview, I was only involved in the upstream process because the company outsourced most code-related aspects to developers overseas. Because I thought my job was not ideal for my career development, I quit after a year and several months and became a frontend engineer. Whiteboarding at Code Chrysalis! Why did you decide to join Code Chrysalis’s immersive? I wanted to understand the overall system, including the backend, and wanted to level up my skills as a software engineer. The bootcamp has a ton of materials and approaches to improve. I think the most efficient part of it is the project-based learning, in addition to being able to learn in person [as opposed to on-line]. What are your impressions of our pre-course so far? It’s been tough beyond my imagination. I thought I had understood Java Script, but I was amazed that the assigned readings had such rich content. In addition, the assigned projects’ difficulties were very high. It was fun though, because I could learn a lot. Because I still have a job, I get up one hour earlier than usual and make good use of my spare time to tackle the assignments. What is your future dream? I really would like to be involved in software development where I can empathize fully with the mission and approach with 100% passion! Any advice to future fellows? Just get started! Hmm… I am very sure that anyone can become a software engineer without any fancy academic background and experience if they have serious motivation and energy. Therefore, I highly recommend people to act fast if they are seriously curious about this industry. Let’s explore fate together!","['Coding', 'Software Development', 'Software Engineering', 'Codingbootcamp', 'Tokyo']",https://medium.com/code-chrysalis/kumiko-haraguchi-journey-to-code-chrysalis-f5c8b247fd4e,4,[],0,7,yan,M,0.12359550561797752,0.8764044943820225
Cameron Mullins,,The Importance of Live Coding for Developers – Cameron Mullins – Medium,2018-05-11 18:56:30,medium,"The Importance of Live Coding for Developers Whether teacher or student, live coding produces better coders Seasoned web developers know the feeling of seeing a beautiful chunk of code. A well-crafted, succinct set of instructions that inspires learning and furthering the craft. A program that works exactly as intended and articulated by its name and nothing more. New developers may not have experienced this sensation, but know the goal for learning to develop is to create beautiful code. But how to achieve this phenomenon? How to even start separating working code from beautiful code? Who and why is this guy even discussing this topic? I am a second career freelance web developer. When I switched careers, I came from a non-technical background and enrolled in an online coding Bootcamp. Since then, I have also been working as a teaching assistant and tutor for coding Bootcamps. I have experienced this entire range of emotions many times through and am excited to report back my experience! The Problem As a new developer, the main goal is to get functions to work together, forming a program that completes a task. This feat feels amazing once it takes place: a button click sets off magic inside a program and the expected result is spit out. Effectively, each program is a newly created a universe. But then the programs get more and more elements, and code can become redundant or conflict with other aspects of the program. In Bootcamp settings, often solution files are given to students and the explanations are a main part of class time. But finished code can be very intimidating and the steps between an empty file and a finished product are hard to glean from just observing solutions. Pair programming in this setting helps, but often fellow students are in the same boat and more elegant solutions are harder to acheive. This problem became apparent as students displayed trouble completing assignments without referring to nearly identical code that solved a very similar solution. Students understood what the code blocks themselves did but were not able to connect the techniques to complete other tasks, and often could not explain why a code block was used. The Solution Many solutions were attempted in the course: more pair programming, meticulously planning-out responses to possible questions to best enunciate concepts, and creating more and more content to expose students to code; but the proverbial lightbulb turned on when students had the opportunity to watch the instructor live code solutions. During these times, students typed along or took notes in solution files and closed the gap between coding challenge and coding solution. Further, the students are produced more elegant code and obtained a better grasp of the material and techniques presented. This technique allows for questions to happen in real time. The reason a specific method is being used can be discussed as a solution is typed out, and other paths that could be taken can be discussed. The steps that do not appear in finished code, such as console. log or print statements -used to check the who, what, when, where, or why of a variable- can be shared and then thrown away. Finally, students can see mistakes and techniques for tackling them. When code is presented only in a clean and polished state, the trials and tribulations of reaching that beautiful endpoint get cast aside and beautiful code can appear almost unachievable, especially to a new developer not yet sure of their own capabilities. Implementation When teaching people how to be developers, allow the vulnerability of live coding and making mistakes. This process helps new students see the mindset of a developer, visualize important steps to making code work, and allows the opportunity for discussing options for achieving more elegance in code. The interaction with students will not only give students an insight into becoming better developers but will help teachers weed out any inconsistencies or problems in their own code. When learning how to develop, try following the pattern of watch one, do on, teach one:1. Watch someone code out a solution to a problem. Whether it is a specific problem, or a new language/method, find a way to observe someone’s code either in a classroom setting, online videos or even reading articles and documentation. 2. Create and solve a problem with this new technology. Open a new file, write some code, get it working, and then refactor. Be proud of the new little darling3. Then open up to exposure. Answer questions of fellow students. Create an online study group. Go on stack overflow and search for questions that need answers. Write a blog post. Find a way to tutor or mentor other students. Or, just teach, out loud, the solution you just created. this creates an opportunity to delve into a block pre-written code snagged from an example or re-examine old code thats being reused remember what it does. Previously unnoticed reused variables can be expelled from code. At the very least a deeper understanding of the code will be achieved by pretending to present it. This technique is also invaluable for preparing for technical interviews. So get out there and code for other human beings. As a student, the added intention will sculpt better code and understanding of each aspect of the code. As a teacher, it will allow new developers to see the steps to attaining a higher level of elegance and beauty to their work.","['Programming', 'Learning To Code', 'Codingbootcamp', 'Coding']",https://medium.com/@cmullins510/the-importance-of-live-coding-for-developers-de18dea2ca29,1,[],0,1,cameron,M,0.09092395366218237,0.9090760463378177
Madeleine Tabing,,How PR isn’t so different from programming – Madeleine Tabing – Medium,2018-08-15 01:09:41,medium,"How P R isn’t so different from programming After a full week of coding bootcamp, one thing (among M A N Y things) I’ve learned this week, is that the workflow of a programmer is much like that of a P R professional. P R and programming are industries apart — their end results differing from a featured article to a fully-functioning app — but I’ve already observed a few similarities in the ways both approach their objectives and overall problem-solving. Work flow Typical writing flow: Gather information Select information Structure information Translate Stylize text Format text Reflect on text Typical programming flow: Define program objectives Design program Write code Compile Run program Test and debug Maintain and modify program The way programmers and communications writers work, on the surface is very similar. When starting a new project, program, essay or pitch, the first step is to identify and set the goals — what kind of outcome do you want? What is the problem we’re trying to solve? What subject should the text be about? Next, writers and programmers research and map out their plans — what should the argument in the pitch look like? What will the architecture of our program be? What types of classes or methods will we have? Lastly, after writing our code and putting pen to paper, programmers and writers have to reflect on what they’ve put together. For writers: did we meet our goals? Will other people be able to understand our writing? Programmers should ask themselves: Does my program function as expected? Is my code well structured? Feedback Testing your code, over and over is imperative. Reading the error messages and understanding the output is important for us to edit and rewrite our code in order to make it function properly. If a method isn’t working the way we want it to, it’s important to understand why, and address the reason, rather than just move on with broken code. A lot of P R is about understanding why a certain message doesn’t resonate with a particular audience. If our pitch isn’t getting picked up by journalists after pitching hundreds of reporters, its likely that we need to revisit our pitch and find a new angle to approach the media. Unfortunately, media don’t give P R people error messages… fortunately, we can ask them directly for feedback! Whether it’s emailing a journalist to see why a particular angle isn’t resonating with them, or taking them out to drinks to understand them better and learning what will resonate, reading journalists for feedback can be as simple as a program error message. Feedback with next steps can be clear as:“ I don’t like covering [topic] because it’s not in my wheelhouse, you should try [journalist]. ” — pitch another journalist“ I’m not working on a story about [topic]. ” / “ Never pitch [topic] to me again, I hate it. ” — don’t pitch this journalist on this topic again“ I’m writing a story on blockchain right now. ” — find an angle related to your company that relates to blockchain“ That sounds interesting. Tell me more!” — learn more about the journalist, understand their personal interests and what they typically cover, tailor your communications accordingly“ Great! I’m working on a story about [topic]! When can I interview the C E O?” — green light! set up an interview. Whatever the feedback — positive or negative, we have typically have executable next steps that we can work on in order to get the desired results. If we continue to get negative feedback, it’s a good sign that we should change our approach to the problem and rewrite. Coding and writing with your audience in mind The principle of D. R. Y. (don’t repeat yourself) helps us become more effective and successful programmers. While lengthy and repetitive code may accomplish what we want, refactoring our code to be clearer and cleaner, helps others read our code and makes us better programmers overall. We’re not just programming for the machine — ultimately we’re really writing for users and programmers in the future who will build upon, extend and modify our code. Likewise, it’s important to be concise and clear when communicating on behalf of a brand. Defining a clear argument or a statement and writing in a way thats relatable and easy to understand is key to brand communications. You wouldn’t want consumers or businesses getting confused about what your brand stands for!code churn : lines of codecode churn = lines added + lines deleted + lines modified to a file from one file to another I read an interesting article that proposed the 10:1 rule of writing and programming. The author concluded that the ratio of “raw materials” to “finished product” in writing is roughly 10:1 — generally on par with the ratio of programmers’ “code churn” to “lines of code” pushed to Git Hub (he also found the same 10:1 ratio in film, journalism, music and photography as well). Whether this holds true (there’s been a lot of discussion on his assertions and whether his sample size was sufficient), the point is that developers and writers have to not only hone in their craft, but also be strong self-editors to refine their end results. Writing and Coding: Not so different While writing and communications P R are typically seen as creative professions, and programming, a more technical one, there are certainly some similarities. Below the surface, writing and programming are ultimately, translations of high-level data and ideas, into low-level statements or sentences.","['Programming', 'Writing', 'Mass Communications', 'Coding', 'Codingbootcamp']",https://medium.com/@madtab/how-pr-isnt-so-different-from-programming-9311c86ef8bf,0,[],0,2,madeleine,F,0.9996205317614916,0.00037946823850843684
chibueze ukaegbu,,LearnFactory Internship: Day 12 – LearnFactory Nigeria – Medium,2018-05-15 20:36:46,medium,"Learn Factory Internship: Day 12“ You can go only as far as your faith, in God and in yourself, goes”… i C All things Java Script It’s a wrap, day 12 has come and gone. With his booming voice, Eric Thomas reminded us that W E A R E P O W E R F U L B E Y O N D M E A S U R E. That was the message for Episode 7 of B E P H E N O M E N A L O R B E F O R G O T T E N. He emphasized that knowing our capacity is just half the battle, we must diligently apply the knowing to take our life to a whole new level. To do this, we need to observe 3 principles: #1 — A C T I V A T E I T: you can’t have it, you can’t be it, you can’t fully experience life, you can’t become the full version of you until you activate all your gifts and talents within. #2 — E M B R A C E I T: R E A L I Z E Y O U R O W N S E T O F U N I Q U E S K I L L S, you are only powerful beyond measure when you do what you have been born and called to do. #3 — E X P E R I E N C E I T, L I V E U P T O I T: I must harness my unique set of experiences and stop settling for average, or for good but rather to get to great and press on to phenomenal. For the love of code… We continued a deep dive into Java Script, with boolean logic, conditionals, and loops being the cynosure today. The interns were made to given in some intense classwork and a wicked take-home assignment designed to stretch their understanding. Deadline for submission is 10am tomorrow. On seeing the assignment, they all asked in unison if they could join the teachers to sleep over at the office today, since we had a near-24 hour light supply. Unfortunately, we could not honor that request, for security reasons, and lest their parents come with double-barrels thinking we have kidnapped their children, lool. Hardcore… The highlight of today was dividing the interns into four teams: Team Lamborghini- Aventador, comprising Rutherford as team lead, Zoe, Andrew and Chilaka; with Matthew as Mentor. Team Bentley- Continental, comprising George as team lead, Chinenye, Chidera and Chuba; with Isaac as Mentor. Team Mercedes- Maybach comprising Ezekiel as team lead, Shalom, Prince, and Ekene; with Lawrence as Mentor. And finally Team Rolls- Royce- Phantom comprising Emmanuel Raymond as team lead, Bernadine, Grace and Chibuike; with our own Emmanuel as Mentor. Team leadership is rotated weekly to give each one a chance at growing his/her leadership skills. We believe that working in smaller teams will help build the bond between the interns. Teams are supposed to meet with their mentor at the end of everyday to review tasks and activities for the day. At the end of the today, we had the official signing ceremony: each intern signed the Code of Conduct to the applause of his colleagues and staff. It was indeed fun. S P O T L I G H T F O R T H E D A Y Our spotlight today is the baby of the house…. . I Believe That There is more to Life than anyone can ever T E L L… Nobody has gone through the experiences I have gone through… Experience’s either Build you or Breaks you…. It is what made me Who I Am “ M E”! I am naughty but well behaved… Hi! Nice meeting you! Shalom Matthew I am Shalom Mathew, an indigene of Bende L G A, Abia State. I have 2 elder brothers and a younger sister; we grew up with a single parent. I am diverse, my favorite colors reflect me; and they are light yellow, lemon green, white and all shades of ash to black. I love food, sometimes I wonder where it goes into because I don’t grow fat. I love chicken, pastries, ice-cream, popcorn, indomie with suya. I am passionate about Solving Problems, Touching Lives, Technology, Innovations - Creativity, Adventures And Social Entrepreneurship. I am Christ Personified, a member of the awesome B L W, Leader, Traveler, Friendly, Kind, Tech Shaper, Lovable, a Life Giver, Cheerful, Founder of i Recycle & Triple C. I don’t like seeing people sad and I hate L I E S. It is better you are honest with me and let the roof fall than to lie to my face. And yes, I’m madly in love with coding. Innocent me… She is smart as a whip, I see great things for her. I’ll see you tomorrow. Have fun. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-12-e2736431b0aa,0,[],0,115,chibueze,M,0.0,1.0
Craft Academy,"Coding as a Craft in 12 Weeks — Stockholm, Gothenburg, Pretoria, Rotterdam",This week at Craft Academy — week 1 April 2017 – Craft Academy – Medium,2017-04-05 03:48:59,medium,"This week at Craft Academy — week 1 April 2017 On Monday, we started a new group of juniors on their journey to become junior developers. Their weeks of getting familiar with fundamentals, terminal commands, and version control is over — now the real work begins. The juniors are building a virtual A T M machine that will run in a terminal-based Ruby program. They’ll dive deeper into testing, while building out a fully-functional program. Over the weekend, they’ll push their budding skills further by adding on a simple database. Big smiles at the Craft Academy Stockholm camp. Meanwhile, the seniors are in their ninth week of the camp and have continued working on the large marketplace project we call Slow Food. In addition to basic functionality like creating and displaying dishes for purchase, they are adding restaurants to a Google Map on the front page, implementing Facebook login, and setting up an online payment system for checkout. All the while, they are using best practices and testing to guide their development, and learning how to work as a team. They take turns writing code, hold their own meetings — with and without coaches — collaborate using Git and Github and will make a final presentation to their “clients” (the teachers) at the end of this week. This week we also welcomed Andrew as the newest member of out coaching team. Andrew will be working out of our Stockholm camp at Open Lab at K T H. Introducing Andy calls for a separate post so stay tuned. When Max, one of our Gothenburg students in the new cohort, arrived on Monday, we had four generations of Craft Academy students working in the office:4 “generations” of Craft Academy learners gathered over pizza and talk shop. Max Felix, one of the students in our senior cohort Philip, who graduated from the previous cohort and is currently working on a Craft Academy Labs project Amber, who graduated from Craft Academy in October and is a junior coach, responsible for the first four weeks of the camp We’re looking forward to the day Gustaf, an alumnus who is building his own Saa S application, comes to work in the office for the day and we can have five generations of students. The Craft Academy family is a tight-knit group. Twelve weeks does not have to be the end of students’ time working with their colleagues — there’s plenty of opportunity to get involved after graduation. Would you like to know more about what we do? Follow us here on Medium, on Facebook, Twitter or visit our website.","['Programming', 'Coding', 'Education', 'Learn To Code', 'Coding Bootcamps']",https://medium.com/craft-academy/this-week-at-craft-academy-week-1-april-2017-3bed54141a35,0,[],0,1,craft,Unknown,Unknown,Unknown
Sam Kane,Full Stack Development Student at The Iron Yard | Indianapolis,"Hello, World! – Sam Kane – Medium",2017-07-10 19:35:11,medium,"Hello, World! My Path to a Coding Bootcamp Twelve months ago I had my first internship at a Fortune 500 company working in Customer Retention for one of the major Satellite T V companies. I was piloting a “ Surprise and Delight” campaign for our “most valuable customers”. In the process of trying to make my project come to life, I worked with my department’s Business Analysts. I watched them query the company’s massive databases and find the data I needed in order to learn who to target with my campaign. The analysts used S Q L ( Structured Query Language) in order to write a query that would return the exact sect of customers we needed. After weeks of changing needs and waiting on simple requests, I learned two things. I would rather be the one solving problems than waiting on others to solve them for me. I realized that I did not just want to solve problems (because I believe that is the first line of A N Y job description) but I wanted to solve problems with logic and with code. From a young age, I have always loved puzzles. When asked, “ What do you want to be when you grow up?”, I always said that I wanted to solve puzzles for a living. At that time, I naturally thought that meant that I should train to be the next Sherlock Holmes or Dr. House. But seeing this code was such a poignant moment in my life because it showed me that I didn’t have to strive to be some fictional character in order to make a living from solving real world problems with my mind. Later that summer, my project sent me to our Tech Office where all of our Software Engineers and Developers worked. As soon as I walked in I realize where I wanted to be. It felt like I stepped into a small sliver of the Google H Q. There were coworking spaces instead of cubicles, natural light rather than the faint glow of phosphorescent light bulbs, and a ping pong table for breaks. I sat down and interviewed a couple of the developers and none of them had a formal Computer Science degree but rather received their training from an institution called Galvanize which happened to be a coding bootcamp. What is a coding bootcamp you may ask? A coding bootcamp is a technical training program that teaches the parts of programming with the biggest impact and relevance to current market needs. … Most coding bootcamps last anywhere from 8–12 weeks and are designed for speed and high-impact learning. What is a coding bootcamp? A coding bootcamp is a technical training program that teaches the parts of programming with the biggest impact and…www. thefirehoseproject. com From there I dove head first into the wonderful wide world of programming the world wide web. My story looked like many others, after work I would head home and spend as much time as I could on online tutorials such as Code Cademy and Free Code Camp. But I quickly learned that there was a huge gap between the hand-holding “type this code here” tutorials I was working through and programming complex software. I read this article by Erik Trautman and it helped me understand the journey ahead and what I was going to need to make it to the other side. I struggled through the Cliff of Confusion and the Desert of Despair for many months as I waded through the helpful but overwhelming array of internet resources at my disposal. I realized that if I truly wanted to get serious about Software Development, I was going to need a real person rather than a computer screen to learn from. This is when I seriously started researching the efficacy and validity of coding bootcamps. My research led me to The Iron Yard, a well established and highly rated program with a campus in my city, Indianapolis. After completing their free Introduction to Javascript Course, they sent me my very own ultra-soft Iron Yard t-shirt. They had my attention. After much research and deliberation, I turned down a job offer from a great home builder in town and decided to fully invest in programming and attend The Iron Yard Web Development Immersive Program. I start a week from today and I will be in the program for the next four months. I will be looking for employment starting in December and I am very excited for the next step in my career in tech.","['Programming', 'Coding', 'Codingbootcamp', 'The Iron Yard']",https://medium.com/@swkane/hello-world-ff5b2afa32cf,3,"['The Iron Yard', 'Galvanize']",2,5,sam,M,0.011474244831798909,0.9885257551682011
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Intro to JavaScript – Emily Deans – Medium,2017-07-06 02:01:39,medium,"Intro to Java Script Today, we jumped into some Java Script fundamentals to start the class off. It was fun playing around with a new language and exciting to see how J S meshes with H T M L and C S S to create a fully functional site. We spent a decent chunk of the morning working through logic puzzles — mostly using ‘if/else’ statements and booleans — and interacting with the console component on Chrome’s Dev Tools. Sidenote: I’ve been trying to spend a little extra focused time using the developer tools every day (beyond just the class assignments). It’s so comprehensive and initially felt daunting and entirely overwhelming, but I’m finding that the more I poke and play around with it the more it’s making sense and feeling so so helpful. Right before lunch, we partnered up for a pair programming activity to create a ‘ Rock, Paper, Scissors’ game using a . js file and the console. That one pulled in if/else and else/if statements, as well as some other J S concepts like arrays and Math. floor, Math. random, etc. Pretty neat. Speaking of neat, I know I’m probably pretty late to the party on this one, but I just started using Microsoft One Note to take notes for class and so far am loving it. I haven’t really had a chance to explore its full potential, but even just being able to intuitively integrate images with text has been a huge help when I’ve wanted to include a sample block of code to demonstrate syntax with a new concept. Ex: See? Pretty neat! Ok, I’m gonna try to wrap up my weekly project so I can get that thing submitted and hit the hay. Goodnight!","['JavaScript', 'Codingbootcamp', 'Women In Tech', 'Women Who Code', 'The Iron Yard']",https://medium.com/@emilyldeans/intro-to-javascript-e1d9a9b06c12,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Oscar Wasil,,Do you Git it? – Oscar Wasil – Medium,2018-05-06 19:14:46,medium,"Do you Git it? Today during our class we learned how to update our files on Github once a change has been made in the repo. Below I’ll show the process on how to do so, which will hopefully make sense. Once you have made changes to your . rb file save it on Sublime Text or that subpar editor you’re using, then head into your terminal and type in:git add --all Once your are done with thatgit commit -m "" Add some kind of description in regards to the changes you've made"" And finally…. git push origin master You can always make sure everything was submitted correctly by typing in git status. My github","['Git', 'Ruby', 'Codingbootcamp', 'Coding']",https://medium.com/@Fazza92/do-you-git-it-b59d52ca1d97,0,[],0,1,oscar,M,0.0053524621325809875,0.994647537867419
Horizons,,What Does Apple Look for in Software Engineer Interns?,2018-06-01 00:55:19,medium,"What Does Apple Look for in Software Engineer Interns? Apple is known for their unique products, and even more for their unique culture. Because of this, jobs and internships are highly sought after, and highly competitive. But what does Apple look for in their interns? This article is meant to help you understand what they look for during the application and hiring process, and what kind of people they hire as interns. What does Apple look for? First off, Apple won’t be giving you any sort of written test. That’s not their style. If they like you after you complete your application, or speak directly to a recruiter, then you will be asked to complete a phone interview. That will be followed by a series of further phone and/or in person interviews in which they will try to get a feel for your personality, and what your skills could bring to the table. To get to that point, go to Apple Jobs, fill in your criteria, and they will send you weekly emails with internship opportunities. Then you can send an email to Apple University Relations with an attached resume and cover letter and, if your university has it, speak with the Apple recruiter at your school about possible opportunities, and what you are looking for. This is first part is essentially the same for most large tech companies, whether it be Google, Microsoft or Apple. To get an interview at a large tech company, you need to be interesting in your conversations with recruiters, on your resume and in your application answers. Show that you are willing to take the initiative and find Apple employees or recruiters on Linked In and start a conversation with them. Have an interesting story It is critical here, and even more so with Apple, that you are able to tell your story. And tell it in an interesting way. How do you be interesting? Tell them what you have built. To get an internship at Apple, you need to first be able to prove that you can create value, and that you have an insatiable thirst to learn how to create even more value. This means build your online presence, have tangible deliverables from side projects, and focus on results, not the fluff, when it comes to your resume. Apple recruiters and interviewers want to see that you have the drive to create projects and produce successful outcomes on your own, without anyone giving you direction. Have a point of view and back it up In an interview on 60 Minutes a few years ago, Apple C E O Tim Cook had this to say:“ You look for people who work for a different reason. People who want to change the world. People who work with a passion and idealism. People that don’t take no for an answer. People who don’t accept the status quo. People that are inherently not satisfied with things. People who see things and they know it should be different, and they sit and they focus on it until they find an answer. People that can’t be told things are impossible. They can’t accept that. ” Why Apple? This is the defining feature of Apple, and will definitely present itself in your interview. In addition to technical questions, they are going to ask you questions like, “why Apple?”, “what makes up a good design?”, “what do you mean by good design?”, “are you familiar with our products?”, “what are some ideas you have to improve a product of ours?”. What’s important in these interview questions is not that you answer exactly how you think the interviewer wants, but that you have a reason for your answer, that you stick to it and you defend it. They want to see that you stick to your guns when it comes to something you believe is right. Apple wants to see that you have a little bit of Steve Jobs in you. That when you know something is good, you don’t fold with the first naysayer. Don’t try to please. Know your stuff and defend your position. As Cook said later in the interview, “ We’re looking for wicked smart people who have a point of view, and want to debate that point of view, and people that want to change something. ”","['Careers', 'Apple', 'Codingbootcamp', 'Tech Jobs']",https://medium.com/@horizons/what-does-apple-look-for-in-software-engineer-interns-1ebd3696b43b,0,[],0,0,horizons,Unknown,Unknown,Unknown
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",A Deep Dive into the ROI of Coding Bootcamps – Hack Reactor – Medium,2017-12-04 18:12:56,medium,"A Deep Dive into the R O I of Coding Bootcamps Thinking about signing up for coding bootcamp? Before taking the plunge, it’s important to consider whether the coding bootcamp you’re interested in is worth the financial cost. Here at Hack Reactor, we understand that coding bootcamps are a big investment, both time-wise and financially, which is why we’ve partnered with Skills Fund to streamline your bootcamp evaluation process. Skills Fund is a private lender that issues loans to students who attend boot camps that have successfully completed the company’s quality-assurance process (like Hack Reactor). Skills Fund believes all students should receive a “return on education” or “ R O E” — essentially, evaluating the cost of attending a coding bootcamp and student outcomes to determine whether the returns of the expected employment and financial opportunity outweigh the cost of the program. Here are 3 factors you should consider when evaluating the R O I of a coding bootcamp:1. What are the program completion and graduation rates? Always look at the admissions and completion rates of the bootcamp. If you’re going to invest in this coding bootcamp experience, you should ensure that the bootcamp is investing in you as well. The bootcamp you select should exhibit admissions selectivity — meaning they won’t accept just anyone. They must assess their potential students through interviews or other processes, to ensure that they’re only enrolling students that are a good fit. This way, you know that you’re surrounding yourself with a community of other driven, like-minded individuals who will help support and motivate you throughout the program. This data should be verifiable and transparent –the Council on Integrity in Results Reporting ( C I R R) posts this information publicly for many coding bootcamps, Hack Reactor included. 2. Does the bootcamp have a significant employer network with many employer direct relationships in your chosen city? The bootcamp you select should have a large employer network of companies for potential employment post-graduation. Check out the Student Outcomes page for evidence of this. Does the site have logos of recognizable, trustworthy companies? Peruse sites like Linked In to get a sense of what the alumni network is like. Ideally, the alumni network will have people located in the location you eventually want to end up after completing the program. If a coding bootcamp has many alumni in your ideal city, like San Francisco, they’ll have a better reputation in that area and you’ll have more inherent connections to use to find a job. Again, this data should be transparent and readily available. Look for these statistics on the website or contact the admissions office for a report. Hack Reactor makes these numbers public on our Outcomes page. 3. What is the average graduate starting salary? Since you’re investing in this new path, it makes sense to ensure that your post-grad salary will make the investment worthwhile. Further, try to find the average starting salary in the city you’re interested in working in. Knowing that a bootcamp’s students can make a certain amount in San Francisco won’t benefit you if you’re planning on living in Chicago, where salaries tend to be lower. Make sure this information is available and verifiable on the site. Check out the outcomes page or the C I R R site to find a bootcamp’s average graduate starting salary. For 2 more factors you need to consider when evaluating a bootcamp’s R O I, check out our original post. — Check out Hack Reactor’s onsite immersive programs, now offered in San Francisco, Los Angeles, Austin and New York City. Not located in these cities? We also have online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Codingbootcamp', 'Coding', 'Career Advice']",https://medium.com/@hackreactor/a-deep-dive-into-the-roi-of-coding-bootcamps-e83ad2d4a18b,1,['Hack Reactor'],1,94,hack,Unknown,Unknown,Unknown
Code Platoon,"We transform #Veterans into software developers through an immersive, hands-on, educational process. Learn more and apply today! http://bit.ly/jointheplatoon",From Deployed to Deploying: 5 Similarities between the Military and Startup Life,2018-02-02 00:00:00,medium,"From Deployed to Deploying: 5 Similarities between the Military and Startup Life Taking on a principal role for Purple Gator roughly four years ago was a leap of faith. Even though I loved the idea of our flagship product, a trivia platform that offers businesses a new way to engage customers, I was signing on with a brand-new company that could offer no guarantees. Fortunately, my six years as a maintenance analyst in the Air National Guard were perfect preparation for the highs, lows, hard work and just plain uncertainty that come with the startup terrain. This is one of the reasons that I help mentor fellow veterans who are enrolled at Chicago’s Code Platoon, a nonprofit web-development school known informally as a “coding bootcamp. ” That nomenclature is by no means an overstatement. This relatively new type of intense, immersive education plays to the strengths these men and women gained in the military. Here are the top reasons that a combination of military experience and a bootcamp education produces developers who are perfectly suited to join anyone’s startup. 1) We are comfortable wearing multiple hats. The boss: “ You’re a software engineer? Don’t care, today you are a customer support representative! Tomorrow you will be on a sales call at 2 p. m. but definitely finish planning our customer-appreciation party by noon. ” If you’ve been in the military, this is second nature: My old boss: “ You’re a diesel engine mechanic? Don’t care, today you are the squad’s physical training leader!” Although my specialty was logging maintenance data, more important, I was an airman ready to serve wherever I was needed. 2) Long hours don’t faze us. While work-life balance is a reasonable long-term goal, that is not always a feasible reality in the early days of a company like Purple Gator. Any company might require a 12-hour day here and there. But at a startup you could work those hours for 20 days straight. And the average veteran reading this is probably thinking, “ Yeah? Is that supposed to be abnormal? What about the other 10 days in the month?”3) Teamwork is second nature. For better or for worse, sacrifice is required in both environments. At Purple Gator, we don’t face life-or-death situations, but people’s livelihoods and careers are at stake. In place of “battle buddies, ” we might find support and camaraderie as part of a tech incubator on the 9th floor of the Merchandise Mart. And just like the days when I was deployed to Guam in support of the 509 Bomb Wing’s 52 Bomber Squadron, such shared experience forges bonds that transcend background, politics, what have you. I expect the relationships made in both places to last forever. I’ve already seen that happening at Code Platoon, where my first mentee, Javier Revuelta, was part of the inaugural cohort. He is now a software engineer at Power Reviews, but returns often to mentor the current cohort. 4) Coping with stress is first nature. My stress level right now is very high. We have several big-name customers already for G Stack, our trivia platform. But every sale counts so much at a startup, and losing out on one means three wasted weeks. You never know where that next paycheck is coming from. And I’m away from my family for days at a time. During a deployment, too, you must deal with not knowing the dangers behind the next hill while worrying about that family back home. For me, personally, while on active duty, I remember a particular time when a lot was riding on whether I could figure out why one of our planes was having mechanical issues. To be more specific, it kind of caught on fire, and combing through the data in order to ensure that this didn’t happen again was a long, arduous process. Because it was very important that the plane not catch on fire again!5) Even the rewards are similar. When you establish a startup, you are filling a void with your idea, creating something that didn’t exist. So seeing our M V P in a customer’s hands that first time, watching them actually use our product to make money — and finding that their customers did indeed enjoy the trivia games — was an incredible moment. It reminded me of coming back, exhausted, from Operation Enduring Freedom, and the first time that a civilian looked me in the eyes and thanked me for my service. Both times, suddenly, my vision felt clear and crystallized. By James Bell Chief technology officer | Purple Gator Before becoming immersed in the startup world, James was a successful options trader and electrical engineer. He has a master’s degree in computer science from the University of Illinois and studied electrical engineering at St. Louis’ Washington University, where he also played football. He served in the Air National Guard and was deployed to Asia during Operation Enduring Freedom. ᐧ Originally published at www. codeplatoon. org on February 2, 2018.","['Veterans', 'Technology', 'Military', 'Coding', 'Codingbootcamp']",https://medium.com/@codeplatoon/from-deployed-to-deploying-5-similarities-between-the-military-and-startup-life-c01d1329ce70,5,['Code Platoon'],1,0,code,Unknown,Unknown,Unknown
chibueze ukaegbu,,"LearnFactory Internship: Day 24 (May 31, 2018) – LearnFactory Nigeria – Medium",2018-06-02 11:18:57,medium,"Learn Factory Internship: Day 24 ( May 31, 2018)“ Better is the end of a thing than the beginning thereof”… Eccel. 7:8 Post holiday pics. Transmission Omission Break in Transmission: We had a transmission omission for 2 days. Tuesday, May 29, known as Democracy Day in Nigeria, was declared a public holiday by the Federal Government of Nigeria. We honored it; and that also gave some extra time for the interns to catch up on their class work and assignments. Interestingly, May 30 was also declared Biafra day by the I P O B ( Indigenous People of Biafra), who called for a sit-at-home. The security of my interns is of paramount concern to me, it is something I will not jeopardize. Given that we are in Aba, which has a strong I P O B affiliation; and that such dates usually call for a massive presence of security personnel, we also advised the interns to stay home. In action Classes resumed today with the interns still suffering from holiday hangover; some decided to maximize the holidays by taking a quick trip home; they are yet to return in their strong numbers. My koboko is already waiting for the errant few :) Lawrence took the interns on Regex ( Regular Expressions) in Java Script. As expected, some had a more difficult time understanding and assimilating the lessons than others did. You could see it on their faces. We took some extra time to explain knotty concepts, and assigning take home reading to help expand their understanding. Code focus I N T H E S P O T L I G H T In the spotlight today is the man who lives by the Niger, Emmanuel Raymond Slim & Focused I’m Emmanuel Raymond, one of two children born to Mr. & Mrs. Linus Nwagwu. I graduated from Michael Okpara University University of Agriculture Umudike, with a degree in Electrical and Electronics Engineering. My favorite color is blue and my best meal is Yam in any form: roasted, boiled or fried. I enjoy watching T V, like honesty and strongly dislike dishonesty. I love to code, and have found the last month an excellent experience. Why are all my guys so fine… Another one for Michael Okpara University of Agriculture. Stay awesome. I’ll see you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-24-may-31-2018-9e74dc7f48eb,1,[],0,69,chibueze,M,0.0,1.0
Doris Shum,,What did I do 5 years ago? – Doris Shum – Medium,2018-05-26 06:06:47,medium,"What did I do 5 years ago? About this time 5 years ago, I decided to resume my career as a software engineer. I graduated with a B A in Computer Science. Two months after the graduation ceremony, I was hired as a part-time Member of Technical Staff. I don’t recall how I got the job, but it was most likely my proficiency in C++. I learned different hardware languages in the position, which I didn’t anticipate. Seven months later, I bumped into a college friend and he connected me with the mid-size company he was working at. I moved to this company as a full-time M T S. Shortly after, the company was acquired by a public company. I remember I once mention to an architect in the company that “ I am going to work here forever” and he laughed. After my 3rd anniversary, I resigned as a senior M T S and moved into a new position as a software Q A. Unfortunately, the company closed after a year, and I was fortunate enough to find another S Q A job 4 months later. Unfortunately again, after a year the company also closed. This is when my technical career paused and the following 10 years I worked on something else, something non-technical and completely different from my past career path with an unstable income. In 2012, my child started preschool, I realized I needed a stable income. I applied for jobs and worked for the first company that hired me. Every day, I processed shipping orders and answered customer phone calls. The job was repetitive and unchallenging. I didn’t feel like I belonged and the thought of going back to the technical field emerged. While conversing with my sister, she mentioned her neighbor completed a coding boot camp and got a job at Pinterest. I researched about this boot camp and decided to apply. In September 2013, I started to study software development again.","['Programming', 'Codingbootcamp', 'Career Change', 'Working Moms', 'Passion']",https://medium.com/@daimictse/what-did-i-do-5-years-ago-18d44d2befb,1,[],0,0,doris,F,0.9930310367219854,0.0069689632780145444
Hannah Henderson,"Software engineer @CircleCI, cynical optimist and binge reader",Why Coding Bootcamp? – Hannah Henderson – Medium,2017-06-02 15:47:14,medium,"Why Coding Bootcamp? Learning is hard work, but everything you learn is yours and will make subsequent learning easier. — Marjin Haverbeke Photo by Natalie Grigorovskaya Last week, I encouraged you to make an honest self-assessment of your comfort with the costs of programming bootcamps in Is Coding Bootcamp Right for You?. Now that’s out of the way and you’re still here, it’s time for the benefits of attending a program! Plus a few cents on which one to choose. The Value Proposition In my opinion, there are a few areas where bootcamps really stand out: Structure Notably, they provide a framework for learning a ton of new material. They crank out a new class of graduates every seven to thirteen weeks, and know what it takes to get most people over the finish line. They provide a structured learning environment that ensures a certain minimum participation in the process. This includes a developed curriculum, work environment, and a clearly-executed schedule. This external pressure can prove invaluable. There are many great massive open online courses ( M O O Cs) available, but they tend to suffer from poor completion rates. It’s hard to put an accurate number on the percent of people that finish any given M O O C, but 4% seems like a fair bet. That’s abysmal. Bootcamps tend to ensure high completion rates. Expedited Timeline Sure, you could learn to code in your free time, but how much of your free time are you really willing to devote to programming? Hours per week. Be honest with yourself. If you commit 10 hours per week to learning, it’s likely to take close to two years to cover the same material that you would cover in an intense bootcamp. On the plus side, you’ll have marinated in that information for long enough to let it really sink in. Coding bootcamps compress your foundational learning schedule into a finite period of time. Peer Cohort Humans are social creatures, and contrary to many stereotypes, so are software engineers. The archetype of the lone programmer banging away at their keyboard late into the night is just not true in the professional world. ( Ok, it’s often a little true, but generally not in the actual office. ) Bootcamps provide a learning community. They will expose you to people from different walks of life with varying skill sets. They’ll also provide a group that you can befriend and lean on during and after the program. Resilience Even at a bootcamp, you will not be spoon-fed “the answers. ” That isn’t how they work. You will be thrust into challenging learning experiences; that’s how you grow. A good bootcamp will help you become more resilient. It will teach you how to find answers on your own and become comfortable with the unknown. Programming can initially be daunting. It’s often unclear how to break big problems down into smaller, more manageable ones. Bootcamps will give you many different points of reference for attacking some of these problems. Part of this process is likely to involve throwing a whole bunch of challenges and tools at you. It’s up to you to figure out what sticks and helps keep your head above water. Job Support One of the most stressful parts of becoming a software engineer is the actual process of job hunting. The entire bootcamp ethos is structured to ensure you’re prepared to tackle this challenge, so by the end you’re ready to enter the job hunt. The bootcamp experience ensures that, by the time you are interviewing, you will have: Practiced toy problems (small programming challenges). Created a basic work portfolio. Experienced some interpersonal challenges and lived to tell the tale. Developed some Day 1 job skills. Pulled together a presentable resume. Practiced your elevator pitch. Most bootcamps also provide some assistance in reviewing and countering job offers. Remember, they are incentivized to help you get a job, not necessarily the best job for you. In addition, bootcamps usually have some sort of mentoring to help people identify areas where they could improve their overall presentation and conversion from resume submission to job offer. Choosing a Bootcamp Ready to commit? I encourage you to look at some of the resources out there and consider what you’d like to be doing after “graduation. ” What program would give you the skills you need? I found it useful to look at the lay of the land in industry before choosing my own program. This article provides a few good questions to consider, and Stack Overflow’s Insights Survey will give you a more quantitative perspective. Tech Beacon did a nice job comparing bootcamps here. As you look at these resources do keep in mind that the technology landscape evolves quickly. What was true in 2016 is not necessarily true in 2017. As you research, it can help to keep the following in mind: Check Your Sources Question your sources while researching bootcamps. You should critically consider what motivates the provider to give you information one way or another. Do they have any skin in the game? How does that affect what decisions they might like you to make? For the record, I’m writing this post because I wish it existed when I was doing my research. I am also writing this post to drive traffic to my company’s website: Circle C I. ( Do it, click on the link, you know you want to!) Bear in mind that many publicly available numbers do not represent entire cohorts of students. Look at what percent of a class is excluded from published numbers, and question what pre-existing skills students brought to the table. Statistics don’t lie, but the parameters used to generate those statistics can be mighty deceptive. Follow the Money Bootcamps occupy an unregulated, for-profit sector of the education industry. Individual instructors and mentors will (hopefully) care about your progress as a person and an engineer, but ultimately the institution that you attend is creating a product, and you are that product. That means the bootcamp you attend will be highly motivated to attract students who are most likely to become hireable. They will evaluate you on a range of factors, which boil down to how strong you are technically (or seem like you could be) and how good your interpersonal skills are (how well you will interview). On the one hand, this is great! You probably want to get a job coming out of bootcamp! Always nice to have your goals aligned with the institution tasked with helping you achieve them. On the other hand, if you are in a program that makes cuts and find yourself on the cusp, this will be a pretty uncomfortable place. Ultimately, a more stringent vetting process will ensure that future cohorts from your bootcamp are higher performers, increasing the perceived value of your own education. Is what’s best for the brand what’s best for you? Conclusion For many people, coding bootcamps offer an effective, expedited program that turns graduates into software engineers. They are not a magic bullet, and they’re not for everyone. If you’re comfortable making the trade-offs listed in Is Coding Bootcamp Right for You?, they may truly be for you. If not, you can always tackle the same process for free and at your own speed with programs like Free Code Camp or resources like this one. These approaches will require more self-discipline and will limit in-person community experiences (though there are certainly online communities growing up to support participants). Do what feels right. I’m glad I attended a bootcamp. I found the personal trade-offs and risks to be highly motivating. I’m grateful to my current peers and to the larger engineering community for nurturing an environment that celebrates continued learning. Photo by Natalie Grigorovskaya Programming culture is incredible. It encourages rapid failure to enable rapid growth (“that didn’t work, don’t do that again, let’s try this other thing that’s more promising”). It was a good fit for me, but that doesn’t mean it will be for you. It’s up to you to decide to become a software engineer, and whether a coding bootcamp is the best way to start that journey. Hannah is (finally) a software engineer at Circle C I.","['Programming', 'Codingbootcamp', 'Circleci', 'Coding']",https://medium.com/@HendersGame/why-coding-bootcamp-f102d8629e4e,2,[],0,56,hannah,F,0.9983895662565118,0.001610433743488246
Gerry Mercado,"Sales @Wavefront by VMware. Coder, public speaker, basketball player, and committed to life-long learning",All About The Flow – Gerry Mercado – Medium,2018-05-28 19:48:19,medium,"All About The Flow Three Main Steps To Creating A Rails Application After many attempts and addressing errors as they came up, I created a simple Rails application to store contacts that would serve as an A P I in J S O N format. There are three key steps I learned to navigate through when creating my app: A P I Route A P I Controller A P I View I challenged myself to not look at the examples created in class as I was going through the flow. It was hard but worth it. I kept working through the error messages and learned to take it one step at a time. One cool thing about Rails is that it is very specific with its error messages. After creating my app in the terminal inside of my desired directory, I opened it in my Sublime text editor and accessed my routes file. There, I established a namespace called “api” to help my user understand that I’m creating an A P I application to retrieve data from. Looked like this:namespace :api doend Then I made a get request where I defined a url and directed my application to the controller file that held my methods. I had to use the terminal to establish my controller. This is what it looks like:rails generate controller namespace/name_of_your_controller I also used my terminal to create a model if my app required it to store data about items or contacts, for example. Finally, inside of my controller file, I had to direct the application to render a view in the browser using the keyword render and leveraging the jbuilder gem by including it in quotes. For my contacts app, it looked something like this:render “contacts_view. json. jbuilder"" In summary, I'm glad I got a better understanding of the flow between A P I Route > A P I Controller > A P I View when creating a Rails application. I look forward to taking it the next level as I add more urls, methods, and views to my apps.","['Ruby on Rails', 'Web Development', 'Api Development', 'Codingbootcamp']",https://medium.com/@gerrymercado/all-about-the-flow-d76c82aea7f6,0,[],0,14,gerry,M,0.31633477496316714,0.6836652250368328
Alexander J. Levin,"Based in Seattle. Wharton, Cambridge, Fullstack Academy, former M&A banker, former Cisco Global Infrastructure Funds Team, currently Amazon AWS.",A Guide to Learning Web Development (With JavaScript) Using Online Resources — Zero to Building…,2018-08-10 05:40:43,medium,"A Guide to Learning Web Development ( With Java Script) Using Online Resources — Zero to Building Something Probably like 1, 000 medium articles have used this photo, but it says “start” so it’ll work There are several online articles and guides pointing to online resources to learn Java Script for Web and Mobile development. However, after actually learning Web Development through a bootcamp I went back through online guides and found many of them to be too unspecific for beginners. This article was borne out of my frustration with a lack of specific answers and references to the best starter resources and the desire to help others more efficiently learn to code on their own. Intro The reality is that mastering Java Script and the related technologies to build web applications will take you up to six months of daily practice if you’re a complete beginner. If you think that if you just work hard then you’ll be able to master Java Script in two weeks, then you’re just going to end up quitting. # Preach So you’re new to programming and you’ve decided you want to build something like a website, web app, or mobile app — but how do you go from zero to finished project? In another article I outlined why you might choose Java Script, rather than other languages such as Python or Ruby, as your first programming language. This brief article outlines some of the best resources that I found on the web to learn how to actually build something cool. First though, I recommend reading this article if you haven’t already. Set Expectations Unfortunately, there is no quick and easy shortcut, but there are more efficient paths and ways to save time and find what you will need. For someone with no coding experience you won’t go from zero to Mark Zuckerberg in a few weeks. In fact, it’ll probably take you 4–6 months (and probably longer) of part time learning / work just to build a basic website with a frontend and a backend and have some idea of what you’re actually doing and why. Don’t get demotivated though — it’s a marathon, not a sprint. Get Started with Intro Courses — But They’ll Only Teach You Frontend, Not Backend ( Which You’ll Need Eventually) If you can’t code at all, an easy place to start is with codecademy’s introduction to Java Script (~20 hrs of work). However, you should also check out codecademy’s introductions to H T M L (~4 hrs), and C S S (~4 hrs). The reason that you also need to learn H T M L and C S S is explained by this article. On a scale of 0 (complete beginner) to 100 (expert fullstack developer), codeacademy will take you to about level 7. If you start with codecademy and get bored quickly (could easily happen) you might want to switch over to other resources. Codecademy’s logo I don’t recommend trying to learn to code by reading a book, in fact I warn you not to start down that path so early. Rather, learn to write code by finding resources that guide you to write code. treehouse. com dives deeper into Java Script and includes videos so it is more entertaining than codecademy (try the free trial). Additionally, free Code Camp. org provides more depth on H T M L, C S S, and Java Script than codecademy. Neither treehouse nor free Codeamp are strictly necessary, but friends of mine from my bootcamp highly recommended completing one or the other before enrolling in a fulltime bootcamp. I hadn’t tried them before enrolling in a bootcamp, but kind of wish I had. treehouse’s logofree Code Camp’s logo A lot of people (myself included) thought or think that they’ll be able to build something after completing codecademy tutorials, but this is almost always not nearly the case. If you’re starting as a beginner, you almost definitely won’t be able to build anything useful after completing the above tutorials — so don’t be disappointed when you can’t. However, although codecademy etc. tutorials can be tremendously boring, they are useful as introductions to syntax and writing basic blocks of code (functions) because they are basic and require you to code along to get to the next level. Keep Learning a Bit Longer At this stage, you’re probably impatient to get started with building a basic project, your own or otherwise. Before you jump in, if you haven’t done some more work through treehouse or free Code Camp, then it’s probably better to strengthen your Java Script abilities by completing a “bootcamp prep” course (either online or in-person) like this one provided by Fullstack Academy. Fullstack Academy’s logo After this, you may want to try solve some Java Script coding problems on a site like Codewars. com. Trying Codewars problems will probably quickly deflate your confidence, but things are starting to get fun at this point. Keep at Codewars until you can solve level 6 problems or move on. Learning to solve small problems now will help you save time later. Codewars’ logo If you need, here’s a list of additional Java Script resources. How do You Learn to Actually Build Something? At this stage you have two options (1) dive deeper into Java Script or (2) learn to put pieces together to “build” something. I recommend jumping to (2) with this Udemy course “ The Web Developer Bootcamp” by Colt Steele. The easiest way for me to show you how to build something is just to point you in the direction of the aforementioned Udemy course. It’ll review the basics of frontend development that you covered earlier ( Java Script, H T M L, C S S, and other new stuff) and introduce you to the backend and then show you how to put the pieces together. The Web Developer Bootcamp on Udemy by Colt Steele is informative and entertaining I recommend getting started with this Udemy course at this stage so that you can start to get a sense of how to build something asap. Most of your learning will happen as you try to build your first projects and need to figure things out for yourself. You’ll have to google things and read articles and watch online tutorials to figure out how to solve problems. Building a project is the best way to learn what is useful and necessary and this Udemy course is a great guide to getting you ready to eventually build a project. The course is 43 hours of video, but you’ll probably need to watch some videos twice. If you actually take the time to write your own code it could take you up to 80 hours of solid work (~4–9 weeks to complete part time). Admission — I never completed the course because I was already enrolled in a bootcamp when I found it, so I only used it to supplement my learning. I’ve looked at other Udemy courses as well as completed a full in-person bootcamp and this course does a very good job of putting things in perspective and putting pieces together. There will still be a large amount of basic C S that you aren’t aware off and there are some shortcomings to the course (no react, redux, sql, psql, sequelize, api integrations, web sockets etc. ) which aren’t too important at this stage but will become an issue if you think you’re ready to be hired as a fulltime web developer. On that note, at this stage you won’t be ready to be a fullstack developer and you won’t have learnt many important things for building cool web pages, web apps, and mobile apps (react, redux, sql, psql, sequelize, api integrations, web sockets, react native etc. ). However, you will be able to start building some stuff and you’ll have a much better sense of how to put pieces together and deploy something. Yet, I still recommend finding a more formal program, like a bootcamp, to take your abilities to a more professional level in a shorter period of time than random self-study. You Actually Have to Write Code — Stop Reading or Watching and Start Doing Please note that you’ll get the most out of the Udemy Web Dev Bootcamp course (and all courses) if you actually “write code”. When you just watch the videos you’ll feel like you ‘understand’ what’s going on, but the only way you’ll actually learn to build something and understand what you’re doing is if you write the code from scratch (repeatedly). I repeat: “write code”. I sincerely regret not being more vigilant in this regard from the start. Someone wrote this What about a Bootcamp? If you’re seriously considering getting a full time job as a developer or taking your skills to the next level of professionalism, then I recommend enrolling in a full-time or part-time immersive bootcamp, like the one offered by Fullstack academy. The advantages of a bootcamp are many, including professional instructors who will guide you in the right direction with a well-developed syllabus and instruction, classmates who’re smart and motivated, group projects where you build stuff and learn new technologies, and help with landing developer jobs. A bootcamp is not strictly necessary to land a developer job or take you to the level of building a high functionality application, but it can help tremendously. Landing a developer job after a bootcamp is not guaranteed, but if you’ve done plenty of preparation like the above guide, and are willing to work very hard for a few months, then you should be well prepared to excel with a good chance of securing a respectable job. Go Forth and Prosper The above guide will take you ~3–8 months to complete depending on the time you devote, your speed, and how deep you go. That’s a fair amount of work to get started with. If you make it that far — congratulations! At that stage you’ll probably either want to build your own project or enroll in a bootcamp or both. Good luck and happy coding!- Alex Someone made this after someone said this Examples of other guides / articles from a google search and why I don’t think they are the most helpful:1 — Too many resources listed, doesn’t tell you where to start, and doesn’t provide resources that will show you how to use Java Script to actually build something. 2 — T L D R, timeline too optimistic, textbooks put most people to sleep. 3 — Could be helpful together with the freecodecamp resources — but remember to write code, not just watch videos. 4 — Pretty good, but doesn’t tell and won’t teach a beginner how to actually get to building something with J S5 — Looks like it could be a good resource to understand the theory behind concepts better, but just reading this won’t teach you to code, for that you have to write code. 6 — The first answer is a long list of resources — but how do you know which are the best to start with? The answer by Daniele O’ Connor has some helpful advice. Many other answers will get you nowhere fast. 7 — Nope. 8 — Another long list of resources with no proper guide on which ones are the most practical. 9 — Ditto. 10 — Pretty useful but more for an intermediate coder because a beginner won’t understand all this or how to put it together. 11 — Also pretty useful but more for an intermediate coder because a beginner won’t understand all this or how to put it together. 12 — High-level but useful for an intermediate, tells the what but not the how to get started. 13 — Too high level, but useful. 14 — T L D R15 — Lynda. com — don’t use this, it will take you down too many paths you shouldn’t go down too early and may never need to go down.","['Web Development', 'JavaScript', 'Coding', 'Codingbootcamp', 'Beginner']",https://medium.com/@alexanderjames_77735/a-guide-to-learning-web-development-with-javascript-using-online-resources-zero-to-building-5cf87752af74,1,"['Fullstack Academy', 'Dev Bootcamp']",2,2,alexander,M,0.006647713270783119,0.9933522867292168
Porsche Digital Lab,Official Account of Porsche Digital Lab — the Porsche tech laboratory,"Code Camp: Everything is possible, nothing is necessary",2018-10-01 11:54:01,medium,"Code Camp: Everything is possible, nothing is necessary Whether beginner or junior professional — throughout the summer holidays, young people were able to implement their own programming projects in the Code Camp at the Jugendhaus Stuttgart- Neugereut with Porsche supporting the event of the Code + Design Initiative association. It’s quiet — very quiet — at the Code Camp in Stuttgart- Neugereut. Normally, 20 young people between the ages of 14 and 18 make significantly more noise when working freely in groups. But on this hot summer’s day, the youth centre Neugereut is full of busy silence. Some of the young people wear headphones and are immersed in their own world. Some people play a computer game or surf the internet. “ At our camps, the guideline is ‘everything is possible, nothing is necessary’”, explains Anna Brückner, project manager of the Code + Design Initiative e. V. The association has launched the Code Camp project throughout Germany and also runs the Code University in Berlin, which is supported by Porsche. “ During our events the supervisors in the youth centres usually have nothing to do, because the participants were highly concentrated on the issues they were solving. “ When I see the kids like that, I have the utmost confidence in our future. ” The code camps were developed as the first point of contact for the next generation of programmers, because there were hardly any beginner offers for young people. “ We want to provide a platform for young people who are interested in programming or just enjoy trying themselves out on new subjects. We just say ‘ Look for something that can be improved in your environment through technology’ — and then everyone can do whatever they want and we as caregivers are there to help. ” Filesharing apps and a dinosaur game And the concept works. In Code Camp Neugereut, which takes place in two courses of six days as part of the Stuttgart summer holiday programme, participants build music streaming and file sharing apps, an app for controlling debt with friends and a whole series of games. The 18-year-old Niklas, for example sits highly concentrated in a group of boys and purposefully creates his own Ludo game. “ I’ve been programming since I was 15. Creating something out of nothing — that’s just great. Here at Code Camp I learned to share and exchange my code. ” Mia, the youngest participant of the Code Camp and daughter of a Porsche employee at the age of twelve is on the move with ease. She spins most of the time on the big aisle and only sits down at the P C every now and then. As a dinosaur fan from the age of two, she has now built her own game in which a dragon and a dino make friends. “ I love dinosaurs. My first cuddly toy was a dino. And here in the Code Camp, as an only child, I have children around me every day, even during holidays. It’s really cool here. ” Porsche is supporting the Code Camp as part of the summer holiday programme with an amount of 20, 000 euros for the organisation and technology needed for the two camps with a total of 88 participants. The sports car manufacturer also pays half of the contributions of the 29 children from Porsche employees. “ The need for employees with I T know-how is growing steadily in our company. That’s why we want our donation to help get young people interested in I T and digitization, ” says Boris Graßhoff from Human Resources Marketing. “ With their mixed teams and open atmosphere, the Code Camps offer the best conditions for this. ” Tatjana Fichtner, Porsche A G A guest contribution by Tatjana Fichtner, Corporate Publishing at Porsche A G. Please find more about inspiring men & women on Twitter, Linked In and Instagram.","['Programming', 'Coding', 'Codingbootcamp', 'Kids', 'Tech']",https://medium.com/next-level-german-engineering/code-camp-everything-is-possible-nothing-is-necessary-5854df891c93,0,[],0,56,porsche,F,1.0,0.0
Omar De Los Santos,Software Developer,The Difference Between a Coding Bootcamp and an Apprenticeship: Part 3,2018-05-25 16:45:01,medium,"The Difference Between a Coding Bootcamp and an Apprenticeship: Part 3 Accurate Self- Assessment Today, I begin my fifth day as an apprentice with 8th Light. I’ve spent a significant part of this week learning Clojure through Koans, documentation (both open source and official), and Clojure for the Brave and True. I’ve asked my mentor for time to pair program today now that I’ve set up the architecture for a version of Tic Tac Toe built with Clojure. Dave and Ade’s chapter on self-assessment seems especially relevant to me today. Be the Worst As a bootcamp student, a large part of every day is dedicated to pair programming through a daily project. Because you’ll be paired with a random student every day, you’ll almost certainly encounter coders who are stronger and weaker than you. When you find yourself in the former situation, it is your responsibility to speak up and articulate when you are struggling. When you find yourself in the latter situation, you’ll have to patiently teach the other what you already know. Most often, I found myself pairing with a peer of similar skill level, but we often had complementing strengths and weaknesses. Learning to code through a bootcamp facilitates Dave and Ade’s advice to find a team in which you are the worst member (60). At the conclusion of the bootcamp, though, this will become significantly more difficult without seeking out external mentors, especially those with industry experience. Find Mentors At 8th Light, we greet everyone in the office (including the director) with a fist bump. As we’re leaving for the day, we also say goodbye to anyone remaining in the office with a fist bump. This casual ritual provides natural opportunities for checking in with one another. Although I have been assigned two mentors, I feel comfortable approaching my other colleagues to ask questions or to simply ask them how their own projects are going. At a bootcamp, you won’t find much trouble finding mentors among your peers, especially the instructors. Despite having been bootcamp graduates themselves, they are incredibly knowledgable and approachable. In fact, App Academy strongly weights non-technical daily pair-programming reviews when evaluating candidates. Although Dave and Ade suggest “seek[ing] out those who have gone ahead of you and strive to learn from them, ” I don’t feel that bootcamps focus too much on the second part of that suggestion (62). In my experience, bootcamps stress the importance of finding mentors who can help advance your career. Once you’ve graduated from App Academy, you’re expected to attend at least one networking event a week until you find a job. Though there exists a likelihood of receiving a code review or other technical assistance, the end goal of this effort is to secure an internal referral at their company. Knowing that I approached networking events with an ulterior motive made me somewhat uncomfortable with and critical of networking. Just last night, I attended an event where I met a software developer with 35 years of experience. He talked to me about the trouble he was facing learning to interact with and construct R E S Tful A P Is. He didn’t have much web development experience, and the experience that he did have was in S O A P. I enjoyed giving him a basic overview of how R E S Tful A P Is work and talking him through one of my projects that interacted with the Spotify’s R E S Tful A P I. The conversation felt genuine, particularly because I didn’t intend to secure a referral. However, I do credit App Academy’s instruction on networking for the confidence that I felt to approach strangers and talk about my experience with software development.","['Programming', 'Apprenticeship', 'Codingbootcamp', 'Coding', 'Mentorship']",https://medium.com/@omarnyte/the-difference-between-a-coding-bootcamp-and-an-apprenticeship-part-3-343e76c482f9,0,['App Academy'],1,0,omar,M,0.00476718171743994,0.99523281828256
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Yesterday morning I spent a few hours working on our group project.,2018-03-04 10:07:43,medium,"Yesterday morning I spent a few hours working on our group project. I wanted to make sure I knew how to properly pull from, and push to, Git Hub so the others could see my changes. I also wanted to experiment more with C S S. C S S still feels mostly like trial and error to me. I imagine the way I want the page to look, then search on Google for possible solutions. Most of the time there is no one stock answer. Which is good. Because even if there were, I don’t want to simply copy and paste without understanding. I want to understand why certain attributes and values have the effect they do. I want to understand the architecture of the page. Not just get the results I’m looking for. That seems to be the whole point of the class. To teach us how to learn. To teach us how to be persistent in finding solutions. I’m finding that I really enjoy the process of problem solving. Of being thrown into a problem, and having to figure it out. Maybe because I’ve been out of school for ten years, and it reflects real life. As a father, husband, friend. Whatever our role is, we’re often thrown into fires with little to no preparation. We are forced — more or less — to figure it out. Or even, at times, to just sit with the problem until the solution reveals itself. This morning my plan is to do as much Java Script training and review as possible, since we’re just diving in. That way what we go over in class this week can (hopefully) feel like a second time through. It’s the repetition I need to help it sink in.",['Codingbootcamp'],https://medium.com/@josephcardillo/yesterday-morning-i-spent-a-few-hours-working-on-our-group-project-1702ed13444a,0,[],0,12,joseph,M,0.004069495880582216,0.9959305041194177
Modestas,,"General Assembly, Web Development Immersive — Week 7 Overview",2018-03-16 12:00:03,medium,"General Assembly, Web Development Immersive — Week 7 Overview So it was time to learn one of the most, if not the most popular front end frameworks in web development: Angular. Going into it I was excited to see what the hype was about about and was immensely curious as to why this framework is the go-to choice for the majority of developers. With that being said, I was conscious of the fact that it was going to be a challenge, like with any new topic so far on the course. Angular J S The week started with us learning about the general history of Angular and the main functionality it provides in building a web application. From my current understanding, Angular is a framework that allows the developer to make A J A X ( Asynchronous Java Script and X M L) requests to an A P I and then manipulate that data in a way that you want it to be displayed to the user. Angular applications are also S P A’s ( Single Page Applications), as they only ever truly use one page to display content. This means that whenever Angular wants to display different content on that single page, it just switches out the current H T M L template for another one without ever having to refresh the page to render the changes. Some of the other components of angular that we learned about, were directives; which are these cool angular attributes that you can attach to any H T M L element that would essentially allow that particular element to have extra functionality or transform the element completely. So far, my favourite directive was “ng-repeat” which basically allows you to loop over and display an element multiple times. I found the syntax really easy to understand and much more readable than a traditional for loop. Factories is another interesting piece of functionality angular offers which allows you to reuse code in order to make your app more D R Y ( Don’t Repeat Yourself) as opposed to W E T ( Write Everything Twice). After being taught the basics, we built a fully restful angular app in class and then later one by ourselves as homework (with the backend portion already been provided for us). I found this to be a much less of a punishing task than when tasked to build a fully restful app on the backend though this may have been because I had already been exposed to it before and so the first time would obviously be more challenging. In general, I would say that Angular had changed my perception of front end web development. It made me realise that front end development can be just as complicated and intricate as the backend programming and I ended up realising that they share many commonalities. My main misconception was that frontend programming would primarily involve styling and design and not much logic which I realised was far from the truth. In fact, from what I can tell right now, there isn’t really that much difference between backend and front end so I wouldn’t mind getting a job as just a backend or frontend as opposed to fullstack. However, with that being said I think i prefer the front end because I enjoy being able to have opportunities to actually see the results of my code rendered on a webpage. Challenges I think the hardest part for me so far in terms of learning angular, and programming in general, is remembering all of the little components needed in order to make the application work and also following the application along whilst getting to grips with what exactly is occurring each step of the way. I feel as though every component of the application is interdependent, so its kind of hard to distinguish where the process begins and where it ends in this symbiotic cycle. Going forward, I think the thing I need to definitely improve upon is my ability to concentrate for longer periods of time. I frequently catch myself dozing off and then having to play catch up with all of the new knowledge that had been taught during the period where i was no longer mentally present. This also serves to break my momentum and acts as a vicious cycle, because I start feeling as though I will never catch up and so I’m more likely to think about not being able to catch up and then end up losing out on even more information. I need to make a commitment to myself to be fully present in the class as much as I possibly can.","['Angularjs', 'Codingbootcamp', 'Web Development', 'Coding', 'Programming']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-7-overview-d612c8351a97,1,['General Assembly'],1,0,modestas,Unknown,Unknown,Unknown
Mary Sedarous,Marketing and PR at Code Chrysalis. Undergrad at UW-Madison and Master’s from University of Tokyo. I tweet about spies @MarySedJP on Twitter :),Code Chrysalis Cohort 3: Graduating Student Introductions,2018-03-23 06:27:15,medium,"Code Chrysalis Cohort 3: Graduating Student Introductions Today we’ll be introducing a few of our immersive students who are expected to graduate at the end of this month! They’ve come to Tokyo from across the globe, with equally diverse backgrounds and expertise. We hope you enjoy this glimpse into the particular skills and interests of our third generation, and if you want to learn more please take a look at our student interviews. Please come to their demo day at the end of March! They will be showcasing the different projects they have done and all that jazz. You can find more details here on Meetup. com. Elia Ahadi: A graduate of Penn State with two master’s degrees from Stanford and John Hopkins respectively, Elia has developed new technologies in various capacities across the globe. These include time spent as a contractor for a multimillion dollar D A R P A project in Afghanistan, product manager for a startup with locations in California and China, and — most recently — as a Web Developer. His tech interests include U X/ U I, A I, and “any tech that makes life easier. ” Christian Schmidt: Christian is a former Senior Engineer at the travel company Trivago — their first ever developer — where he supervised the company’s growth across multiple tech platforms, creating the infrastructure for the now €1 billion company. His projects include development on behalf of the German Federal Ministry of Education and Research as well as the more recent creation of a website connecting pet shelters with prospective adoptees. He is interested in new technologies, and is making plans to sail across the Atlantic Ocean in his free time. Shingo Konnai: A graduate of the University of Tokyo with a master’s degree in Information Science and Technology, Shingo has spent the last 5 years working as a developer, product manager and systems architect at N T T Data Corporation. His recent projects include everything from a web-based chat app to a drone flight-planning app which was presented to Rakuten. He is interested in web A P Is, Io T, and machine learning and, outside of tech, he is an active practitioner of Aikido. Ryuta Udo: Ryuta is a software engineer from Osaka University with a background in mechanical engineering, and has experience in multiple professional fields. He has worked in quality assurance, account management, and as both a frontend and full stack software engineer. In the past year alone, he has developed a visualizing heap sort algorithm as well as a simulation app for cryptocurrency prices. Outside of tech, he plays shogi and regularly runs marathons. Yi- Tze Lin: Born in Austria, Yi- Tze has worked across finance and fintech in China, Taiwan, and Signapore, with degrees from Vienna University of Economics and Business, Nanyang Technical University, and Carnegie Mellon University. He is fluent in German, English, Mandarin, and Taiwanese. Past projects include the development of Hedge S P A Analytics’ cloud-based investment platform as well as the enhancement of its financial models using M A T L A B. He is interested in machine learning, data science, algorithmic trading, and web development. Masataka Shintoku Originally from Osaka, Masataka has spent the last 8 years at the N T T Data Corporation’s Patent Office as a full stack engineer and consultant. During his time there, he oversaw a team of application engineers, streamlined the office’s management system, implemented the company’s online credit card payment system, and was the architect of the company’s disaster recovery site and protocol. He is interested in Bitcoin — he even translated a Bitcoin core developer’s online book into Japanese — and spends time outside of work visiting famous temples and shrines. Code Chrysalis is a 12-week advanced software engineering bootcamp in Tokyo for entrepreneurs, advanced beginners, current developers, and dreamers. Interested in joining? Apply here. Curious about what it’s like to attend our immersive? Check out our You Tube videos!","['Startup', 'Coding', 'Coding Bootcamp', 'JavaScript', 'Tokyo']",https://medium.com/code-chrysalis/code-chrysalis-cohort-3-graduating-student-introductions-d70086ab0911,5,[],0,4,mary,F,0.9963367130940759,0.0036632869059240857
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 6 – Mike Brave – Medium,2018-08-26 16:05:14,medium,"42 Piscine Day 6 Edit: This is part of a series that culminated here, Next post. Previous post. Day 04 was due, I didn’t get it turned in. I was too busy trying to understand the stuff for the rush00 project and trying to understand concepts like arrays and pointers, day04 was all about recursion, which I sort of understand but not nearly enough. I tried to put in some time to work on it at night but my brain was mush so it didn’t happen, couldn’t happen. I need to prioritize better, and try to be working on things a day ahead I think. No new assignments today but I do need to finish the rush00 project and work on the sastantua project which I don’t yet fully understand. The gist of it seems to be though that we are visually displaying a pyramid with a door, and it sort of works like a fractal. Also I’m tempted to try and get a head start on the next assignments (05) so that this never happens again. A girl here tried to put together a study session last night, I was the only one that didn’t fail the test that showed up. It went alright for about 15 minutes and then people who liked hearing themselves talk dominated the conversation and other people trickled out. I think this may evolve into a test prep session next Thursday night, which I think would be the best use really. I may have to take a little more charge and be the organizing girls lieutenant to help it run smoother or something. My roommates smoking continues to be a problem, I woke up coughing and my lungs are congested, their smoking is actually making me sick, I really do need to switch rooms. I’m contemplating sleeping with a surgical mask on or looking into air purifiers, but I have no idea if those would help. Part of the problem is that everyone else who has offered I could room with them also smoke, but I don’t think to the degree of my current roommates, I also think most of them do it outside ( I can’t confirm that my roommates smoked in the room, but I can’t explain why they carry so much of a smell with them or why it’s irritating my sinuses so much, perhaps they hotbox the car, or maybe they are actually smoking in the room which would get them kicked out, which is part of why I hesitate to ask to move). It feels petty to ask for a room change, but I seriously haven’t slept well in over four days, and this really will make me sick if the trend continues. Speaking of my roommates though, they have already signed up for the next piscine, which I’m not sure how to do other than using a new email, perhaps that is the how of it. I did tell my job I was coming back, other than breaking my word about that though I‘m ok with not going back, I don’t really have a place to stay and was going to rent an Air Bn B while I worked a few more months to save money before coming up here accepted. So what I lose is a bit of money making and a bit of integrity. I’d like to do the piscine again though even if I do get accepted to understand a bit better. I’ll think on it, I’ll probably try to sign up for it and then have the option available. Keeping my word matters to me though, but at the same time I was feeling really done with that job, already gave sufficient notice and at worst I pushed back their posting of my old position by a week or two, so not that bad. All my life I’ve been one to sacrifice what I needed to help those around me, most crappy situations in my life have been exactly these types of situations, where if I had prioritized what I needed over what other people asked for or what I assumed they wanted then the problem wouldn’t have happened. Which now becomes a more interesting question self preservation vs integrity. If a man dies for a lost cause is he a fool or a hero? Which brings this full circle almost. The piscine itself is more than anything teaching us to be proactive, to do and ask and take responsibility instead of being given or handed things. To seek out the answer and figure things out instead of being told what to do. Which is exactly what I need, though it’s a hard medicine to take. I feel like I’m exactly where I’m supposed to be, even though I’m barely sleeping, my brain turns to mush everyday and I’ve never felt so dumb. This is right, and it’s time to get back to work. Other thoughts: what we often mistake for intelligence is actually familiarity and preparation.","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-6-8f3bc425310a,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
McKenzie,Student at Flatiron School in NYC,Common Ruby Enumerable Methods Guide – McKenzie – Medium,2018-09-12 01:00:40,medium,"Common Ruby Enumerable Methods Guide When I started learning to code with Ruby, iterating over arrays and hashes proved challenging. Knowing the difference between #each, #map, #select and other essential enumberables is extremely important to grasp early in one’s coding journey. Here is a short guide to help understand the differences between some helpful Ruby enumerable methods. #map or #collect The #map and #collect methods have the same functionality. According to the official Ruby documentation, these methods “return a new array with the results of running block once for every element in enum. ”#map You can see that the original variable is equal to [1, 2, 3, 4, 5]. When you use #map on this array, you are passing each element into the block, which multiplies the element by 5 and returns the changed array. However, this method does not change the original array variable. # select The #select method will return a new array of all the elements in the original collection for which the conditional returns true. This method looks through the data and narrows the collection down to only the desired elements (or that the block evaluates to true). #select In this example, the array is equal to [1, 2, 3, 4, 5] and the desired set is only even numbers. The return value for this would be [2, 4] since those elements are even. However, this method does not change the original value of the array. #reject The #reject method will return a collection for all of the items where the conditional is false. #reject For example, the original variable was an array that equals [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. The block of code was checking to see if each element was an odd number. If it was, it was rejected. The original array was not changed. #delete_if The #delete methods delete every element of the array which the block evaluates to true. #delete_if#delete_if is similar to #reject. However #delete_if will change the original array. #find The #find method will pass each element into the block and return the first object for which the block is true. #find#any? This method will return true if the code in the block evaluates to true for A N Y element in the collection. #any? There are tons of other helpful methods out there. I suggest taking a look at the official Ruby Documentation for some more Enumerable methods:https://ruby-doc. org/core-2. 5. 1/ Enumerable. html","['Ruby', 'Codingbootcamp', 'Programming', 'Software Development', 'Software Engineering']",https://medium.com/@mckenziefiege/common-ruby-enumerable-methods-guide-2a9cb2880415,0,['Flatiron School'],1,50,mckenzie,F,0.9631570052391415,0.03684299476085854
Lucia Gore,May 2018 cohort at Makers Academy - future Software Developer,Reflecting on Pair Programming – Lucia Gore – Medium,2018-06-04 09:34:57,medium,"Reflecting on Pair Programming Pair programming is something that we at Makers Academy have to do each day and it has definitely been a learning curve for each of us in different ways. Pairing is a give and take process whereby one must learn to work with someone who is perhaps a different standard, has a different learning style, and even different logic to yourself. It’s difficult at times to appreciate another’s opinion when you feel differently about something but it is invaluable as a learning experience in order to broaden your mindset as to the possibilities of code and the different ways in which the same problem can be solved various different ways. Photo by rawpixel on Unsplash I have been very fortunate that on my cohort everyone has been very willing to learn from one another, and personally I have not struggled with pairing in the ways I might have expected. That said, I have been incredibly aware of enabling my pair to learn, and perhaps haven’t allowed myself the space I need to learn in depth, for fear of holding the other back whilst I take the time to fully understand something. This, importantly, is not the fault of my pair, but my own fault, as only I can really know where I stand on a subject, and know when I need to focus more heavily on one thing or another. Moving forward with the course, and with any job I might find myself in that involves pair programming, I aim to follow these 5 key principles: Begin the session by setting goals. Make it clear what you would like to gain from the session and allow your pair partner to do the same. Do not wait for your pair partner to offer support, be the first to do so; be patient and generous with your time. If both programmers are striving for their own personal achievements, then the pairing is bound to be unsuccessful, and so offering to engage with your partners goals, will almost certainly result in them doing the same in return. Check in often, make sure your partner has understood what you’ve worked on, and do not be afraid to voice your own discomforts. Take breaks often — don’t just focus on the code — get to know your pair partner — it will help you work better together! Feedback with your pair at the end of the session to make sure you understand what you have achieved and to get evidence of your progress.","['Programming', 'Makersacademy', 'Codingbootcamp', 'Pair Programming']",https://medium.com/@gore.helena/reflecting-on-pair-programming-e0529243dd12,0,[],0,1,lucia,F,0.9978235913134985,0.0021764086865014827
Emily Hunt,,Python vs R. – Emily Hunt – Medium,2017-05-17 16:43:33,medium,"python-vs-r-programming Byte Academy Python vs R. Which language should you choose? | Byte Academy | Top Coding School for Python, Block Chain & Fintech Wednesday, May 17, 2017 Data science is an interdisciplinary field where scientific techniques from statistics, mathematics, and computer science are used to analyze data and solve problems more accurately and effectively. It is no wonder, then, that languages such as R and Python, with their extensive packages and libraries that support statistical methods and machine learning algorithms are cornerstones of the data science revolution. Often times, beginners find it hard to decide which language to learn first. This guide will help you make that decision. Let’s take a look at the languages. Introducing R R is an open-source, statistical computing language that was built in 1995 by Ross Ihaka and Robert Gentleman. It was created with the intention of making data analysis, statistical models and graphical models easier. R has a large repository of packages called C R A N that users routinely contribute to. One of R’s main strengths is that it has a very active community that provides ample support to users via mailing lists, Stack Overflow forums, and very extensive documentation of all its packages. R has a slightly quirky syntax which can be hard to pick up for beginners but is especially suited for people from a statistical and research background looking to get started with creating their models quickly. Introducing Python Python is a high level, interpreted, general purpose language that was built in 1991 by Guido Van Rossem to improve programmer productivity and code readability. It is usually the preferred language for programmers and people with a computer science background looking to get into data analysis. It is a very flexible language, making it great for production level work and, like R, has libraries of packages around statistics and machine learning in Py Pi, the repository of Python packages. It has great community support, although being a general purpose language it is not all concentrated around data science. The biggest advantage to using Python is the availability of packages such as Theano, Keras, sci kit-learn that are important machine learning and deep learning libraries used by both academic research purposes as well as for commercial intent. Choosing the right language As professional problem solvers, data science practitioners need to have a versatile set of tools as part of their repertoire. While learning both R and Python is ideal, given that R makes data cleaning and manipulation a very easy task while Python is better for building models on larger data sets and scale, we all have to begin somewhere. And the right choice for you can be determined by the following factors — previous programming experience, educational background, career aspirations, and interest in working with deep learning technology. If you have any programming experience prior to learning data science, our recommendation would be for you to learn Python. Its clear syntax would be easy for you to take up; and with it being a general purpose language, you’d have the added flexibility for building novel stuff. Even a complete novice is advised to learn Python, as it is one of the most beginner friendly languages in Computer Science, being the most popular introductory teaching language in the top U. S. universities ( Communications of the A C M article, 2014). R code gets to the point more quickly and is less verbose as well, but it has a quirky syntax that would be difficult to learn for both hardcore programmers and beginners alike. We recommend this course for those interested in learning Python programming. Having a background in statistics or mathematics makes R a better choice for you. This is because R is a domain specific language created specifically for statistics, making its usage intuitive for people with a degree in statistics. R was created by statisticians and made with other statisticians in mind, so having a grasp of statistical analysis makes the transition into this language all the more easy. As a data analyst/business analyst/financial analyst, your focus would be on extracting the most information out of your data, without needing to create a product out of your content. For this reason, learning R and a database language like S Q L would serve you better as R is great for working with tabular data on a single system/server and has great libraries like ggplot2 for easy visualizations. But a data scientist has different requirements, as they’re expected to carry out analysis as well as create products such as machine learning engines that work on the database of a website or a software. This would require both software development as well as predictive modelling work which can be better accomplished by a general purpose language like Python. These principles would apply across all industries. Deep Learning is the trending topic du jour and anyone with an interest in contributing to the growth of artificial intelligence technology should be learning Python. Its overwhelming popularity for both machine learning, as well as deep learning, comes from the fact that Python acts as an interface between the programmer and lower level languages like C/ C++, this making it very easy for experimenting, creating models and debugging without compromising on computational speed (as the machine uses C/ C++and C U D A technology to build the models). This makes Python a very accessible language for mathematicians and statisticians looking to create neural network models without having to start creating them from scratch due to the pre-existing frameworks provided by Python. Final Notes As you can see, the deeper you wish to get into data science and machine learning, the more it makes sense for your to opt for Python, though R has its own advantages as well. Ultimately, having a thorough understanding of both, each language’s limitations and strengths is the best approach to learning these two unique languages. With that said, we suggest data science enthusiasts make a choice that’s suitable for their needs and aspirations. Originally published at byteacademy. co on May 17, 2017.","['Data Science', 'Python', 'Ruby', 'Codingbootcamp', 'Deep Learning']",https://medium.com/@emily.h/python-vs-r-7b9fcba49339,6,['Byte Academy'],1,0,emily,F,0.9979317746535663,0.002068225346433675
David,Continuous Learner,How I started programming 8 months ago (and some advice on learning how to code),2017-01-01 19:59:28,medium,"How I started programming 8 months ago (and some advice on learning how to code) This is part 1 of a 3-part series on my journey as a software developer:1. How I started programming 8 months ago2. Lessons learnt from General Assembly’s Web Development Immersive 3. From bootcamp to real-world software development Passing it on2016 was the best year of my life. Apart from marrying the love of my life, I also began my journey as a web developer. Just 8 months ago, I knew literally nothing about programming. Coding looked scary to me. I’d always look with envy at my colleagues who wrote code in Stata, thinking that I’ll never figure out how to do those complicated things in code. But 8 months on, I’ve picked up several languages ( Javascript, Ruby, Python, Bash, Java), frameworks ( Rails 5, Angular 1 and 2), software development methodologies (mainly agile development and test-driven development) and built a few apps. I’ve played only a small part in this progress. In fact, I was able to learn this much in less than a year thanks to (i) a structured learning experience at General Assembly’s Web Development Immersive course, (ii) an awesome instructor who made programming accessible and interesting, (iii) the wide plethora of resources and tutorials available on the the internet, (iv) smart people whom I met at the course and at meetups, and most importantly (v) my patient wife who let me code in almost all of my free time :-) This post is my way of passing it on. You may or may not have the luxury of time to join a 3-month full-time course. If you do, great. If you don’t, fret not — there are lots of materials out there that can get you started. In this post, I provide a breakdown of what I learnt each week, and each week’s topic(s) is accompanied by links to docs/tutorials/resources which I think provide comprehensive coverage for the given topic. I also list some tips on how to learn how to code. I hope it serves as a guide for anyone who’s thinking of learning to code, and hopefully an indication of what you can learn in a span of a few months! How it went down I’ve listed the schedule below in weeks (numbered), since the actual dates (e. g. Oct 31) don’t matter. Week 1 starts on 23 May 2016. Weeks where I didn’t learn a new topic are left blank. At General Assembly Web Development Immersive (as a student) Week 1: H T M L, C S S, Javascript, Command Line and Git (and more Git) Week 2: More Javascript and j Query Week 3: Built a snake game with H T M L, C S S, Javascript and j Query. Week 4: Ruby Week 5: Rails 5 (the fun way and the quick way) and deployment on Heroku Week 6: Built a volunteer-matching app on Rails 5 Week 7: Server-side application development with Node and Express Week 8: Learnt how to consume A P Is. Built a simple A P I using L T A carpark data and visualised it using leaflet. js. Also, we learnt Test Driven Development ( T D D) with mocha Week 9: Built a full-stack reading app as a group project Week 10: Angular 1 Week 11: More Angular 1 Week 12: Built a learning app in Angular to gameify mathematics At General Assembly Web Development Immersive (as a teaching assistant) Week 13: Finished reading Eloquent Javascript (after 12 weeks!). Learnt how to use C S S pseudo-elements. Practiced T D D and a code kata a day every morning at 6am on Codewars ( Trust me — it gets really addictive) Week 14: Read up more on object oriented programming Week 15: ( Married the love of my life woohoo + got accepted by Thought Works) Week 16: Week 17: Learnt python with a friend who was interested in biostatistics. Week 18: ( Part 2 of wedding in Vietnam) Week 19: ( Part 2 of wedding in Vietnam) Week 20: Re-learnt Rails 5 Week 21: Read up on data science (linear regression, logistic regression, decision trees, random forest) Week 22: Type Script and Angular 2 Week 23: More Angular 2 Week 24: Read up more on data science and built a Messenger chatbot that identifies train breakdowns in Singapore based on tweets I’ll write about my journey after General Assembly in my next post. We’ll talk about exciting things like algorithms, data structures, T D D, Java and Bash. Tips for getting started with programming Don’t do it alone. When I tried learning programming on my own, I would get an error and that error would block up 2–3 hours of my time, and I would have no clue why it happened and how to fix it. And I’ll give up. If you can find a mentor or a friend that knows a little more programming than you, that would be good. If not, gather 2 or more friends and work on tutorials/mini projects together. Doing it with someone else exponentially increases debugging speed, learning, fun and confidence. Work on your fundamentals for the programming language of your choice. The fundamentals are largely the same across languages (variables, functions, conditional statements (if-else, while loops, for loops), data structures (arrays, objects)). Once you pick up the fundamentals for one language, the process for learning another language can be quite similar. Sharpen your fundamentals by doing programming challenges (do one a day if you can). The fundamentals will go a long way when you’re building your app. Learn how to read the docs. Every self-respecting language and framework comes with good documentation (example). Documentation can look intimidating at first because there are a lot of words, but they are essential when you’re learning how to write/use code. My advice would be to focus on just three things: (i) the syntax, (ii) what inputs it requires (a. k. a. arguments) and what it outputs, and (iii) example code snippets (i. e. how to use it). Get immediate feedback. Following on from point 3, I think the fastest way to learn how to code is to take a snippet (e. g. a for loop, or a method like . sort() or . slice()), play around with them, break them, fix them until you get a sense of how it works. Repl. it is great for testing small code snippets in Javascript, Ruby, Java, Python, etc. and Codepen is great for H T M L, C S S, Javascript and other libraries such as j Query. This is the best part of programming — you get to have immediate feedback and iterate quickly at very little cost! Fixing bugs and errors. We will undoubtedly see error messages when we’re learning to code. They are scary at first, but they are in fact our best friends. They tell us which exact line in which exact file is the cause of the error. In the spirit of the Feynman Algorithm for solving problems, I’d like to introduce the S- O (stack overflow) algorithm for fixing bugs: (i) read the error message (it tells you which line the error is coming from), (ii) try to fix the error, (iii) failing which, copy the error message on Google/ Stack Overflow’s search, (iv) read through people’s suggested solutions and see whether they work in your situation, (v) fix your error! ( This may sound like something very obvious, but based on what I’ve observed, this pattern is not immediately obvious to everyone — so I thought I’d just list it down anyway) Build small projects. Build something in one afternoon, a weekend, or a week. Even though simple projects like Hello World projects, a blog, or a twitter clone may seem trivial, they are a great way for us to build something functional and to gain confidence! Just start! When faced with so many options on what to learn, our brain goes into paralysis-by-analysis, and we spend all our cognitive resources thinking about what we should learn, rather than actually learning them. Just pick something and go with it for a couple of weeks. Be patient with yourself. Programming is difficult. Coding involves regular failure. I have felt lost and stupid at many points in time. Rome wasn’t built in a day. Learn together with some friends (see point 1), keep moving forward and have fun! Must… keep… coding! If you’re interested in getting started, but are not sure how, leave a comment below and I’ll point you some meetup groups or resources that may be of help.","['Web Development', 'Programming', 'Coding', 'Learning To Code', 'Coding Bootcamps']",https://medium.com/@davified/how-i-started-programming-8-months-ago-and-some-advice-on-learning-how-to-code-e73c3972da9a,0,['General Assembly'],1,93,david,M,0.0035582779766708743,0.9964417220233291
Tristan R Schmitt,Decided to join the ranks of the Software community and learn how to code via The Iron Yard. From Montana to DC and beyond.,My Journey Through The Iron Yard Coding Bootcamp. V2,2017-07-03 23:01:01,medium,My Journey Through The Iron Yard Coding Bootcamp. V2<flexbox=the_devil> Week number two has begun… July fourth is tomorrow and we have the day off from official class but we have a big project that involves building our own H T M L webpage (with 3 navigation links and subsequent pages) and then style it in C S S ( Cascading Style Sheets). We have learned this wonderfully complicated tool called Flexbox for C S S and its been half a week and I still have no grasp on the subject. I am starting to think that Front- End Engineering is not for me if i cant seem to grasp a layout tool. I will not let it succeed! With the day off tomorrow I plan on rewriting my style sheet as it is easier to work with the stuff I know works and go from there. Copy and paste is my friend. A resourceful developer is a smart developer. This is a jumbled mess…. I don’t need half those lines of code… So much for a lax 4th! While the rest of you are enjoying a cold beverage and some lake time I’ll be sitting at my computer trying to solve the confusion that is Flexbox. The gif below describes my working of C S S perfectly. https://media. giphy. com/media/y Y S S Bt Dgbb Rzq/giphy. gif I hope everybody has a fantastic 4th! Stay safe out there friends.,"['CSS', 'Software Development', 'Software Engineering', 'Coding', 'Codingbootcamp']",https://medium.com/@tristanrschmitt/my-journey-through-the-iron-yard-coding-bootcamp-v2-529dc75e0a2b,0,['The Iron Yard'],1,2,tristan,M,0.05483753447946845,0.9451624655205315
Maddy King,Education x Tech,Teaching is learning: A teacher’s journey into code,2018-03-06 21:54:45,medium,"Teaching is learning: A teacher’s journey into code Peter’s picking up new skills to take into retirement. Enspiral Dev Academy trains beginners into work-ready junior developers through 9–18 weeks of remote study and a 9 week intensive in-class bootcamp in Auckland or Wellington, New Zealand. Peter (centre) and team work on their final group project at Dev Academy Peter Sim is a schoolteacher in his 60s. He’s taken on the challenge of completely upskilling in order to gain high quality web development work to take him into his retirement. Peter spoke to us about Dev Academy. “ My ancestors came to Wellington in 1841. That’s when the first tranche of ships started turning up. They settled in Johnsonville. My great-great-great grandfather, James Sim, was the one who brought the family out from Scotland. ”“ I’ve been a secondary school teacher in New Zealand since 1981. I was originally a chemistry and a science teacher, but when I was training computers and personal computers were just starting to emerge, the Apple 2, the T R S80, the Commodore Pet, those sort of things. This revolution prompted me to do some Stage 1 computing papers to finish my degree. So I was right on the cusp, you might say. For some of those papers it was punchcards and Fortran and things like that. So I’ve always had that interest, all the way through. ”“ I came down to Kamo College in Whangarei, and I was there for about 17 years. I was originally employed there as a chemistry and science teacher, but it was recognised that I had a pretty strong interest in computing, so I was given a couple of computing classes as well. And it just so happened that the person who was running all the computing left before the person who running all the chemistry. So I took over. ”“ Students would say — ‘ Well why not? Why aren’t you doing that?’”” I then worked as an I C T facilitator in Auckland for a few years, and for the last 6 years I’ve been at Bream Bay College in Ruakaka. And obviously when you’re approaching your 60s you start thinking about retirement. ”“ For the last few years I’ve been teaching Digital Technologies, and in order to encourage students, one of the things I would say is, ‘ If you find that you like doing this stuff, there will be well-paid jobs for you. ’ They’d say, ‘ How well-paid?’, and you’d sort of pluck figures like ‘$100, 000 — more than what I’m earning. ’ And the students would say — ‘ Well why not? Why aren’t you doing that?’”“ So I’ve been teaching web development with students at school, but obviously at a fairly low level, largely H T M L and C S S, and just static pages. But it really empowers people. Anyhow, one of the things I’ve always wondered is, wouldn’t it be good if I could actually experience what it meant to be a developer, and possibly get some remote work. I do have people from time to time asking me to do work for them, create websites and so on. ”“ So really the thing that’s brought me here is, I’m putting my money where my mouth is. I want to see if my skills are sufficient. ”“ I don’t know what I don’t know, and part of me being here has been to try and figure out the things that I need to know in order to be able to work at a high enough level. And all the frontend / backend stuff — you don’t really have to know much of that in school, not to the same level and depth. So that’s been a lot of learning. ”“ So really the thing that’s brought me here is, I’m putting my money where my mouth is. I want to see if my skills are sufficient. ”“ I do appreciate that I’m going to need some sort of portfolio and some kind of work experience, and I think people coming into this need to understand that this is not the kind of job where you train once, and do it. You’ve got to keep working on the technologies, because even here on the bootcamp, if I find something from 2 or 3 years ago, it’s all out of date now. So the pace of change is really quite dramatic, and if you don’t stay on top of it, if you’re not constantly trying to master new things, then I don’t think you can be successful. ”“ The cohort and the teacher at Dev Academy have been absolutely amazing. They’ll give anything a go, nothing is too hard. I was talking to some friends last night about our group projects, and they said, “ Well in groups you always get slackers. ” But here you don’t. Everybody has really put in to be where they are, and so you have to work damned hard — there are no passengers in the groups here. And Don, our teacher, his depth of knowledge and experience, it just shines through every day. ”“ The cohort and the teacher at Dev Academy have been absolutely amazing. . . Don, our teacher, his depth of knowledge and experience, it just shines through every day. ”“ Dev Academy brought in some speakers from Xero yesterday, and one of the questions that we asked was, “ What’s your favourite part of your job. ” The answer was, “ Solving problems, coding, getting something to work. ” The fact that you can create an idea in your head and then turn it into fruition, that’s what really appeals to me about this. Being able to make it all happen. ” For Peter’s final project, his group are making an app for cryptocurrency arbitrage happen. The app, DeltΔge, identifies the changes in currency fluctuations so traders can exploit them. Peter explains, “ DeltΔge combines delta with arbitrage, which means buying and selling commodities. Delta (Δ) is a symbol for change, and Deltage is Danish for take part. ” The Deltage team Peter’s taking part in the technology change — and you can too. If you’d like to begin your journey into technology and be a part of changing the future, apply now for Dev Academy.","['Tech', 'Codingbootcamp', 'Cryptocurrency', 'Retirement', 'Technology']",https://medium.com/enspiral-dev-academy/teaching-is-learning-a-schoolteachers-journey-into-code-e61340fdbc26,1,[],0,12,maddy,F,1.0,0.0
Toby Ladislas,,8 lessons I’ve learned in 8 months out of a coding bootcamp,2018-08-09 00:58:12,medium,"8 lessons I’ve learned in 8 months out of a coding bootcamp Another ever-increasingly-common (but still awesome) story: I learned to code, and changed my life and stuff! The end. But instead of a timeline for my career change, here’s a job…uh…line. English Teacher → Sub → Gym Teacher → Boot → Web Developer As you can see, it was a swift transition into something I knew nothing about. I wrote some H T M L back in ’03, where I successfully changed a page’s title to an Outkast song. But after that I dreamed of summers off, and my choice was made. That is, until I had to pivot into a new subject area. No offense to you physical educators, but being the guy with the whistle for awhile made me realize I’d rather do something else entirely. I’ve always been happiest in front of a computer of some kind, so here we are. After graduating with the last cohort of Dev Bootcamp in Chicago, my search to make the career change official was finally underway. It may have taken as long as the bootcamp itself, but it finally paid off last month when I took my first full-time I T job in Atlanta. It’s 8/8, and I graduated 8 months ago today. So, here’s 8 things I’ve picked up along the way!(sidebar: I know I forgot it, agree to disagree, etc. )(1) Best way to job search: Attack from different angles There was a time when I asked everyone I networked with how they got their job, so I could just do that thing over and over until I got one, too. But a combination of approaches is the best bet. Go to meetups, hackathons, conferences, unconferences, so on and so forth. Do cold outreaches. Make cool stuff and show people. Binge-add on Linked In. (2) Everyone else is still learning, too. Impostor syndrome. Maybe you’ve heard of it. It can be a little weird when you’re around experienced devs spouting gibberish — you may think you’ll never reach that level. But you will. And what you know now can still be valuable to someone. Yesterday, I taught someone with more experience than me two things: How to properly add and use private methods to a Ruby class, and a trick to add parentheses/bracketies/quotes/curlies to a highlighted section in a text editor. These things weren’t revelations, but I still taught someone something. And that’s the other thing: Teaching is learning. (3) Speak up! One of my favorite catchphrases from D B C was:“ Don’t suffer in silence. ” When I first started out, I used to put my headphones in and just try really hard to focus when I got stuck. But if you don’t get something, you don’t get something. The best thing to do in any ‘stuck’ situation is to swallow your pride and get another pair of eyes. (4) Speed isn’t everything, but it certainly helps! Before I started on this path, I was already typing 80–90 words per minute. When you know exactly what you’re going to code out, it’s still going to get there either way, but there’s something particularly satisfying about doing it in half the time. But whatever your typing speed, there’s these nifty things called ‘keyboard shortcuts’. Learn ‘em! And there’s no shame in taking the initial time to set up an ideal environment to churn out those lines as fast as possible. (5) Coding doesn’t have to be your lifestyle. This is a personal choice, but I’ve found that to grow and maintain my skills after D B C, I didn’t have to eat frameworks for breakfast, languages for lunch, and libraries for dinner (but who doesn’t enjoy a tasty library from time to time??). In fact, as I grow in this field I’ve been finding more and more ways to completely disconnect with technology for short periods of time. Remember that Chrome isn’t the only thing that needs to be refreshed often. Those breaks might just be exactly what you need to figure out a problem. (6) Dealing with people is half the job. One of the toughest parts of teaching was dealing with difficult kids. Turns out there’s also difficult adults. Whoa! Luckily, I haven’t had much frustration post-job search so far, but 90% of that frustration didn’t come from a codebase — it came from other humans. It’s going to happen — there will be personality clashes. A valuable lesson I picked up from teaching, though, is to choose your battles. But if you just can’t shake it, the best approach is head-on. Don’t let it fester and cause more issues later (see title of #3). (7) Getting paid in experience is still getting paid. Before starting full-time in A T L, I worked for a Chicago startup for free. A bit after I started, I was tasked with recruiting fellow alumni if I could. One particular response stuck out to me:“ I need to be paid. You should have said this upfront. ” Well, duh! Don’t we all? Sorry to waste 5 seconds of your time, buddy! Especially for me, being someone new to the field and to the business world in general, I decided to take on a different attitude than that. Sure, the end goal is to make bank, but with so many junior devs out there, I find it downright silly to pass up any potential opportunity. And as it turns out, my experience working for free got me the gig I have now. “ You miss 100% of the shots you don’t take. ” - Wayne Gretzky- Michael Scott(8) Staying positive works. When it’s all said and done, the most important lesson I’ve picked up as a rookie software developer is to keep your head up. Whether you came from a technical background, a teaching background, or from flippin’ B O R G A R down the street, one thing is certain: You will fail. At something, anyway. And when you do, all that matters is how you pick yourself up.","['Web Development', 'Bootcamp', 'Codingbootcamp', 'Coding', 'Career Change']",https://medium.com/@tladislas/8-lessons-ive-learned-in-8-months-out-of-a-coding-bootcamp-21d1be6f3a8b,2,['Dev Bootcamp'],1,0,toby,M,0.18791749247595976,0.8120825075240402
Sean Sutton,,Client/Server Model – Sean Sutton – Medium,2018-09-03 13:48:25,medium,"Client/ Server Model What is it ? Client server model is a distributed application structure that seperates tasks or workloads between servers and clients. Often clients and servers comunicate through computer networks, independent from each other on seperate hardware but both must remain in the same system. Esscientally a server host will run one or more programs and share its resources with the clients requesting them. A client does not share of its resources but instead makes request to a server for content ot service function. Clients are the party that initiates comunication with servers who await incoming request. Some easily reconized examples of this model are Email and the internet. History of server based computing One this first examples of a client side model is “remote job entry ” which was introduced on os/360 1963, where the request was to run a job and the response was the output. While coming up with the client server model in the 1960s and 70s staff at the Standford research Institute coined terms such as server-host and client host and user-host while designing Arpanet … these terms found their home at in the mid 1970s These terms also lent themselves to researchers in the budding days of designing a computer network programming language called D. E. L “decode-encode language” Whos primary function resemlded a primitve get and post system. It would take users input encode the input into network packets and return a status report to the user While another D. E. L enabled machine would receive those packets decode them and return requested data to the user, a separate D. E. L based program would them interpret the formatted data into user friendly text and thus began the era of client server transactions. Del was then used in 1969 but the department of defense in their implementation of Arpnet which was the predecessor to the internet . From the 1980s to the 1990s micro computers and home computers dramatically started dropping in price at the same time increasing in power. This drop in price and increase in power set the stage for many companies and labs to start transitioning away from centralized servers like mainframes and mini computers . this gave each individual machine more power over localized resources but dramatically complicated information management. In the early 2000s web applications began to rival application software , which meant for the first time people were able to utilize software that was as powerful and complicated as their locally installed programs completely remote, this in turn opened the market for cheaper, more efficient mass storage which drove the rise of cloud computing of today. Now a days Browsers comunicate with web servers using http or hyper text tranfser protocol When ever u click a link on a button on a application , hit submit or use a web site or application to search for something that web application sends a H T T P request to a server. Request usually include A U R L identifying the target server and resource (e. g. an H T M L file, a particular data point on the server, or a tool to run). A method that defines the required action (for example, to get a file or to save or update some data). The methods I’ve used so far are G E T: Get a specific resource (getting users information). P O S T: Create a new resource (such a new user or new product) On the server side of things servers wait to receive request so they can process them and reply by sending a H T T P response message . H T T P response messages in a status code some common ones are 200 for a successful transaction 404 which mean whatever the client was requesting was not found and 500 meaning there was a server error. The body of a get request would normally contain the resource or data that the client requested while the body of a post might have a message stating that the data sent has been received by the server. In conclusion Client server models are the internet. Without the ability to remotely process large amounts of data we would be restricted to only have access to locally housed databases and programs. The amount of educational and entertainment content the internet affords wouldn’t exist.","['Web Development', 'JavaScript', 'Internet', 'Coding', 'Codingbootcamp']",https://medium.com/@seancsutton1/client-server-model-e485b2666fc0,1,[],0,0,sean,M,0.007009713460080397,0.9929902865399196
Tourné Torres,,3 Things I Didn’t Know About Myself Until I Enrolled in Coding Bootcamp,2017-06-07 06:48:41,medium,"3 Things I Didn’t Know About Myself Until I Enrolled in Coding Bootcamp I decided I wanted to be a software developer last September, and took about 7 months going back and forth trying to figure out how to make that happen. Once I finally decided that the world wasn’t going to fall off of its axis if I left my stable career in digital marketing, I made the plunge. There were a number of setbacks, as well as…set-forwards? Skip ahead to the 4th week of a 12 week software development bootcamp, and nearly everything I thought I knew about code, myself, the universe, and other people seems to be surprising me in new ways on a daily basis. 1. I Learn Better in a Team Round these parts, we participate in 2-day code marathons called “sprints”. Everything about my employment history, my childhood, my Myers- Briggs Personality Type, the last 32 years, would have led me to believe that I learn better by myself. Turns out, that if I had the ability to motivate myself enough to work straight through on a problem for 16 hours of my own volition, I suppose I’d have less of a need to be in a coding bootcamp. I am motivated by my team. Paired programming through these sprints ensures each team member gets the chance to both learn and teach. “ Driving” and “navigating” over each other’s code enables us to not only remember fundamentals we’ve forgotten working independently, but to explore and take on our teammate’s skill-set, and them, ours. 2. People Learn Differently One of the most interesting elements of this program is watching other people learn. On a daily basis, we’re making what sometimes feels like a thousand new neural pathways, flexing our brain too hard or not hard enough. Some of us have photographic memories, able to spit out anything we read verbatim. Some of us take a moment to chew over the material. Asking questions, drawing diagrams, and taking notes are all comfortable means to the same destination. I most-assuredly fall into the latter category, but I surprise myself sometimes. It can be limiting to assume “ I can’t possibly learn this in one day” or “ I have no idea what I just read” because I’m not sure even I’ M aware I’ve learned it as fast as it happens. The best advice I can give to someone experiencing the rigors of a fast-paced, no-holds-barred coding bootcamp is to not assume anything about what you can and can’t do. The best advice anyone gave me about my own learning process was to trust that it was happening, no matter much I felt I couldn’t possibly soak up another drop. 3. Sleep helps. So do showers. And 10-minute breaks. Because we can’t always get it, sleep becomes illusive and rare, sometimes making you feel gluttonous at a ripe 6. 5 hour night, but strangely normal, though strained, at 3. If the sprints are hard, if the bug just got bigger, if you got set back a few hours for whatever reason, you know what I mean. We sleep when we can, and push through to complete our work when it calls for it. It doesn’t seem like it, but there C A N be a balance, if you look hard enough. I suppose I took sleep for granted prior to this, but if pineapples were to suddenly disappear I’d probably miss them too. If I’d been up late coding, going back through a toy problem or reteaching myself part of that day’s sprint, finding the time for a hot shower in the morning can do wonders to recharge what can sometimes feels like a never-ending day. On the same token, walking away from a bug for even 5 minutes can sometimes do more than staring at it for 5 hours straight. Resetting, taking a break, in some fashion, can sometimes save hours of coding. I try to take at least two short walks a day, which frees my brain from whatever’s currently straining it, at least for a moment. Often, when I come back to the code, the problem has untangled itself a bit. Or has at least changed. I liken it to my brain taking a deep breath. If you can afford the time to reset, you may be buying yourself more of it. As humbling a process as this has been, being thrown to the wolves of software design certainly has a way of strengthening your resolve. Coding bootcamp: whatever you think you know about yourself, check it at the door!","['Programming', 'Codingbootcamp', 'Hack Reactor']",https://medium.com/@tournetorres/3-things-i-didnt-know-about-myself-until-i-enrolled-in-coding-bootcamp-5d62b706014,0,[],0,3,tourné,Unknown,Unknown,Unknown
Rachel Feldman,"Learning to code, craft, create",Week two – Rachel Feldman – Medium,2018-08-13 23:35:19,medium,"Week two I have been coding in Java Script for one week! Things are starting to make sense! Text = meaning. Very exciting. I am still waiting to pull the trigger on dropping my college classes this semester — I guess I want to be 100% sure I’ll get into a bootcamp this Fall. The Grace Hopper program at Fullstack seems really great. Last Friday I took a tour of the campus, and it looked like a place I would thrive in. Big focus on collaboration. Free cereal. All good stuff. This Thursday I start their bootcamp prep class, and with any luck in a couple more weeks I’ll be ready for admission. Some challenges I’m having so far are understanding the practical differences between using “function(), ” “const = …, ” “var = …, ” or “let …” to define functions. I want to use “function()” for everything… and when I write my own functions within the scope of the problems from the pre-work, it does work. That said, in the pre-work solution videos, my dude Eliot is always using “const” and doing stuff with the fat arrow =>. Eloquent Javascript says not to bother with the => so I won’t for now. I am getting faster at solving the small problems by just using “function()”, and it is super satisfying. What also helps is listening to my Christmas playlist on Spotify. Yeah, it’s August. See ya!","['JavaScript', 'Learning To Code', 'Codingbootcamp', 'Full Stack']",https://medium.com/@rachelariellaf/week-two-51c54db729aa,1,[],0,0,rachel,F,0.9968375667324769,0.0031624332675230854
Turing School,"This account is now inactive. For the latest from Turing, visit our community’s Medium publication instead: https://medium.com/turingschool","Spanish, English, and Code? An International Student’s Experience at Code School",2017-09-02 03:20:52,medium,"Spanish, English, and Code? An International Student’s Experience at Code School I’m Jorge and I’m from Mexico City, but I found out about Turing here in the United States. My main thing is art — I’m an artist — and I do a lot of painting and drawing. As an artist I started getting involved in a lot of graphic design. I am really good at Photoshop and Illustrator so I started incorporating that into jobs and whatnot. Then I wanted to take it deeper. Art is my main thing, but the front-end program at Turing deepened my skill sets. Now I’m faster at digital design work. One of my old art mentors, Jeneve, went to Turing, which is how I found out about Turing. Jeneve went to the school before it had both front-end and back-end programs. It was all one program. My art mentor told me to go to a Try Turing event. I was lost the whole time! But it was really fun. It was new. I decided to do the front-end program, and I feel like it really fit my skill set. Sometimes my art background is distracting when I’m working on design pieces, but then again it saves me from the struggle of figuring out how to do all the stuff with tools in Illustrator and Photoshop. I’m not spending too much time learning all that. If I were at the point where I was maybe a few years ago, I wouldn’t be as fast as I am now. I think the hardest part of Turing for me is the research. Why would I research stuff when I can just have someone else research it for me and tell me what they did? I struggled with knowing when that is and is not okay. My peers will present research to me, which is convenient, but then again maybe it’s not. We know researching also helps you learn. It changes things. Another hurdle for me at Turing would be language. Sometimes I’m learning a new language, but I’m constantly translating it from English to Spanish in my head, and then translating it back to code. It’s really hard. But that’s the process of being an international student. It’s a process just to get here. There are all the applications you have to do. You have to get your paperwork. Then you have to go to counseling in the host country. It’s a struggle, but it’s definitely worth it. I’m learning code in English and translating it to Spanish and it’s worth it! Joanne is in charge of the international student process at Turing, and she’s great. I know that she’s looking out for me and for all of us. It’s awesome. She’s amazing. Juan is another international student in the program. He helps me a lot. You can definitely find someone to connect with, and then you start connecting with everyone because you spend so much time together. You always find similarities. Something that surprises me the most about Turing is how long it takes to warm up your food in the microwave ;) That was a shocker! There are so many healthy students who bring their lunch. It’s great to see, but it’s inconvenient. Take a seat, relax, and watch the original interview here. And if you like what you read, tap that clap — it would mean the world to us! This article appeared first on our website.","['Code School', 'Codingbootcamp', 'Learn To Code', 'International Student', 'Front End Development']",https://medium.com/@turingschool/spanish-english-and-code-an-international-students-experience-at-code-school-ad0daf6a2423,1,[],0,3,turing,Unknown,Unknown,Unknown
Yan Fan,"Co-Founder & CTO of Code Chrysalis, a coding bootcamp in Tokyo. https://www.codechrysalis.io",Why JavaScript? – Code Chrysalis – Medium,2017-06-02 22:52:18,medium,"Why Java Script?“any application that can be written in Java Script, will eventually be written in Java Script” — Jeff Atwood, Co- Founder of Stack Overflow While our curriculum is Java Script, we like to say that Code Chrysalis is officially language agnostic. This means that we welcome, push, and encourage students to use the skills that they learn with us to explore the vast technical landscape by themselves. We focus on building versatility in fundamentals and believe that Java Script is the best language for us to deliver that mindset. Why Java Script? We get that question a lot. Here is a quick explanation of our thoughts. Java Script Now is N O T the Java Script of Then Java Script has made incredible strides in the past decade. This misunderstood language suffered a lot in its infancy and developed a reputation as being tough to work with and nonsensical. However, the development of A J A X (along with a few other things) resulted in a renaissance period for Java Script and the language has matured drastically. The advent of Node has increased Java Script’s reach even more and unleashed Java Script from the confines of the browser. You Cannot Avoid Java Script! You cannot avoid learning Java Script if you are doing web application development. You can avoid using Ruby, you can avoid using P H P. But you cannot avoid using Java Script. All web browsers ( Chrome, Firefox, Internet Explorer, etc. ) have Java Script interpreters built in. No other language has this kind of advantage and reach. It is unlikely this will change soon. Low Entry Barriers for Beginners It is significantly easier to start writing in Java Script. As mentioned above, everyone is already carrying around a Java Script engine in their computers — their browser. Thus, it is really easy to get set-up and quickly start writing Java Script. All you need is a browser and a text editor (and the most popular ones, Sublime and Atom, are free and easy to use). It’s an Inexpensive Language Because Java Script does not require any special compilers or editors, it is a much less expensive language and runs relatively fast and allows for client-side processing (saving on bandwidth and server load even more). The Java Script Community is Innovative, Active, and Competitive In the past three years, the Java Script landscape has completely matured and shifted towards becoming a truly full-stack language. There are constantly new, open-source frameworks and libraries being created all the time. A large portion of the most popular open-source repositories on Git Hub are written in Java Script. And Java Script not only was the most popular language used on Git Hub, it also rose by 97% from the year before. Below is a graph of the most active repositories on Git Hub and Java Script is the leader by far. Java Script Dominating for Foreseeable Future We have said this many times: Java Script is the language of the browser. Because the browser is such a core part of our daily tech lives, we will unlikely be moving away from browsers (and hence, Java Script) in the near future. In addition, Java Script is supported by a broad and powerful group of companies — it is not controlled by a single person or company and that makes it a lot more stable and relevant. There’s a Trend Towards Web Apps and Mobile Apps Browsers are getting more and more powerful and bandwidth is getting cheaper and more reliable. Focus is moving away from native software applications and towards web and mobile applications, especially as the possible combinations of operating systems, screen sizes, and devices are getting more and more numerous. Resources Some more links that explain Java Script. If you are interested in learning how to program, we highly encourage you to apply. Java Script: The World’s Most Misunderstood Programming Languageby Douglas Crockford Stack Overflow Insights Git Hub Octoverse Quora: Why is Java Script so popular? The Principle of Least Power by Jeff Atwood Why Java Script: If You Could Learn Just One Programming Language, It Should Be Java Script by Aziz Ali Did we miss anything? Let us know in the comments!","['JavaScript', 'Coding', 'Coding Bootcamp', 'Tokyo', 'Japan']",https://medium.com/code-chrysalis/why-javascript-438871a87329,0,[],0,13,yan,M,0.12359550561797752,0.8764044943820225
Emmanuel Raymond,"Avid reader, Life-long learner, Tech enthusiast.",My First Day At LearnFactory Nigeria – LearnFactory Nigeria – Medium,2018-05-03 21:15:06,medium,"My First Day At Learn Factory Nigeria A Journey to becoming a world-class developer Happy people Learn Factory is a company that is committed to grooming great men and women with character and capacity. It is a collaborative tech environment that provides training in software engineering skills relevant in the industry today with access to cutting-edge tools and provides an opportunity for aspiring tech entrepreneurs, enthusiasts and creative people to meet, learn, showcase their ideas and work together towards solving social and business needs using homegrown technology and solutions. The Learn Factory factory Internship is a six months free intensive training aim at creating the next generation of software developers who will be able to build solutions to problems in their society and the world at large using cutting-edge tools. The curriculum is top-notched and equipped with all the relevant and latest technologies such as Graph Q L. Having gone through the selection process, it was a thing of pride as I was selected as one of the successful candidates. The biggest challenge was making the journey to the business city of Aba from Abuja This meant leaving my comfort zone. Aba is certainly not the place I would choose to be but as Napoleon Hill said: Great achievement is usually born of great sacrifice and is never the result of selfishness. - Napoleon Hill Most people thought I was crazy, I thought so too but decided to make the journey nevertheless. My first day was definitely beyond my expectation. Meeting the other successful interns was certainly the highlight of the day for me. These are the people who are gonna be in my face for the next six months, who probably will go on to become life-long friends and partners. As with most situations, being in a place for the first time and meeting new people, everyone kept to themselves but after the introductions were done, the whole place came into life with everyone chatting and laughing as if they have known each other for long. I’m not the ‘ I love making new friends type’ but in this case, I had no option because the energy in the room was too great to be ignored. I was only glad to meet happy people who despite coming from different background are able to instantly connect with each other. My gang for the next six months!!! There were talks via Google hangouts from the amazing Aniedi Udo- Obong, the Google Program Manager, Developer Ecosystem for Sub- Saharan Africa, who spoke about his humble beginning and how he was able to turn things around for himself despite the many challenges he encountered and Daniel Chinagozi, the founder of Innovation Growth Hub, who advised the interns on the seriousness of the program and charging us to take full advantage of the opportunity. There were also introductions from the staff, those who have made the huge sacrifice to train and mentor the next superstars of software development. Meeting the awesome Learn Factory Team Selfie game with the C E O Then we got down to business and got our hands dirty with a rapid review of Linux, as this is the operating system we will be using during the internship. I’m still scared of the terminal and I certainly miss my friendly neighbour Windows The day wouldn’t be complete without the interns being treated to a delicious lunch of the famed Nigerian Jollof. At the end of it all, it was the start of a beautiful experience for everyone. Hopefully, at the end of the internship, most of us would have achieved our goals and be on our journey to do greater things. Cheers! If you enjoyed this story, I’d really appreciate it if you recommend this post (by clicking the 👏button or the social media icons) so other people can find it. Also, feel free to leave a comment below or reach me via Twitter.","['Internships', 'Learn Factory', 'Coding', 'Codingbootcamp', 'Thoughts']",https://medium.com/learnfactory-nigeria/my-first-day-at-learnfactory-f63cfd802eaf,1,[],0,80,emmanuel,M,0.004767402376910017,0.99523259762309
Kayode Adeola,,My Most Challenging Recent Learning Experience – Kayode Adeola – Medium,2017-07-03 17:58:14,medium,"My Most Challenging Recent Learning Experience“ Self-education is, I firmly believe, the only kind of education there is. ”― Isaac Asimov. These words of Issac Asimov forever ring in my memory, why you ask? To answer that question we may need to ask ourselves another, this time we ask ourselves how every learned profession came to be; have you ever wondered who taught the first doctor of medicine the knowledge of what he knew ( I’m assuming here he is of the male species)? Maybe now I’m going too far so lets fast track to the early 19th century when brain surgery, heart transplants, and tissue generation was all but a myth as far as orthodox medicine is concerned. Now take together all the advancements in every field, from Engineering, Chemistry to Applied Physics and you will be amazed at how far the human race has come. I’m quite certain if an unlucky fossiled Homo- Erectus should perchance have an encounter with the prophet Ezekiel in the ‘ Big Apple’ and he says to it ‘ O dry bones, hear the word of the Lord! Rise up and be a living soul’, the confusion of the technology around by the time he comes to life will surmount the reality of his resurrection. What point am I trying to make here? The point is the fact that there are certain techs that exist today that seemed impossible some few decades ago. This is so because certain people dedicated to learning how to innovate in those fields and make things happen. These feats were not achieved without their own challenges, so many failures, and disappointments but yet the determination and commitment were strong enough to cancel the give-up effect. They had to teach themselves to learn and deliver even when the odds were against them. I’m quite sure some names have come to your mind already if you are an ardent follower of tech history like myself. Now it is to these heroes of inventions I look to draw strength as I continue my sojourn to be a world class software engineer which has been by far the most challenging learning experience for me in recent times. Never have I been so overwhelmed by anything like the Andela Fellowship recruitment process aimed at training developers of a different mettle. Passion is one thing, but being competent is another as I have come to realize. As a newbie to the world of programming, it’s all being a whole new experience for me entirely. There are times I just want to scream at my notebook screen when that carefully thought out logic seems to get me nowhere. Learning what I could do with programming at the beginning heightened my expectations and I couldn’t wait to get started. Then came the rudimentary and basic building blocks such as algorithm challenges and it all seemed like it will be a piece of cake after all. Was so enjoying the ride until the big one came along; Deploying a Full Stack Application. As a requirement for the Andela Fellowship program, this is what we will be doing as we were told to work on a full stack application called Post It. I’ve been frantically searching through all the online resources my browser and data speed is able to grab, every information seemed so critical not to let go and even as I write this post there are about thirty-two browser tabs currently opened on my Google Chrome and my system memory has been screaming holy murder! Now if men with no educational training and limited resources compared to what is obtainable in this present day can live on to develop some of the greatest inventions known to mankind, then there is not an excuse to fail at this. What is more, solving problems is what I have signed up for, so what better opportunity to hone that skill than this. If you happen to be reading this, then watch this space for the launch of the web application in a few weeks.","['Andela', 'Codingbootcamp']",https://medium.com/@spyrockaz/my-most-challenging-recent-learning-experience-940564e07f51,3,[],0,0,kayode,M,0.0,1.0
Christopher Augustus Perez,Full Stack Web Developer | React | Redux | Node.js | Express.js | Sequelize.js,How I am Making the Pivot into a Career in Web Development. My Climb to the Mountain Top.,2018-05-15 17:36:42,medium,"How I am Making the Pivot into a Career in Web Development. My Climb to the Mountain Top. Who am I? Today, I am a career changer. I am in transition. Since college I have tried my hand in a couple professions, doing my best in the roles I filled to contribute positively to the communities I served. I arrived where I am today because on my professional journey I came to the realization that I want the mission in my life and career to be more closely aligned. The mission I am on is to provide services and tools most useful for individual and community empowerment so that together we can build a fairer, more balanced and sustainable future. I believe pursuing web development will help me achieve that goal. The Trek to the Mountain How did I arrive at this belief? Well, it happened over a period of years, but since I respect your time I’ll give you the short story. During my search for my first opportunity out of college, the roles I found most interesting and that I believed provided the most potential for me to have a direct positive social impact seemed to be in tech. Since I majored in business I didn’t have the skills sought after for those particular roles, so I searched for an opportunity that would get me as close to tech as possible. Through networking, I was able to secure an opportunity at Hedge Serv. Hedge Serv is a global hedge fund administrator. What is a hedge fund administrator you ask? I’ll spare you the finance lingo and just say that Hedge Serv is a Fintech company. They develop software for investment firms and together with their software they offer services. I spent over two years there working as a hedge fund operations analyst. In my role, I was responsible for the day-to-day operations of investment accounts valued in the hundreds of millions of dollars. In a short period of time, I learned and digested complex financial concepts and applied that knowledge by working closely with developers to enhance automation processes responsible for capturing thousands of sophisticated financial transactions that only your local rocket scientist could explain. I analyzed our operational processes, found opportunities for improvement and communicated to our developer team what those opportunities were. Ultimately they translated those solutions into code. Piece of cake (not really)! The work was intellectually stimulating and exciting but left me yearning for more. I couldn’t quite put my finger on what I wanted exactly at the time so I decided to explore. I left Hedge Serv and got a temporary operations consultant opportunity at Goldman Sachs. I did more of what I did at Hedge Serv and at the end of my contract, I decided to take time off to travel. I backpacked in South America for some time and then did some more temp work as an operations consultant at a health and fitness center design and management company called The Wright Fit. When that came to an end I came to the realization that I wanted to contribute to work that would be more socially beneficial and impactful. The Pivot My search for an opportunity to do something socially impactful led me to teaching. I taught high school Algebra for a year and learned a great deal. Being a teacher you have to wear many hats. You are a lecturer, facilitator, role model, life coach, psychologist, improv problem solver, parent and friend and at some point, you teach. It will be an experience I will value forever, but I ultimately decided that I want to pursue something that not only allowed me to make a positive social impact but also allowed me to continue doing the things I enjoyed doing as an operations analyst, which was mainly identifying opportunities for improving systems that organizations depend on for accomplishing their goals. Throughout all these experiences a common thread was that every time I pursued the most effective and efficient way to fulfill my role, regardless of what I was doing, it always led me to a technological solution that a developer somewhere had created. As an operations analyst, most of what I did was identify opportunities to improve how we executed day-to-day business activities. Without the developers on my team, those opportunities would not have been realized. As a teacher, the most promising tools for effectively supporting students towards achieving meaningful academic progress lie in the breakthroughs being made in the Edtech space. By the time the summer of 2017 came I was determined to become a web developer. The Climb Begins I did not know exactly how I was going to do it but I was committed so I pushed all my chips to the center of the table and went all in. I was pleasantly surprised to find all the resources available online for teaching yourself how to program. Codeacademy was my first direct exposure to coding. I eagerly went through their recommended starter material, which was focused on H T M L, C S S, and Javascript, and when I completed those beautifully designed tutorials in the safe learning environments they provided I thought to myself this coding stuff is not so hard. Little did I know I was in what Erik Trautman of Viking Code School calls the “ Hand Holding Honeymoon” phase of my learning to code journey. The next phase of my road to code, “ The Cliff of Confusion” as Erik eloquently put it, was when I realized I needed a more comprehensive and focused learning plan. That brought me to the Odin Project, which is the most comprehensive full stack curriculum you could find online for free anywhere. It is truly amazing what the open source community that put this resource together has accomplished. My hats off to you all! As great as the learning resources The Odin Project provided was, I felt I was also in need of some guidance. While going through Odin’s curriculum I looked for ways I could acquire the guidance I was looking for. I discovered coding bootcamps and thought that was exactly what I needed. The next logical step was figuring out how I was going to make it happen. When I saw how much the average bootcamp cost it set me back a bit. How was I going to pay for it and how was I going to sustain financially while getting myself through one of these programs? At the time it seemed undoable, but I pulled myself up by my bootstraps and got to searching for solutions. With patience, persistence and some trusty ole serendipity, I found the N Y C Tech Talent Pipeline and through them the N Y C Web Development Fellowship. The Mountain Guides The N Y C Web Development Fellowship, in partnership with three coding bootcamp providers, offers to prepare New Yorkers to launch a new career as a full stack web developer free of cost to eligible applicants. Fast forward to the spring of 2018 and I find myself on Fullstack Academy’s campus, 1 of 60 hopefuls, chosen from a pool of hundreds of applicants, being given the opportunity to secure 1 of 30 available seats for what felt like an opportunity of a lifetime. A month later I got my letter of acceptance. I had secured a seat and the privilege of acquiring a highly sought after education. With immense gratitude, I give thanks to all those at Fullstack Academy who believed in my potential as a developer and helped make this a reality for me. I will be forever grateful. To backtrack a bit, the fellowship had three coding bootcamp partners. I chose Fullstack Academy over The New York Code and Design Academy and General Assembly. I chose Fullstack Academy because of their commitment to excellence in providing a world-class environment for becoming a great full stack developer and now that I have been a student at Fullstack for a little over two months I can confirm that they are every bit the world-class institution they claim to be and more. They are highly rated by their alumni and have won awards for their bootcamp program and I have seen first hand why. Their cutting-edge curriculum is giving me the confidence and skills I believe I need to succeed as a full stack engineer in N Y C. Conclusion And that is the short and sweet of it my friends. Who I am, how I got here and how I am making my transition into a career as a web developer. Ok maybe it wasn’t so short, but you have definitely read longer blog posts, right? I hope sharing my story provides some inspiration for those thinking about pursuing web development. I am excited for what comes next. I can’t wait to get out there with my newly acquired skills and lend my talents to creating solutions that provide a positive social impact. I’ll keep you posted with updates on my progress. Thanks for reading!","['Programming', 'Learning To Code', 'Codingbootcamp', 'JavaScript']",https://medium.com/@chrisaugustusp/how-i-am-making-the-pivot-into-a-career-in-web-development-my-climb-to-the-mountain-top-d7174d5f3b54,4,"['Fullstack Academy', 'General Assembly']",2,3,christopher,M,0.0046573532726988135,0.9953426467273012
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 53 – Chingu – Medium,2018-03-12 17:28:36,medium,"Chingu Weekly Vol. 53 Voyaging into code adventures. all hail @ Soreg aka the Teemu Selänne of Chingu! News & Opportunities🎉 Congratulations @oansky on getting the new job!!!🎉 Congratulations @collinperkins for getting a promotion to full-stack developer! Shout-outs & Showcases🔥 Have a look at x’s wondrous book app!p. s. shout-out to the Principles!📖 Lidz wrote this super helpful article on H O W T O W R I T E A S O L I D R E S U M E! (based on a lecture she went to by a recruiter for I B M!)🔥glandon22 🔥 Check out @glandon22’s restaurant & bar locator. 🔥 Tushar 🔥 Check out @tushar’s Movie App!🔥 Sylvie 🔥 Have a look at @slyvie’s weather app here!🔥@mari-b — Check out @mari-b’s D A I R Y A P P!🔥 “ May the fourth be with you!” Star Wars fans check out this little Stars Wars hype piece by @xarri!🔥 Have a look at @inna’s color generator!📖 Parminder Singh wrote an article about his rambunctious winter learning adventures!🔥 Check out this ☁️weather app by @jon!!🔥 Here’s a cool project by @soreg! Overheard in Chingu(last week’s accomplishments remix!) I had job interviews with Amazon and Microsoft this week. Wish me luck! Got to meet two other Chingu people in person! I met [them] at a local meet up in the Washington D C areaworking on graphql client 95% done I’ve realized that front-end could be as much interesting and fascinating as back-end Sparta installed plugs, broke things, and I fixed it. Days later, I added code, broke things and he fixed it. Team development in action! We made a working backend A P I and started Main page. Quotes to Go Featuring Wayne Gretzky! I skate to where the puck is going to be, not to where it has been. Procrastination is one of the most common and deadliest of diseases and its toll on success and happiness is heavy.","['Chingu', 'Freecodecamp', 'React', 'Codingbootcamp']",https://medium.com/chingu/chingu-weekly-vol-53-661b522ba6e7,0,[],0,310,chance,M,0.024461428631419813,0.9755385713685801
Emily Collins,Full stack web developer. Adventure enthusiast. Econ nerd.,Why I Made The Leap To Coding – Emily Collins – Medium,2018-08-15 15:28:37,medium,"Why I Made The Leap To Coding This is me! I’m about halfway through a 15-week coding immersive with the Flatiron School, and as I reflected on my journey up to this point, I thought I’d share a little bit about my story and why I made this leap. I’ll admit I was pretty happy in my H R job of four years. I was doing meaningful work for a cause I believe in, and I appreciated the open, honest, and tolerant work culture. I valued that my employer invested in my professional development, and I enjoyed helping new associates develop professionally. Despite all these positives, about a year ago I still felt a sense that I could be doing more. So, I did what any normal person would do: I enrolled in a calculus course online! Okay, maybe not E V E R Y B O D Y does that, but I remembered really enjoying math and my job didn’t require math all that much. When I was reviewing my resume, trying to think of where I could grow in my career, I remembered that in high school I’d gotten a 770 math score on my S A Ts. . . I figured maybe I should freshen up on that skill. After high school, I went to a liberal arts college to pursue a B A in Politics, Philosophy, and Economics. Don’t get me wrong, I really value my college education because it expanded my mind and made me think more deeply about the world, but my education wasn’t very math-heavy. I wanted a new challenge, and the calculus course challenged my mind in a way that was thrilling. The important thing was that calculus reminded me how much I enjoyed problem-solving and technical challenges. In the last six months at my H R job I started seeking more technical projects: creating excel sheets for reporting on our outcomes, creating Salesforce data reports and analyzing them for trends. Our team had a lot of data, but no one to analyze it, so I volunteered, and I would lose myself in those excel sheets and reports. I loved it. There were days when I’d look up and realize three or four hours had gone by and it felt like 30 minutes! I didn’t realize it then, but my experience with that Salesforce database would prove invaluable for coding. I got a L O T of practice “debugging” when a Salesforce report wouldn’t pull the right information. I learned to recognize when a comma was out of place, and I discovered why some information was only accessible in a specific way from a specific record object. When I’d get the report working again or pinpoint the place where our automations were breaking down, it felt so satisfying. Let’s just say the tech team knew me well, because I came to them almost weekly to discuss bugs and ask them how I could better leverage Salesforce reporting capabilities. I’d like to say that was when I knew I’d found my calling, but I’d be lying. What really started me down this path with coding was a conversation with my fiancé, Josh, who’s a doctor with a background in computer engineering. I know, killer combo, right? I’m a lucky woman 😁. Anyway, I was telling him about a website idea I had for work (basically it was helping match job-seekers and jobs using an algorithm) and he said, “ Emily, you could definitely build that with code! I can teach you!” This was my expression when he suggested that I, having no knowledge of coding, could learn how to build a website. I was dumbfounded by that suggestion, because to me coding was esoteric. No way could I build a website. I didn’t even know how the internet worked! And yet, here I am, 7 weeks into a coding bootcamp, and I’ve built my first web app with a decently secure login and full C R U D capabilities. That conversation with my fiancé set in motion my journey to coding. On a whim I signed up for Flatiron School’s free bootcamp prep course after seeing their ad on Instagram. This wasn’t too big of a leap for me since I’d already done an online course before (remember that calculus course?). My fiancé helped me with the coding labs and helped explain topics when I had trouble. Maybe a week or two into the online work, he told me I had a knack for this and he encouraged me to apply for the full-time program. Part of me thought he was just saying I was good at this because he’s my fiancé, but part of me thought, “ What if he’s right?” I knew that H R wasn’t going to be my life calling. I knew I liked coding, or at least I liked the coding labs with Flatiron. I knew the job outcomes for Flatiron students were really good according to their job outcomes report… What the heck! A week or two later, I applied for Flatiron school’s in-person immersive course in Washington, D. C. I came to the campus for a Code & Pizza event. I did the phone screening and the technical interview. And they let me in!7 weeks in, I still feel like this was a great decision for me. Every day is a new challenge. Sometimes the learning feels fast-paced, but I knew this is what I signed up for. And I’m starting to believe my fiancé when he says I have a knack for this 😉. Jobs are still T B D, but the future is bright! We’ll see where I land a few months from now! If you’re reading this and you’re thinking about a career change… My advice for people considering a career change is to try incremental steps. If you’re interested in coding, sign up for a free course, seek out more technical projects in your current role, have lunch with someone who already knows about the field. Think of it like small experiments to see if you have the aptitude and the passion for the new field. For me, it took a while to find the intersection of my aptitudes, my interests, and the job opportunities available. I wouldn’t even say I’ve absolutely found that intersection yet! But I think I’m a little closer.","['Coding', 'Career Change', 'Codingbootcamp']",https://medium.com/@c.emily.collins/why-i-made-the-leap-to-coding-34ac1bcc527a,5,['Flatiron School'],1,9,emily,F,0.9979317746535663,0.002068225346433675
Academy Student,An account for the students to publish blogs,How I shifted from law to coding – Mayden Academy – Medium,2017-10-04 09:16:35,medium,"How I shifted from law to coding This week, new Ukranian Mayden Academy student Vasile tells us about his journey to coding… I’ve liked computers since I was a child, and got my first one in fifth grade. It was a Duron 750 Mhz and had 128 M B of R A M, 32mb of graphic card and 20gb H D D. It was so powerful that it even ran 3 D games. ( Like I said — really powerful. ) It ran on Windows 98, which was a little annoying. I hated the grey design of Windows 98. So in 2001, when Windows X P was released, I was excited to install it on my P C. Sadly though, it was really slow. That’s when I took my first steps in programming. I tried to apply the design of Windows X P to Windows 98. And, after I few weeks, it finally worked! I had a system that was as fast as Windows 98 and as beautiful as Windows X P. During school, I managed to break my P C about a hundred times, and my 20 G B of H D D became closer to 12 G B. The other 8 were bad clusters. Still, I became the guy my friends and neighbours would go to when they needed their computer fixed. A few years later, I went to university to get my law degree. And I really liked it. It helped me really improve my analytical skills. I spent time looking for loopholes, or ‘bugs’ in law acts — I found that way more interesting than just learning the acts and how to use them. In my third year at university, I had a business idea to install laundry systems in studenthalls. ( In Ukraine, before I started my business, we didn’t have washing machines in students halls. ) So I found a few programmers and P C B engineers to build laundry machines. I now have the largest network of self-service laundries in Ukraine. In Ukraine, the water quality in the city grid is terrible, and if you wanted cheap and good water, you would have to buy it from the trucks which come at the exact time each day and beep their horns on the streets. Initially I got the trucks to deliver clean water to our machines. Eventually we built and installed self service water machines, which became very popular. Later, we looked at self service car washes, made a lot of improvements to them and produced our own car wash system. I built the website for my company and really enjoyed the process. It reminded me of how satisfying I’d found it to redesign my copy of Windows 98. Running your own business is all about problem solving. I’ve started to learn more front end technologies and J S algorithms, and I find it really exciting. Programming is all about solving lots of tiny problems, and you can get results fast which I find really motivating. Next, I applied to Shool42, passed their online assessment and was accepted to study C language there. I wrote code 14 hours a day, 7 days a week, and I liked working at that pace. It was super cool. Now, in Bath, England, I am studying full stack development (mostly J S, Node J S and P H P) at Mayden Academy. I’m really enjoying the course and spending so much time programming. In a few more months, I’ll be a software engineer. My main message here is that you shouldn’t have to compromise on doing something you enjoy for a living. Believe in yourself and don’t be afraid to try new things. Be curious and hungry, and adventure will find you.","['Tech', 'Programming', 'Learning To Code', 'Codingbootcamp', 'Coding']",https://medium.com/mayden-academy/how-i-shifted-from-law-to-coding-4030a7c51a18,1,[],0,2,academy,Unknown,Unknown,Unknown
chibueze ukaegbu,,LearnFactory Internship: Day 7 – LearnFactory Nigeria – Medium,2018-05-09 05:26:20,medium,"Learn Factory Internship: Day 7 Y O U C A N N O T G E T T O T H E I M P O S S I B L E U N T I L Y O U C A N M A S T E R T H E P O S S I B L E. Konga-thon Today was day 2 of Eric Thomas’s Be Phenomenal or Be Forgotten. It was deep, he challenged us that before you can start doing the impossible, there are 3 principles you need to observe: #1 — D O T H E P O S S I B L E ( Everyday, show up and do all that you are capable of doing); #2 — D R I V E P O S S I B L E ( Relentless pursue the possible with consistency by developing rituals and habits); #3 — P E R F E C T P O S S I B L E ( P E R F E C T P R A C T I C E M A K E S P E R F E C T; Do the same things again and again until till you master it). Be consistent E V E R Y D A Y T I L L Y O U L E A R N T O P E R F E C T E V E R Y D A Y & you will wake up one day finding yourself doing the I M P O S S I B L E. Isaac, leading the charge Immediately after, it was a Konga-thon and we all loved it. Everyone was bent over, hands flying over the keys, eyes intensely focused on the screen. We all had one goal, finish the Konga U I clone. With Matthew and Isaac as their guides, the interns made considerable progress. As with every learning endeavor, there were cheers and there were groans, as the interns had varying levels of mastery of H T M L5 and C S S3. During the staff reviews, it became evident to us that not all the interns faithfully finished the pre-requisites, contrary to certain assertions. This accounted for the gap in understanding of some of the interns. As we cannot afford to leave anyone behind, we are taking 2 extra days to complete review of the pre-requisites. This is slowing us down, but it is going to come at a price to the interns. Our first assessments were supposed to be 2 weeks away, but we are going to push them forward to Friday this week. Anyone who has not mastered the pre-requisites by the assessments this weekend will be dropped with immediate effect. That is the sad price they will pay for unfaithfulness; it is costing us too much in time and resources to condone any forms of laxity. To this end, we have postponed signing the Code-of- Conduct till Monday; only those who make the cut will have the privilege of signing. We must maintain discipline at all times. I really do hope everyone sits up during this next few days; there is already a bond here and will be sad to let anyone go. We’ll keep marching forward. Another day, another set of challenges. I’ll be seeing you again. i C Chief Code Smith","['Startup', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-7-2e8d2caf1689,0,[],0,101,chibueze,M,0.0,1.0
Irene de Mas,Project Manager 🤹🏼‍♀️ Brand & Content Strategist 👩🏼‍💻 Food Nerd 👩🏼‍🍳,De picar piedra a picar código – Ironhack – Medium,2018-05-04 08:46:27,medium,"De picar piedra a picar código From being a miner to a security guard to a web developer Some stories seem straight out of a movie. Actually if you saw them in a film you’d probably think they are too over the top, there’s no way this can happen to someone. Films have to make sense but real life doesn’t. Héctor Fernández’s is one of those stories. We met when he started the Web Development Bootcamp in April 2017 and I had been working at Ironhack for less than two weeks. It was my first cohort as Program Manager (the role wasn’t even called that back then) and I had no idea what to expect from the students. I knew they came from many different backgrounds — some not related to tech at all — but I couldn’t imagine how unrelated they might actually be. Meet Héctor 🙋‍♂️ During the first week of Héctor‘s bootcamp, I ran into him during lunchtime. He was drinking some kind of smoothie. The following day I noticed he was drinking the same thing. And the next, and the next, and the next… so I finally asked him what was that thing he was drinking every afternoon and he told me it was his lunch. In order to save time cooking, he decided that during the bootcamp he would feed himself with powder food. That was the first hint that his dedication to what he was learning here was exceptional. A few days later, we were talking and he mentioned he was a miner before. “ A data miner” I thought. “ Maybe he’s been working with other languages and wants to learn Java Script now. ” But no, I was too immersed in my own tech filter bubble. He had been a miner, yes, but an actual one. Back in Asturias, where he’s from, he’d been working in a coal mine. He even told us that once he’d been trapped in the mine where he was working for so many hours that he didn’t know whether he would eventually get out. He even heard his colleagues talking about him as if he was already dead. #tbt ⛏ I went back home and told my friends about it. I was so impressed. How do you go from almost dying in a coal mine from building a web game to learn to play the bagpipe? Thanks to a coding bootcamp and unparalleled dedication. This was not all though. Later I found out something else. After leaving his job in the mine, he became a security guard and that’s where he had been working until he started at Ironhack. He even completed the pre-work during his free time working at a supermarket. From that day on, I’ve told his story many, many times. At our campus he has become kind of a legend. Everyone — new students, new staff, new teachers — has heard the story of the guy who went from being a miner to being the first of his cohort to get hired. They have also heard the story of the student who was working as a security guard while preparing to get into Ironhack and they couldn’t believe it when they find out it’s actually the same person. Héctor has been working as a developer @ Blueliv since he graduated from Ironhack. We talk a lot about how a bootcamp can transform your life. From the outside looking in, I know this can sometimes sound like B S but Héctor is the proof that the change is not only possible, but also real if you work hard enough. It’s been over a year since he was an Ironhack student and I’ve seen many more with amazing stories, but to this day his is still one of the most inspiring to me.","['Programming', 'Web Development', 'Bootcamp', 'Self Improvement', 'Codingbootcamp']",https://medium.com/ironhack/de-picar-piedra-a-picar-c%C3%B3digo-b2ee72b5d80d,1,['Ironhack'],1,1.2K,irene,F,0.9961932169016637,0.0038067830983362317
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,"Chapter 3 — Essential skills, resources, and how to prepare for the cohort",2018-10-03 01:36:39,medium,"Chapter 3 — Essential skills, resources, and how to prepare for the cohort Sometimes it is the people no one imagines anything of, who do the things no one can imagine. — Alan Turing Table of Contents How can I prepare for this Build-to- Learn Cohort? [2 min] Skills [2 min] Resources [2 min] Roadmap [3 min] Tips [3 min]1. How can I prepare for this level-ups Cohort?🔥 A) Learn the basics of how to code collaboratively with Git/ Git Hub. When we ask experienced members what the number one way to prepare for a team project is, they all say: Learn the basics of Git/ Git Hub! Using Git/ Git Hub effectively is an essential skill for any developer now. For anyone new to a W3 Develops Build-2- Learn ( B2 L) project, this will probably be the biggest skill you learn (regardless of what your team builds). It’s that important. ⚠️ If you’re new to Git, watch this→⚠️ For further info, read this→ https://www. atlassian. com/git⚠️ Learn the basics of how to collaborate with Git here→ https://www. atlassian. com/git/tutorials/syncing Note: you don’t have to have 10000 hours in using Git Hub, but knowing the basics is a must. You and your team will work together to figure out the details when you start. Navigating challenges around Git/ Git Hub are going to be numerous no matter what so don’t worry too much — just embrace the challenges as they come. :)🔥 B) Read the Cohort wiki’s: Cohort Wiki Team- Lead/ Project Manager Wiki ( P M R O K)🔥 C) Get acquainted with the Cohort Project Roadmap Roadmap (aka how your team project will work) Note: If you don’t have a small project finished, do that before the Cohort starts (or during). If you decided to start coding yesterday, you shouldn’t start with a team project. We need to be able to trust that you’ll committed to this and are not just going to drop out from your team when it gets tough (and it will get tough). This topic has everything to do with commitment. A huge part of reaching your goals is commitment and follow-through. Prove you’re committed to your goals by showing that you’ve built something. It can be a Git Hub repo project, a simple Codepen, a Free Code Camp project. It’s less about impressing us with a project and M O R E about signalling that we can trust you enough to put you in a team. Note: if you don’t have a project finished yet, you’ll still be able to join the cohort and benefit from the network and opportunities like Pair- Programming. 2. Skills Learn these skills before you start There are some skills that are like magic keys that will allow you to get the most out of your Cohort experience. 🔥 A) Have a finished project that you can link to. If you have never finished a project before, you shouldn’t start with a team-project. This usually ends up in frustration and quitting. To earn a spot on a developer team in W3develops, you will need to show that you have put in enough effort to complete a project of some kind. Don’t have a project you can link to right now? That is your homework before the cohort starts. If you don’t have a finished project you probably won’t be placed in a W3 Develops team, but you will still have access to the benefits of the community, events, and can use W3 Develops other features. We will be releasing several “waves” of developer teams throughout the Cohort so freshly qualified members can have the opportunity to experience team development. ** Note** Most people have already submitted a project on their application, but if you didn’t you can add it to the team signup form when the Cohort starts. :)🔥 B) Communication — The most successful teams check in regularly (even if it’s just a quick message to say hi)🔥 C) Develop these 30 principles to level-up your Soft Skills and embrace your Type- A personality( Because your skills stack should not be limited to just technical skills) Here’s a list of some essential Soft-skill principles: https://profitworks. ca/blog/902-blog/other/314-dale-carnegies-30-principles-for-how-to-win-friends-and-influence-people-principle-14. html Here’s a list of some Type- A traits: https://www. elitedaily. com/life/motivation/the-25-things-that-people-with-type-a-personalities-do3. Resources In your Cohort you’ll be exposed to several tools related to team development and remote collaboration, including Git/ Git Hub, project management tools (trello, ), agile methodology, standups, and our in-house collaboration bots. We will cover these later, but here’s a quick glimpse at a few: Weekly Check-in: A 3 minute form will be sent out each week. It is used to keep track of team progress and effectively support teams that need it. Git Workflow Resources Git Hub Guides How to not f- up your local files with Git part 1 How to not f- up your local files with Git part 2 How to not f- up your local files with Git part 3 Git Hub Helptry Git4. The Build-to- Learn roadmap A roadmap to provide structure and direction to Cohort teams. It is a collection of Acts & Milestones. Build-to- Learn roadmap Cohort — Build-2- Learn Roadmap A quick guide to making the most of your remote team dev experience The B2 L Roadmap Explained (in brief remix) Below I’ll provide the “gist” of each step of the roadmap. Later in this article there will be a much more detailed breakdown of each step. # Start The start is all about signing up, signing the Builder’s Pledge, organizing teams, etc. Once your project team is set-up for you in the Cohort, you’ll be officially started on the B2 L project cycle. #1 Team meeting/ Setting tasks. Together the team defines and assigns tasks. This is usually done in a meeting with all team-members present, via video chat or text-chatting. #2 Doing tasks. The team is either working on their tasks, learning what is needed to complete their tasks, or reaching out to the community to get help with their tasks. P M ( Project Manager) Doing whatever it takes to get the project shipped. #1 & #2 never goes smoothly, the Project- Manager does everything needed to push the project to completion. Finish Popping bottles of champagne, sending 5000 celebratory emojiis, and showcasing the project to the world. The team together performs the required showcase tasks and all is great in the universe! The B2 L Roadmap Explained ( Detailed remix) A detailed, step-by-step look at the B2 L project roadmap. Courtesy of @fish94 (a B2 L legend). Consider this a working roadmap that we’ll be all working together to continuously improve. #1 — Meeting is held/ Project set-up If 1st meeting for team: Mandatory things:* Decide who will take care of github (most likely P M)* Create a github repository. * Choose a stack. * Find out if everyone knows the stack. * If not: give time to learn it. (more or less a week). Finish the firstmeeting. Schedule another one. * If everyone knows the stack: plan the general way of building the app. * Is some A P I needed? Do we need to find it?* Plan the general layout of the project. It is crucial to identify themost basic and important tasks — that is a must. * Divide the tasks among the team. * Finish the meeting. Optional things:* Talk to each other! Get to know one another!* Choose the team name. * Choose the app name. * Decide on “secret sauce” and plan it. * Choose different tools to use — like trello, google docs or skype. * Plan the general layout of the project. — You can also plan more thethe must do things in the first meeting but it is not mandatory. * Set soft due dates. * Schedule next meeting. If 2nd, 3rd, 4th (etc) meeting: When tasks are done, schedule next meeting. * Look at the code. * Test everything. * Look for bugs. * If errors found — decide on who and how will fix them. * Plan the next step(s). * Divide the tasks and get to work. #2 — Team is working on tasks P M is making sure that everybody is doing what is needed, and is not disappearing (a message in team channel a few days after meeting “how’s the work going?”, D M to the ones that do not replay in a day or two). It is a guarantee that a member will have to learn something new to complete the task. If a member gets stuck, that member should reach out to the community (the #help-with-code channel exists for this reason). P M — Project Manager to the rescue! In ideal scenario, just repeat the 2 and 3 steps. But since the world is not ideal, and the project momentum will fall, the P M needs to step in when it happens. Especially when one team member will disappear. So, what’s the P M to do:* Forget about the meetings. Scheduling them becomes pointless atthis point. Write the message to the team, in it include:* The current state of the app. What is done. What is working. * The grand shape of things, where the app is heading. * Clear next steps. * Specific tasks to do now. End of message. * Decide what tasks would suit each team member. * Write (still in the team channel) directly to him/her. Tag him/her and politely offer him/her to do the task (not an order, a nice polite offer, with the option to pass — with a reason — and choose a different task). * When the tasks are finished, plan the next step, and offer new tasks directly to team members. If the momentum for the project comes back, they will be more active and can choose the tasks themselves (that never happened to me, I had to continue assigning tasks until the project finished). Finish — Showcase & The launch!* Create a Screencast and at least one medium article/blog detailing the experience, the project, and what was learned. The screencast/project will be showcased in the Cohort News section, social media, as well as the Medium & github org list! Many party parrot emojis will be dropped. 5. 4 Tips for when you feel your team is in the Y E L L O W O R R E D status Photo by Justin Schüler on Unsplash At W3 Develops, we classify team-health as either G R E E N, Y E L L O W, or R E D. This classification is mainly done through the Weekly Check-ins and Github repo activity (this comes in after Act 1 — Project Setup is completed). If you put Y E L L O W or R E D on your weekly check-in, you’ll be sent this article, which aims to help you troubleshoot your situation. 1 — Do the Extreme Ownership experiment. This is a thought experiment aimed to improve your collaboration skills. It was developed by Jocko Willink and involves taking “extreme ownership” of your situations in life in order to learn and be more effective in reaching your goals. Principle: Effectiveness is more important than being right. Blaming others is ineffective, even if it is their fault. We don’t learn anything when we blame others. It’s more advantageous to assume you contributed to the issue (even if it sounds crazy) and ask: “ What can I do to avoid this issue in the future?” This allows us to turn any experience into a learning experience. For example, if you have a team-mate who is inactive, ask:“ Did I build rapport with all my team-mates by sending them a Direct Message when the team launched?” Teams that build strong individual rapport early rarely have members go inactive. “ Did I use soft skills and tactfully interact with my team-mates?” If you put people in a corner, they will retreat. If you showcase impatience, they won’t want to work with you, and will eventually retreat. This is why it is often said that E Q is 80% of success and I Q only 20%. We are social animals who live in a complex world. Almost everything you do will involve interacting with others and success always involves working with others in some way. Use this cohort as an opportunity to practice improving your social skills. Did I establish common ground-rules with my team so we had mutual expectations for communication, responsibilities and activity? One common issue I see with teams is people have different expectations for constitutes acceptable communication, responsibility and activity. Was I consistently active and engaging my teams up until now? I’ve seen people who are inactive suddenly pop up a week after the team is launched and make a ticket because their team is not active. They often don’t see the connection (and to a certain extent, this is natural), which is why I encourage everyone to do the Extreme Ownership experiment. 2 — Direct Message your inactive team-mate(s) If someone is inactive, I recommend sending a Direct Message like this: Hey @username! 😃, just wanted to check in and make sure everything is all right and if you’re still committed to the team project? We’re looking to get going in the team so just wanted to see if you’re still interested in joining? 🚀 Principles to note: It’s one-on-one. If you ask this in a public chat, they may reply but I’d say there’s a lower percentage they will. Whenever someone is acting out of line (like being inactive), it’s always best to move the conversation to one-on-one so you can have a more reasonable line of communication. In public, people can lose face and that brings the ego out, which drastically reduces effectiveness. It’s friendly, not aggressive. People are more likely to respond to friendly; people are less likely to respond to aggressive or anything that makes them feel in a corner (remember, our goal is not to be right, it’s to be effective). It softly reminds them of their previous commitment. As humans, once we make a commitment, we don’t like not following through. Everyone in W3 Deveops has made a commitment. The key here is to mention it in a *soft* way. If people feel in a corner, they have a higher likelihood of disappearing completely. 3 — If they don’t respond in a few days, then: Send your other team-mate(s) a message and see if they want to merge with another team or request a new member. If they do, make a ticket and explain that you and @username-here wish to be merged with another team or to get another member. If they don’t and you’d like to be added to another team, make a ticket and we’ll try our best to fit you in somewhere (with a little creativity we usually can. 🙌). 4 — When in doubt, make a ticket with your hopes clearly stated It’s not always going to work out. That’s fine and the reality of team projects is that they are incredibly hard to start, so it’s natural. We can persevere and continue to match until it works. Please be as clear as you can in your ticket with what you *hope* to happen. I will try my best to make that happen when I am free. If you see another ticket that could solve your ticket, feel free to be proactive leave a comment on that ticket and reach out to that person in discordto solve your issue faster. I love when this happens!p. s. Make sure your team knows what you’re doing. If they haven’t been active enough, it’s reasonable that you may want to leave, just make sure you let them know (or else in a few days they may make a ticket : P). Please keep in mind 🙏 Though there’s loads of generous people who help out tremendously, W3 Develops is mainly run by one person who works on W3 Develops part-time at the moment (though if I’m honest, it’s full-time hours). I have a day job. I apologize in advance if I take awhile. W3 Deveops may be facilitating hundreds of teams at any given time, across multiple Cohorts. I hugely appreciate in advance your empathy and patience. Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 1 — Team Projects Lineup Chapter 2 — Schedule Chapter 4 — Standards & Builder’s Pledge Chapter 5 — Finished Projects & Other Cohorts Comments Chapter 6 — F A Q","['Web Development', 'Codingbootcamp', 'Pair Programming', 'W3develops', 'Freecodecamp']",https://medium.com/w3develops/chapter-3-essential-skills-resources-and-how-to-prepare-for-the-cohort-edff4a4fa6d9,1,[],0,1,jonathan,M,0.0042130252697924414,0.9957869747302076
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Going to Your First Hackathon? Read This. – Hack Reactor – Medium,2017-10-02 17:26:06,medium,"Going to Your First Hackathon? Read This. Wondering how to prepare for your first hackathon? Whether you’re a programmer, marketer or just a tech enthusiast, experiencing a hackathon is an amazing experience to have under your belt. Plus, they’re tons of fun! Here are our tips for preparing for your first hackathon:1. Know what you want to accomplish and why This applies to more than just hackathons — before starting anything, it’s important to set goals for yourself. Spend some time thinking about why you want to participate. Are you trying to learn a new skill? Code something for your portfolio? Build an app with an A P I you’ve never worked with before? Network for job opportunities? Know why you’re there and be explicit about those goals so you can achieve them. 2. Research the topic and theme before going Most likely, there will be some topic or theme set for the hackathon. For example, the topic may be music-related or sponsored by a certain company. If your goal is to win, do your research. Brainstorm relevant app or program ideas ahead of time. Study the sponsoring company’s A P I and come prepared with a scaffold already coded that you can adjust on the fly. 3. Assemble your squad Once you’ve set a goal and done your research, the next step is to build a team! If you can go in to the hackathon with a group of people you like and know you work well with, that chemistry will give you an edge over other teams meeting each other for the first time. 4. Hype people up Possessing the technical capabilities to build a product is only half the battle to winning a hackathon. If you’re attending a hackathon as a non-technical person, your energy and enthusiasm is the fuel driving the team throughout the 24–48 hours. Plus, the presentation at the end is crucial to your score — if you can’t get the team excited about your idea, you can’t expect to get the judges excited. So, in short — get pumped! For two more tips on how you should prep for your upcoming hackathon, check out our original post here. — Hackathons not enough for you? Ready to take your coding skills to the next level? Check out Hack Reactor’s immersive coding bootcamps for people who want to get started in a career in software engineering. Originally published at www. hackreactor. com.","['Hackathons', 'Coding', 'Programming', 'Codingbootcamp', 'Tech']",https://medium.com/@hackreactor/going-to-your-first-hackathon-read-this-75f471f95d00,0,['Hack Reactor'],1,1,hack,Unknown,Unknown,Unknown
Rhys Woodberry,Web dev and video game enthusiast | rhyspec.me,Challenges From Bootcamp So Far… – The Code Odyssey – Medium,2018-03-10 01:15:28,medium,"Challenges From Bootcamp So Far… It’s a scary thing, jumping into a world that is completely new to you. There can seem like an endless amount of things you don’t know and feel like you should know. The past few weeks of bootcamp have been full of learning new skills, challenging myself and what I think I can do, frustration from trying and failing and general anxiety about my abilities. I wanted to briefly mentions a few of the biggest challenges so far, as well as some of the lessons I feel have helped me push through. Feeling Overwhelmed Bootcamp is not like any course I have done in the past. It really is like those physical bootcamps but for your brain. There is so much information given to you in such a short span of time that it can sometimes feel overwhelming. As a complete newbie to this world, it has felt especially challenging trying to come to grips with so many different concepts at the same time. The Lesson: Firstly, take a deep breath. Then, write down the things you feel you need to work on. Set yourself a goal of trying to understand one of these things each day, or over two days if you need to. Breaking things down into smaller parts can help you feel less overwhelmed and also feel like you’re making progress. Secondly, don’t spend all your time searching the internet for extra resources to help you. There is so much out there, just pick one or two sources and work through those. The core documentation is a good place to start, but it can sometimes be a little too technical, so I like to have another source to refer to, one that helps break down concepts for beginners. Feeling Like You Have To Study 24/7 There is so much content to learn in such little time, how are you supposed to know everything and not fall behind? The past 3 weeks I’ve had the urge to spend as much time as I can studying, but sometimes feel like I’m not getting as far as I’d like given the amount of time I’m putting in. I felt guilty when I took a break to chill out and play a game, or play guitar. The Lesson: Balance. It’s all about balance. Sure, you have a lot to learn and understand, and not much time to do so. However, it’s not about how long you spend learning, it’s the quality of the time you’ve spent. If you’re struggling to comprehend something, stop and take a break. Go for a walk, have a coffee, do something fun. Just like you wouldn’t spend an entire day at the gym, your brain also needs a break. Don’t forget about your hobbies, your family or your friends. Most of all, don’t forget about sleep! Feeling Like You Don’t Belong As I’ve mentioned before, I had no experience in this field, besides a little H T M L which I taught myself in 2005 for my awesome My Space page. I had absolutely zero programming knowledge. I was an Arts student at University and I’ve only ever worked in retail. At certain times, especially when you’re stuck on a concept or problem, it can feel like you’re not supposed to be there. It can feel like others are getting things and you aren’t. The Lesson: Just because it’s new to you, it doesn’t mean you shouldn’t be there. It will take time to feel more comfortable with everything, and it’s ok to not be an expert at everything after 3 weeks. Talk to people. Understand that you probably aren’t the only person who feels this way, or at least that people come from all walks of life with the shared goal of learning to code. Be persistent and immerse yourself in the content. These are the biggest challenges I’ve dealt with so far. Learning the content is also challenging, but it these other things that make things even more difficult sometimes. Sometimes it’s not the difficulty of the content you’re trying to learn that is stopping you, it’s yourself. Especially if this is all new to you, it can all seem very intimidating, but you just have to keep reminding yourself all the things you’ve learnt already in such a sort time and that you’re only just beginning your journey. Keep at it and don’t give up!","['Programming', 'Coding', 'Codingbootcamp', 'Personal Development']",https://medium.com/the-code-odyssey/challenges-from-bootcamp-so-far-a424d490df47,0,[],0,30,rhys,M,0.06022150438394093,0.9397784956160591
JM,Digital Marketing Consultant,Memoirs of a Coding Boot-camper in Lagos — Learning to Code and My first week at Nesa by Makers,2018-05-23 09:36:34,medium,"Memoirs of a Coding Boot-camper in Lagos — Learning to Code and My first week at Nesa by Makers Unlike most people at coding talent shows, coding was not a dream for me. Although I have a degree in computer technology, it was just a means to an end. After spending most of my post graduate life at jobs I hated and writing exams for certifications that are without meaning or purpose to the Nigerian ecosystem, I had to sit back and reflect. One day, one night, one moment of a sudden realization, what better way to make an impact in a demographic cohort that has one of the highest populations of young people below the age of 35 in the world. As cliche as it may sound, I wanted to be a solution provider. Be able to have control outside my circle of influence. Be able to look at problems critically, be intellectually rigorous with my ideas, and identify nuances that will lead to innovation in Africa. Hence, my journey to becoming a Software Developer began. Coding is a skill I was determine to have, as part of a skill set that would aid in my worthy pursuit of making a change in my country and continent. The Plan I was a cub looking to hunt a full grown male buffalo. I needed a plan, strategize on the most efficient and effective way for me to achieve my goal. First things first, information is crucial. I read a lot of articles and watched some career videos on You Tube. One message that was coherent was the power of networking in the the world of Technology. I installed the meetup app which is one of the most important app any young Nigerian should have. Then I went on a joining spree. Joined every meetup I saw that has anything to do with programming. I needed to learn fast and simultaneously boost my network. I joined for Loop, G D G Lagos, Lagos React J S meetup (even though I was wondering what they were reacting to at that time), Learn to code, Python Nigeria, Word Press Lagos, . Net Nigeria etc. I ended up joining some awkward meetups that I had no idea what they were doing or trying to accomplish. Well, anything to network with people. Living in a bubble made me overcompensate. Next, choosing a programming language that is in touch with the current technological trend and also relevant to the Nigerian Tech ecosystem. I made the decision to start with Java Script after spending days researching current technological trends around the world. I found out that Java Script which my computer science professor once told me wasn’t a real programming language and had limitations when trying to solve more complex problem was already been used as a back-end programming language with the creation of Node J S. I was hooked, despite the fact that I never really liked Java Script in the first place. I hated the fact that it wasn’t strongly typed and found it very difficult to read when I was still in school. But, my mind was made up. I must slay this Goliath. However, I had a huge personal flaw that could be an impediment to my learning process. I have a relatively low attention span ( I get disinterested quickly after a short period of time). This meant I had to try to study enough at periods when I am more likely to assimilate, combine my learning methodology with coding exercises, physical exercises each time I am about to lose focus and get involved in community learning. It was in one of these learning platforms for communities that I got to know more about the Nigeria tech ecosystem. I found the opportunity to begin a new journey with Nesa by Makers and Tech Advance. A New Journey with Nesa by Makers After I saw the Ad for the Tech Advance scholarship, it was an opportunity I didn’t want to pass off. I applied and was lucky to be one of the 10 recipients. Both companies seem very exciting. I was eager to know more. Be a part of a team. See what drives them and how we could have a symbiotic relationship. After the first week, the one thing I was impressed with was the people. The C E O of Nesa by Maker was cool. He was easy to talk to, listened, tried to understand us and took actions base on our feedback. The other staffs were equally as warm and welcoming as he was. We had some team building exercises which have worked perfectly for a bunch of people who barely knew each other a week ago. We are now getting to learn and work as a team. I was also very impressed with their curriculum. It was filled with the latest in the world of web development. It had topics such as Algorithm and Data Structures, React J S, Node J S, Understanding Build tools, Continuous Integration, etc. It looks like the road to reaching my destination is going to be, although an interesting experience, yet bumpy and tough. However, I am ready for it. I am resilient and never shaking. This world of web development is my foot-stone, and for every situation that looks ominous, I am confident I will rise above.","['JavaScript', 'Techadvance', 'Nesa By Makers', 'Codingbootcamp', 'Software Development']",https://medium.com/@johnmadakin/memoirs-of-a-coding-boot-camper-in-lagos-learning-to-code-and-my-first-week-at-nesa-by-makers-8e1c655d6634,1,[],0,60,jm,M,0.0,1.0
Alan Hong,"Programmer / Developer-in-training, former Air Traffic Controller, Pilot, Entrepreneur.","The Iron Yard Houston Day 9, 10 and 11 – Alan Hong – Medium",2017-06-07 03:49:27,medium,"The Iron Yard Houston Day 9, 10 and 11 Sorry I haven’t updated in a while! I was feeling a bit under the weather on Friday after class so I was resting all weekend long, letting my body recover. But because of that, I fell a little behind on my second weekly project. Well, I say behind but I just submitted the final draft this evening. It’s due this Thursday so it’s still early :) Friday was about working with Git Hub and reinforcing what we learned on Thursday about it. Terminal commands and stuff to push, pull, merge and clone projects to and from Git Hub. Important concepts for sure. Made easier now that one of my classmates found a built-in package that incorporates Git Hub commands within the Atom text editor we use to program in class! No need for terminal commands anymore! Hooray! lol Monday was awesome as it was our first day of Javascript! Yayyy! It’s been weeks since I did a coding challenge though, so I was a bit rusty. We started with the basics but it ramped up in difficulty pretty quickly. Almost to mid-level coding challenges that I was doing a few weeks ago! I’m super excited to learn more and get better at it :) Tuesday was more Javascript and more about functions and similar stuff. Now that I finished up the second weekly project, I can concentrate more on our new Javascript daily projects. I wonder what the weekly project will be! :)","['Programming', 'JavaScript', 'Codingbootcamp', 'The Iron Yard', 'CSS']",https://medium.com/@xiupan/the-iron-yard-houston-day-9-10-and-11-62b68566718e,0,['The Iron Yard'],1,0,alan,M,0.0030826743350107835,0.9969173256649893
adam tropp,,CS 100.3: Linked Lists – adam tropp – Medium,2018-05-16 21:39:10,medium,"C S 100. 3: Linked Lists Without further ado, the much hyped and heretofore undelivered post about linked lists! Linked lists are one of the most fundamental and important data structures in computer science, and rest assured, if you are interviewing for a position as a programmer, you will be expected to know how to implement them, work with them, and describe some facts about them. But first, why use a linked list? As a novice programmer, your inclination whenever you are asked to represent data in a list is to run to the standby, old faithful, the array. And rightly so. Arrays are great… for some applications. Consider, however, the cost of adding an element to an array. If you add the element at the end, this is an O(1) operation. Simply find the last element, then add another one. Splendid. What if, however, you want to add an element at some location other than the final index? You must locate the index, replace the element, and push every subsequent element back one index, an O(n) operation. This, then, is where linked lists come to the rescue. A linked list is, as its simple name implies, a list of elements where each element “links” to the next element in the list, via a pointer. There are different implementations of linked lists, but the general idea is that each “node” in the list stores its own data, as well as a pointer to the next node. Linked lists can be singly linked, in which case they work exactly as described herein, or doubly linked, meaning that they also store a pointer to the previous node in the list. They almost always have a head pointer, i. e. , a pointer to the first node in the list, and may optionally have a tail pointer, i. e. , a pointer to the last node. Unlike arrays, adding and deleting elements at the front is a simple O(1) operation, the pseudocode for which, looks like this (assuming a doubly linked list). deletenode(node) { 	 node. prev. next = node. next} The other main draw of linked lists as opposed to arrays is that, while arrays have fixed length, requiring you to create a new array, copy all of the data from the original array, and add the new data every time the array’s length is exceeded, linked lists can grow boundlessly, until the computer’s memory is filled. Generally speaking, linked lists support adding and removing elements at the front, adding and removing elements at the end, adding and removing elements before and after a given element, finding the first element, finding the last element, finding any element, and checking whether the list is empty. Adding, finding, and deleting an element at the front are always O(1) operations, and the pseudocode for adding an element to the front of a singly list looks like this:push Front(key) {   if head == null ; error: empty list  key. next = head. next 	 head. next = key } Adding and finding an element at the end are O(n) operations assuming no tail pointer is present, and O(1) if there is a tail pointer. In singly linked lists, removing the last element is O(n) with or without a tail pointer, since one must iterate over the list until the second to last element is reached in order to set its pointer to null. This can be cut down to O(1) in a doubly linked list with a tail pointer, since tail. prev. next can simply be set to null. The pseudocode for removing the last element in a singly linked list looks like thispop Back() {  if head == null ; error: empty list  node = head  while node. next. next != tail     node = node. next   node. next = null 		tail = node } Finding a given element in any linked list, without a pointer to that element, is O(n), requiring iteration to that node in the list. Adding an element after a given element is O(1), and adding before an element is O(n) in a singly linked list and O(1) in a doubly linked list, for much the same reason as this is true for removing the final element. Erasing a given element without a pointer to that element is O(n) in any linked list, and checking whether the list is empty is a simple O(1) operation, i. e. , checking whether the head pointer is null. Of particular interest is the point about finding a given node in a linked list. In an array, finding an element is an O(1) operation, simply a matter of looking to the proper index. In a linked list, this becomes O(n), so in this sense arrays perform better. In fact, this dichotomy between arrays and linked lists, the idea that arrays are better at finding elements, and linked lists are better at adding and removing them, is the central point of analysis when considering which to use. Generally, use an array when elements will need to be located frequently, and a linked list when elements will be frequently added and removed from the front or back. For this reason, linked lists are a common implementation for stacks and queues, which were discussed in a previous blog post. They are also used when handling collisions in a hash table, which will be covered in a future post. One final note about linked lists: When practicing with them, use singly linked lists for the most part. If you can implement and work with a singly linked list, then you can implement and work with a doubly linked list, but the opposite cannot necessarily be assumed. Thanks for reading, and stay tuned for more introductory C S jargon. Today’s words of wisdom come to us all the way from the Bhagavad Gita -“ In battle, in the forest, at the precipice in the mountains, On the dark great sea, in the midst of javelins and arrows, In sleep, in confusion, in the depths of shame, The good deeds a man has done before defend him”","['Programming', 'Codingbootcamp', 'Computer Science']",https://medium.com/@adt6261/cs-100-3-linked-lists-b3e37a311098,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Fredy-Edwin Esse,Software Engineer,How to keep fit during a fast-paced coding bootcamp,2017-07-09 21:59:46,medium,"How to keep fit during a fast-paced coding bootcamp Twelve to fourteen hours a day, sitting all day long and crouching in front of a computer monitor, getting up only to visit the bathroom. It is obvious that this kind of life style is not sustainable even if it is for a limited period of time. Although the point of attending a coding bootcamp is to enhance your knowledge of programming to a level where you are hiring material to companies, you cannot turn a blind eye to your physical health. If you do not take care of your body then eventually your mind will let you down as well. As a disclaimer I’ll come clean right away and say I don’t have any degrees in nutrition or physical wellness. I will present to you methods that I have found work best for me and definitely deliver results. It’s nothing extraordinary, just basic and solid know-how of exercising and eating healthy. To get or be healthy you have to remember that exercise or dieting alone won’t work. It’s the combination of the two that matters. I would describe the ratio of being 80% healthy eating and 20% exercising. Meaning eating healthy is more important, but you can’t do without exercise. While in a coding bootcamp you have very limited time so basically every minute counts. That’s why High Intensity Interval Training ( H I I T) is the way to go. There simply isn’t enough time to go hiking in the woods or cycling in the mountains for five hours. H I I T will deliver the same results but in a much more condensed time frame. A typical exercise ranges anywhere between five to 25 minutes. I don’t have a fancy personal coach, but I do have my smartphone. And thanks to Freeletics I have a personalized algorithm that acts as my virtual coach. It will give me an entire week’s worth of bodyweight exercises, time me and monitor my progress. It really is the easiest way of having an awesome workout schedule being present to you. I’ve made it my mission to wake up a little bit early each day so I could go and do my Freeletics bodyweight training. Before class starts is the only time I have almost certainly guaranteed free time so mornings make the most sense to me, but if you can sneak in around 45 minutes some time during the day then hey, work out whenever you want! I’ve set alarms on my phone to notify me each day to get up from my chair and move around a bit. I like doing pushups to get my heart rate up and my blood flowing, but, again, whatever works for you. The main thing is to move around a bit. With regards to food I try to keep it as healthy as I can. You want to reduce your fat intake and only consume healthy fats, like the ones you get from nuts, avocados and extra virgin olive oil. Try to stay away from unhealthy carbs like potatoes, wheat, rice, pasta etc. And sugar… That is a definite no-no. Try to limit your sugar intake as much as you can and just stick with fruits and berries. I personally like the paleo approach to food. I don’t take anything to extremes, I believe in moderation. But do try to eat more F O O D, meaning anything that hasn’t been made by man. You can’t go wrong with nuts, berries, fruits and veggies. So, as a recap: Eat natural food, not processed stuff; stay away from unhealthy fats, carbs and sugar; exercise regularly, preferably doing H I I T workouts to save time; don’t be glued to your chair and computer screen all day, get up and move.","['Health', 'Codingbootcamp', 'Workout']",https://medium.com/@fredyedwinesse/how-to-keep-fit-during-a-fast-paced-coding-bootcamp-84dcf4c92832,1,[],0,2,fredy-edwin,Unknown,Unknown,Unknown
Chris Lofton,,Trust – Impact Hub Austin | Workforce Development Accelerator – Medium,2018-05-16 04:41:46,medium,"Trust This week we created customer journey maps. A customer journey map documents the complete process a customer goes through to engage with your business. The initial stage of the customer journey map is awareness. Unfortunately the “bootcamp” and technical education space is characterized by overpromising and underdelivering. Because of a profit motive, schools have sold something that was not good enough and left students stranded in debt without a job and without adequate training to find a job. I don’t know how to convince students that we are different, that we will always care about you and give our very best effort and support to place you in a job. Currently there are online programs offering Cyber Security certificates for $500, and all they offer is an online course with little guidance and no direct instruction. There are $20 courses online claiming they will teach you web development. If that is true, why is there such a shortage of qualified developers when the starting salary is over $60k? Furthermore, there are many people who have never considered a career in tech. How do we serve them and at the same time protect them from being taken advantage of by our less honest competitors? Recently I asked a major player in the education space if they had placement or completion percentages to share, and the answer was no. For us to make changes, we’ve got to have data and hold each other accountable. Everyone deserves access to a quality education, and this must begin with trust. My commitment is to building a trustworthy organization.","['Education', 'Education Reform', 'Alternative Education', 'Coding', 'Codingbootcamp']",https://medium.com/impact-hub-austin-workforce-development-accelerato/trust-38f3f92a846,4,[],0,5,chris,M,0.13713656176653735,0.8628634382334627
Le Wagon Montréal,Coding school for creative people & entrepreneurs 🦄 🖥 9-week Full-Stack program to learn to code. 🚀 http://lewagon.com/montreal,Let’s Celebrate Women for Greater Diversity in Tech,2018-03-08 05:03:26,medium,"Stéphanie & Sara coding their final project (batch #98, Fall 2017) It’s International Women’s Day today. Let’s Celebrate Women for Greater Diversity in Tech Lire la version française Women have initiated and led major advances in programming and software development. Women such as Ada Lovelace, Hedy Lamarr, Jean Bartik, and Admiral Grace Hopper made history. In the 1980s, 37% of graduates with an I T major were women. Today, only one in four I T jobs is held by a woman. In Québec, women represent 20% of professionals in the field, according to the latest T E C H N O Compétences study about the I T workforce, published in February 2018. An Animated History of How Tech Became So Male- Dominated Since computing began in the 1940s, women have led major developments in programming and software development. In 1984…www. theatlantic. com However, this is currently changing for the better. The number of young women enrolled in a Bachelor’s degree in I T has grown over the last 5 years and the graduation rate has increased by 41% in Québec ( Diagnostic T E C H N O Compétences 2018). Nevertheless, there is still a long way to go to ensure greater inclusivity and diversity in this sector. On the occasion of International Women’s Day, we wanted to celebrate the women of Le Wagon and share a few of their stories: Jessica taught English in Japan, and today, after completing the Le Wagon program in Montréal and because of her determination — she is now a developer at Proctor U. From English Teacher in Japan to Software Engineer in the U S Jessica did Le Wagon batch 77 during the summer 2017. medium. com Hanae was a consultant with large corporations and after completing her stint at Le Wagon Barcelona, she decided to launch the program in Casablanca, the first African city to offer the program. She shared her perspective on women’s involvement in the technology industry. The case for women in tech or why it’s key to build positive nudges for female enrollment in the… Last week, one of my peers at Le Wagon told me he was slightly backslashed by one of his information session’s…medium. com A graduate of Yale University, Maria is a Full- Stack Developer and mentor at Le Wagon Shanghai. She is a strong advocate for women in tech. [ Lady in Tech] Maria Altyeva- From Yale Graduate to Coding Mentor Le Wagon exprience. When students say Le Wagon is one of the best investment they can make for their personal…mp. weixin. qq. com Lea entered the workforce one week after finishing her bootcamp in Barcelona. Lea Cohen accepted a job offer the week after the bootcamp endedand is now a full-stack developer in a field she studied and loves ! My background is in Geography and G I S (geospatial…www. lewagon. com After completing Le Wagon in Amsterdam, Carolyn got a job as a Developer at a Frog Leap because of her talent, and … a chatbot. Carolyn aced her job interview with a C V chatbot Coding isn't that different from knitting. It's all about patterns. www. lewagon. com Viola was a lawyer. She went through Le Wagon program in Lisbon, and is now a developer and entrepreneur. From lawyer to developer and entrepreneur in less than 6 months Viola, I am 26 years old, from a small town in Switzerland's German region. I studied law in Switzerland and I worked…www. lewagon. com More stories about the women of Le Wagon 👉 https://medium. com/le-wagon At Le Wagon Montréal, diversity is important to us. We have undertaken concrete actions to help bring more diversity and inclusivity into the field of technology. Our bootcamp is open to anyone, regardless of their background and past experience. We expect 3 things from our students: to be motivated (very motivated), to be curious, and to be social. Our team is diverse and has gender parity, with just as many women as men. We have organized events to raise and discuss this topic. What is Le Wagon? Le Wagon brings programming skills and startup culture to non-tech people. Our main program is a 9-week full-stack coding course which is very intensive and gives the ability to build a prototype of any idea you might have. Our students are future web developers, startup founders, project managers, product managers, and technical business-people. Altogether, we are a global team of 250+ seasoned mentors and over 2400 alumni in 19 countries and 29 cities. Last Seats for the Spring batch 👉 April 9- June 8, 2018 👉 Apply now!🚀 🚀 🚀 P. S. : If you enjoyed this story 🤗, please click the 👏 button, and share it to help others find it! Feel free to leave a comment too.","['Women In Tech', 'Diversity In Tech', 'International Womens Day', 'Technology', 'Codingbootcamp']",https://medium.com/le-wagon/lets-celebrate-women-for-greater-diversity-in-tech-d4f1ab2a1027,6,[],0,245,le,F,0.5308343409915357,0.46916565900846435
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,So you’ve been matched in a Chingu Pair-Coding Festival: What’s next?,2018-05-17 15:44:46,medium,"So you’ve been matched in a Chingu Pair- Coding Festival: What’s next? A relaxed way to try out Pair- Programming for the first time or to dive in again Photo by Jonathan Farber on Unsplash H O W D O E S I T W O R K? W H A T A R E T H E R U L E S? So, first, some ground rules of pair programming. B E R E S P E C T F U L A N D B E N I C E! And don’t click on random stuff. M A K E S U R E Y O U D O N’ T H A V E A N Y T H I N G Y O U D O N’ T W A N T O T H E R S T O S E E V I S I B L E. Most tools lets the other person see your screen. R E M E M B E R T H A T W E A R E A L L A T D I F F E R E N T L E V E L S. The wonderful thing about pair programming is that helping others helps you understand better. What usually happens is that one person will be in the “driver’s seat” and does the coding while explaining to the other person about what you are writing. The other person is there to help, catch any bugs, ask questions, etc. Then after awhile you can switch who is the driver. Sometimes, the person watching may have an idea. That idea may be hard to put into words. In this case, it can be useful to “switch” drivers. But, make sure you A L W A Y S ask before you switch. Also, remember that most of us speak English as a second language. Another thing: sometimes our internet sucks. Be kind and be flexible, and all shall be fine. It is the Chingu way. How do we do it?1 — You sign up and a few days later will be magically paired in a D M with your coding partner. 2 — Say things like “hi!” 👋 and “how’s it going!?” (friendly chit-chat). Then find a time that works for both of you. Again, try to be flexible. If for some reason you can’t find some time this weekend, feel free to set something up for next week. :)3 — Look in the Pair- Coding trello resource we sent you to see a list of tools you can use pair-coding ( V S Live Share, Codeshare. io, Discord, etc. ). 4 — Pick a challenge or project to work on. This can be done before or during the pair-programming session. See below and the Pair- Coding trello for ideas. 5 — After your session, please fill out the short feedback form (1–2 minutes — we’ve generated over 500 hours of pair-programming in the past, and the feedback form lets us keep track of this number). Have fun!! W H A T D O W E W O R K O N? The purpose of this is to “try” pair-programming. We are here to have fun and begin learning a whole new skillset and way of problem solving. We will probably be like this: Before we can be like this: So what I personally recommend is working on a simple project or an algorithm challenge to start. The Free Code Camp challenges, Codewars or Hacker Rank are great places to start as they have hundreds of challenges for all levels. Past pairs have built mini little projects as well. Below are some possible “springboard” ideas as well. Build a hangman game: https://en. wikipedia. org/wiki/ Hangman_(game) G I P H Y fun. Use codepen to build something playful using the Giphy api. http://giphy. com/ Do something with this really cool Open data from the city of New York: https://data. cityofnewyork. us/ Housing- Development/ D O B- Job- Application- Filings/ic3t-wcy2 Happy pair-programming!","['Pair Programming', 'Chingu', 'Freecodecamp', 'Codingbootcamp', 'Web Development']",https://medium.com/chingu/so-youve-been-matched-in-a-chingu-pair-coding-festival-what-next-378160fd4676,0,[],0,317,chance,M,0.024461428631419813,0.9755385713685801
Shadi Jam,"Obsessed with back end development, particularly .Net/C# && all things coding at The Iron Yard Houston.",Poshare – Shadi Jam – Medium,2016-11-09 23:05:33,medium,"Poshare After working diligently all week on an app for Poshare we ended up pivoting at the last minute which meant we didn’t use the app at all! Still, it was a truly awesome weekend. We worked out of the Rebellion Photonics offices on the east side of downtown. What a stunning space! She Hacks H T X 2016 teams working hard at the Rebellion Photonics offices in East Downtown Houston We learned so much about identifying your market and creating a viable solution to a real problem that people are willing to pay for. Even with the last minute pivot our team really came together. Not to mention Poshare won 2nd place! Here’s our picture with a few of the judges. The Poshare team with a few of the She Hacks H T X 2016 judges All the teams had incredible projects and it was an honor to be among so many talented, motivated, hard working women. My favorite project (also the first place winners — and you’ll understand why immediately!) was Ellie Grid. They even had an actual prototype, that was designed with the help of the T X R X Labs team, an interactive pill box that tracks prescriptions by organizing them based on the medication type rather than the day. It can remind the user, through the beautiful electronic display, on when medications are due and even sends notifications to pre-set caretakers, that the appropriate medications have been taken. What a clever idea! Although I haven’t slept properly in days, I can’t say that I mind. I feel so lucky!","['Entrepreneurship', 'Startup', 'Coding Bootcamps']",https://medium.com/@shadijam/poshare-cb284ed9769,0,['The Iron Yard'],1,0,shadi,M,0.2668845315904139,0.7331154684095861
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,JavaScript Really Threw Me For a Loop. Days 4 and 5 at Computer Coding Bootcamp.,2017-08-06 19:23:58,medium,"Java Script Really Threw Me For a Loop. Days 4 and 5 at Computer Coding Bootcamp. See? “ Loop” is a pun. Git it?# Puns For Days. Competition. The word of the day is “competition”. Before enrolling at the Redwood Code Academy in southern California, I had explored learning programming languages on my own. During high school, like four score ago, I taught myself H T M L. I’ve been off and on trying to learn Python, and my previous employer thought I was something of a S Q L / V B A developer. After one week of the in-person course at Redwood, I already have more practical capability with Java Script than I ever had with Python. And it won’t be long before I know more Java Script than I ever knew of H T M L. It’s rewarding to be able to quickly apply skills. I can already write out a simple text-based game that prompts the user, through a web browser, to give the game’s protagonist attributes in order to fight foes with randomized attributes of their own. And the user can select weapons to arm his/her hero from a shop within the game. I know I can do this. Because I did it this week. Competition is the reason why. While studying at home, I had no one to compare my progress to, except to myself and to my own expectations for myself. At Redwood, I have peers, and I’m discovering that there are students who are picking up the material quicker than I am. And that digs at my very soul. I can’t do much about the speed of my knowledge apprehension. I can, however, work on my knowledge retention. And that’s where my competitive nature makes in-class learning so effective. It’s not the pressure of falling behind that drives me. I’m confident that I can keep pace. My motivation is different: I’m internally compelled to match the very best student’s ability to really get and apply the material. In other words, my peers may learn the material quicker than me. But no one will know it better than me. Or, well, no one is going to work harder at knowing it better than me. That’s probably the most accurate way of stating it. So far as learning goes, the bootcamp environment draws the very best out of me. It activates something in me than learning on my own never could. “ Competition” is the word of the day. And “persistence” is the method by which it is applied. Here is what that looks like: The commute from my condo to the Redwood Code Academy is forty minutes in the morning and a hour and a half on the way home. I wake up a little after 4 am. Take the dog out. Hit the gym. Run. Eat breakfast, and review the previous day’s lesson so that I am prepared for the current day’s. Leave for school. Arrive at school by 9 a. m. We have lessons in the morning, from 9 to 12. Lunch. Lab from 1:00–5:00 p. m. Return home. Entertain dog. Update blog. Work on day’s lab for additional hour or more. Pass out. During at least one morning during this initial week of class, I skipped the gym, did a quick run only, and used the extra time to work more on a lab before leaving for school. It’s a pretty immersive experience. As a veteran, I know bootcamp. As far as free time goes, coding bootcamp is not a whole lot less demanding than the military’s. At least during the weekdays. We ended the first week of class having gained a basic understanding of the fundamental mechanisms of Java Script objects. For and While Loops make sense to me. We’ve only scratched the surface on functions, but I can at least use them to apply attributes to other objects. I think I understand arrays. It’s Sunday now, and today, I’m excited to get this blog written and posted so I can dig into some work from an additional book (pictured) I picked up to supplement my learning. I like that the book provides another angle on the topics we are learning in class. The extra perspective will hopefully lead to more robust understanding. This afternoon, I’m going to use the book to prep myself for the upcoming week’s classes. On to it. Unrelated: I am passionate about music and one of my primary hobbies is mixing electronic music. I play D J sets live on periscope and then post them on Sound Cloud. If interested in ever watching, you can access my periscope H E R E. Follow me on T W I T T E R; I tweet set times there. And you can access my soundcloud profile H E R E. I mostly play progressive house, trance, and some regular house music. My trance leanings are influenced by Markus Schulz, and my progressive side by the G O A T. I mean, Eric Prydz. Check them out and, if interested, my mixes. Thanks! Read about Days 5, 6, and 7 H E R E.","['Programming', 'Coding', 'Bootcamp', 'Codingbootcamp', 'JavaScript']",https://medium.com/@sbogucki12/javascript-really-threw-me-for-a-loop-days-4-and-5-at-computer-coding-bootcamp-cc779aa41260,1,['Redwood Code Academy'],1,9,steve,M,0.0037574028300791295,0.9962425971699209
Jamie Gladfelter,"economist, entrepreneur, developer, mentor for @starterleague & @worldtechmaker",The Beginning. – Jamie Gladfelter – Medium,2017-10-02 22:12:10,medium,"The Beginning. With the building purchase complete we’re now awaiting initial concept designs from Latent Design. We’re very excited to see what this talented team creates and should have these in hand by mid- October. This is an important step in the process because it gives us something to show to community members and city officials as we describe the coworking / classroom model that we’re launching. We’re also currently working on developing curriculum for the back-end, front-end, and mobile development programs. Watch this space for design, curriculum, and construction updates.","['Coworking', 'Codingbootcamp', 'Coding', 'Impact']",https://medium.com/@jgladfelter/the-beginning-2b2a9fd2cc98,0,[],0,0,jamie,F,0.7582899308015347,0.24171006919846527
Rob Faldo,May’18 cohort @ Makers Academy. Future software developer.,How I used the Feynman Technique to learn how the web works in 5 hours!,2018-06-04 05:42:43,medium,"How I used the Feynman Technique to learn how the web works in 5 hours! I mentioned the ‘ Feynman technique’, developed by Nobel prize winning physicist Richard Feynman as a way to improve your understanding of a subject in my article on pair programming. The 4 stage process uses a similar concept to the one that Einsteins famous quote refers to: I won’t go into massive detail explaining it, instead I’ll direct you to this brilliant video that introduced me to the technique which I highly recommend watching. To cut a long story short, there are 4 steps in the Feynman technique:1. Pick a topic you want to understand and start studying it. Write down everything you know about the topic on a notebook page, and add to that page every time you learn something new about it. 2. Pretend to teach your topic to a classroom. Make sure you’re able to explain the topic in simple terms. 3. Go back to the books when you get stuck. The gaps in your knowledge should be obvious. Revisit problem areas until you can explain the topic fully. 4. Simplify and use analogies. Repeat the process while simplifying your language and connecting facts with analogies to help strengthen your understanding. Taken from this blog article on the Feynman Technique. The 4 steps of the Feynman Technique in action Pick a topic you want to understand and start studying it. I’m currently studying at Makers Academy coding bootcamp in London, and this week we’re learning how to build a web application. I’ve been challenged to learn how H T T P and the web works and my main resource has been the first 60 minutes of this amazing H T T P lecture on the C S50's “ Introduction to Computer Science”, along with some web articles and other youtube videos. I spent about 2 hours learning in total. Pretend to teach your topic to a classroom. Here’s the video of my first attempt at explaining what I had learnt. It’s pretty terrible but it really helped me recognise the gaps in my knowledge, along with my inability to clearly define what I was trying to explain!3. Go back to the books when you get stuck. I went back to the drawing board. I went over the C S50 video again (the first hour) and stopped to write notes on the concepts being delivered and the connection between them. 4. Simplify and use analogies. I mainly focused on integrating everything that David was explaining into the analogy of the envelope and it travelling from the client to the server, which I felt created a really nice narrative for the whole process that helped me both remember the different steps and their relationships and explain it in a way that someone with no knowledge of the concepts would understand. Finally, after about 3 hours of the above steps (so 5ish hours total, including initial learning) I delivered a presentation to my girlfriend, who knows absolutely nothing about how the internet works! It went amazingly, I felt so confident in explaining the whole process and couldn’t believe how much I’d learnt. Unfortunately, I was recording through Quick Time and the video got screwed up, in fact it did this for 2 whole recordings! I switched to Apples Photo Booth to record this video below, which is just under a week after I first learnt the material. The material is exactly the same as the first presentation, so I guess it also gives an insight into how well the content stays in your mind! Okay, so there are definitely still gaps in my knowledge. I‘m not quite ready to take over from David teaching C S50, but I can barely believe how much my understanding of the concepts and process developed in the space of the 3 hours of using the technique (after the initial 2 hours of learning). I am flabbergasted at how effective the whole process was, I’ll definitely be using this as a technique to learn in the future.","['Education', 'Codingbootcamp', 'Coding', 'Learning To Code', 'Computer Science']",https://medium.com/@robertfaldo/how-i-used-the-feyman-technique-to-learn-how-the-web-works-in-5-hours-72a64ab373,0,[],0,2,rob,M,0.0,1.0
Monica Kosciuk,Full-Stack Developer // Lifelong Learner // Engineer // Climbing Enthusiast // Improviser,AutoRSpec – Monica Kosciuk – Medium,2017-07-23 06:13:32,medium,"Auto R Spec After typing the same shell commands into i Term over the course of the Unit Testing with R Spec section of Launch Academy’s Ignition Curriculum and after adding the same lines to the top of my Ruby files and . rspec file, I decided to automate all of this legwork. Meet Auto R Spec, my first of probably many fun (really it’s actually fun to automate something after you’ve written the same lines dozens of times) expeditions into shell scripting for U N I X. What does it do? Auto R Spec: Runs bundle init to create a Gemfile for the working directory Adds the pry and rspec gems to the created Gemfile Runs bundle to install the gems within Gemfile and update the Gemfile dependencies Runs rspec — init to initialize the R Spec Add — color to the . rspec file created when R Spec was initialized Asks the user for a file name to create the unit testing Ruby spec file and its counterpart Ruby file that will be tested. Given the name “filename”, creates the following files and folder structure: working_directory|-- lib|  '--- filename. rb'-- spec  |--- lib  |  '--- filename_spec. rb  '--- spec_helper. rb Updates the “filename_spec. rb” file to include require “spec_helper” Updates the “filename_spec. rb” file to include require_relative “. . /. . /lib/filename. rb” Here’s a before and after screenshot of what to expect when running the shell script “create_spec. sh”: Before Auto R Spec… After Auto R Spec! I’m sure as I learn more about shell commands, I’ll refactor this code to remove any unnecessary steps I find, but I feel really happy for now that I was able to think of a way to speed up a process, plan it out, and actually execute my plan to a successful outcome. Before attending Launch Academy, I rarely used a U N I X terminal, but was pretty familiar with using D C L for Open V M S, so this was a learning experience and will continue to be so as I write more scripts to automate steps that I think could be performed faster than me typing them in.","['Ruby', 'Rspec', 'Codingbootcamp', 'Shell Script', 'Command Line']",https://medium.com/@koscim/autorspec-46ec4d7051c4,0,['Launch Academy'],1,1,monica,F,0.9960501625340036,0.00394983746599644
Jacob Moore,,Day 12 — DOM and Loop Destruction – Jacob Moore – Medium,2017-08-01 13:10:55,medium,"Day 12 — D O M and Loop Destruction Struggles: I’m putting it right out front. I completely failed the daily assignment. It’s the first time I really failed and I knew I was failing and I accepted it. Our assignment was to build a form using only D O M manipulation. Why? Who knows. I could have built the form in H T M L in 10 minutes, and that’s only because I kind of forgot what each attributes were associated with each form type. The farthest I was able to get was to create an input and label for each section, assigned to parent node, applied a few attributes. The two items I could not get was assigning the correct input type and the selector. I guess I could have just created each element by themselves but that felt way too massive. I knew we needed to use a for loop. I guess I’ll find out soon how to really do it. Understood: At this point my brain is muddled. Hitting that wall of not getting it but barely getting some concepts. I have made some progress on my weekly assignment but still need to figure out how to print multiple items. Looking forward to: At this point, back-end. The front-end is killing me with D O M manipulation and C S S.","['Codingbootcamp', 'JavaScript', 'Amateur']",https://medium.com/@jacob.w.moore/day-11-dom-and-loop-destruction-4766d26bf017,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Modestas,,"General Assembly, Web Development Immersive — Week 6 Overview",2018-03-16 11:56:43,medium,"General Assembly, Web Development Immersive — Week 6 Overview A the second project week commenced, I became cognisant of how fast the course was actually going. It felt like I had just finished my first project and to be fair, that kind of was the case. For this project the task was to create a restful app that had at least two mongoose models, and user authentication that allowed a user to create an account login, and logout of a session. Coming Up with an Idea In contrast to the first project, coming up with an idea was surprisingly pretty straightforward. Infact I did it within a 5 minute session of sitting down and brainstorming different ideas in my mind. I guess this was because there was a lot less ambiguity than the first project in terms of what we were able to do. A website will pretty much behave the same way on a fundamental barebones level as opposed to a game with entirely different rules across the board. I knew that for this project, I wanted to create something fitness related and so my initial idea was to create an index of gym routines that users could upload and vote on. This however, was quickly changed when I began planning my webpage; because I couldn’t conceptualise how I would implement all of the many intricacies of a workout such as the reps, sets, rest periods for every single exercise. Consequently, I decided to go with something more manageable (yet equally as practical) — an app that allows users to upload a food and its macronutrients and then favourite any particular food on the index page. The purpose was to enable users to find foods that were inline with their fitness goals, whether it be to build muscle or lose weight etc. Initially, I was torn between naming my application ‘kitchen gains’ or ‘ Muscle Menu’ but realised it sounded too heavily geared towards hypertrophy rather than general fitness. As a result, I decided to settle with the name ‘ Super Foods’. Not that original, I know, but it’ll do. Planning At the beginning of the week, we set up our heroku links as a class in order to be able to deploy our webpage online when its finished. I was fortunate to be given a cool randomly generated U R L name of ‘ Cryptic Mountain’ which I think sounds epic, maybe abit too epic given the premise of my application, but I’m not complaining. Thereon we were given access to this pretty useful and easy to use wire framing software application call ‘ Balsamiq’ that allows you to create simple layouts for each of your webpages so that you can have a clear idea of what the structure of your webpages will look like. I knew wanted to make my website look clean simple and stylish. I took a mobile first approach and over the weekend began building the wireframes for my webpage. I also wrote down and planned all of the routes for my webpage and spent a day or so reading over the class notes again to re-familiarise myself with the core concepts of express, Nodejs, mongoose and authentication. To be entirely honest, im still not entirely confident in how they operate. Production During the week days leading up to Friday, I began to focus all of my attention on programming and building my website. I would say the most challenging part was implementing the authentication and the favouriting system of my webpage. In general, the C S S was pretty straightforward as I used bootstraps grid system to make my webpage responsive and S C S S to give it my own unique flair. If you’re interested in a great website for free H D images, I highly recommend Unsplash. I got this high quality snazzy looking Image of fruit which made my website look pretty legit. I still find it fascinating how a background image can totally transform the whole feel and essence of your website. Overall, I’m pretty happy with my project, of course inevitably I would have liked it to have some more features; most notably some kind of A P I and the ability to upvote and downvote comments, though there is only so much you can do in six days. I think my most substantial blunder throughout the whole process was forgetting to commit regularly. Infact, for the first few days I didn’t commit at all which kinda sucks but I guess in the next project It would be prudent to use some kind of reminder on my phone in an effort avoid making the same mistake. You can check out my website here and feel free to leave some constructive feedback. Much appreciated. Next week we will be learning angular which is pretty exciting because its the technology that seems to be really prominent in the development world as of today. Lets see what all the hype is about.","['Web Development', 'Codingbootcamp', 'Coding', 'Programming', 'Tech']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-6-overview-a2d8245b7457,1,['General Assembly'],1,2,modestas,Unknown,Unknown,Unknown
Hindsight Technology Solutions,A tool to allow publications to better monetize aged content. History within reach.,Hiring Technical Employees as a Non-Technical Founder,2018-03-20 17:01:35,medium,"Hiring Technical Employees as a Non- Technical Founder About a year ago, I decided I wanted to build a software product to improve research across the web. It was a problem that persisted in my financial career. Yes, my financial career. I wanted to build a software product with no software development expertise. A tall order. But possible. I want to share with others in a similar position the steps I took and the resources I used to assemble a technical team that could breath life to my idea. 1. Learn the Basics of Coding The one thing every software developer despises is being managed by an individual that knows N O T H I N G about coding. If you don’t know what it takes to develop software, how will you be able to effectively manage a technical team. Therefore, if you are a startup-founder that is building a software product and do not have a technical co-founder on board, learn how to code! It will enable you to better direct your technical team, understand what is required from your technical team, and outline reasonable expectations. And even sometimes (more often than you think), get your hands dirty and develop some features for your product. There are a few ways to efficiently learn how to code. The time you spend and resources you utilize depends on how much you want to learn. I went through Flatiron School, a four month full-time software development program, that taught me not only the basics of coding but gave me the skills to develop programs myself. However, it is a time and capital investment ($15, 000 for the immersive four month program). Flatiron School also offers a much more flexible and cheaper online program which costs $1, 500 a month. There are also other bootcamps ( General Assembly, Full Stack Academy, Hack Reactor), so check them out and see which one is the best fit for you. Finally, take advantage of online resources such as Code Academy and Udemy, but I recommend in-person programs as the best bang for your buck (blog post on Development Bootcamps forthcoming). 2. Hire the Right Team Around You You may be asking, I spent so much time learning how to code, why do I still need to hire software developers? Even though, you may be riding high on the confidence of deploying your first full stack application, it take Y E A R S of experience to be able to effectively deploy production ready software for your market. Plus who will take care of business development, financials, human resources, marketing, etc. Therefore, I highly suggest you bring on a technical co-founder or a technical team to lead the technical development of your product. As Hindsight depends on machine learning and data science algorithms, I needed a data scientist and a software developer to execute my vision. There were two options: (i) hire one individual that can do both or (ii) hire an individual for each role. I looked into both options but ended up hiring an individual for each role. Here are the resources I used. Your Network: Maximize on your network. Sourcing from within your network ensures that you are vetting individuals that you personally can vouch for or someone you trust can vouch for. Start here! Angel List: Angel List is an online social platform for startups so it naturally is the best online platform to find your technical employees. All candidates on Angel List are open to startup opportunities B U T not all are open to cofounder roles or early stage startup roles. Thankfully, candidates explicitly state what roles they are open to so that discovery is done for you. You will generate the most meaningful discussions with the highest volume of candidates using Angel List but the quality of talent varies. Regardless, this a must use online hiring platform for early stage technical positions. Vettery: Vettery is an online hiring platform specifically for technical candidates. Vettery hands down has the highest quality talent on the web as it has a strong vetting process for all candidates listed on the website. However, most candidates are looking for senior development roles and are expensive hires. Moreover, Vettery takes a cut of the first year cash salary so that is an additional cost you need to account for. Bottom line is that Vettery has the best talent but it comes with a price. For a startup founder, it is worth checking out Vettery if you can afford it. Meetups: There are many Meetups ( Crowded Tech Job Meetup) organized to connect software developers with employers. However, most of the candidates here are not looking for startup positions or are junior developers fresh out of bootcamps who do not have the experience to execute in an early stage startup. Check some out but do not expect much. Conclusion As a non-technical founder, assembling a technical team is a daunting and crucial task for any software startup. However, it is not impossible. I believe it is important for non-technical founders to know the fundamentals of coding not only so that they can manage a technical team but also better understand their product. Once a technical founder has a base line skillsets to understand software development and the requirements needed to develop the product, he can then use his network or online/in-person resources to find the right technical talent to join the team. Just because you do not know code does not mean you cannot successfully start a software company. It is just one of the many problems you will solve your in your path to success. Good luck!","['Startup', 'Founders', 'Software Development', 'Hiring', 'Codingbootcamp']",https://medium.com/@hindsighttechnologysolutions/hiring-technical-employees-as-a-non-technical-founder-c72fbeb488c6,0,"['Flatiron School', 'General Assembly', 'Hack Reactor']",3,20,hindsight,Unknown,Unknown,Unknown
Devugees - Digital Career Institute,devugees.org - coding school for newcomers.,CSS: Positioning elements – Devugees - Digital Career Institute – Medium,2018-08-08 18:32:53,medium,"C S S: Positioning elements Written by Edalí Cárdenas / Fellow at D C I Positioning elements might be one of the most tricky properties while working with C S S. To master your C S S skills, I highly recommend to try out manipulating the location of the elements in your document. Keep reading here to find out what are the different values for positioning using C S S. Syntax When you are willing to arrange the position of an element, you can select from different types: static, relative, absolute, fixed, sticky… When the position is other than static you will have to specify with the properties top and bottom the vertical offset, and with left and right the horizontal offset from its normal position. Here you can see an example: Static: The element is positioned following the normal flow of the document. Since this is the default value, the top, right, bottom, left properties are not applied here. Relative: The position of the element goes with the normal flow of the document, and then offset relative to itself based on the properties of top, right, bottom, and left. Since the offset does not affect the position of any other elements, the space given for the element is reserved the same as if position were static. Absolute: This value takes the element out the normal document flow, which means that no space is created for the element in the page layout. The position is set up according to the values of top, right, bottom, and left. This value can have margins, and they do not collapse with any other margins. Fixed: Similar to the absolute position, the element is out from the normal document flow and no space is reserved for the element in the page layout. The difference is that fixed position is rather relative to the screen’s viewport and doesn’t move when you scroll. The position is determined by the values of top, right, bottom, and left. This value always creates a new stacking context. When there is an ancestor with properties such as transform, perspective, or filter set to something other than none, that ancestor is used as the container instead of the viewport (see C S S Transforms Spec in M D N). Sticky: The position of the element goes along with the normal flow of the document, and then offset relative to its flow root and containing block, based on the values of top, right, bottom, and left. The offset does not affect the position of any other elements. This value will not work inside element with overflow: hidden or auto. Tip: Read also about floats, this will also require you to get some practice before you master it!","['CSS', 'Codingbootcamp', 'Coding', 'Berlin', 'Web Development']",https://medium.com/@devugees/css-positioning-elements-ab74d5ff781d,0,[],0,0,devugees,Unknown,Unknown,Unknown
Jeremy Lenz,,Pair programming: A few observations. – Jeremy Lenz – Medium,2017-07-28 01:23:41,medium,"Pair programming: A few observations. As I write this, we’re at the midpoint of our time at Flatiron School. Seven and a half weeks complete, seven and a half weeks to go. Hard to believe we’ve come this far! Over the course of my several weeks here, I’ve had the opportunity to do pair programming (also programming in groups of three) quite a bit. People seem to have plenty of opinions about it. I didn’t think I was going to like it at first, but after trying it out I’m pretty much sold. In case you’re unfamiliar, the basic idea of pair programming is this: One laptop, two people. The person doing the typing is called the ‘driver. ’ The person watching is a kind of supervisor or ‘director. ’ The ‘director’ thinks mostly about the ‘big picture, ’ telling the driver what to do. The driver actually writes the code and thinks more about the small details such as syntax, etc. Ideally, you switch roles after a while so that everyone spends equal time in the driver’s seat. So, after several weeks of this, I thought I would offer some observations, based only on my experience so far at Flatiron. What does pair programming do?1. It gives you super powers. In my experience, pair programming is G R E A T for catching the little things. When there are two pairs of eyes on the code instead of one, stuff like typos and syntax errors are caught almost instantly. Even more often, you prevent the error from being made in the first place. Every time this happens, you may be saving yourself several minutes to an hour of debugging later. If you think of it that way, pair programming saves a ton of time! Super power #2: You think of solutions you never would have thought of otherwise. You may have a habit of doing something one particular way, while your partner may have a completely different habit. You may realize that your partner’s habit is way more elegant and appropriate than yours, and end up with something new to add to your own bag of tricks. ( Als0, you may learn a new keyboard shortcut!! Keyboard shortcuts are the best. ) Super power #3: When it’s 4:32 pm and you’re mentally exhausted and distracted and you can’t think, pair programming can be a lifesaver. Your insurmountable problem may be a simple solution for your partner, who just solved a similar problem the other day. Also, mental tiredness can slow you down quite a bit, and having a partner will make things that much easier. 2. To learn the most, work with people just a little better than you. From my previous years of experience playing jazz piano, I had the opportunity to play in lots of different music groups with different people, and this is something I noticed. If you perceive that your group-mates are W A Y better than you, you may feel like a burden, or feel overwhelmed. ( Not that you should. ) Conversely, if you perceive that your partners are much L E S S experienced than you, you may feel a bit bored, or even annoyed. And then there’s the ‘ Goldilocks’ of ability levels, when you are all very close in ability but you feel like your partners are just a little better than you. If you’re lucky enough to have that experience, it feels like you’re just barely hanging on, but you A R E hanging on. And learning a ton. Even better, if your ability levels are ‘ Goldilocks-matched’ and you have a great, respectful relationship with your partners, you may even come across a sort of M. C. Escher-style “cycle of respect” where E A C H member of the group feels the same about the others! This is barely even an analogy. I think it’s safe to say that all of the above can apply directly to pair programming in addition to music. 3. It gives you an opportunity to get better at S O M E T H I N G, no matter where you are on the ability spectrum. If you’re the less experienced partner, you will get better by driving. That goes without saying. But what if you’re the more experienced person? What if you know all the required concepts and could easily finish coding this by yourself? You S T I L L have plenty you can learn by teaching your partner, and making sure they understand. Even if you don’t think you have any gaps in understanding, teaching someone is a great way to find out for sure! It can also be an exercise in patience, speaking clearly, and grokking where the other person’s understanding gaps are. All of these are great skills to learn, even if you already know all the code! So either way, you’re going to get better — at doing, teaching, or both. Oh, and be nice! Everything works better when people are nice.","['Programming', 'Pair Programming', 'Flatiron School', 'Coding', 'Codingbootcamp']",https://medium.com/@jeremylenz/pair-programming-a-few-observations-d17c02628d6b,0,['Flatiron School'],1,4,jeremy,M,0.005284581711728015,0.994715418288272
Yasin Shuman,Blockchain Engineer with a passion for learning and sharing knowledge with others.,Lambda School Week 3 – Yasin Shuman’s Blog – Medium,2017-12-04 01:52:24,medium,"Lambda School Week 3 The third of a weekly series documenting my experiences at Lambda School. We had an off week between week 2 and this week. Making this the end of the first month at Lambda School! One month down five more to go! This week was less intense than week 2. We learned about manipulating the D O M and using vanilla Java Script without frameworks. At the beginning of the week, we were given an assignment to create a portfolio page from scratch. We were also given the option of using bootstrap or another C S S framework to better style our elements. I opted to do this, but regretted it later. Why regret it? Simple, I didn’t benefit or learn anything. I had made sites with bootstrap before. For this assignment, I made an amazing site using bootstrap but hadn’t gained any knowledge. I came to realize that I shouldn’t have used bootstrap and ended up going back and redoing key parts in vanilla Java Script and plain old H T M L/ C S S. The reason I say that I wish I had done it from scratch is because I noticed I was being lazy and not learning how to really manipulate the D O M. I had lost focus of what was important. The goal isn’t just to complete the assignment, the goal is to understand how to get the work done so you can apply those skills to other more difficult projects. I have never been good at front end work. It’s part of the reason I always feel unsure of my skills. It’s also a major reason I enrolled in Lambda School. To be competitive in the industry you have to be able to handle whatever your team and project require. Transforming you into a full stack developer is the primary goal at Lambda. When I realized that I was being lazy about doing the work from scratch I tackled some of the tasks to sharpen my skills. At first, I was a little lost. I have never created anything without at least using j Query, so using just vanilla Java Script and H T M L/ C S S was a little intimidating. It’s crucial you surround yourself with people you can learn with and from. What saved me and helped me to master the challenge was the help of my fellow students. I reached out to Moises and Michael, two of my cs5 classmates, who seemed to have a good grasp of the assignment. Moises, spent over an hour with me helping me understand how all the pieces fit together. We began with blank files and built from the ground up. It was magical! The next day, Michael and I went over how to put into practice the class List functions we required for our assignment. Without these guys and my other classmates, I would be completely lost. Lesson Learned: Don’t take shortcuts and, if necessary, ask for help. What We Covered in the Third Week I’m not going to give a break down of every days activities unless someone really wants to know. In which case, hit me up, I’ll be happy to chat. I will, however, provide a list of topics covered each week. Here’s this weeks topic list: D O M D O M Chrome Dev Tools File Structure H T M L Elements :<script>, <ul>, <li>, <p>, <a>, href, <img>, src, <ol>, <link>, rel, <div>, <head>, <html>, <body>, <title> Java Script D O M interaction Document:get Element By I D, get Elements By Class Name, event Listeners Brown Bag Presentation This week I gave a presentation to my cohort introducing them to smart contracts and the fundamentals of how the Blockchain works. If you want to check it out you can right here: If you’d like to check out the slides you can access them here: Smart Contracts - Yasin Shuman Smart Contracts An introduction November 2017 Yasin Shumandocs. google. com Questions & Answers This past week there were several people who reached out to me with interest in Lambda School. They all had the same concerns mainly around expenses and bills while attending full time. It is very hard to take 6 months off work and dedicate it to studying. It isn’t easy, many people don’t think they can. They assume everyone attending is financially set and can afford the time off. This couldnt be farther from the truth. The reality is that most people attending Lambda School either work or have a significant other or family helping them with bills until they finish and are able to get employed as a developer. If you cut down on all your bills, if you have the option to move in with family do it, do anything you can to finish this program. Remember, that once you’re done, you will find work which will enable you to repay any loans you may have had to take. If you don’t think you can make it a six months without full time work you should consider Lambda School’s upcoming part time program. This program has you attend evenings Monday through Friday for 12 months. You’ll basically be studying the same curriculum but spread over a year instead of 6 months. I wrote this post in a bit of a hurry so I hope I didn’t miss anything. As always, if you have any questions about Lambda School, my experience there or any of the topics I cover please reach out to me. I love to help.","['Web Development', 'Lambdaschool', 'Codingbootcamp', 'Vanillajs']",https://medium.com/yasin-shumans-blog/lambda-school-week-3-e76a859407f8,1,[],0,36,yasin,M,0.0027609055770292656,0.9972390944229708
Maggie Caspar,"Exploring the intersection between tech, empathy, psychology, and design.",How to break into the tech industry in three months,2018-09-09 21:10:47,medium,"How I changed my career path from a dead end to having endless opportunities My own photo I was unemployed with a sparkling new degree in an industry that provided little opportunity. Although joining the masses of millennials with art degrees serving as baristas at Starbucks did cross my mind, my drive for learning, freedom, and exploration refused to let me settle for anything less than a career with endless growth opportunities. I had my heart set on the tech industry. Now, nearly 4 years later, I still receive messages across all your favourite communication tools asking how I made the career change to programming. Since my momentary thoughts of becoming a barista, I’ve worked as a front-end developer for small and large local startups, a large entertainment enterprise, and remotely from Thailand for up-and-coming startups in Dublin and the U S. I also had the opportunity to contract as a U X designer for many exciting companies, and now work as a Product Manager at an early-stage startup in Vancouver. So here are the steps of my initial career change to web development. Keep in mind that I did not have a degree in computer science, no prior coding experience, and that there are many different ways to take this journey. Immerse yourself in a full-time bootcamp With zero prior programming knowledge, I learned to code by attending an 8 week (now 10 week) immersive coding bootcamp in Vancouver called Lighthouse Labs. Lighthouse Labs provided the intense career change I wanted. It was 8 intense weeks of learning how to code, making connections, and being immersed in the tech and startup community. A perfect place to get started. They have a 7 to 1 teacher assistant ratio, which means you’re never alone. I made some amazing connections with T As that inspired me and helped me learn the material and push through the program. You do have to be 150% committed. Whether you have a coding background or not, the program with provide you with everything you need to start your progress toward a career as a developer. The catch is that you have to do all the work. Immersive means checking out of life for 8 weeks and dedicating every day, the entire day, to learning. It’s safe to say when you graduate from the program, you will have built multiple web applications and will be able to start an internship as a junior web developer. Lighthouse Labs runs multiple hiring and networking events for its students, during which many tech startups and other companies come to scope out and hire new talent. I was hired as a junior developer intern right out of the program. In fact, I made such strong connections during this event and my internship that I still work with my former boss now, despite both of us having left the initial company. Additionally, not only did Lighthouse Labs connect me with a job opportunity, they also contracted me to build the front-end of their website. Commit to self-teaching and exploration For those who don’t have the time, money, or resources to commit to a coding bootcamp, or for those who aren’t yet sure if they want to, there are many other resources out there. Part-time programs Lighthouse Labs also offers an introductory web development course that takes place two nights per week. During this program you will also learn how to build a web application. It’s a great program to test the waters before committing to the bootcamp. Alternatively, try taking a course with Ladies Learning code (men are welcome too :)). To kick off your introduction take a course on H T M L & C S S and move on to an introductory course to Javascript or Ruby. The benefit of taking local courses is that you meet others in the community that are on the same path as you. If you’re looking to become a developer, making connections will be key. Online schools Free online code schools such as Codeacademy or Code School provide lessons to start off your introduction to code. Lighthouse Labs has also started offering free online courses. Team Tree House is also great online source to learn from if you like videos, but it does have a monthly fee. I personally enjoyed the diversity and quality of learning materials provided. Subscribe to weekly emails for what you’re interested in learning. For example, Zell Liew, Web Tools Weekly, C S S Weekly, [insert your favourite language] Weekly ;). Make connections in the community Immerse yourself in the tech industry! Go to meetups (e. g. Code & Coffee, Tech Talent, Hacker Nest) go to Lighthouse Labs demo days, and meet people who can mentor you, ask them where they learned how to code and if they have advice for you. Practice, practice, practice Make sure to practice your newfound skills. Build more and more and more. The best thing about coding is that you can learn so much in a day that you can outdate your prior day’s work in 12 hours. For example, if you build an online resume, rebuild it the following day or week and apply all the new things you’ve learned. Practice making your code cleaner and more maintainable. Use text editors like Sublime to code and practice using the command line. Some say being a developer is all about being lazy, and while some of them are lazy, being a developer is actually about being efficient. It’s about saving your time by automating tasks, creating shortcuts, writing clean, sustainable code, and taking full advantage of your tools. Show off your hard work Once you’ve gained all the skills, put them online. Showing people what you’ve done and what you’re capable of building will be the key to getting you a job as a junior developer. Create a github account and learn how to push your code to your profile. If you need more examples of work you’ve done, follow some tutorials and build on them. Make sure you have a polished Linked In profile, and check out other sites like Angel. co where countless startups are looking to hire. Summary To wrap up your question of how to become a developer: go learn, either by yourself or by bootcamp. Embrace self teaching, motivating yourself by sharing your work, connecting with the community, and keeping a mindset for constant growth. Best of luck!","['Web Development', 'Career Change', 'Codingbootcamp', 'Career Paths', 'Learning To Code']",https://medium.com/@maggie_10173/how-to-break-into-the-tech-industry-in-three-months-ce23a49c1a44,4,['Lighthouse Labs'],1,0,maggie,F,0.997541283763754,0.002458716236246011
Kingsland - School of Blockchain,The world's first accredited school for blockchain development - Learn more at www.kingslanduniversity.com,Bootcamp Bust: Why Coding Camps Fail – Kingsland - School of Blockchain – Medium,2018-03-07 07:28:46,medium,"Bootcamp Bust: Why Coding Camps Fail Author: Jason King As blockchain-driven projects becomes more and more popular and the going rates for experienced blockchain engineers experienced rise, there’s a new group of businesses hoping to tap into the hot cryptocurrency market: coding schools and “bootcamps. ” These almost entirely privately run businesses are springing up around the world with the promise of training developers for the lucrative blockchain market. Invest anywhere from a weekend to a few months’ intense study, pony up somewhere between $500 and $5000, and you, too, can cash in on the blockchain boom. These courses promise to help you “master” cryptotechnology concepts such as blockchain networks, bitcoin mining & security, and multichain, and “have a deep insight into But what remains to be seen is whether coding camps are the answers to the skill gap. While they intend to solve the supply problem, they bring their own issues. Just a few of the potential problems associated with coding camps: There’s no standardization. Mark Dinan, a Silicon Valley recruiter, has called bootcamps “a freaking joke. ” Because each school creates its own curriculum, you can’t compare what one coder learns in a six-week bootcamp to what’s offered in a crash weekend course. This makes it difficult for a hiring manager to determine if any particular bootcamp or course has taught the skills needed for the project they’re hiring for. They often teach the wrong things, or don’t go deep enough. While it’s great to get an overview of cryptocurrency and “understand the basics of blockchain, ” that’s not going to help an engineer take on a multi-million dollar, mission-critical project with potentially global impact. Maggie Johnson, Google’s director of education and university relations, released a statement saying “… Most graduates from these programs are not quite prepared for software engineering roles at Google without additional training or previous programming roles in the industry. ” The instructors aren’t usually experienced teachers. They may be able to code, but they don’t necessarily know how to teach. Basel Farag, a Tech Beacon contributor and i O S developer with experience as a bootcamp mentor, admits that finding good teachers is hard, and that many programs fill positions with less-experienced developers. As a result, blockchain coding boot camps are both “buyer beware” and “hirer beware. ” Students can’t be certain they’ll develop the skills they need to be successful in the workplace. Likewise, organizations can’t be sure they’ll get the skills they need for their cutting-edge blockchain projects. While some traditional universities, such as Stanford, M I T, and the University of Edinburgh in Scotland are rolling out cryptotechnology classes, these aren’t developer-specific training programs. There’s a huge need to address the skills shortage now, and that’s where Kingsland University — School of Blockchain comes in. Kingsland University — School of Blockchain is the first and only accredited blockchain training program in the world. Kingsland University centralizes both the education and recruitment of blockchain and other coding professionals. With nearly a decade of experience delivering high-quality, award-winning programs, Kingsland is poised to transform the blockchain training sector by providing much needed standardization, experienced teachers and an industry-driven curriculum that’s been designed and developed by world-leading blockchain engineers. *** Jason King is a Humanitarian Hacker, feeding the hungry as the Executive Director of Unsung. org. Known for running across the country to raise bitcoin for the homeless in 2014, King is a long-standing member of the crypto community and continues to solve to the sector’s most pressing problems as Co- Founder of Kingsland University — School of Blockchain, the world’s first university-accredited blockchain training program. Find out more about Kingsland’s leading-edge education at Kingsland University. com","['Blockchain', 'Developer Shortage', 'Coding Bootcamp', 'Kingsland']",https://medium.com/@kingsland/bootcamp-bust-why-coding-camps-fail-f6697fef1f0f,3,[],0,52,kingsland,Unknown,Unknown,Unknown
Steven Dewey,Programmer. Founder. Consultant. Most excited about being a Dad and learning new things.,Student Spotlight Saturday: – World Tech Academy – Medium,2016-09-03 23:46:54,medium,"Student Spotlight Saturday: Snake Game — Kevin Le Starge Why Student Spotlight? Iintroduced the concept of the Student Spotlight in the first post of the series, Chess: by Connor Dodge. I hope you enjoy the behind the scenes look into World Tech Academy and the student projects. “ I heard about W T A through my good friend, Steven Dewey, who happens to be one of the co-founders. I was going through college at the time, taking Information Systems classes through B Y U’s Marriott School of Management. I was frustrated because I felt like the I S program did not offer enough coding classes to equip me with the skills to become a web developer. Steven encouraged me to take the full-stack web development class at W T A, and I decided to give it a try. I’m glad I did! It started me in the right direction towards a career in web development. ” Kevin Le Starge I caught up with Kevin and spoke with him about his experience at W T A, along with one of his favorite projects. Kevin grew up in Herriman, Utah, and loves everything about the outdoors. He is an avid mountain biker, skateboarder, and runner. Coding came on the scene in Kevin’s life a little later on. While taking required business courses at B Y U he realized that coding was more fun than expected. Kevin joined W T A in June of 2015 as a current Information Systems student at B Y U. Kevin had a good foundation for programatic thinking, but had no real experience doing web development. Once he got in our W T A class he exploded into web development. His portfolio is extremely impressive. It is common for all W T A student projects to have the same look and feel. This is not a bad thing as all the students are following the same rubric. However, in all of Kevin’s project he found some way for his personality to shine through. A really good example of this is the hybrid vs normal car calculator. Kevin took it from a simple calculator project to a full blown mortal combat game. Check it out here: http://kevinlestarge. info/web/wta/hybridvsnormalcar/ Old school snake game Snake Game If you have ever owned an old cell phone, you know how much fun the pre-loaded snake game was. Remember when the snake would get so big you would run into it’s tail? Students at W T A recreate the snake game and is not as easy as you might think. These are some of the project requirements: The snake needs to respond to the key presses of the up, down, left, and right arrows on the keyboard. If the snake runs into itself or a wall, the game should be terminated. A pixel representing snake food should be randomly displayed on the canvas at the beginning of each game and after each pixel is consumed. After consuming a pixel of food the snake should grow by one square. The level should increment after the snake consumes two pixels of food. Each time the level increments, the speed should increase. The current level should be displayed at all times. Keep track of the high scores and display them next to the canvas. Consider having the colors change on the canvas at each level change. Last week I featured Brandon Olson’s snake game. Because Brandon is a current W T A student, his snake game is not finished yet. This is not the case with Kevin’s snake game. His is polished and pretty. See how many levels you can beat. Leave your personal high score in the comments below. Here is the link to Kevin’s snake game: http://kevinlestarge. info/web/wta/snake/ I asked Kevin some questions about his experience building the snake game. His responses were awesome. Thoughts about the project overall? I love how I feel after finishing a project. But, I definitely notice some obvious improvements to be made in the C S S, like the title of the game not being centered, or the High Score not aligning with the canvas. But overall, I’m pretty happy with it :) How would you rate this project on enjoyment 1–10?9 What aspects of the project did you enjoy? I loved the creative aspect of creating a game. I went above and beyond the project requirements to make the game customized to my liking in both the design and the game dynamics. I’m proud of the speed settings I set that gradually become faster and faster when you move up a level. What new concepts did you learn while you worked on the project? How to create a game on the H T M L5 canvas, and more object-oriented programing skills. What were some of the most challenging parts of the project? I really enjoyed the Snake project. It gave me a lot more respect for game developers. Something that I thought would be straight-forward to build, with easy logic and game rules, ended up taking me much more time than expected. The logic was surprisingly complex, and using the new H T M L5 canvas element was new to me, so I had to start from the ground up. But it was fun! And I learned some coding best practices along the way, like making small functions that have one purpose so you can reuse them in your application. Did you get stuck on one part forever? I can’t remember which part I had the most difficulty on, but learning how to paint to the canvas was tricky. Lots of googling and hints from the instructors helped me out. How would you rate this project on difficulty 1–10?7 If you could go back and redo/refactor anything what would you do? I would just add to the game. Maybe add different rules, add some bad guys that the snake has to avoid, etc. I love being creative. What advice would you give to someone just starting the project? Don’t get overwhelmed. If you’re a newb in the world of coding, it may take you a while to finish this project. Just take it step by step. Lots of small steps in the right direction will have you complete the project in no time. Kevin keeps all his code for his snake game on his Github profile, so feel free to check it out. If you have any questions about how Kevin built his version of snake game, feel free to reach out to him by clicking on this link: Linked In, or leave comments below. Happy Coding. Steven Dewey P. S. As always if you happen to be in the neighborhood on a Tuesday or Thursday from 6–9pm, feel free to stop by and see us in person! Visitors are always welcome!","['Programming', 'Web Development', 'Coding', 'Codingbootcamp']",https://medium.com/world-tech-academy/student-spotlight-saturday-82dce17dbd8b,1,[],0,1,steven,M,0.003475008347024529,0.9965249916529755
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,W3Develops Cohorts Handbook – W3Develops – Medium,2018-10-03 01:13:37,medium,"W3 Develops Cohorts Handbook T A B L E O F C O N T E N T S How to Use This Book……………………………. …………………………viii This handbook has all the information you need pertaining to our W3 Develops Cohorts ( Build to Learn) projects. Useful info such as schedules, required skills, resources, and more. You will notice W3 Develops Cohorts may seem dynamic if you just jumped in without knowing a few things. When used properly, this community will help you launch yourself to the next level. Reading this handbook is your first step towards getting the most from the Cohort during your time here and contains vital information you must know in order to be a functioning member of the community. Each underlined section is a link to that chapter. Preface — What is a W3 Develops “ Cohort”?…………………………. ………………………6 min read What is a W3 Develops “cohort”? What can I expect? What to do if things do not work? Chapter 1 — Team Projects Lineup……. . ……. …7 min read The projects for your team to pick from, or ideas to create your own unique project Chapter 2 — Schedule………. …. ……3 min read Everything you need to know about the Cohort’s schedule Chapter 3 — Essential Skills, Resources, and How to Prepare For the Cohort…………. ……………………………. …. 4 min read How to get prepared before the Cohort begins Useful skills to learn Valuable learning resources Chapter 4 — Standards & Builder’s Pledge……. . ……. …2 min read Standards you must agree to and abide by if you wish to join the Cohort Submit this Builder’s Pledge so we know you read the handbook and are ready to join a team, agree on a project to create, and finish it. Chapter 5 — Finished Projects & Other Cohorts Comments……. . ……. …12 min read Finished projects Comments from past/current members Chapter 6 — F A Q ………………………………………. . ……… 7 min read This will be my first time using slack, how should I prepare? How does W3 Develops exist if it’s free? How long does a cohort last? Is there a set schedule? What is W3 Develops Discord channel? What tools does W3 Develops use?etc.","['Web Development', 'Pair Programming', 'Freecodecamp', 'Codingbootcamp', 'W3develops']",https://medium.com/w3develops/w3develops-cohorts-handbook-b25ed1fd7685,0,[],0,20,jonathan,M,0.0042130252697924414,0.9957869747302076
King Nimmo,We are Vanessa Nimmo and Celia King. We are making a change from a life in Latin (King) and Music (Nimmo) to a life in coding.,Transition into Tech – King Nimmo – Medium,2018-08-25 23:58:58,medium,"Transition into Tech Weekend napping after the first week. I started a new learning experience this week. A coding fast track bootcamp. The first thing to say about it is that it has been amazing. It’s exactly what I need — 7 hours a day of dedicated study time, lectures, tutors, and a bunch of lovely fellow students to nerd out about code with. I’ve also not had such a regimented schedule since high school, having worked for myself for so long, so it has been a bit of an adjustment. Most noticeably, my body clock has the idea that we have to get up early, but isn’t quite sure how early, so this week it has woken me up at 6am, 5. 30am, 5am, 4. 30am, 3. 30am and 1. 38am — sometimes more than once in a night. It wasn’t till Saturday that it hit close to my actual alarm time. Excitingly, the start of the course has shown that I have learnt quite a bit about code in the past year of slowly and painstakingly chipping away at it. I had been feeling like I didn’t know anything, but it turns out I’ve made myself a nice little platform of knowledge to launch off into more complicated stuff. I’m finding that the material so far has been some that I know but also some that is filling in the gaps from what I’ve been teaching myself or picked up at various workshops, Meet Ups and conferences. It’s also been really lovely to be able to help others. I feel like I’m starting to pay back the tremendous debt I’ve already accrued in tech help in just one year. During class the instructor does a lot of coding on a projector. On Wednesday afternoon they asked for people to come up and code in front of the class. Someone else went, and did great, then they asked for a second volunteer. With great trepidation, and with the encouragement of the people nearby who I’d helped that afternoon, I volunteered. The coding itself was fine. It was only about 8 lines of code and it ran fine, which I expected as it was an exercise we had just done and mine had run fine. What I wasn’t expecting was the emotional aftermath. So many feelings! A bit of adrenaline from coding while everyone is watching your screen, a bit of relief from it all actually working, and a huge dose of shifting identity from successfully coding in front of people. I’ve seen live coding demos and been impressed, and now I’m even more impressed! Could it be that I’m inching towards being a realio trulio computer geek? A week or two ago, before I started the bootcamp, I wrote about what I was excited about and the fears I had going into the transition out of music teaching and into tech. It has been interesting looking back, as now I’m in a position to know how they turned out. What I was looking forward to: Not working on Saturdays Had my first Saturday sleep-in yesterday and went to the Melbourne Writers Festival. It was pretty amazing. Looking forward to more of them! Learning! Learning new skills always feels good. As predicted, it has been hugely rewarding. Making new friends The bootcamp gave us a kick-start on this by providing drinks on Monday and Friday afternoon and putting aside a big chunk of Monday for getting-to-know-you games. I’m excited to work with everyone on the course, and excited that we will become each other’s posse. Doing good work (eventually) I’ve written so much code in such a small amount of time this week, and the quality is improving with every single program. Having a pathway and a guide It doesn’t get much better than having four teachers in the room who are checking in on the class and setting problems suited to what we’ve learnt each day. It definitely beats the pants off trying to write something when you don’t even know if it’s possible in the language you are using. What I was afraid of: Missing the kids I teach I totally do. My last few days of theory teaching were pretty devastating. I still get to drop in on them a little each week for a while, so they will experience me slowly fading out of their life rather than dropping out, but for me it’s best not to talk about them. Not handing over my current job well Not a chance. The new teachers were very thoroughly briefed and the change has been smooth. Hitting a learning ceiling beyond which I can’t get any better This one was mostly alleviated by the excellent words of the mentors and guides at the orientation morning, and also by re-reading Carol Dweck’s “ Growth Mindset”. The fear has faded in all the excitement of what I’ve learnt in just the first week. Not making enough time for study and therefore not learning properly Given that our study hours are 9–5 each day and there is an attendance requirement for the course, I actually can’t do anything B U T study all day every day. Such a regimented course is an incredible gift, and I’m still pinching myself that I was lucky enough to get it. Nimmo of King Nimmo","['Coding', 'Learning To Code', 'Codingbootcamp', 'Career Change']",https://medium.com/@nimmoking/transition-into-tech-2990d3b403fb,0,[],0,61,king,M,0.000972927241962775,0.9990270727580373
Operation Code,"Operation Code helps America's military, citizen-soldiers, veterans & military families #learntocode and build software to change the world. #operationcode",Operation Code provides career opportunities for military veterans,2016-07-02 02:24:22,medium,"Operation Code provides career opportunities for military veteransby Susy Raybon Veterans have been suffering from high unemployment rates for years, but the strategies designed to employee these veterans haven’t changed. The most current numbers were released to media sources in late 2014. Force reduction has hit all branches of the military. The Army alone has plans to reduce its numbers by 200, 000 Soldiers, which, no doubt, will lead to increased unemployment for veterans. There are hundreds of thousands of tech jobs in the United States that are currently going unfilled; at the same time, hundreds of thousands of veterans are looking for new careers. The good news for veterans is landing one of these high paying jobs doesn’t require a computer science degree. “ Coding boot camps” or “code schools” have opened up across the country. Their strategy is to immerse students with little to no computer coding experience with intense coding skills in 9 to 12 week courses. By the end of the course the students have the skills to enter the tech scene as junior web developers or computer programmers. The best part is that, at the end of the course, the students are getting hired, with good salaries. Tech companies are poised to hire more of these highly trained students. Veterans are the perfect match. “ Coding boot camps” cost a fraction of a four year degree for which veterans can use their G. I. Bill benefits. However, the cost is around $12, 000, placing them financially out of reach for most veterans. The G. I. Bill has not kept up with the explosive success of code schools and currently does not cover the expense of attending one. Operation Code is a grassroots, 501( C)(3) non-profit organization started by Army Veteran, Captain David Molina. Operation Code is on a mission to help transition veterans and separating military members to a software career through a network of already established partnerships. Veterans who sign up on Operation Code. org are automatically eligible to receive a code school scholarship and mentorship sessions with experienced software developers. Both U S News and C N N Money have recently placed software developers and web developers among the top 25 careers in America. Software developers invent the technologies that most take for granted every day; like phone apps and ring tones. Veterans agree it is time for the G. I. Bill to keep pace. For more information, visit Operation Code. org, or follow on Twitter at: https://twitter. com/operation_code. This story was originally published on the National Military Examiner. Please email me at susyraybon@bellsouth. net if you find errors with content information or spelling. Thanks for reading and thanks for supporting the troops. Follow along on Twitter @ Examiner Susy.","['Veterans', 'Military', 'Coding', 'Coding Bootcamps', 'News']",https://medium.com/operation-code/operation-code-provides-career-opportunities-for-military-veterans-da30e87c9df4,2,[],0,3,operation,Unknown,Unknown,Unknown
phavor sparks,Building solutions through software and technology,Improve your git / github experience – LearnFactory Nigeria – Medium,2018-05-05 12:31:09,medium,"Improve your git / github experience The command line is the terror of so many developers, especially the beginner level and intermediate level ones. git Git’s usefulness cannot be overemphasized, there are lots of materials out there dedicated to teaching you how to use git. What I will try to achieve here is to give you a legacy principle that will aid your usage of git and github. So what’s with the Repo The concept of the repo has continually stunned a large number of beginner level programmers… well like I said, this is not an article for learning git/github usage. git work flow A friend of my would rather commit without adding her changes to the staging index… this makes me a little uncomfortable, though I know that there would exist a thousand ways of doing a thing… especially when working with computers. My Two most important commandsgit add <filename> — The concept of adding could differ from developer to developer, but here at learn Factory Nigeria our standard is to add when you’ve made a functional change. What that would mean in simple terms is : You should add when you have gotten a little snippet (portion) of your app to work correctly. Adding changes like this help make reverse tracking less costly to your project speed and development time. git commit -m “commit message” — I love committing, I commit a lot. Why because keeping track of changes is the best way to ensure that file life cycle is sectioned properly. Last words… Add and commit regularly, until it becomes second nature to you. Don’t forget to push, pull, fork and branch out your code into more complex and scalable project. Always remember. Develop, Create and Impact… Community is a good place to start giving back. From all of us at Learn Factory Nigeria… God bless you.","['Git', 'Github', 'Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/improve-your-git-github-experience-d5b5941c81bd,0,[],0,256,phavor,Unknown,Unknown,Unknown
Serena Chana,,Staying motivated when learning gets tough – 23 Code Street – Medium,2018-09-13 16:04:13,medium,"Staying motivated when learning gets tough Student Spotlight| Kelly Jacobson Collins is currently taking part in our pilot webinar course. The course is now over halfway through and Kelly’s sharing what’s helping her stay motivated while learning to code. Kelly with her family 💛 It’s been a while since I’ve done any formal learning; when I graduated from university Three Lions was number 1 (for the first time), the Spice Girls were on the rise and John Major and Bill Clinton were in power. Over the years I’ve tried to teach myself Italian and completed many management/presenting with confidence/negotiation/dealing with conflict type courses at work and recently completed the Digital Mums Digital Retox. But coding is totally new, way out my comfort zone and my brain hurts! The learning curve is a funny thing as it tricks and fools you along the way. At times you feel like you’re flying and you’re finally getting it (high fiving yourself at the kitchen table when your code works) and then the learning curve throws you a curveball and the wind is knocked out of your sails. Suddenly you are in the dip of the curve, feeling down and like you’re never going to get it and then out the blue you start growing in confidence again as something that never clicked before falls into place. Some of Kelly’s motivational code! The past 4 weeks since I last wrote the blog have been tough: a combination of the school holidays (and a family holiday) limiting the time I could spend practising, and finding some of the new stuff just really hard to follow. Learning at home, with the flexibility to watch webinars as and when you wish, means you have to stay focused to keep on track. The following are tips and techniques that I’ve used to get back on track: Have a clear reason or goal for undertaking the course An accountability partner/group can be really helpful Tell people that you’re doing the course/going to complete the project. Like secret resolutions, secret courses & projects are less likely to be completed than resolutions you shout about from the rooftop Have a learning calendar or schedule — mark the time in your diary/i Cal/google calendar when you are going to spend time on the course or project Stay mindful on how good you will feel when you achieve your goal/complete your project rather than allowing your mind to fixate on how hard it is right now Writing the blog — it would be a bit embarrassing to drop out halfway Paul ( Kelly’s husband) and her two boys crabbing in Porlock The other technique I’ve used is to do some revision, to go back over earlier weeks to refresh myself rather than just ploughing forward with a lost feeling. 23 Code Street offers a great deal of support too. You can always reach out to Anisah or a course tutor on Slack with a question or by sharing your code and they’ll come back to you to help you out. For example, I’ve recently found learning about Git and Git Hub challenging. It’s not only that typing in my Command Prompt unnerves me but understanding all the new commands too. I love the idea that I’ll be able to collaborate with others, and that people can share my code (at this point I dream of the day someone would want to use my code). However, I cannot use it without pondering who on earth called it Git, why no one in marketing googled the word for its meaning in other major countries and will I ever be able to type the words “git init” without saying them in my head in a mockney accent (innit)? 23 Code Street have kindly arranged a 121 tutorial to help me out and get me up to speed. If you’re interested in studying with us, click here to find about our Daytime Webinar Course starting next month or send us an email to hello@23codestreet. com.","['Learning To Code', 'Coding', 'Codingbootcamp', 'Women In Tech']",https://medium.com/23codestreet/staying-motivated-when-learning-gets-tough-58d083ec823f,3,[],0,0,serena,F,0.9996083327213532,0.00039166727864678956
Vinh Luu,,Coding Bootcamp — What the hell led me to this? – Vinh Luu – Medium,2016-12-01 15:21:11,medium,"Coding Bootcamp — What the hell led me to this? How did I get here? Where am I trying to go now? The tech industry is something I have been fascinated about since middle school, when A O L ruled the world. Much has changed since then… my addiction to living active combined with my spontaneous experimental tendencies caused me try many other things and took my attention away. However, this is where the future lies and I don’t want to be left behind. In web development I admire the ability to create, design, and innovate. Gaining these skills will provide many opportunities and supplement my life long interest of health, travel, and entrepreneurship. I’ve had an amazing journey filled with extreme highs and lows. I’ve spent all of my 20’s trying to find out who I am, what makes me happy, and what I want out of this blessed life… all while trying to stay out of trouble. It’s hard to know what’s right for you until you give it a try. Along the way I’ve found that happiness comes from within. All the failures I have endured have given me the strength to continue to always be pushing for my best. “ A comfort zone is a beautiful place, but nothing ever grows there. ” I’m not good at making tough decisions but I’ve gotten many curiosities out of my system and it has allowed for this moment of focus. My new passion now is in coding. I’ve chosen to join a boot camp because I know that I need structure and the support of those that are better than me. I prefer to immerse completely rather than give anything half effort. We are only three weeks in but the atmosphere at General Assembly has been great right from the start. The staff and students are all friendly and welcoming. It’s nice to know that I am not alone in the struggle. Not having craft beer on tap could have been a deal breaker though…","['Programming', 'Web Development', 'Life', 'Codingbootcamp', 'Journey']",https://medium.com/@vluu87/coding-bootcamp-what-the-hell-led-me-to-this-b98b28a0a0ff,0,['General Assembly'],1,1,vinh,M,0.006997900629811057,0.9930020993701889
Marshall Pritchett,,Path to Programmer: Chapter 2 – Marshall Pritchett – Medium,2018-07-04 18:24:18,medium,"Path to Programmer: Chapter 2 Where did we leave off? Oh right, I had just overcome my first obstacle. Now, lets talk about mentors. Bloc is kind enough to provide mentors that specialize in whatever topic you’re currently learning about. This means, when you move onto a new module, you get a new mentor. Or so I’m told. I am just finishing up the first module, so I’ll keep you posted on that. In a nutshell, the mentors are there to get you unstuck. But, the neat thing about the mentor/mentee relationship is that they don’t just give you the answer to your problem. They work through the problems you’re having with you and lead you in the right direction. This may sound super frustrating, but its really the best case scenario and helps maximize what you learn from your mistakes. Not only that, but mentors provide you with extra practice problems. As someone who learns hands-on, this is ideal. I can go to my mentor and ask for practice with Java Script event handlers or class constructors and he provides all the material I need. So, here I am, at the end of the first module in Bloc’s program. Ready to take the assessment head on and move into more complex material. See you on the other side.","['Mentorship', 'Programming', 'Codingbootcamp', 'Bloc', 'Web Development']",https://medium.com/@mpritchett516/path-to-programmer-chapter-2-e5de0ebb836d,0,[],0,0,marshall,M,0.012365503304385822,0.9876344966956142
Franziska Luzia,Digitalizing Fashion www.franziskaluzia.com,Where to start Learning to Code – Franziska Luzia – Medium,2017-04-02 14:30:59,medium,"Where to start Learning to Code Where to start learning to code? You’ve made the first decision that you want to learn to code, but there are just too many (or maybe to little?) resources out there. So, where can you even start? I want to show you some of the biggest online resources / programs for Swift but also for other programming languages that are out there and are providing quality content. You don’t have to always attend a Coding Bootcamp if you want to learn to code — you don’t even have to have a completed degree in computer science or anything related to that. All you need to have is a great interest and passion to learn. There are multiple online courses that will guide you through the first steps of coding of which most of them are free. Remember: The first step is always the hardest! Treehouse I started with Treehouse and their Web Design course packet, continued with Java Script / Full Stack web development package and latest did the Swift 3 videos. They explain the topics in an entertaining teaching style, as if they were sitting right in front of you. After each section you have many quizzes and coding challenges to pass to collect some points for badges and rewards. The cheapest membership fee is $25 a month and all content is in English. You can also do their “ Tech Degree” which I haven’t tried yet. With the cheapest membership you have access to all their programming language courses and even if you’re not sure which one to pick, you can just play around and test a few for yourself before maybe starting a Tech Degree. For the start the regular video content is absolutely enough material to learn. www. teamtreehouse. com Udemy Udemy is the biggest video tutorial platform out there and most of the courses are pretty cheap compared to the knowledge you can gain. For Swift 3 I can highly recommend this course. Period. Have a look around, read comments and ratings, and you can find any other language or even design or marketing programs you’re interested in. Teaches provide video tutorials (similar to Treehouse) and also P D Fs or worksheets for you to follow along. www. udemy. comi Tunes Ui Tunes U includes lectures, language lessons, lab demonstrations, sports, and campus tours provided by many colleges and universities in the United States, United Kingdom, Australia, Canada, Ireland and New Zealand and has collected materials from colleges, universities, museums, libraries and other cultural institutions of educational value. There are more than 75, 000 files available for download. You simply have access to it through your i Tunes Store on the Mac or you i Phone app. Some courses I can highly recommend are: Stanford: Developing i O S 10 Apps with Swift Swift Playgrounds: Learn to Code 1 & 2 Plymouth University: i O S Development in Swift The Swift Programming Language (e-book) by Apple This ebook is free for download and explains the basics of the programming language Swift 3. 1. It’s written by the source of it all, the development team of Apple. You probably can’t find any other resource that is more accurate than this one. Did I mention that it’s free? Other resources: Hit up on the Swift Standard Library to look up on definitions and click trough Apples resources. You see, there is so much to learn out there! Sticking to one program at a time really helps staying focused and not to get loosed in this giant topic. You will notice when starting a new course that you may being able to skip a few things that you have already learned which makes you faster. I hope this blog post was helpful. What resources did/do you use to start learning? Anything I can add to this list? Franziska","['Ios Development', 'Codingbootcamp', 'Learning To Code', 'Coding', 'Women In Tech']",https://medium.com/@FranziskaLuzia/where-to-start-learning-to-code-42fcaa61add7,4,[],0,0,franziska,F,1.0,0.0
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18",Self-teaching vs Coding Bootcamp – J.Lim – Medium,2018-08-16 11:01:37,medium,"Self-teaching vs Coding Bootcamp J L’s Self-teaching Story #1 Photo by rawpixel on Unsplash[ J L’s Self-teaching Story] Series1.   Self-teach vs Coding Bootcamp2.   [ Net Ninja] J S Regular Expressions3-5.  [ Net Ninja] Vue J S2 ( Part1, Part2, Part3)6.   [ Net Ninja] Vuex7-9.  [ Net Ninja] Python3 ( Part1, Part2, Part3)10-12. [ Net Ninja] Django ( Part1, Part2, Part3)13-14. [ Net Ninja] Sass ( Part1, Part2)15.  [ Sean Larkin] Webpack4 ( Part1) I was going to join a coding bootcamp program that students attend on Monday through Saturday for 3 months. However, I decided to try to become a software engineer without attending the coding bootcamp program. [ Curriculum : Coding Bootcamp ] Goal : T B D (a group project) Front-end : H T M L, C S S3, Java Script( E S6), j Query, React Back-end : Node. js( Express) Database : Mongo D B C S Knowledge : algorithms and data structures, etc. Deployment : A W S[ Curriculum : Self-teaching ] Goal : To build my portfolio website! Front-end : H T M L, Sass, Java Script( E S6), Vue( Vuex, Vuetify, Vue Router, Nuxt, Axios) Back-end : Django( Python) Database : T B D C S Knowledge : algorithms and data structures, etc. Deployment : A W S[ Advantages : Coding Bootcamp ] Software engineers who can help on site. ( Instead, I’ll get help from an online class teacher and friends + ask questions on Stack Overflow! ) Strong attendance policy ( Since I won’t have anyone who keeps an eye on my attendance, I need to be determined to devote my time for learning!) Peers that can keep each other accountable. ( Ways to keep myself accountable are explained in the next section. ) Curriculum that worked for a number of people ( But. . it might not work for me!) Possibly get a job faster. ( Would this be true for me?! I had to work on the coding bootcamp’s preparation course for a longer period of time compared to my peers. Maybe their teaching style is not compatible with my learning style. F Y I, the coding bootcamp staff claimed that whoever complained about their teaching style had insufficient self-directed learning capability. What is this nonsense?!)[ Advantages : Self-teaching ] Keep myself accountable by doing the following : 1) Record topics I covered every day on Google Drive, 2) Write Medium blogs about what I learned, 3) Upload daily progress on Git Hub (after start coding for building my personal portfolio website), 4) Manage tasks through Trello. Avoid morning rush hours and work on my project from 11 am to 10 pm (vs coding bootcamp’s schedule : 9 am to 8 pm). Work at a more pleasant & quiet place (the working space at the coding bootcamp is crowded and often noisy). Can devote more time to learn about computer science foundation knowledge, Sass, Vue, and Python. Enhance my self-directed learning capability. Get a full-stack development experience. Please remember to eliminate all self-doubt. Don’t ever doubt yourself — not even just a little bit. Even if it happens, try to brush it off. You can tell your mind once or twice that failure is possible and that you will have to be resilient and bounce back if that happens, however, never dwell on that thought. Never think about the possible failure in a repetitive manner. Don’t let any doubt get into your subconscious. ( Mo Seetubtim) Please wish me a good luck! 😊 Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['Codingbootcamp', 'Website Development', 'Self Improvement', 'Programming', 'Tech']",https://medium.com/@j_lim_j/self-teach-vs-coding-bootcamp-5f5ce47fd122,0,[],0,178,j.lim,Unknown,Unknown,Unknown
Ngoc Tina Hoang,,Job Searching After Coding Boot Camp – Ngoc Tina Hoang – Medium,2018-03-16 09:57:28,medium,"Job Searching After Coding Boot Camp Finding a job after a coding boot camp, here’s what has happened to me so far Congratulations you have graduated a coding boot camp! Like me you probably have mastered one of the popular tech stacks in 2018. M E R N was it for me while some others graduate with 3 stacks (!). I am a Java Script developer, I stuck to this language because I think that way. Being able to name functions and variables as any thing I like (let husky = “mine”) is a lot of fun too, and it easily can prevent people from copying my work. Right? Anyways, this blog post is about looking for a job after graduating from a coding boot camp. I have not found one at the time of writing. In my opinion and from my own experience: First of all, before joining the boot camp, you should have a bunch of questions about the job outcome of these boot camps and at least search online for front-end developer job or Java Script developer job in your area using Google Jobs search which pulls job postings from multiple sites. Then please really analyze these job posts to see what kind of demand is out there for developers. The truth is that starting late 2017, the industry started to refuse to hire junior developers with no experience. 3 months into my online boot camp, I observed this trend when I went to meetups and the job announcements were mostly for senior devs or a range of experience but at least 1 year of working experience. The junior developer role is rare. I went to 4 meetups minimum per month since September 2017 to now, March 2018 — not once did I hear the word Junior Developer. I did hear a lot of Front- End, Senior, Dev Ops … oh so many Dev Ops. Why did I not go into Dev Ops. . ? Anyways. The Junior Developer role has been rare in my area because government contracts require the certain experience and expertise, and also so the contracting firms can invoice the time at a higher rate based on experience of the workers. For example, if they can find someone with 3–5 years of experience they can ask for more $$$/hour than for a junior developer with -1 to 0 year of experience. Government contracting of dev’s time can go 2–3 layers of markup too, but that is another story. To be honest, I felt like a -1 year of experience, because I want to learn on the job and have some training before being thrown into a project. If you don’t get/want to get a government job in my area, you can look into private firms and startups. Well, they have money and time constraints as well. Things need to get done fast and the senior devs who cost the company $100–150/hour or more can’t get their tasks done and train junior devs at the same time. They have to choose between paying the senior devs to do their jobs or to train the junior devs so they often choose not to hire junior devs, and to grind their existing devs. Don’t be too upset or even discouraged. Just accept it. Accept the challenge and find your way to win not whine. I found that most senior devs are craftsmen who protest these B S (business sensitive) reasons and believe that it is the company’s failure to have process in place to grow talents. They’d love to pass down their craft. These craftsmen are rare to find but they host meetups so there you can find them, get them coffee, donuts, beer, burgers and learn from them while picking up open source and freelance projects to build your 1+ years of experience. That’s what I am doing to overcome this hiring barrier. I did not do the research and did not know the fact that entry level position in development had been rare when I first started my boot camp. I started the boot camp because I wanted to learn how to code, a job as a developer would be nice to have but that was not the ultimate deal breaker for me. Is getting a job right after boot camp important to you? Did you quit your full time job that you hate so much so you can immerse yourself into learning? Are you giving up time with your children and family to immerse in this full time to transition into a new career? Are you like me, clinging on to the full time job, working all day and doing to the boot camp at nights and weekends? A job matters to more than half of boot camp graduates. Not all of us are here because we had C S degrees or already had jobs as developers and just needed an update on skills and technology. We are here to learn something completely new and hoping to learn enough to land a job as a developer because these days such job pays the bills and then some. I’m writing this blog post for you who are hopeful. If you chose a coding boot camp because of a job guarantee and its promising income, please rethink your decision because in my opinion, a coding boot camp is a school, they are not an employer. They have no business guaranteeing any jobs. It is a great marketing tool and competitive advantage to have over other boot camps. Quite brilliant business idea, but as a student/client you should make sure that you find in your boot camp the right people that work their hearts out to honor that promise to you. Money does not care about you. People do. Use them. They love helping. When you want the refund, you’ll quit, the journey ends. Don’t quit. I came to my boot camp - Thinkful to learn to code. While in the boot camp it was stressful to learn to code to get a job so I just crossed out the “to get a job” part and… just learned to code. After the boot camp, I still did not feel 100% sure that I am super proficient at Java Script — learning is never done. I burned myself out at the 4th month of the boot camp trying to apply for jobs and building more real-life projects for free or for cheap while trying to learn React/ Redux. One thing I know for sure is that a boot camp will N O T give me a job right after graduation, they will make me search for jobs for at least 6 months and do a lot more frequently time-consuming and difficult tasks to a certain requirements and quality measurements to guarantee me a good outcome. Some boot camps will refund you the cost of the program if you have done everything they ask but still don’t land a job. Wouldn’t that suck? Would that refund make you feel good, some people don’t find a job and don’t get a refund at all at other boot camps, but would you feel good to be rewarded for failure of your boot camp? Would you feel that some of the failing was yours? If no what would you do to win (besides the money)? if yes, don’t be so hard on yourself… think about wining next month. Are you saving up for 6 months worth of living costs so you can search for a job under a little less stress? This cost sits on top of the cost of the coding boot camp. Would you hold your current job and terrifyingly try to sneak out for job interviews? How long can you keep this up? I met two developers in my area, they went to a coding boot camp and got a job as a Full Stack Developer… 3 years after they graduated from the boot camp. They were jobless or interning for 1 year before landing their junior role migrating contents between C M Ss or something like that for 1 year, then worked their butts off at the next job to earn the title Full Stack Developer — the same title that boot camp graduates like me plastered all over my social profiles. Now these folks are hiring developers, no wonder they resent hiring. They paid their dues, I should too. The fear and risk of taking a boot camp remained with me after graduation. It was a rude awakening to me that after the boot camp, I ended up working more, coding more, networking more and learning more than when I was in the boot camp — minus the mentors and the constant teamwork. Career Services will be provided by the boot camp… if yours don’t have one, why did you choose it, right? However, the people who have Career Services support still don’t always find a job quicker than anyone who does not have it. It is similar to how you had your mentors and teammates in the boot camp but you still have to do the work on your own. Applying for job is extremely individual. The rabbit hole’s vacancy is binary (1 or 0). I encourage you to look beyond the marketing B S (again… business sensitive) reasons why you like a job as a developer and dig deeper in your own mind… why are you punching the keyboard or the screens? what for? Did the computer hurt your feelings? This is your money, your time and your career, you take full control. However, it is nice to have someone to be with me during the application spamming process, I have a career coach from Thinkful. I made a goal of sending at least 1 application per day. I was very tempted to build a bot to mass customize my resume and automatically fill in my information on job application for job posts with matching relevant search terms. It was nice to receive guidance to sway me towards networking, employer introduction and following up, plus other human interactions that gave me more chances to new opportunities. Then, I started to treat the application process as a new experience and began to enjoy it. I have never pursued opportunities in the tech industry at all. I am finding new companies, new people and new territories to meet and explore. Sometimes I apply to jobs because I am curious as to what the companies are doing? how are they making money? Getting into tech is tough for someone who has no experience. Getting into anything is tough for someone who has no experience. A new job, a new town, a new relationship, new room-mate situation, new family… these things that we all dealt with, sometimes we multi-task them. Learning to code and getting that first tech job are just two more new things in everyday life. I de-stress by equating looking for a job to trying to find a Vietnamese spice in different stores. I search online and I can see that the spice is carried by the chain but I just don’t know which store, and I’ll have to call each store and ask. If they like me they’ll pick up the phone and talk to me/answer my messages. If they have the spice in stocks they’ll tell me to come in. Sometimes I get to come into the stores, and the website would still say that the store had the spice in stock but it was sold-out on the shelf of the store that I drove all the way here for. You know, some job postings are just there and the company does not take them down even when they have filled the position. Anyways, I hope that analogy helps you de-stress and worry less. Like anything in life, looking for a junior developer job should not matter more than finding exotic spices in your local super market. This is how I am getting through my rejections and bad days. I would picture in my head the day I hold that Vietnamese spice in my hand, and I can tell people that I found that at an American store… in the land of the freeeeeeeee and the hooooooooome of theeeee braaaaaaave. No, I do not need sponsorship. // March 15th, 2018 — March 16th, 2018 … pulled an all-nighter from 10 pm to 7 am. I love how writing can just suck me in. I interviewed for a job on March 15th, the job post stated an overnight shift. I stayed up all night to see how it feels and wrote this blog post. If I have something to type, my mechanical keyboard will keep me awake. 6 hours after this blog post was first published (no edits) … I got the job. :) so please don’t quit, if you are job searching, keep looking. You will win. Find the job you love, try it out, pretend you are working at that job position, try living it for a day, make sure you love it and pursue it relentlessly. Never quit!","['Programming', 'Job Hunting', 'Satire', 'Codingbootcamp', 'Coding']",https://medium.com/@tinatheace/job-searching-after-coding-boot-camp-cd0d50c68316,1,[],0,24,ngoc,F,0.9227467811158798,0.07725321888412018
Serena Woodward,Aspiring Tech Entrepreneur and Recent Villanova University Grad,"Horizons, Chapter 6 – Horizons School of Technology – Medium",2016-08-01 19:47:50,medium,"Horizons, Chapter 6 The “ Aha” Moment when your app finally works Week 6 was very eventful for the Horizonites. Between celebrating the halfway point of the course to competing in a 24 Hour Hackathon, the week was filled with excitement and true mental tests. Horizonites learned to use React and Redux. They used these skills to work on two projects — an interactive calendar similar to Google Calendar and a chat-app similar to i Message. At the end of the week, Horizons founders Abhi, Darwish, and Edward treated the class to a night out at the Spruce Street Harbor Park. The whole class competed in Games of Truth-or- Dare Jenga. The Highlight? Watching T A Ethan Lee run after someone after pulling the “ Get Someone’s Number” Jenga block. The following day, they put their skills to the test at the Hackathon from noon until noon the next day where some truly amazing ideas unfolded. The categories included Music, Lifestyle, and Sports/ Health. The judging criteria was as follows: Technical Challenges What type of technical challenges did the group deal with? How technically did they dive here? Originality How unique and innovative is the demo? Is it new and original or a combination of existing services? Design How good is the visual design and interaction experience? The winners were: In Music: Tempo The Universal Music Player: takes Spotify, Youtube, Soundcloud, and more and lets you make playlists from all of the different music subscription services. Prize for winning: “ Dinner with Darwish and your whole team! (up to $30/person”","['Coding', 'Codingbootcamp', 'Tech', 'Technology', 'Hackathons']",https://medium.com/horizons-education/horizons-chapter-6-b2a03aa3e2d9,0,[],0,0,serena,F,0.9996083327213532,0.00039166727864678956
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 1 — (00) – Mike Brave – Medium,2018-08-21 04:50:19,medium,"42 Piscine Day 1 — (00) Edit: This is part of a series that culminated here, Next post. Previous post. I wasn’t entirely sure what to expect. I managed to get in at the dorms around 2 pm yesterday after flying in from Austin, it took about 4 hours of flying, caught an Uber at the airport for about $35 and arrived at the dorms as a line was forming. It was pretty casual and reminded me a lot of how scout camp felt. The first thing I noticed was how much more relaxed the students who are already attending are compared to those of us in the piscine, they do things sure but I also see them hanging out, chatting on the lawn, walking dogs. Not much different than any other college campus would feel. The food options are less than expected, the Cantina’s hours are limiting (dinner is over at 6:30, who eats dinner that early?) and restaurants are all over a 20 min walk away, having a car would have been nice after all. I’m rooming with a few guys, childhood friends from West Virginia, they seem cool so far, most of the people I’ve met have been pretty cool actually. One thing that worried me a little is I met about 4 people who are taking the piscine for the second or third time. I had been under the impression that determination was a core determiner, but it seems these did finish but still did not succeed. I felt a lot less sure about my chances after meeting them. One has been a fantastic help to understand things, a real resource, another told me things that weren’t really true “like it was ok to wait in the rec room” (it wasn’t) and the third doesn’t remember anything from her last time here. Which is concerning in a different way. Last night I tried to go to the lab and check it out, security asked me to leave as I hadn’t officially started the piscine yet. So I found some of the guys in the game room, joined a game of poker and later a few games of chess. Now lets get down to what we learned today: We started with an assembly where a few rules were explained, and the philosophy of the school was reiterated “you don’t learn to ride a bike by watching other people ride”. We were told to make sure we subscribe to our projects daily as we first wake up, were given wristbands and shown to the lab. After that the instruction has been minimal to none (as advertised), there were some video tutorials that corresponded with the assignments, but those left a lot still to figure out, to search for online and to ask each other. Our first assignment was to edit a text file agreeing to comply with harassment policy, then to figure out how our git system worked and upload it to the right place. This was harder than it sounded as I thought I had uploaded it twice when I had not, luckily as a first assignment I could retry it. There were 11 other assignments today, I’m still working on number 4. Assignment 1 was modifying write permissions of a file using the terminal Assignment 2 was similar but with more files, directories, more complexity and linking of files Assignment 3 understanding and getting Kerberos tickets Assignment 4 ldap who am I script file (but we had ldap server problems, but I had no idea and fought with it for hours) Assignment 5 is more ldap but with more things Assignment 6 adding a phone number using ldap Assignment 7 mid L S (what even is that?) Assignment 8 reinterpreting inputs lowercase z to uppercase Z Assignment 9 program to find the difference Assignment 10 program to clean up junk files Assignment 11 find all files with the 42 header It wouldn’t feel right to go into further detail than that, but as I said I’ve done probably 10 hours today and I’m stuck on number 4 of 12 for the day, I’m not especially proud of myself. I’m going to give it another 15 minutes or so and call it a night, get some sleep and be back at it around 5 am tomorrow as I’m way smarter in the morning. People are getting more collaborative as it gets later though, so it might be smart to stay up a bit more, I’m not sure, I’m still transitioning out of nocturnal by the way so I have to keep that in mind too. My brain hurts though, there is a literal headache. Until tomorrow.","['Education', 'Ecole 42', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-1-184c32a1d7f8,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Jacob Moore,,First Assignment – Jacob Moore – Medium,2017-07-15 01:04:11,medium,"First Assignment So things I kinda understood that I would be working on: H T M L, C S S, Java Script, j Query, S Q L, C#, etc. All pretty much coding. Things I did not expect to start working on: Shell and Terminal. I don’t know why but creating local repositories, staging, and committing through a terminal seemed pretty much…something that wasn’t going to be part of class. I was wrong. I’m starting to learn things, like stashing and git lists, that I will most likely forget. It’s something that I’m sure in time I’ll start using more frequently but man it was something I wasn’t expecting to have to pick up. In some regards it makes sense to simply just go into the terminal and do a pull. But in a lot of ways it just seems like I could just do this from Git Hub Desktop. I mean why open terminal to create a folder and then a file? Maybe it’s faster than right clicking and doing New File and then create a document. I guess we’ll see what sticks in my head and how often I’ll have to refer back.","['Git', 'Coding', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/first-assignment-c37b1d84793e,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Adrian Thomas,Up the rabbit hole.,Q3 has begun. 2/4th of the race is done. – Adrian Thomas – Medium,2017-05-05 01:23:55,medium,"What my editor looks like at the moment Q3 has begun. 2/4th of the race is done. Sometimes you gotta work a little, so you can ball a lot — Parks & Recreation Back at this! So my fellow cohorts and I are in Quarter 3. We are learning Angular, specifically Angular 1. 6. I’ll have to admit, Angular is pretty cool. Making changes and seeing them happen as you type (via one way or two way data binding) is pretty rad. I’m enjoying it. Like all things, when you first work at it, you suck. But that’s ok. You’re supposed to. At least at first. With work, and I’m talking about constant repetition, you get better. You get faster. You suck less. Anyhoo, Here’s what I’ve learned today: No one person is an island. Rely on those around you for help: Asking for help hasn’t been a hard thing for me thankfully. Though I will admit that I tend to “suffer” through a problem a lot longer than I should have before finally asking for help. I don’t know if this will serve me well or hinder my progress when I’m out in the field coding, but after finally exhausting my current skillset and knowledge, at least I can better explain the problem and steps that I’ve taken to reach a solution. Nine times out of ten, the solution was simple and it’s a minor detail (or semicolon) that I’ve missed. It would have taken me ages to find out on my own. Always check your ego especially and ask for help if you need it. 2. If at first you don’t succeed with Bootstrap, make it work with C S S: Ahh yes… Bootstrap. I loathe Bootstrap. You may like it, and that’s awesome, but me? I don’t. lol. I’ve had nothing but problems with it since I started with it in Q1 of Galvanize. Since I knew this would be a problem early on, I’ve been learning more and more how to do all the things with C S S. I’ve recently moved on to getting a good grip on S C S S which I freaking love. Today, it was trying to get “has-success” and “has-error” classes to show up in an input field. I just wanted a border — green or red — around an input box just incase the user met the criteria or not when filling out a field. Alas, hooking that up with Bootstrap and Angular was a fools errand and instead wasting more time, I could just create classes of what I wanted and apply those classes with some good ol’ vanilla J S. Turns out that’s what I did and it took a few minutes to pull it off. I dig Bootstrap for it’s grid, but for styling? Nah. I’ll pass. I just have to learn a nice C S S grid framework. Feel free to suggest a favorite you use. 3. I’ve grown a great appreciation for Angular J S errors: Oddly enough, I really appreciate Angular’s errors. Specifically how each error will link you back to relevant information in their documentation. I swear this has been a godsend. The errors are well explained (or as about as “explained” as an error can be) but that link to their docs is just icing on the cake. That’s all for now. Loads more lessons learned, but I’m easing back into this blogging thing, plus I want to get back studying. Hopefully there will be a continuation of this of sorts in blog form tomorrow. It’s Friday, and I get to visit Atlasssian H Q in Austin. Can’t wait for that.","['JavaScript', 'Angularjs', 'Blog', 'Codingbootcamp', 'Galvanize']",https://medium.com/@adrianlthomas/title-e939b4595607,0,['Galvanize'],1,2,adrian,M,0.06161420199035667,0.9383857980096433
adam tropp,,CS 100.4: Sorting Algorithms – adam tropp – Medium,2018-05-16 21:40:14,medium,"C S 100. 4: Sorting Algorithms Welcome back aspiring engineers! Today, I will tell you about a few common algorithms for sorting lists. You have, undoubtedly in your time as programmers, come across instances where it helped to have items in a list appear in sorted order. Whether finding the first instance of a user alphabetically, finding a user’s first pet’s name alphabetically, or for countless other applications, you have probably used your language of choice’s array. sort() method and thought little of it. That is fine, but in moving from programming small, personal apps to large, data-intensive, team-oriented software, it helps to have an understanding of how these methods are built and the common practices in sorting. Moreoever, sorting data is one of the most important and fundamental exercises in computer science, and taking the time to understand its best practices is a good review of topics that will come up again and again when solving cs problems. Plus, if asked an interview question in which having a sorted list would help in some way (such as to implement binary search), you should be able to demonstrate that you know how to sort a list without a specific language’s built-in method, and that you have a good understanding of the tradeoffs between different algorithms. The algorithms I will cover today are insertion sort, selection sort, merge sort, and quicksort. There are others about which you should at least be conversant, such as bubble sort, heap sort, bucket sort, and radix sort, but the four covered here are perhaps the most common, and form a solid introduction. The key take away is that some sorting algorithms are bad (in terms of time/space complexity, of course), but are important to know because they help reveal truths about the better ones, and because they are sometimes acceptable to use. All the algorithms I will discuss can be applied to arrays or linked lists, but some have advantages for one data structure vs. another. I will discuss the algorithms for arrays specifically. So with that, let’s talk about selection sort. Selection sort is the most basic sorting algorithm, and it is, essentially, how a naive person would sort a list if asked to. Essentially, selection sort keeps a pointer to the first unsorted element in the list, and runs through the list, looking for the min element. If the min element is not the first element, they are swapped, and this process repeats until the end of the list is reached. Notice I said, “the first element in the unsorted list. ” Selection sort maintains two lists, one sorted, one unsorted. However, it can be implemented “in place” for arrays, i. e. , without extra memory, because to begin with, the sorted list is considered to be length 0, and the unsorted list is the whole thing. Each time a swap is made, the sorted list grows by one, and the unsorted list shrinks by one. Obviously, finding each min element is a tedious O(n) process, which is our first hint that selection sort is not a very efficient algorithm. In fact, the total algorithm runs in O(n²) time in the best and worst case. It will be easier to understand how this works given a short example, so let’s say we had the list 9, 2, 7, 8. We walk through the unsorted list to find the min, which is 2, so we swap this with the first element, 9. This leaves the sorted list as 2 and the unsorted list as 9, 7, 8. We then walk through the unsorted list again, finding the min, 7, and swapping it with the first element, 9, leaving 2, 7, 9, 8. The unsorted list now contains 8 and 9, so we swap them to produce the final list, 2, 7, 8, 9. The pseudocode for selection sort is below. function selection Sort(array, length) 		for i = 1 to length -1		  min = i 				for j = i + 1 to length 				  if array[j] < array[min] 				    min = j 		  swap array[i], array[min] The next algorithm we will discuss is also simple, and also B A D. It is called insertion sort, and it is conceptually similar to selection sort. Insertion sort also runs in O(n²) time in the worst case, but can perform substantially better on lists that are almost sorted to begin with, in which case the time complexity is proportional to the number of inversions (i. e. elements that are out of order). Also like selection sort, it maintains a sorted and an unsorted list, and can be implemented in place in much the same fashion. The first element is taken to be sorted, and rather than finding the min and swapping, as in selection sort, the next element is simply added to the sorted list in order. Let’s go back to our 9, 2, 7, 8 example to illustrate this. The 9 is taken to be sorted, so we start with the 2. 2 comes before 9, so we move it to the beginning, leaving 2, 9, 7, 8. 7 comes before 9 and after 2, so we move it over 1 space, leaving 2, 7, 9, 8. 8 comes before 9 and after 7, so we move it one space. The key is that when inserting elements into the sorted list, we start from the end and move the element over until we find one that comes before it. The pseudocode for this procedure is below. function insertion Sort(array, length) for j = 2 to length key = j i = j-1 while i > 0 && array[i] > key array[i+1] = array[i] i = i-1 array[i+1] = key Okay. That’s enough inefficient sorting for one day. The main point is that these two algorithms are bad, but they are good to study because they mimic how the brain naturally thinks about sorting, and they help us to understand how and why the good algorithms are derived. Tomorrow, we will learn merge sort and quick sort, the two that you actually want to know and understand. But for now, I leave you with some words of wisdom from particle physicist Savas Dimopolous, from the documentary particle fever. Great movie, check it out sometime. “ The key to success is moving from failure to failure with increased enthusiasm. ” I may have just butchered that quote. Great quote though. Til next time!","['JavaScript', 'Codingbootcamp', 'Programming', 'Computer Science']",https://medium.com/@adt6261/cs-100-4-sorting-algorithms-4494a487215f,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Harriet Ryder,"Software engineer. Enthusiastic about the life-improving merits of yoga, good beer and JavaScript. Once I was a librarian.",An algorithm for solving coding katas – northcoders – Medium,2017-07-12 00:00:00,medium,"An algorithm for solving coding katas At Northcoders we put huge emphasis on problem solving skills. Being a programmer is about solving problems with a specific toolset. In fact, building software can be thought of as composing lots of small solutions into one big one. From the very start of the application process, we encourage students to get stuck into problem solving with online platforms such as Codewars, and throughout the course students continue to spend at least an hour of the day working purely on interview-style coding katas to keep their skills sharp. Whether you’re new to coding, looking for your first job or already moving up the software career ladder, we believe that continuing to flex your problem solving skills is hugely important. For beginners, completing katas helps you gain fluidity in the language you’re using and begin to recognize and internalize common patterns for solving problems. For more advanced coders, solving katas is a mental workout: it strengthens and exercises the parts of your brain you use daily in your work. Training the brain to problem solve is like any other kind of training: “ By practicing in a repetitive manner the learner develops the ability to execute those techniques and movements in a natural, reflex-like manner. ” ( Wikipedia). Being able to code in a reflex-like manner looks, to a beginner, like something superhuman but it’s really only the result of hours upon hours of repetitive practice. In this post, I’ll give you some solid advice for using Codewars as a repetitive practice tool. An algorithm for solving a kata, if you like. The Kata Algorithm Find a kata. Don’t aim too high, don’t aim too low. Try to find a kata that you have a vague idea how to solve, but whose entire solution doesn’t appear immediately obvious. If it takes you longer than a few minutes to understand the kata description, you might decide to pick another one. Make sure you really understand what the kata is asking you to do B E F O R E you begin. Try to identify parts of the problem you can extract and break down. Are there any little things you could make a function for immediately? Can you make some notes to yourself of the rough outline of steps you might need to do to solve the problem? Give them your very best shot — even if a single one takes 3 hours. Frustration is your friend. Work outside your comfort zone and give your brain the challenge it requires to learn most effectively. Always do katas in your integrated development environment ( I D E), so that you can tackle the problem with test driven development. T D D is an incredibly powerful methodology. It forces you to think about what the function’s purpose is. This is at the very core of what we do as developers. If you don’t know how to do T D D, that’s fine — just make sure you can run your code somewhere where it’s easier to read the console output, such as J S Bin. After you have successfully submitted a kata, take a break — have a cup of tea, read some news online, whatever will take your mind off the problem for 10 minutes Come back and study the best solution. What features of the language did the author of the best solution use? Do you know them? If not, you have to google them making sure to add ‘mdn’ to your search term e. g. ‘splice mdn’. Study that whole page on M D N ( Mozilla Developer Network). Your aim is not to memorise the A P I — there are better things to fill your brain with and the M D N A P I docs will always be there for you. Your aim is to familiarise yourself with something new, for example, how splice works. Why? So that it might occur to you to use ‘splice’ when a similar scenario presents itself in the future. If you can’t complete a kata, copy the url into a notebook and move on to the next. Every week or so come back to the ones you couldn’t solve by pasting the U R L back into your browser. The fact that you can subsequently solve them with what you’ve since learnt is a real confidence boost. Do you use Codewars? Do you have any tips of your own? We’d love to hear — tweet us! Harriet, Tutor, Northcoders Originally published at northcoders. com on July 12, 2017.","['Programming', 'Learning To Code', 'JavaScript', 'Coding', 'Codingbootcamp']",https://medium.com/northcoders/an-algorithm-for-solving-coding-katas-ab6f2ed6a6b8,0,[],0,6,harriet,F,0.9986337563795673,0.0013662436204326814
David Armour,Aspiring web developer,Progress after first week of coding bootcamp – David Armour – Medium,2018-08-27 12:47:48,medium,Progress after first week of coding bootcamp First Ruby Terminal App The last half of the first week was spent learning the basics of Ruby programming. I found this reasonably easy as it shared similarities with the Python coding I had previously done. Ruby seems to have a lot more built in methods and ways of using loops that make things easier. After completing the first week of my coding bootcamp I felt confident enough to attempt to make my first Ruby terminal app. The challenge I took on was to create a basic Banking A T M app. App Requirements: View Balance Deposit Money Withdraw Money View transaction history Save data to file so that it persists between sessions Allow multiple users,"['Coding', 'Ruby', 'Codingbootcamp', 'Coder Academy']",https://medium.com/@dav.armour/progress-after-first-week-of-coding-bootcamp-ad19888a64d0,0,[],0,6,david,M,0.0035582779766708743,0.9964417220233291
Brittany Tinnin,"Full Stack Developer 💻| Freelancer | tinfullstackdev@gmail.com | Ruby, HTML, CSS, Javascript, Rails, React, & Redux | Coding is my happy place | ATL",Why Software Engineering – Brittany Tinnin – Medium,2018-09-15 02:24:40,medium,"Why Software Engineering Before why, let’s talk about what is Software Engineering. Software Engineering definitions seem to be very subjective even among experienced engineers/developers. Therefore, we’ll stick with the technical definition…. Software engineering is the process of analyzing user needs and designing, constructing, and testing end user applications that will satisfy these needs through the use of software programming languages and frameworks. A software engineer takes the software needs of end users into account and consequently develops or designs new applications. It may involve the process of analyzing existing software and modifying it to meet application needs. What do you think about that definition? Personally, I agree. A business, person, organization, and etc. needs an application, either web application or desktop application, and a software engineer builds it. Now for the why? or Should I say, why not? Obviously, I cannot speak to everyone’s experience as a software engineer, but I can speak to my personal journey to becoming one. I’m currently enrolled in the flatiron coding boot-camp, and I’m very happy about it. Coding has always been something I was interested in, and it was not until I turned 28 years old that I decided to become serious about it. What I knew about coding before I began the coding boot-camp were two things. First. Coding, building is fun. It is fun and enjoyable to write lines of code and watch them execute, like seeing your creation grow before your eyes. Second. All the information and knowledge that comes with building programs and applications, and retaining that information is fulfilling. Those two reasons got me started. But as I said before, I’m in my late 20s, and career stability and financial stability are priorities. According to the Bureau of Labor Statistics (2017), Software Developers/ Engineers2017 Median Pay: 103, 560/year — Financial Stability. Check. Job Outlook: 24% (faster than nation average) — Career Stability. Check.","['Programming', 'Codingbootcamp', 'Software Development', 'Software Engineering', 'Web Development']",https://medium.com/@brittanytinnin/why-software-engineering-38f142db4948,0,[],0,0,brittany,F,0.9969992038704146,0.0030007961295854
Stella Chung,"software engineer, javascript & other dark arts",6 Weeks into Coding Bootcamp – Stella Chung – Medium,2017-06-06 03:27:24,medium,"6 Weeks into Coding Bootcamp Six months ago I was doing online j Query tutorials, with only a fuzzy idea of what the D O M was. Now, I’ve finished up the Junior Phase of the Grace Hopper Program coding bootcamp. Here’s a snapshot of the material covered so far: Week 1: Data Structures, Computer Science fundamentals Week 2: Server Routing with Express, Databases with Postgres Q L, S Q L Week 3: Promises, C S S + Sass, and H T M L Week 4: j Query, A J A X, web sockets, Webpack Week 5: React, Redux Week 6: React-redux, Authentication, and final exam Week 7: Review Week — web security, review of previous lectures, planning upcoming projects Whew! Each day has been packed with so much new material, that at times I felt disheartened when I struggled with a new concept. Looking back now though, I appreciate the fast pace — I know that I wouldn’t have covered this much ground, this quickly with self-study alone. The problem I had with self-study was constantly being unsure of what to study and what resources to use. I would waste a lot of time switching back and forth between different websites, tutorials, and books. In a bootcamp, all this guesswork is taken away so that you can just focus on programming. Grace Hopper in particular has been great, since it shares all the same material, instructors, and administration as Fullstack Academy, and the curriculum gets frequently updated. The Senior phase of the program is where things get really interesting though— we’ll be focusing entirely on building applications individually and within teams. Last week I built my first full-stack C R U D ( Create, Read, Update, Delete) application, and from that experience, I realized that building is where most learning actually takes place. Figuring out the schema design, the api routing, setting up react-redux and bringing all these concepts together in one program was the biggest challenge I’ve had so far (see Desert of Despair), but also ultimately the most rewarding. In the next few posts I plan on sharing my experiences working on my upcoming projects, and discussing concepts I struggled with or found intriguing. I hope that my writing will help those considering a coding bootcamp, are in a bootcamp, or just generally interested in becoming a better programmer. Thanks for taking the time to read this article, and for joining me on my coding journey!","['Codingbootcamp', 'Learning To Code', 'Programming']",https://medium.com/@stll.chung/6-weeks-into-coding-bootcamp-5fbea3c385d3,0,['Fullstack Academy'],1,2,stella,F,0.9977811390937396,0.0022188609062604838
DevPoint Labs,"Helping passionate people launch a career in full stack web development, UX design, and data analytics in 11 weeks. Utah’s highest rated coding school.",Utah’s Highest Rated Coding School Introduces New Financing Partnership,2017-07-12 22:08:47,medium,"Utah’s Highest Rated Coding School Introduces New Financing Partnership Dev Point Labs strives to be accessible to everyone who is motivated enough to take on a big endeavor like learning to code in three intense months. We believe our Women and Diversity in Tech Scholarship also shows our commitment to being accessible; however, we know that’s not enough and only helps a small percentage of students. This leads us to turning down excellent candidates who have the technical skills to succeed but cannot finance their growth and opportunity. While we’re one of the most affordable coding boot camps in the nation, there is still a real issue for many people to fund their future web developer dreams. In an effort to break the financial barrier we’re please to announce a new partnership with Skills Fund, an innovative student funding platform that understands the boot camp industry. Skills Fund only works with top tier programs, so we’re humbled to be working with them. It even permeates in their mantra “we don’t finance students to attend crappy programs. ” They have successfully aligned each parties incentives to ensure student success, and that’s a win-win for all. You can now apply for a student loan with Skills Fund for our full-time and part-time courses in Full- Stack Web Development, U X Design, and Data Analytics. Depending on the class students can borrow up to $2, 000 — $9, 995. Full-time students can make interest only payments while in the program with an additional two months after graduation. Part-time students make full repayments (interest + principle) one month after class begins. Monthly payments range between $90. 43 — $225. 96. Give our loan calculator a try and see what your monthly repayment could be. We hope that this gives more people an opportunity to fund their education, become a developer, and make a difference in their life. Please reach out to us if you have any questions by email: contact [@] Dev Point Labs. com or by phone: 801–448–7240.","['Student Loans', 'Codingbootcamp', 'Learning To Code', 'UX Design', 'Utah']",https://medium.com/devpointlabs/utahs-highest-rated-coding-school-introduces-new-financing-partnership-c462f4f83280,1,[],0,7,devpoint,Unknown,Unknown,Unknown
Craft Academy,"Coding as a Craft in 12 Weeks — Stockholm, Gothenburg, Pretoria, Rotterdam",Learning to code? Then code! – Craft Academy – Medium,2017-07-18 21:21:37,medium,"Learning to code? Then code! This week in Craft Academy — Week2 July 2017 Back in “business unusual” after the summer break. Here at Craft Academy, this week has been all about getting our students out of their comfort zones, leave the tutorial-like challenges of the first weeks of the camp, and start to build web based systems. With this weeks challenge we started to lay the foundation for a system that allows users to order food online. We introduce Sinatra, a framework for web based applications, and gave our learners their first insight into various agile practices, focusing on Behavior Driven Development. At the end of the week, we are ready to go live with the Slow Food Online application and we deploy it using Heroku — a platform as a service that enables developers to build, run, and operate applications entirely in the cloud. A few models, controllers and views. Awesome work for week 3 of a bootcamp For most of our students this is the first encounter with building web based applications. It’s of most importance that they get to work on as many parts of the project as possible — trying to do as much as possible themselves. Even if the coaches are there to introduce various techniques and give support if the shit hits the fan — the students are required to work autonomously for most part. That makes them nervous as hell — quite understandable, a few short weeks ago the’ve newer written any code at all! It’s difficult to learn to code, and if you don’t have a guide, it’s hard to know how to teach yourself. We provide a challenge based curriculum based on real-life projects and create a simulated setting where we our students can learn in a structured way as well as practice their skills. “ Practice“ is the keyword here. If you want to succeed in learning how to code means that you have to actually code. It’s as simple as that — The more you code, the better you’ll get at it. And never code alone. Work in a pair, a team, and on projects that allow you to use your newly acquired skills in a real life context. To be able to do that you have to be open minded and have courage. What the hell has courage to do with coding, you think? Well, try submitting a pull request to a projects Git Hub repo and your code to peer code reviews and you’ll see that you should not be afraid of criticism if you want to succeed as a developer. Is it okay to write bad code? We argue that the answer to that question is yes. In our opinion, bad code is way better than no code. If you write bad code today, there’s a chance that you will be writing good code in the future. If you build an app that solves a problem for a handful of real users today, there’s a chance you can take part in building an application that can help thousands or more users in the future. If you D O N’ T write code today, theres a great chance you won’t be writing code tomorrow either. In Q& A session we held at Craft Academy and Agile Ventures with D H H recently, he said: “ This is a journey. Everyone starts out being a shitty programmer writing shitty code. There’s no way to jump over that. The wonderful thing though, is you don’t have to stop there right? You can keep walking and as you go along and get better and you’ll write only marginally crappy code and then they’ll write passable code and then, at some point, you’ll write code where you go like: — Wow this is really nice, I really like this! It never stops which is wonderful right? Otherwise we’d get bored as hell if you could learn everything there is to learn about this whole profession in three months in a coding school, I mean how shallow would the whole thing be?” That quote pretty much sums up what we try to do here at the camp. Quite often, when we coach junior developers taking our classes, our objective is to make them understand that everything they do leads them forward on their journey to become junior developers. Writing code together and solving real life problems — even if its just in a simulated setting like a bootcamp, is how you progress. Keep on coding! Peace out! Craft Academy is a Tech Education Provider that aims to bring new talent to the market and help to solve the shortage of tech workers. We are founded on the belief that modern development standards, agile methodologies and business skills are fundamental for I T C professionals. Our primary service is a 12-week coding bootcamp designed to provide individuals with a foundation of skills that allows them to enter the industry as junior developers. With that foundation, our learners find employment in various industries or start their own businesses that bring new innovations to the market. Would you like to know more about what we do? Follow us here on Medium, Facebook, Twitter or visit our website. Would you like to know more about what we do? Follow us here on Medium, Facebook, Twitter or visit our website.","['Programming', 'Education', 'Learning To Code', 'Web Development', 'Codingbootcamp']",https://medium.com/craft-academy/learning-to-code-then-code-8b12ccab299f,0,[],0,14,craft,Unknown,Unknown,Unknown
Cheryl Chotrani,,Helping Low-Income Women Establish Careers in Tech – Tech Forward – Medium,2018-09-05 11:41:01,medium,"Helping Low- Income Women Establish Careers in Tech Welcome back to Tech Forward’s blog! On this week’s episode, I spoke with Michelle Glauser, founder and C E O of Techtonica. Based in San Francisco, Techtonica is a nonprofit that offers free tech training, plus living and childcare stipends, to local women and non-binary adults with low incomes. Michelle is also a software engineer and the lead organizer for Py Ladies S F — the world’s largest chapter of women who code in Python. In 2015, she spearheaded the # I Look Like An Engineer ad campaign. We discussed her motivation behind founding Techtonica, what makes it different from other boot camps, as well as her journey into tech and entrepreneurship. Despite a lifelong interest in computers, Michelle found herself working full time at a startup doing everything except software engineering. Noticing the high demand for engineers, she signed up for a training program in 2012. While her experience was overwhelmingly positive — she had a new job within 2 weeks of graduation — she also witnessed, firsthand, the lack of diversity in the tech world. She attributes part of this to the high cost of tuition (which, on average, has since tripled). But that isn’t the only barrier: many programs require participants to already have their own computer or tech network, or impose age limits. Through her crowdfunding work with the # I Look Like An Engineer ad campaign, Michelle had the revelation that would steer her towards entrepreneurship: “ It was such a big challenge, but at the end of it I thought, I can do hard things! What other hard things can I do?” She turned her attention to socioeconomic diversity. With the bootcamp model growing in popularity, Michelle didn’t want to reinvent the wheel. By providing living and childcare stipends to participants, Techtonica supports locals in danger of displacement. “ We want to train the people who are already here, alleviate the high and rising cost of living, and have the tech companies who are interested in building diversity support that training. ” Companies partner with Techtonica and sign up as sponsors for participants in the 6-month apprenticeship program. After 5 months, sponsors and apprentices interview each other in order to find the best match, and the apprentices have their final month to prepare for their new role within that company. The companies who partner with Techtonica also have diversity and inclusion training to ensure the apprentices enter a welcoming environment. The curriculum at Techtonica is open sourced and created with input from the sponsor companies and industry professional volunteers. From their rigorous application process, to workshop activities designed to evaluate the characteristics of a successful engineer, Techtonica strives to ensure that every participant ends up in the best possible role. In fact, Techtonica has now graduated its first class of apprentices, and placed 100% of them with partner companies! If you’d like to support Techtonica’s mission, you can donate, volunteer, or sign up for their newsletter. Michelle, thank you so much for sharing your story this week, and for the work you’re doing with Techtonica. Thank you also to all my listeners tuning in, leaving reviews, and sharing the show. See you next week! Connect with us Website | Twitter | Instagram | Facebook","['Tech', 'Women In Tech', 'Podcast', 'Codingbootcamp', 'Software Engineering']",https://medium.com/tech-forward/helping-low-income-women-establish-careers-in-tech-4a60403f580,1,['Techtonica'],1,0,cheryl,F,0.9977736026516847,0.0022263973483153216
Valentin Belmonte,,ASP.NET with Docker done easy. – Valentin Belmonte – Medium,2018-09-10 00:19:54,medium,"A S P. N E T with Docker done easy. Hello there and welcome to my post. Today we are going to be talking about Docker, what it does, how to use it and how it can help us to improve our A S P. N E T projects. Let’s get started. As you may know, and if you don’t believe me is that way, every time we talk about how computers communicate to each other or what symbols a computer understands we always say just ones and ceros. Well that is kind of true, but lets think in a programmer that is writing a code, he is not just a guy tipping 1 and 0 for hours. He types special instructions that the computer knows how to understand, that’s posible because computers have in their inside different layers that can communicate to each other. So this way we can type something in any language and are computer will know what to do whit it. ( If you want more information about this topic you can google O S I model or check https://en. wikipedia. org/wiki/ O S I_model for more value information) With that said lets talk a little about A S P. N E T If we look it up in a Wikipedia or in a book or any other kind of academic paper will find a definition that’s kind like this : A S P. N E T is an open-source server-side web application framework designed for web development to produce dynamic web pages. It was developed by Microsoft to allow programmers to build dynamic web sites, web applications and web services. But what does that mean? Open source is what we call every software that it’s original source code is made freely available and may be redistributed and modified. Server-side I believe here the says it all is every part of a script of a client-server application that runs on the server, for example on the world wide web (better known as Internet) C G I scripts are server side while Java Script are run on the client-side (your P C in other words). Last but not least dynamic web sites are those sites that can generate pages in real time, when you make a request to a dynamic web site the code within the page is parsed on the Web server and the resulting H T M L is sent back to your (the client) Web-browser. In few words A S P. N E T enable computer code to be executed by an Internet server. When a browser requests an A S P. N E T file, the A S P. N E T engine reads the file, executes any code in the file, and returns the result to the browser. Both request (client to server and server to client) are H T T P request. Let’s finally get into D O C K E R. Where does D O C K E R gets useful, well lets imagine we put a lot of humans in a room, we asume they all speak the same lenguaje and we want them to communicate, it doesn’t seem it could be a problem right, well what about if all this humans were born 100 years one from each other? you see, the people are apps, the room is the server, the language could be a . N E T Framework or any other framework and the 100 years are just different versions of the same framework. See what D O C K E R does is it creates an snapshot of the environment that the app needs and it warranty that your app will execute always in the same environment. D O C K E R is a tool for running applications everywhere. How does D O C K E R does that? As we where saying D O C K E R is a software platform designed to make it easier to create, deploy, and run applications by using containers instead of virtualization. It allows developers to package up an application with all the parts it needs in a container, and then ship it out as one package. A container is a way to package software in a format that can run isolated on a shared operating system. That way you can ensure that your app will run in your deploy as same as it did in your coding or testing stages. So now lets get our hands into dirty, because I believe that the best way to learn how to doce is by coding. First thing you want to do is download D O C K E R to your machine, you can do that at by downloading D O C K E R toolbox from https://docs. docker. com/toolbox/ you’ll find an easy download window after you select your operating system, in case is windows it will look like this. After you done that you need to create whats call a docker file, for this tutorial we are not going to do that since we are covering the basics, but if you want to do yours te commands you will have to run are : You can learn about all commands at https://docs. docker. com/know that we got D O C K E R on our computer nest step is to open de D O C K E R Quick-start Terminal and it should look like this. If you now type the command docker info and hit enter a screen like this is going to be showed As I marked on the image it will show that we don’t got yet any container or images. So lets get into that, as in any language the first thing we run is a H E L L O W O R L D, lets do the same here. Go on and type: docker run hello-world. As I said early this is just a first time tutorial so we skip the part of creating a D O C K E R file and are going to use one already created as the hello world is. When you hit enter the next window should be shown. If you are seeing it, G R E A T J O B!!! as you can see in the middle of the screen it’s displayed the message Hello from Docker, This message shows that your installation appears to be working correctly. That means you just run your first image. An image is an inert, immutable, file that’s essentially a snapshot of a container. That means that you can now instance that image in to the amount of containers as you want. If you would like to se more in dept about any of the topics that we’ve been speaking in this post, you can view some of this links that I found valuable to made this post:https://stackoverflow. com/https://docs. docker. com/https://docs. openshift. com/enterprise/3. 0/architecture/core_concepts/containers_and_images. htmlhttps://www. youtube. com/watch?v= C6 Lt Rb1 O Juw&ab_channel= Fullstack Academyhttps://www. youtube. com/watch?v= P W Fdx6rws Lg&ab_channel= Jennifer Lihttps://www. youtube. com/watch?v=t9 Yuqw G Y U Ug&ab_channel= Victor Dozal https://www. youtube. com/results?search_query=whats+docker https://www. youtube. com/watch?v=55o41wa X L V Q&ab_channel= Linked In Learning Solutions https://searchitoperations. techtarget. com/definition/ Docker-image https://www. quora. com/ What-are- Docker- Imageshttps://en. wikipedia. org/wiki/ Docker_(software) Hope you enjoined reading it as much as I enjoyed it writing it. Valentin Belmonte","['Docker', 'Aspnet', 'Coding', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@valen.belmonte/asp-net-with-docker-done-easy-717cd844cc7,0,['Fullstack Academy'],1,0,valentin,M,0.0,1.0
Diane Kierce,Aspiring Data Scientist : Philosopher,Data Science: Is it the Real Deal or Hype? – Diane Kierce – Medium,2017-05-09 05:27:48,medium,"Data Science: Is it the Real Deal or Hype? Data science is a relatively new profession, and its definition is open to debate. Its boundaries have not yet been clearly drawn. As someone who is studying data science at a bootcamp, I wonder how the field will mature and what my place in it will be. Most of the media attention on data science focuses on how many data science jobs there are and how quickly it is growing as a field. As a counterweight to the hype, writers at Forbes and Fortune caution would-be data scientists that they will need to “evolve or get left behind” and that “nothing lasts forever, ” respectively. Which is it? Is data scientist the most in-demand job of the 21st century, or is it a job that’s about to get left behind as A I takes over? Let’s take a closer look at the warnings coming from Forbes and Fortune. On Forbes. com, Rudina Seseri identifies a parallel between early programmers of the past and data scientists today. Early programmers developed new libraries and languages that automated many of the tasks that once took up large amount of their time, which in turn forced them to learn new languages and techniques in order to stay relevant and competitive against new programmers who started out learning the easier, faster programming languages. Seseri argues that data science is going through a similar evolution. She writes, “ In the short term, A I technologies are creating a real need for data scientists with demand far ahead of the supply of qualified talent. In the long run, as A I advances to establish and analyze causations as well as correlations, software rather than humans will perform these analyses. And, data scientists — at least the successful ones — will evolve from their current roles to becoming machine learning experts or some other new category of expertise, yet to be given a name. ” Notice that, if Seseri’s analogy holds, then there will still be data scientists who succeed. As in other tech fields, the successful ones will be those who push boundaries, embrace new innovations where that makes sense, and continue to evolve and grow. Sure, some data scientists might get left behind as the technology develops, but that won’t be because A I takes over the whole field. It may be because some data scientists cannot or do not want to continue to hone their skills. Over at Fortune, Barb Darrow warns “that ‘data scientist’ is a loosey-goosey term. Generally speaking, practitioners are expected to know statistical analysis, predictive modeling and programming. Oh, and having a certain artistic flair to guide how results are visualized is a definite plus. But ask a dozen hiring managers and you may get a dozen variations on that theme. ” In other words, there is a lack of consensus about what data science is and what it isn’t, and people seem to want data scientists to be able to do it all, like magical unicorns. Fair enough. Like other fields that are new, I suspect that data science will sort this out over time. As the field matures, its boundaries will become more clear, it will divide into subfields with better-understood titles, or both. I think this problem will sort itself out over time as data science comes into its own. Darrow offers two other warnings, both of which are worth taking seriously. First, new tools will automate significant pieces of the workflow. For example, Tableau and its competitors have already taken a lot of the work out of making compelling data visualizations. These tools empower the best data scientists to push their visualization skills to the next level. They do not put the good data scientists out of business; they push the science to the next level. Second, Darrow points out that more and more people are getting into the data science game. Right now there are more openings than there are qualified applicants. But the numbers of those learning data science are growing. Bootcamps are plentiful. Colleges and universities are starting to offer data science courses and degree programs. There are scores of online sites offering courses, tutorials, games, and advice for free or for relatively low cost. The recent growth rates in data science jobs are not sustainable; the numbers will certainly plateau and might even decrease at some point not too far in the future. For the time being, there are shortages of qualified data scientists, but a new generation of data scientists is already learning the skills they need to succeed. It seems to me that the truth lies somewhere between the hype about data science being the hottest job of the 21st century and the warnings about A I and automation putting data scientists out of work. The importance of good data science is easy to overstate, but it will remain an important field with a lot to offer. It is also heading toward greater automation. That’s good news! Automating the time-consuming tasks of data cleaning and formatting, for example, will free up time for data scientists to focus on theoretical advances and novel analyses. By automating the more rote aspects of the work, human data scientists can devote more attention to the creative aspects of the work that cannot be automated. The human element of good data science cannot be fully replaced by algorithms, machine learning, or even deep learning. While A I and other technologies might reduce the number of data analysts and scientists needed to data science, they cannot replace the theorizing, analysis design, and interpretation that a good data scientist contributes. Personally, I take from all of this the lesson that in order to thrive in data science and in many fields continual learning is essential. I for one applaud efforts to automate the more routine aspects of data science work. I will still learn how to do them for myself. I need to understand what the work is if I’m going to train a program to do it for me or trust someone else’s program to do it well. But those programs are not going to leave me behind as long as I’m learning and growing in my understanding of the conceptual and human sides of data science and as long as I continue to develop my technical skills. That’s progress.","['Data Science', 'Big Data', 'Machine Learning', 'Codingbootcamp', 'Artificial Intelligence']",https://medium.com/@diane.kierce/data-science-is-it-the-real-deal-or-hype-48d8990297b5,1,[],0,4,diane,F,0.9973314336324078,0.002668566367592129
Hold Tight Podcast,"Bringing you stories from the people at Station F in Paris, the world’s biggest startup campus.","The global coding school for the underprivileged — Fred Bardeau, Simplon.co (Co-Founder)",2018-03-04 16:19:44,medium,"The global coding school for the underprivileged — Fred Bardeau, Simplon. co ( Co- Founder) Fred Bardeau, Co- Founder @ Simplon. co In this episode, we get to meet Frederic Bardeau who cofounded Simplon. co. After explaining the specifics and vision behind this school like no other, Fred shares his views on a variety of topics from the impact of technology on our society and children to the education models that work and those that don’t, the roles women have had in tech since the 20th century, as well as his take on scaling the Simplon model in a frugal but efficient way and the many things he has learnt since his first connection to the internet 20 years ago! Listen here ! More about Simplon :simplon. co Also check out more inspiring Hold Tight episodes here :www. holdtightpodcast. com","['Codingbootcamp', 'Station F', 'Startups In Paris', 'Podcast', 'Social Change']",https://medium.com/@holdtightparis/the-global-coding-school-for-the-underprivileged-fred-bardeau-simplon-co-co-founder-6d6584560bc,1,[],0,101,hold,Unknown,Unknown,Unknown
Edward Baeg,"Software engineer, Vanderbilt Biomedical Engineering grad.",A review of Hack Reactor’s SSP (and how I got accepted in 18 days),2018-03-11 02:00:34,medium,"A review of Hack Reactor’s S S P (and how I got accepted in 18 days) Hack Reactor has a relatively new bootcamp prep program. Here’s my experience from day 0 to receiving a scholarship with some tips and resources. About me I recently quit my job and moved halfway across the country to start a new life and career in Silicon Valley. After some research into coding bootcamps, I visited the Hack Reactor campus in San Francisco and decided to apply. Hack Reactor is a very selective coding bootcamp, with an acceptance rate of 3%. In their words: Hack Reactor is not a “0–60” course, this is a “20–120” course. To get from 0 to 20 first, I enrolled in Hack Reactor’s S S P. Starting the day before the course started, I studied 8–10 hours a day for 18 days before getting accepted to the immersive program. What is Hack Reactor’s S S P? S S P stands for Structured Study Program. It is a live, online class that prepares students for the Hack Reactor immersive. There are multiple schedules available. I signed up for the evenings and weekends class, which spanned five weeks; 3 hrs Mon- Thu and 7 hrs Sat- Sun. It is $250 and counts as credit towards tuition if you were to enroll. I was told the S S P program was “still in beta”, and its first class was offered about six months before mine started ( Jan 2018). Getting into Hack Reactor There are two ways of getting accepted to Hack Reactor: The Technical Interview. After solving the admissions challenge on the Hack Reactor application, you can schedule a one hour technical interview. Each interview is specific to a start date and location, and an acceptance gets you a reserved and guaranteed spot. You can take up to three attempts. The Readiness Assessment. Near the end of the S S P course, you will schedule a 30 min “readiness assessment”, which is basically a technical interview. If you pass the readiness assessment and have completed the precourse material (more on this below), you will have a spot in the immersive program. However, those who have passed the technical interview are given priority, and you may need to defer enrollment to the next available cohort. If you do not pass the readiness assessment or do not feel prepared for it, you are allowed one free retake of the S S P course. The S S P experience The class is hosted on Slack, live video lectures are hosted through Zoom, and other material (readings, slides, coding challenges) is hosted on Hack Reactor’s own web platform. Although the schedule of each day differed, it followed a basic formula. Every class started with a kick off lecture that covered daily announcements and an overview of the day’s schedule. Most days, there were additional lectures: Technical lectures: lessons that covered new concepts. Solution lectures: walking through the solutions for weekly assessments. Live demos: introductions to new tools (eg, git and testing frameworks). Town Halls: technical Q& A sessions relevant to our assignments. Tech Talks: student led mini T E D Talks to share our discoveries. For example, I demoed some keyboard shortcuts and plugins for Sublime Text, and another student shared a website for improving coding speed. Staff Q& A: short presentations and Q& A over financing, scholarships, technical interview vs readiness assessment, etc. Lecture recordings and slides are made available to students the next day. The rest of the time is for students to work on assignments. Throughout class time, there is a “help desk” where you can get one-on-one help from an instructor. The first part of the program covers Java Script fundamentals: basic functions (conditionals, iteration, traversal), nested data structures, higher order functions, coding style, pseudocoding, and soft skills for technical interviews. We are given a list of ~180 coding challenges to complete. The second part of the program is the Hack Reactor precourse, material that must be completed before the start of the immersive: H T M L and C S S fundamentals, git workflow, testing frameworks, debugging in chrome devtools, j Query, recursion, and more advanced Java Script topics (prototypes, scopes, closures). Projects that incorporated these skills include performing automated testing, rewriting parts of the underscore. js library, and creating a clone of Twitter. The precourse is expected to take around 90–120 hrs. Students who pass the technical interview are given access to the precourse six weeks before the immersive and must complete it before the immersive. Students in S S P are required to finish the precourse material by the last day of the program (<4 weeks for my class’s schedule) to be eligible for acceptance through the readiness assessment. The readiness assessment is scheduled sometime in the second to last week of the program, and results are given by the last day (+1 week for the S F campus). My S S P experience I signed up for S S P 17 the day before it started and got a surprise email: there is prework! The hard requirement is Udacity’s Intro to Java Script course (10–12 hrs). Strongly recommended is the first five sections of Watch and Code (80 min of video) and the first four chapters of Eloquent Java Script. I frantically completed the hard requirement in a day so I wouldn’t be behind when class started. For part one, I found out that you could look at other students’ solutions to a problem after you had successfully completed it. This became my obsession; I looked at nearly everyone’s solutions! Why? Because it is such a great resource for learning (and many students had prior experience). Whenever I saw something new, I would figure it out and then either refactor my own solution or implement it in the next problem. You can learn so much by doing this. For example, I was using higher order functions and E S6 features before learning what they were! The technical interview I learned that the technical interview tested material covered in the first part of the class, and that the readiness assessment tested more advanced topics. Therefore, I decided to schedule a technical interview halfway through the class in hopes of getting a guaranteed spot and an earlier acceptance. Here’s what I did: Redid the harder coding challenges from part one. Completed countless challenges at codefights. com (arcade mode) and codewars. com (filtered by 6 kyu, fundamentals). Practiced talking through my thought process while coding. I would record myself tackling a code challenge, rewatch it, and take notes of my performance (this is part of the S S P course). I also pair programmed with fellow students (this is not part of the course but is very helpful). The last point is the most important. With its reputation, Hack Reactor attracts many bright applicants who can code well. Because pair programming and group projects is an integral part of the immersive, the school looks for good programmers who can also communicate effectively. Practice talking code. Be able to verbally plan out your strategy for each problem. Be able to explain how each line of code works. Be able to discuss a systematic approach for debugging your errors. I spent so much time preparing for the interview that I fell behind in the class, but it paid off! My interview was 18 days into the program, and I received a acceptance letter six days after. Finishing S S P Before, S S P students who were accepted through the technical interview were unenrolled from the program. Fortunately, they removed that rule with my class, and therefore I (and a few others) could continue to use S S P resources for the precourse. For me, the best part of S S P were the other students. Simply being around (albeit virtually) other like minded individuals who are also starting a career in programming was very motivational. The class felt like a community because students would share helpful resources and help each other out. However, it didn’t last. Around fifty students attended the first lecture. Less than a dozen students finished part one on time. And on the last day of class, no one had finished the precourse… except me. As a result, the deadline was extended by seven days, and four students met the extended deadline. Scholarships There are two types of scholarships available; one is merit based and the other is for underrepresented individuals in software engineering. For either, you have to write a series of short essays and record a short how-to video on any skill. Both are full scholarships. In the past, S S P students were ineligible for scholarships, but that changed with my class. I applied for the merit based scholarship the week after my S S P ended. In my video, I taught how to throw a left jab as a boxer. I was a finalist and was awarded a partial scholarship. Overall thoughts The pacing of the class is a bit rough. But that’s the point; the immersive program is pretty intense at 11 hrs a day, 6 days a week, for 12 weeks. However, the instructors are very understanding and truly want everyone to succeed. There were one-on-one check-ins, and I was asked about my progress and how comfortable I was about topic x or y. I was also given individual recommendations. Partway through the course, a separate, gentler schedule was created for students who wanted to spend more time on the fundamentals and were planning on retaking the course (for free). Actual teaching material is few and far between. But it is really well written. The material is straight to the point; it is like an abridged textbook that only focuses on industry relevant content. As great as some websites and You Tube videos are, most cannot compare to the content created by the people from a top tier bootcamp. At first, it was slightly annoying that we weren’t spoonfed everything. However, I think it’s very important to develop the skills to learn on your own by shuffling through the great library that is the internet (aka Stack Exchange and documentation). Tips and resources Be active in the class. Don’t be afraid to ask questions (after you Googled it first). Check out the resources others post and share your own. Pair program with other students. Share something in the Tech Talks. Learn by teaching other students. Be curious. Make an effort to understand unfamiliar code; don’t just gloss over it. Always understand your own code because you won’t learn if you trial and error a working solution. Do all optional, extra credit, and advanced assignments. This is what I did and have to recommend it. They take up a bit of time time but you will learn so much by struggling through them. Always be coding. Change it up by refactoring your code. Use a different function (or three). See if you can do it recursively. Continue doing code challenges and learn from them. Here are some resources I used outside of those provided by S S P. These are roughly in order with the S S P. ( Thanks to Jason Te for sharing some of these. ) Video Speed Controller chrome extension speeds up videos. Visualize Javascript runs through your code step by step. Y T: Fun fun functions makes learning J S fun fun fun! Solo Learn to learn on the go (try the E S6 series). Codecademy teaches basic H T M L and C S S. Pesticide chrome extension displays the H T M L/ C S S elements of any website. Git Hub’s Hello World introduces you to Git Hub. Try Git teaches you git. i Term2 and Oh My Z S H makes terminal friendlier. Hack Reactor recommends Sublime Text 3. Set it as your terminal editor, give it a J S console, and add plugins. Y T: Learn Code. Academy covers intermediate J S concepts. Y T: Traversy Media gives a crash course on D O M without j Query. Regex One teaches regular expressions. This picture helps with recursion. Thank you for reading and best of luck starting your journey into code!","['Hack Reactor', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@edwardbaeg9/a-review-of-hack-reactors-ssp-and-how-i-got-accepted-in-18-days-bb1c059890,2,['Hack Reactor'],1,297,edward,M,0.004143461761071705,0.9958565382389283
Steve Bogucki,Recursively looping through toRun and toCode. isPrydzPlaying? true. http://bogoodski.herokuapp.com/,"Holy Progress, Batman! Recapping Week 2 at Computer Programming Bootcamp.",2017-08-12 22:30:07,medium,"Holy Progress, Batman! Recapping Week 2 at Computer Programming Bootcamp. “ When creating a constructor function within your J S controller, how come you don’t need to use $scope when declaring the “this. attributes” for the objects in the array?” * It was 5:45 am. I had to go on a run, but this was the question that awoke me one morning during the middle of week 2 of class at the Redwood Code Academy. The very fact that this question was one that I was even asking coherently was evidence of how much we had learned in just two weeks. We have now finished week two and, though we are still just working with simple single-page applications and our data sets are merely arrays and not databases, we have already learned enough to capably do some cool things. the show Controller and associated H T M L/ C S S I wrote up last night for our mini ticketmaster site (it’s a work in progress. haha) Angular J S has become our new best friend ( Don’t tell Roux!). Once the endeavoring developer wraps his or her head around the basic mechanics of controllers, modules, and apps, they unlock a ton of web functionality that’s easy to code — even for me! A little “ng-model” on an input form and an associated filter and, boom!, rudimentary search functionality. Angular J S isn’t just cool for the additional functionality that it delivers, it’s cool because of the way it makes the typical functionality of Java Script more intuitive and dynamic. An “ng-if” doesn’t work exactly like a “for loop” but, when it comes to displaying a series of objects from an array, the “ng-if” does the trick. And, compared to the “for loop”, it does it in a way that’s more reader friendly and provides dynamic functionality. Wait. Was that too many uses of “functionality” in a single, brief paragraph? Haha. All feedback is appreciated. ← Your author. I’m really satisfied with my comprehension of all of the different topics so far taught at the course. Which — and I really mean this — is a testament to the effectiveness of the Redwood Code Academy’s instructors and the design of the curriculum. Though, it felt like we only covered j Query super briefly. So, there, I’ll admit that I didn’t totally catch on. But, as far as I know, j Query is pretty important when working with A P Is and large data sets, so I have no doubt that it is a topic that we’ll be exploring in-depth. And, out of personal curiosity, I’m sure it’s one I’ll have researched even prior to that. A personal learning pattern has developed. I’ll struggle/maybe-mostly-understand a lesson during class. Then, most nights, I revisit the assigned exercises from the day’s lesson. And it’s during those evenings that the material really becomes clear to me. So, I have cognitive epiphanies to look forward to on a recurring nightly basis. That’s nice! I find myself thinking about the material all the time. Probably because I have one of those personalities that only permits me to go “all out” (or, not at all) when it comes to things and activities that I enjoy. This has been an aspect of being me that has had its “ For better or for worse” moments; that’s for sure! But, when it comes to coding, this obsessiveness no doubt serves me for the better. I look forward to waking up early and squeezing in time to review code before class. The time I used to waste on reddit at night, lol, is now gladly traded for more code. It’s become such an enjoyable thing to do. “ Rewarding” has never been a more appropriate adjective than it is in regards to learning to code. If one puts in the work, he/she is constantly rewarded with exhilarating moments of breakthrough. “ Ah- H A!” moments are awesome and I’m achieving them all the time. After struggling with a new concept, it’s such a pleasure to figure it out. But the real thrill comes in applying the knowledge as code for the first time. I mean, to really do it. With no help. Last night I wrote out a simple J S controller and in it a few arrays and constructor functions. And because I understood the functionality that I was writing (as opposed to mindlessly recalling the code from memory), it was surprisingly simple to do. It tested successfully. I felt like running a few laps!! Like, this is one of those times where I really wish someone would have informed me long ago that this could be so … fun! Before enrolling at the Redwood Code Academy, I researched schools in the Los Angeles and Orange County areas pretty extensively. One thing that I expected from the school that I ultimately chose, and am now I finding to be true, thankfully, is that the curriculum doesn’t just teach us programming languages, it also prepares the student to become a developer in the workforce. Our instructors’ youth is not at all indicative of their experience. Which is to say that they have a ton, and are always able to provide real-world relevancy to the topics at-hand. pictured: among others, your author (the one clearly researching fantasy football) Additionally, we conduct whiteboard exercises, one-on-one code review, interview prep, and, later in the course, topics more on the product management/development side. It’s really proving to be a well-rounded program. I was having a similar discussion on #slack. I’m not saying that I will graduate from the Redwood Code Academy prepared to be a Chief Technology Officer. But I do think I will be wholly prepared for an entry-level developer position. And, honestly, I think I’ll arrive at that first job more prepared than the average entry-level employee. And, I can tell you this: when it comes to practically useful knowledge, I can 100% say that I am sure that I will have gained more from this 12-week course than I gained from my undergraduate education. And that’s not exaggerating even a little bit. Needless to say ( B U T I’ M G O N N A S A Y I T A N Y W A Y! haha), I continue to be very happy with my choice to attend a coding bootcamp. * The solution to the question posed at the beginning of this entry: The this. attributes do not need $scope because they are attributes ( I’m not sure if “attributes” is the accurate term) of objects in an array. And the array itself has $scope. So, there ya go. To return to the beginning of this series, please click H E R E. For the next update, please click H E R E.","['Angularjs', 'JavaScript', 'Codingbootcamp', 'Developer', 'Code']",https://medium.com/@sbogucki12/holy-progress-batman-recapping-week-2-at-computer-programming-bootcamp-7907f94db0ea,2,['Redwood Code Academy'],1,8,steve,M,0.0037574028300791295,0.9962425971699209
Dave Hoover,Solidity Squirrel,A photo journey through Dev Bootcamp – Dave Hoover – Medium,2017-07-13 14:35:49,medium,"A photo journey through Dev Bootcamp I’m not in the head-space to put my thoughts together about the closing of Dev Bootcamp. Instead, I’ll share some Instagram photos with you. I took these from 2012–2014. A bunch of wonderful people are missing from these photos, but here they are. I found this incredible quote in the hotel I often stayed in when visiting D B C S F. I’m feeling this quote hard today. Here is the great Shereef Bishay teaching his first students. That’s the future C E O of Hack Reactor looking up at him. The great Jesse Farmer, masterfully teaching his students in S F. I spent a good amount of time at D B C S F in 2012 as I got involved in the company, and eventually decided I wanted to start Dev Bootcamp in Chicago. We ran a pre-launch event to help generate interest in Chicago. My new friend Diana was stopping off in Chicago and gave an inspiring talk. Building out our first space in Chicago was a lot of work, but it turned out beautifully. Sometimes I rested during the build-out. I love this photo of student-to-be Liz Abinante during our pre-launch open house event. This is the first day of Dev Bootcamp Chicago. You can tell because the carpet looked so clean. Our first cohort was incredible, and started the long-standing tradition of mentoring the students behind them. There is no one like Mike Busch, and I was lucky to have him there from Day 0. Once we had three cohorts in the Summer of 2013, there was something magical about the Chicago space. I liked buying inspirational stuff to put up around the office. Working closely with teachers like Nate Delage was a privilege. Recruiting and hiring friends like Ryan to teach with us for a while was really fun. Watching students graduate after all their hard work was inspiring and energizing. Allan Dayag’s positivity made a big impact on our 2013 student culture. Kevin Solorio was one of the best things about Dev Bootcamp. He was voted Teacher of the Year in 2013 by alumni. ( Across all locations) It was awesome to watch the brilliant Abi Noda throw himself into D B C. Jill, Elliott, Alex, and Lucas (counter-clockwise) closing out 2013 at our final graduation of the year. This is a glimpse into the quirky culture that we loved so much. Jonathan Eyler- Werve created some awesome graphics for us. I learned a lot about systemic oppression working with Jonathan. Matt Baker joined us in early 2014. He was an incredible teacher and made a huge impact on our students. Elliott Garms was the co-founder of Dev Bootcamp Chicago. He worked hard to create myriad connections between Chicago employers and D B C grads. Just a really good photo of Matt Baker 😊 We took the afternoon off and ate some delicious ice cream. I wonder if Alyssa Diaz took this photo, because she’s missing! Watching our students take ownership over the space and teaching each other was incredible. Kevin eventually went on to launch Dev Bootcamp San Diego. He’s still there changing lives. ❤️","['Codingbootcamp', 'Photos', 'Memories', 'Instagram']",https://medium.com/@davehoover/a-photo-journey-through-dev-bootcamp-aefa504e0d8d,0,"['Dev Bootcamp', 'Hack Reactor']",2,25,dave,M,0.0017823361110676818,0.9982176638889323
Climb Credit,(NMLS# 1240013),Career Transformation: How a 12-Week Program and a Climb Loan Led to a $20K Pay Increase,2018-08-17 14:05:06,medium,"Career Transformation: How a 12- Week Program and a Climb Loan Led to a $20 K Pay Increase As part of his transition from education to engineering, David Sudia took a full-time, Climb-financed boot camp at Galvanize. Now, he’s a Software Engineer for Fanatics in Colorado. We were lucky to speak with David — check out our interview with him below! Before you went to Galvanize, what were you doing? Before I went to Galvanize I was a Special Education Teacher, and I was an Assistant Principal — I had been in education for about seven years before I decided to go into development. So what sparked that career change? I had a bachelor’s degree in marketing, and my master’s degree was in special ed. I had come out of my bachelor’s program basically right into the recession and was trying to figure out an alternative thing that I might want to do… I decided to get my master’s in special ed and work as a teacher. Then I decided I might want to move into leadership, so I took this Assistant Principal role with a charter school network… It was a very bad fit, so in November of that year I quit. So I’m in the middle of the school year, and that’s the worst time to be looking for a job in education… And also in September of 2015 I had my first kid with my wife — so I had a two-month-old, and and my wife really wanted to stay home with him for a while, and that was going to be basically impossible if I went back to education. I started again looking at what else might I want to do… I really like to do work that helps other people do their best, and I really like to do work that involves building systems and designing structures and ways that things will be done. So I tried to take those values to look at whatever else could be done — and the last time I’d been looking for a career, boot camps hadn’t been a thing. I knew some H T M L, but but I’d never really done coding…a thing for me was I really thrive in structured situations… And I also really thrive on project-based learning, like I need to know why I’m learning something. So to sit down and just teach myself to code never really worked for me… I never really had the motivation necessary, so all of a sudden I had the motivation, and here’s this classroom, it’s all project-based learning, the whole thing is very practical because the point of it is to get you a job. And so that really sounded appealing. And then, while you were at Galvanize, what were some of the most valuable skills you learned? The number one thing they told us coming in was, you’re going to learn some stuff here that may or may not apply to whatever job you get, and the main thing we’re trying to get you to do is a lesson in how to learn this. Because any job in development is going to require you to always be learning, so that was more the focus. They taught us Java Script Full Stack, but it was really like here’s how you read documentation, here’s how you find information on this thing you don’t know how to do. Because you’re going to be always faced with stuff you don’t know how to do, whether it’s in this language or learning a new language, and that’s really proved to be true… And there will be people who can help you, but you’ve also just got to be able to figure it out. Being able to adapt is definitely a valuable skill set! So after you graduated from Galvanize, what did your job search look like? I accepted this job on our presentation day. I started applying for jobs halfway through the program, at three months… I kind of had a general sense of the kind of job I would want, so I started looking for those and applying. There were some Galvanize alumni who came in and spoke to the class, and they kept a list of everyone who’d come and spoken and where they worked. So part of my job search was I just went to that list and started looking at the companies and going to see if those companies had jobs available. One of them had a job available that was a junior- to mid-level Java programmer… And I’d done a bit of Java, so I applied to this job. I contacted the Alumni person, and he referred me, so I got a call from the Senior Engineering Manager for the team… In the end I didn’t get that job, but he [suggested some skills I’d need to get] a contract. Now I had a road map… For my final project, the application itself was not that much more complex than anything else we’ve done, but the architecture was much more complex. It used [the skills the Engineering Manager recommended], so when I applied for the job I have at Fanatics, a couple months later one of my co-workers said, “you know we almost thought that you had been coached on buzzwords to say because you had everything we were looking for…” So I had the job on graduation day, and I sort of stepped into a mid-level position… I was able to convince them to take me on into that because three months earlier someone had said “if you want this kind of position, you need these things. ” And the only reason I had the courage to start applying for those jobs is that our career counselor said to work on your resume early, apply to jobs early. it wasn’t my own idea… Those of us who were really proactive about that got hired early… So the career counseling that they had was good. It was a worthwhile investment because I think my tuition to the program after that discount ended up being nineteen thousand dollars, and then of course there’s the interest of the loan over time, but I ended up coming out making twenty thousand dollars more than the vice principal job I had left, into my first job. So it was worth it. It essentially paid for itself. “ I ended up coming out making twenty thousand dollars more than the vice principal job I had left, into my first job. So it was worth it. It essentially paid for itself. ” Circling back to the payment of the program then, when you were applying and seeing how much tuition was, what made you decide to get a loan from Climb? Well I think you were the official partner, but it’s also both ways — in trying to explore this market of boot camps and stuff, I think that part of choosing Galvanize was some marketing from Climb, which was that you guys only make money if we all get jobs. And you know I must have read at least seven or eight articles about the market of all these boot camps…and there was something that I was reading about Climb, that you only provided loans for these boot camps on the premise of these are the ones that have the highest job placement. I picked Climb because you guys [finance] for Galvanize, but the other piece of it was I chose Galvanize partially because you guys were choosy lenders, and one of the places you chose to lend for was Galvanize. Do you think you would have been able to pursue your education at Galvanize without financing? No, not at all. We just had a kid. We were both teachers, so that had burned through all of our savings. I mean I had to get the $2, 000 down payment for Galvanized floated from my parents until the tax return came in April. So without the financing it would have been impossible. And finally, if you could go back and give yourself any advice while applying, what would that be? I think just taking time… I was doing the take-home code exercise for Galvanize, as I was doing the Codecademy course [at the same time]… It was really frustrating because I didn’t know enough, so I would bang my head against the wall for three hours on the take-home thing, and then I’d do another level of the Codecademy course and go “oh hey, this would be really useful. There’s the kind of thing I need here…” It’s a lesson that continues: even in my work now, just slow down and go back to doing the simple thing or really learning the thing you need to do, instead of just diving right in and trying to slam through something that you may not be fully prepared for. “ I picked Climb because you guys [finance] for Galvanize, but the other piece of it was I chose Galvanize partially because you guys were choosy lenders, and one of the places you chose to lend for was Galvanize. ” Want to see more of David’s work? Check him out online at these links! Git Hub Linked In Medium Twitter Originally published at blog. climbcredit. com on December 8, 2017. Climb Investco, L L C ( Registered as Climb Credit Investco, L L C in Florida). California Finance Lender #60 D B O-44527. N M L S Consumer Access ( N M L S# 1240013). All outcomes information has been collected by Climb on a good-faith-efforts basis, however, this information relies on inputs beyond Climb’s ability to test or control. Accordingly, Climb makes no representation or warranty as to the accuracy of this information and this information should not be relied on in making a decision whether or not to attend a course at the above-referenced entity. Schools do not endorse loans originated by Climb Invest Co, L L C, and Climb Invest Co, L L C is not affiliated with any school.","['Education', 'Coding', 'Codingbootcamp', 'Careers', 'Career Change']",https://medium.com/@climbcredit/career-transformation-how-a-12-week-program-and-a-climb-loan-led-to-a-20k-pay-increase-45bd9019e2a8,9,['Galvanize'],1,2,climb,Unknown,Unknown,Unknown
David Armour,Aspiring web developer,Coding Bootcamp — First Project – David Armour – Medium,2018-09-09 10:38:21,medium,"Coding Bootcamp — First Project Ruby Terminal Game The third week of my coding bootcamp I was given the challenge of creating a terminal app from scratch. This was to be completed in groups of 2 using a process called pair programming which I would highly recommend. Here is a good article if you wish to know more about it. https://medium. freecodecamp. org/the-benefits-and-pitfalls-of-pair-programming-in-the-workplace-e68c3ed3c81fpair programming = less mistakes The first step of the design process was to brainstorm ideas for what we could create in the very limited time frame (2 days). After coming up with an idea we then had to plan out the features by constructing user stories. We decided on which features would be part of the M V P and what would be our stretch goals. A Trello board was used to keep track of our progress. The assignment also required a large amount of documentation so we needed to make sure that we took that into account when creating our project timeline. The idea we came up with was creating a basic game out of a random maze generator. I was very excited to make this game as it would allow me to put into practice what I had been learning in class. I have always had much greater success when I have taken a practical approach to my learning and this project helped tremendously. The game would also require learning and using concepts that had not been covered in class and that I had only brief prior experience with. The maze creation algorithm takes advantage of a computer science principle called recursion. This was highly challenging and we had to overcome many bugs during the creation of our app. A simple mistake while using recursion can be quite hard to debug. I found it quite beneficial to run through my program 1 step at a time to help figure out where the problem occurred. The completion of this assignment was very rewarding and seeing something you have created slowly take shape kept me motivated throughout the project. The tight deadline of this project forced us to set realistic goals, although I plan on adding extra features when I get time. Feel free to give my game a try, I will paste the Git Hub link below:dav-armour/random-maze-game Ruby terminal app that uses a randomly generated maze in a game - dav-armour/random-maze-gamegithub. com Next week we are moving on to H T M L, C S S and web design. I have always considered myself not to be the greatest designer so it will be interesting how much I can improve my skills in this area. I believe if you maintain a growth mindset anything is possible with enough practice.","['Programming', 'Ruby', 'Codingbootcamp', 'Coding']",https://medium.com/@dav.armour/coding-bootcamp-first-project-c3e8840e397,0,[],0,1,david,M,0.0035582779766708743,0.9964417220233291
Jacob Moore,,Day Three — CSS – Jacob Moore – Medium,2017-07-19 15:14:34,medium,"Day Three — C S S Our homework assignment was to create three html pages connected via links with a set of text for each. Fortunately the group activity we did a couple hours before was nearly identical but slightly more advanced. I finished it in pretty quick fashion. That being said one of the sites that I had to build bugs me. Creating a table in H T M L is super painful to build row by row, cell by cell. Its not hard but time consuming with a single monitor. I understood it all and did it in a timely fashion but hated every second of that. Makes me want to know how to get data in faster from another source. So I guess that’s the saving grace right? Our lessons to review last night were about C S S. Again…really blessed to have taken the Web Development Basics course previously. I, and a few others, have a bit of a head start on these topics. The following were my takeaways: Struggles: Continuous instructions in declaration. In C S S you can do all the content in the same row in the declaration instead of breaking into parts. I’m sure I might go that route once I get farther. Understood: Display. Block, Inline, and Inline- Block. This I learned in the Web Dev. Basics class. I get the basics behind it all. Block is vertical, Inline allows for horizontal, and Inline- Block allows horizontal and for custom height/weight dependent on margins. This is a super simplistic way of explaining it. There’s more to it. Looking forward to: Using C S S and H T M L. Right now it’s separated so I’m looking forward to applying these two into one here soon.",['Codingbootcamp'],https://medium.com/@jacob.w.moore/day-three-css-199a62dd16a2,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Kingsland - School of Blockchain,The world's first accredited school for blockchain development - Learn more at www.kingslanduniversity.com,Bootcamp Bust: Why Coding Camps Fail – Kingsland - School of Blockchain – Medium,2018-03-20 23:35:46,medium,"Bootcamp Bust: Why Coding Camps Fail Author: Jason King As blockchain-driven projects becomes more and more popular and the going rates for experienced blockchain engineers experienced rise, there’s a new group of businesses hoping to tap into the hot cryptocurrency market: coding schools and “bootcamps. ” These almost entirely privately run businesses are springing up around the world with the promise of training developers for the lucrative blockchain market. Invest anywhere from a weekend to a few months’ intense study, pony up somewhere between $500 and $5000, and you, too, can cash in on the blockchain boom. These courses promise to help you “master” cryptotechnology concepts such as blockchain networks, bitcoin mining & security, and multichain, and “have a deep insight into bitcoin and its network. ” But what remains to be seen is whether coding camps are the answers to the skill gap. While they intend to solve the supply problem, they bring their own issues. Just a few of the potential problems associated with coding camps: There’s no standardization. Mark Dinan, a Silicon Valley recruiter, has called bootcamps “a freaking joke. ” Because each school creates its own curriculum, you can’t compare what one coder learns in a six-week bootcamp to what’s offered in a crash weekend course. This makes it difficult for a hiring manager to determine if any particular bootcamp or course has taught the skills needed for the project they’re hiring for. They often teach the wrong things, or don’t go deep enough. While it’s great to get an overview of cryptocurrency and “understand the basics of blockchain, ” that’s not going to help an engineer take on a multi-million dollar, mission-critical project with potentially global impact. Maggie Johnson, Google’s director of education and university relations, released a statement saying “… Most graduates from these programs are not quite prepared for software engineering roles at Google without additional training or previous programming roles in the industry. ” The instructors aren’t usually experienced teachers. They may be able to code, but they don’t necessarily know how to teach. Basel Farag, a Tech Beacon contributor and i O S developer with experience as a bootcamp mentor, admits that finding good teachers is hard, and that many programs fill positions with less-experienced developers. As a result, blockchain coding boot camps are both “buyer beware” and “hirer beware. ” Students can’t be certain they’ll develop the skills they need to be successful in the workplace. Likewise, organizations can’t be sure they’ll get the skills they need for their cutting-edge blockchain projects. While some traditional universities, such as Stanford, M I T, and the University of Edinburgh in Scotland are rolling out cryptotechnology classes, these aren’t developer-specific training programs. There’s a huge need to address the skills shortage now, and that’s where Kingsland University — School of Blockchain comes in. Kingsland University — School of Blockchain is the first and only accredited blockchain training program in the world. Kingsland centralizes both the education and recruitment of blockchain and other coding professionals. With nearly a decade of experience delivering high-quality, award-winning programs, Kingsland is poised to transform the blockchain training sector by providing much needed standardization, experienced teachers and an industry-driven curriculum that’s been designed and developed by world-leading blockchain engineers. *** Jason King is a Humanitarian Hacker, feeding the hungry as the Executive Director of Unsung. org. Known for running across the country to raise bitcoin for the homeless in 2014, King is a long-standing member of the crypto community and continues to solve to the sector’s most pressing problems as Co- Founder of Kingsland University — School of Blockchain, the world’s first university-accredited blockchain training program. Find out more about Kingsland’s leading-edge education at Kingsland University. com","['Programming', 'Blockchain', 'Developer Shortage', 'Academy', 'Coding Bootcamp']",https://medium.com/@kingsland/bootcamp-bust-why-coding-camps-fail-a9f8c4124d00,3,[],0,80,kingsland,Unknown,Unknown,Unknown
Code Platoon,"We transform #Veterans into software developers through an immersive, hands-on, educational process. Learn more and apply today! http://bit.ly/jointheplatoon",Student Story: Code Platoon experience gives Computer Science grad more confidence in tech skills,2018-04-02 00:00:00,medium,"Student Story: Code Platoon experience gives Computer Science grad more confidence in tech skills The following is from Leanne Keene, a student in the Echo cohort When I finished grad school last year, I still felt like I was missing some critical piece of knowledge. I knew I would be qualified for jobs in the software industry because of my computer science degree, and maybe I would even squeak through the interview process, but what would happen when I showed up for my first day at work and didn’t know how to do anything? Sure, I understood software engineering conceptually, but I had no confidence and none of the practical knowledge needed. Code Platoon was the perfect solution. It was affordable, taught the hands-on skills I was lacking, and was specifically designed for veterans. As I browsed the website, I saw that Code Platoon graduates had the same military background as I did, down to the same specific job! I knew then that I didn’t have to be intimidated because my fellow classmates would not be people who have been coding for years, but veterans like me who are trying to find their footing in the civilian job market. I made some sacrifices to attend, both financial and social, and I would do it all over again. The dedication required to complete this intensive program is absolutely worth it. I learned so much over the course of the program. The experience and confidence that comes from coding and building software every day is empowering. Seeing your progress with the very tangible example of daily exercises affirms that tackling new languages and frameworks is a skill that you will be able to carry with you into the workforce. While interviews may always be intimidating, knowing that Code Platoon has prepared you for the challenges in the interview and beyond is a great feeling. The greatest benefit I gained from my time at Code Platoon, even more than the knowledge, is the supportive network of which I have become apart. I know I can reach out to anyone in the organization, as well as the growing number of alumni, for help or advice and they are all there to support me. I’m excited to join this strong group of veterans as I start my first job. Maybe I’ll volunteer to be a mentor or a tutor for the program. Either way, future Code Platoon cohorts, I’m rooting for you. Keene accepted a job as a software engineer at Novetta, an advanced-analytics firm, shortly before finishing Code Platoon. Originally published at www. codeplatoon. org on April 2, 2018.","['Programming', 'Veterans', 'Codingbootcamp', 'Coding', 'Software Development']",https://medium.com/@codeplatoon/student-story-code-platoon-experience-gives-computer-science-grad-more-confidence-in-tech-skills-8bb87798f461,2,['Code Platoon'],1,0,code,Unknown,Unknown,Unknown
Maayan Orit Bobylev,,New Girl on the Bloc – Maayan Orit Bobylev – Medium,2018-05-01 17:54:40,medium,"New Girl on the Bloc My Coding Journey (part 1) If you would have told me a year ago that I would be learning to code and ramping up to pursue a career in tech… I would have laughed. Seriously. So how does an Orthodox Jewish stay-at-home mom of three get into coding? Here is my story: Growing up, I had the great privilege of homeschooling. From a very young age, my parents successfully instilled in me a life-long love of learning and reading. I was always surrounded by good books, hands-on learning opportunities, encouraged to pursue answers to my questions and given the permission to study topics of interest to me. The one thing I didn’t have growing up were female role models in tech or much exposure to programming (granted, that was before the dawn of social media and the Internet was still “newish. ”) I loved science but hated math, which I thought excluded me from most jobs in the S T E M field. My heavily literature based curriculum and award-winning high school teacher, Mrs. Susan Coy, inspired me to pursue a liberal arts major. My dream was to one day teach history at the collegiate level while participating in archeological research. ( In other words, I have always been a bit of a nerd. ) The influential women in my life were all homemakers. Deep down, I knew that I wanted to be a wife and mom one day. So as per usual, life happened. My plans to study at the Hebrew University and become a historian/archeologist were derailed when I met a cute Russian guy and got married really young. While married, I obtained my associate’s degree from my local community college. I had hoped to go on to a four-year university but by this time I had been married a few years. My options were student loans or a baby. I chose baby. Best decision ever! In July of 2011, I quit my full-time office job and became a stay-at-home mom to my little girl, Oriyah (aka Ori bug. ) The first few years of motherhood were blissful. On July 4th, 2013, almost two years to the day, our baby boy was born. Noach Alexander was a whopping 9lbs 11oz! He was the easiest baby and a reminder of the cycle of life as his birth followed the passing of my closest relative. In the few years that followed Noach’s birth… a lot of life happened. We bought our first house. Decided to start attending an Orthodox synagogue. Became observant. Sold our first house to move into the community. Moved into a dumpy two-bedroom apartment (still there)! Decided to send our kids to an Orthodox private school to give them the Jewish education we didn’t have growing up. ($$$) Started working odd jobs to make ends meet. Realized I want to do more than odd jobs — coupled with the realization that I didn’t have a lot of promising job prospects despite being an intelligent person — followed by a mini-midlife crisis/freak-out. Learned I am an I N T J (more on that in another post) and started researching career options for my personality type. Got married again… this time under a beautiful chuppah. Got pregnant with #3 right way. ( Surprise!) On November 21st, 2017, I had the sweetest tiniest little boy, Shlomo Meir. He has been the perfect addition to our family. As a family of five, growing tuition costs, and itching to get back into a house, the pressure to get a J. O. B. has been pretty high. I knew that programming made a lot of sense for my personality, I could learn largely online, and potentially make an amazing income in web and software development. Careers in tech are also highly conducive to flexible schedules and remote work — which as a mom and Orthodox Jew are extremely important to me! Not to mention, it is super rewarding to engage both my analytical and creative sides and build something of impact. Programming became an increasingly obvious fit except for the fact that I didn’t know what the heck I was doing and I felt like a total imposter for even googling — “how to code, ” “how to start a career as a front-end web developer, ” and “programming jobs. ” However, determined to change the course of my family’s future and establish a fulfilling career, as soon as we brought baby home, I turned every feeding session into a learning session. Through You Tube, I found success stories of other self-taught programmers, Q A panels of boot camp grads, women in tech interviews and T E Dx talks. I began dabbling on free coding sites like Codecademy, The Odin Project, W3schools, and Freecodecamp. To my surprise, I found coding fun! It spoke to my split personality — I am pretty evenly logical and creative. I began connecting with other moms in tech via an amazing group called Moms Can: Code. Seeing other moms learning hard skills, landing hot in-demand jobs, and establishing family-friendly careers that allowed them to focus on their kids was the catalyst I needed to take the next step which for me was: enrolling in { Bloc’s} online web development boot camp! My cohort starts May 7th, 2018! So there you have it, “ I am the new girl on the Bloc. ” I am a mix of excited and nervous, as I know the journey will be just as demanding as it is rewarding. Overall though, I am thankful for this opportunity to expand my horizons, connect with innovators, and become a role model for other moms reentering the workforce and pursuing careers in tech. I will be sharing my journey! Check back to read my updates about mom life, coding, boot camp, and personal development.","['Coding', 'Careers', 'Women In Tech', 'Codingbootcamp', 'Personal Development']",https://medium.com/@maayanoritbobylev/new-girl-on-the-bloc-b79309c0ccc8,4,[],0,80,maayan,F,0.9775051124744376,0.022494887525562373
Shoshana Rosenfield,Software Engineer student at the Grace Hopper program at Fullstack Academy,Here We Go… – Shoshana Rosenfield – Medium,2018-05-27 19:29:40,medium,"Here We Go… I told myself that I could never blog, but here we go…growing up in a ballet studio I did not expect to end up working at a bank or learning how to code. Life has seemingly thrown me surprises. Or perhaps I’ve pursued these surprises. Trying to understand the overlapping theme between these three radically different careers of ballet, finance and now coding… I think the answer is puzzles! Puzzles in ballet were the steps and choreography. What was the order of the steps? How did they fit into the music? What were the counts? If it was Tchaikovsky, you could safely assume the musical counts for the choreography would be even counts. Either sets of 8s. Or 4s. But with Stravinsky, it could a 13 or a 9 and you move on the 7th count within the phrase of 9 counts. You better keep counting or you’ll be sunk! Performing to Stravinsky was one of the most exciting experiences that I had at New York City Ballet, for the challenge lay in these counts. In these puzzle pieces. Puzzles followed me into finance where I worked on a business strategy team. There, the puzzles involved more numbers. Perhaps in excel. Figuring out why the formula was returning a # N/ A or # V A L U E! error was a near-daily event. Similar to learning ballet steps, attention to detail was key. In ballet, not only did you need to know the order of the steps but you also needed to know the exact position of the head and arms during those steps. Similarly, in excel, even if the logic for the formula is correct, if you forget a comma or a parentheses, excel sends you back an error. It was always a treasure hunt to find the missing or misplaced syntax. Deciding that it was time to make a change, I started playing around with coding. I took a couple of online courses and in-person evening courses, while dancing during the day. I could return to the ballet studio and still find time to incorporate a new type of puzzle into my life. I found that these coding puzzles were fun, exciting — yes, frustrating at times when my code did not work, but ultimately (when I figured it out) exhilarating and addicting! After finishing the in-person evening course, I applied for the Grace Hopper bootcamp program at Fullstack Academy of Code. I was accepted for the April cohort, which coincided perfectly with the end of a ballet gig. This week, we began the final week of Foundations, the initial, month-long, virtual part of the program. These first few weeks of the program allowed us to continue sharpening our Java Script skills specifically on topics such as higher order functions, recursion, closure as well as begin working with H T M L, C S S and j Query. For the most part, this was brand new material for me. My days were spent pouring over the lecture videos, taking notes, going through the problems, rewatching the videos, redo-ing the problems, desperately trying to understand why some test specs were still failing… To keep sane, I sprinkled in some ballet classes. Though, I often found my brain still working on a coding problem while doing a barre combination. This final week before we start the immersive, I’m focusing on continuing to solidify the concepts introduced during Foundations through Code War problems, online videos and starting to build my own website from scratch! Baby steps, and hopefully it will come together. More to come as we start the full-time immersive! In Rehearsal for New Chamber Ballet; Photo Credit: Philip Gardner","['Programming', 'Ballet', 'JavaScript', 'Codingbootcamp']",https://medium.com/@shoshanarosenfield/here-we-go-9d9cc10c1fe0,0,['Fullstack Academy'],1,1,shoshana,F,1.0,0.0
Charles Clemens,,Learning Journal — Day 1 – Charles Clemens – Medium,2018-09-12 02:35:08,medium,"Learning Journal — Day 1 Prompt Consider the following quote:“[ Adult learners] are deeply involved not only in planning, but also in evaluating their learning, as they know what knowledge they want to acquire. ” In other words, you should continuously evaluate your learning, and your learning journal is an excellent way to keep track of that. How do you see yourself planning and evaluating your learning? What details will you record and/or measure? How often will you evaluate what you want to learn? As I complete my second day at Code Fellows, a coding bootcamp in Seattle, W A, I realize that a slough information presented during the lecture portion was that I recognizable from my days of solo-learning web development. How to structure H T M L; how to access those H T M L elements in C S S; how to write Java Script in a separate file and link it to the H T M L file. These were things that made sense to me but when I tried to implement a relatively simple site for the day’s lab assignment (albeit a bit more complex than the assignment required), I struggled quite a bit. More specifically, I wasn’t receiving the expected response from an if statement inside of a for loop. After a few minutes of struggling, I thought back to something that John, the instructor, mentioned earlier that day. He explained recognizing syntax and concepts does not necessarily equal understanding. I was hit hard by the realization that while I recognized and regurgitated the concepts with relative ease, I did not fully understand what I was doing or why. My actual level of proficiency was much lower than what I perceived it to be. A depressing thought at first, but extremely liberating thereafter. I realized that I do not need to put pressure on myself to produce amazing lab assignments that go above and beyond the requirements. If I could already do that with ease, then my enrollment with Code Fellows may not have been necessary at all. The realization is key for me because it allows an honest look at where I am and where I would like to be. Planning and evaluating my learning is now very simple: Complete the lab assignment as directed. This means following the directions word for word. This guarantees that I complete the assignment in a timely manner without worry about turning them in late because I couldn’t figure out how to implement an extra feature. Refactor the lab assignment. Once the original assignment has been submitted, take some extra time to implement those features and concepts that will make the code better or more interesting. Follow these steps and I will notice that over time much of the tools implemented in the refactor stage will eventually become a part of the standard toolset, which is a legitimate indication of understanding. In the meantime, the items that I struggled with will be recorded in the learning journal so that I can verify over time that that concepts are being internalized. The learning journal helps with internalization and identification of items that I really want to learn as well. A trend of struggling with loops, for instance, signifies a concept that I want to pay extra attention to. I will look for these sorts of trends weekly.","['Web Development', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@cclemensjr/learning-journal-day-1-d35617fa72a7,0,['Code Fellows'],1,0,charles,M,0.005172083839041249,0.9948279161609588
Meryem Yanar,I’m a full-stack JavaScript web developer based in Turkey. I’m currently seeking opportunities as a back-end or full-stack developer.,Sink or Code: When Learning is a Matter of Survival,2017-05-03 11:30:20,medium,"Sink or Code: When Learning is a Matter of Survival Photo credit: Li Yang at Unsplash. https://unsplash. com/@ly0ns?photo=_v P Ciu X L2 H E I’ve been in what some people I know have called “survival mode” for the better part of three years now. In survival mode, life is stripped down to bare. There are no hobbies. There are no daydreams. There are no “first world problems” or complaints about the local Starbucks. In survival mode, there is only a desperate, animal drive to make it to the next day. To the next minute. To the next breath. As you might imagine, existing in survival mode is exhausting. After a series of massive upheavals to my life and everything I had planned and hoped it might one day be, I found myself at a turning point. Here I was, a dropout from academia, a homesick immigrant, a single mother with a young child depending on me and only me. I had no marketable skills. I had spent most of my adult life studying the esoteric and the arcane, perfecting my abstract-writing skills, researching people and places that no employer seemed to care about. How was I going to support myself and my daughter like this? But remember, I’m in survival mode. In survival mode, anything goes. Just make it to the next day, and the next, and the next. Just keep going. I floundered for a few months, splashing and coughing and almost but just not quite drowning. Digital marketing? Medical transcription? Teaching a foreign language online? I wanted an end to the struggle. I wanted a job where I could not just get by but get ahead, where getting work done required not turning my brain off but turning it on. I wanted to think. I wanted to solve problems. I wanted a future. In February of this year, I made up my mind: I wanted to be a programmer. I was good at programming in high school. I had dabbled with it off and on after college. But I never considered doing it professionally — not until it offered me the promise of a way out of survival mode. I started with Codecademy and with all the free resources I could get my desperate hands on. I reviewed loops, logic, algorithms. I let out a “ Hello World” countless times, in Python, in Java Script, in H T M L, in C++. I made endless “ About Me” web pages that never saw the light of day. I worked my way through the free curriculum at Viking Code School, the Flatiron School, and Skillcrush. Finally, I made my way to Thinkful. On April 25, 2017, I officially started as a Thinkful student. I had spent the two or three weeks before that date working my way through the entirety of the introductory curriculum. I’m currently banging my head against the wall of Java Script, which is unlike any programming language I’ve ever encountered. Sometimes I want to go running back to Python, where things actually seem to make sense, but at Thinkful, I have a mentor I meet with three times a week and a community on Slack to help me make my way through. And all the while, that survival mode voice is whisper-screaming at me: Get this sh** done! Figure it out! Make it happen! Time to get this sh** done. Back to coding. Over and out.","['Programming', 'Single Moms', 'Learning To Code', 'Survival', 'Codingbootcamp']",https://medium.com/@meryem.yanar/sink-or-code-when-learning-is-a-matter-of-survival-d8336d833eff,1,['Flatiron School'],1,1,meryem,F,1.0,0.0
Fullstack Academy,"The world’s top ranked immersive software engineering school, based in NYC and Chicago. New courses start every 7 weeks. Y Combinator backed.",Early Coding School Dev Bootcamp Shuts Down — What Comes Next,2017-07-13 17:51:36,medium,"Early Coding School Dev Bootcamp Shuts Down — What Comes Next One of the original coding bootcamps, Dev Bootcamp, announced today that it would be closing down later this year and not starting any new cohorts after this month. The news comes as a shock to some in the coding school space, especially enrolled D B C students. To those students, I’d say that your decision to do a coding bootcamp is still a smart move. If you’re confused about how to proceed with your coding education feel free to reach out to me at david+dbc@fullstackacademy. com. We will do what we can to accelerate our admissions process for you to minimize the interruption in your education. It is worthwhile to reflect on the incredible number of lives that Dev Bootcamp has touched throughout the last five years. Shereef Bishay, Dave Hoover, and Jesse Farmer were early pioneers and believers of rapid tech career acceleration, and I’m confident there are many alumni of Dev Bootcamp who would say they owe their current success to the hard work of their D B C instructors and cohort mates. Several founders of other bootcamps like Hack Reactor, App Academy and Hack Bright started out as students at Dev Bootcamp and were inspired by their time as students. While the shutdown of a major company in an industry can be concerning, industry watchers should be careful to separate what’s happening amongst coding bootcamps versus what happened specifically at Dev Bootcamp. Dev Bootcamp was acquired by Kaplan in 2014, and a few months ago — when Kaplan sold “ Kaplan University” to Purdue University — there was some expectation that they were consolidating the remaining efforts around their core offerings (which D B C was not part of). It reminds me of when I B M, an early leader in the P C industry, decided to punt on operating systems — it wasn’t core to their business at that time, and it did not reflect the health of the companies that grew from it (including Microsoft and Apple). At Fullstack, we are committed to and excited for coding bootcamps as an educational offering in the future. As I wrote back in September of 2016 about the coding bootcamp hype cycle, as coding bootcamps enter “the Plateau of Productivity” we should expect to see consolidation as “the weaker hands” close up shop or merge with healthier companies. For coding bootcamps that continue to focus on the Five Cs — Career Outcomes, Curriculum, Coaching, Community and Commitment — the road ahead looks healthy and wide open. Our goal in co-founding the Council on Integrity in Results Reporting (cirr. org) was to help students identify schools that stay true to that vision. The schools dedicated to that promise continue to offer an amazing return on investment to students and fulfill the insatiable need for software development skills.","['Devbootcamp', 'Programming', 'Codingbootcamp', 'Coding', 'Software Development']",https://medium.com/@FullstackAcademy/early-coding-school-dev-bootcamp-shuts-down-what-comes-next-299a97159fae,4,"['Dev Bootcamp', 'Hack Reactor', 'App Academy']",3,0,fullstack,Unknown,Unknown,Unknown
Ryan Boris,"Former Chemistry Professor, Full-Stack Developer in Progress, Molecular Gastronomy Foodie, Algorithm Obsessed, AI curious,SciTech Nerd, and Friend to all Cats.",The Developing Developer: Entry[0] – Ryan Boris – Medium,2018-04-05 23:08:07,medium,"The Developing Developer: Entry[0] More Than Just a Cute “ Caterpillar Monster” or “ That Dude with the Big Nose Looking Over a Wall” Meme… When did I go from learning cute, fun for loops in Java Script to the matrix of the mind, otherwise known as Regular Expressions? I’ll never forget the first time I saw it, because quite frankly it looked utterly ridiculous — half caterpillar, half crinkle-cut french fry — it was like no other type of syntax I’ve seen before. That, my friends, turns out to be a wonderfully powerful syntax despite its goofy, undulating, and eerie resemblance to an entire library being nuked. For those of you that have yet to puts a greeting to Regex’s console, so to speak, get ready because you are about to be forced to gaze upon its intriguing, and mystifying styling:""^\(*\d{3}\)*( |-)*\d{3}( |-)*\d{4}$"" I bet you don’t even realize that I just validated your phone number. No, seriously, I did — and just like any language, Regular Expressions have their own symbolism, which in turn has some meaning, which furthermore can be processed together into more and more complex instructions. It turns out, all the D O M is a stage and every, well, space consuming item — even if its empty, is a character. But I digress, because even though the initial tone of this may seem silly, the use and importance of regular expressions is anything but — and their powers of search and replace, just represent a small fraction of what they can do, have done, and will do in the future of our technology. Our daily interactions with technology rely on them, and considering the information theory aspect, searching and locating matching segments of information is, well, kind of a hallmark of our species. It’s how our brain understands, or tries to understand, the infinite world in our limits of finite space and finite time. Seeking similarities is encoded in us, so to speak, and we have through our evolution and creation of artifiical intelligence, have found a way to emulate this process with machines; and the quality of our lives and direction of our amusement as a species surely have evolved with it. So, take a deep breath, and give regular expressions a chance. At first, they are daunting, nonsensical, and downright damn weird — but then again, isn’t anything we encounter that represents new information often perceived in this manner?","['Regular Expressions', 'Code Newbie', 'Codingbootcamp', 'Coding', 'Code']",https://medium.com/@ryanboris/the-developing-developer-entry-0-8bc1f153ecae,0,[],0,15,ryan,M,0.024172097739259983,0.97582790226074
Daniel Park,"Don't mind me, just stumbling and hair-pulling my way up the tech industry.","The before, during, and after a coding bootcamp. – Daniel Park – Medium",2018-03-08 23:50:04,medium,"The before, during, and after a coding bootcamp. Insights of a bootcamp forged engineer. Both aspiring developers and boot camp graduates have asked me questions about the steps I took to get to my current position. Typically, people interested in attending ask questions along the lines of whether boot camps are worth it and how to prepare for them. Graduates ask for advice on how to become good enough to land their first jobs. The honest truth? I don’t know. I don’t know because as with everything in life, things work out different for everyone. You could do things in the same way I did and land light years ahead or miles behind. I don’t know because with a little over two years of experience under my belt at the time of writing this post, I’d be lying to you and myself if I said I had all the answers. I can, however, provide a level of transparency and honesty while sharing my opinions and providing a little bit of insight on a couple of topics. Keep in mind; this post is subjective. I’ve worked hard, but I’ve been lucky as well. So, no results guaranteed 😬. Are boot camps worth it? My answer? Yes! Boot camps are growing in popularity, possibly because of the high post-graduate employment rates they claim or the “don’t pay until you get a job” clause they attach to their marketing emails. When you’re deciding on whether or not to drop $10, 000+ (yes, they are expensive), try not to pay attention to the self-promotions. These are companies selling a product, and you are a consumer. These are marketing strategies formulated to entice, so it’s imperative you don’t base your decisions based off of a Google search! So let’s talk about why boot camps are worth all that cash. Money, time, and R O I. I attended C S U Long Beach, and currently tuition for four years of undergraduate education, without living in the dorms, is $27, 192. But more and more people are taking five years to graduate so, tack on another year’s worth of tuition. College can take up to 5 years to get an undergraduate degree; boot camps are usually 3 to 6 months. Time is money! With boot camps, you focus on what you want to learn and nothing else, which means you don’t pay for those Art History classes. No offense to Art History majors! You get out as much as you put in. When you pay the cost of tuition, you’re investing in yourself, and the return on that investment will multiply by how hard you work. In my opinion, that’s a level of control that college classes don’t provide. How do I prepare for a boot camp? I can’t stress how important I think this topic is for potential students because I wish I had thought about this more. 😢 Find your “why. ” Boot camps are rigorous, and they’re designed to test your physical and mental capabilities. Having a proper motivator is the only thing that will get you through a boot camp. Whether you want to change careers or make more money, some preliminary introspection to figure out your “why” will help you power through the exhausting 12 hour days. Prepare for the burnout. To be honest with you, I burnt out. There were days where I wish I never started and days I wanted to quit. There were days I said “screw this” and hung out with friends. When placed in a high-stress environment it’s normal to feel these emotions. But rather than let the stress and exhaustion dictate your performance, prepare for these emotions, understand that its okay, and develop the mental fortitude to deal with them when they come. Plan for financial emergencies. Life doesn’t stop for anyone. Accidents and emergencies happen to everyone, and keeping your stress levels to a minimum is paramount when it comes to your success. You need to focus on the curriculum, projects, and studying, not money issues, so have enough financial cushion to offset that stress. Landing your first job. If you’re reading this chances are you’re a boot camp or college graduate just entering the job market. I’ll try my best to share some things I believe are crucial when trying to land your first job, along with some book recommendations and links that’ll help you get there. Also, congratulations 🎉! Your portfolio site. If you don’t have a portfolio site, make this your priority; it shows that you’re serious about what you do. A portfolio site will establish your web presence and showcase your talents as a developer, so, take time to make it look elegant. It’s also important to make sure to install an S S L certificate as well and get that H T T P S protocol going. Quality over quantity. Have one or two fully-functioning and responsive applications that demonstrate your skills as a developer on your site. Leave out unfinished, bug-riddled projects that look like they’re from the 90’s 😁. For front-end frameworks, be decent at one or maybe two instead of being mediocre at four or five. If you’re looking for some of the popular ones, you’re just a Google search away. But since you’re here: Github Stars React J S, Angular J S, and Vue J S are some of the modern and trending frameworks that are in high demand. I use React J S for the majority of my projects, but I’d recommend doing some research and finding one that you think would be fun. For those geared towards back-end development, know at least one or two server-side scripting languages and be competent at both, Node J S, P H P, and Python are all excellent choices. Understand foundational concepts. I think this will help T H E most when looking for a job, so take your time and read through carefully! Landing your first job depends on your ability to set yourself apart from the rest of the application pool. Demonstrating a deep understanding of core principles will help you achieve that. For example, here are a couple of Java Script concepts that are essential to know. Prototypal Inheritance Execution Contexts Lexical Environments Coercion Recursion Callbacks Promises Companies are looking for specific characteristics when interviewing junior developers. It’s crucial that you demonstrate a high-level of aptitude and an impressive learning capacity during your interviews by being able to explain development concepts explicitly. “ Secrets of the Java Script Ninja” was the first book I read when trying to improve my J S skills. Not only is the content amazing, but junior developers will benefit from the author’s ability to simplify advanced concepts down into layman’s terms as well. For those struggling with understanding server-side and front-end frameworks, you have to realize that all of them are built using native programming languages. To get better at any framework, a firm grasp of the underlying principles and concepts of the language itself is the best solution. This is also the reason why it can be challenging to learn new frameworks at the beginning of your career, and why I think there are better ways to invest your time. There are so many things you need to study and digest, and there just isn’t enough time to learn everything when you’re starting out your career. Algorithms. This is something I’m striving to be more religious about, but make a habit of dedicating at least an hour a day practicing algorithms in the language of your choice. It’s highly unlikely you’ll land a job if you can’t traverse arrays and mutate data, and even if you do, you probably won’t keep it long! So practice, practice, practice. Git good at git. Git is by far the most widely used version control system in the world today, and it doesn’t matter what type of development you’re doing. If you’re writing code, you’re going to be using some modern version control software. When you’re pushing to the same repositories as 10 to 20 people, a proper workflow is crucial when it comes to keeping working directories and repositories clean, and preventing overwrites. There are obviously a lot more reasons why Git is so crucial, but that’ll be its own article to read later on. Get comfortable working with Git through the command line and stay away from G U I’s for now. G U I’s are visual solutions to make version control a little more comfortable for the developer, but it is essential you’re able to do everything a G U I can on using the C L I before you start relying on them too heavily. Here’s a link to a very well-written book, “ Git Pro, ” that explains Git extensively and a link to some excellent documentation. Both have awesome visual representations about key concepts for the visual learner as well. Drop the ego. Yes Daniel, drop the ego. 🤦🏻 This is something I struggle with on a day to day, and maybe some of you do as well. I am 100% confident you are all incredibly smart and talented individuals, but being humble about your successes and being open-minded about the opinions of others will shape you to be a functioning team member and stronger problem solver. Conclusion. It’s my sincerest hope that this article provides some answers and insight into critical topics. Remember, this post is consists of points that I think will be helpful to those just starting out their careers. There will always be differing opinions, but keep in mind that this post was written to educate, not start a debate. I hope this was a good read, and I wish everyone the best of luck on their endevors (pun intended). Happy Hacking! ✌🏻","['Web Development', 'Coding', 'Programming', 'Codingbootcamp', 'Software Development']",https://medium.com/@endevors/getting-from-there-to-here-ab5462e61242,8,[],0,17,daniel,M,0.004259946531406404,0.9957400534685936
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu (last week’s accomplishments remix!),2018-03-19 15:35:06,medium,"Overheard in Chingu (last week’s accomplishments remix!) Accomplishments from teams in Chingu’s Voyage-4 Build-to- Learn cohort! 👇 We had a big issue with our project, as we could not do the project we initially planned on doing (limitations of A P I). We had an emergency-meeting, and found a new use for the A P I after like 30 minutes. Team is awesome! I did the ux layout of my portfolio and send a lot of C V for junior positions I successfully implemented passport authentication in our application We have successfully finished our first sprint, and things have started to come together nicely, now that we are coding. We are planning another video meeting for tomorrow. Had a great meeting to walk-through and discuss our codecompleted our H T M L and C S S sprintsfrontend mvp almost complete Finished the weather A P I functionality I added screenshots to the stories to make coding easier. I added another story. Completed several tasks The front end view and basic C R U D A P I are finished and ready to be integrated! Besides that we are in a very good spot with our app, I got a job as a React junior developer and I can tell that being here, learning a lot about team development helped me a lot, Thank you all!!! Created Homepage With react and finished backend structural design Worked with Github Kevin took the time this weekend to help me get unstuck on a github issue Added styling. Close to M V P. Our latest features got merged ( I believe one each by each member?) Everyone is progressing as planed with their learning for the sprints ahead — we’ve got a skeleton of our frontend built and will finalise initial design of the missing pages this week. Actually coded and have a presentable weg Pagecompleted our sprints!completed dashboard (reviewing the design) Vera and I figured out the weather A P I and a ricking clock component Worked wih Github and created a navbar with C S S plus a logo React pair programming. The past week we set up many React components, have re-styled our U I mobile first and added some Sass variables, and also set up our server and some basic routes to be connected to the client side next week. We completed our sprint and created the foundation for our landing page. base A P I finished and tested on Heroku I have completed the front page’s U I, we have the login/registration form working. Finished the “ M101 J S: Mongo D B for Node. js Developers” course at Mongo D B University I got a job as I T communication officer in the largest humanitarian agency in the world :) Divided tasks, started our first sprintwe’re working through it I believe we can officially complete our first sprint, and plan the next one at our meeting tonight. We had a slow start, but regrouped and now we can do a better job planning sprints we can complete in a week. It’s coming together. Added one A P I call , almost finished the second A P I call. Learned some more react Learned about git , node Finished the main part of a big task within the project I’ve been making “screen casts” for our team to help with git, and other topics. Successfully merged 3 working branches into develop I’ve build barebones React structure and working towards templates. I built out the front and back end of a blog/news sectionstill on schedule ^^ Andres got a job as a react developer, that’s super exciting to hear! Finally, F I N A L L Y made progress towards making chained http requests from the front end to the back end using axios. @ziggusauce helped!finished my first ever A P I prototype Pushed U I for a main featurecompleted sprint 1. Yeee We successfully connected the front end to the back end. I learned how to implement asynchronous requests in React Our team completed the initial design phase last week and started our first development sprint. Learned Passport! : D We got the backend set up to allow users to register/login, added a searchbar, reorganized React components, explored the idea of adding new A P Is We basically completed Sprint 1, even though we had to move some tasks to Sprint 2 I feel like we’ve been a bit ahead of the progress curve, so I think we’re doing well for the April 20th completion date Andres got a job as a junior React developercompleted our sprints We know our roles and we have all been assigned a task.","['JavaScript', 'Chingu', 'Codingbootcamp']",https://medium.com/chingu/overheard-in-chingu-last-weeks-accomplishments-remix-c53be9c2b8bc,0,[],0,78,chance,M,0.024461428631419813,0.9755385713685801
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",Defer Up To 95% Of Your Tuition With Bloc’s New Interest Only Loan,2017-07-20 13:30:19,medium,"Defer Up To 95% Of Your Tuition With Bloc’s New Interest Only Loan Here at Bloc, one of our core values is genuine student advocacy. That is why today, we are very excited to announce that, with our financing partner Skills Fund, we are launching new financing options that will significantly increase the number of students who can financially access Bloc’s Career Track programs to improve their lives. Bloc is the only part-time, online bootcamp to offer interest only financing options that allows students to defer between 83–95% of their tuition cost while they are in the program. We strongly believe that this new option breaks down the substantial financial barrier that has prevented so many qualified students from enrolling in a bootcamp program until now. These new Interest Only Loans allow students to pay a small fraction of tuition while in the program and for two months after program completion. With this loan, you can pay an in-program payment as low as:$152 per month for the Software Developer Track$69 per month for the Part- Time Web Developer Track, and$76 per month for the Designer Track New loan calculator on Skills Fund for Interest Only Loans. Two months after program completion, interest plus principal payments will be paid on a monthly basis. Students will have a choice of either 3- or 5-year term length options with an 8. 99% interest rate or 10. 99% interest rate, respectively. These new financing options are available, in addition to our current loan options, starting today, Thursday, July 20, 2017. Although our current financing plans help many people enroll in Bloc, we’re constantly looking to offer more options to aspiring students. Through market research, we found financing is still a large barrier to entry for many aspiring developers and designers who possess the necessary potential. As our students are generally career changers, flexibility and loan options are extremely important. “ We are excited to expand the advantageous financing options available for our career-focused programs, and make transformational educational opportunities at Bloc available to even more students. Now almost anyone willing to commit to the challenge of acquiring new skills can improve their lives with a promising new career and greater earning power. ” — C E O, Clint Schmidt In addition to no principal due during the program, students who don’t qualify for the Interest Only Loan or our current offering (an Immediate Repayment Loan) will be eligible for an Access Loan. Bloc believes in our programs, students, and their ability to produce outcomes wholeheartedly, and we’re excited to make this option available through Skills Fund. These loans are structured to allow for even more people to afford the program. Students can choose whether they want to apply for an Access Loan with an Interest Only structure or an Immediate Repayment structure. If you were previously denied a Skills Fund loan (standard or Interest Only) and are interested in learning more about Access Loans, contact your Student Advisor. We’re excited about the opportunity to work closely with Skills Fund to open more doors to more students and chip away at the barrier of cost to attend a bootcamp. These loan options are available starting today, Thursday, July 20, 2017. To learn more about these new payment options or Bloc’s programs, schedule a call with your Student Advisor.","['Coding Bootcamps', 'Education', 'Access Loan', 'Financing']",https://medium.com/newsonthebloc/defer-up-to-95-of-your-tuition-with-blocs-new-interest-only-loan-c068054c7793,1,[],0,0,bloc,Unknown,Unknown,Unknown
chibueze ukaegbu,,LearnFactory Internship: Day 11 – LearnFactory Nigeria – Medium,2018-05-15 06:26:33,medium,"Learn Factory Internship: Day 11“ There has never been, neither will there ever be, anyone like you. You are different, special and unique. Shine, you are a light…” i C Java Script in motion :) Y O U M A T T E R. Those were the words of Eric Thomas in the 6th episode of B E P H E N O M E N A L O R B E F O R G O T T E N. You, not your dreams or goals, matter. Yes, the goals and dreams are important, but it’s not as important as Y O U. Who you are matters to a lot more than what you do. You are valuable; don’t give up, don’t give in. Your every little actions matters to those who depend on you, to those whose lives you make a little better by being there. Don’t tie your importance to what you have, or to what you have achieved; have a belief in yourself. So, walk like you are important, talk like you are important, B E C A U S E Y O U A R E. Ifeanyi, talking to the interns We had an august visitor today: Ifeanyi, from Techpoint ( Nigeria’s leading tech media outlet), paid a surprise visit to the interns. It was an awesome time hearing him share experiences and encouraging the interns to walk steadfastly on this road before them. You could see the rapt attention they paid; it was fascinating. Here’s a shout out to Ifeanyi, and the amazing Techpoint crew: thanks so much for sparing the time to come. The 3rd week began with an immersion into Java Script. Over the weekend, the interns were given a take home to go immerse themselves in the Intro to Java Script course on Udacity, so today was a whirlwind. With a focus was on variables, datatypes, type conversion, operators, Java Script console, inbuilt functions (alert, prompt, confirm, document. write etc) and comparisons, Matthew pushed them to their limits. Focus… The class closed with another take home assignment: write a Java Script program to prompt for a user’s name and output “ Name does not match. Please try again. ” message if entered name does not match the declared name. After 3 wrong entries, exit the prompt with the message “ You failed. Number of trials exceeded”. The number of entry is recorded and displayed at the end of the program. Each person was to submit on Slack and push to Gitlab. I have been impressed with their results so far. Was indeed a cheerful day. I N T H E S P O T L I G H T…. Over the next couple of days, we are profiling our interns. In their own words, each person will share with you who he/she is. Enjoy. So, here is our first intern, Andrew Miracle, in his own words… Hello there, Andrew Miracle I am Andrew Miracle a diverse and multi faceted entity embodied into being, I craft intelligence through words, visuals and audio using music, technology and art. When not playing the piano I surf through the internet or terminal screens and I D Es. I am born into a family of five to Christian parents, who however wonder what it is I even do in front of my laptop screen most of the time, I love the colors blue and red, and I think that as fundamental they are, they have yet the most active influence over every other color, My favorite food would be a blend of Macaroni with some boiled plantain(ripe) and tomato sauce with scrambled eggs(boiled), they are my favorite anytime of the day, even on a sick bed lol’. I love to travel, just give me a passport full of visas and I will tour the world with my backpack and a laptop, listening to music made by Rachelle Ferell, George Duke, Snarky Puppy, Shawn Martins, Jacob Collier and Dirty Loops and more fusions of Jazz, Electronic, Funk, and Classical Music. I have an educational background in statistics from The Federal University of Agriculture, U M U D I K E, backed by a W A E C Certificate from the Kings College, Lagos and early years in the Benson Idahosa Demonstration School ( Word of Faith). Most of my years after schools has been spent on sudying the tech startup ecosystem, learning to write softwares for the web, I love the web and how it has come to grow recently. I love opensource and try to contribute to open source software in any way I can, recently with a knack for softwares pioneering growth of midi interfaces over the web and pragmatic solutions for distribution of learning media resource in music over the years. I believe in continuous improvement, constantly learning to thrive and contribute to my communities, I am a die hard at something I set my mind on. Excellence is the utmost aim. I fear sometimes that staying at the top is hard when you get there, but why don’t we get there and worry about the former later. Andrew Miracle, cool as Ice In past two years I have consistently absorbed myself into learning ecosystems, that push further beyond technology, business, and people development, I personally have a very strong desire and passion to build technology solutions, and I believe in the depth of knowledge available on the internet. I dislike greed; I like excellence, transparency, friendship and love. I live the Life of a dreamer, create immersive experiences with music and technology and try to always stay happy and positive. Sometimes it looks like i have a crazy lifestyle, but I am proud of everything that I am and will become. Yes, he killed it. I’ll see you tomorrow. Have fun. i C Chief Code Smith","['Music', 'Coding', 'Codingbootcamp', 'Internships', 'JavaScript']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-11-abe9fddbc748,2,[],0,132,chibueze,M,0.0,1.0
N James,,"I, Nicholas – N James – Medium",2018-08-05 02:53:08,medium,"I, Nicholas It begins! Everything needs a beginning. I am a little disappointed with that one, but they can’t all be big bangs. My name is Nick James and this blog will act as an account of my foray into programming and web development. But first, who am I? I am currently a son, brother, father of one, husband of one, salesman, and in general a tech nerd. I decided to forgo post secondary school in favour of travelling the world. I hitchhiked through Europe, drove down to Mexico twice ( I’m in Canada) where I got married, and went on an extended honeymoon backpacking South America. Then I settled down to make a real life for myself. Have you ever noticed that real life sort of sucks? Last year I had my 33rd birthday and decided that I don’t want to be in sales for the rest of my life, and if I was going to do anything to change my career it would have to be now. I convinced my wife to let me siphon off some money to build a new computer that could handle anything that I could throw at it. I built it, went over-budget of course and started learning android development through the ed X platform. Unfortunately I found that the courses there were too far out of date and I spent most of my time banging my head against the wall as I tried to figure out how to use the newer way of doing things to do what the course wanted me to do. At some point, my projects began to look nothing like the course’s and I had to skip whole sections due to obsolescence, so I searched out new tutorials online. I did this for a year, but I got to a point where I wasn’t confident enough to start building my own projects, and every time that I got a new tutorial it would start me right back at the basics. I needed a change. This is where Bloc. io comes in. I spent a good amount of time searching for courses, whether they be university, college, or boot-camps. The university courses were far too expensive. The college courses were just too long. Both options weren’t very flexible with my current job which I did not have the luxury of quitting. But boot-camps were too short and I didn’t feel that they would be able to cram all of the information that I needed into my head in a 10 week period. After many hours I found bloc. A six to eight month course that would teach me so well that they guarantee that I will be able to get a job in the field within six months of finishing. Hallelujah. Now I am one month in. Loving every lesson, every struggle, and every victory as I get these damnable letters to do what I need them to do. Stay with me as I tame this wilderness and learn to make these technological marvels dance to my whims. More to come soon. Feel free to follow me, and clap like i’m a dying faerie ( Hook reference, I knew I could fit one in somewhere).","['Education', 'Life Change', 'Career Change', 'Web Development', 'Codingbootcamp']",https://medium.com/@nbjames2/i-nicholas-db51f30c7a89,2,[],0,2,n,Unknown,Unknown,Unknown
Jacob Moore,,Week 3 — Fretless and The Great British Baking Show,2017-08-05 01:15:00,medium,"Week 3 — Fretless and The Great British Baking Show So I wanted to take some time to review what this week has essentially been like and I thought it best to refer to some things that happened this week that put it all in perspective. The first that I already referred to was this: Day — 14 Append So what I’ve recently been doing is posting at the beginning of the day the thoughts, struggles, etc. from the previous…medium. com I took a lot from that day and it’s honestly switched things around for me for my attitude. It’s helped tremendously in resetting me in my mental attitude towards everything. Honestly doing this blog has been super helpful. Because of that I’ve decided to burst out of my shell a bit and embrace what is actually happening. Then today happened and it validated some of the struggles I’ve been facing and how I can fit in the tech community. So today I spent the morning attempting to get some things today in my code, fixed a couple items, and just went out to say “ I don’t get this and this and this” with the instructors. They were incredibly supportive and appreciated me saying “ I don’t get it”. It’s validated my concerns and made me feel great to share it. Then we had a guest speaker about freelancing which I was super pumped to hear about, mainly because freelancing fits my family’s lifestyle. If I could do a contract, earn some, and use the money to pay off things and stay at home being a house husband would be great. So our presenters were from a company called Fretless. Thus their website here: Fretless In 1997 Miles built a site dedicated to providing notation for popular guitar riffs. ( It didn't take off. ) Having…www. fretless. com Although I don’t know them personally, I want to work with them one day. Not just because they talked for nearly two hours and were entertaining, but because they’re attitude about development in the area is fantastic. They went on about what it means to move up as a Senior Developer: technology, leadership, and community. I can’t do justice to their presentation but the thing that hit me was community and how much it means to them. That hit me big time. It made me want to, and will, be part of the community that they have helped grow within Indianapolis. This also connected to another component that they brought up: not competing with my cohort at The Iron Yard but just being the best I can and striving to get better and better. That hit deep. Which led me to wanting to connect better to my cohort because they’re in it for the same thing; to learn how to be a developer and be apart of something bigger. Also…they aren’t dicks. They are good people that just want to be good at this. Which when I shared this with my wife she said “so basically it’s The Great British Baking Show. And they typically do… For those that don’t watch T G B B S it’s amazing. It’s a baking show that is not common to American television. It’s a competition show but with a weird twist. They just want to do a good job. There’s no vileness, animosity, cruelty, nothing. Just a vast desire to be their very best and if possible help others when they’re struggling with their own. It’s literally just a group of people trying to be their personal best and it’s just refreshing. The reason why that matters is I’m not the best in the group. Not even the second best. And based on what the Fretless guys said “don’t compare yourself to others” just reinforced that. I don’t get everything but I’m not alone in that. I just want to be good at it and to be better and better and better. That being said sometimes I see a couple people in our group just kicking ass and at this point… I don’t hate them any more for it. They, for whatever reason, get it better than me, and some others, at the moment. Some people just can’t help showing off And for what it’s worth, they aren’t dicks about it. They honestly are in it for the same thing, to be good at it and get better. They also will drop whatever code they are working on to help explain something…to any one. Which makes them pretty cool in that regard. One final note about this week, struggling with others. After Wednesday a few of us turned around and noted that we all felt that way. Then today someone noted that they read this and they said it helped them. I’ve been pretty self conscious about posting because frankly…it’s a bit raw to admit that you feel like you suck. It’s kind of awesome to think that someone felt better about it all because of this rambling. Here’s to another week down.","['Life Lessons', 'Codingbootcamp', 'Amateur']",https://medium.com/@jacob.w.moore/week-3-fretless-and-the-great-british-baking-show-1ac0a5002596,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly 40 – Chingu – Medium,2017-08-07 07:18:40,medium,"Chingu Weekly 40 Vamp’s repo here News & Random— Beta coming soon!— Congratulations @gustav for getting your new Software Engineering job!— Kornil’s git article have been passed around and so popular that they’ve now been added into the p1xt guides!— Congratulations @vitao18 for getting your new Javascript intern job!— Congratulations @jjprevite for getting a Java Script dev internship!— Congratulations @sipofwater for getting the new P T remote job in Cali!keep going! Shout-outs and Showcase@ C H I N G U- M O O N S H O T- P R O J E C T — Jim Medlock, a member of the Dev- Gaido team, wrote an article detailing the entire project — the ups, the downs, the lessons learned. If you are at all interested in team dev projects, I highly recommend you read this one. Read the dev Gaido article here: How we brought a new App to life help web-dev learners — dev Gaido. @matthew_burfield — Matthew Burfield wrote an inspiring article about his code journey called How I got a Mid/ Senior Front End Dev role in 8 months, which was published in the Freecodecamp medium publication!!@jjprevite — @jjprevite also had an wonderful article published in the Freecodecamp publication in the past week called I made my first open source contribution within 200 days (and how you can too). @ B U I L D- T O- L E A R N — @pai & @eureka — Here is a Owls B2 L splash page project from last session that didn’t get finished. @pai paired with her new team-mate and finished it off before starting their new chrome extension project. I love seeing this kind of perseverance and team-work in action!@groningen — “ Made with joy and a generator” @groningen put together this nice Wikipedia app!@ben_bright — Check out Ben Bright’s Weather app done using Vue Js!@ajib — Bolu Ajibawo wrote this article called July 2017 Love- Time- Death. He writes a brief homage to the passing of a celebrated interface designer, and gives an update on several backend projects he finished in July. @ B U I L D- T O- L E A R N— @vampiire — Check out this wicked tool called Val Stringer Vampiire built while on one of his building adventures! From the repo: “ Val Stringer allows for data from interactive messages on Slack to be obtained in bulk for more efficient database processing. ”@benjaminadk — Ben Brooke is at it again! Here is the C S S- Sandbox he built! Also, here is a video walkthrough of the app. Overheard in Chinguwow, this is excellent work! just merged it and pushed to master. 3rd team meeting, built basic website structure, worked on displaying the timthanks for the meeting! i think this is going to be a really fun project Yea what we are doing is good and great. I already learned react syntax which I didn’t know anything about before working on this. So, I am learning a lot from this. If you feel relatively inexperienced, it’s only because you’re in the perfect place for a learner — surrounded by people who you can learn from :smiley: That’s how I look at it anyway hehe Sleeping in an orchard in Georgia ( U S A). Woke to this horse chewing on my hammock’s rain fly. Not cool, horse. Here is this week’s full version of Overheard in Chingu.","['Web Development', 'Chingu', 'JavaScript', 'Codingbootcamp', 'Vuejs']",https://medium.com/chingu/chingu-weekly-40-e9bc837d9623,0,[],0,44,chance,M,0.024461428631419813,0.9755385713685801
Nicole Huguley,"English nerd first, marketing guru second. Currently settled at Claim Academy, a coding bootcamp in St. Louis. Lover of all cats, preferably fat ones.",5 Simple Ways to Prep for a Coding Bootcamp – Nicole Huguley – Medium,2018-04-06 14:54:40,medium,"5 Simple Ways to Prep for a Coding Bootcamp So… you’ve made it. You’ve been accepted to the coding bootcamp of your dreams. You’ve committed your time, money and energy to launch your career in programming, I T, software development, or any of the myriad career paths you may choose after learning to code. Like anything in life, the best way to get the most out of a large investment is to prepare as best you can. Cue parental gaze. In this article, I’m outlining 5 essential ways to prep for this life-changing learning opportunity. Though some of these suggestions may seem obvious, it’s important to consider the basics and take them seriously. Otherwise, you may be wasting your time. Let’s dive in. #1. C L E A R Y O U R C A L E N D A R First and foremost… you must eliminate distractions. Weddings, parties and trips all sound like great ways to celebrate… but only after you walk away from the classroom with your certificate of completion. Prior to bootcamp, clear your calendar as much as possible for the duration of your course — especially if you’re taking classes full-time. It’s hard to fit fun events into your weekends when you need that time to relax your mind, attend to chores at home, and, of course, complete any outstanding assignments. While looking at your calendar, consider your finances. Get everything in order so you don’t have to stress about paying bills or spending within budget while your focus is set primarily on learning dense coding concepts. It’s also helpful to communicate to your friends and family that you’ll be mainly “off grid” as you focus on learning as much as possible for 12 weeks. This will help prevent those tempting texts from your favorite people asking you to socialize when you should be sleeping (more on this later). #2. B U Y S C H O O L S U P P L I E S Remember strolling into Office Depot or the Dollar Store as a 2nd-grader and picking out your favorite pens and pencils, notebooks, and crayons? I, for one, always looked forward to this inevitable summer errand (shoutout to pencil grips and Lisa Frank). Before you start bootcamp, reclaim that childlike enthusiasm and go get yourself some fresh supplies for the classroom. You’ll walk in to your first day feeling prepared and ready to take lots of notes. Speaking of note-taking… many bootcamp instructors advise writing down notes (versus typing them) to improve comprehension. Experts agree that writing things down is better than typing them out… that is, if you want to learn quickly. In the software design and development context, for example, drawing out a wireframe is W A Y faster and easier to do on a piece of paper. If you’re looking for advice on how to choose a laptop for bootcamp, check out one of Claim Academy’s blog posts here on the subject. Final suggestions for essential supplies include noise canceling headphones and a reusable water bottle. Of course, hydration is an everyday need, but it is especially important to hydrate while coding. It’s quite easy to forget to drink water when you’re bent over a laptop for hours on end. Go figure. #3. D E V E L O P H A B I T S F O R P H Y S I C A L F I T N E S S Ok, duh. B U T, if you don’t already have them, start developing these habits to stay in ship (physical) shape so you can max out your attentiveness at bootcamp. To start, give your body the proper fuel it needs to perform. If you haven’t heard of superfoods, do a quick cursory Google search. Blueberries, avocados, and Greek yogurt are just a few examples of healthy food that is easy to eat on the go. Speaking of food, many bootcamps make it easy for our students to hole up comfortably in the building to study or work. Ask if they offer basic things like a refrigerator, microwave, or coffee maker. If they say “yes!” to all the above, bring snacks, your favorite coffee creamer, or any other refreshments that make your time grinding it out as pleasant as possible. Prepare to eat on-site as much as possible to save money and time. Meal planner apps like Eat This Much are helpful for managing cost; you can create a custom meal plans and adjust your weekly or daily budget to ensure you avoid spending too much on food, or worse, “stress-eating” junk food out of desperation and poor planning. If you’re somewhat of a night owl, remember this: you still need to get as close to 8 hours of sleep per night as humanly possible. Consistent deep sleep is crucial to prepare your body for full, productive days. Additionally, though you may normally get away with counting trips to the grocery store as “exercise” (guilty), once you’re enrolled in bootcamp, you’ll need to make a more intentional effort to carve time for physical activity. In order for you to be successful when you’re plugged in and coding for hours, you need to get up and move around periodically. Go outside and walk around the block, ride a bike, run a mile, lift weights or take an exercise class. Don’t run yourself down. You’ll lack focus, or worse, catch a seasonal cold. Speaking of focus… ever hear of the mind-body connection?#4. T A K E C A R E O F Y O U R M E N T A L H E A L T H We can’t emphasize this enough: it’s really important that you manage stress well in a bootcamp environment. This means that you must work to relieve your own stress while also protecting yourself from taking on your fellow students’ stress. Aside from physical activity, you may find mental exercises like meditation helpful to sort through the feelings of being overwhelmed or anxious. Check out apps like Headspace or Aura to access short, 10 or 15 minute meditations which you can plug into your day as your guaranteed “brain break. ” On the subject of mental fitness, as you prepare to start your course, work to train your brain to learn in a circular fashion. This means revisiting topics over again that didn’t quite stick the first time you heard them. The Circular Learning Model is a helpful tool for making the most of your classroom and post-class study hours. Practice using this method with the pre-course work we provide. For any concepts that feel muddier than others, revisit that section and practice exercises over again. #5. S T A R T B U I L D I N G Y O U R P R O F E S S I O N A L N E T W O R K Never lose sight of the ultimate goal: job placement. You’re paying to become an all-star coder so you can score a well-paying job, right? Many graduates suggest joining Meetup groups in your local area. In her post on Medium, bootcamp grad Jessica Dembe explains, “ I went to meetups and let it be known that I was a coding bootcamp student who is looking for a job. I mean, that is how I got the job that I have now! So definitely attend meetups and let people know about your story. ” Think about how to describe yourself, or tell your story, in a compelling way. Then: practice, practice, practice. You don’t want your first run at selling yourself to happen when it matters most. There are plenty of tools on the internet to lay the groundwork for exploring jobs both locally and in remote cities. For example, the review site Switch Up offers a rolling list of jobs in tech that they keep updated. ( Switch Up also is a great resource for more helpful tips from bootcamp grads across the country; I highly recommend visiting their blog to explore these insights by topic). Other ways to prepare for selling yourself to future employers include setting up a Linked In profile (read through this stellar advice on getting the most out of Linked In), exploring various career paths in technology, and connecting with past graduates locally for coffee or lunch to chat about their experience getting hired after bootcamp. In short, there are a ton of ways to prepare for bootcamp. I hope this helps you get started. Got any other ideas? I’d love to hear them… please share your thoughts below!","['Programming', 'Codingbootcamp', 'Software Development', 'Information Technology', 'Coding']",https://medium.com/@nicolehuguley/5-simple-ways-to-prep-for-a-coding-bootcamp-1c7e1eae1583,0,['Claim Academy'],1,0,nicole,F,0.9966736369993654,0.003326363000634646
Priya Bansal,,No Coworker Left Behind – Priya Bansal – Medium,2018-05-07 01:29:45,medium,"No Coworker Left Behind Earlier this week, I had a long conversation with my fellow students in the Grace Hopper Program of Fullstack Academy about socialism. Some had family who had come from socialist societies, and argued that it was an ideal that could not work. Some argued that it could work eventually, but as beings humanity simply wasn’t at the point in which it could work now. It was interesting the timing of this conversation, as it occurred right before I was assigned my group for the Grace Hopper Program’s final capstone project. Unlike many of the previous groups I’ve been in, this group has very socialist ideals when it comes to managing the project. The first day was… rough. We had the day to decide what to make, as we have complete freedom over our final product. Two of our group members wanted to make a game. One wanted to make anything but a game. Two wanted to make everyday, social apps. One wanted to make anything but an everyday, social app. As we were trying to cater to everyone’s wants, we still had not decided on what to make by the end of the day. By the second day everyone had made enough compromises that we settled on a gamified habit-helper. But there were other issues to consider. How did we want to organize our Git process? Did we want to try test-first development? We used most of our second day answering these questions, and knowing we had spent two days doing things other than coding was nerve-wracking. We hadn’t just spent the first two days talking about what we wanted, but why we wanted what we wanted. By day three we understood that each of us needed something different from this experience. Those who wanted to make a game did so in part because they wanted to appeal to companies which valued gaming. Those who wanted to make a more social app wanted to appeal to companies which valued social apps. Those who wanted to try test-first development wanted to learn programming best practices. Those who didn’t want to try test-first development wanted to focus their time on learning new libraries that we hadn’t yet gotten a chance to learn. After understanding this, things got easier. We decided that those who wanted to appeal to companies which valued gaming could present some of the more gamified aspects of the product while the others could present some of the more social aspects. Those who wanted to focus on test-first development could do so on the code that they worked on while those who wanted to learn new libraries could do so and share that information with the rest of the group. Whether or not taking care of everyone’s needs can work large-scale, so far it has been both tiring and advantageous. While none of us got to work on the project we most wanted, none of us felt like we were working on a project we cared nothing for. We are each gaining from this experience what we wanted to gain from it, but we are doing so by following slightly different paths. So far it is only the end of the first week of this two-week project, so the end result of this so-called no-coworker-left-behind experiment is yet to be determined. Still, I’m looking forward to seeing how it all turns out.","['Women In Tech', 'Codingbootcamp', 'Groups', 'Project Management', 'Group Dynamics']",https://medium.com/@puppylover369/no-coworker-left-behind-dd133fc7b5fa,0,['Fullstack Academy'],1,64,priya,F,1.0,0.0
DeVaris Brown,,Opening the Floodgates to Untapped Talent: Why We Started Yet Another Tech Academy,2017-01-03 20:42:15,medium,"Opening the Floodgates to Untapped Talent: Why We Started Yet Another Tech Academy Early pilot course hosted at Street Code Academy. We’re living in a magnificent time of innovation and unprecedented opportunity in the tech industry. Entrepreneurs from all over the world are migrating to the Bay Area for their shot at building the next startup unicorn. While some are benefitting from the rise in opportunity, this influx has caused something of a crisis for others. Income inequality is at an all-time high. Unemployment for blacks in the Bay Area is 2–3 times the average. Rent prices across S F, Oakland, and San Jose are some of the highest in the nation, pushing black residents out of these cities in significant numbers. At the same time, there’s a huge need for skilled technical talent. On the surface, it seems like there would be a natural fit for companies to leverage the surrounding communities as a source for talent. Unfortunately, these tech companies have struggled mightily to engage and hire diverse populations despite higher levels of black and brown grads in computer science. People in melinated communities turned to for-profit education institutions in an attempt to quickly gain the skills needed to qualify for jobs. These institutions by and large failed to deliver on their promise again, again, and again, oftentimes leaving people in deeper debt and minimal job prospects. Other attempts to solve this problem, such as re-introducing bootcamps have provided a bit of relief. For an average time period of 10. 8 weeks and cost of $11, 063, students could learn the latest Java Script framework and after graduation, obtain a job as a software engineer earning upwards of $100k a year. These bootcamps are ideal for those who can afford them, but unfortunately, that’s not a realistic option for a lot of people in the melinated communities across the Bay Area. Not many people, regardless of race and ethnicity, can afford to live in the Bay Area for 3 months salary free while spending ~$11, 000 learning to code. Even with scholarships, deferred payments, and alternative lending companies providing financing, people of color are missing out on this job boom simply because the solutions aren’t tailored to our population. Access to high quality technical education shouldn’t be limited to those who have the luxury of time and disposable income. To me, this was unacceptable and I felt motivated to provide an alternative solution. I knew I wanted to start an organization that focused on teaching the skills needed to begin a career in tech. I called up the smartest folks I knew to develop a foundational plan for what would become Floodgate Academy. We named ourselves Floodgate because we know there is a plethora of untapped talent in our communities. With proper training and relevant experience, we can provide a consistent, qualified, diverse pipeline of talent to the tech industry that it desperately needs. This new organization had to be something relevant to the people we felt were constantly overlooked, not just a replica of the existing bootcamp models. We decided to build our organizational foundation on the following: Focus on community-minded people who wouldn’t have gone to a 4 year college, or are currently underemployed No cost to the student to attend. Costs would be shifted to sponsors and receiving institutions Transportation, food, connectivity, and equipment would be covered and students would receive a stipend equal to a living wage Flexible hours with around the clock support Classes must have >25% women enrolled Keeping with our non-traditional theme, we chose the area of developer operations( Dev Ops) as our initial curriculum focus. Dev Ops made sense to us for a few reasons: We noticed a clear need in devops curriculum as most programs are focused on web and mobile The types of companies that need/employ Dev Ops engineers are usually in a more mature stage It provides a great foundation for other disciplines in tech Our staff has expertise in building highly available, scalable systems for some of the largest web services in the world As we began to talk with our peers who are recruiters, hiring managers, and senior engineers about the traditional bootcamp space, we consistently heard “…if they had some work experience outside of class projects before applying, they’d be more employable. ” To address this, we decided to incorporate two separate 3 month internship experiences before a student graduates. During the internship, we knew it would be vital to provide support to not only the student, but also to the company. We hold bi-weekly 1:1’s with the hiring manager and student. Every other week, we take that feedback and have a half day of professional and technical development with the student and F G A staff. Our success as an organization shouldn’t be solely determined by placement. We measure our success through placement, retention, and advancement. This gives us more insight into the quality of the experience our diverse candidates have at these companies and in turn builds a more sustainable talent pipeline. Over the course of the past year, we’ve been extremely pragmatic in building the type of organization that will have a lasting positive impact for both the underserved community and tech community. Now that we’ve finished our latest pilot and placed a candidate, we’re ready to expand our reach to help more people of color across the country. I’d be remiss if I didn’t acknowledge some of the amazing folks who helped us along this journey. Olatunde Sobomehin and Heather Starnes from Street Code Academy and Live in Peace down in East Palo Alto for providing us with space and students to pilot my program Dr. Bryan Brown for giving the F G A team the keys to curriculum development Cedric Brown from the Kapor Center for Social Impact for giving us a generous grant to fund our placement focused pilot Sean Murphy from I C A/ Fund Good Jobs for helping us understand the world of nonprofits and giving us the guidance to structure a great organization Everyone who’s given invaluable advice and kept encouraging us to not give up on this effort including family, friends, co-workers, members of the community, companies, and professional colleagues2017 is shaping up to be an exciting year for Floodgate. We’re starting our first full stack web cohort in Seattle lead by Arif Gursel. We’re continuing our Dev Ops focused curriculum in Oakland and will be starting a new cohort in the spring. If you’re interested in learning more about our program, volunteering, or donating to the cause, please feel free to check out our website. De Varis Brown is the C E O and Lead Instructor at Floodgate Academy. De Varis has over 15 years professional experience as a full stack developer, systems engineer, and product manager. Outside of work, he’s also pretty nice behind the turntables or camera.","['Diversity', 'Tech', 'Inclusion', 'Coding Bootcamps', 'Software Development']",https://medium.com/floodgate-academy/opening-the-floodgates-to-untapped-talent-why-we-started-yet-another-tech-academy-205c142d334b,3,[],0,41,devaris,M,0.0,1.0
Fanis Despoudis,"Senior Software Engineer @teckro, Experienced mentor @codeinstitute, @hack.hands, Technical Writer @fixate.io Tweet me at @nerdokto.",I’ve also started an awesome list about coding-bootcamps here feel free to contribute…,2017-05-12 08:14:08,medium,I’ve also started an awesome list about coding-bootcamps here feel free to contribute https://github. com/theodesp/awesome-coding-camps,"['Codingbootcamp', 'Programming', 'Learning To Code']",https://medium.com/@fanisdespoudis/ive-also-started-an-awesome-list-about-coding-bootcamps-here-feel-free-to-contribute-https-60d5878b3562,0,[],0,1,fanis,Unknown,Unknown,Unknown
Katherine Lane,,APIs —How a Newbie can Find a Decent (Free) One – DigitalCrafts – Medium,2017-07-29 20:14:34,medium,"A P Is — How a Newbie can Find a Decent ( Free) One What is an A P I? Wikipedia says, “… Application Programming Interface ( A P I) is a set of subroutine definitions, protocols, and tools for building application software. ” Ok. Well, if you’re like me, the first time you read this you’re probably thinking, “what the heck does that mean?” Wikipedia is…well, Wikipedia. They definitely go deeper into their explanation if you want more details, but for now the main thing you need to know is this: A P Is basically create the ability to interact with large amounts of data. The definition of data has a pretty wide range, as does the possible level of interaction. If you can think of it, there’s probably an A P I out there manipulating the data to produce it. But what is “it”? That’s a pretty vague term. I know. There are thousands of A P Is out there. Facebook, Google, Yahoo, Flickr, Instagram, Twitter, and Wikipedia all have A P Is. When one makes use of those A P Is properly, the data within them can be accessed and manipulated for many many different possibilities. And I mean many. Like, think of a number. More than that. How does your dentist send a link confirming your future appointments to your Google Calendar? Probably through an A P I. Note that most A P Is are not open source, meaning freely open to use. But the purpose of this article is to hopefully help other newbies play around with open A P Is. Take Flickr’s A P I for example:“…anyone can write their own program to present public Flickr data (like photos, video, tags, profiles or groups) in new and different ways. ” All that info? Trust me though, there’s more. Each photo is stored with its own unique information (user_id, tags, place_id, date_taken, latitude, longitude, etc. ), which leads to a massive database wherein we can access this information. Here’s where the A P I comes in! A P Is make it possible to sort through all this data for whatever you want. Want to see every photo with “park”, “landscape” and “waterfall” tags in a 20 mile radius of latitude 33. 7489954 and longitude -84. 3879824? Well, let me just put this code in and, what?! There it all is! It’s pretty cool. Looking for all sizes of a photo using the photo I D We could dive deep into A P Is, but I’m still a newbie. You should probably find a more legitimate source for that. However, I would be remiss if I didn’t share a few killer tips I’ve found while struggling to work with my first A P I. Just part of our code to get photos from Flickr’s A P I How to Find a Decent A P I Or at least how our group managed to find a usable, free A P I Use “developer” in your random Google searches. Searching “ A P I” in Google isn’t exactly specific, and will most likely yield a lot of results. I’ve found that adding “developer” to the search string, your results will be a much more narrow and germane to the task at hand. This will save you time not sorting between results pertaining to the American Petroleum Institute or the Academic Programs International. Both of which sound lovely, but not what we need here. So, why does adding developer help? Because larger databases use dev/developer in their U R L or search parameters. And it seems documentation within these websites will have developer in there because, you guessed it, developers use A P Is. Examples:https://www. instagram. com/developer/https://dev. twitter. com/overview/apihttps://dev. twitter. com/rest/publichttps://developer. github. com/2. Do your research before committing to an A P I Of course you’re doing research. Google “ Developer Google A P I” and you’re taken straight to their A P I database. But, what else do we need besides the code? Well, is it open source? Does their sandbox version have limitations or restrictions on how you can use their information? How many requests will you need to make a day? When my classmates and I started searching, we decided to land on Instagram to be the focus of our project. And why not? We all love photography, we love Atlanta. So let’s find some beautiful photos! How foolish we were. We were all V E R Y new to A P Is. And even for an experienced coder, documentation can be incredibly lengthy — yes, even more lengthy than today’s blog post. As a newbie, it’s an incredibly daunting task to come up with an idea, find an A P I that matches your vision, find another or the same? A P I that actually has the info you want, then incorporate that A P I into your code and actually be able to U S E what it has. So instead you skim a bit of this and bit of that, you get a key and you start coding. 2 hours pass. Not much progress. Until finally we stumbled upon a tutorial with Instagram’s A P I. Perfect! We were on our way to an incredible project! Nope. Within this life-saving tutorial, are Instagram’s new policies where, as of June 2016, “without express written permission from Instagram, any A P I use is limited to your personal Instagram account and up to 10 other accounts. ” And on top of that, only the last 20 posts. Welp…we’re just three lowly students with a simple project. We’re not getting access to their whole database. Moving on…. 3. How to Google Other Aspects During Your A P I Searches What did we learn after Instagram’s policies killed our mood? Look for tutorials if you’re using A P Is. There are a multitude of tutorials pertaining to certain A P Is. Wanna know what the developer considered hiccups in the project? Want to see a sample of the code they used? How about knowing how they made the most of the information provided? It’s all in the tutorials. Also, looking into as many forums as possible. Your question has almost certainly been asked before. Look. It. Up. 4. Try, try, and try again Being a newbie is difficult. Am I upset that we didn’t think to dive into Instagram’s lengthy policies beforehand? Yes. Do I really want all of that time back? Of course. Honestly, it pushed me to write this; now I can reference this later and remember what not to do. And maybe, just maybe, it could help someone else down the road. Overall, the world of coding is massive. A P Is are extensive. Getting what you need can be more difficult than using it. However, every 2 hours banging your head against your keyboard is two hours of taking the next step to becoming better. And learning what to look for can be invaluable.","['API', 'Women In Tech', 'Codingbootcamp', 'Programming', 'Coding']",https://medium.com/digitalcrafts/apis-a-short-journey-of-what-they-do-and-how-to-find-a-decent-one-32864340a36,0,[],0,85,katherine,F,0.9971373970884047,0.0028626029115953475
Jaime Syvino,Software Engineer passionate about making people’s lives easier,Coding Bootcamp Beginnings – Jaime Syvino – Medium,2018-03-17 21:44:10,medium,"Coding Bootcamp Beginnings Three weeks down and I am half way through the first phase of Fullstack Academy’s immersive Software Engineering program. I thought this would be a good time to take a second and look back on everything. I cannot believe how much I have learned in this short time. I remember when recursion used to scare me, now doing anything in Java Script feels familiar, almost like home. In three weeks we have learned about data structures, algorithms, Node, Express, H T M L templates, S Q L, Postgres, Sequelize, and some more advanced C S S. Three weeks ago most of these terms were not in my vocabulary, but now, I can use these tools to make something pretty cool. Now I am not saying I am an expert in any of these things, but I have definitely surprised myself with how quickly they are starting to feel natural. I remember on my first day after talking to the other students in my cohort I was terrified. I was certain there had been a mistake, I didn’t have nearly the exposure and experience that most of these other people did. Did Fullstack mix up my application with someone else’s? Three weeks later I know they didn’t. I belong here, I can do this. We have our first official timed test in a couple days. We need to build something (tbd by our expert teachers) in 3 hours without access to all the learning material we have been depending on. I think it will be a great experience to see what we can do without our notes and sample code. I look forward to the challenge and for everything else that comes after it. I can’t wait to keep learning these next 3 weeks and then spend the remainder of the course building things. I am so very happy I made the decision to do this.","['Web Development', 'Bootcamp', 'Codingbootcamp', 'Software Engineering']",https://medium.com/@jsyvino/coding-bootcamp-beginnings-b11965100db1,0,['Fullstack Academy'],1,1,jaime,M,0.4236322544880815,0.5763677455119185
Abi Noda,Independent developer and founder of http://pullreminders.com,Dev Bootcamp is Dead but It Didn’t Fail – Abi Noda – Medium,2017-07-13 06:07:24,medium,"Dev Bootcamp is Dead but It Didn’t Fail If you haven’t heard, Dev Bootcamp is going out of business. This is very sad news for the 100+ staff, 3, 000+ alumni, and the incredible campuses and communities built across seven cities across the country. I worked at Dev Bootcamp for four years and it is heartbreaking to see the company fold. Most people would consider this to be a big failure. After all, who do we celebrate in business? Massive profits. Going I P O. Decade-long successes. Not companies that go out of business a couple of years after being acquired. Death is natural in business, as it is in life. More than 90% of the Fortune 500 have fallen off in the past 50 years, like Yahoo and Radioshack. And many unprofitable businesses stay afloat by passing their debts to investors. If death is natural, maybe Dev Bootcamp going out of business isn’t a failure. Dev Bootcamp was never designed to reap profits or attract investors. Dev Bootcamp was built to change lives by helping people from all walks of life access the biggest economic opportunity of our lifetime–a career in technology. Ask almost anyone who attended or worked at Dev Bootcamp and they’ll tell you it changed their lives positively in some way. If we measure success by social impact, Dev Bootcamp is as successful as any company alive today. Dev Bootcamp has graduated over 3, 000+ amazing alumni, championed diversity in the tech industry, and given birth to many impactful individuals and organizations carrying the same mission forward like Hack Reactor, App Academy, and Code Platoon. There are several hundred coding bootcamps today. Running a large, profitable business in an extremely saturated industry is really hard. And something I noticed during my time there was that we weren’t good at it. A big reason for this was that building a profitable business was never the most important thing to us. What we cared for most was making an impact on people and providing opportunities to under-represented communities. If you had met someone who worked in marketing at Dev Bootcamp, you would have been surprised to find that they cared more about diversity in the tech industry than they did out-maneuvering competition. Or that our campus directors cared more about providing mental health support on campus than profit margins. Caring more about our mission and the people we served than our profits was part of our D N A. And we didn’t compromise, even while we lost millions of dollars year after year. One particularly bad year, I recall arguing with our C E O about why we were spending so much money on diversity versus marketing which we so desperately needed. I’ll never forget the moment when I finally understood that championing diversity was so core to our mission that without it our work would lose its purpose. Dev Bootcamp is dead, but let us not hang our heads. Look around and celebrate the marvelous impact we’ve made and all the lives we’ve changed for the better. Now let’s go make some more beautiful, meaningful things. I am the V P of Product at Hammer (we’re hiring) was formerly the C T O of Dev Bootcamp. Follow me here or on Twitter (@abi) to get notified. Say hello at a@abinoda. com","['Programming', 'Codingbootcamp', 'Web Development', 'Startup Lessons', 'Startup']",https://medium.com/@abinoda/dev-bootcamp-is-dead-but-it-didnt-fail-3a4e456899be,0,"['Dev Bootcamp', 'Hack Reactor', 'App Academy', 'Code Platoon']",4,86,abi,F,0.9588785046728971,0.041121495327102804
Pedro Duque Estrada Meyer,"cofounder of Le Wagon Brasil, the first Coding Bootcamp in Brazil",Learn to change and code the world – Pedro Duque Estrada Meyer – Medium,2017-07-18 20:49:19,medium,"Learn to change and code the world Read this article in Portuguese I’m going to tell you a little story about learning how to change and coding the world. The world is indeed changing fast and not necessarily in the right direction, but it has never been easier to get the abilities needed to steer it in the right direction. In the beginning of 1999 I was a 17 years old little punk skater and I had to choose a graduation course. I wanted to save the world. Among lots of possible choices I ended up picking International Relations. I studied for four years and a half and worked in a few human rights N G O’s. During this time two things that happened really marked me:- When I went to the U N Human Rights Council Session and I saw a bunch of old white rich man arguing about commas and paragraphs in the regulatory text and doing politics for hours. - In 2001 I went to India and right before we landed one of the most fatal earthquakes stroke upon their territory, killing 20. 000 people. Seeing the combination of both misery and a natural disaster depressed me profoundly. That made me realise that there wasn’t much to do and I had no idea how to actually help in a greater scale. I decided to leave my altruistic ambitions aside and to make some money doing something fun. So in 2004, after finishing my university degree, I became a fashion photographer! Fast forward 11 years, we are in 2015. I still work as a fashion and advertisement photographer, married to a very special lady and she’s pregnant. Once more, after all this time, I began asking myself what could I do to help build a better world. The world is still sick and in desperate need for attention. I’m not 17 anymore, I’m 34. So I start reading a lot about everything, revisiting old interests and looking for new ones. I had heard from a friend about the Ouishare Fest in Paris, right next to my place. I managed to get one of those last day promotional tickets and I headed there without knowing too much what to expect. I was super impressed. It was the “ Lost in Transition” edition of 2015, a little after the boom of the “ Sharing Economy”. It was curious to notice that there were among others three distinct groups of people — normal people like us ;-) , the capitalist yuppies hunting the next uber/airbnb and the hippies wanting to save the planet. And they were all talking about the same thing — changing the world. Let’s leave the discussion about the appropriation of the “save the world” rhetoric by startup culture for another day — but while everybody wants to change the world, nobody is really willing to change themselves. Have you ever notice a kid playing ? The kid can spend hours or even days playing with the same toy, but eventually they grow tired of it and chooses a new one. They change favourite toys like we change clothes. Sometimes the toy will have their attention for minutes, sometimes for weeks. Sometimes they come back to their old favourites, sometimes they don’t. Why are we taught that it should be different with our careers, work, or general interests ? Why should we choose one of them and keep them for the rest of our lives ? To change is to get rid of chains we’ve built for ourselves. I was decided to change the world, and for that I was wiling to change my career. But what should I change into ? If we look behind the curtains of all the technologies that are disrupting everything we can think of — finance, health, politics, science, education, entertainment, etc — we’ll always find the same thing: Sorry, this is a Brazilian joke. But you get the point. Code. If in the beginning of the 2000’s it was difficult to find out how to collaborate for a better world, today we know that programming is the tool responsible for the structure of all major projects that are doing just that. Ok, so I went to take a look in projects that interested me and they all looked like this:wtf ? If there’s something people fear more than changes this thing is code. So if I wanted to change the world I needed to learn how to code. My only coding experience was two or three html tags that I learned in chat rooms in the end of the nineties. At the time I even flirted with the idea of learning that but had no idea where to start. Nowadays you have an infinity of online resources, free and payed — Codecademy, Treehouse, Udemy, Coursera, Edx, etc. The best coders I’ve met are self-taught. And so I tried to learn by myself. But unfornately it’s not that easy. It’s not like taking the red pill and suddenly you’re able to see reality. The learning curve is very steep, i felt like climbing the everest on iceskates. my class @ Le Wagon Paris And so I heard about the existence of coding bootcamps. Coding bootcamps are immersive intensive 8 to 12 weeks on-site training programs that teaches beginners and non-beginers how to code. My baby was arriving and I didn’t have the time to stop everything for 5 years to get a computer science degree — but I could certainly spare a couple of months. That’s how I found out about Le Wagon, a 9 weeks coding bootcamp in Paris. That’s the closest thing I could found to the red pill. I think I have never worked so hard in my life. Two months of challenge based learning, learning by doing, from 9am until 7pm at the bootcamp and into the night at home. It’s not for nothing that the term bootcamp comes from military high-impact training. By the end of the first week you’re not only dreaming with code but liking it. The mental effort is absurd, but it’s rewarding to find out how much knowledge we can process in so little time if we are determined and the methodology is well built. This course report study shows some results achieved by coding bootcamps. Of course not all of them wanted to change the world like myself, some of them just wanted a better job. Ok, cool, but what about those who wanted to change the world ? Remember these screens ? So, after taking the red pill this is more or less what you could realise:ahhhh…. This is a small selection of promising technologies which are already changing the world. Digital Democracy The representative democracy model is in chrisis, and it just takes a look at Trump, Brexit and Brazil to realize that. And at the same time we have something in our hands everyday that could make direct democracy a less distant dream that only small countries like switzerland could afford to have. We read and listen a lot about ideological information bubbles that social networks are encouraging so just direct democracy won’t be enough if our opinions are a result of algorythmic curatorial machine learning. There’s a lot to be done! Astrophysics The advances in astrophysics are encouraging. We are looking and understanding better the infinite universe that surrounds us. There are amazing open source projects that you can collaborate even if you’re not an astrophysicist, and even if you don’t know how to code. Galaxyzoo for example, a crowdsourcing project to help classify and discover new galaxies. Virtual Reality and Artificial Intelligence The facebook V R camera code is open, so you can help improve it or even make your own. Without getting to much into conspiracy theories, you don’t have to be very smart to realize that although seen mostly as entertainment or a distant reality, the power of both technologies together is scary. The analogies with matrix (which by the way was released in 99…) are in here for a reason. If you want to read more about it try the Simulation Argument by Nick Bolstrom — or even his recently released “ Superintelligence” — which is basically a guide to the dangers of the arrival of A I. What about the blockchain ? If you haven’t heard about it, it’s the future of internet. There’s still plenty of apps to be developed in this new layer and a lot of opportunities. Even you just want to invest, just to illustrate it, if you had bought 20k dollars of ethers one year ago you would have 1 million dollars today… And if none of this works and we still can’t save the world what about guaranteeing a place for your family in the colonisation of mars ? I was researching for open source projects on space travel and I accidentally found a engineering internship test for space X on github. For my surprise, I was able to solve it! After less than one year of coding. Do you realise now what kind of superpower coding can give you ? So what did I do this last year ? After I finished the bootcamp I became a Teacher Assistant for Le Wagon in Paris and in Amsterdam, because better than learning by doing is learning by teaching! I still learn a lot everyday. I am developing a genetic cancer risk calculator with an oncologist and I created a mini-app that interacts with the Panama Papers database creating maps of the Mossak & Fonseca offshores around the world. …like this one from rio de janeiro. I’m also raising my kid to lead the resistance against skynet and Evil Corp. I don’t show her face online so she won’t fall in a facial recognition algorithm. I also brought Le Wagon to Brazil, along with Mathieu Le Roux and Fernando Americano — so you can also join the revolution! Hippies and Yuppies are also welcome!","['Programming', 'Startup', 'Coding', 'Codingbootcamp', 'Change']",https://medium.com/@oduque/learn-to-change-and-code-the-world-a3ff665c6a2a,4,[],0,17,pedro,M,0.005638418079096045,0.994361581920904
Alan Hong,"Programmer / Developer-in-training, former Air Traffic Controller, Pilot, Entrepreneur.",A New Chapter – Alan Hong – Medium,2017-05-17 01:29:39,medium,"A New Chapter In less than a week, I begin a new chapter in my life and I couldn’t be more excited! I will be attending The Iron Yard in Houston on May 22nd, 2017. My hope is that I will graduate from there in about 12–16 weeks and become a fully-fledged professional programmer and software developer. Programming is completely new to me. Computers are not though. I’ve lived most of my life learning and using computers recreationally as well as professionally. As soon as I decided to apply to attend at The Iron Yard, I started learning more about programming on my own. I actually started with C# and the free Unity Software making my own little rinky dink 2 D games by following online courses courtesy of Udemy. But when I was writing code in C#, I didn’t really understand what I was doing lol… It was then I learned that The Iron Yard was going to be switching gears and teaching everyone coming in, regardless of intent on front-end or back-end engineering, Java Script first and then Ruby on Rails. So I started learning about Java Script. Man, the barrier for C# is high for beginners. Conversely, Java Script is so much more easier to understand! But I suppose both languages have their pros and cons. As of a month now, I have been studiously completing code challenges on Code Wars. com using Java Script. At first, even level 2 (7 Kyu) code challenges were hard for me. A month later, I can do most level 4 and 5s (5 and 4 Kyu). That combined with the pre-work stuff The Iron Yard has given me to do; I hope it places me at least somewhere in the middle of the pack of the class.","['Coding', 'The Iron Yard', 'JavaScript', 'Codingbootcamp', 'Bootcamp']",https://medium.com/@xiupan/a-new-chapter-7f937e3cbc4f,0,['The Iron Yard'],1,0,alan,M,0.0030826743350107835,0.9969173256649893
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",Networking: Taking An Interest In Others – Joseph Cardillo – Medium,2018-03-07 16:26:56,medium,"Networking: Taking An Interest In Others The infinite value of relationships regardless of whether it gets you a job“ Two people holding cups of coffee while seated opposite to each other at a round table” by Joshua Ness on Unsplash I recently listened to episode 2 of the Code Newbie podcast. It was an interview with Brian Douglas. I loved his thoughts on networking, and contacting employers directly rather than going through the traditional channel of applying online. I had success previously with getting interviews this way. I had reached out to the E V P of a company I was interested in, and came to find out she had almost eighty resumes stacked on her desk for the position, and simply hadn’t had time to review them. In fact, she was thankful I had messaged her on Linked In, and scheduled an interview for the following week. In the past I’ve shied away from this method of networking, feeling it to be insincere. That was until worked for a company, and in a position, that required me to network in this way to be successful. To simply take an interest in others, whether in person at conferences or online, like Twitter. I realized quickly that it wasn’t insincere, and that it was, in fact, in everyone’s best interest to do this. “ Best interest” because it create value, not just for you, but for the person you’re connecting with. Even if it’s with someone who may not have a job available for you (which is most often the case). Such as a mentor. They may find value, for example, in sharing their experience with you to help guide you, and you may find value in being on the receiving end of their wisdom. There is infinite value in relationships. We mostly think of networking for the purpose or “end” of getting a job. But it goes much deeper than that. It is an end in itself. It is a way to get to know other interesting people, and to take an interest in what they do. Which is far more rewarding in the long run, and leads to wonderful relationships. Successful networking leads to good relationships. And eventually, good relationships will lead you to the job you want.","['Networking', 'Codingbootcamp', 'Coding', 'Work', 'Job Search']",https://medium.com/@josephcardillo/yesterday-i-listened-to-the-beginning-of-episode-2-of-the-codenewbie-podcast-45d92e8147fe,0,[],0,16,joseph,M,0.004069495880582216,0.9959305041194177
CODE.GAME,Most intriguing way to learn programming for kids.,CODE.GAME Winter Coding Boot Camp embraced a perfect ending!,2018-03-12 05:32:59,medium,"C O D E. G A M E Winter Coding Boot Camp embraced a perfect ending!“ Future Creator’s Alliance” Winter Coding Boot camp held by C O D E. G A M E in 2018 has marked an improvement towards future education for kids 7+. Our winter coding boot camp has successfully launched in four cities including Suzhou, Shenzhen, Qingdao and Singapore. We combined S P O C ( Small Private Online Course) learning pattern and S T E A M ( Science, Technology, Engineering, Arts and Mathematics) educational concept for teaching kids coding skills within the camp. Since winter camp has been held for consecutive three years and every since than, we have been dedicated to use the most fun way to enabling kids learning. O F F W E G O, T O T H E F U T U R E Singapore, here we come. The very first overseas camping trip in history, we, C O D E. G A M E team gathered there 19 future creators traveled to the world famous garden city for a memorable vacation. By combining coding, brain-storming, hardware operation, we raised a group of future creators for our kids. Since our little creators all come back to school already, we now can review all the splendid moments during the trip. We introduced C O D E. G A M E to our creators and enabled them to create their own game and spur their imagination. rushing to put Ma Key Ma Key into use！ After the finishing their own game, the creators need to learn more about other necessary materials that kept the game running, of which we call Ma Key Ma Key. Hence, we empowered creators with basic electric circuit knowledge and made their own power support system for running their game. writing a script! Creators wrote down their personal introduction and fun stories happened in this trip as material for creating their own H T M L page. Kids listening carefully of teacher’s instruction Preliminary introduction to Micropython language which we divided creators to teams allowing them to work together making their own Microbit, a pedometer. sphero competition, game on! Coding language provided by A P P L E, we raised a competition for coding the movement of Sphero, a little magic ball that moves, and which team reach the destination wins. little firefighters on the train!little chiefs cooking! When our future creators become a citizen, what character will they be playing? Our creators in Kid Zania changed themselves in different uniforms representing different roles in the society to allow them experience different occupation and profession, and trained them to manage their financial statues. tour to N U S Fun in learning and playing, we walked into the “ Botanic Garden” to see tropical plants in a supposed cold winter day back in China and experience the wonderfulness of botanic world. After visiting, our creators visited the highest seat of learning — ” National University of Singapore” , taking a field trip to the most up-to-date computer science. We welcome more Future Creators to join us in changing the world with coding. Come quick and hop on board with us to the 2018 Summer Coding Boot Camp in the United States. For more information please leave a message and we will be get in touch soon.","['Education', 'Coding', 'Codingbootcamp', 'Science', 'Camping']",https://medium.com/code-game/code-game-winter-science-camp-embraced-a-perfect-ending-c8f075215b83,2,[],0,0,code.game,Unknown,Unknown,Unknown
The Software Guild,"Jump starting the career of aspiring software developers. We teach Java & C#/.NET languages. Akron, Louisville, Minneapolis & online. www.thesoftwareguild.com",Increased Interaction: How Flipped Instruction Works,2017-07-06 18:45:07,medium,"Increased Interaction: How Flipped Instruction Works You may or may not have heard the term “flipped classroom. ” At The Software Guild, we have chosen to incorporate the flipped instruction model. So we thought we should explain the basic details of what it is and why it works for our coding bootcamp. First, the phrase “flipped instruction” is not quite the same as “flipped classroom. ” The Software Guild provides both face-to-face, classroom-based instruction along with asynchronous online instruction. The model that we use for both is the same, and that’s why the term “flipped instruction” is more accurate in describing what we use at the Guild. What Is a Flipped Classroom?“ The flipped classroom is a pedagogical model in which the typical lecture and homework elements of a course are reversed, ” according to Educause. Instead of receiving instruction via lecture in the classroom, students view lecture materials via video outside of the classroom. Automatic scoring assessments (quizzes) are typically provided after viewing the resources to check students’ understanding and to provide additional materials and feedback as necessary. In the classroom, the lecture time is replaced with learning activities such as discussion and checks for understanding, typically centered around the data from the automatic scoring assessments. Several studies from Active Learning in Higher Education and more detail the benefits of active learning. This provides the best opportunity for student and faculty engagement to occur at a time and place most useful to the student. Why Is The Software Guild Using Flipped Instruction? The Software Guild has been using elements of a flipped instruction model for some time. But now, the video lectures from our online courses have been expanded on and added to the face-to-face coding bootcamp. Prior to this, we had very hands-on lessons that used active learning within our curriculum, and we saw firsthand how students excelled with these. Our decision to use a completely flipped instruction model was made simply because it is what is best for our students. We are taking what worked in specific instances and expanding it to our entire curriculum. Now students can view the video lectures multiple times. “ I have enjoyed the shift to a flipped classroom, ” Software Guild instructor Alan Galloway said. “ Two advantages stand out in my experience. First, it is helpful for the apprentices to be able to pause videos and jump back as needed to keep pace with the concepts. Second, it is beneficial for them to hear the same concept in different ways or from different voices, as it seems to help them with being able to compare and contrast how it fits in. ” Most importantly, the flipped instruction model gives students more interaction with our world-class faculty, which we know leads to successful student outcomes based on research and our own experience. “ As a teaching method, I find it helpful because the apprentices are watching videos and reading content the night before, which helps us to have conversations about the topics the next morning. ” — Software Guild instructor Sarah Dutkiewicz Interested in learning the in-demand skills required to become a developer? The Software Guild’s coding bootcamps help apprentices like you gain experience building full-stack applications from start to finish using . N E T/ C# or Java. With locations in Akron, Minneapolis and Louisville, we provide an intensive learning environment to teach you the hands-on skills required to begin a successful development career. If you are ready to learn more, check out our guide to The Software Guild for an in-depth look at the curriculum, format, application process and everything else you need to know","['Education', 'Flipped Classroom', 'Coding', 'Codingbootcamp', 'Software Development']",https://medium.com/the-software-guild-blog/increased-interaction-how-flipped-instruction-works-61cdb34270cd,0,['The Software Guild'],1,0,the,M,0.0,1.0
Kardashwin,,"Why I quit my job, and joined the Bloc Coding Bootcamp.",2018-06-05 17:30:58,medium,"Why I quit my job, and joined the Bloc Coding Bootcamp. “ Why? Why would you leave a good job? What are you going to do now? What do you mean you don’t have a job lined up?” When I told friends/family I was leaving my job with no plan about 80% of them reacted with questions like the ones above. It would make me wonder if what I was doing was actually that out of the ordinary. It would make me second guess my decision every other hour. To be honest, I had no answer. All I could come up with was I was unhappy, bored, and wanted to go find my true passion in life (most people have felt one if not all of these at some point in their careers). The truth was I missed having my back against the wall, and feeling the pressure to succeed. I had dominated my previous role in sales, and felt too comfortable. However, for the sake of my parents peace of mind I decided I needed to have an answer with substance. I decided to travel in hopes of discovering more about myself. Which sparked the remaining 20% of reactions I received after telling people about quitting and traveling. “ Dude! That’s crazy! That takes guts! I wish I had the guts to do something like that. ” Uhm. Excuse me. I don’t have guts. I’m sh****** bricks just thinking about it. Let me explain. I’m not the type of person that enjoys doing things alone. Everything from eating out to going to the movies to traveling I try to bring/meet a friend, and if I can’t then theres a good chance that I won’t do anything. How do I change my thought process? Simple, just go from one extreme to the other (dive in to the deep end). I traveled for 2 months hitting 10 different countries, and an additional month hopping around the states. I had never traveled internationally alone. I had never been to any of these countries. I didn’t have any family/friends in any of these countries. I didn’t speak any other language outside of English. I was really forced to get out of my comfort zone, and that is when I discovered coding bootcamps. I had heard about Bloc and a number of coding bootcamps prior to my travels, but never really believed it was something I could do. I never really looked in to it, but since I had no job and all this extra time I decided to do some research on them. First thing I noticed ( I’m sure its the first thing everyone notices) was the price tag. Most of the top tier bootcamps charge anywhere from 8–12 thousand dollars, with some charging upwards of 15 thousand. That is a lot of money in such a short amount of time, especially for someone without a job. I had to make sure this is what I wanted before committing. I signed up for accounts on Treehouse and Codecademy, and played around on both for about a month. I realized two very important things. First, this sucked. Second, I love it. Attempting to grasp and learn new and difficult concepts, was not fun. It was frustrating, mentally and emotionally draining, stressful, etc. However, the feeling I had when I finally got my code to execute and see the results was one of the most rewarding feelings I had ever felt bar none. I think that is the moment I realized this is something I really wanted to do. Nothing comes easy in regards to learning a new skill, but if the output of all your hard work overshadows the stress and fatigue you dealt with then I think it is something worth doing. So, I figured out what I want to do, now I just need to figure out where I want to do it. I had narrowed it down to Hackreactor, Flatiron, and Bloc. I had friends and contacts that would vouch for Hackreactor as the best thing to ever happen to them. Flatiron was the cheapest option, and seemed very community driven. They offer a free course that allows you to play around with their system, and see how they teach/how you learn. Bloc was the one that had always popped up on my google searches. They had a mentoring feature set up with their curriculum that really resonated with me. The most important thing to me was “bang for my buck”, and flexibility financially. I did not want to take out a loan and add to my debt, but at the same time I did not want to spend 10 thousand dollars up front. I eliminated Flatiron after playing around with its learning system, I wasn’t a fan. Hackreactor was to expensive, and in terms of benefits I really didn’t see how it was better than Bloc. They both have really great reputations in the tech industry, however Bloc was priced lower and gives you direct access to an industry professional (mentor). To me, it was a no brainer. I enrolled at Bloc.","['Programming', 'Software Development', 'Codingbootcamp']",https://medium.com/@ashwinroy30/why-i-quit-my-job-and-joined-the-bloc-coding-bootcamp-9a65c75571e1,1,[],0,0,kardashwin,Unknown,Unknown,Unknown
Angela Wolff,"Ex-NHS Accountant, now a coder at Makers. July 2018 cohort.",Setting up a Rails App to run production in Heroku saving images uploaded via Carrierwave into AWS…,2018-09-05 12:26:35,medium,"Setting up a Rails App to run production in Heroku saving images uploaded via Carrierwave into A W S S3 bucket It’s Engineering Project week at Makers and I have had a mightily frustrating day… I’ve been trying to figure out how to save images uploaded using carrierwave into a remote database hosted by Amazon Web Services. That comes directly after another very seriously frustrating day where I managed to crash our production site, hosted on Heroku, because (who knew?) it didn’t store image files. Apparently it is ephemeral. I was apoplectic. The team weren’t best pleased either. Photo by Fu Yong Hua on Unsplash I signed up for A W S yesterday, handed over my credit card details and then scoured the internet for helpful tutorials, while waiting for my S3 access to be authorised. The helpful tutorials sent me down one rabbit hole after another. A W S informed me I needed gem x, carrierwave proposed gem y and z, the helpful bloggers of the interweb went for a combination approach of x, y and z but with a troubling inclusion of deprecated gems like figaro. I’m getting used to wading my way through deep, muddy pools of uncertainty and copy-pasting my way towards a working app but I was actually flummoxed. It didn’t help that we haven’t fathomed out how to test our production environment anywhere other than in our production environment — which is the public facing app on Heroku. As I’d bolloxed that up the day before, and we don’t seem to have found our public yet, it didn’t seem so bad to run re-build after re-build as I tinkered with the code. But it was a slow, sloooow process and error testing on production must be terribly bad form! We did eventually get it to work and I learned some some pretty useful debugging tips along the way so I thought I better jot down some steps just in case I ever have to become an A W S code-sleuther in the future. Initial steps — note these didn’t work for me. They may for you but more importantly they worked enough to give me some very valuable stack traces. The most detailed post that includes great visual guides to setting up S3 on A W S is Switching Carrier Wave to use S3 with Heroku and localhost — Firehose Project. This uses the deprecated Figaro though and also flips all environments to A W S which broke my local development environment as well — see lightbulb moment below though. I ended up using this guide by Jia Hung Lin as it allowed me to split the handling of files between file storage for the local development environment and A W S for production (but again, note my retrospective lightbulb moment documented below). If you’re planning to use this Jia Hung’s guide I would suggest getting carrierwave setup to work locally before muddying the waters with S3. There will be more detailed guides for that stage. If you’ve done that you can just skip to the section called * Upload to s3* Heroku crashes the moment you try to upload an image and the Heroku logs reveal two issues or C L U E S. Fog is telling me that I’m not using the right region and so it’s going to redirect. It suggests I use U S- West-2 The redirect fails but looking at the hostname it clearly looks odd as my S3 bucket name is duplicated. Heroku error log Google tells me that I can amend the region to remove the Fog error message. Interweb resources for A W S repeated bucket name issues: Repeated bucket name in the U R L on A W S and issue with :path_style · Issue #228 S3 Bucket name gets duplicated in case of redirect from A W S So I change the carrierwave. rb file to include reference to the region rather than relying on the default: This still didn’t fix my problem. Clue 1 has disappeared but my hostname still has the double bucket issue. Google stops being helpful so I nip over A W S which has the world’s worst user interface but actually a very handy developer guide. It revealed something about virtual paths which had a format very similar to my dodgy hostname. It led me to think that perhaps the duplication was happening as a result of this redirection so I needed to find a way to stop that — a get it right first time approach. The logs helped again. The redirected, double bucket path was actually heading off to a totally different region us-east-2 So we finally got our production site working when carrierwave. rb looks like this: Lightbulb Moment Photo by Kendall Ruth on Unsplash Having struggled so much with A W S over the last couple of days, I felt compelled to document the route to success but rather annoyingly I had forgotten to screenshot all the error logs. I’ve now spent a few more hours trying to recreate the same problems in another project and in doing so I have had a bit of a lightbulb moment. * Now that we’ve fixed the problem, I’m convinced that it probably is a good idea to have development and production use the same storage solution. So what I thought was a flaw in the original guide may well actually answer my question of how the heck do you test the production without breaking production?* So in my new project I have coded the solution like this: This has the benefit of using A W S for file upload when run from localhost (development) and also Heroku (production). Originally published at whatapalaver. co. uk on September 5, 2018.","['AWS', 'Code Newbie', 'Codingbootcamp', 'Heroku', 'Frustration']",https://medium.com/team-rof/setting-up-a-rails-app-to-run-production-in-heroku-saving-images-uploaded-via-carrierwave-into-aws-c1cc28b0d6a6,0,[],0,0,angela,F,0.9967919835634214,0.0032080164365785964
Modestas,,"General Assembly, Web Development Immersive — Week 4 Overview",2018-03-16 11:51:23,medium,"General Assembly, Web Development Immersive — Week 4 Overview A rough start After the cessation of my nice and much appreciated two week Christmas break, it was time to resume my Web Development Immersive journey in an entirely new year. The fact that it started on a Wednesday was winsome, and after taking a considerably lengthy break, the curriculum was going to accommodate our need for adjustment by starting off at a slow and easy pace. Psyke! Though I anticipated that I would probably need a bit of time to readjust to the intense routine again, I didn’t expect it to be this arduous. The poor nights sleep on Sunday also did not help. I guess my sleeping pattern was out of wack and I wasn’t used to going to bed and waking up this early. Though I started off feeling pretty energised on Monday, especially during the morning; by 3 P M I almost completely crashed. I remember trying my hardest not to fall sleep in class. To add insult to injury, I had forgotten my lunch and ended up doing an unintentional 20 hour fast. Ultimately, my day concluded with me going home, eating (of course) and briefly looking over my class notes before going to bed relatively early in hopes of a better night sleep and consequently having more energy the following day. Backend This week was all about the backend. I was excited yet concurrently intimidated as I had no previous exposure to any backend programming prior to the inception of the course. Although there was a lot to take in and it was pretty rough at times, it felt strangely familiar and not as outlandish as I thought it was going to be. Node J S, Express, Mongo D B and Mongoose were the main topics we covered. Admittedly, there were so many components we had to “require” in our applications, that it was fairly difficult to keep track of what was happening and which particular extension was responsible for which piece of functionality. However, with that being said, the class notes were extremely useful and detailed, so going over them at the end of the lessons did make the concepts piece together eventually. They say backend programming is analogous to following a recipe and I believe that to be true, atleast from my experience. Hiatus On Friday, the plan was to collectively meet up and have breakfast at a local cafe and then meet back at the classroom for 10 A M. As you can imagine, I took this as an opportunity to get as much rest as I could. In the end, it was a great call. I had an amazing sleep and though I did end up feeling slightly groggy, it was well worth it in the end. Without a shadow of a doubt, this was by far the toughest week so far, and ironically even though it only spanned three days, it felt considerably longer than a typical week at G A. It kinda caught me off guard. The slightly disconcerting part was that there will be no further breaks from now on. Conversely, I think the lack of prospective disruptions will allow us to fully acclimate to the intensity of the course. We shall see.","['Web Development', 'Programming', 'Codingbootcamp', 'Coding', 'Tech']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-4-overview-c836ddd5c51d,0,['General Assembly'],1,0,modestas,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 59 — Last Call – conshus – Medium,2017-06-02 11:39:53,medium,"Day 59 — Last Callliner notes: Yesterday was a whirlwind! We had a code freeze / deadline to stop our final projects to be able to present / demo the next day. I don’t think I’ve ever typed so fast in my life! Haha I was able to get my Minimal Viable Product done plus a little more. Still want to do some more cosmetic things and maybe add a feature before Demo Day on Monday. I had to finish up before the deadline because I helped set up for the class to tour Purple Rock Scissors ( Purple, Rock, Scissors). I’ve been there before, but I wanted to share the goodness with my classmates. haha In addition to a tour of the space, we got to see a presentation of some of the things P R P L have done, then an engineer came in to speak with us and answer our questions. Everyone left with the same excitement I did the first time I visited. Huge thanks to Beleek, Ariel and Chris for welcoming us. In the pic: Tyler Davis have to find everyone else’s medium user names. So this is it…last call. haha Final Presentations and Graduation Day. Still have Demo Day on Monday, but after today, we’re done. Not going lie, the 3 months went by super fast! Good thing I blogged everyday so I can look back and jog my memory. haha At the end of the day, I can say I got what I wanted from the program. - Strengthened the things I learned through self teaching. - Learned A L O T of new things. - Met a lot of great people I consider to be good friends. One thing I didn’t expect was to like blogging as much as I do. Continuing, I don’t think I’ll be doing it daily, but maybe like a couple of times a week. There’s still a lot to talk about:- Finding a job- Personal projects — I’ve got a lot of ideas. (shhhh…. dwane. io)- New technologies to wrap my brain around- and so much more. Oh and it’s F O O D T R U C K F R I D A Y, but they are taking us out to eat…. so H A P P Y F R E E F O O D F R I D A Y! haha Back to work, I’ve got to get my final project ready for Demo Day, put together my resume, get business cards and put together a playlist for tomorrow’s O U R show — k N Ow B E T T E R H I P H O P. com Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Startup', 'Code', 'Codingbootcamp', 'Coding', 'Hip Hop']",https://medium.com/@conshus/day-59-last-call-96a210deb359,0,['The Iron Yard'],1,2,conshus,Unknown,Unknown,Unknown
Dex Mills,dexmills.com,React – Dex Mills – Medium,2017-05-09 20:31:28,medium,"React No matter what anyone tells you, facebook is changing not only the way that we interact with people, but the methods and how to display the communication. While it may not seem native to write a program into broken segments to programmers that come with an extensive knowledge base, it makes all the sense in the world to a greenhorn like myself. Build and Load only what is needed is what the basic gist of react is. I believe that programming in this method is on the same level as what the assembly line did for the Automotive industry. I am in no way qualified to call it but I see a future where people are going to be be only specialized sections of websites with little to no knowledge of how it is all put together. More than likely this is happening in larger organizations all ready with teams only working on certain items like ‘buttons’ or ‘search bars’ which is scary as I have no desire to be pigeon holded and stiffed on the creativiy that comes with putting this all together. Even with this course being close to being over, I still feel a general excitement of continuing to learn how to put it all together. In reality I would like to start on a large project for one person but that is not going to happen quiet yet. Still need many many more hours under the hood getting my hand dirty. First things first, getting real world experience. T I M E F E R W O R K! Song- “ Laser Cannon Deth Sentence” - Dethklokhttps://www. youtube. com/watch?v=q Z X62im Oap U","['React Native', 'Learning To Code', 'Iron Yard', 'Codingbootcamp', 'Dethklok']",https://medium.com/@dexmills/react-ded7c7ed1402,0,[],0,0,dex,M,0.0,1.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Evil Eval( )…? – Emily Deans – Medium,2017-08-06 22:49:08,medium,"Evil Eval( )…? A few weeks back, our weekly assignment was to create a basic calculator that was functional and mimicked — as best we could manage — a mockup provided by our instructors (image below may look familiar): While I felt like my submission was a pretty close aesthetic approximation and was indeed a fully-functional calculator, there was one catch — I had used the ‘eval’ function to calculate the total value of the input operations. The ‘eval( )’ function in Java Script — for those who haven’t come across it — essentially takes code presented in a string and — you guessed it — evaluates it. Given the task at hand, it seemed obvious enough to me to move forward with this approach to complete my calculator. Upon submission, however, one of my instructors brought to my attention that using ‘eval’ is not only a ‘bad’ practice, but is also potentially a dangerous one — saw more than one developer refer to it as ‘evil eval’ or ‘ B. A. D. ’ ( Broken As Designed) during my follow-up research. The big takeaways on the topic seem to be that using ‘eval’ is problematic for the following reasons: — It can open you up to dangerous attacks if malicious code is injected into your program — It can slow down the performance of your program because Java Script will have to compile the function to run while it’s loading the page — ‘ Eval( )’ can also make programs more challenging to debug because you may not be able to see exactly where errors have occurred. A lot has been written on the subject, so if you’re interested in learning more, I’d recommend taking a look at Eval is Evil, Parts One and Two , by Eric Lippert. Anyways, with some helpful direction from a classmate, I was able to rework my evaluating function to calculate correctly with O U T using ‘eval’. While it’s definitely a bit more verbose, it does work, and it also doesn’t open the program up to any malicious advances (should this be an actual live application). Initial Code Using ‘eval( )’ Revised Code Hope everyone had a great weekend. Excited to work a bit with S Q L tomorrow and I’ll see you back here then! Song of the Day: “ Cherry Lane” by Ryan Adams","['JavaScript', 'Code Newbie', 'Learn To Code', 'Codingbootcamp', 'Dctech']",https://medium.com/@emilyldeans/evil-eval-897ed0f5ae7d,0,[],0,0,emily,F,0.9979317746535663,0.002068225346433675
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,The Voyage-6 session Prep-Handbook – Chingu – Medium,2018-05-22 07:46:45,medium,"The Voyage-6 session Prep- Handbook So you don’t freak out when we start Photo by Helena Lopes on Unsplash Below is a list of links to help you get oriented and ready for your Remote-developer code Voyage! Don’t feel like you have to read & watch everything (you won’t be able to). 🔥 Reminder — The Voyage-6 Onboarding starts June 5th & teams will be released a week later. This is the first time we’ll have T W O Voyages going at the same time. T H E C O M M U N I T Y I S G R O W I N G!!!1— Why Chingu? So you’ve joined a Chingu cohort? Guess what?! Not only are you on a path to accelerate your learning and develop in-demand collaboration skills, but by joining a team you’re also contributing to Chingu’s mission of building a global collaboration capital for tech-learners. A place where developers, designers, data scientists and digital marketers with shared goals join teams to learn & build! 🚀 That’s the mission. Let’s do this!!2 — What can I expect? In your cohort you can expect a super friendly/supportive community of developers, designers and data scientists with shared goals. From across the globe (we’re talking 60+ countries). You’ll share resources and knowledge with each other, keep each other accountable, and of course, B U I L D in teams. Let’s also not forget: you will be challenged to level-up your skills. This is not a tutorial where you lazily follow through. Learning the basics of team collaboration is not easy, and it will bring you out of your comfort zones at times, but it’s a super power in today’s global economy. On that note: you can also expect that if you show grit, you’ll also come out with a shiny new project for your portfolio (some teams even build nonprofit projects or projects that create value for others). 3 — How can I prepare for this level-ups Voyage?🔥 A) Learn the basics of git/github When we ask experienced members what the number one way to prepare for a team project is, they all say: Learn the basics of git/github! If you’re new to git, do this→ Learn Git basics in 15 minutes These Git articles (written by the legendary Chingu Francesco Agnoletto) shall be your guide! Also: see Francesco’s video on git below for more. 🔥 B) Learn and begin to practice these essential Soft Skills. 30 principles to level-up your Soft Skills( Note: if you learn these principles and how to apply them, they’ll change your life, full stop. )💪 C) Solidify your coding commitment with a small donation (optional). Engineering commitment: Several years ago Meetup. com had a huge problem with meetup users starting projects but then not following through with their goals. They couldn’t understand why people weren’t doing what they wanted to do. Meetup then added a small monthly fee for organizers and suddenly the percentage of these people following through on their project commitments accelerated! Funding the mission: I believe in Chingu being free and accessible to everyone, but that doesn’t mean it’s free to make this experience available. It costs money and a lot of time to run. By funding Chingu with a small donation, you’re directly contributing to the mission of building a free collaboration capital for tech-learners. You’ll also increase the likelihood you’ll follow through on your commitments. 🙏 Chingu’s Patreon (for small monthly donation)🙏 Chingu’s Paypal (for small one time donation) D) Get acquainted with the Voyage Project Roadmap(aka how your team project will work) Note: If you don’t have a small project finished, do that before the cohort starts (or during). This topic is related the C) with commitment. A huge part of reaching your goals is commitment and follow-through. If you decided to start coding yesterday, you shouldn’t start with a team project. We need to be able to trust that you’ll committed to this and are not just going to drop out from your team when it gets tough (and it will get tough). Prove you’re committed to your goals by showing that you’ve built something. It can be a github repo project, a simple codepen, a Free Code Camp project. It’s less about impressing us with a project and M O R E about signalling that we can trust you enough to put you in a team. Note: if you don’t have a project finished yet, you’ll still be able to join the cohort and benefit from the network and opportunities like Pair- Programming. 4 — Want to be S U P E R prepared? Check these out! Voyage-related documents🔥 Team- Project Prompts(aka options for your team to build)🔥 Voyage Wiki🔥 Project Manager Wiki ( P M R O K)( It’s worth going through the Team- Lead wiki as each team will choose the team-lead amongst themselves)🎆 If you get any of these 5 Chingus on your team, you just hit the remote dev lottery🔥 So you’ve been matched in a Chingu Pair- Programming Festival: what’s next?5 — From past members (resources, experiences, etc. )🔥 Francesco Agnoletto on how to use Git/ Github in a team setting🔥@ Oliver & @ Dan, on Pair- Programming Tips (& a mini Demo)( Note: in the Voyage we also facilitate Pair-programming matches each week! 🍾)— Ben Kandelaars on his experience/team workflow in a Voyage (they reverse-engineered Airbnb!)🔥 Vannya, on being a Project Manager and Team Developer— Project Workflow with Vampiire ( Note: the Wizard bot will be slightly different in Voyage-6)— Van Tabbert on the importance of building Momentum in remote teams. Francesca Sadikin on her team’s project in a past Voyage (they built Turtles Tab!) Shout-out to Eun Park, thorbw, @miles5. 2 — Member Articles🔥 ziggysauce article on his Voyage-4 team experience🔥 Sarah Schneider (one of the creators of C O/ M E N T, a Voyage project) on her experience in a Voyage team: Six things I learned in six weeks on a Chingu Voyage Build2 Learn project🔥 Eun Park’s article on her experience in a Voyage team: Stress and insecurity: a newbie’s first remote dev team experience🔥 Matthew Burfield on his code adventure How I got a mid-level front end developer role in just 8 months5. 3— Past Project Showcases🚀 Build, hack, learn: 50+ remote developer projects from the Chingu cohorts to start your day off right ( Voyage-4)🚀 The Winter Chingu Project Showcase ( Voyage-3)🚀 The Fall Chingu Project Showcase ( Voyage-2)🚀 The Spring/ Summer Chingu Project Showcase ( Voyage-1)6 — Follow the Chingu Medium Publication 🚀 Make sure you don’t miss your cohort’s weekly update articles, member projects, news, job announcements & any other opportunities we find out about by pressing “follow” for the Chingu publication. We also publish project showcases and member articles (tutorials, tips, experiences, etc. ). I C A N’ T W A I T T O S T A R T!!","['Chingu', 'Freecodecamp', 'Codingbootcamp']",https://medium.com/chingu/the-voyage-6-session-prep-handbook-1d341a4df210,0,['Momentum'],1,473,chance,M,0.024461428631419813,0.9755385713685801
Sho Miyata,,A very Drake explanation of MVC and ‘Controlla’ – Sho Miyata – Medium,2017-07-20 22:53:34,medium,"A very Drake explanation of M V C and ‘ Controlla’ What is Drake’s favorite framework in programming? The M V C ( Model- View- Controller). Not convinced? Listen to Controlla, the song dedicated to the C in M V C. On his album Views, the V in M V C. Anyways, let’s start our story. One day, Drake meets a model. They start spending time together, and these hangouts culminate in him expressing to her that he likes her, and that she should like him too. He’s famous so he’s a little condescending about it. Almost control-ling. Drake has a lot of feelings. A whole database of feelings. The model takes some of those feelings, manipulates them based on what Drake has expressed to her, and sends them back his way. With this newfound romance in hand, Drake now has a lot of raw material to embellish, and turn into an album. What he includes or omits on this album is really up to him — he can’t tell the public exactly what has gone down, as he may lose some street cred. He decides to name his album Views. As Drake fans, we’re very interested in Drake’s love life. But unfortunately, we’ll only be able to see or hear about his love life through his album, Views. We don’t get to see what has really gone down behind the scenes. ( Credit: M E!) Don’t worry if you still don’t understand the M V C framework, I’ll be the first to admit that this wasn’t the clearest analogy. Let’s quickly walk through how the M V C works, in non- Drake terms. A user flips open a web app and interacts with it, sending out a couple user commands in the process (like logging in or searching for something). The controller receives these commands, and sends out instructions to the model. The model grabs the required data to fulfill those instructions from the database, manipulates the data, and sends them back to the controller. The controller then takes this data that the model has manipulated, and sends instructions to views on what should be seen by the user alongside the data. The user only sees and interacts with the view. The controller stands between the model and the view, and instructs them on what they should be doing. The model is the brains of the entire operation, as it actually manipulates the data. Lastly, the view is the visual representation which the user actually sees. We can see here that the controlla is arguably the most pivotal (or at least the most interesting) part of this operation, so let’s let Drake explain the controlla in his own words:[ Hook: Drake]“ I think I’d lie for you I think I’d die for you Jodeci “ Cry for You” Do things when you want me to Like controlla, controlla, yeah Like controlla, controlla, yeah” As a web app developer, the controlla will do things for you exactly when you want it to, exactly in the way you want it to. Like controlla, yeah.","['Mvc', 'Ruby on Rails', 'Coding', 'Codingbootcamp', 'Drake']",https://medium.com/@sho.miyata.1/a-very-drake-explanation-of-mvc-and-controlla-bdc20ba9072c,0,[],0,3,sho,M,0.0,1.0
Jami Gibbs,Chicago. Still learning.,2016 Year in Review – blog.jamigibbs.com,2017-01-02 21:43:28,medium,"2016 Year in Review I wrote my first ever year in review last year. In 2015 I was making some pretty big decisions that I hoped would put me on a new path professionally and personally. I got engaged, went back to school, and started thinking about the next direction my life would take. I have a sense that I’m at a pivotal moment in my life both personally and professionally. — Me, 2015 I was deliberately building sails for a new course and while in retrospect it felt like it had all just “come together”, in actuality it took a lot of hard work, persistence, and probably a bit of good timing to have been successful. Professionally By February, I was finishing up Bloc’s Frontend Developer track and starting to get a whole lot more confident with Javascript. I was starting to feel less like a website designer and more like an application developer which was a very vague, hard to measure goal I wanted to achieve. I finished Bloc with mixed feelings (some of which I hinted at in my previous year in review) but ultimately I think that without having structure like the one Bloc provided, I likely wouldn’t have progressed as quickly as I did. Bloc: Online developer bootcamp If I had to do it all over again though, I probably would have researched other bootcamp style programs and talked to people who actually attended them for candid feedback instead of relying on online reviews. There are so many other intensive programs that I could have seriously considered (online and in-person) but I didn’t for one reason or another (cost, location, time, etc). And before someone says, “ Everything you need to know about coding is already online and likely free!” Yes, I know. I think that’s awesome and I’m using those resources almost daily but don’t underestimate the value of structure, guidance, and a tangible “end goal”. I had to go the route that I thought would best maximize the time I had available. I should mention that I also supplemented Bloc with Free Code Camp’s frontend dev track which I really enjoyed. I didn’t find it super challenging likely because I was already beyond the basics by the time I started but I still learned a lot and would highly recommend it. In retrospect, I probably would have been more content with the program had I expected less from the Bloc mentor (a dedicated person assigned to you during your enrollment period and a heavily advertised “feature” of the Bloc experience). I should have instead tried to talk to other experienced developers for guidance and mentorship through local meetups or other master/grasshopper type connections. This is all entirely in retrospect though and it would have been impossible for me to have done at the time for a few different reasons one of which was my often crushing social anxiety (more on that later). I built a number of small apps and projects throughout the year and have them listed on a Projects Github repo. Rescue Themes This was a big year for Rescue Themes; the Word Press theme shop I founded in 2013. It had grown to six themes on Theme Forest, another two on the Word Press theme directory, and in the spring it came under new ownership. At the start of the year, I made the decision to move away from theme development and instead focused on learning new skills, work on new projects outside of Word Press and explore other opportunities. I couldn’t do this without handing Rescue Themes over to someone who could give it the attention it needed. For several years it had been a big part of my life so making that decision wasn’t easy. Word Press 4 evah Ultimately I knew that it was the right thing for me to do because I couldn’t give it the attention it needed or deserved with my other goals in mind. It simply came down to prioritizing the finite amount of time I had and I didn’t want to see the shop decline if I tried to take on more than I could give my full attention. I’m super proud of how far it’s come though and I’m really excited to see it continue to grow under new ownership! Envato In the summer, I started looking for an opportunity that would allow me to apply my freshly bolstered skill-set. I wasn’t sure what would be out there but I did know that for someone with a cornucopia of talents, I had a lot of options. I could start a new business. I could join an agency or studio in Chicago. I could also continue studying and experimenting! I didn’t have a chance to think too hard about it because a company I already had experience with, Envato, listed an open position for their marketplace content team. If there was ever a company I would want to transition to, it would be Envato. I didn’t think twice about it. I’m now their Content Specialist for Web Templates and it’s been quite challenging and interesting to work with all the various content in their Theme Forest and Code Canyon marketplaces. In the last few months, I’ve traveled with Envato to Denver for a meetup, Philadelphia for Word Camp U. S. , and this month I’ll be in Australia to work at the Envato headquarters. Not too shabby! Personally As if the changes to my professional life weren’t enough, I also had a big year personally. Anxiety Not a lot of people talk about this part of their life but I really think more should so I’m taking the initiative. I’ve always been an introvert but at some point it morphed into a crippling social anxiety (at times). I was always carrying around a lot of stress and insecurity so I can only guess that fed into my introversion which itself turned into panic attacks. It was something I was always able to “just manage” but it was exhausting and I was tired of it holding me back from things. What really was the tipping point was a looming wedding in October. So for six months leading up to the wedding, I worked on that part of myself in counseling. It helped me identify the things that triggered my panic attacks and helped me work through the reasons they were happening. There’s not a whole lot more to say about it except that not everything is perfect after having done it but if you’re not happy with way you’re experiencing social situations or you feel you’re being held back from enjoying life because of anxiety, it doesn’t hurt to explore the reasons why and work through them. O M G! I G O T M A R R I E D!! It was an incredibly stressful year putting together a wedding (and for my partner too I’m sure because I probably drove her crazy with my anxiety). The sheer volume of tiny little decisions, the costs, managing attendees and vendors and actually getting to the day without having a complete meltdown was an accomplishment in itself (for me at least). But it all turned out perfectly ( Mom, you were right) and I’m so incredibly happy with the day. We were surrounded by love, didn’t mess up our lines (too bad), and now I get to spend the rest of my life with the most perfect woman. Mic drop. There are of course a million other things that happened throughout the year too and I don’t mean to minimize them but there’s only so much space (and attention spans!) to work with. Looking ahead to 2017 There’s so much to look forward to in the coming year! In the spring we’ll likely buy a place of our own (renting has lost its luster) and I’m really excited to continue to grow in my new position at Envato. As for projects, I’m working on a net worth tracking Word Press plugin that I’d like to finish in the next few months and would then like to continue to build React applications (and maybe dabble a little in React Native!). I wish everyone a happy, healthy, and inspiring 2017!","['Year In Review', 'Envato', 'WordPress', 'Coding Bootcamps']",https://blog.jamigibbs.com/2016-year-in-review-f9f29fced7a0,0,[],0,6,jami,F,0.958975968436155,0.04102403156384505
Jay Mominee,,2018 Bloc Checkpoints: Welcome to Module 1 – Jay Mominee – Medium,2018-08-04 13:09:56,medium,"2018 Bloc Checkpoints: Welcome to Module 1 In this series I will analyze individual checkpoints in Bloc’s curriculum as I complete them. This is the very first lesson in Bloc and it is a broad overview of what the program covers, the level of commitment needed, and tips for success. First, this checkpoint sets the expectation that students should expect to commit 25 hours per week for 28 weeks in order to complete the curriculum. This section is important as most Bloc advertising specifies only 10–20 hours per week for timely completion. It would be more transparent if this were broken down by incoming experience level. For a total beginner 25 plus hours per week should be expected while if you have previous industry experience only 10 hours should be sufficient. Second, Bloc’s curriculum components are discussed. There are 5 modules in total which are progressed through by completing checkpoints, assignments, quizzes, and final assessments. In total there are over 120 checkpoints and students will complete multiple real-world projects. The 5 modules encompass Frontend Fundamentals, Frontend Frameworks, Computer Science Fundamentals, Backend Frameworks, and Career Success. Modules will be unlocked only after the previous one’s have been passed. Next, is Bloc’s best selling point — daily access to mentors, student success coaches, and technical assistance experts. These resources help students with troubleshooting, motivation, career advice, and technical skills. No matter what you encounter, someone is standing by to help. Lastly, Bloc’s expectations for students and tips for success are outlined. Bloc expects students to: Commit the necessary time Complete all aspects of the program as provided Prepare for and arrive at sessions on time Tips for success include: Persist in the face of frustration and failure Maintain perspective Embrace challenge Develop focus and disciplinecelebrate accomplishments This concludes Bloc Checkpoint #1, stay tuned for more…","['Education', 'Bootcamp', 'Success', 'Coding', 'Codingbootcamp']",https://medium.com/@jaymominee/2018-bloc-checkpoints-welcome-to-module-1-70ea407527ee,1,[],0,0,jay,M,0.013045137745151862,0.9869548622548482
Mike McCallum,"Welcome! I have never blogged before, but it’s never too late to start. I am an upcoming Jr. Developer with a media background, and will post my journey here.",Hello World – Mike McCallum – Medium,2018-08-26 08:48:13,medium,"Hello World Hi, world… I feel like throughout my life I have traveled and explored you many times, yet, there will be never enough lifetimes to fully experience you completely. After all, we do not travel to escape life, but travel for life not to escape us. I am Mike Mc Callum, a 27-year-old, born in Mexico City, but interesting enough I have never lived there. I’ve lived in many different cities throughout the world, 13 to be exact. You can say my childhood wasn’t ordinary but rather different. Different in the way that every two years I would become the new kid in my class over and over again until I reached the age of 16. Overall, I had a great childhood and have no complaints. I saw many cool and exotic places and met tons of new cultures, people, and foods. Fast forward to me finishing a four-year bachelor’s degree and receive my piece of paper that shows society that I am officially off my Dad’s payroll. After graduating I worked in L A for almost two years as a Production Assistant. Things were going well, until my work visa got denied and, well, things took a turn in my life. I decided to keep exploring the world and learn new things since I still did not have those commitments that tie you down to one place. Thus, here I stand in Sydney, Australia, about to embark on a programming journey to become a Jr. Developer. Exciting times await, and I will be posting my stories on this blog for the next several months. Hope you enjoy!!“ When you don’t create things, you become defined by your tastes rather than ability. Your tastes only narrow & exclude people. So create. ” ― Why The Lucky Stiff","['Travel', 'Codingbootcamp', 'Codeacademy']",https://medium.com/@mikemgmcc/hello-world-445c2b101063,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
ThirdEyeMedia,PR And Digital Marketing Consultancy for tech startups http://thirdeyemedia.press/,The art of creating news to score some great tech PR,2018-07-10 16:14:25,medium,"The art of creating news to score some great tech P R Le Wagon — A Third Eye Media case study in tech P R Founded in 2013, and with close to 3, 000 alumni worldwide and bootcamps running in 27 cities and growing, Le Wagon is now considered the leading coding school in the world. The Portuguese arm of Le Wagon was opened in Lisbon in 2016 and has already taught 130 students from an impressive 23 different countries how to code. The initial goal Le Wagon came to Third Eye Media with a clear question and goal: can you help us get media coverage in order to increase the number of signups from locals? Having had 6 months of relative silence, the objective for Le Wagon was to boost visibility and brand awareness with the aim of engaging locals and creating desirability for the coding bootcamps. This is a common request from companies and poses a critical question — in times when there is little to no news, how can we craft a news story to create meaningful media footprints? This has become an evolving role for # P R agencies, moving from the role of story tellers to that of story makers. Developing a bespoke strategy Third Eye Media sat down with Le Wagon Lisbon’s Head of Operations Shannon Graybill to understand how the coding school’s achievements to date in Portugal could be interpreted into an effective media and communications strategy. While the coding school is internationally recognised as the number 1 coding bootcamp provider, the brand of Le Wagon was relatively unknown on a local level having been in operation for just two years. However, something which did stand out for le Wagon’s Lisbon branch in the initial 18 months of operation in Portugal, and that was impressive, was the number of women attending the courses. Le Wagon Lisbon boasted over 40% female attendance on average across the year, a striking figure far higher than the average coding school. This figure was also more than double the European average number of women in tech, which hovers close to 16% and which recent reports revealed to be decreasing. According to the U K Office of National Statistics for example, only 3. 9% of individuals working in tech and telcos are female software developer and engineers — down from 10% in 2007. This decline of women working in the sector leads to a lack of diversity in the tech and digital workforce, which in turn has a negative impact on economies overall. With this current sentiment as a backdrop, Third Eye Media saw an opportunity for a positive and creative tech P R campaign that could attract the attention of the growing entrepreneurial community in Portugal, using the #paymetoo campaign and emerging status of women in tech as a catalyst. We recommended creating a piece of news showcasing Le Wagon’s above average appeal to women and positioning the school as a front runner helping to mobilise women entering the tech industry, highlighting this work against the negative news cycles about the lack of women in the industry. As a young female entrepreneur and manager of Le Wagon Lisbon’s coding bootcamps, Shannon Graybill also understood that Le Wagon could play a pivotal role in helping encourage more young women to consider careers in the tech industry in an accessible way. As a result of our brainstorming and recommendations, Le Wagon Lisbon created the Young Women in Tech Scholarship, designed for young women aged 19–23 residing in Portugal with the goal of further bolstering female attendance of Le Wagon bootcamps. A total of 5 scholarships were made available offering a 60% reduction from the price of the 9 week coding bootcamp. To maximise visibility with target audiences Third Eye Media developed a press release and strategic media outreach plan to deliver a tech P R program that would capture the attention of national daily press, tech and millenial press and most importantly the target audience. By gaining high quality media placements, the media initiative boosted national brand awareness for Le Wagon, strengthened engagement with the current community members and also successfully attracted new members into the bootcamps. “ Third Eye Media are truly in line with the pulse of the European tech scene and are able to inspire and direct the conversation in a relevant way that not only drives results for your business but gives your company a deeper, more meaningful purpose, ” said Shannon. “ The expertise and passion for what they do are to be envied. ” T H E R E S U L T S What was the outcome of this tech P R strategy? Coverage in over 20 outlets of national media and tech press including Sapo, Jornal Economico, Expresso and Noticias ao Minuto, reaching over 3 million people. The impact of the campaign and media outreach was an instant success, increasing traffic to the Le Wagon website and exceeding the average sizes of each batch of classes by 22%. The campaign successfully bolstered awareness of the Lisbon branch of Le Wagon and the contributions being made by the school for the Portuguese tech community and digital nomads based in the city. Likewise the coverage fed into the Le Wagon social media strategy as a further basis to help target local residents to register for the classes.","['Programming', 'Le Wagon', 'Codingbootcamp', 'Coding', 'Pr']",https://medium.com/@ThirdEyeMedia/the-art-of-creating-news-to-score-some-great-tech-pr-ec97d3310ff8,0,[],0,3,thirdeyemedia,Unknown,Unknown,Unknown
Mohit Gupta,Programmer. Maker.,My Experience as a Statusbrew Bootcamp intern – Mohit Gupta – Medium,2017-07-07 13:51:35,medium,"My Experience as a Statusbrew Bootcamp intern This summer I was fortunate enough to be offered a place in a 4 weeks Javascript training program supported by Statusbrew team. The aim of this program was to make us capable enough to ship production level application. To quote the statusbrew’s Bootcamp aim: Aim: To become capable enough to plan and execute a well-defined, scalable architecture for a production level javascript applications and help team members deliver complex features that add value to the business while ensuring little to no Technical Debt. My Team Kanav Arora, me, Jaskaran Singh, Paras Sharma, Rajbir Singh and Rachit Khanna. Bootcamp had 6 interns. Kanav Arora is from Manipal Institute of Technology, Jaipur. Jaskaran Singh is from Apeejay College, Jalandhar. Paras Sharma and Rachit Khanna are from G N D U Amritsar, Rajbir Singh is a working professional and I am from G N D U Jalandhar Campus. Our mentor was Rishabh Mahajan, the C T O of Statusbrew. We had a diverse team. Kanav is an Android Developer and even a founder of a startup. See his work at https://github. com/arorakanav11 Paras is a data science enthusiast. See his work at https://github. com/ Parassharmaa Rajbir Singh is a backend developer and Works in A S P. N E T and Java. He is also a hardcore gamer. Connect with him at https://www. linkedin. com/in/romeosierra1/ Jaskaran Singh is both Gamer and a budding Game Developer. His Github: https://github. com/jaskaran714 Rachit Khanna is a good programmer and an awesome manager. Github: https://github. com/ Rachitkh94 I am a programmer. I work in python and javascript. I am familiar with both frontend and backend web development. A typical day at Statusbrew office Every morning sharp at 10:15 am we all have to be present at the daily stand-up meeting. We would remove our footwear outside the office and gather up on the 1st floor and stand near our table for the stand-up. A stand-up meeting was a daily meeting in which each bootcamp team member while standing, would speak about 3 things: What we did the previous day? What would we be doing today? Problems we faced if any. This was an important meeting to keep our team members and our mentor Rishabh Mahajan ( C T O statusbrew) in the loop. Based upon our response in the meeting, he would suggest each of us how to proceed further. In this meeting, we have to raise our problems faced by us with him. During the meeting, he would help us by pointing us in right direction for solving the problem and then we would try to solve the problem. If we still fail to figure out a solution he would himself see the code and help us out. After this meeting, we would start with our assignments or stick to our learning roadmap given to us by Rishabh. Our roadmap was a list of topics related to basic javascript, regex, popular Javascript libraries, Angular 4, node. js ( Sails. js), Nginx (used for reverse proxy and web asset serving), U N I X and tools like git and pm2. After learning about a topic we all would make a small script to implement and test our knowledge about the topic. During lunch time we would go to the kitchen of the home to get our home-made lunch (home of the statusbrew’s C E O and C T O is attached to the office). This home-made lunch was one of the factors that made one month stay away from my home easy. After the end of our work for that day, we would write our Daily reports and mail it. There is no official closing time of the office. We could stay there and work for as long as we want. Sometimes I worked overnight for some assignments (though Rishabh advises against it). This bootcamp was not a typical hand holding training program. Rishabh didn’t spoon feed us theory or gave us notes to read. He just told us to study this and we would just learn on our own and help ourselves and our peers. Being an Independent self-learner is an important trait to develop. This practice also gave us space to explore things on our own. Things we learned and built We learned many new things and built many small scripts and web apps. Most of them are listed below: We configured Nginx as a reverse proxy. The aim was to learn to route request, coming from the user to different node. js servers/micro-services. We all made scripts using our basic Java Script knowledge. I made a small node. js script to extract phone numbers from a text through regex and copy them to a new file. Aim was to implement my knowledge of regex, file system in node. js and promises (bluebird. js) Each team member made a different web app using the Angular framework. I made a small C R U D App consisting of a form and list view. It was a notice board app which used browser’s localdb to store data. The aim was to learn about components, services, data binding, material design module and form validation in Angular. We created Social Leaderboard web app for hackathon organized by Statusbrew. Each participant was told to post on social media during the hackathon using the hashtag #sbcon and #lifeatstatusbrew. We tracked each team’s number of posts and engagement and ranked them accordingly. We then displayed the rank board on a web app made using Angular. I worked on the frontend and backend was done in Python by Paras, Kanav, and Rajbir. After deployment of the app, social media activity among teams increased. Screenshot of the deployed app I created a task management app. It was similar to trello. I made this to practice implementing ngrx/store for state management. Task Managment Apphttps://github. com/thedeveloperr/sbcamp2k17 — all projects are listed in the R E A D M E of this repo. S B C O N- A Hackathon and conference organized by Statusbrew During the bootcamp period intersected with a two-day S B C O N event. S B C O N event was made up of two parts: Hackathon, a 24-hour coding competitions, and lightening talks by Statusbrew experts. It was an amazing experience. Read about it in detail here http://blog. statusbrew. com/sbcon-first-global-tech-conference-amritsar. Bootcamp team also contributed to the event. Rachit and Jaskaran helped in managements and arrangements. Paras, Kanav, Rajbir and I made a small app for the event. It was our first work as a team. We created Social Leaderboard web app mentioned above. Initially, we thought it to be a tough job. But after we started planning and broke the bigger task into smaller parts, everything got moving just fine. Our Kanban model inspired task management system. Our stress lowered as cards moved from T O D O to D O N E While making the project our whole team learned about git and git workflow. For those who don’t know about git, it’s a version control software and allows teams to work on a project simultaneously with ease. The backend was being created by Paras, Kanav, and Rajbir. I was working on the frontend. We were simultaneously making independent commits (updates) to our project without waiting or contacting each other. It worked great. I learned a lot about folder structure and best practices related to Angular. Finally we made it. A post by statusbrew acknowledging our efforts : Statusbrew H Q The first shippable, deployable, presentable prototype from # S B Camp https://thedeveloperr. github. io/www. facebook. com Some good and fun moments Life here at statusbrew Statusbrew is a more than a company. Most companies call people who work there, employees. They don’t call them employees but team members. It’s like a family. This speaks a lot about their thinking. It’s not just about money, salary but about culture. We eat same home made lunch what is made in the C E O and C T O’s home. There is a home like feel here too. Statusbrew is a disciplined place. It’s also fun but work and fun both. A successful Startup is not just fun. No big thing is made just through fun. It requires discipline and hard work. These virtues can be found at statusbrew. People here are fun, smart and knowledgeable. An open workspace allows us to talk openly even to C E O and C T O. Statusbrew is a healthy place to grow. I have gained a lot of wisdom from the team members. Productivity is always a focus for them. They follow various processes to ensure productivity. Designers, Developers, Sales and Marketing team, C E O and C T O all are experts in their fields. It’s been an awesome experience here. I will surely miss my time and will join them when my time will come. If you are a job seeker I encourage you to join them. They are always on the look for talented team members. Get in touch with them via https://facebook. com/ Statusbrew H Q/ P. S. They are also looking for an awesome Javascript Developer with skills in Angular. If it’s you, join them A S A P.","['JavaScript', 'Statusbrew', 'Startup Life', 'Bootcamp', 'Codingbootcamp']",https://medium.com/@mohitgupta322/my-experience-as-a-statusbrew-bootcamp-intern-c842e5d62522,0,[],0,27,mohit,M,0.0,1.0
Modestas,,"General Assembly, Web Development Immersive — Week 5 Overview",2018-03-16 11:53:16,medium,"General Assembly, Web Development Immersive — Week 5 Overview Compared to last week, my general state of well being had improved significantly. I was less lethargic overall and had gotten back into my routine resulting in nights of higher quality sleep. I also made a few quality of life changes which were more congruent to the nature of the course. Tweaking my routine I tried a different approach to my intermittent fasting. I stopped eating at 9pm and started eating at 1pm so that I was able to eat during lunch time — like a normal person. My main reasoning behind this change was that it was quite distracting to have to break my fast in class. It became quite burdensome to have to concentrate on a lecture or participate in a lab while simultaneously snacking on some crackers. The voice of the lecturer was overpowered by that annoying amplified rhythmic crunching in my head. I guess I also didn’t want to distract anyone else. As I peeled my oranges, I noticed their scent quickly overpower the immediate surrounding area. Those were some potent oranges, let me tell you. As an unintended consequence to the earlier cessation of my eating window, I noticed that my quality of sleep had generally improved. Granted, I was trying to go to bed earlier anyway, but i found myself being able to fall asleep much faster. I assume this is because it gave a chance for my digestive system to rest instead of having the breakdown all of this food, which was probably keeping me in a state of wakefulness for a longer period of time, but im no scientist. In terms of my Fitness routine, I likewise made some welcoming changes. Instead of doing my Full body routine three times per week during weekdays, I decided to train my upperbody on Saturday, lower body on Sunday and another upper body workout on Tuesday. That way I would only have to go the gym once during the week and would thus have more time to spend on getting work done without worrying about getting a work out in as well that very same day. Now I know what you may be thinking:‘ Legs once a week? . . Cant be skipping leg day bro’ And you’d be right. However because my legs a strong point, I find that even a minimal amount of stimulation triggers their growth. In short, I dont want to end up looking like a damn frog. Its a worthy compromise in my eyes, atleast for the time being . Information Overload To ease into the week, we put aside backend programming for the first half of Monday in order to focus on the C S S pre-processor — S C S S. I was pretty excited to learn this as during my first project I felt like my C S S files were getting abit too long and unmanageable, I feel like the syntax makes more sense and is easier to grasp than regular C S S, though it can look abit daunting when you have many embedded C S S code blocks, nonetheless I was happy to be able to implement this technology into my future projects. The bulk of the week was focused on restful routing and the M V C ( Model, View and Controller) model. For me personally, as a predominantly visual learner, the main challenge in coming to terms with the interactions between the client and the server was the fact that in our case, our computer was both the client and server at the same time seen as we were running our server on localhost. As a result, it became difficult for me to visualise the process of my computer requesting and sending data to itself, though with the help of one of my Teaching assistants, I was better able to understand the process by drawing the it out on a whiteboard with a pen. To prevent our files from becoming too ‘ Fat’, we began to modularise our applications further, by placing all of our route functions in a separate controllers directories which were then required and declared in our routes file. Although having so many files was difficult to keep track of at times, I saw the benefit in splitting everything up into different modules to make it easier to maintain and manage. We also learned how to authenticate an application by hashing passwords, allowing a user to register, login and access certain pages of the website only if they had been authenticated. I remember feeling quite overwhelmed with the amount of information being fed to me in class and found it difficult to concentrate at times. If i’m honest, I would have preferred more frequent labs to hone in on each aspect of the authentication process but i guess we only have so much time. Finally, as a sort of bonus to add to our arsenal of technical knowledge, we finished the week off by learning about A J A X and A P I’s, technologies which were scheduled for a later module. We did a cool little lab as a class where we took the google maps A P I, displayed it on our page and then used it to map out all of the Boris bikes across London. It was pretty fascinating to me how much you could do with A P I’s and how accessible they are for anyone to use. Went out with a bang To finish the week, some of us headed to the local pub; the special occasion was that one of our supply teaching assistants, Rupesh, had landed a junior backend developer role at I T V. Although I only got to know Rupesh for a little over a week, he seemed down to earth and was incredibly helpful in the short amount of time that he was with our class. The most memorable part of the night was me and one our my good class mates, Jack, getting whitewashed in a game of Foosball. To be fair, my excuse was that no spinning was allowed which rendered me pretty much useless. The consequence of our comical defeat was that we had to crawl under the table. ‘aight’ I thought to myself’ — no biggie. As I confidently start crawling, I jump up and hear a loud ‘ Bang’ . For a brief second, all i see is a white flash. Confused and dazed, I realised I had just crawled too far and nailed my head on some counter. We all descended into laughter. Disappointingly, One of my teaching assistants failed to hit the record button and took a photo instead. Im still convinced that we could have had a viral video there, but oh well. Regardless, the memory lives on.","['Web Development', 'Programming', 'Codingbootcamp', 'Coding', 'Tech']",https://medium.com/@kmodestas/general-assembly-web-development-immersive-week-5-overview-60d32f966681,0,['General Assembly'],1,1,modestas,Unknown,Unknown,Unknown
Pierrah Hilaire,"🦄creative renaissance woman: 🤳🏾social media strategist, 🎨illustrator, 👩🏾‍💻creative technologist, 🇭🇹model",The Free Coding Boot Camp: How I Learned to Code in 6 Months,2018-03-08 20:03:53,medium,"The Free Coding Boot Camp: How I Learned to Code in 6 Months Tips on learning to code (for free) and how I took the plunge. Surround yourself with those that are smarter than you. I decided I would write this after attending my fourth hackathon. Honestly, the title is click-bait because I did not actually go to a free boot camp, but instead, took an alternative approach and did various projects in the span of six months with other hackers either attending established boot camps or pursuing a C S degree in college. Last year, after graduation, I was happy to be done with school but still had a yearning to learn and gain more skills. I love tech and always wanted to code but up until then my experience included breaking Word Press themes in high school and manipulating the H T M L and C S S of templates so that my Myspace profile was cute. So, I did what any millennial with a college degree would do in the face of a problem, I googled: “how to learn to code”. I was hit with several, but great, resources like Code Academy( C A), M I T’s Open Course Ware, Free Code Camp( F C C) — shout out to Quincy — Udemy, Treehouse, and everything in between. I tried watching videos but I wasn’t engaged. I like the environment F C C and C A had for coding but needed more in terms of varying project-types. I found myself lurking on forums in order to see what technical people were discussing. I needed to meet people I R L. Then I thought, “ Where would a bunch of software engineers and developers meet?, ” I mean, they had to go outside sometime. Then I realized, a hackathon. I searched for the next one in my city and instantly applied. Here we go… The Hackathon: Hackathons are like coding boot camps in that you get to apply your knowledge with projects, but hackathons are held within a shorter amount of time, over the course of a weekend. Hackers from all over the state, and sometimes the nation, come together to build awesome applications with software and or hardware and compete for prizes. What is even better about hackathons is that they are F R E E: the food, swag, and knowledge. I took the academic route and stumbled upon the Major League of Hacking’s site. ( M L H is for college and recently graduated individuals like me so it was perfect) My first hackathon was local and called Shell Hacks at F I U. I did not have a team and I was also intimidated because of my lack of knowledge in computer science, but I decided to go anyway. At my first hackathon After the opening remarks, I was sitting alone and was approached by a student — a good friend now — to join her team and together we approached another student, soon to be fellow hacker, and friend. Instantly, I felt a rush. This was really happening. Even though I had a background in graphic design, I had to be honest with my team and let them know that I could barely write any code. Does “ Hello World” count? They understood. The three of us split up the back-end and front-end of our application. A mentor from the school came up to us and told us it would be best to pair-program the front-end. I couldn’t really hard code anything so I was mostly there to observe. My pairing partner knew C++, along with other languages, but our web application would require Java Script in which he also did not know much about. Thus, he was learning on the spot. Our other awesome teammate was a front-end ninja but she decided to tackle the back-end in Mongo D B. So we were all learning something new. It is one thing to get the theoretical knowledge in a traditional class setting but actually seeing the applications being built helped me learn best. The concepts are just that, concepts, and there has to be application in order to really understand — like taking a test. I followed along as my partner set-up the environment in the terminal — I didn’t even know what the command line was — and he soon started to make the code dynamic with components in Javascript. I was learning with him as he was learning himself and I observed how he deduced the problems that arose. I was blown away. We would talk about the problems and he would challenge me to try it on my own. I am forever grateful for how nice they were… My teammates were able to place themselves out of their comfort zone and made me realize that this is possible, learning a couple of computer languages was doable. During a hackathon, I notice that the speech of my peers includes more technical vocabulary. At a coding boot camp, the students are all relatively at the same level with the same limited knowledge-base. The Finesse: In addition to the actual hacking, there are workshops at these events. M I T, Stanford, [ Insert amazing school here] graduates, senior developers, and experts come to teach their favorite framework, language, or tool to help you hack. These workshops are usually aimed towards beginners. The materials are open-source so you can follow along as if you were in a traditional class. Need to learn how to set-up your environment? There’s a workshop. Need to learn how to use Git? There’s a workshop. Want to build a mobile app? There’s a Mobile Dev workshop in Swift. Over the weekend these intelligent individuals are available to help you. To summarize: I had an awesome team (like tutors), mentors (like teachers), and attended workshops (like classes). I was fortunate to have all of these resources available to me. Now, if you are attending a hackathon to get a job, you can network. Recruiters from across the nation are there giving interviews on the spot. They will also be impressed if you use their company’s A P Is for your team’s demo. In addition, you can form relationships with them and inquire about career opportunities, even without technical skills. Pro: You can potentially have a first-degree introduction with someone at a company like Spotify, Facebook, and Microsoft. They understand that C S students are a limited resource. If you do not want a job but want to hack cool things with your friends, there are V C’s coming to see what students are working on (usually in V R/ A R and blockchain) in order to intercept them early-on. If startups are like established publications, these hackathons are like the forum Reddit, the underground community, where ideas are being exchanged and innovation is happening in real time. Overall, there are free resources, class structure, and career placement all in one weekend. If this was food it would be the “deconstructed coding boot camp” — which sounds much more clever in my head than it does out loud. The Actual Learning: The M L H season happens throughout the academic year. After Shell Hacks, over the next few months, the crew and I went to three more hackathons, back-to-back, all over the state of Florida. Each time was a chance to test my knowledge, but the real work happens in between the hackathons. I had to do the “homework”. I had to read up on the documentation, build a mini app, watch tutorials, and validate an idea I wanted to build with the team before the next meetup. I saw each hackathon as an exam. After a couple of hackathons under my belt, I had a few projects that tracked my progress. Once you start other opportunities arise. “ Learning to code” before I actually started learning. Actually learning to code. Step-by- Step: All forms of learning to code are great, the more the merrier. Each style, whether it is getting a C S degree, self-teaching, or a attending boot camp is designed for different types of learners. I went beyond my first time at a hackathon. If you are not a recent graduate I encourage you to go out into your community and look for a developer Meet Up, online or local hackathons (give money), or even coordinate your own ‘hack-weekend’ with a group of people. In short, if you want to learn to code for little to no money: Get out of your comfort zone. You might not have money, but you have time. Go to any form of hacker meetup or developer circle and befriend devs. Focus on one language at a time (avoid frameworks early on…trust me). Go to the source and read the original documentation. Who wrote this language? They usually have the best explanations and tools. Try to code and or read the documentation at least a couple hours a week or one hour a day. Build something you like with your current skill-set. It does not have to be a full app (just back-end maybe). Stick to one learning path or resource because there are so many out there. If you are going to, do videos only, or F C C by itself. Avoid jumping around pathed-resources. Set goals and create your own syllabus — here me out — it helps to structure how Y O U learn best. Join a Slack Channel like Code Buddies, but better if local. Stack Overflow. From my experience, the hacker community is very open about the transfer of information and sustaining an open-sourced culture. I understand that universities and coding schools need to make money, it is a business after all, but the actual knowledge itself should be free and is free for the most part. College taught me how to learn and apply strategies like the Feynman Technique in order to learn more efficiently. Teaching yourself to code (in a supportive community) will help you develop better problem-solving skills Good luck, and enjoy the journey. What’s Next: I am currently reading up on Java Script's documentation, taking a Python workshop, and building web apps. Follow me on my journey and stay up to date on projects I make live. Let’s learn together! Connect with me via Twitter.","['Programming', 'Hackathons', 'Hacking', 'Bootcamp', 'Codingbootcamp']",https://medium.com/@pierrah/the-free-coding-boot-camp-how-i-learned-to-code-in-6-months-8b87ada38ae0,8,[],0,80,pierrah,Unknown,Unknown,Unknown
Ferdinandus Richard,,GO-SQUADS Tech 2.0 Mini Bootcamp — Lessons Learnt – Ferdinandus Richard – Medium,2018-07-01 16:00:02,medium,"G O- S Q U A D S Tech 2. 0 Mini Bootcamp — Lessons Learnt A coding bootcamp is a training program where participants learn new things about programming or software engineering process in a determined period of time. Bootcamps usually take a month up to 3 months of intense learning process. That’s what G O- J E K gave to us as G O- S Q U A D S (that’s what we are called as interns in G O- J E K) in the first week of internship. But instead of a three-month coding bootcamp, G O- J E K gave us an intense one-week coding bootcamp since the internship period is only for 2 months. That’s why this bootcamp is called mini bootcamp. One reason why G O- J E K is creating this kind of bootcamp is actually to baseline knowledge of the interns so we know the best practices in software engineering, especially for the G O- J E K. This mini bootcamp includes learning about the technical skills and non-technical skills for the G O- S Q U A D S. There are many things that I can learn from this mini bootcamp, in both of technical and non-technical aspects. So, what are they? Here is the list for what I have learnt in the mini bootcamp. 1. Test- Driven Development Test-driven development or sometimes called the T D D is when you develop software based on tests (or specs) you create. This kind of development forces us to create the specs first to define the behaviour of a class, like returning something when a method is called or to give appropriate response based on something. When you create this tests/specs, just leave the error displayed by the I D E you use because you know you haven’t implemented the real class. After that, you can create the implementation of the method in the real class you are about to implement. After the implementation, you should run the test you’ve written and see the results. If your code passes the test, it means that your code is working properly, otherwise you need to check again your class implementation and correct the bugs. After that, commit your code to git with meaningful message so everyone understands what that commit does. This happens in minutes cycles (usually about 10–30 minutes cycles). Using this kind of development, you will get incremental development of your software. Additionally, if you use the correct commit messages in git, you will have your code development documented nicely in the git log. 2. Software Engineering Principles When it comes to software engineering, we are told to follow the principles to develop softwares. One of the most interesting principles that I’ve been told in the bootcamp is the Tell Don’t Ask principle. Tell Don’t Ask reminds us that rather than asking an object for data and acting on that data, we should instead tell an object what to do. Using this principle, we can create a software with a lower exposure of the data in classes we’ve made. For example, in one of our project, we are told to implement a Line class with a method length which is using 2 points ( Point class). To follow the Tell Don’t Ask principle, instead of implementing the calculation in the Line class — exposuring the data from the Point class — we implement the calculation of length using one method distance To in Point class. Therefore, we can keep the coordinates in the Point class remain in private. There are many other software engineering principles that I’ve learnt by joining this one-week bootcamp. They are… The Law of Demeter principle which tells us to use only one dot on calling methods, otherwise it means that you have a bad design and need to refactor your code. Keep It Simple Stupid ( K I S S) principle which tells us to create a solution as simple as possible, as stupid as possible. Following each languages convention in naming the directories, files, classes, methods, variables, constants, etc. and many more. 3. Speak Out Your Opinion! In this one-week bootcamp, we are also told to speak out our opinion. Whenever someone has presented their work or spoke about something, we are encouraged to speak out our opinion — giving suggestions about his work, asking why he is using that solution, summarizing their speech, etc. By applying this in the bootcamp, we can improve our English-speaking ability as well as our critical thinking ability too. Because I think my English capability is improving as I talk with others using English. In G O- J E K, one of the ten values hold is “criticism is a gift”. When we tell our opinion, it means that we are giving a gift to others so that we can learn about new things together and build ourselves to be better as well. But remember, you still need to be polite in speaking out your opinion. Try not to hurt other’s feelings and respect other’s opinions too. I think that’s the top 3 things that I’ve learnt during the G O- S Q U A D S Tech 2. 0 mini bootcamp. The coaches are great as they always accompany us to design solution on problems given and they taught us a lot about software engineering. I think that’s all for the blog post. I hope by reading this you can learn as much as I did in the bootcamp! Now, go ahead and code something impactful! :)","['Programming', 'Software Engineering', 'Codingbootcamp']",https://medium.com/@ferdinandus.richard/go-squads-tech-2-0-mini-bootcamp-lessons-learnt-72b6bd72907e,0,[],0,18,ferdinandus,Unknown,Unknown,Unknown
Jacob Moore,,Day 17 — That’s fetch – Jacob Moore – Medium,2017-08-09 00:33:00,medium,"Day 17 — That’s fetch So basically our projects today did not work. Yesterday we dealt with building out A P I requests using X M L Http Requests. Cool, it worked. Today we moved onto using fetch instead. Awesome. I spent an hour trying to get A N Y data to appear in my browser. Nothing. Turns out the website we were given had an issue with allowing A P Is. So that was fun. Probably should have built something as though it W O U L D have worked. My bad. Struggles: Pulling from fetch apparently. Understood: I’m getting the concepts and what they actually entail and bit by bit I’m getting the piecemeal. Just a matter of time right? Looking forward to: Getting suuuuper close to getting all my projects done. That’s gonna be awesome.","['JavaScript', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-17-thats-fetch-2a056c714bfd,0,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Harrison Spain,I am a software development educator and entrepreneur. My current mission is to train and mentor the next generation of software developers.,Real Code For Real Coders (In Training) – Redwood Code Academy – Medium,2018-05-29 17:53:20,medium,"Real Code For Real Coders ( In Training) L E D indicator installed at top of support arm Using only Java Script, we here at Redwood Code Academy have created a system to allow for real-time feedback from our students and a deeper ongoing connection between staff and cohort. Each student workstation — which includes a seat, desk, power strip, second monitor, and lovely succulents — now includes a fully programmable status L E D indicator. The status can reflect a student that needs extra help, someone that wants the lesson to slow down, an indication that they are ready to move forward to the next module and really anything else they can think of to indicate. Everything is coded using languages and technologies that each of our students have fluency in by they time they graduate our 12 or 24 week coding bootcamp programs. This allows for our students to modify, extend and learn from a system they actually use day to day. Before getting into the process and specifics of this new system, I want to explain a bit on why we created it and why projects like this are important to the success of our students. Real Code For Real Coders We constantly work to introduce new and engaging ways to teach the next generation of software developers at Redwood Code Academy. Sometimes that means adapting to each cohort’s learning style, breaking from the traditional lecture format, or gamifying the learning process. Ultimately, we want to ensure that each of our students is equipped with not only a top-tier technical skill-set, but also a healthy mindset and motivation to solve the world’s challenges. Allowing students to use, modify and create full in-house built systems to solve real world problems has been one of the best ways to teach students how to be productive and proficient coders once they have graduated. Rather than building yet another “ Todo List” app, they are able to get their hands on something that has immediate impact and where their code contributions can be felt. Working with this distributed L E D indicator system can also be easily translated to working with shipping and logistics, enterprise signaling systems, manufacturing processes, and more. For our alumni, this means having more experience to directly relate to a problem that a company they are interviewing with may need help on. This is real code for real coders. Some Specifics The latest project we have deployed involves a distributed system using Firebase, native U S B controllers, addressable L E D lights, React (including Native), V S Code extensions and Electron. There is no back-end code at all. The system relies on Google’s Firebase, namely the Firestore portion of that infrastructure to handle data. It has proven to be a robust, fast, and easy to use system to a wide array of projects we have going on here. The indicator status and other pertinent information is stored in a J S O N collection in the Firestore database and updated from the V S Code extension, U S B utility or administrative control panel. L E D installed at top of each monitor support arm The L E Ds themselves are a product called blink(1)’s. We bought one for each student workstation and installed them with a U S B extension cable to the top of each monitor’s support arm. These are relatively dumb appliances that plug into a computer’s U S B port with drivers already built in. All of their control methods and internal software are open source which gives us immense control over how they are used. Perfect for our purposes. An electron app sits in each student’s system tray ( Mac or Windows) and talks to our Firestore database. To control the lights, there are a number of React apps created, both Native and web. In addition, a V S Code extension was published to add a “ Redwood” extension to each student’s toolbar in their I D E in which they can set their status. This also allows for their status to be updated automatically based on compilation errors or other workflow checkpoints. Redwood Extension in lower right corner We also have an administrative panel which is used to control and view the students’ status from a single location. It is a rough-hewn app, but is intended to be extended as part of an ongoing learning exercise for the students. The Future The students at Redwood will be taking ownership of this system and extending it, modifying it and creating something entirely unique and incredible. Our network is constantly amazed at the level of expertise that our alumni have in building products and this will be no exception. We are excited to see where they take it and how they use the lessons learned in it’s production out to the industry.","['JavaScript', 'Codingbootcamp', 'Coding', 'Education', 'Software']",https://medium.com/redwood-code-academy/real-code-for-real-coders-in-training-6442bb1cc963,1,['Redwood Code Academy'],1,124,harrison,M,0.003321272344332235,0.9966787276556678
Clayton Waldock,Comfortably less than mediocre,My First Website – Clayton Waldock – Medium,2018-03-19 06:21:08,medium,"My First Website This time last week I was face to face with a challenge I was certain I wouldn’t be able to complete in the one week timeframe given. This challenge, as you have probably gathered from the title, was my first official webpage. As a part of my journey into the tech industry I found that a personal portfolio page would be an essential item in the process of getting a job, so I set out to create one, with the motivation of it being a marked assessment… The first stages of the project started out with user stories, a concept I was introduced to the previous week. It involves putting yourself into the shoes of users, developers and any other people who would come in contact with the product and thinking of their uses and the outcomes that they would expect. This then flowed into a style sheet where I gathered all of my inspiration and potential resources to develop a “feel” or backing concept of the design for the site. In addition to the above content I produced a wireframe for how I wanted to lay out the site, this was just done on pen and paper but there are many options to make wireframes on your computer. These elements all came together and made a fairly clear reference point and layout for the production of the site, this way I didn’t feel as lost in the process of production. With my first site being my portfolio I wanted to add a touch of me into it, this came across in my personally drawn logo and other images and icons made for the site. This overall wasn’t needed but I felt it added an individual touch to the site, it is to show off what I can do after all. I have had plenty of previous experience drawing cartoon characters in a semi-street art style, it has been used in small home animation projects and just drawn up for fun since I was young. Some of the end products Now for the hard part… Next up came the development of the site, this was daunting at the start because I simply had no idea what I was doing. I began by writing up all my sections and div’s for the three pages I was intending to make and adding some example paragraphs and headings. After that I created a css stylesheet and added different background colours to all of my elements and continued to fill in blanks where it was needed. Then came along the part that messed with my mind the most, this was getting my mind around flex-boxes and grids, but using some online cheatsheets and a lot of trial and error I ended up getting to a basic layout that worked for me. Trial and error, and error, and… error… That became my process of refinement after that point, adding small insignificant pieces to the puzzle and editing them until they worked the way i wanted them to. These small seemingly insignificant changes eventually added up to big changes that slowly but surely grew up to be the site I planned at the beginning. There are plenty of outlandish ideas that didn’t make it into the finnal addition of my site due to lack of time or skill, but I know eventually I will get it to where I want it to be. This will be something I look forward to coming back to in the future to edit and see how far I have progressed, and the concept of that progression through countless more failures is exciting. If you are setting out on your first tech endeavour just remember that failing and getting stuck are good things because they force you to learn, keep it up and remember google is your best friend!","['Design', 'Codingbootcamp', 'Portfolio', 'Web Development', 'Development']",https://medium.com/@claytonwaldock/my-first-website-45a2e354430c,2,[],0,75,clayton,M,0.004484649291210395,0.9955153507087896
Priya Bansal,,Almost Done – Priya Bansal – Medium,2018-05-20 22:58:14,medium,"Almost Done I was right. In the end, it was all about the big picture. These past couple weeks at the Grace Hopper Program of Fullstack Academy haven’t been the easiest, and I honestly think we could have ended with a better project. But that doesn’t matter anymore. The project is over, all we have left to do is present, and our presentation isn’t half bad. Tomorrow I will put on my best shirt (which isn’t saying much, I didn’t bring many good shirts with me when I moved to New York) and present with as much enthusiasm as possible. The rest of the week I will speak to Career Success, conduct mock interviews, and meet with perspective employers. And then. Finally. I will celebrate the end of my 18 year streak of school. I honestly don’t know what I’ll do with myself after I graduate. I do plan on going to meetups, both on the technical side and the more personal, spiritual side. I may join the hot yoga gym I stumbled upon one rainy day when I was waiting for the library to open so I could work on my capstone project. I’ll watch some T V. I’m currently on this show called Medium (coincidental, much?) But then what? I certainly can’t take a break from coding. Maybe I’ll play around with Ear Sketch, the innovative website designed to teach high school students Python and Javascript using hip hop music. Maybe I’ll go to more hackathons, like the one I went to yesterday which introduced me to Ear Sketch. Maybe I’ll pick up a new project. I’ve realized. I can do almost anything. I’m almost free now. The world is almost mine. I’m almost done.","['Life', 'Programming', 'Codingbootcamp']",https://medium.com/@puppylover369/almost-done-b9fbaae0262e,0,['Fullstack Academy'],1,0,priya,F,1.0,0.0
Crystal codes,"Wicked cool wife. Serial servant. ISFJ. Whovian. Software engineering student @TheIronYard. Wannabe hacker — ya gotta start somewhere, right?",Week 1 — Mission Accomplished:Still Alive – Crystal codes – Medium,2017-07-01 02:08:05,medium,"Week 1 — Mission Accomplished: Still Alive On Monday ( Day 1), I had a 1. 5 hour drive from home to The Iron Yard- which gave me just enough time to wake myself up, get butterflies (read: jitters, sweating, major anxiety), kill the butterflies, and walk into school 45 minutes early. Today ( Day 5), I walked out of school knowing more than I had in the past 2 years of (intermittent) self-study and online courses. A N D T H A T’ S J U S T W E E K O N E. Shout out to my amazing instructors ( Gavin | Jason | Mark | Angel ) A K A the Fantastic Four. Monday — Introduction to/study H T M L (think of it as the bones of a webpage) Tuesday & Wednesday — Introduction to/study C S S ( Cascading Style Sheets — it’s what allows us to design and style the webpage) Thursday — Continued work on C S S, but now we’re spicing it up with Flex Box, which helps us to layout our pages. Friday — Starting on our weekly project. ( This is due next Thursday! I’ll keep you posted. ) While the first week has been a complete deviation from my norm, I am so okay with this being my ‘new normal’. Week #2 — Bring. It. On.","['CSS', 'The Iron Yard', 'Flexbox', 'Codingbootcamp', 'Codelikeagirl']",https://medium.com/@crystalmcgowan/on-monday-day-1-i-had-a-1-5-961e4e7dd98f,1,"['The Iron Yard', 'TheIronYard']",2,9,crystal,F,0.9964206316603437,0.0035793683396563806
chibueze ukaegbu,,"LearnFactory Internship: Day 43 (June 29, 2018) – LearnFactory Nigeria – Medium",2018-07-01 05:23:06,medium,"Learn Factory Internship: Day 43 ( June 29, 2018)“ My greatest fear is that I am more than capable. ”… Bernadine Celebrating 2 months Between sun rise, sun set and down, I believe a lot from the magnificent world of knowledge was download by myself and my colleagues today. The atmosphere was filled with props and components while the state interweaved between watch(tutorials), learn and code. Today was wonderful and memorable as we had quality time, in fact a family discussion with the Chief Code Smith himself. It’s cool when you know the minds of those you are leading. This was after working hours and off course marked the end of the day. I heard it, I gave it a try, and now, I am into it, and I must say; Learn Factory Internship 2018 is one you wish you never missed. At this point I ask that you permit me to go and create my last component on React for the week, and get ready for Algorithms next week. Do have a wonderful weekend. … Bernadine writes Today marked the end of the 2nd month. It has been a truly amazing and humbling journey. I have been blessed beyond words by these young ones; and I’m overjoyed to have been a part of the great things happening in their lives. Well, we had fun, we talked, we prayed together and we looked forward to the start of the new month. The journey continues…i C Chief Code Smith","['JavaScript', 'React', 'Coding', 'Codingbootcamp', 'Internships']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-43-june-29-2018-d446bfbe8047,0,[],0,65,chibueze,M,0.0,1.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Frustrating… – Emily Deans – Medium,2017-07-04 19:13:15,medium,"Frustrating… Hit a bit of a wall on my weekly project this morning. After spending several days working diligently and trying to input new concepts and course correct from initial hacky approaches, my code looked like a mess. Even though the browser views weren’t terrible, I still had some major adjustments to make, which I was struggling to do in all the clutter on my stylesheet. Soooooo, I decided to start over from scratch, and though some of my code feels a little more thoughtfully laid out, I’m still struggling to get all the pieces working together on the C S S side and am feeling stressed for time and super behind where I wanted to be today. I did, however, have somewhat better results with my responsive web design exercise from yesterday, which introduced media queries into my stylesheet, so I’m going to share that little win below as a boost before I buckle down again with the weekly project. I hope to be able to share that one here soon, so fingers crossed I can crack the code (sorry, couldn’t help myself)! Stylesheet Code (first time using media queries!) Responsive browser views for phone, tablet, and desktop","['Web Development', 'Codingbootcamp', 'The Iron Yard', 'Women Who Code', 'Women In Tech']",https://medium.com/@emilyldeans/frustrating-5842bce9a952,1,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Chris Lee,,We're Not a Bootcamp – Launch School – Medium,2018-08-01 01:48:19,medium,"We’re Not a Bootcamp We’re Something Unique, and Uniquely Effective Photo by Kyle Johnson on Unsplash One of the things about operating in a crowded marketplace is that you tend to get lumped in with the biggest names and most common stereotypes. In the programming education space, that means the now familiar label of “bootcamp. ” I often see people refer to Launch School as a “coding bootcamp, ” which may seem like a reasonable shortcut for helping people understand what we do; however, it fails to capture what makes us special. When I talk about Launch School and what we are trying to achieve, I don’t use the word “bootcamp. ” We are an online school for developers, but more than that, we are a school with an opinionated pedagogy that focuses on fundamentals first with the goal of building skills that last a career. So, why do I steer clear of the “bootcamp” label? To put it simply, I don’t believe that it accurately describes our model. Neither our methodology nor our curriculum reflect those of most coding “bootcamps, ” and to be frank, nor do our results. Graduates of our Capstone program are getting jobs with an average salary around $110, 000, as compared to graduates of even the best bootcamps, who in the same markets are averaging salaries around $85, 000. Why is that? The reason is that we are doing something different than what the bootcamps are doing. Launch School is the only online school for developers with a pedagogy that explicitly revolves around mastery-based learning. Plenty of schools, some bootcamps included, talk about the importance of mastering the fundamentals, but we are the only one that is actually putting that claim into practice. And we do this because we firmly believe that mastering fundamentals, first and foremost, is the best way to launch a lifelong career as a software developer. Our mission is to help our students get not just any job, but top jobs, at top companies. Of course, every school and bootcamp out there makes similar claims. So today I want to talk about how Launch School is different and explain why our philosophy leads to better outcomes. The Bootcamp Model Photo by My Photo Journeys on Flickr. C C license. In order to set the stage for understanding Launch School’s philosophy, perhaps we should first take a moment to understand our point of comparison: the bootcamp model. The name of this model itself provides us with a useful starting point. A “bootcamp, ” by common definition, is a short but intense period of training meant to shock the system of people who go through it. The goal is to quickly indoctrinate participants into a new way of thinking and provide them all at once with everything they need to be successful. Most coding bootcamps operate in a roughly analogous fashion, albeit from two starting points. In one model, a bootcamp will accept any and all students who want to join. In the other, bootcamps accept only the “best” students. In both cases though, students enter the program, undergo 8, or 12, or 16, or even 24, weeks of intense instruction, and then exit the program with the hope that they know enough to start going after jobs. For the more selective bootcamps, the hope is that starting with the “best” students will result in a higher percentage of successful graduates; however, even this is an implicit acknowledgement that the model doesn’t work for everyone. In many ways, the bootcamp model is not so very different from the factory-style education model practiced by most of our broader education system. That is, students come in, go through some predefined series of steps over some predefined and non-negotiable schedule, and then come out, ready or not. But what happens when a student moves between steps too soon? What happens when a student “graduates” (meaning primarily that they made it to the end of the program) but hasn’t yet had time to put down the necessary intellectual roots? The problem with the bootcamp model is that it doesn’t provide most learners with the opportunities they need to master fundamental skills. All the model really does is guarantee that students get exposure to key concepts; however, exposure and mastery are two very different things. Imagine a typical bootcamp curriculum, which might start out something like this: Week One, basic programming syntax, control flow, and data structures; Week Two, object-oriented programming and instantiation patterns; etc. The right ideas are there, but the time constraints mean that students have no choice but to match the prescribed pace. If you happen to have a knack for the concepts taught in Week One, then you might very well be ready for Week Two. But what if you’re still having trouble with compound data structures and you need some time before moving on to O O P? Too bad, the schedule says otherwise. It is a conveyor belt without a reverse switch, and if you’re not ready, then you’ll just have to figure things out on your own. Consequences of the Bootcamp Model Photo by nikko macaspac on Unsplash By promising students lofty outcomes but then rushing them through curriculum at a breakneck pace, bootcamps are promoting a model where only the fittest are assured survival. The bootcamps have some legitimate success stories and some people do indeed come out of them just fine. If you happen to be a person with a learning style that is well-suited to the short but intense model practiced in most bootcamps, that’s great. However, I think that this model is woefully inadequate for most people. The fact that this model is so dominant in our industry is troubling to me for a few reasons. First, the bootcamp model is not setting new programmers up for long-term success. Sure, the good bootcamps ostensibly cover all of the material you would expect a programmer to know, but the model simply isn’t flexible enough to let students do what is arguably the most important skill for any developer: learning how to learn. In the day-to-day work of a professional developer, they are constantly being asked to learn new things. The learning doesn’t stop when bootcamp ends, rather, it is only just beginning — and it gets harder. If you think that you just have to buckle down and “make it through bootcamp” and then all will be O K, you’re in for a rude awakening. What enables good programmers to constantly adapt to new challenges is their ability to learn effectively. But in order to do this you have to have solid roots in the fundamentals and allow yourself the time to figure out how to learn and digest new concepts. This is how you unlock the ability to solve more and more difficult problems — problems that you haven’t solved before — and this is what the top jobs hire for. Imagine a new developer on their first day at their first engineering job. I can guarantee that by the end of the day they will have a long list of things that they have to learn in order to be effective. It might be a new technology stack that they haven’t used before, a set of internal tools, a new language, or a whole new design paradigm. What happens when the developer looks at the list and realizes that they have no idea where to start? Or worse yet, when they get started only to realize that their passing familiarity with a concept from Week Three of bootcamp doesn’t even begin to reach the depth they need? This new developer can hardly be blamed for their predicament, after all they “graduated” from bootcamp and were told “now you’re an engineer, ” but their lack of culpability doesn’t much help them as they fall into an ever deepening knowledge gap. A related concern is the failure to set realistic expectations for students. Much of the marketing literature from coding bootcamps emphasizes the short timeframes necessary to “become a software engineer, ” or “learn web development. ” In some cases, this timeframe is set as low as 8 weeks, and in others it might be as high as 24 weeks. But in both cases the problem is the same: it assumes that every student will learn at the same pace. In reality, this isn’t how learning works. Every learner experiences challenges, setbacks, and victories at different times and with different topics. Moreover, every learner still has the rest of their life to live — no one can predict when something will come up that will require a pause in their study time. For those that happen to have the right background, time, and reserve of intellectual energy, the predefined schedule might be fine. Everyone else, however, is almost certain to find at the end of bootcamp that their fundamental skills are sorely lacking. This is a result of having insufficient time to master the fundamentals, which unfortunately, and ironically, is also the same trait that employers are looking for in new hires. By promising students lofty outcomes but then rushing them through curriculum at a breakneck pace, bootcamps are promoting a model where only the fittest are assured survival. Meanwhile, the rest are left to fend for themselves when they inevitably realize that their fundamental skills need improvement. It doesn’t have to be this way though. By promoting the right learning model and setting realistic expectations for the learning journey, all students can set themselves up for long-term success. The trade off is that the promise of a quick return on investment (ie. “ Become a Developer in 12 Weeks”) must be put aside in favor of a slower, but ultimately more effective path. The Mastery- Based Learning Model Photo by alexander milo on Unsplash In order to get the most interesting jobs — the ones that challenge you to solve hard problems — you have to have mastery of fundamentals. If the bootcamp model is an approach that emphasizes high intensity over a short period, then the mastery-based learning model is its counterpart. In mastery-based learning ( M B L), there are no schedules, no deadlines, and no promises of quick return on investment. Rather, M B L calls for a learner to stick with a topic until she has mastered it. The idea is that sustained, medium-intensity effort over a long period of time results in deeper roots than a very high-intensity effort over a short period of time. Learners are not just encouraged to delve deeply into concepts, but they are required to do so before they move on. There is no pressure to advance simply because your cohort is advancing. M B L, as a pedagogy, can be applied to any field of learning, but it is particularly potent in fields where the fundamentals are both vital and cumulative, meaning that they necessarily build on top of one another in a structured fashion. Programming is one of these fields. In an M B L approach, if a learner is having trouble with working with loops, they do not move on to learning about algorithms. The reason is simple: every time you advance before you’re ready, your knowledge debt grows. And it isn’t just the principal balance that increases — it is the compounding interest that comes with trying to build new knowledge on top of shaky foundations. The more fundamental knowledge you are missing, the greater the rate at which your overall debt increases. This is how developers with insufficient mastery of fundamentals end up in unsatisfying jobs — they are constantly struggling to pay off their knowledge debt. In order to get the most interesting jobs — the ones that challenge you to solve hard problems — you have to have mastery of fundamentals. Imagine, for example, an accountant who hasn’t mastered basic math skills. What kind of job can they expect? Current market conditions and demand for accountants might mean that they can get a job, but it probably won’t be a very interesting one. If all you can reliably do is manipulate spreadsheets and enter data into Turbotax then that’s all your job is going to let you do. There is an equivalent in the programming world, which I call the “minimal viable developer. ” It is a developer who knows a framework or two and has memorized how to set up certain tools, but who doesn’t really have the depth to do much more. In other words, you can get a developer job with relatively little knowledge, but it won’t be a very good one. Moreover, when market conditions change you may not even be able to get a low-end job. That’s not what we’re aiming for with Launch School. We don’t deny that the bootcamp model works for some people, but we don’t think it’s right for most people. Photo by trail on Unsplash The Launch School approach is unique in our industry — but so are our outcomes. We are producing engineers who are ready for careers in software development and we firmly believe that this is a direct result of our M B L-based approach. Our promise is not that you can “become X in Y time, ” but that “if you take the time to successively deconstruct the path to X, and reach mastery each step, then you can become X, however long it takes. ” That’s a less compelling elevator pitch, but it’s a path achievable by all. We don’t deny that the bootcamp model works for some people, but we don’t think it’s right for most people. Our goal is for every student who finishes our program to be ready for a new career, but achieving this goal requires a commitment to a mastery-based process, which can, in some cases, take a long time. And that’s O K — most worthwhile pursuits take time. So no, Launch School is not a bootcamp. We’re something different — something that we believe is both unique and uniquely effective. You can read more about our take on Mastery-based Learning and Our Pedagogy.","['Programming', 'Coding', 'Codingbootcamp', 'Learning To Code', 'Launch School']",https://medium.com/launch-school/were-not-a-bootcamp-c33901412c38,4,[],0,1.2K,chris,M,0.13713656176653735,0.8628634382334627
Adrian Horning,"Moved to San Francisco with $1,500, no job, and a dream.",My Review of App Academy – Adrian Horning – Medium,2018-08-19 19:34:21,medium,"My Review of App Academy I thought the curriculum was good, and the program was intense, but not worth paying 28k for. I paid 5k upfront, then paid 23k after I got a job (paid over a year). A little about me — I moved to San Francisco with no job and $1, 500, so I had to deliver food in the evenings to make ends meet (and pay for App Academy). I attended App Academy from 12/17–3/18. It took me 6 months to get a job, and the salary was only 67k, which is very low for graduates of the program. I would say, if you can pay for it upfront (which would only cost you 17k), then you should do it. If you can’t afford it, just do tutorials from these individuals: Wes Bos, Scott Tolinski, and Stephen Grider. Stephen Grider’s videos are here: https://www. rallycoding. com/. (2/3 of my projects were built with tutorials). Also check out watchandcode. com from Gordon Zhu, which is also fantastic. The reason I say just do tutorials is because I spent a lot of time just saving up enough money to go to the bootcamp, when I could’ve used all that time to just code and build projects. Another couple of reasons you should consider just doing tutorials are: the alumni network isn’t as helpful as you think, and being self-taught is much more impressive going to a bootcamp. I was surprised that doing only 3 projects in your portfolio is enough to get a job, but it is. Obviously doing more would just improve your chances. If you are struggling with interviews, check out https://www. outco. io/. What might even be a good plan would be to do several projects with tutorials, then go to Outco. Or check out Haseeb’s blog: https://haseebq. com/how-to-break-into-tech-job-hunting-and-interviews/.","['Web Development', 'Codingbootcamp', 'Coding', 'Programming', 'Software Engineering']",https://medium.com/@m.adrian.horning/my-review-of-app-academy-3e6b0f94deb4,0,['App Academy'],1,15,adrian,M,0.06161420199035667,0.9383857980096433
Henry Cooksley,'bug fixes and performance improvements',"Makers, week -3: the prelude – Henry Cooksley – Medium",2018-09-10 09:54:04,medium,"Makers, week -3: the preludeis Coding Finished = false; def start Coding; end; while !is Coding Finished do; start Coding; end The precourse begins. Topics I’ve covered so far: Setting up a development environment; command line, git and Git Hub Ruby — from basics to mastery Writing a Git Hub C Vetc… Oh, and I also had to write a program that puts out its own source code. I’m not sure that I’ve quite achieved ‘mastery’ in anything, although it’s nice to consider what that would look like for a moment. What does mastery look like? Is it being prepared for every unseen problem that comes up? Memorising every built-in method and object type in the language? I think every student aiming to teach themselves something should not only know when to work and how to work (effectively), but also when to stop. What do I mean by that? There will obviously be diminishing returns to continued attention on any one part of a learning curriculum. Knowing when to stop can be informed by knowing what your final goals are. Is this purely to get a job? Then learn what your employers are looking for? Is it for personal enrichment/entertainment? Then regularly check in with yourself to ask: ‘ Am I enjoying this?’ ‘ Am I having fun?’ My aim in studying the precourse (which I have mostly finished now, since last Friday) was to get to the level of programming ability that Makers wanted me to be. My own goals might be aligned or not aligned with those of Makers. I feel like I’m going pretty quickly, but not overly so. I think I can handle more for the time being — and fortunately, at every stage in the Makers precourse, there were numerous suggestions for further reading and extension work. Happy memories… Today I will continue with what I started over the weekend: a book called Practical Object- Oriented Design: An Agile Primer Using Ruby by Sandi Metz, which was referred to by one of my coaches as “the closest thing we have to required reading here at Makers”. I never quite understood O O P when I did Java development in 2012, nor in the free Code Camp Java Script sections on O O P, nor in any of the Ruby preparation courses I did before this Makers precourse, so this might be a good time to finally get my head around it — while I have some breathing space to study at my own times and at my own pace. Why not? I also now think I understand the importance of test-driven development ( T D D) and why it’s not just another buzzword. In short, it’s designing with the requirements in mind first, rather than as an afterthought after the project has been done. Seems obvious right? You might draw an analogy with essays you did at school/university (if you had to write essays), in that for the big ones they usually give you a mark scheme to look at to get an idea of what to aim for. The difference with T D D is that you’re not provided with a mark scheme for how to get an A (or 1st), but you have to write that mark scheme yourself! It might seem weird, but actually working through a Ruby exercise in which I was poring over an R Spec test file line-by-line trying to work out what on earth it was they wanted actually got me to write a consistent, predictable, well-structured program as a result. Yay for T D D. Note to self: do a lot more R Spec stuff over the next couple of weeks, because it seems like I’ll be getting very familiar with this particular Ruby gem. I remember asking at one of the Makers open evening events ( I think it was the Q& A session I attended) whether people generally chose final projects that were ‘impressive’ to potential employers or projects that they found ‘fun’. The response I got was surprising: at least in this public space, the panel agreed that Makers is definitely about ‘play’, exploration, and making mistakes more than learning what happens to be ‘impressive’ that day. I think that answer was reassuring. However, I did also see a lot of complicated sounding React projects at the demo day too. I suspect that deep down most Makers students would be lying if they said that nothing about their time there was structured around finding a job — after all most people have paid £8000 for the privilege and with a very specific expectation in mind of what happens afterwards. I’m going to take the advice to heart anyway — to try and remain playful and have fun during these next few months. To further that goal I’ve been playing around with Actions on Google and Dialogflow, which are the two tools used in making apps for the Google Assistant. I’ve ordered a Google Home so I can test it with a ‘real’ hardware device instead of just my phone, and there are so many ideas for how to make a project out of this — including the most impressive one I’ve seen so far, which is someone who has made a fully functioning Google Assistant robot with some fairly inexpensive hardware. You can get to this tutorial by searching ‘ Google Assistant Codelabs’, it’s fairly straightforward to follow. I mentioned in my interview at Makers that just as the world saw a transition from desktop-first to mobile-first development, reflecting changing user preferences, we also might see an ‘ A I-first’ or ‘assistant-first’ model grow in popularity over the coming decade. Platforms like Dialogflow seem to help in that regard, as a voice app built with its tools can be easily ported to any number of destination platforms, such as Amazon Alexa, Microsoft Cortana, Facebook Messenger, and of course the Google Assistant. It seems like a ‘future-proof’ thing to learn then I guess. The tutorial I followed also briefly covered using Firebase, a Google-made backend tool that I’ve seen used in Makers demo day projects. All exciting stuff! I think that’s all I can think of for this week — check back next week to see if I’ve stuck with my extension work efforts, or if I’ve given up completely and had an extended break instead… Bad lighting… my future gif-making self will not thank me.","['Ruby', 'Makers', 'Makersacademy', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@hnryjmes/makers-week-3-the-prelude-823ad4db2732,0,[],0,0,henry,M,0.006597811457662824,0.9934021885423372
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 24 – Mike Brave – Medium,2018-09-13 02:05:55,medium,"42 Piscine Day 24 Edit: This is part of a series that culminated here, Next post. Previous post. Anyone who’s ever attended college knows what finals week feels like, this week has felt the same. There was a group of us talking about grabbing pizza on Wednesday night (tonight) I guess the local pizza place has a Wednesday night deal or something. But when we talked about it at lunch the consensus was “no, we need to study”. That’s about the vibe right now, people are maxing out their time, doing what they can to prepare. Many are still working on the group project B S Q (has a lot of do with optimization) but even more are just going over material and studying. Today was also the day we graded our Rush02 project, but as my team and I didn’t finish, it wasn’t a personal concern of mine. Some of my friends and I were discussing yesterday how a few of the seemingly brightest people have stopped showing up, one in particular, he was french, tall, curly haired, what most would consider good looking, What’s more is he has years of experience as a developer, so he knows his stuff. If he had half of my ambition or if I had half of his advantages I would have conquered the world a month ago. Anyways I guess the guy decided that his time in the U S A was better spent sightseeing than here in the lab, so he just sort of quit showing up. I had completely forgotten about him until they brought him up. Then we went on to list another couple of people who also were intelligent and promising candidates that just sort of stopped coming, an interesting phenomenon that I had somehow not noticed before, this has been a minority though, most of the smartest people are still here. I suppose the month long piscine is very good at one thing in particular, filtering out those who are dedicated and those who are not, those who only have a slight interest end up quitting, those who don’t feel up to the task quit as well and then at the end of it we are all filtered by ability to learn, actual skill and personality fit. The longer I’m here the more I feel converted to this style of doing things. I wonder if a clearer cut system of what’s expected and a more involved on-boarding process wouldn’t lower attrition rates, but then again is that something that they want for the program? As it is only those who truly want the opportunity, can think for themselves, know enough to proceed and are dedicated are the only ones to get in. In some ways those are the most valuable things to screen for, so really the system isn’t broken is it, not so long as it’s doing exactly what it was intended to do. I couldn’t sleep last night, I woke up at 2 A M and after laying in bed for an hour decided that going back to sleep wasn’t going to happen. So I was back at the lab until 8 A M, tried to sleep again, failed, then finally got about 4 hours between lunch and dinner. It’s thrown off my whole day, and my ability to think throughout the day. At 3 A M the lab was still lively and had about 20 people working on group or personal projects, It’s actually really cool that we have a lab that’s open 24 hours, that you can take the time to go and get something done when you can’t sleep. Around 5 A M the lab was empty, there was just two of us, me struggling to get things done and one other guy sprawled out on chairs taking a catnap. There are about 76 people in lab right now at 6:30 P M, which feels an accurate assessment. I hear that most piscines are much fuller than ours, and I know that when it’s more full the lab can get pretty hot. During our first exam when most people showed up, that first hour was unpleasantly warm. I bought a fan on recommendation, and I’ve not used it as we’ve been small most of the time. I don’t have a way to pack it on the plane, someone is getting a free fan I guess. There is a tradition of throwing a B B Q after the piscine, a few people have formed a sort of party planning committee and a “buy in” for a plate of food has started. I spent about 30 min trying to get past paypal security until I gave up and went with venmo, which was also a struggle as the search didn’t find the guy I needed to find right away. Finally I had him send me a link to his profile. The committee made a flyer, and I guess a lot of the cadets will make an appearance as well, should be cool to do some mingling. I’ve been solidifying travel plans home, flight plans, rides from airports, communicating with my job after being gone for a month. It’s odd to think about leaving in a few days. This place has almost felt like home for the last month, the people I’ve gotten to know I’ve gotten to know well, there are friendships there, I hope to see most of them again once we are all Cadets, but I know there are some I’ll not see again. A few people have invited me to come visit them where they live later, so far I’ve gotten invitations for New York, Ireland and Wisconsin. Now I’m fairly well traveled so far as the western and southern U S A, but I’ve yet to be to the northeast, and as for Europe I’ve only really been to Iceland, I’m not even sure if that actually counts lol. I’ll have to start gathering phone numbers to set up further plans. To anyone reading, if I’m still in Austin when you read this, let’s go for taco’s I know a few places. My schedule for work has me back on schedule starting Monday, I wish I could say I was excited. . . But it will be good to see some people again, they are in for a shock now that I’ve cut my hair and shaved my beard though. Many of these people have never seen me without a beard, should be a fun day. Not much else going on, we are all just working as hard as we can to either prepare for the exam or finish our last project.","['Entrepreneurship', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-24-a990ffd6873d,1,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Le Wagon Tokyo,Coding school for creative people & entrepreneurs #startup 🚀Intensive 9-week #FullStack #Bootcamps http://bit.ly/1VQNB08 👀,Can anyone learn to code? – Le Wagon – Medium,2018-05-31 05:33:38,medium,"Can anyone learn to code? If you’re asking yourself, you surely realized that mastering those new skills will open up opportunities to jump into entrepreneurship or allow you to become more independent — but you may still doubt your capacity to acquire them. Now keep calm and remember: a few years ago we were still wondering if anyone could learn to read. The short answer is yes, anyone can learn to code. It might be easier for a few of us, and it does require a few critical skills to get there. It’s definitely not easy, and a true challenge. It sometimes require a complete “rewiring” of the brain. And obviously, this takes time. But it is an attainable goal for anyone who’s ready to put in the hours and focus on it seriously. Are we all equal when learning to code? The learning experience will be different for every single person, but there is no typical profile to get started. Over five sessions at Le Wagon Tokyo, we’ve welcomed all kinds of people with various backgrounds: some designers and marketing managers, but also English teachers, finance professionals, a tech journalist, a med school graduate, and… a Ph D in Physics. Contrary to popular belief, code and mathematics are worlds apart: code is based mostly on logic. Obviously, a previous experience based on the same kind of logic will help when learning to code. For instance, if you previously studied similar topics or were using analytical skills in your past job, you’ll have an edge when it comes to understanding programming languages. On the other hand, some people will be much more comfortable with the creative side of code, front-end development for example. Letting your artistic side express itself to build visually attractive web products, that too is code. We regularly see back-end masters struggling or getting extremely frustrated when time comes to align elements on a landing page or move a box by 1px. The bottomline is, anyone can learn to code with the right amount of motivation. More specifically during the first few weeks, when you will need to deeply understand one concept before moving to the next one. Each person will have their own way, go at their own pace, and as with any new piece of knowledge you want to acquire, the main challenge is to identify how you learn best. That said, we’ve identified a few common traits among our successful students, and it’s mostly about soft skills. Learning to code: 4 key soft skills We’ve seen people struggle for weeks and suddenly understand everything. What did all these people have in common? Here are four soft skills that we think are crucial for anyone wanting to dive into code. Motivation Call it grit or hustle, this is the main point we want to figure out during each Le Wagon enrolment interview: What is your motivation? Why do you want to learn to code? The reason is quite simple: the first few weeks with us can be very demanding, and you may find yourself “lost in translation”. At that moment, your motivation will be the make or break factor. Spend only one day to wonder “ What am I doing here?”, and you will lose track of what is going on. At Le Wagon we are also coaching future entrepreneurs, and grit is conveniently the key factor that will define the future success of a company. Unlike some other skills (think learning Japanese), code has the benefit of being really rewarding when difficulty level is well balanced, and that can greatly fuel your early motivation. Curiosity One thing we tell our students from day one is “write code, test and repeat”. That’s when curiosity kicks in: within our curriculum, there are very few lines of code you can write in Sublime Text that will completely break your computer (worst case probably being infinite loops), and the learning process also goes through experimentation. Curious students won’t be worried they might make a mistake. They will write code, test, see the result and learn from it. They will also be the ones going one step further, often by figuring out different ways to make their code work. “ Write code, test and repeat” Open-mindedness What we call the “open-mindedness” trait might be the trickiest to identify for yourself (“ No, I am not stubborn”). It’s also the most difficult to acquire, since it’s exactly what you normally don’t learn at school: the ability to accept constructive criticism, acknowledging that you don’t know everything, and being ready to ask “stupid” questions. Those traits will basically put you in a “ready to learn” mode. It often comes along with a final skill: not comparing yourself to others. Socialness The cliché of a geeky developer wearing coke-bottle glasses and working alone in his basement dies hard. After you learn programming, whether you decide to become a developer, product manager or entrepreneur, you will have to interact with people. A lot of sutdents we enroll also specifically point out that “learning code alone is hard”, and it’s acknowledged that step 2 of understanding a concept (code or else) is being able to explain it to someone else. Lastly, we noticed over our five sessions that teams ending up with the best final projects were not necessarily formed by the most technically advanced students: they were the ones who knew how to work together. Do you actually enjoy it? There is a very simple way to find out by yourself: try it. Codecademy is a good place to start, but basically any online resource will do the trick. Our best (and last) piece of advice when you start learning is to pay attention to your own behavior. If after a coding session you look at your watch and realize the last four hours felt like 10 minutes, you’ve probably been bitten by the programming bug!","['Coding', 'Codingbootcamp', 'Learn To Code', 'Le Wagon', 'Beginner Coding']",https://medium.com/le-wagon/can-anyone-learn-to-code-b1d84a0bd6a,6,[],0,82,le,F,0.5308343409915357,0.46916565900846435
Katie Lentes,A curious girl in Chicago learning data web development.,Dealing with Imposter Syndrome & Self Doubt While Learning to Code,2018-03-17 00:09:43,medium,"Dealing with Imposter Syndrome & Self Doubt While Learning to Code If you’re anything like me, trying something new can be very intimidating. Making the decision is the hardest part — so if you finally signed up for that course or made a decision to spend more time teaching yourself, congrats! You’re already closer to accomplishing that goal. Once you start it’s more than likely you will experience frustration and feelings that you’re not smart enough, too distracted, or don’t have what it takes to get through it. I asked developers from a range of backgrounds if they’ve experienced these feelings and the unanimous answer was yes. I’ll share with you the best 5 ways of overcoming these feelings that I’ve used myself, and that more experienced developers used while they were learning and preparing for a career in web development. Seek out solidarity You may feel alone in your journey, especially if you’re taking an online course or living in an area where the tech industry isn’t super hot or booming. The world wide web is a wonderful place to start looking for people with similar experiences. Do some digging and figure out what sector of tech interests you. Join some Slack workspaces that center around those. There are also tons of Slack channels specific to tech communities in cities and fields. Google is your friend here! Once you’re there, you can usually find an on-boarding or introductions channel to familiarize yourself. If you’re enrolled in a program, use their slack channel diligently. You’ll quickly find people in the same boat as you by scrolling through the channels. Send some D Ms and you’ll find a great amount of camaraderie and have more friends to share resources with. Join Meetup or Eventbrite and see what’s happening I R L. Going alone can be scary but you’ll soon find out you’re not the only nervous one there. People are very willing to introduce themselves and chat with you at these types of events — we’re all there for the same reason!2. Don’t compare yourself to others This is a hard rule to follow but the most important one, especially as you keep meeting new people working on similar things. It’s easy to look at an incredible project a peer just finished and think that you yourself could never accomplish something like that. Stop those thoughts in their tracks. Everyone learns at a different pace and in a different manner. The first day I started Bloc, a friend told me this: Don’t compare yourself or your learning to anyone else in that room (or cohort). Compare yourself on Day Y with yourself on Day X to see how much you personally have learned. That piece of advice has proved itself incredibly helpful. When I think back to how much I’ve accomplished since last week, last month, and day one, I remember what I am capable of doing in the future. 3. Journal Okay, I know this is a cliche — but it’s real! You don’t have to do it in the traditional sense, but keeping track of what you’ve accomplished regularly will really help with remembering how far you’ve come. I also recommend airing out those frustrations alongside your accomplishments because when you’re struggling again (which you will), that reminder of past derailment followed by overcoming it will give you a big confidence boost. 4. Give yourself a break If you start to feel overwhelmed to a point where looking at one more line of code makes you want to scream, do something you find soothing or enjoyable for a while. If it’s nice out, go for a walk. Listen to your favorite music. Watch trashy reality T V. You get it. One thing you shouldn’t do is feel guilty. Your sanity is important, as well as your health. Take care of yourself and forgive yourself when you need to slack off. 5. Find resources, ask for help, & stay curious Plugging Google once again. If you find yourself wondering anything related to what you’re working on, chances are someone else has too. Type it out in your search engine. See what others have to say. You may find it helpful or you might be unsatisfied, but at least you tried! Keep searching. Reach out to someone that has been in the field for a while. You don’t have to be their best friend. People who code as a career already love it. They want to share their passion. Once you ask questions you’ll find these folks will be more than happy to share their insight. It’s very rare someone will ignore you or be rude! Lastly, just because you found your answer doesn’t mean you should stop looking. There are numerous solutions and answers to a single question or problem. Learn as many as you can. One answer will lead you to another, which will lead to more questions. Keep that momentum going, you’ll learn way more than expected and gain confidence along the way!","['Imposter Syndrome', 'Bootcamp', 'Confidence', 'Self Confidence', 'Codingbootcamp']",https://medium.com/@lentesk/dealing-with-imposter-syndrome-self-doubt-while-learning-how-to-code-d2ff93e0b9bd,1,[],0,120,katie,F,0.9978914988105348,0.0021085011894651
Chelsea Sandridge,,A Fairly Ruby Poem – Chelsea Sandridge – Medium,2017-04-04 20:24:06,medium,"A Fairly Ruby Poem Today I sat down to learn something new. Something that I have readily decided to do. Ruby on Rails spots every application form, and so it seems like it is time for me to conform. “ Fortran is for your granny, ” they say! But I prefer to allocate my memory this way… Allocate(something) Deallocate(something) Don’t judge us mathematicians, we know not what we do. Scientific computing isn’t always pretty and it’s certainly not new. But if your stuck in the past, you can’t get with the new, and getting stuck is not something that I want to do. So though Ruby may just sound like some rock, using it’s power will prevent one from being mocked. I discovered some Gems in the rough today, and it is humbling to know I can still learn this way. Trial and error and more error than trial, this is going to take a little while.","['Ruby on Rails', 'Web Development', 'Firehose Project', 'Fortran', 'Coding Bootcamps']",https://medium.com/@xelzi/a-fairly-ruby-poem-bf8a79265ed7,0,[],0,5,chelsea,F,0.9972002655676508,0.0027997344323491464
Jacob Moore,,Day 55–57 Agency Week and Career Stuffs – Jacob Moore – Medium,2017-10-03 20:56:46,medium,"Day 55–57 Agency Week and Career Stuffs Our last real project for The Iron Yard has actually changed to agency week which has been…interesting. I wanted to go with colossal mistake bordering on masochistic. It’s also been a time of trying to clean up old projects, build portfolios, job search, build resume, put together capstone project, etc. In addition to all of that I’ve been trying to do informational interviews, networking, and job shadowing. So to say I have time to devote to a project with three other people A N D give my full focus. Well…that’s just a lie. I would have loved to do this solely without having to deal with all the other distractions. It’s really good practice and I’ve learned quite a bit about myself. First and foremost, I’m apparently a code control freak. Oh you’ve made some changes, D E L E T E, get it out of here! Actually I’m not that severe. There’s been a learning curve with accurately pulling data from Git that caused some issues along with using the Git Ignore File. I do however struggle with dictating code assignments and then doing my own. It’s pretty difficult to assign out work, check that work against the master, and also do your own code. It’s kicking my butt at the moment. Mainly because the code I’m trying to write is fundamental to the entire thing actually working. And lo and behold, it’s not working. Probably because I’m highly distracted. Plus I think there’s an issue of fully wrapping my head around the project itself and how to make the code really compile. Today we’ve accomplished two small things that should have been dealt with Monday morning: correct associations and a seeder file. Now that those two are done it’s a matter of trying to get the actual purchase of a product completed. Guess what? I’m having issues wrapping my head around the purchase and how to move a product over into the cart then do a purchase. I get the basic premise it’s just a matter of getting to actually work for me that I’m just floundering with. On the career movement it’s been slightly delayed. Thus far I’ve applied to several places, heard back from three, one tech test, one informational interview, one networking meet up about a potential opening months away, one scheduled job shadowing, and one phone interview scheduled. So yeah…looking a tad bit bleak at the moment but with some promises that could become something down the road. I actually had a really good meet up about the potential job that’s not available just yet and I think I’d actually really enjoy it. I’m trying to bug the company’s recruiter about allowing me to do a job shadowing before the jobs even posted. Show the passion and effort right? I also at some point need to prepare for the phone interview that I’m surprised I got due to the worst job email application ever sent (it worked!). Honestly what I really need to do is stop writing this at the moment so I can go and figure out making a purchase in the e Commerce project. Yeah I’m going to go do that.","['Jobs', 'Codingbootcamp', 'Ruby on Rails']",https://medium.com/@jacob.w.moore/day-55-57-agency-week-and-career-stuffs-d6dbdd5c094a,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
App Academy,Empowering people to transform their lives by tying our success to theirs.,No Risk: Why You Should Only Attend a Coding School with Deferred Tuition,2018-06-05 22:09:13,medium,"No Risk: Why You Should Only Attend a Coding School with Deferred Tuition Deferred tuition could change the world of education. That’s what Course Report, one of the top coding bootcamp review sites, has said about App Academy’s innovative tuition model. While App Academy also offers students the ability to pay for tuition up-front, Course Report says you should seriously consider deferment because it makes the most financial sense. We can’t disagree with that assessment. Waiting to pay until after you’re hired is a powerful thing because it significantly reduces economic barriers to education. Where some students who have cash in-hand are able to attend any program, most can’t or won’t because they don’t have the resources. As an example, a Course Report demographics study from December 2017 found 42 percent of bootcamp students, such as homemakers, students, and the unemployed, didn’t have a full-time job before attending. This group largely doesn’t have available funds to pay for most bootcamps that charge anywhere from $15, 000-$20, 000 upfront. From App Academy’s end, we’ve taught thousands of people who have explicitly told us they wouldn’t have made the jump into programming without it. Their educational background is varied but uniformly tell a story that reveals their serious economic need before the bootcamp. One of our students was a college graduate whose first job was as as freelance musician making less than $20, 000 a year. For a few years, he spent most of the money he made on paying off loans, food, and rent in a metropolitan area. When he decided to change his life and get into coding, he had no bank savings to speak of. But he was able to get enough money for the down payment and to get him through the program in terms of food and housing, betting he’d be able to make up the money through his first job as a programmer. And he was right. His first job paid him $100, 000, allowing him to pay off his education in less than a year. In lieu of full deferment options, some bootcamps offer financial aid or private scholarships, but we’ve found these aren’t generous enough for individuals in low income brackets. With the average bootcamp costing about $11, 500 on average, and many on the upwards of $20, 000, scholarships worth two-three thousand dollars per student — and without high job placements numbers or guarantees — are a scary proposition. When considering the rise in cost of living and the fact that salaries at most non-tech companies have failed to keep up, income drivers like deferred tuition are a very viable option. Run towards your future at App Academy. Here are three of the main reasons objective reviewers like Course Report say you should think about deferment. You don’t have cash: People with limited financial resources can be squeezed by the total upfront cost of a bootcamp, which includes costs of living, like rent and food, as well as opportunity costs, like salary lost while you study. Financing is difficult or non-existent: Some upfront-payment schools offer partnerships with companies that lend money to fund tuition, but taking out loans is usually a separate, involved process. Loans can also rise in interest and add more money to total cost students should be paying. Low financial risk for students: App Academy takes on the risk of educating a student before receiving full-compensation because the school believes its curriculum is so strong it will lead to high-paying jobs for its students. And it does. App Academy has the highest starting salary for graduates of bootcamps and places most all of them in jobs within a year. The school was also the first bootcamp to implement the deferred tuition model, in 2012, and has more experience making it work for its students. So what’s App Academy’s main deferment program? Students are required to pay a refundable $3, 000 deposit, though that amount can be lowered if accepted into App Academy’s Deposit Assistance Program. Only once you’re hired, earning a compensation of over $50, 000 as a software engineer, will you be required to pay tuition ($28, 000 of the alum’s first-year salary). And that’s it. Over two-thousand people have gone through the program in this way. Are you next? This story was originally published at the App Academy blog. Want to know more about App Academy and its coding programs? Check out our main site.","['Education', 'Coding', 'Codingbootcamp', 'Technology', 'Programming']",https://medium.com/appacademyio/no-risk-why-you-should-only-attend-a-coding-school-with-deferred-tuition-7279a7affaf8,6,['App Academy'],1,269,app,Unknown,Unknown,Unknown
Christian Chavarro,Full-Stack Javascript Developer. Never met a burrito I didn’t like. www.christianchavarro.com,"No More Views — My Coding Bootcamp Experience, Part 7",2016-06-03 13:03:49,medium,"No More Views — My Coding Bootcamp Experience, Part 7 This is the seventh post of my journey through Ironhack’s coding bootcamp. If you haven’t already, check out the first post to get up to speed. This week was supposed to be another delightful excursion in writing broken code through Test Driven Development and perpetually putting off coming up with an actual solution. Instead, we were introduced to a new language known as Sinatra, learned how to move our apps from the Terminal to the Web, and were exposed to a development that would fundamentally alter the remainder of our time in the Ironhack program. Fly Me To Mumbai Day 13 One of my classmates wasn’t able to physically attend the class, so Josh set up a Google Hangouts session to allow him to participate in the day’s exercises. If you don’t think this happened without laughter at Josh’s expense, then you don’t know Josh like the world knows Josh. Upon loading up the Hangouts page, he immediately received a message that read “ Hi Josh, get started by calling or messaging a friend. ” His friend list was empty. Google knows Josh. After creating the session, the classmate joined the room, but as soon as Josh tried doing the same, all he got back was “ No one is here”. Story of his life. More egg on Josh’s face and more tears of laughter streaming down mine. A series of reboots and troubleshooting resolved the issue and both parties were in the Hangout session, but as soon as Josh tried turning on the webcam, a message read “ We encountered an error” followed by darkness. There isn’t a webcam built to handle Josh. This lesson got our hands dirty with H T M L and I was pumped. I’d finally be able to use Chrome for something other than desperately searching for help with my code. There wasn’t anything inherently challenging about this lesson, just lots of fundamentals and reasoning behind the work we’d be doing over the next few weeks. We covered some behind-the-scenes aspects like the H T T P status ranges that were taught to us in the following manner:1xx: Hold on2xx: Here you go3xx: Go away4xx: You fucked up5xx: I fucked up (this one spoke to my soul) We briefly discussed sessions, which are used to store information within variables that will be used across multiple pages, like items in a shopping cart. I was told they were stored in cookies, and that we’d occasionally have to clear them, to which I say “only off of a plate”. The way we define what a user sees on different parts of a site, like ‘google. com/images’ and ‘google. com/maps’ is done through views, which is like individual windows peering into separate rooms within a single house. Since the sites we’ll be working on are going to incorporate lots of pages, each with their own unique functionalities, it looks like I’m going to be dealing with plenty of Views. They gon’ think I won the Hackshow. Day 14 Looks like Ruby isn’t dead after all. Just as I thought I’d waved goodbye to my old friend, we were met this Thursday with the concept of E R B, or Embedded Ruby. It turns out that one of the purposes of views is to call up an E R B file that incorporates the Ruby code that will run the necessary programs and the H T M L that will actually display the result of those programs on screen. Josh had us create an online calculator as a paired programming exercise, and it was actually the best possible way to get us to wrap our heads around the idea of using both languages in tandem. The Ruby was hard at work making sure all the I’s were dotted and the T’s were crossed behind the scenes to ensure that the H T M L had its chance to shine in the spotlight. Truthfully, I’m not able to write much about the technical aspect of the lessons this time around because they essentially involved combining what we’ve already learned with some simple new concepts. What I C A N write about, however, is what happened as the lesson was coming to a close. Josh informed us that Faraz would be returning to Mumbai for a period of time, meaning that he would no longer be the T A for the part-time program. The entire room fell silent for a moment before faint whispers of “ Nooo” echoed throughout the room. My reaction was slightly different. Basically this. I had finally been exposed to someone who helped me reinforce everything I’d learned and provided valuable feedback on refactoring my code with a side of snark, and now he was leaving us? Poking fun at Josh is hard work and he was the champion, and now I had to do it on my own? I’d rather recreate the chess validator exercise from scratch until the end of days if it meant Faraz would stay, if only to laugh at my attempts and call me a loser. Day 15 Though we had mentioned sessions during Tuesday’s lesson, Saturday is when we actually started adding them to our code, loading up our previous exercises and breathing new life into them. An application that let us type a name within the address bar and have that name show up on the screen now required the ability to log in using a specific set of usernames and passwords contained within a hash and show the name of the logged in user on screen. Though it sounds complicated, I actually felt empowered by how feasible the work actually was. Sure, it wasn’t getting done in five minutes, but I knew exactly how I would go about turning my idea into reality. It was more a matter of testing potential solutions than anything. Because Faraz was leaving us after this class, we decided to have a group lunch at Zuuk, which is often described by its patrons as a Mediterranean Chipotle. As a former Campus Brand Manager for the latter, I think I’m qualified to say that it’s certainly deserving of that title. To my surprise, we were accompanied by plenty of former Ironhack students, many of them from his cohort. If that doesn’t prove that programs like Ironhack create unbreakable bonds between both the code and the students going through it, I don’t know what will. The last four hours of the day were spent refactoring a todo list we had previously created using the terminal as a display. Now we had to make our list tasks visible on the browser and allow users to create, delete, complete, and un-complete tasks, saving that constantly updating list of tasks to a separate file on our computer. Needless to say, we were paired up to tackle a project of this caliber. My partner and I managed to plow all the iterations with half an hour to spare by keeping our heads down when we were in a groove and collaborating with our classmates whenever we got stuck. As the class came to a close, we all said our respective goodbyes to Faraz, with plenty of hugs to go around. I figured, though, that given the platform I have through Medium, I’d end this post with a brief written farewell. To the guy who empowered me with his indifferent attitude to most things not named ‘coding’ or ‘ Faraz’. To the guy who could very well make a living selling an online course on making fun of people, and to the guy who refuses to provide students with an outright answer, instead giving them just enough advice to find the end of the trail on their own: You’re the shit. But you probably already knew that. See you on Slack. Posts about my Ironhack journey thus far: Test Driven Delight Ironhack-ing Away — The Prelude Why Ironhack? Ruby Tuesday, Thursday, A N D Saturday My Ugly Dark Twisted Code Rubye-bye-bye","['Coding', 'Codingbootcamp', 'Web Development', 'Web Design', 'Programming']",https://medium.com/@christianchavarro/no-more-views-73884e69d59d,0,['Ironhack'],1,1,christian,M,0.04483659679294586,0.9551634032070542
Jake Metz,,Week 21/5/18 to 25/5/18: – Coding Bootcamp Diary – Medium,2018-05-26 07:13:07,medium,"Week 21/5/18 to 25/5/18: We are getting back in the groove with this blogging thing. Hopefully it all results in me becoming a better writer among other things. C O N C E P T S C O V E R E D T H I S W E E K We are moving further into Java Script as we continue through ‘vanilla J S’ or core J S syntax which will serve to set us up prior to the upcoming break and next term where will dive deeper into Java Script. Review of callbacks and introduction to callback hell as well as promises. Cookies and potential use cases for using cookies (i. e. control state of a form) X M L Http, j Query & Ajax, and the fetch A P I (‘ G E T’ and ‘ P O S T’) requests. Web Storage A P I M E E T U P S/ E V E N T S A T T E N D E Dteam forming night for Random Hacks of Kindness ( R Ho K) @ Site Minder I’m pleased to say that I will be participating in my first hack the weekend of June 2nd- June 3rd. Random Hacks of Kindness ( R Ho K) is a made up of a community of technologists who volunteer their time to solve problems for purpose driven organizations. More to come on my experience but thus far it’s nerve racking even going to the team forming event. Enter thought ‘one only grows when the burn is felt’ into my head for confidence. C H A L L E N G E S/ H I G H L I G H T S O F T H E W E E K C H A L L E N G E: Having the patience and discipline to stick with my learning strategy. I’m currently in the ‘expose’ phase of Java Script and trying to soak in as much learning as I can about the core syntax. However, it is hard to not skip ahead and get straight into building. My plan is to be through ‘tutorial purgatory’ and ‘ You don’t know J S & Eloquent Java Script’ before I begin a project. H I G H L I G H T: Challenging myself to participate in my first hackathon. R E S O U R C E O F T H E W E E K P Y T H O N T U T O R ( T O O L): A code visualization tool A very handy code visualization tool that allows you to input code ( Java Script, Python, Ruby, C, C++, and Java) and then be stepped through the code in a visual format. Sometimes, I just need to follow the rabbit to understand the code and this is a quick starting point if I don’t fully understand the code I’m looking at.","['JavaScript', 'Codingbootcamp', 'Coding', 'Junior Developer', 'Programming']",https://medium.com/coding-bootcamp-diary/week-21-5-18-to-25-5-18-da077f5dfb3f,0,[],0,0,jake,M,0.0017803375257410552,0.998219662474259
Anthony Delgado,"I’ve been a developer for over a decade. From transforming start-ups into multi-million dollar organizations, to helping nonprofits solve problems with software",28 FREE Ivy League Computer Science Courses – Anthony Delgado – Medium,2018-08-07 20:25:50,medium,"28 F R E E Ivy League Computer Science Courses While Ivy League schools offer some of the best technology courses, they are highly selective and extremely hard to get into. On top of that they can also be some of the most expensive schools in the country. But the good news is that all these universities now offer free online courses across a multiple of online learning platforms. Feeling envious or curious about what a top of the line computer science education looks like? Here are 28 Ivy League courses you can take online right now for free! Enjoy and happy hacking! Introduction to Computer Science Harvard University via ed X★★★★★ (52 ratings) Algorithms, Part I Princeton University via Coursera★★★★☆ (48 ratings) Machine Learning Georgia Institute of Technology via Udacity★★★★★ (4 ratings) Analysis of Algorithms Princeton University via Coursera★★★★★ (4 ratings) Bitcoin and Cryptocurrency Technologies Princeton University via Coursera★★★★☆ (10 ratings) Introduction to Spreadsheets and Models University of Pennsylvania via Coursera★★★★★ (3 ratings) Computer Architecture Princeton University via Coursera★★★★★ (4 ratings) Machine Learning Brown University via Udacity★★★★★ (1 rating) Networks Illustrated: Principles without Calculus Princeton University via Coursera★★★★☆ (3 ratings) Software Defined Networking Princeton University via Coursera★★★★☆ (5 ratings) Machine Learning 1 — Supervised Learning Brown University via Udacity★★★★☆ (1 rating) Machine Learning: Unsupervised Learning Brown University via Udacity★★★★☆ (1 rating) Introduction to Bioconductor: Annotation and Analysis of Genomes and Genomic Assays Harvard University via ed X★★★★☆ (1 rating) Statistics and R Harvard University via ed X★★★★☆ (13 ratings) Networks: Friends, Money, and Bytes Princeton University via Coursera★★★☆☆ (1 rating) The Computing Technology Inside Your Smartphone Cornell University via ed X★★★★★ (2 ratings) Using Python for Research Harvard University via ed X Case Studies in Functional Genomics Harvard University via ed X★★★☆☆ (1 rating) Machine Learning for Data Science and Analytics Columbia University via ed X★★★☆☆ (15 ratings) Reinforcement Learning Brown University via Udacity★★☆☆☆ (6 ratings) Enabling Technologies for Data Science and Analytics: The Internet of Things Columbia University via ed X★☆☆☆☆ (5 ratings) Statistical Thinking for Data Science and Analytics Columbia University via ed X★★☆☆☆ (13 ratings) Artificial Intelligence ( A I) Columbia University via ed X★☆☆☆☆ (1 rating) Machine Learning Columbia University via ed X Big Data in Education Columbia University via ed X High-performance Computing for Reproducible Genomics Harvard University via ed X A P® Computer Science Principles Harvard University via ed X Animation and C G I Motion Columbia University via ed X Originally published at dev. to.","['Education', 'Codingbootcamp', 'Coding', 'Learning To Code', 'Disrupt']",https://medium.com/@anthonydelgado.me/28-free-ivy-league-computer-science-courses-19a0ff7666b0,1,[],0,0,anthony,M,0.004907680596533925,0.9950923194034661
Eric Stermer,,Changing paths to a new coding career – Eric Stermer – Medium,2016-09-01 16:24:51,medium,"Changing paths to a new coding career I love sports! I grew up playing football, baseball, basketball, and later became a cross country and track athlete. I got so good at it, I wanted to coach it. I loved the competition and the culture. After competing for 10 years and going to college for exercise science, i found it difficult to get coaching jobs, especially ones that pay well. After getting hurt my last track season in college, getting married, working a 50+ hours a week at my job, getting back to just simply competing as a runner fizzled out. The R E A L world has finally settled in. This began a search for who I am, who I wanted to be, and what I should do… of course after I should have had that already figured out. From trying to stay within higher Education as a admissions counselor, to possible seminary, to becoming a D P T, nothing seemed to catch on or seem right. Until one day after coming home from observation hours, I watched a video called ‘ Code Stars’. After watching this video it had sparked an interest that I had in high school for coding that sort of never caught fire. My teacher for coding basics was a jerk and didn’t know how to teach. He taught my physics class, and he just expected us to know how to do things. So I lost interest and thought it would be too hard. But spending some time with the Hour Of Code on Khan Academy helped this fire light up. I have found my passion for coding, so much so I dropped all prior pursuits and decided I am going to try and become a developer. Why not, there is high demand, it pays well, its fun, you feel like a rock star, and I love solving problems. Being the son of a developer, it just felt right. So here I am, slowly going through an I T degree at Liberty University and just started at General Assembly for Web Development to jump start my career. This is an exciting process that I will continue to post about my experiences with leading up to G A, going through G A, and finding a job after G A, as well as commenting on some projects I am working on.","['Education', 'Web Development', 'Codingbootcamp', 'Coding']",https://medium.com/@eric.stermer/changing-paths-to-a-new-coding-career-4424c74b8204,3,['General Assembly'],1,1,eric,M,0.004883786806153594,0.9951162131938464
Jacob Acosta,,ReactEd now on Github! 😁 – Jacob Acosta – Medium,2018-05-10 19:39:48,medium,"React Ed now on Github! 😁 Three weeks of planning, researching, collaborating, stand-ups, check-ins, pushes, debugging, and problem-solving on several levels has culminated in the product we are launching today! The product is an extension for V S Code that tracks and shows props values that are passed down through components in React J S X files. V S Code Market Place: https://marketplace. visualstudio. com/items?item Name= React Ed. reacted#overview Git Hub: https://github. com/ React Ed L L C/ React Ed To do this we find the bundle. js file in the root folder for a project, listen for changes to the bundle as a developer creates new files and Components in those files, looks for parent-child relationships and assigns them to a box that shows the passed-down prop values when the cursor hovers over Components in each J S X file. I’m blown away by what my awesome team has achieved. We set out to do something unique, something challenging, and something that would provide real utility to developers. Success! If you use React we also included a series of snippets to expedite your coding! Check them out too. :) Please check out our Github page and sow us your support by sharing our project with other developers and starring us on Github! We are going to keep an eye on it and develop further, so downloads/trials and comments/feedback are welcome! Keep an eye on the project moving forward! We are proud of it and want to improve it. Next we are creating a unique syntax to autocomplete and streamline the creation of nested objects. V S Code uses Intellisense and Emmet to listen to the caret position in the editor and determine if it can predict and auto-complete a word or phrase, and also enables developers to tab-complete structures stored in a library (e. g. ‘doctype’ + tab => renders an H T M L boilerplate, and ‘div’ + tab => renders an opening and closing div tag). At one point when we were stuck we reached out to the architect of Emmet for insight on how to navigate his library and how some of his functionality works. It was a shot in the dark, and fortunately for us he responded with a generous email giving some insight into the library and updates to Emmet v2. 0. I am continuously amazed and humbled by the commitment, dedication, brilliance, and kindness prevalent in the developer community. A big shoutout to Ben, Maddie and Paul for being rockstars the past few weeks, X and Ryan for the guidance, the Codesmith team for believing in us and pushing us as we continue the developer path, Emmet creator Serge, and the juniors who are always excited to ask us about our projects and show off the great things they are building, and of course the other groups who are releasing their projects today as well. And a special shoutout and thank you to Alyssa for making us cookies to celebrate — you are too kind! Sharing and showing love is greatly appreciated! Thanks to all readers!","['React', 'Coding', 'Codingbootcamp', 'Vscode', 'Emmet']",https://medium.com/@acosta.jacob.d/reacted-now-on-github-1554b78ed4f9,0,['Codesmith'],1,469,jacob,M,0.0024356479040408972,0.9975643520959591
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 05 — (Exam00)(04) – Mike Brave – Medium,2018-08-25 20:38:11,medium,"42 Piscine Day 05 — ( Exam00)(04) Edit: This is part of a series that culminated here, Next post. Previous post. Not a lot of time today (as it’s the next morning now). I’ve got a large project, a group project and all of yesterday still due tonight. I took too much time preparing for the test, which was great as I passed (got a 55/100, more than 25 is passing) but then someone told me that the exams excepting the final aren’t really weighted more than assignments, that it’s just about getting as many points as possible. I’m not sure what is true or isn’t about the process but I need to buckle down a little more. More than half of the class didn’t pass the exam, and from what I understand percentage wise this was a higher pass rate than normal, as we are expected to improve over time more than to already be masters coming in. A few people got 100% on the exam as well, but I think these ones came from a programming background already. For the group project one of our teammates has already stopped showing up a couple of days ago, I’m not sure if this will affect our grade. I may have to talk to someone. The project itself is to automate grid creation in the terminal window, not unlike creating sudoku boards. The personal project is called Sastantua (after the pyramid in Hitchhiker’s Guide) where we are visualizing different sizes from different distances. Also it’s a higher level of a project than all the others being a lvl 2 assignment, everything else has been 0 or 1. This means it will be put under heavier scrutiny and is worth more points, in gaming terms think of it like a rarespawn or a boss fight I suppose. I see less people everyday, though I think most are sticking through it. We’ve been placed on four different teams, the wufpack, snek, galacticats, and honeybadger. In each groups we have a leaderboard for points and a bit of competition has started to develop between them, but the top 7 seem to be somewhat consistent for each team, I’m solidly between 11 and 18 on my team. My partner who is still here for the group project is one who is top ranked for his team, when I talked to him about the project he had already finished and asked me to work on it a bunch to figure it out and then we would compare notes later, which sounded fair to me, so that is what I will be doing first, even though the project is worth the least amount of points of all of them as it’s level 0 and with us missing a member of our team will be extra costly to be corrected, so it’s a higher cost with a smaller reward, if a project would be given the chopping block to skip this one would maybe be it. I’m getting the swing of things now, but still feel perpetually behind and always catching up, I think it’s designed that way. I may ask to switch rooms after all as I’m really not sleeping well. Making some friends too so that’s cool. Other things of note, as pisciners we are not allowed free reign of the place, certain zones are off limits, we were given a talking to today because some took some food set out for a hackathon (ie not us). I’m spending more on vending machine snacks than I thought I would. Finding time for laundry is hard, but it seems Saturday and Sunday are the best days for this as they are less demanding (sort of). Some people have been bad at checking the slack channel, but it’s been really important to check it once in a while(we’ve gotten resources like a google calendar that notifies when you should sign up for things). I still don’t have a clear path as to how to pass this thing other than to keep trying, to help people and to rack up as many points as possible, which is about as much as I knew on the first day. Someone showed me a tool on github called towel that can auto check our work, but I think it’s a touch outdated, so even if it’s helpful it should not be treated as gospel. assignments for today were suchiterative factorial (iterative functions)recursive factorial (recursive function)function that returns the value of a power applied to a numberrecursive function that returns the value of a power applied to a numberfibonacci sequencefunction that returns the square root of a numberfind if the number is a prime numberreturn the prime number greater or equal to the number given as argumentfunction that returns the number of possibilities to place either queens on a chessboard without them being able to reach each othersame as 9 but recursive?","['Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-05-04-exam00-841d1c6408c9,2,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Bloc,"An online education company with coding and design programs built for outcomes. Check out our publication, News on the Bloc, as well as our website, bloc.io.",It’s Complicated: Estimating Software Engineering Salary,2017-07-13 06:07:24,medium,"It’s Complicated: Estimating Software Engineering Salary Our programs are structured for one outcome: to help you get a challenging new job that you love! We employ mastery learning to ensure you understand concepts before moving on to the next topic. This is critical for success in getting a job after program completion. We believe in our program so much that we have a tuition reimbursement guarantee for students who meet our program standards. If you’ve already had a call with one of our Student Advisors, you’ve probably asked about salary expectations. This is a frequent question we get and though it would be easier to give just one number, the truth is that salary estimates vary due to several changing variables. In this article, we’ll cover the range of salaries based on location for Software Engineers, highlight the complexity in estimating salary on a per student basis, and why you should care. Due to bootcamps being unregulated, numbers around salaries and expectations can be skewed and miscommunicated. As an online bootcamp that caters to people from around the world, we cannot guarantee a particular title or location. We are here to help you get the job you love through mock interviews, mentorship, and world-class career support while practicing genuine student advocacy. We practice this throughout Bloc, but when it comes to salary expectations being genuine advocates for students specifically means being transparent about the state of industry standards and what students should use to set their expectations. Here are a few factors that go into estimating salary when looking to get a job in software engineering: Job location It is likely that there are different salary estimates for cities in the same state. For example, someone in San Diego will get paid differently than someone in San Francisco. Over 100 cities are covered under our tuition guarantee umbrella, which makes pinpointing salary for each one difficult. Most programs, including Bloc, will highlight median salary on a national level since many online bootcamps are national (in our case, worldwide). A great resource to look at when researching salaries based on specific locations is salary. com. Below is a specific example of the wide range of salaries by state for those who are looking to be Software Developers of Applications. This gets more complex as you narrow down to a city level: Software Developer, Applications Annual Median Salary(source: bls. gov) Job level Median salaries listed by the B L S cover the gamut of software engineers. That means people with the same job title could have a different level of experience. Someone who’s been working in software for 2+ years is going to be paid differently than someone who has 0 years of experience. Job title If you complete our Software Developer Track program, you’ll be able to apply for a wide range of jobs with different job titles. Given the apprenticeship and depth of our program, students who excel in our Software Developer Track program may be able to work in a position higher than junior level depending on the company and requirements of the job. You’ll be paid less for a junior level position than a higher level position, so apply to both as you’re job searching as even this slight change in title can affect your potential salary. Company Working at Google is different than working for a startup. The size of company will make a difference in your compensation package. Glassdoor is a great resource when researching specific companies. If you have a dream company that you want to work for, this is where you would go to get an estimated salary, potential stock options, and benefits. Note that for smaller companies or startups, there may not be salary or benefits data for a specific position you’re interested in applying for. For example, the salary estimates for a Jr. Software Engineer for Yelp in San Francisco is $95, 610, whereas a smaller company, like Zap Labs has a Jr. Software Engineer position with an average salary between $74, 000 and $83, 000. Due to the difficulty of estimating this number, our tuition reimbursement guarantee promises a minimum offer of $60, 000 for a role relating to software development. We believe this is possible with the help of our Career Services team that has worked hard to help Bloc students get jobs all over the United States. They are here to help you determine the quality of the offers you receive and make sure that you are negotiating effectively for the highest salary possible. Interested in learning more about our Software Developer Track? Attend one of our daily information sessions!","['Tips', 'Coding Bootcamps', 'Education', 'Software Development', 'Web Development']",https://medium.com/newsonthebloc/its-complicated-estimating-software-engineering-salary-71cadfc4c97d,0,[],0,21,bloc,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 26 — (Final Exam) – Mike Brave – Medium,2018-09-15 02:51:50,medium,"42 Piscine Day 26 — ( Final Exam) Edit: This is the end of a series that culminated here, Previous post. The piscine is over and my only regret is that I could have focused more the last few days. I didn’t do well on the final and so my expectations of acceptance aren’t super high. One of the prefects was like “don’t count it out yet” and I might have brushed it off, sorry. Stranger things have happened and were it to happen I would take it as such a vote of confidence I would move mountains to live up to it. We will find out in a couple of weeks. More likely I will try again in October, build upon what I’ve learned so far and come back more prepared and ready to continue the path toward mastery. It’s not enough just to get in, this is about learning a craft, of understanding and the joy of finding out “oh so that’s how that works”. I can safely say now that figuring out how to make code work is a joy now when it started as something that felt overwhelming. I found myself figuring things out and learning things even during the final, there were moments of frustration, triumph, curiosity and joy. Right now our B B Q is in full swing, I excused myself to write this and to get a jump on laundry before my flight in the morning. Food was great, company better, I really will miss some of these guys. This place felt like home, if you can get through the initial frustration I would recommend it to anybody who wants to learn the deeper aspects of code, in all a fantastic experience and I wouldn’t trade it for anything. Since the piscine is over we no longer have lab access, and my laptop is broken so this was written on my phone, I apologize if anything is misspelled or out of place. I’ll do the recap/postmortem in a couple of days once I’m back in Austin. Until next time.","['Life', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-26-final-exam-6b8130f51236,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Codeworks,"The leading JavaScript bootcamp in Europe. We teach JS for the full stack in the heart of Barcelona. For more info, check out our website: www.codeworks.me",CodeHer #3: Grace Hopper – Code Words – Medium,2018-09-12 12:55:07,medium,"Code Her #3: Grace Hopper Amazing Grace, Our Mother of Code. At Codeworks Bootcamp Barcelona, we’re calling them Code Hers. Female computer scientists, techies, developers and programmers. Join us for this five-part series, shining a light on famous Code Hers throughout history alongside Codeworks students past and present. It’s a small step in a continuing fight against the huge gender gap in the industry. Discount for Women Another step we’ve taken is our discount: we offer 10% off course fees for women at our Barcelona Bootcamp. Until we’re teaching both male and female students, in a healthy 50/50 split, we have work to do, positively discriminating towards female applicants. First, we’ve been shining a light on three women from the past, and two from the present. That means we’re wrapping up the past with none other than Grace Hopper. So, let’s jump back to W W2, circa 1944 when Hopper began her computing career. Image credit: Beyond Curie. Cool Code Her facts: Hopper helped to create the first all-electronic digital computer She fought to get in to the Navy and ended up as Rear Admiral. At the age of only 34 she was told she was too old. But she persisted. Eventually, she stayed in the navy so long that she retired twice. She took apart alarm clocks as a kid. Just for fun. It’s not hard to see why they nicknamed her Amazing Grace. She coined the phrase “a bug in the computer. ” While trying to repair a computer in W W2, Grace discovered a moth caught in a relay. She taped the moth in the log book. From that, she then taped the moth into her log book and wrote: “first actual bug found. ” One of the world’s largest gatherings of technologists, is named after her: The Grace Hopper Celebration. If you’re ever in Texas on your travels, check it out. Image credit: Wikipedia. Why She’s a Maverick Where to begin? The woman was phenomenal. And funny too, have a watch of her on the David Letterman show. As Sarah Zinger, a web engineer who volunteered as mentor at the Grace Hopper Program says:“ I don’t think I know anybody who’s a woman in tech who doesn’t know about Grace Hopper. She’s definitely one of the role models that people look toward. ” Hopper was one of the first computer programmers to work on the Harvard Mark I, as Navy Rear Admiral. She helped develop C O B O L, one of the first high-level programming languages, (more on C O B O L later). But not only that, oh no. Hopper also invented the first compiler, a program that translates programming code to machine language. Interestingly, she saw this computer related technology as her biggest achievement. With an unfailing optimism, Hopper had a distinctive edge over everyone else in the computer business. She believed that there was always a way to improve on technology. And she improved technology herself, staying curious, keeping it simple, and training others. She stuck at it:“ If you do something once, people will call it an accident. If you do it twice, they call it a coincidence. But do it a third time and you’ve just proven a natural law!” Machines were a bit bigger in World War 2. Image credit: Legacy. What Can We Learn From Grace To understand Hopper’s achievements, we must first understand two things. Context: Whilst W W2 meant more job opportunities for many women, Hopper’s success in two male-dominated fields, computing and the U. S. Navy. That’s pretty exceptional. Programming language: C O B O L. There are dozens of different languages, including Ada (named after Code Her#1 Ada Lovelace), Algol, Pascal, Prolog and our friend in this case: C O B O L. Ultimately, programs written in a high-level language must be translated into machine language by a compiler or interpreter. C O B O L was one of these first high-level programming languages, designed in the 1950s. It might not be as modern as the Javascript that we teach at Codeworks, but C O B O L is remarkable. Why? The answer is simple: Lesson 1: Keep it Simple Unlike some high-level computer programming languages, C O B O L uses English words and phrases to make it easier for ordinary business users to understand. Grace, our ‘ Mother of Code, or Grandmother of C O B O L’, campaigned for its ordinary English use. C O B O L was far simpler than machine code or assembly languages. So when building code, keep it as easy to understand as you can. Lesson 2: Stay Curious Grace took apart alarm clocks as a child. Her restless curiosity stayed with her throughout her life, a trait all our Code Hers and students share. Rumour has it she dismantled seven clocks, until her mum realised what her daughter was up to. Grace was then limited to just the one alarm clock! Lesson 3: Set Standards In the 1970s, Hopper advocated for the Defense Department to replace large, centralized systems with networks of small, distributed computers. Any user on any computer node could access common databases on the network. She also pioneered the implementation of standards for testing computer systems and components. Setting a high standard for testing your own code, and allowing clear access to that code, whatever the stack, is always a good idea. Grace Murray Hopper at the U N I V A C keyboard. Image credit: Wikipedia. Lesson 4: Encourage Your Junior Teammates Grace was a big believer in mentorship, once saying: “ The most important thing I’ve accomplished, other than building the compiler, is training young people. They come to me, you know, and say, ‘ Do you think we can do this?’ I say, ‘ Try it. ’’ And then I back ’em up. ” Until her death in 1992, Hopper was sought after as an educator of young programmers. She was an early advocate of using shared code libraries too. We have a feeling that if she was with us she would have liked Git Hub or Three. js with it’s all its accessibility and forums to help others. Finally, Hopper believed that programming did not have to be an impossible task. That optimism is a quality that unites all our Code Hers in this series. Next up # Code Her4: For the next instalment in our Code Hers series, we’ll be meeting a Codemaker of today. She’s a triathlete, bootcamp graduate and front-end developer: Anna Collins. We’re proud of her curiosity and the latest part of her Barcelona-based coding journey. Anna works at Holaluz, and shares Grace Hopper’s philosophy: coding should be kept simple. Watch this space.","['Tech', 'Women In Tech', 'Grace Hopper Conference', 'Codingbootcamp', 'JavaScript']",https://medium.com/code-words/codeher-3-grace-hopper-d9f6d455c71b,0,[],0,0,codeworks,Unknown,Unknown,Unknown
Austin Fisher,,My journey of learning to code – Austin Fisher – Medium,2018-02-02 23:37:10,medium,"My journey of learning to code I recently completed a full stack coding bootcamp and thought this might be a good time to reflect on my experience and possibly provide a little insight to anyone who is considering learning to code. I wanted to share my experience, coming from the perspective of someone who knew next to nothing before taking this leap. So, let me introduce myself: My name is Austin, and I am a 29-year-old software developer from San Francisco. Coding bootcamps have grown in popularity over the past five plus years as the number of jobs have increased, with the amount of people interested in technology and high salary jobs that come along with them growing exponentially. It wasn’t until I moved to San Francisco about 5 years ago that I first heard the phrase “coding bootcamp. ” A friend at work first introduced me to the term and explained how he was learning Ruby in a bootcamp, and that they assisted in helping him find a job after completing four months of rigorous course work. This instantly had me intrigued as someone who has always been fascinated by computers and technology, even if it’s just exploring the internet. From that day on, I always had a desire to learn more about coding bootcamps and software development. I don’t come from a traditional background that someone typically excepts a developer to come from, but I think thats what makes my story interesting. After high school, I attended one year of community college, but found I wasn’t mentally ready for school. After many talks with my parents — and coming from a military family — I eventually agreed to enlist in the United States Air Force. Joining the military proved to do more good for me than I could have ever imagined. I not only grew up, but also learned a lot about myself and instilled values such as discipline, respect, and attention to detail that helped make me the person I am today. I ended up being stationed at Nellis Air Force in Las Vegas for most of my enlistment, which is a dream come true for most young people. I will never forget turning 21 on the Las Vegas strip. Me next to one of the drill instructors After the military I found work in at a local casino restaurant. Living in a city built around hospitality and customer service, this type of job was easy to find. I quickly moved up from a busser to server to barback, and eventually became a bartender with a lot of attention to detail and a constant eagerness to learn something new everyday. After five years in Vegas, I found my myself looking for a change and decided to move to San Francisco with the help of some of my friends. With San Francisco being one of the best food cities in the world, I found myself behind the bar again at various upscale restaurants to make a decent living. Working behind the bar provided me many easy opportunities to talk to and question different people working in the tech industry. When asked “ What is the best way to get into development?”, most people said the fastest and easiest way is through a coding bootcamp. After hearing this from dozens of people, I finally decided to explore some options. There are hundreds of coding bootcamps out there, each one offering something a little different. Like different languages, stacks, amount of time, money, and job perks. After doing some research, playing around on free code camp, (https://www. freecodecamp. org/) and reading different reviews from previous students, I had narrowed my search down to one that fit my learning style and suited my needs. I chose Thinkful (https://www. thinkful. com/) for many reasons, but the big one being that I couldn’t afford to stop working and dedicate 12 weeks of 40+ hours per week learning to code and still pay my bills. Thinkful offers a part time course (6 months) that works around your schedule and requires about 25 hours per week, although the more hours you put in the better you are going to do. They also pair you with a mentor to meet with you three times each week, and provides one-on-one learning — another big plus for my learning style. In addition to the part-time course they also cater towards people with little to no experience in coding, and guarantee you’ll find a job within six months of graduating the course. This bootcamp isn’t for everyone’s learning style, but if you have any other questions about it, I would love to share more. After taking a two week fundamental prep course, I already learned a lot and that gave me the confidence that I could take on the challenge of the full coding course. I thought I was ready, but boy was I wrong. In May 2017 I enrolled and began my journey. The first few weeks of the course were still learning the fundamentals, covering H T M L, C S S and basic principals. These were some of the best weeks because the problems I encountered were minimal and I was able to see immediate results of my studying and coding practice. Being able to move a box up and down, or change the color of it instantly helped me build up confidence. #button { color: # B A D A55; } After the first month I began learning my first lines of Java Script and j Query (a lightweight, and easy to use library for Java Script that allows you to write less and do more). This is when the course first started to test my problem solving, patience, and grit. Let me backtrack for a second and explain the routine I had set up. Working as a bartender, most my shifts were in the evening where a lot of nights I would get home from work after midnight or even 2 A M on weekends. I would wake up during the week around 9 in the morning and aim to be on my computer by 10. That would give me about 5 hours a day to read and work on projects before heading to work for the night. This was my life for six months with the occasional weekend off to keep myself sane. Wake up, code, meet with my mentor, code, go to work, sleep, repeat I would end up frustrated most days, but found that the more persistence I had and more time spent applying the code I learned provided promising results. The first project I ever made from scratch was a quiz app that users could interact with. It would keep track of the right and wrong answers and display them to the user at the end of the quiz. It took me some time to finish it — and was nothing special — but upon completion I was proud of myself and had something to show for my hard work. Here it is… Throughout the course you are required to build three capstone projects that will ultimately be displayed on your portfolio and will be given to potential employers. These projects kicked my butt, and often left me wanting to punch a hole in my computer screen. After you spend hours coding, think you’re making some progress, and come to find your code didn’t work led to unimaginable amounts of frustration. But, there was a light at the end of the tunnel. This frustration ended up evolving into my favorite aspect of coding: problem solving. Actual gif of me at many points during the course Imagine you’ve spent an hour working on a certain feature and then you go to test it out, and it doesn’t work. You give it another shot, and it still doesn’t work. Another hour later and you’re blood is practically boiling at this point, you go to click on this new feature and B O O M, S U C C E S S!!! I love it when you finally get the result you were expecting and everything works as intended. It truly brings a smile to my face after solving a problem, especially after failing a couple of times. Other than the capstones, my second biggest challenge was the five mock interviews you are required to do. These are in place to simulate real world interviews, where there is an intro, questioning aspect, followed by a technical challenge, and ends with a review of how it went. I learned a lot in these interviews because they gave me insight into what I was inevitably going to face in the coming months. They also helped me work on smoothing out my nerves during interviews, which has been a problem of mine for awhile. There were many times I didn’t think I could do it, and often questioned why I even began this journey to begin with. But with some motivation from my mentor I stuck with it and am so happy I did. I have come a long way and learned more than I could have ever imagined. Last week I was paired with a career coach who mentors me during the job search process and helped me prepare my resume, keeping me on my toes with the technical questions. They say that finding a job is actually harder than the course itself, but after completing the course I feel like I can do anything. function get Dev Job(studying, hardwork, luck) {} I will continue to share my experiences through the job search in the coming weeks/months. Cheers!","['Programming', 'Codingbootcamp', 'JavaScript']",https://medium.com/@austinfisher_44696/my-journey-of-learning-to-code-bc821778ff03,3,[],0,2,austin,M,0.011043745557148715,0.9889562544428513
Alonso Del Arte,"is a composer and photographer from Detroit, Michigan. He has been working on a Java program to display certain mathematical diagrams.","First Integrate Detroit cohort to graduate soon, applications open for second cohort",2018-08-21 18:09:49,medium,"First Integrate Detroit cohort to graduate soon, applications open for second cohort On Saturday, August 25, 2018, the first Integrate Detroit cohort will graduate. I’m one of seven students working on a final project in a computer programming class that teaches test-driven development and pair programming. I’m of course grateful for congratulations and good wishes. But the main reason I’m telling you about the graduation is because maybe you know someone in metro Detroit who could use a course like this. Applications are now open for the second cohort. No hard deadline has been set, but as a practical matter, I suggest you tell people you refer that they should apply by August 31, because the second cohort is slated to start soon after Labor Day. Realistically, I think that an application on September 1 is an application for the third cohort, which will probably start in January. The location for the second cohort will probably be the same as the almost downtown Detroit location my cohort goes to, but the instructor is open to consider other Detroit locations. Universities teach computer programming, but the focus is more academic, not industry, and most if not all of what they teach can be learned from books. Coding boot camps, the good, the bad and the ugly, have more industry-relevant curricula that still leaves out test-driven development and pair programming. It’s easy to know the dictionary definition of test-driven development and give an example or two. That’s what I’m going to do right now. In test-driven development, the first implementation of a function or procedure should fail a test. Then you rewrite the tested subroutine so that it passes the test. Maybe the first test wasn’t very thorough, so you either augment the first test or write another test, which the tested subroutine might now fail. And so, the tests guide the process. This gives programmers greater confidence in what they’re writing. Testing is not a chore left to the end. By foreseeing what the problems might be, the programmers can be more confident in what they deliver to the quality assurance team. Now an example, which might feel like a toy example. Suppose you have to write a function that tells whether an integer is prime or not.  public static boolean is Prime(int num) {    return false;  } This is of course wrong. But it’s good enough to get a failing first test.  @ Test  public void test Is Prime() {    assert False(is Prime(10));    assert True(is Prime(7));  } Of course 10 is not prime, so the first assertion holds. But 7 is, so the second assertion will fail the test. So you go back to is Prime and rewrite it so that it correctly identifies positive prime numbers as prime. But what about negative primes? Does your implementation give the correct result for those? Just add assertions and find out.    assert False(is Prime(-10));    assert True(is Prime(-7)); You should probably also test for −1, 0 and 1. Easy enough, right? However, this doesn’t really capture what test-driven development is like in an actual project with multiple pairs or teams, working on several different components, some of which are from third-party libraries. Nor does it do justice to that feeling you get in going from a seemingly daunting task to something that turns out to have been very simple after all. Maybe you can learn test-driven development from a book. But to learn pair programming, you really have to be in a pair with an actual human being. That’s the benefit of a class that pairs a student with another student to write tests on Day Two, if not Day One, which will probably be September 5. To R S V P to the August 25 graduation, go to Meet Up. com. To apply to the next cohort, here’s the link again: https://docs. google. com/forms/d/e/1 F A Ip Q L Sej Ld8 I L7 N M0 H4 Wmz Zb Afvv3lqaq7 C4n94z Dm D W I Cf J Z Zpmow/viewform The source code for the first cohort final project is on Git Hub.","['Tdd', 'Integrate Detroit', 'Codingbootcamp']",https://medium.com/@alonso.delarte/first-integrate-detroit-cohort-to-graduate-soon-applications-open-for-second-cohort-6c7def22fd71,0,[],0,50,alonso,M,0.0,1.0
John Zhao,UX Developer @ foodjunky,On bootcamps and new jobs: My review of the Firehose Project,2016-08-03 01:24:52,medium,"On bootcamps and new jobs: My review of the Firehose Project It’s almost been a year since I’ve graduated from the firehose project. An entire year has offered me a lot of prospective to gauge my bootcamp choice and measure it against other possibilities. I’ve met students and those that have interacted with students from other bootcamps. My company’s office just recently moved out of 1871, a tech hub filled with bootcamp students of all varieties. I’ve seen their code, their portfolios and job applications and I can confidently say that if I was to do it all over again, I’d choose the firehose project without hesitation. For me, it comes down to a combination of quality coursework, great value, and amazing people. I think the root cause of all three factors comes down to the fact that the firehose project is run like a startup. It’s small and nimble. Unlike some of the larger bootcamps out there with 20 different courses(some taught by other bootcamp graduates without any professional experience), there’s only one course at firehose. This means there is a lot of attention into improving the student experience on this one course. The founders created and teach it and their passion directly cascades to the rest of the firehose students and alumni. Besides the founders, I know there is a huge effort put into finding other amazing mentors with actual experience and their portfolios are all listed on firehose’s site. For a large bootcamp program operating nationally with huge cohorts, there’s just not way to maintain the level of quality as a small program run by the founders. With that being said, I believe the greatest predictor of a boot camper’s success is their passion for coding, and their willingness to continue learning after they graduate. I took the extreme approach and treated every coding project post-graduation as an opportunity to push the boundary of my knowledge. In other words, how can I challenge myself and optimize for growth? How can I take on freelance projects and/or job responsibilities that best positions myself for the future? If the proof of the pudding is in the tasting, how has the firehose project impacted me? Before I enrolled in the firehose project, I was a non-technical entrepreneur. I also had dabbled for a month in html and css through online resources but that was the extent of my coding experience. Full disclosure though, I did graduate a year before that with a hybrid engineering/business degree (non computer science related though). Over the last year, I’ve built two apps that have been published on the i O S and Android app stores. I’ve taken on over half a dozen freelance projects and I’m currently working full time for an amazing startup(foodjunky) as a hybrid front-end developer and U I/ U X designer. [caption id=”attachment_415"" align=”alignnone” width=”456""]foodjunky’s yelp integration[/caption] At foodjunky, I have the responsibility for designing our company’s product and implementing the code to support it. It’s really rewarding to be able to take an idea or feature from design to launch and have it be used by thousands of people. That’s really cool to me. Since our company has partnered with yelp, I’ve had the opportunity to design and ship a food ordering integration for yelp’s desktop and mobile apps. Over the next months, we’ll be rolling out version 2. 0 of our main site. I’m really excited to be given the responsibility of designing the foodjunky experience and to participate in building the actual business. For new developers out there, I have one advice for landing your dream job: be ridiculously over-prepared. Some job-seekers like to take a mass spam approach. I did the opposite. I was very selective about which companies I wanted to work for. I was looking for good opportunities that let me punch above my weight. After that, I would invest a lot of time into understanding the market and their product. I’d come up with a list of business suggestions and use that as a launching pad to ask insightful questions about their business model. You have to “get” what they are trying to do beyond an intellectual level. It’s really important to be able to empathize with the pain points the company is trying to do. I came into job interviews or job applications with fully prepped redesigned home pages and user interfaces. I think it’s silly not to do this. This is maybe a 10 hour process. By investing 10 hours, you put yourself way above the rest of the crowd. If you aren’t willing to invest 10 hours into your dream job, you don’t really want it bad enough. Plus, demonstrating this passion always comes in handy in the salary negotiation phase *wink wink*.","['Personal Growth', 'Codingbootcamp', 'Firehose Project']",https://medium.com/developedbyjohn/on-bootcamps-and-new-jobs-my-review-of-the-firehose-project-cfee79c8f585,1,[],0,4,john,M,0.0042194667774416205,0.9957805332225583
Kingsland - School of Blockchain,The world's first accredited school for blockchain development - Learn more at www.kingslanduniversity.com,Get Paid (Handsomely) to Solve the Industry-Wide Bottlenecks Threatening to Derail Sector Growth…,2018-09-07 03:01:01,medium,"Get Paid ( Handsomely) to Solve the Industry- Wide Bottlenecks Threatening to Derail Sector Growth with Blockchain Author: Moe Levin Private investment in blockchain-based projects topped $5 billion over the past 12 months. Over $3 billion of that was via I C O — initial coin offerings — which represents an increase of 3000 percent over 2016. And the trend shows no signs of slowing. “ We see even bigger achievements on the horizon for 2018, with blockchain becoming a more widely adopted mainstream technology not only in the financial sector but also beyond including retail, logistics and healthcare, ” writes senior economist Carlo R. W. De Meijer in Fin Extra. “ The adoption of blockchain is expected to continue at an even faster pace in 2018. ” And you know what that means: a huge demand for blockchain engineers. Just as the 1990s were the heyday of the web developer, the next few years belong to the crypto architect. Now is the time to parlay your experience with Go, Python and Solidity into a six-figure paycheck. Yeah, that’s right — freelance blockchain engineers command upwards of $150 an hour, while their salaried counterparts are seeing paychecks in the $250, 000 to $300, 000 range — 1. 5 times the median salary of a “regular” developer. “ Blockchain expertise… comes dear. The online distributed ledger technology best known for powering Bitcoin digital currency, is an emerging specialty, ” writes Kim S. Nash in the Wall Street Journal. And while some leading universities such as Stanford and M I T are beginning to offer courses in crypto and bitcoin, “people with deep experience in the subject are scarce. ” That scarcity means high rewards for those who can understand and leverage the technology — or those who are willing to learn how. Why You Should Consider Blockchain But the ability to write your own paycheck is only the tip of the iceberg when it comes to the benefits you can achieve in the blockchain ecosystem. Here are five other reasons why now is the time to dip your toe in the crypto job pool: You get paid well. We hit this one pretty hard already. If you can develop a blockchain application, you’re golden — almost literally. Everyone from I B M to Air Bn B will want to hire you, and if you’ve got the talent, you can pretty much write your ticket. 2. You get great side benefits. If you joined a tech startup pre- I P O, you’d be looking to cash in on the deal when the company went public. The same thing holds true for a pre- I C O startup. As part of your compensation package you could negotiate for tokens that can become hugely valuable after the I C O. Of course, there’s no guarantee. But if you wanted a guarantee, you’d just go work for Big Blue and be done with it, right?3. You get to choose the interesting projects. Forget boring and mundane; think life-changing and the edge of awesome. This is your chance to work on rockstar projects, however you define that. Here’s just a short list of industries you could choose from:- big banks and tech giants. - academics - healthcare- government- agriculture- retail- real estate- consumer electronics- media Virtually every industry is exploring the implications of blockchain. “ Dozens of startups are using the technology for everything from global payments to music sharing, from tracking diamond sales to the legal marijuana industry, ” writes Rob Marvin in P C Magazine. 4. You can save the world. No, really. Blockchain has already been leveraged to create some pretty amazing projects and global initiatives. If you’re the type who’s driven by passion, you’ve got your pick of incredible projects that can let you sleep well at night. Here are just a few blockchain applications that will fulfill the desires of even the most ardent do-gooder:- Food Coin, a global blockchain ecosystem for food and agriculture businesses, which will enable everything from digital I D services to product origin authentication. - Blockchain for Humanity, a partnership between the United Nations and the World identity Network to help combat child trafficking through an immutable identification ledger. - Hydro Miner, an alternative eco-friendly energy source for the energy-intensive cryptocurrency mining business. - Clear Poll, the first blockchain opinion poll system that promises 100% secure and tamper-proof results. - Bit India, a blockchain wallet and crypto exchange for the streets of India which promises “a democratic digital currency platform that gives freedom and power in the hands of the masses. ” There have also been initiatives around eradication of hunger, food chain safety, and the environment. Whatever flag you want to wave, blockchain can help you wave it high and proud. 5. You get job security. In a tight job market, the last thing a company wants to do is to lose talented workers. That means once you’re on board, they’re going to do what they can to keep you happy. And if your project does get killed, you’ll likely find a home inside the organization quickly — or you can hop over to greener pastures elsewhere. How Do You Get Trained? Now that you’re convinced that blockchain is worth a go, your next step is to get the training you need to land the job of your dreams at a salary that will make your mouth water. And here’s the challenge: if it were easy to get up to speed on blockchain, there wouldn’t be a developer shortage. The good news: If you’re a software engineer now, the skills are likely well within your grasp. “ You’ll be surprised at how little of this technology is magic (read: none of it), despite the severe case of buzzword-itis the ecosystem has, ” writes blockchain technologist Matt Condon on Medium. “ If you make a living as a professional software engineer you have the ability to understand all of these projects and technologies at a deep level. ” It’s not the technical aspect so much as access to a standardized curriculum that will be recognized by potential hiring managers. And that’s a little tough with an emerging technology that seems to evolve daily. Sure, you could turn to a weekend coding bootcamp which will take your $1000 and give you a pretty certificate on Sunday afternoon. But most companies and recruiters take claims of such “training” with a huge dose of skepticism. Mark Dinan, a Bay Area tech recruiter, told Bloomberg that many of his clients automatically disqualify coding school grads. “ These tech bootcamps are a freaking joke, ” he said. The solution? Turn to a reputable, accredited university. Traditional institutions like Stanford, the University of Edinburgh, and M I T are starting to offer courses in cryptotechnology and blockchain, but their movement in this direction is slow. To truly “learn” blockchain to the depth you’ll need to create the cutting-edge projects companies dream of, the choices are few. In fact, there’s just one accredited institution in the world that offers certification in blockchain, and that’s Kingsland University — School of Blockchain. Kingsland University — School of Blockchain is the world’s first and only accredited blockchain training program. The award-winning Kingsland University uses its decade of experience in innovative educational programs to equip professionals who want to take part in building the future on top of the blockchain. Through Kingsland, you’ll learn the practical skills you need to succeed in your career. And then with Kingsland’s H R advisory, you’ll get help locating the position of your dreams as well. For current developers who are eager to step up and claim their spot in the blockchain ecosystem, Kingsland is your best option for a bright, blockchain enabled future. Moe Levin is responsible for the first global bitcoin conference in Amsterdam and is the founder of the North American Bitcoin Conference as the C E O of Keynote — a global events company. Levin serves as an advisor and board member for a number of blockchain companies including Unsung and R S K Labs. He is also a Co- Founder of Kingsland University — School of Blockchain, the world’s first accredited blockchain training program. To find out more about how the Kingsland University — School of Blockchain. Find out more about Kingsland’s leading-edge education at Kingsland University. com","['Blockchain', 'Developer Shortage', 'Coding Bootcamp']",https://medium.com/kingsland/bc-get-paid-handsomely-to-solve-the-industry-wide-bottlenecks-threatening-to-derail-sector-6af76311a718,2,[],0,0,kingsland,Unknown,Unknown,Unknown
Etienne Mustow,Spirit and Soul.,Makers Academy PreCourse — Week 1 – Etienne Mustow – Medium,2017-08-07 11:49:31,medium,"Makers Academy Pre Course — Week 1 After hours of trying to navigate through Ruby on Codecademy, I finally started my first week of Pre Course last week and I loved it. It actually started introducing the Ruby syntax for the command line ( Something I never did on Codecademy) and really laid out the context of how I D Es are used to create useful programmes. By understanding the basic commands like ‘ls’, ‘cd’ and ‘mv’ to the slightly more advanced commands like ‘grep’, ‘chmod’ and ‘find’, I feel like I’m actually learning how to apply what I’ll learn in my course effectively. We were also introduced to Git — the version control system. This really showed me so much about how collaboration will work and how open programming is to let others read, edit and learn from other developers’ code. Stemming from this, I signed up to Github and Stack Overflow which will be invaluable resources. It makes me believe that the industry I’m hoping to go into isn’t one where you’re in solitude trying to find a solution, instead you can network, search and ask about problems you encounter. At the end of it all, we were tasked with a coding challenge. I won’t go into too much detail in case you’d like to do it yourself here, but it was a murder mystery where we used our knowledge of Ruby to sift through information to find the killer. It was an excellent way of putting to use the aforementioned basic and advanced commands and you even felt pretty satisfied with the result. All-in-all, I’m very impressed with how the Pre Course is going and I’m very optimistic about Week 2! When a user posts the exact response you needed on Stack Overflow","['Programming', 'Ruby', 'Codingbootcamp', 'Makersacademy', 'Github']",https://medium.com/@etiennemustow/makers-academy-precourse-week-1-3078d4859841,0,[],0,3,etienne,M,0.054692775151924375,0.9453072248480756
Iris Nevins,Self-Taught Software Engineer,How I Went From Teacher to Software Engineer in 12 Months,2018-10-06 23:13:39,medium,"How I Went From Teacher to Software Engineer in 12 Months Podcast Interview on Souncloud5 years ago when I was exploring the idea of going into technology, a friend introduced me to the Breaking Into Startups Podcast and Facebook Group. The first podcast episode had me hooked, and for 2 months straight I listened to it all day every day — all the while — imagining myself going to a bootcamp, getting a job as a software engineer, and living a whole new life with more money, more purpose, more freedom, and more happiness. I can proudly say that almost 2 years later, I am living out what I had dreamt while listening to those episodes. I am happily employed at an amazing company with benefits and privileges that far surpass what I had as a teacher. My goals of buying a house before 30 and building wealth that I can pass on to my children are slowly materializing in an interesting and exciting way. And I’m in a position where I can pass on advice, wisdom, and encouragement to others who are interested in making a career change O R just wanna accomplish something hard. What’s also cool is that I was able to sit down with the Breaking Into Startups crew and share my story, the same way that so many people before me shared their stories. This episode is jam packed with lots of information includingwhat my current company doesthe formula I used to succeed in my transitionhow I approached the job hunt after graduating from bootcamphow I negotiated my compensationhow my relationship managed to survive the 1 year process including 8 months of long-distancewhat it’s like to be a software engineerwhy I founded Organeyez, my personal company and side-projectwhat social justice is and why it has driven me to make this career transitionthe mistakes I learned early onwhat it’s like to attend a coding bootcampwhat I did when I ran out of moneythe ways in which people supported me in my lowest moments There’s so much magic, joy, discovery, and triumph in my story and for that reason, I hope you listen to it. I hope you walk away feeling inspired to push forward with whatever dream is in your heart, waiting to be actualized.","['Programming', 'Software Engineering', 'Career Development', 'Career Transitions', 'Codingbootcamp']",https://medium.com/@cosmosiris/how-i-went-from-teacher-to-software-engineer-in-12-months-a334a5c1ce41,0,[],0,2,iris,F,0.9917819476784002,0.008218052321599782
Eden Eltume,The unexamined life is not worth living.,Passed my very first Launch School assessment! – Eden Eltume – Medium,2017-05-03 18:07:54,medium,"Passed my very first Launch School assessment! I just passed my very first Launch School assessment! Although, I barely did it’s still one of my greatest accomplishments so far. Just a few days ago, I was contemplating my other options. I thought about switching bootcamps and going back to school. None of them really appealing because they are not in-line with my goals. My goal is to master web development so that I can be able to create whatever app my heart desires. Even now, on a small scale, thanks to Launch School, I am already doing this. Going back to school would involve the same amount of effort and just delay my goals by years. Switching bootcamps would not help because I would only be avoiding growth. Although, Launch School is difficult, pain is a prerequisite to growth. I may be able to avoid Launch School but I would not be able to avoid learning the principles that Launch School is trying to beat into us. Launch School very much reminds me of the first A P course I took in High School. It was tough but the journey proved worth it. Judging from the prep course, the curriculum and my experience so far I know that Launch School will be the same. I just have to trust in the process. That is all people, now I have to get back to doing the 109 exercises for the third time in a row. Yay me! :)","['Education', 'Launch School', 'Codingbootcamp']",https://medium.com/@ieltume/passed-my-very-first-launch-school-assessment-34ace9d69fce,0,[],0,13,eden,F,0.8472174848476898,0.15278251515231023
Codeworks,"The leading JavaScript bootcamp in Europe. We teach JS for the full stack in the heart of Barcelona. For more info, check out our website: www.codeworks.me",4 Killer Tips For Hackathon Success – Code Words – Medium,2018-08-31 09:01:59,medium,"4 Killer Tips For Hackathon Success What did we learn hosting a Hackathon?‘ Facebook Developer Circles’ sounds more like a hippy healing group than a hackathon initiative. The 2018 Global Community Challenge brings together developers and community leaders from around the world, helping people to build communities. Okay so it still sounds like that healing group. But we’re fine with that. Heal the world? © Codeworks The first part of the challenge is a series of local hackathons in the participating countries. One of those countries is Barcelona, right where Codeworks is based. July 6th-8th saw Codeworks ( Coding Bootcamp) welcoming participants and judges from across Europe for a weekend of innovation and learnings. Home of the Mobile World Congress (the world’s largest exhibition for the mobile industry), and with our campus district (22@) dedicated to innovation, Barcelona is set to become the Silicon Valley of Europe. The ideal spot then for our hackathon participants to create a solution based, at least, on a Facebook product. That means Groups, A P I, Messenger, React. js or Graph Q L to name a few. Here we share failsafe tips from all the participants, not only the winners:3rd Prize, Eventing A chatbot that creates events automatically with people with the same hobbies as the user. 2nd Prize, Mob Pong: A game in which all the people who are waiting for the metro or a doctor can participate. 1st Prize, Grids Ninja: A web application that allows you to simultaneously play multiple video streams and comment on the content through a chat. Codeworks students were actually behind this one, but we won’t show off too much about that. It might smell like a cheat, but their win could be down to their teamwork skills gained on the program. Everyone’s a winner baby. It was tough for judges to settle on these impressive three. © Codeworks What were the takeaways? No, we don’t mean noodles. We’re talking about 1 Hackathon, 48 hours, 5 teams and 3 winners. Phew! We asked our participants, what did you learn? Tip 1: Ask for Help 🙋🏽‍ In 48 hours, your idea will change in ways you can’t predict. Codeworks instructor and intrepid hackathon participant Isabella Chen, described her project like a cheshire cat:‘‘ Eventing is cool. But it’ll decide not to show up when you need it most and do weird sh**t. ’’ Think of your project like an animal, feed it, nurture it and train it well. Edgar Cheverier, one of the four behind ‘ Grids Ninja’ described the project like a fly, because: ‘‘if you look closely it has nine eyes. ’’ Sounds scary? That’s because Grids Ninja lets you simultaneously play multiple video streams. Nine videos is just the beginning. It might feel like it’s moving in all directions at first, so ‘taming’ your hackathon idea is crucial. Remove any extra stressful features and take back control. Take Mob Pong for example, lead by Senior bootcamp teammates, Jon and Doruk. Jon spent the first 24 hours teaching himself to code with a complicated tutorial until he admitted the game was half-dead. Lifeless, the project panted to a grinding halt until suddenly! Jon’s ally Doruk stepped in and said, “ Jon dude. You’re stuck. Need help?’’ Jon humbly told us, ‘‘24 hours into the weekend was a breakthrough moment. Doruk helped me with an easier approach and Mob Pong was up and running soon after. Later, during the pitch, everyone in the audience jumped on the back of Mop Pong and played it. It was awesome!’’ Doruk left. Jon right. The tall guy helped the short guy and they got there in the end. © Codeworks48 hours is too long to work solo. Doruk showed Jon the light, using a new tech stack. Four hours later and the project could breathe again. At 8pm on Saturday night, Jon and Doruk asked everybody on campus to pause on their own projects and test the game and so saw all hackathon participants happily testing Mob Pong. Much like the Carpenter experiment (read on for more on this), the players needed little instruction. They figured it out; the code was smooth, the design super simple. Doruk’s help, together with help from fellow participants made for a winning project. It’s a golden lesson: help each other out. Tip 2: Just Like Your Laptop, Arrive Fully Charged ⚡️ Lazy myths surround Hackathons. We picture a bunch of hacker guys in black hoodies surviving on zero sleep. Blue thumbprint bags under their eyes. Nothing but pizza to eat. The reality during this hackathon was quite different. To be a good teammate, you need rest. Okay, so it’s hard to guarantee 8 hours sleep. But we made sure the participants filled up on vitamin D from our sunny campus terrace and took plenty of breaks. Even if they were tired to begin with. Roger, a frazzled teammate on Grid’s Ninja sternly advised us:‘‘ Don’t party the night before a hackathon. ’’ Party once it’s over, and not the night before. © Codeworks And Jon wisely adds, :‘‘ You can’t cheat sleep. Red Bull just isn’t the same. ‘’ With plenty of water, just a little caffeine and lungfuls of fresh air, your hackathon might not be the endurance test you expect. Tip 3: Plan as a Team ⏱ To be the dream team, you need to plan. That means effectively communicating with each other. Organise your time. Some of these participants had worked together before on Codeworks Thesis projects so they knew each other’s strengths and weaknesses. The winning team understood that whilst some students enjoyed working on front-end, others were better suited to the back-end. They planned their workflow accordingly. Plan, plan, plan. © Codeworks Chris from Grids Ninja explains, ‘‘ We used React and Redux on the front-end with me and Edgar leading. Roger and Lars worked on the back-end using Node. js and the Koa framework with integration of Socket. io. ’’ He continues, ‘‘ We would then switch between the back and front-end. We learnt the fine line between getting things done and being chilled. That understanding comes from getting each other’s strengths and weaknesses. The more we can laugh as a group, the more productive we can be. ’’ And to stay productive, a little planning goes a long way. Isabella Chen says, ‘‘ If I were to go back in time, I would have much better planning. I think to succeed in a hackathon, you really need to have figured out what you want to implement and get everyone to agree, at least a day in advance. Then stick to that plan during the event. ’’ Eventing’s plan was this: they used Facebook Developer platform for the messenger and the Node. js server with Koa. For the database they used Postgres, with a Sequelize layer. Their view was rendered thanks to a React. js component. Isabella Chen brings all that tech jargon to life in layman’s terms:‘‘ With Eventing, people talk to our bot and specify their interests. When enough people have specified the same interest, an event is spontaneously created for them. ’’ So whilst the app itself is designed to be spontaneous, the team had to be the opposite. They needed to stick to the plan and meet the deadline. Isabella Chen’s plan to totally steal the limelight worked out. © Codeworks Tip 4: Take Risks 🔥 Before Jon signed up to the Hackathon, he had a small idea of what to build:‘‘ Originally, I just wanted to join another group and work on someone else’s idea. But I ended up pitching at my first hackathon! I had an idea I wanted to do something with public screens but I didn’t know what. A day before the event, I heard about the ‘ Carpenter experiment. ’ I took a risk and pitched. ’’ What inspired Jon’s idea?‘‘ I saw an exciting experiment with Pixar co-founder Loren Carpenter in the early 90s, a simple version of audience’s playing an interative game of Pong. We wanted to take this same experiment and build it into a new game. ’’ The idea wasn’t original, it’s been around for years, but what idea is truly original? Jon’s risk paid off and Mob Pong came 2nd. ‘‘ Our project was simpler than some of the others that were pitched, just a basic game. But during the pitch, we explained the story of the original experiment and our vision. Everyone played. Just like with Carpenter’s game, there was the same amazing atmosphere in the room. ’’ Mob Pong uses React. js on the front and back-end. Koa and Socket. io allow the real time, quick communication between the front-end and back-end. ‘‘ We’ve tested 40 players simultaneously and it works. We have to try Mob Pong in a big square one day. We’re building a smaller version at the moment. Maybe that’s life, a series of cool, small moments. ’’ Mob Pong’s simple design (centre). Everybody’s loving it including Berta, guest judge from Women Who Code (far left). © Codeworks So what’s next? A hackathon is often just the beginning. For teams that go on to participate in the Global Challenge, the winners will be announced on the 14th September. Prizes will be awarded to those who create the best solutions to provide online connections with offline experiences. And in the meantime: Eventing Coming third, Eventing are going to pause on a project too wild to tame. ‘‘ We should have kept it simpler’’ was their lesson learned. Mob Pong With Mob Pong, you can only play one game at a time right now. However, as Jon says: ‘‘we need to scale and implement the ‘new rooms’ feature. Let’s say you’re the admin of the hospital. On the waiting room screen, you put the webpage, create a new room; Port Vell Maternity Wing. Then patients can go to that room and play each other. This feature will take 2 days to build on Socket. io. Once that feature is built, we’ll build a simple webpage to publicise it. No app stores, just a browser. Easy. ’’ Adapting an existing idea with a simple approach has worked out well. Grids Ninja The winners told us: ‘‘ At the moment there’s a lot to do for Grids Ninja. We’re taking care of Twitch, You Tube and Facebook Live. You can embed public streams. You’ll make your grid, put it on Reddit. You can currently chat with every person in each grid and add an audio option to speak. So we’re working on that. We’re going through the code, fixing problems, like resizing and refreshing. ’’ Sounds like the winning team will be busy. Codeworks C E O Alex passes the baton on to the finalists. © Codeworks Good luck to those who submit to the next round. Join the Facebook group here: https://www. facebook. com/groups/devcommunitychallenge2018/ Check back to see the winners on September 15th: https://devcommunitychallenge. devpost. com/updates","['Hackathons', 'Facebook', 'Codingbootcamp', 'Programming', 'Web Development']",https://medium.com/code-words/four-killer-tips-for-hackathon-success-53f7b56e7021,0,[],0,0,codeworks,Unknown,Unknown,Unknown
Eazi,,"Be consistent, stay hungry – LearnFactory Nigeria – Medium",2018-05-12 13:33:55,medium,"Be consistent, stay hungry It has been an eventful week at Learn Factory Nigeria, from coding tasks, amazing collaboration and working together as team. Life they say is filled with lows and highs both geared at making, redefining or suppressing a man. This has been the story at work over the past two weeks of constant coding, but it has been an amazing journey so far. I’d choose to highlight key moments that has been so far interesting. Attitude and Work rate A normal day at Learn Factory Nigeria Firstly, the Work rate and the attitude of our tutors and mentors. I must confess, they daily go through each detail meticulously just to drive home their points. They painstakingly guide and supervise each intern in order to realize the goal of the internship, which is to groom software developers that will be able to solve and tackle technological problems. They have just been amazing. Collaboration Brothers from another mother… Learn Factory born Secondly: the collaboration that exists among the interns. Often when most people from different places and ethnic background gather, it sometimes takes weeks before they start to get used to each other, but it has been a different story here. Right from the first day, the environment has been friendly without any iota of hostility; this I believe can also largely be attributed to how we were welcomed by the Learn Factory team. Generally warm, they are all have been approachable and easy to relate with. There are some people in life that make you laugh a little louder, smile a little bigger and live just a bit better; my fellow amazing interns all fall into that bracket. Back to the caption above. This week has been a week of ‘ B E P H E N O M E N A L O R B E F O R G O T T E N’. Each second I ponder on those words; I’ve written them down on the table of my heart. “ Write the vision down, make it plain on tablets, so he may that reads may run with it”. Motivation is a flimsy thing. It ebbs and flows, and often abandons us when we need it most. That’s why we need something better than motivation to help us achieve our biggest goals. We need something deeper, stronger and more reliable. Most people would say that something is better habits. They argue that we need certain habits to help us reach success, and I would agree. But there’s something even more important that we need to achieve our goals. “ Philosophically, the capacity to strengthen and increase your hunger is the one common denominator among the most successful people. ” Hunger is the ultimate driver. “ If you’re hungry, you can get the strategy, you can get the answer. If you can’t model it, you can find it”. So daily I strive to stay hungry and pursue excellence through consistency. See you next week…………… phavor sparks and Emmanuel Raymond with the gorgeous Bernar May Our boss chibueze ukaegbu I’m Ezekiel, the tallest man in the building…","['Entrepreneurship', 'Coding', 'Codingbootcamp', 'Internships']",https://medium.com/learnfactory-nigeria/be-consistent-stay-hungry-47f956f9dd97,2,[],0,161,eazi,Unknown,Unknown,Unknown
Umang Pahwa,On a Tech hunt!,Diving deep into Web-Dev! – Umang Pahwa – Medium,2018-05-25 19:29:30,medium,"Diving deep into Web- Dev! It’s almost a week now since I’ve step foot in Hyderabad. Huge office complexes, lots of employees from Pan- India and some good food made this week an easier ride than it seemed at first. With all this happening, I was very much busy with my work at the coding boot-camp. I learned a lot of new stuff in the world of Web Development and hopefully aim to learn a lot more in the coming weeks and eventually be able to make some significant difference with these skills at my disposal. Week 2, Day 1: - We were given an assignment for the weekend and were supposed to push it to Git Hub by the end of it. I’ve been making a lot of silly mistakes throughout my childhood and shit! I made yet another one. I just saw the first page of the assignment and there were two more pages which I never across. Luckily, many others weren’t done with their work and hence, the first hour of our working slot was given to make the completions. Luckily I finished everything in that time and made the push. Then Afzal took over and gave us an insight to how ‘functions’ work in J S and how J S interprets all the declarations first before moving on to interpret other instructions present in the program. Other programming languages that I was familiar with (like Java), interpreted all the lines at once, compiled it and converted it into byte-code. And that’s how J S is fundamentally different than other conventional programming languages. Then we were given an assignment in which we were supposed to design an html page which rendered a clock (in military format) up-to seconds and which would change with every second as well. For this we used J S’s selectors, which enables us to work with a particular H T M L entity in our document and manipulate it according to our need. This along with ‘set Timeout()’, which recursively calls the function after a specified time, and ‘window. onload’, which initiated the clock every time we execute the document, helped us get through with the assignment. We then encountered a very fundamental feature of J S that deals with promises and how it’s used to deal with response to a request that arrives at the server. ‘. then’ and ‘. catch’ helps us to either resolve or reject the request respectively. This was again a very high level overview of the same to which we will dive deep into. We were told, that as a practice, the scripts that we refer to in our H T M L document, should be placed before the end of the body tag, as it would help us to access all the elements that have been loaded by the H T M L file, by our scripts. Finally, Afzal showed us some cool creations of some great developers across the Internet, who’ve made some great animations using primarily J S and some physics engines ( Paper. js, three. js, google experiments). At first they seemed impossible to breakdown and start working upon, but then we saw the source code for the same and we deduced that it was just careful manipulation of the document elements by the scripts that we link to it. Day 2: - Today we covered less in quantity but whatever we went through, we did a solid regressive analysis of the same. Vanilla J S can make a lot of things happen, and it’s important for us to understand the fundamentals to exploit its power. Concepts like S C O P E of identifier keywords like ‘var’, ‘const’ and ‘let’ could be quite confusing when subjected to different scenarios and different functions. We discussed a plethora of cases and had a lot of doubts along the process. I did have an almost accurate understanding of the same at the end, but there might be a change that my understanding goes wrong. One can only get perfect by practice and that’s what I’m trying to prioritise right now. Day 3: - Spend the whole day working on my cloning project. Day 4: - Today we explored the D O M ( Document Object Model) and how to manipulate it on the client side and apparently that’s quite an important feature which helps render dynamic information on the web-page. Selectors, attribute manipulation, element creation etc, are some of the essential features for D O M manipulation. I’ve been essentially using it while I’m creating clones of famous websites. I know that there are libraries and frameworks like React, Angular, Vue out there which are prominent these days but I just wanted to get a hang of how the very famous j Query operates and exploring the D O M and diving deep into it is also made easy by the same. Day 5: - We came in today feeling pretty excited about the Startup Weekend Hackathon that we’ll be part of this evening in the Hyderabad campus of Microsoft. But we had our inhibitions. We hadn’t developed anything concrete so far. I don’t know how long we’ll go with what we know. So we asked Afzal to give us an overview of ‘ Node. js’ and ‘ Mongo D B’. Grabing a quick overview of the same shall help us develop on it and maybe we may cook up a M V P ( Minimum Viable Product). Before we went ahead with that, we developed two D O M manipulation projects. The first one was to create a 10x10 matrix with numbers 1–100 and the other was to generate a random colour on the click of the button. We started with setting up Node on our devices with the help of N V M ( Node Version Manager), which essentially helps to switch to newer versions of Node with ease. Once we were through with that, we had installed ‘ Express- Generator’ so that we’re ready to start with back-end programming. We’d be revisiting these concepts and then going in the depth of it but since we needed to equip ourselves with some tech, we started off this way. We looked at how we could establish routes and work with views and ejs( Embedded Java Script). This was a very basic overview of what all we could do with this platform.","['JavaScript', 'Web Development', 'Coding', 'Codingbootcamp', 'HTML']",https://medium.com/@umangpahwa/diving-deep-into-web-dev-5c5f92c1cc74,0,[],0,0,umang,M,0.0,1.0
chibueze ukaegbu,,"LearnFactory Internship: Day 19 (May 24, 2018) – LearnFactory Nigeria – Medium",2018-05-25 07:35:34,medium,"Learn Factory Internship: Day 19 ( May 24, 2018)“ To attain higher heights, you must harness all your might and your will to press forward resolutely”…i C Today was absolutely fantastic. We had an amazing caller, and yes the interns were absolutely excited. Our caller was none other than Shawn Drost, the co-founder of Hack Reactor (www. hackreactor. com), the premium software development training institution in the U S. Based in San Francisco, H R has groomed some of the brightest minds in software dev; and yes, I was privileged to be one of them. Shawn It was a swell time with him; filled with laughter, fun and amazing tips from a developer from the other side of the world. When Shawn asked them how long they had been coding and the interns answered 3 weeks, he broke into a hilarious chant “ O cute babies, see the baby programmers. Cute, cute babies”; we couldn’t contain ourselves, everyone burst out into uncontrollable laughter. Shawn was full of advice and encouragement, taking 4 questions from the interns. And he told them to get some sleep; good sleep helps clear the mind for a long day of coding. Hackreactor. com From the inception of the internship, Shawn’s support has been phenomenal; and he came through with his promise to call even though the huge time difference means he is waking up when we are closing at work over here. Thanks Shawn, words fail to convey my gratitude. After the call, I had a brief period of interaction with the interns. As we draw near the 1-month mark, it is expedient to get feedback on their progress, so we can identify where each person is on his journey. We had a long discourse and one thing that came out clear was the need for more time to practice. Thus, we will be making some slight adjustment to the daily timetable so as to accommodate their request. The interns then continued with their P V C challenge. The websites are shaping up, with the Saturday deadline looming closer. Sensing their complaint of power challenge at home, we decided to allow them pull all-night for 2 days (today and tomorrow) so as to hit their deadline. S P O T L I G H T O F T H E D A Y Our spotlight for today is Ezekiel, the tallest man in the house. Ezekiel I am Ezekiel Arinze Nnochiri, the first son in 4 children born to Mr Andrew & Nneka Nnochiri. I’m a Computer Engineering student at Micheal Okpara University Of Agriculture, Umudike, Umuahia. A devout Christian, I love to sing, play the guitar and the piano, and read good books; and yes, I love football and I’m a fan of Chelsea F C. You cannot separate me from my Eba and Egusi soup; it is a risky to attempt to do so, be ready for the consequences. Tall is the new cool I like transparency and honesty and dislike pride and arrogance with a passion. I also like dark colors, with navy blue and black being my favorites. Coding has become my next love, after God; and I will code till my fingers burn. He said it all. Of all the interns, I have known him the longest; and I am truly impressed with the determined and focused young man he has grown into. I see a bright future for him. Well, tomorrow and the forth week is a wrap. Phew, it’s been one heck of a ride. Stay awesome. I’ll be seeing you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Learnfactoryinternship']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-19-may-24-2018-dc349c23752b,0,['Hack Reactor'],1,130,chibueze,M,0.0,1.0
Hack Upstate,"Advancing Upstate New York's tech community through events and education. Hack Upstate XII is scheduled for October 6th & 7th, '18-http://hackupstate.com/",Announcing Hack Upstate’s Careers in Code! – Hack Upstate – Medium,2018-08-23 12:08:56,medium,"Announcing Hack Upstate’s Careers in Code! A coding bootcamp for Syracuse women & minorities from distressed communitieshttps://careersincode. org/ Nearly 6 years ago we started Hack Upstate with the underlying mission to help advance Upstate N Y’s tech community. In pursuit, we organize hackathons, offer web and mobile development classes, facilitate talks and lectures, and ultimately help align Upstate N Y tech talent with promising employment opportunities. Over the years we’ve built a growing network comprised of thousands of Upstate N Y engineers and we’ve facilitated dozens of job placements. We haven’t done this alone. We’ve had tremendous support from the local businesses community, academia, Onondaga County, and the City of Syracuse. It’s been a pleasure to work with so many incredible people who are invested in our community. We’re exceedingly grateful. Over the years we’ve worked hard to give back and make our tech community as inclusive as possible. Since our inception we’ve seen a significant increase in female participation. However, we haven’t done enough to create opportunities for individuals in our community who seek upward mobility. That’s when we started to focus on poverty and how software engineering can be used as an anti-poverty measure. The Problem Poverty throughout Central New York is rising at an accelerated rate and stifling our region’s economic potential. In particular, there are few opportunities for women and minorities to advance in concentrated areas of extreme poverty. Equal access to educational and employment opportunities are simply not available to them. At the same time, many Central New York employers are struggling to hire local software developers. Software developers are critical to their growth, but at this time our regional talent pool isn’t large enough to support their needs. Consequently, employers that want to hire locally are often left with no choice but to outsource their work to 3rd party consultants and contractors that operate outside of Central New York. In late 2017, we were made aware of the Alliance for Economic Inclusion’s ( A E I) mission to combat poverty in Central New York. They oversee $30 million of state money that was earmarked for anti-poverty measures in the $500 million Upstate Revitalization Initiative ( U R I). Central New York won the U R I money in December 2015 based on a development plan that made fighting poverty a major goal. We learned that the A E I was seeking projects to address the goals outlined in C N Y Rising. These included: Improving career pathways for adults and youth; attracting jobs to distressed communities; building tools and incentives for educational attainment; and increasing entrepreneurship and business ownership in underserved communities. Upon learning about the R F P, we submitted a proposal that we we felt would further Upstate N Y’s tech community while at the same time combat against C N Y’s rising poverty rates. Today we are thrilled to announce that we’ve been awarded a grant from the A E I and Onondaga County that will enable us to launch the Careers in Code bootcamp. The bootcamp will teach computer programming to women and minorities from distressed communities and provide them with the technical skills they need to obtain internships and full-time software development jobs with local employers after 24 weeks of instruction. Careers in Code The rise of coding bootcamps throughout the country reflects the shortage of adequately trained software developers graduating from universities and the relative demand for them from the technology sector. The reason coding bootcamps have proven effective over the years is because they provide vocational training at a fraction of the cost of a college degree. Not only that, their curriculums are centered around the core elements of computer programming that are directly tied to current market demands. This makes coding bootcamp graduates appealing job candidates to employers. According to the latest Coding Bootcamp Alumni Outcomes & Demographics Study [1], 73 percent of graduates were hired full-time in jobs that utilize the skills they acquired in the bootcamps. The graduates also reported an average salary increase of 64% or $26, 021 compared to their salary before enrolling in their respective coding bootcamps. Low-income students from distressed communities in particular saw the largest increase in salary at an average of $39, 190 [2]. The average tuition per student for a coding bootcamp is $11, 400. This does not include additional costs for equipment such as laptops or service fees like web hosting and 3rd party A P I usage. Those living at or below the poverty line are simply unable to take advantage of the opportunities a coding bootcamp provides given the expense. This is unfortunate given low-income students see the largest increase in salary upon graduating from a coding bootcamp. Therefore, we will award scholarships to those accepted into the program. Prospective students will go through a rigorous application and interview process to ensure they have the determination and perseverance to succeed in the program. Those accepted into the program who enroll will do so at no cost to them. Additionally, we will purchase laptops for students and account for additional 3rd party expenses they may incur (eg. , web services, hosting, data storage, etc). How will it work Careers in Code will create career pathways in software development for women and minorities from distressed communities by providing them with real world technical skills required by local employers. We will create and provide access to opportunities for those in concentrated areas of extreme poverty, while providing local employers with a coding bootcamp service that will fill help them fill talent gaps and foster growth. According to a new report from Indeed [3], 80% of U S tech hiring managers and recruiters said they have hired a coding bootcamp graduate for a tech role — and 99. 8% said they would do so again. Of the 1, 000 people surveyed, 72% said they consider bootcamp graduates to be just as prepared and likely to perform at a high level as computer science grads. And 12% said they think bootcamp grads are more prepared and more likely to succeed. In order to sustain the Careers in Code bootcamp after using funds from the A E I, we intend to institute a partnership model with local employers in which they pay an annual retainer in return for the software developers we educate and help them hire. They will receive additional benefits from our marketing activities as well. More now than ever, software developers are critical to the growth and sustainability of our local economy. Therefore, we intend to institute a proven coding bootcamp model that will provide technical educational opportunities to women and minorities from distressed communities and facilitate job placements with local employers who are struggling to find and hire local technology talent. Measuring Success In order to create an effective and sustainable coding bootcamp, we must have a system in place that can be used to measures success. The most important metrics we will track include: The percentage of students that complete the full 24 week coding bootcamp The percentage of students that obtain jobs and internships as software developers The average compensation for students that receive jobs and internships as software developers The average increase in annual salary for those who complete the full 24 week coding bootcamp Additionally, we will forecast future earnings based on the average rate of salary increases among software developers year over year. The Council on Integrity in Results Reporting ( C I R R) [4] is a non-profit organization that provides a standardized system for measuring student outcomes for coding bootcamps. According to their latest report, 87% of coding bootcamp graduates obtain full-time jobs in the field within 180 days. The average salary for coding bootcamp graduates according to the C I R R report is $53, 273. We anticipate Careers in Code will facilitate similar outcomes. Additionally, we will send out periodic surveys and collect data from both students and partners of the program. These surveys will be instrumental in helping to determine how we can improve the program over time. We will also release a transparency report that we will make available to the public. In it, we will share results, successes, and lessons learned following each 24 week program. Concerning the surveys, we will capture both quantitative and qualitative data. We will capture quantitative data by asking participants to rate aspects of the program using a Likert scale. We will also measure Net Promoter Scores from both students and partners. With regards to qualitative data we will ask participants questions about their overall experiences and how we can improve the program to best support women and minorities from concentrated areas of extreme poverty. Thank you! Since day one our mission has been to unite and facilitate collaboration among the greater Upstate N Y technology community. To date, we’ve built a growing network comprised of thousands of Upstate N Y technologists and we have facilitated dozens of job placements. We believe Careers in Code will enable us to take our efforts to the next level. We are confident Careers in Code will generate profoundly rich and life changing opportunities for women and minorities from Central N Y’s distressed communities. Not only that, it will offset the current talent shortage our region faces when it comes to hiring software developers and engineers. We thank Onondaga County, Joanie Mahoney, our partners, and the Hack Upstate community at large for this incredible opportunity to institute this program. We’re confident Careers in Code will move the needle when it comes to addressing poverty in our region. What’s next You can learn more about the program at https://careersincode. org/ We will be hosting an event for prospective instructors at The Technology Garden Thursday September 6th @ 5:15pm. Sign up today! Prospective instructors and students can start applying today! We plan to hire instructors throughout September and October We will begin systematically reviewing applications and interviewing student candidates throughout October, November, and early December Check out the Careers in Code online classroom Classes will kickoff in early 2019☞ Interested in learning more? We’d love to hear from you! team@hackupstate. com References:[1] Coding Bootcamp Alumni Outcomes & Demographics Study[2] 73 Percent of Coding Bootcamp Graduates Employed Full- Time, Earn Salary Lift[3] What do employers really think about coding bootcamps?[4] Council on Integrity in Results Reporting","['Entrepreneurship', 'Upstate New York', 'Hack Upstate', 'Codingbootcamp', 'Startup Communities']",https://medium.com/@hackupstate/announcing-hack-upstates-careers-in-code-a8ff0bfeddbf,6,[],0,67,hack,Unknown,Unknown,Unknown
Erin Levine,"Pretending to be an adult. Discussin' the ebb and flow of weight loss. Future #webdeveloper. Lifts heavy things. Hi, @ladygaga!",Week 7: Express and Handlebars – Erin Levine – Medium,2017-07-02 14:26:06,medium,"Week 7: Express and Handlebars You ever sit down at the end of a long week and try to think about all the amazing things you accomplished while at work or school and your mind goes blank? You know you went through the week. You didn’t just not exist. But you absolutely cannot remember what the heck you accomplished and what you didn’t accomplish? That’s, unfortunately, me right now. Week 7 seems like a total blur. A total blur that was filled with us learning Express and Handlebars, both N P M packages. The majority of the week we spent working on our homework assignment called Friend Finder. However, I decided to give it more of an Erin Levine twist by making it all about, of course, sloths. I give you: Sloth Finder — the best way for you to find your new snuggly, algae filled sloth friend! The premise of this assignment was simple (in concept): We had to create a survey that would then match the user to a certain sloth that I already had on the server. And, let’s be honest, who wouldn’t want to hang out with Bob-the- Sloth? Look how cool he is! For this assignment, I used Bootstrap, Express, Javascript, and j Query. You can check out my code on Git Hub! And you can find your own sloth friend by clicking on my Heroku link here! Right now, I’m working on a homework assignment that is the trifecta: My S Q L, Express, Handlebars. Don’t forget to add in some O R Ms and Node! Boy, oh boy. But, hey! Let’s look on the bright side! Week 7 down! Only 5 more to go! Originally published at www. exactlyerin. com on July 2, 2017.","['JavaScript', 'Web Development', 'Coding', 'Codingbootcamp']",https://medium.com/@erinlevine_48138/week-7-express-and-handlebars-659a067f9781,1,[],0,1,erin,F,0.9713346989397382,0.028665301060261786
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",4 Tips for Sticking to Your Budget While Attending a Coding Bootcamp,2018-05-21 13:31:01,medium,"4 Tips for Sticking to Your Budget While Attending a Coding Bootcamp Congratulations! If you are thinking about budgeting and the cost of a coding boot camp, you are on the right track to success. Planning in advance for financial costs is essential to ensuring post-bootcamp success. Whether you are in a part-time or full-time coding program, it’s important to account for various costs and save accordingly. Here are 4 tips to help you stay on budget while attending coding bootcamp:1. Research financing options before you even apply It’s no secret that coding bootcamps are expensive. Before even applying to attend a coding boot camp, make sure you look into financing options. If you don’t want to dip into your savings account and pay off the cost upfront, taking out loans will help you get your bootcamp journey started. 2. Apply to scholarships or grant programs Wouldn’t it be great if you didn’t have to pay the full sticker price? In many cases, you don’t have to. Always be sure to check out the available scholarships or grant programs for the coding bootcamp you are looking into. For example, here at Hack Reactor, we have a $1. 3 million scholarship fund for students passionate about learning how to code. This round we are giving out two general scholarships, one scholarship for the Remote Part- Time course and one scholarship for the Remote Full- Time course. Finalists will receive a partial scholarship to the campus of their choosing. Pro tip: Scholarships often have different application deadlines, so make sure you don’t miss any of them!3. Adopt a money-saving mindset Attending a coding bootcamp will leave you little time to do any work outside of coursework, so you may need to live without income during the duration of your program. Therefore, you need to have the right mindset of saving money, even if it means that you need to change little parts of your routine such as less Starbucks and more home cooking. Is your morning $5 latte that much better than home-brewed coffee? Should you actually get that $12 salad bowl every day? Alone, these may not cost that much, but if you can save that money instead of spending, it will make a big difference. For 1 more tip on how to stay on budget while attending a coding bootcamp, check out our original post. The cost of joining a coding bootcamp can be substantial, but it is also one of the best investments you can make for yourself. With good preparation and planning, you can stay on your budget on your way to become a software engineer!— Ready to learn to code? Check out Hack Reactor’s onsite immersive programs, now offered in San Francisco, Los Angeles, Austin and New York City. Not located in these cities? We also have online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Coding', 'Codingbootcamp', 'Budget', 'Finance']",https://medium.com/@hackreactor/4-tips-for-sticking-to-your-budget-while-attending-a-coding-bootcamp-25e221ba8b05,0,['Hack Reactor'],1,0,hack,Unknown,Unknown,Unknown
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Alumni Spotlight: Jeffrey Sun Empowers Others Through JavaScript,2018-08-30 12:51:01,medium,"Alumni Spotlight: Jeffrey Sun Empowers Others Through Java Script Fresh off of undergrad, he got a marketing job at a semiconductor company in San Jose. “ I did a little bit of everything, starting off with marketing. But the image of a being a hacker resurfaced. So I asked my manager if I could do something related to coding and was lucky enough to switch to a webmaster role. I helped the company revamp their website by working closely with another senior webmaster. ” He had no work-related programming experience. But he challenged himself to learn. “ Learning programming on my own was challenging. When I had a question, I didn’t always have someone next to me to ask. Even though there are tons of resources out there, it was still overwhelming. ”“ However, when I was given the webmaster role, I was very excited to work on something I’m interested in. This motivated me to make my manager proud. So I signed up for an online coding bootcamp called Viking Code School, a learn-at-your-own-pace class to get better. I took classes after work and applied everything I learned at work. ” Two months later, around the time he finished his online course, Jeffrey proudly redesigned the company’s website and his manager was quite satisfied with the end product. Soon after, Jeffrey realized programming is a viable career path. He researched San Francisco bootcamps while continuing learning Java Script on his own. But above that, he made the “go all in” leap by quitting his job before he was even accepted into a bootcamp:“ It definitely wasn’t the safest career move, but I knew it would push me to work like I never have before. ” Jeffrey applied for most every San Francisco-local bootcamp and studied diligently every day in preparation for one to accept him into their program. To his surprise, he got accepted into all the bootcamps he applied to. With a big choice to make, and chose Hack Reactor. “ I surprised myself by getting accepted and was excited. ” But commuting from San Jose would not prove to be easy. “ Getting to class on time, I had to wake up at 6am everyday, and B A R T from South Fremont to Embarcadero. Not coming from a tech background, I had a lot to learn, so I would typically stay after class until around 11 P M. The whole commute took 2. 5 hours a day. By the time I would get home, I’d go to bed and do it all over again. 6 Days a week. In a month and a half in, I was completely burned out and was not performing as well as I wanted to, so I quit Hack Reactor. ” To find out what happened after Jeffrey quit Hack Reactor, check out our original post. Interested in starting on the same path? It all began at Hack Reactor. Learn more about Hack Reactor’s full-time and part-time programs. We’re online in S F, Austin, N Y C, and L A. Originally published at www. hackreactor. com.","['Coding', 'Codingbootcamp', 'JavaScript', 'Alumni', 'Hack Reactor']",https://medium.com/@hackreactor/alumni-spotlight-jeffrey-sun-empowers-others-through-javascript-9b4c948f54ba,2,['Hack Reactor'],1,0,hack,Unknown,Unknown,Unknown
Junior Seri,Data Science and Machine Learning Addict | Python | SQL | Passionate about social change.,The benefits of teaching yourself to code – JamieAi – Medium,2018-09-12 13:51:17,medium,"The benefits of teaching yourself to code I was born and raised in France and grew up in the suburb of Paris. I always loved learning and was always excited to go to school. However, the teaching methods of our western educational system have failed to nurture that love. I would even go as far as to say that my creativity, self-confidence and belief that I had the potential for learning was destroyed by the school. The issue of the failure of our educational systems might be the subject of another blog post. There is, of course, great value in formal education. But, to be effective and do justice to the young minds we may sacrifice to inadequate institutions, the educational system as we know it must be completely transformed, the underlying assumptions about human nature that it embodies questioned, and new programmes and policies informed by relevant research in neuroscience and psychology, put in place. I want to attract your attention on the nature of the process of learning and share with you examples of people who had a passion for learning and did not wait to be educated by others to educate themselves. This is the path of autodidactism, the path of self-learning. This path is of special interest for data science because of the nature of the field, rigid definition of skills and job role have not yet fixed data scientist in what they should learn. Courses and masters that have emerged are only the early attempt to formalise a curriculum that does not necessarily reflect the evolution and future of the field. This means that whatever our background, learning to be data scientist means essentially being self directed learners. Definition of self-learning The definition of self-taught is: “having knowledge or skills acquired by one’s own efforts without formal instruction”. This definition is very interesting because it contains the words “efforts” and “formal instruction”. Children and students in most places are seen as empty vessels that must be filled with knowledge. But for those who want to transcend these limitations and break free of the yoke of self-inflicted ignorance, there is another way. So to recognise the potential of people to gain knowledge and skills through their own efforts is really the beginning of having a posture of learning. A posture that is necessary whatever we do and whoever we are if we are to make the contributions necessary for the advancement of humanity. Context History is filled with examples of men and women, at every epoch, who not only learn by their own efforts the deepest subjects without the guidance of teachers or institutions but made significant contributions to different fields of knowledge. Although the field that interest us is data science, I think the following examples will help us visualise what is possible for all budding data scientists. Kendall Hailey is an American writer who developed an educational philosophy and method called unschooling. Leonardo Da Vinci, although not autodidact in the arts, was self-taught in painting, sculpting, architecture, music, science, mathematics, engineering, inventions, anatomy, geology, botany, and writing. Walter Pitts is another extraordinary example. He taught himself logic and mathematics as well as several languages among which Greek and Latin. He made brilliant contributions to the theoretical formulations of neural activity which in turn influence fields such as cognitive sciences and psychology, philosophy, neurosciences, computer science, artificial neural networks, cybernetics and artificial intelligence Garret Morgan was an inventor who created an early version of the gas mask and is the inventor of the traffic light signal we use today. I want to encourage each one of you to follow in their footsteps and take charge of your education. We have available today an overwhelming amount of resources that can help us learn anything. The rise of M O O Cs ( Massive open online course) such as Udacity, Coursera, ed X, Khan Academy has changed the landscape of possibilities. Now, I know that having resources galore is not enough to be able to learn. After all, learning is also a psychological and biological process. To learn effectively than is to learn how to learn and to develop beliefs and strategies that will help guide our actions. Strategies for the self-taught learner The theme of the strategies we can use to learn more effectively will be the subject of another blog post. We will explore some practical techniques and ideas indispensable for effective learning of data science. Beliefs Part of the beliefs and convictions that we hold have a huge influence on our ability to learn. Because the self-taught learner has limited access to mentors, guides and teachers, by opportunities or by choice, he or she must form an adequate and healthy attitude toward learning. One of the most important of these beliefs is one related to what Dr Carol Dweck called the Growth Mindset. The growth mindset consists of the belief that we can get smarter over time with consistent effort. This leads to greater achievement for those who have this mindset. Dr Dweck and her colleagues also discovered that when children were praised for their intelligence they tended to believe that their intelligence was fixed, therefore when something was challenging or beyond their current capacity, they tended to give up and be discouraged. On the other hand, when children were praised for their effort, they tended to be motivated to make more effort until they managed the task at hand or learned what they needed to learn. They believed that their intelligence and capacity was not fixed but susceptible to growth. This growth mindset is probably the most important idea that we must develop as self-taught learners. This mindset will allow us to develop skills and capacities in order to fulfil ourselves as well as contribute meaningfully to society. In the particular case of Data science, this mindset will also help evolving with the field.","['Data Science', 'Python Programming', 'Codingbootcamp', 'Python', 'Coding Interviews']",https://medium.com/jamieai/the-benefits-of-teaching-yourself-to-code-5616d01c7ac2,12,[],0,4,junior,M,0.004815528226403912,0.995184471773596
V School,Human Centered Edtech® // An edit on #techlife for a path to fulfillment. Full Stack and XD Education.,Big Week = Big Thanks – V School – Medium,2017-08-11 17:55:06,medium,"Big Week = Big Thanks Last week we were honored to be recognized as one of the best Coding Schools in the world. As a staff, we reflected on this achievement and discussed — what really separtates the good from the best? It wasn’t long before we had shared a handful of thoughts about what separated us: our amazing instructors, our instructor to student ratio for an optimized learning environment, our culture of support for our students, our program accessabiliy and unique integration of online students into the classroom — and then our C M O shared this quote:“ No computer is ever going to ask a new, reasonable question. It takes trained people to do that. ” — Grace Hopper That was our answer. At V School, we have a mission statement: To improve the human experience by modernizing education, accelerating career readiness, and increasing community engagement. From day one, we knew that just teaching code wasn’t going to be enough to achieve our mission. Any good school can teach code. The best can change their student’s lives by ensuring that they are career ready upon graduation. Even with all of the above mentioned details that we care about when it comes to the student experience, none of it is relevant if at the end of the day we don’t ensure our students are prepared to start a new career as a developer. When we first created our curriculum, we started with the end in mind. We knew we could teach code better than most, but where we were lacking was not having full insight on the skills that employers were requireing Junior Developers to have in order to be eligable to hire. To solve this problem, we reached out to industry friends at major companies with developer career opportunites, and asked them to help us. They did, and they continue to do so. As a result, our students are getting employed faster than any other Coding Bootcamp. So what really separates the good from the best? When it comes to Coding Schools, career readiness is number one. We commit to continue to being the best. Ranked Best Coding Schools In the world A huge thank you to Switchup for recognizing us, for the second year in a row, as being one of the best coding school in the world! Of course, we couldn’t have won this award without all of our amazing students. Check out what they have to say about us. Full- Stack Javascript Class Change your Life Reserve your spot for the September 5th, full-time, career changer, mega class. This 12 week program is a catalyst for a future career in the developer space or to understand the inner workings of the building frontier. Apply Now. React-ion at Open West{ Very: Positive} If there was a popularity contest held at Open West, our very own Jacob Evans would have won it. His React lecture and two-part course left so many wanting more. We hear you. Stay tuned next week for an exciting announcement about future React courses coming soon. With Love + Code, V S","['Coding', 'React', 'Reactjs', 'Learn Programming', 'Codingbootcamp']",https://medium.com/@VSCHOOLHQ/big-week-big-thanks-f0b7fca0fe7d,2,['V School'],1,41,v,Unknown,Unknown,Unknown
Jacob Moore,,"Days 58/59 — Agency Week, Project Pitch, Graduation, and Job Hunt Continues",2017-10-05 20:56:11,medium,"Days 58/59 — Agency Week, Project Pitch, Graduation, and Job Hunt Continues Agency week is nearing completion with us having to present by tomorrow at 11 am. At this moment I have deployed the app to the server and it’s rendering json data for the main page. Our front end…has nothing completely finished. They’re not hitting our end points and yeah… I’m okay with that. We have had so so so so many errors at the beginning of the week, people being gone for chunks at a time, and then a self inflicted issue by installing O S X High Sierra that set us back a few hours. Although what we present will maybe, hopefully, be a fully functional main page and thats it, I’ve learned things this week. For starters our communication has been terrible. Not because we don’t work well together or that we don’t respect each other. It’s really come down to time commitments and errors that pop up that completely halt the work. So our communication just broke down. When we do hit each other up on work it’s aces. I’ve even lightened up a bit on the code that’s being generated. Not a lot but some. Honestly this week could have been a lot easier/better with a lot less distractions and dependencies on other things. Our project pitch this morning was mostly a success. We have a pretty strong project that actually has me freaking out a bit. I’m the project manager, idea owner, and the one making waves about it. Which means in three weeks if it’s found wanting then I will take most of the blame, fault or not. That being brought up, I’m super excited about it. It’s something that I could see become a greater application down the road and could be an enterprise software application with funding, more developers, etc. More to come once we get it scoped out. Fortunately the name we chose is available and websites are available. It’s a bit weird the way The Iron Yard handled graduation. We did project pitches in the morning, worked on code, went to lunch, graduated, and then we all went back to working on code for Agency Week. There’s really nothing to keep us all from just bouncing at this point, mainly those that have jobs. For the rest of us sure we want to show our work ethic and build out the portfolio. So I appreciate that. I thought I would have some joy or super emotion at the moment but really… I’m just exhausted. It’s been a challenging three months let alone the last week. I’ve barely seen my son, my evenings have been reading about certain aspects about building out rails, and the sheer volume of hours on like one or two things has been immense. Plus I don’t go right into a job or a break. I go right into trying to build up an application from scratch based on what I want. Which is an even more of a buckle down sort of thing. So it’s really hard to do a retrospection. Maybe when I’m down with the project or have a job in hand I can look back at what’s happened but for right now all I see are a bunch of hard workers staring at code and at the moment it’s my normal. I don’t really know why I include a section for job hunt. I mean it’s a constant right? I have some interviews that I’m hopeful for but I’m always hopeful for those. I’m in a good spot in regards to my portfolio: Jacob Moore Portfolio I am originally from the suburbs of Indianapolis. I love trying new things, home brewing, rooting for the Packers and…jakedub. github. io My resume is pretty solid at the moment. I’m just not getting my foot in the door at the moment and I haven’t really been able to put a bunch of time into doing research, follow up, and general Linked In stalking. Some stalking sure, just not very much. On that note, I really need to look at our carts controller and pray that the front end finally added their code for deployment.","['Web Development', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/days-58-59-agency-week-project-pitch-graduation-and-job-hunt-continues-32669487bdf2,0,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Christopher Agnus 🐟,"Hi, I’m Christopher (Agnus) Lam. I write about startups, entrepreneurship and marketing.","What are the differences between Attributes, Instance Variables and Methods?",2018-03-06 12:21:07,medium,"What are the differences between Attributes, Instance Variables and Methods? Just some weird Ruby quirks I have come across over the few past days while studying up on Classes… Aren’t attributes just a method? Why don’t people call them the same thing? They are right. An attribute is just a method. An attribute can return the value of an instance variable; the result of calculation and those methods with equal signs at the end of their names used to update the state of an object (eg. price=(new_price) ) Then, what’s the difference between an attribute and the plain old method? When you design a class, you decide what internal state it has and decide how that state is to appear on the outside (to users of your class). The internal state is held in instance variables. The external state is exposed through methods we’re calling attributes. And the other actions your class can perform are just regular methods. By calling the external state of an object its attributes, you’re helping cue people in how they should view the class you’ve written. For example:class Book In Stockdef initialize(isbn, price)@isbn = isbn@price = Float(price)enden In the class above, we have an internal state ( I S B N and price). The state is private to those objects — no other object can access those instance variable. However, an object that is totally secretive is useless — you can create it but you can’t do anything with it You normally define methods that let you access and manipulate the state of an object from the outside. These external visible facets on an object are called its attributes. If you like this post, give it 50 claps!","['Ruby on Rails', 'Ruby', 'Web Development', 'Coding', 'Codingbootcamp']",https://medium.com/zero-to-code/what-are-the-differences-between-attributes-instance-variables-and-methods-f093505cca8e,0,[],0,21,christopher,M,0.0046573532726988135,0.9953426467273012
Philip Mannius Zudemberg,"Entrepreneur, Full-stack developer, Craft Academy Alumni, Draper University Alumni.",2017: Let’s do this! :) – Craft Academy – Medium,2017-01-03 16:00:59,medium,"2017: Let’s do this! :) This is me wandering through poison oak and black widows in Santa Cruz on my S F trip back in August 2016 My new years resolution: Loose the winter hull, and become an awesome developer! Last year was a lot of fun, but as life always does it did bring some bad stuff aswell. However, I will focus on the fun stuff in this post! What I’ve done in the past year: Worked in healthcare for elderly people, it gave me a lot of insight in the Swedish elderly care, and I also realized how much I never want to end up there. Spent the summer travelling. My trip to San Francisco was the most awesome one. It was actually that trip that sparked the fire in me and made me want to become a developer. I remember sitting at Nola Cajun restaurant in Palo Alto when I casually googled for bootcamps and ending up applying for Craft Academy in Gothenburg, All this while eating a massive pulled pork burger. I started working at Reztart A B. A company which are making delicious super healthy snack bars based on Swedish research for naturally lowering your bloodsugar. We progressed a lot during the fall which involved me spending a lot of time on the phone talking to potential customers. And we also have a whole lot of marketing planned for the spring! Super excited! I started with Craft Academy! It has completely changed my perception of how applications work and I am hyped for what the spring term will bring! I actually have a cool project which I’ve been working on during the winterbreak. I think I will save it for another post but I can tell you it’s about news and how to deal with source criticism. However I can say that I am very pleased with my bootcamp experience so far! This year I hope I will travel a lot more and meet many new intresting people along the way. At the same time gain even more experience with coding. :) Happy new year everyone! I wish you all happiness and prosperity.","['New Years Resolutions', 'Goals', 'Coding Bootcamps', 'Coding', 'Programming']",https://medium.com/craft-academy/2017-lets-do-this-8bd2d4db3590,0,[],0,4,philip,M,0.0033440389637890873,0.9966559610362109
Horizons,,Coding Bootcamp Cost: Can I Afford This? – Horizons – Medium,2018-06-01 00:51:21,medium,"Coding Bootcamp Cost: Can I Afford This? Coding bootcamps are becoming increasingly popular, both as complements to a four year university degree, and as an alternative to the traditional route. And with good reason. Most bootcamps are intensive, accelerated programs, from which students graduate with tangible and valuable skills. Afterwards, they have a portfolio, an online presence and overall proof that they possess valuable skills in areas like Full- Stack Web Development, Data Science, Digital Marketing, and U X/ U I Design. It sounds like an awesome deal. But what about the other side, what about the cost of these programs? What do you have to pay? The cost of bootcamps can vary based on a variety of factors. According to Course Report, the cost averages right around $12, 000 for the entire program. The tuition range typically falls between $9, 000 to $21, 000 for full-time programming schools and coding bootcamps. For your money you normally get both front and back end training. You’ll learn coding languages like H T M L, Javascript, C S S, Python, Ruby on Rails, among others. The average coding bootcamp lasts between 9–12 weeks and the best will offer onsite interview prep, along with the possibility of some type of apprenticeship where you can work directly with real companies in the industry. Do I Really Need a Coding Bootcamp? Though it is not nearly as high as university costs, coding bootcamp cost is still a significant investment. You might be asking yourself, what am I getting in return? Isn’t my C S degree just enough on its own? Can’t I just teach myself to code online without a bootcamp that costs thousands of dollars? The answer to these questions ultimately lies with each individual (see Are Coding Bootcamps Worth it?). As an example, you can look at what you will get for your $10, 000 tuition at Horizons. The Horizons curriculum has been built and directly influenced by engineers at leading technology companies. We know what companies want because our founders are serial entrepreneurs with proven success. They created Horizons as something they wish they had when they were just starting out in their careers. If you do the Summer Immersive Program, after your 12 weeks you will have command of Object Oriented J S, Data Structures, H T M L, C S S, j Query, A J A X, Event Driven Programming, web security, just to name a few things. You will learn to build apps, how to collaborate with a team to produce results, and how to present your skills to an employer to get any job you want. After the first eight weeks of the program, you’ll put your skills to the test and work on real projects. Some of these will be freelance projects sourced from startups. High performers may have the opportunity to work with companies directly. For those aspiring entrepreneurs, you can use this time to build your own products. Even if you decide to design your own project, you will have the support and guidance of the Horizons team. What really sets Horizons apart, though, is our speaker series and mentor network. You will broaden your perspective and knowledge by listening to successful entrepreneurs, engineers, operators and investors. You’ll learn about new industries, building companies, and career paths. And our mentor network consists of people from the top tech firms from around the world and is designed to help you successfully navigate the world of tech. Horizons students and graduates have exclusive access to our mentors. Coding Bootcamp Cost. Worth it. Indeed. com reports that among their employer respondents, 80% have hired coding bootcamp graduates, and an amazing 99. 8% said they would so again. In addition to coming out of Horizons with fine tuned and masterful coding skills, you will emerge with the network, connections, and proof of value creation needed to get a job, and to really build the career you want. We succeed if you succeed. Let’s work together!","['Programming', 'Codingbootcamp', 'Code School']",https://medium.com/@horizons/coding-bootcamp-cost-can-i-afford-this-7c45144794b3,2,[],0,6,horizons,Unknown,Unknown,Unknown
Kimberly Lowe-Williams,CEO/Executive Director of The Difference Engine. Providing real life software development to nontraditional developers and nonprofits. #PipelineBuilder,Dear Nontraditional Developer – Kimberly Lowe-Williams – Medium,2017-11-02 16:34:38,medium,"Dear Nontraditional Developer The first 2–3 years of your career may not look like that of your white male computer science degree carrying counterparts. You may have to hustle to find opportunities to code for smaller organizations and startups that have limited budgets. You may have to take a greater leap of faith and work in a junior level development role making less than the median identified starting salary for your area on salary. com. Keep in mind, you are making strides and laying a path for those that follow. You are not alone in your pursuits to leverage technology as a catalyst to transform your life and community. The Difference Engine is on your side working hard to provide you with the training, support, opportunity and experiences that will make this dream a reality. Our organization has been formed for the very purpose of making tech more accessible. Do not give up and do not compromise. You are a developer and should get paid to code… yes actually write code. The more you code the more you will grow and the more your work, skills and sweat will be valued…. this is not a sprint — it’s a marathon. Let’s stay hydrated together! Sincerely, Kimberly Lowe- Williams, C E O/ Executive Director — The Difference Engine","['Diversity In Tech', 'Diversity', 'Coding', 'Codingbootcamp', 'Developer']",https://medium.com/@TDEkimberly/dear-nontraditional-developer-453f07d786ca,1,[],0,20,kimberly,F,0.9949202597529464,0.005079740247053596
Jarid Marinos,"Former Banker now Full Stack Developer. User of all things JavaScript, Basketball, and Beer...... 👨🏻‍💻🏃🏻‍♂️💨🏦 && ⛹🏻‍♂️🍺",7 Ways Web Development has changed me for the better,2018-05-13 08:05:04,medium,"7 Ways Web Development has changed me for the better I decided to make this article to share with others some of the benefits that come with learning code that I would consider the highly underappreciated intangibles of becoming a web developer. Prior to me pursuing the industry I always heard about working from anywhere (including your home), income potential, and the thriving industry. However I am going to walk through 7 invaluable lessons I have learned that I did not know I was signing myself up for. 1. Back into Creative thinking mode Prior to learning code I was a banker and when it comes to banking or many jobs you get stuck with the same mundane tasks everyday with very little margin on how to do them differently. However when coding I find myself constantly considering and looking for ways on how to do something more efficiently or with less code rather then one solution. Even when going through school or college I felt I was taught there is one answer so I did not tend to look for other solutions. Overall I find myself being more open minded and seeking unique solutions more then ever before. 2. Finding the source of truth The title for this one explains itself yet we live in a time where everyone is too busy for analyzing everything and lies are everywhere. When I code I find myself always tracking the source of an issue and validating my assumptions prior to building upon them. As they say it’s not what you don’t know that hinders you, instead it is what you think is true that is not. 3. I am not as special as my mom told me Based on the title one might think I woke up to handmade delicacies with cute notes in my lunch telling me how special I was growing up. To the contrary my childhood was quite the opposite yet I never struggled with confidence like many of my peers. Normally people do not think this can be an issue but just like anything else a nice glass of moderation is always key and based on my own experiences when you think you have it all figured out is when life likes to teach you the hard way. My beginnings with code has been quite similar to this story and the humbling experiences has helped me keep my blind confidence in check. 4. The greater the struggle the greater the reward Already in my coding experiences frustration and problems have become the norm. When a problem comes my way I know I have solved other issues I never thought I could before or I had no idea where to start. So I have become numb to the initial emotions and know that when I solve my current dilemma I will feel so relieved and it has become addicting to chase the thrill of problem solving. This attitude I adopted of chasing my problems and appreciating my bugs in my code stresses the importance of never giving up. 5. The power of breaks For someone who always wants to pursue their problems with their hair on fire and the intensity equivalent of Michael Jordan hitting a game winner I can tend not to take breaks enough. This has lend to long nights of staring at code looking for type-o’s, missing brackets, or other amateur mistakes because I don’t want to quit. When in all reality if I just took a lunch break or stepped away for a cup of coffee I probably could have solved my problem sooner. I can not count how many times I have thought of my solution in the shower, during lunch, or throwing Frisbee with my dog. 6. Chill out and wait for it Many of us struggle with patience and remaining calm/clear minded. I am no better then any of you at this. When coding I have come to find out rushing yourself can create more problems for yourself and in return waste more time ultimately. Altogether I think just being aware of this fault is half the battle of becoming better in this area. This is not to say sense of urgency and being goal oriented should be comprised yet I am saying this is where we grab another cup of moderation and work on it. I can say I have become more collected and patient then ever before in my life. 7. Lucky Number Seven I’m competitive and always wanting to improve so being surrounded by others better then me while working towards a common goal brings out the best in me. I like to think the people I have or currently learning from have experienced some of these similar life lessons via coding. The common denominator I share with the people I speak of is Dev Mtn located in Dallas, T X. Dev Mountain is a coding bootcamp that took me from the basics to building Full Stack Web applications in just 8 weeks. It’s been real. Let’s stay connected! Follow me on Twitter or connect with me on Linked In. This is my first ever blog post and all comments are appreciated.","['Programming', 'Coding', 'Codingbootcamp', 'Personal Development', 'Development']",https://medium.com/@jarid_marinos/7-ways-web-development-has-changed-me-for-the-better-28eab1228054,1,[],0,18,jarid,M,0.0,1.0
Scott Bowman,,A Simple Solution to the Failure of Coding Bootcamps,2017-08-09 12:01:46,medium,"A Simple Solution to the Failure of Coding Bootcamps Coding Bootcamp graduates are everywhere! According to Course Report, there was a reported total of 2, 178 graduates as of 2013 which quickly grew to 17, 996 by the end of 2016! This is partially driven by an extraordinary job market for web developers. The U S Department of Labor reports that nationwide there will be an estimated 188, 000 web development jobs by 2024, an increase of 27% over 10 years. With that many jobs, you might expect 100% placement rate of Coding Bootcamp graduates, right? The answer might surprise you… According to C I R R ( The Council on Integrity in Results Reporting), an industry-wide initiative to standardize student-graduate job outcomes and retention rates, there are huge gaps between coding schools in their placement rates and reporting. Previously we saw schools providing statistics like this: 93% of our graduates are employed as Web Developers, Software Engineers, etc within X months. The reality is that we often see 40–60% of graduates employed in relevant paying roles within 90 days. That number typically increases to 70–90% within 180 days. Of course, there are some schools that stand as outliers and have managed to break those barriers. But then again any school will tell you they are competitive. The Problem Coding Bootcamps fail to report the struggles their graduates face in transitioning careers. It is a big challenge to quantify this. The truth is that it is a competitive market and Juniors are having a harder time standing out than in 2013. How many times have you seen “ Junior” or “ Entry-level” web development positions requiring experience? Here’s a random sample from Dice. com:1. Jr. Q A Engineer:2. Jr. Full Stack Developer:3. Junior Developer: That is definitely a problem, and it is not isolated only to Colorado. In fact, many schools have only recently expanded their Career Services programs to better address the need for ongoing job support for graduates. Any good career counselor in this industry will tell their students that the key to success is continuing education and networking or bumping shoulders with other professionals. But, this can be a long-term and daunting task (especially for those introverts out there). The Solution: Bootcampers Collective Bootcampers Collective is an innovative new approach to accelerating career outcomes for Bootcamp graduates. We primarily focus on providing hands-on experiences developing live code for the community. The group structure consist of an online and in-person community of other Junior or transitioning web developers with the common goal to challenge themselves with the support of others. We organize Hackathons, or small-to-large team events where participants engage in collaborative web development, often with the goal of building a small business’s website in the span of a day’s work. Additionally members support each other, leverage the community to find coders for their own hobby projects, and generally share information they find valuable. Why is this Beneficial? Remember those job postings listed above? Remember where they wanted 1–3 years of experience for an entry-level position? That is where Bootcampers Collective comes in. Upon graduation from coding school, it is easy to lose a lot of the skills developed simply through failing to use them. Bootcampers Collective keeps your skills sharp. Participants can challenge themselves with a wide variety of projects (some paid) and continue to work together in teams to hone their skills. Bootcampers Collective gives you R E A L, resume-worthy experience. We organize projects like any Dev Shop would. Learn to work in a real production environment with a Sprint and Agile methodologies. Many of our websites are up and live around Denver as we speak. Bootcampers Collective helps web developers adapt to the job market by employing the latest technologies on our projects. We have a laid-back but focused work culture that reflects local start-ups. Bootcampers Collective provides networking opportunities. Coding is not the only goal. Fun is one of our primary values. We create events that bring our participants together with software companies and professionals around Colorado. We also drink great beer! Bootcampers Collective is a springboard for entrepreneurship. We provide motivated professionals with the skills, structure, talent, and confidence they need to branch out and build their own ventures. Just ask Yakkee. com. Bootcampers Collective is always looking for leadership. Are you a self-motivated professional who wants to give back to the communities of Colorado? We provide the structure for members to present on a topic they find fascinating and with the opportunity to lead projects and study groups. Every individual has something unique to contribute to B C. Last but not least, Bootcampers Collective provides career coaching. We develop educational events that help answer the trickiest career questions our members face. We also have a professional on staff to provide career assistance. The Future As Bootcampers Collective grows, we have been collecting feedback about our members’ needs and adapting to meet these. Some major areas we have focused on are developing talent pipelines into local software companies (yes, we have successes), developing a mentorship program, and expanding our Career Services offerings. Moreover, we want to guarantee a paid role to each of our members who need the experience. This will happen sooner than expected! Keep your eye out for updates. Conclusion Junior Developers and Bootcamp graduates these days face an increasingly competitive job market that is growing without any regard for the barriers-to-entry in this volatile field. Bootcampers Collective is here to address that by providing job seekers with the experience, support, and continuing education they need to successfully bridge the gap. Give it a try! All are welcome. For more information visit us online: Slack Meetup About the Author A Career Services professional in Colorado with over 6 years of experience, Scott Bowman recently worked as Director of Student and Career Services for Refactor U, a coding bootcamp in Boulder that started in 2013. Scott led Refactor U’s compliance and placement reporting initiative with C I R R. org in late 2016 and early 2017. Currently working with Bootcampers Collective, Scott continues to provide assistance to those transitioning into Web Development in Colorado.","['Networking', 'Coding', 'Codingbootcamp', 'JavaScript', 'Community']",https://medium.com/@scottybquik/a-simple-solution-to-the-failure-of-coding-bootcamps-122e760ad5df,4,[],0,1,scott,M,0.003373535711008196,0.9966264642889918
Laura Meehan,,Are You New in Town? Me too! – Laura Meehan – Medium,2018-08-20 19:42:10,medium,"Are You New in Town? Me too! My baby, Charlie, pulling up his ‘big boy’ pants. Currently a student at Bloc and learning web development. Loving it! Had no real-life work experience in coding prior to this though. Just started learning on my own and with the help of some friends. I even have an unfinished project that I hope to get back to someday after I’ve gained all the knowledge that I can from Bloc. I know that joining a boot camp will give me the tools I need to get her done in a relatively short amount of time and to help me fully transition into a new career that I will love. If you are considering joining a boot camp I’d be happy to tell you about my experience so far and give you an idea of what to expect. Before joining I did tons of research and particularly enjoyed reading what the students (from all boot camps) had to say about their experience. So here is what I got for you: Expectation # 1: You are going to get stuck. You’re going to want to pull out your hair. Or throw your computer down the stairs. But if you have the right attitude and know that you are fortunate enough to live in the time of Google and Slack (if you’re joining Bloc that is) you’ll be just fine. Expectation #2: You are going to have to sacrifice your time for this. I’ve had to stay home to complete assignments instead of going out for fun family gatherings. But that’s okay! This is not forever! Keep your end goal in mind and making time for this is a priority. Expectation #3: Your time with your mentor is valuable. Learn from them. Have them practice code with you. Have them test you. They also know tons of resources so be sure to ask! Expectation #4: Yes, the school will give you lots of information to learn about each topic, but you are still going to have to do a lot of research on your own. With each assignment, you can bet your top dollar that I am googling things to look at more examples and watching You Tube videos on the subject. There is sooo much information out there and better ways to do things that you are not going to learn it all. It’s impossible. But I find the best skill to have in this industry is learning how to research. Expectation #5: You might have moments where you feel a little dumb. You might have moments where you question your decision making skills and wonder if you made the right decision because man this sure is hard! And once you solve a problem you might think, “ Duh! That was so obvious, how did I not see it from the get go?!” But let me tell you, once you do solve that problem the gratification is wonderful! You can do this! You just got to pull up your big boy/girl pants and truck along. Keep practicing until it becomes second nature, re-read the material, and you’ll eventually get it. That’s pretty much what I have so far. I’ll elaborate further once I’ve actually completed the program and utilize the career services. On my next blog though, I’ll share with you some ideas on how to get unstuck on those pesky blocks of code. And please do feel free to add if there is anything I am missing on this list!","['Programming', 'Coding', 'Codingbootcamp', 'Web Development']",https://medium.com/@lmariemeehan/are-you-new-in-town-me-too-4b2a1f83be8e,0,[],0,0,laura,F,0.9967663073814239,0.0032336926185760465
Kelley Rose,"Developing is my craft, design is my recreation, learning is my always and forever. Developer @digitalscience.",One more Thank You to The Iron Yard before their doors close,2017-07-29 13:49:05,medium,"One more Thank You to The Iron Yard before their doors close Photo by J J Thompson on Unsplash A couple weeks ago marked my 2 year anniversary of finishing the Front End Engineering immersive course at The Iron Yard. Shortly after, The Iron Yard announced it will be closing its doors soon. It was such shocking news, and it made me so sad. There are a few turning points in our lives that truly stick out from all experiences as points that shape our journey. Learning from Tim Whitacre and J D Isaacks at The Iron Yard was without a doubt one of those points for me. It has opened this entire world for me that I didn’t even know was possible at that point in my career (6 years after graduating college with a Journalism & Mass Comm degree). They taught me Front End development, but more so, they taught me how to learn. They made me understand that I could learn whatever I want. And since that time, I have grown tremendously as a developer. I have The Iron Yard to thank. I will always have them to thank. Of course since then, I’ve learned from a number of extremely talented people, and have done my own hard work, but having them there to start was the beginning of it all. It saddens me that others will not be able to experience this same turning point as me from that team. But it does not mean that turning point isn’t still an option. From what I’ve read, The Iron Yard is closing its doors because they had an unviable business model. There are other coding bootcamps out there that are still doing well, with different models I suppose. I hope that those schools continue to thrive and teach, because this world needs more developers. And specifically, we need more women in tech. I feel the environment at a bootcamp is so open to diversity. Being a woman learning among other women and men was not weird. I wasn’t singled out at any point in time (good or bad) for being a woman. If I was applauded at all, it’s because I did something great as a student developer, not great for a girl. It’s that kind of open environment we need everywhere. I cannot thank The Iron Yard enough for arming me with such an amazing toolset for learning and growing as a developer. I am so sad to see them leave the marketplace, but I hope other bootcamps continue the hard work; continue pushing people past their limits; continue teaching this day and age’s languages; continue showing people the door to their possibilities. One last time, thank you to The Iron Yard and all the amazing people who worked their asses off to help me, and people like me. ❤ Kelley","['Coding', 'Codingbootcamp', 'Front End Development', 'The Iron Yard', 'Web Development']",https://medium.com/@kelleyannerose/one-more-thank-you-to-the-iron-yard-before-their-doors-close-af20b795b618,2,['The Iron Yard'],1,3,kelley,F,0.8815807151219699,0.11841928487803005
Zoe Larsen,Full Stack developer in the Southwest.,What Coding Bootcamps Need to Start Doing. – Zoe Larsen – Medium,2017-10-05 23:45:18,medium,"What Coding Bootcamps Need to Start Doing. I’m a recent bootcamp graduate that started the job hunt before my cohort ended. I figured that I would start getting my jitters out for the dreaded white-board interviews during my program and thus I would be able to ask my instructors for help to figure out any problems that stumped me. What stumped me the most wasn’t any complicated algorithm or deconstructing an array helper method. It was something I hadn’t done at all. “ Have you done any work outside of your bootcamp?” I barely had time to enjoy an evening beer outside of my school work. The 11-week intensive was like drinking out of a firehose. I spent most of my time reviewing and refining what I knew around class-based projects. And that was the problem. Most of my interviewers had seen piles of bootcamp applicants whose Github accounts were filled with rock-paper-scissor games, calculators, and simple capstone applications. What potential employees wanted to see was real experience. Not school projects. I found my experience extremely valuable and I learned a ton from instructors who were still working and respected in the industry. Yet this is not enough. Coding bootcamps are not your traditional university setting. So why are many bootcamp curriculums structured like university C S classes? They start with small simple coding projects that build up to working on a capstone project. There is a great need to include working on real projects for real companies in bootcamp curriculums. Why can’t we start building our resumes while in the bootcamp? This is what coding bootcamps need to start doing. Bootcamps need to incorporate development shops that provide their students an opportunity to start working and gaining tangible experience. This leaves a lot of room for how this exactly reflects in the curriculum of different bootcamps. The key is to give students the best opportunities in getting a job after their experience is over. So are there any bootcamps that currently offer a fusion between a typical bootcamp experience and working in a dev shop? There are not many. The following are a few U S coding bootcamps that offer this integrated experience. Dev Point Labs in Salt Lake City is a 11 week coding bootcamp focused on Rails/ React. This bootcamp acquired Cottonwood Coding and opened its own coding studio for students to take part in real projects. I attended this bootcamp but they did not implement the course change until after my cohort ended. Sabio offers a 12-week full-time coding bootcamp focusing on . N E T/ C#. The intensive bootcamp includes a real-world project for a client, and 4 weeks of career support and guidance. Prime Digital Academy is a full-time 20-week program focused on Java Script stack . They work on a real-world project for a local nonprofit, startup, or small business as a culmination of their bootcamp experience. Startup Institute is a 8-week immersive programs in web design, web development, digital marketing, and sales. Students from all tracks take part in a real project for one of Startup Institute’s partner companies. There are plenty of opportunities to pursue internships once a bootcamp is over. This might be the best course of action for most standard bootcamp graduates to gain the experience needed to differentiate their resumes. Hopefully this trend will catch on and improve the quality of education from the coding bootcamp model and produce graduates that are much more viable in the job market. P. S. I currently intern at Dev Point Studios associated with Dev Point Labs( D P L). Shoot me a message if you have any questions about how D P L is fairing with this course material change or how to get into software development!","['Programming', 'Software Development', 'Codingbootcamp', 'Coding', 'Development']",https://medium.com/@zlarsen.zl/what-coding-bootcamps-need-to-start-doing-4dc7970e20cf,1,"['Sabio', 'Prime Digital Academy', 'Startup Institute']",3,135,zoe,F,0.996236726279104,0.0037632737208959863
John Hui,,My journey to Fullstack Academy – John Hui – Medium,2018-05-17 17:01:53,medium,"My journey to Fullstack Academy My name is Man Jun but most of my friends call me John. I was born in Chinatown in the Lower East Side, New York and moved to Queens, N Y when I was in 4th grade. I attended Hunter College for Economics and transferred to University at Buffalo for Business Management. After graduating U B, I interned at an Asset Management firm for about half a year. I realized the work life balance wasn’t what I wanted so I decided to work in Financial Technology. After two years, I realized I wanted to code. During my time as a Billing Data Analyst, I realized there were too many manual and inefficient processes. It eventually became redundant and exhausted me. I learned a bit of V B A to make things more efficient by automating them. It was amazing what I accomplished in a few minutes equated to almost 6 hours on my computer. I was inspired by the efficiency and the results, so I started looking into coding and Web Development. I decided to learn the basics of Java Script through Free Code Camp in August 2017 and during the same time my friend, Alvin just finished Fullstack Academy and was a Fellow for the first Web Development Fellowship class. He was incredibly knowledgeable in javascript and told me W D F is a free curriculum taught by F S A. After researching W D F and talking to my other friend who graduated App Academy; W D F seemed like a better fit for what I wanted to become in the future. I decided to apply for the 2018 W D F class to start my path to Web Development! In the near future, I want to graduate and become a Fullstack Web Developer. After honing my skills for a couple years I hope to launch my first startup teaching financial literacy and create a forum to share simple investing knowledge.","['Web Development', 'Codingbootcamp']",https://medium.com/@mjhui90/my-journey-to-fullstack-academy-205cf94a6137,0,"['Fullstack Academy', 'App Academy']",2,0,john,M,0.0042194667774416205,0.9957805332225583
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine day 10 — (07) – Mike Brave – Medium,2018-08-30 05:33:05,medium,"42 Piscine day 10 — (07) Edit: This is part of a series that culminated here, Next post. Previous post. We had our group project (rush00) graded today. I was prepared enough to answer most questions and explain the program, my partner managed to answer all bonus questions. We got 125% credit, well done and all. But I walked away from it feeling really dumb. I didn’t know the answers to most of the bonus questions, and some of them I really should have, as I’ve looked them up and explained them to others even. Seems it was a bit of performance anxiety. I’m struggling, I feel constantly left behind, like my understanding stopped at day 8 and we are two days past that. I’m not sure how to catch up, I’m not sure I can. I got two of tonights 5 assignments done tonight, but those I had to ask for help, and I don’t feel like I fully understand. I glanced at some github code of the next assignment hoping it would spark an idea of how it works, but I’ve got nothing, so there is nothing to turn in. I’ve still got about two hours till the deadline, but it’s not going to happen. I’ve been really distracted lately with feelings of loneliness and worrying about some of my personal relationships back home, a best friend who isn’t on the best of terms at the moment because of feelings and poor choices. Memories of failed relationships of the past trigged by a girl who works at hacking house looking very similar to my ex fiance. Another girl here with a personality similar to another ex, and a third who should have statues modeled after her. I just want to focus on the task at hand, these old emotions aren’t serving anything here, they are not problems to be solved, just distractions when I need them least. Tonight we were supposed to get a group together to get ice cream, there was a poor showing of wanting to come, mostly me. The girl putting it together canceled, this only furthered said lonely feelings. One of my roommates is headed home, he was in the middle of arranging housing for a friend of his who isn’t 18 yet, which seems to have special implications in getting housing in West Virginia, I didn’t push to understand. We also had a student kicked out for trying to fight the security guard when asked where his wristband was, why the hell would your reaction be to fight the guy, would you fight the cops if they called you out on something? I mean that never ends well. Third one of my better friends here is thinking about leaving as well, but her reasons seem shallow at best, at least the reasons she is presenting are shallow, perhaps there are more hidden ones that aren’t being expressed. Hard to say. Most of us tried to convince her to stay, I didn’t push as she isn’t one that would appreciate it, but other people less close really tried to reason with her. My count of students for the day was about 114 people at 6 pm. I’m on the cusp of being level 1, but I feel more lost than ever, I don’t quite understand what we are learning now and haven’t for days. The class seems split into quarters as far as understanding. The very smart people most of whom have coded for a year before are keeping up and doing the majority of assignments. Upper middle (like myself) have felt lost for a few days but are working to keep up with it understanding bits and pieces as we go but not getting much turned in. Lower middle is understanding how to code but have felt like 4 days behind the entire time, and the lower feel completely frustrated and have the entire time. There is a part of me I’ve neglected for some years but it’s there still the same, I’m actually a competitive person, and it is frustrating to have so much that I don’t understand, but then more so to see it come so easily to others, even if they are a minority. This is a part of me I’m not sure what to do with, as it’s been neglected so long I don’t remember how to manage it. I don’t feel like I have time for jealousy right now though, things need doing after all. I want to go to this school, but I wonder if I’m struggling as much as I am right now, and struggling to find answers on my own, I wonder if I would actually cut it once I did get in. My friend thinking of quitting has only further reinforced those doubts. Perhaps when we were trying to convince her to stay we were giving ourselves reasons more than her. The staff is trying to talk to her as well, I hope it helps. I still haven’t talked to a R A about switching rooms, mostly for lack of time. My sinuses haven’t been as bad lately, I think they’ve been smoking less, it might be less of an issue now. Assignments for day 7 are as follows. clone strdupa function that returns an array of ints between min and maxsame as above but morefunction to transform arguments given as commands into a stringsplits a string of characters into words using spaces, tabs and line breaksdisplay the content of the array you created in last functionresult of the conversion of the string nbr from a base_from to base_tosplits a string of characters","['Life Lessons', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-10-07-4b5200bac22,1,[],0,3,mike,M,0.003228654060934749,0.9967713459390652
Krystyna Ewing,"Developer | Comic Artist | Veteran | Member of @operation_code, Dev at @DeployOpCod3 Member of @pprenticeship, co-founder @redeploi thoughts are my own",Learning To Code: The Seven Kerfuffles Of Coding Bootcamps,2017-01-05 21:24:33,medium,"Learning To Code: The Seven Kerfuffles Of Coding Bootcamps So we’ve gone through the tutorials! You now know how to install N P M, update Homebrew, have worked on a couple small issues on Open Source Projects and sort of fix your own merge conflicts. You want to move on to the next step. You want to expand your knowledge and move on to a coding bootcamp or a college. You start looking into some, a couple have mixed reviews, some have really good reviews, and some have really bad reviews. You want to do this, but you don’t want to spend A N Y more time doing the crummy desk job that you’re doing now, and you can barely make ends meet as it is. Well just like the last time, there’s some pros and cons to both, H O W E V E R this ain’t about the pros lemme tell ya. So before I start to ramble, let’s get right into it: Kerfuffle The First: Minimum Skills, Minimum Pay We see it all over the place, “ Learn to code and earn six figures!!!!!!”. I don’t think there isn’t a coding bootcamp or college that isn’t telling people this. Like you’re going to finish Bloc and start a 100k a year job in the industry without any prior experience…. riiigggghhtttt…. and if you believe that I have this code bootcamp that’ll teach you how you build games in 4 weeks and…. wait, you don’t believe me? You shouldn’t believe me, and you definitely shouldn’t believe them, at the end of any training, be it college, or a bootcamp or a correspondence course, or an online tutorial, you will have probably the most minimal of tech skills. You’ll be able to write some simple algorithms and maybe some simple methods, but nothing complex. At best you’ll have maybe one to two fully realized fully functional apps, however they’ll be built with the bare minimum of techniques which brings me to my next point which is less the fault of the schools and more the fault of people who go to the schools……… Kerfuffle The Second: They Don’t Teach You Everything You Need For Your Career You can’t expect to walk into a 20+ week program and walk out of it with E V E R Y T H I N G you need for a 15+ year career in development, not even for a 5 year career. What you learned while at bootcamp is pretty much good for what you need to know for your first year, and it’s not feasible, nor smart to put all of your stock into attending a bootcamp. It won’t make all your “ Dreams come true!” and get you a big ass house or big ole car till your a few years in……. Let’s take a look at a scenario here, Let’s take three people, person one has 10 years as a developer under their belt, they’re going to a code school to refresh their skills because they recently left their last job for one reason or another, person 2 has no development experience but has 4 years in tech already, they’ve done tech support, played around with some low grade scripting, and started futzing around with python to help fix and expedite some tasks at work that are small enough to not need a human touch most of the time, but there are enough of them to cause someone to take alot of time out of the work day to go through and fix all of them. Person 3 is someone who has no tech background, has no development experience, but started doing courses on Code School, and decided that yes! Development was something that they wanted to get into. Person 1 will graduate from Developer Academy, and most likely find a 100k a year job, because they already have experience, already know how to fix merge conflicts and went in understanding the basics of development. They were able to blow everyone away with their final project and they got a job on the spot at graduation. Person 2 will graduate from Developer Academy, and most likely find a job that’s around Junior level, but their tech support experience will factor into it because while they are new to development, they picked up some things during the bootcamp, and was able to add to what they already learned. Person 3 will graduate from Developer Academy, and most like find an apprenticeship, because though they went to the same bootcamp, as Person 1 and Person 2, they are completely new to tech. In fact, before getting into development, they worked as a photographer. This also applies to college, anywhere you go for training, you will A L W A Y S get the minimum of what you need to get started, unless you are returning for a masters or doctorate. Keep in mind what experience you have walking in, if you have 0 experience, you can pretty much hang up any notion of a 6 figure income in your first year. Kerfuffle The Third: All They Seem To Want Is Your Money Let’s look at this this way, say you’re looking for a car, and you go online to find it, you enter your email on the site to ask a question, you get your question answered, and decide not to buy the car after all. Well now they have your email, and congrats you’re now the proud owner of a bunch of spam around sales time, christmas time, summer time, and really just all year round. Coding bootcamps are no different, and neither are colleges. If you show the S M A L L E S T bit of interest in their program or school, you’ll end up with phone call, after phone call, and email after email. They’ll hit you with the click-baity “ Diversity Scholarship” or “ Scholarship for Women In Tech” and it’ll be 1000 bucks off of a twelve, thirteen or 14k program. And if you’ve looked into more than one program, well good luck, cause that’s all your emails from now on. It even gets to the point where you can pretty much set a watch to them:“ Oh crap summer is coming time for the ‘change your career for summer emails……. . ”“ Crap it’s almost new years, time for the ‘ N E W Y E A R! N E W C A R E E R!’ emails…. . ” Seriously can set my calendar to these, everything they do is a sales pitch:“ We have hot chocolate and donuts every morning at this bootcamp, and catered lunch ever afternoon”“ Our bootcamp has an arcade in it and a bouncey house” Or my favorite, “ Our graduates go off to work at places like Github! And Air Bn B! And Twitter!” Even if they’ve had O N E person in the entire history of their bootcamp go off and find a job at one of those places, they will advertise it………and 9 times out of 10, the person who got the job at Github, or Twitter, went out to get it themselves, and it’s not even necessarily because they went to that bootcamp. Kerfuffle The Fourth: Diversity Scholarships That Cover Almost N O T H I N G Every single bootcamp has a diversity scholarship. Every single one. And I wouldn’t even really call it a scholarship… I’d call it a discount, a scholarship should cover a pretty good amount. Great example of that is Bloc’s Veteran Scholarship with Operation Code (http://try. bloc. io/operation-code-bootcamp-scholarship/). Now don’t get me wrong, depending on what program you pick, you’ll still be paying out the nose B U T if you go through one of their lower cost programs like say their U X/ U I program it’ll take a grand off of a 5k coding education, and that’s pretty cool if you ask me. Others? We’re talking 500 bucks off of a program that makes you put a grand down up front and the rest is between 10k-20k. Does that sound like a scholarship to you? Wanna know why? Go back and read the title of the third kerfuffle. But who benefits from these diversity scholarships? Are we talking about someone who works their butt off, is underpaid and over worked? Are we talking about those of us who otherwise cannot afford to swit Nope! Because they can still afford to either pay for the rest of the program O R they haven’t gone into debt and can pay for it by using one of the many M A N Y M A N Y lending services that are out there that can pay for it up front for them for the low low price of between 300–800 dollars a month! While you’re supposed to be attending a F U L L T I M E P R O G R A M and feed, clothe and shelter yourself for the 6–7–8 months you’re supposed to be attending said program. Oh and let’s not forget, that A L O T of these bootcamps are located in cities where rent is also R I D I C U L O U S L Y expensive. Kerfuffle The Fifth: The Overall Cost Is Too Damn High! Alot of these programs are located smack dab downtown in the middle of citites like Chicago, Seattle, and San Francisco. If you are attending one of these illustrious institutions, you usually tend to have to live outside of the area prompting you to either own a vehicle while attending (which in itself is a headache, parking is expensive and let’s not forget T R A F F I C), or take public transportation ( Most places stop running at around midnight to one or 2am, so good luck staying late to finish something). Apartments in these areas can range from 1000 to 3200 dollars, meaning you will more than likely be crammed into a small apartment with between 3–6 people. Let’s not forget things like utilities, internet, and your regular everyday stuff like food and clothes. You will most likely not be working seeing as these programs R E Q U I R E you to be there 40 hours a week or more, and require that you N O T W O R K during the program, in fact a lot of the S P E C I F I C A L L Y say that they will remove you from the program if you are found to be in breech of this ( No joke!). Kerfuffle The Sixth: Finding A Job Afterwards I’m the type of person, that feels like in these programs, you get out of them, what you put into them. H O W E V E R there are alot of different things that factor into a job search and yes while the vast majority of coding bootcamps claim to help you with finding work afterwards, there is absolutely no guarantee that you will find one, I don’t care how much they promise that they will work hard to help you. There are a lot of people who are left looking for a job from anywhere between 3–6 months, trying to find where they fit in. Unless you were a super star pupil, you’re not going to have a whole lot of luck, and if you struggled in bootcamp and were very lucky to eek out of it, you’re not going to have a good time with the coding problems given to you when you go looking for work. You might get an interview, but that does not guarantee a job. Kerfuffle The Seventh: You’re Paying A Mentor To Help You Through Free Resources Yup, you’ve read that right, you are literally paying thousands of dollars to have someone stand over your shoulder, and teach you something that you can find online. A lot of the coding problems most of these places use, can be found online with the use of good old google. With the solutions at that. There’s plenty of free communities ( Literally everyone has a slack channel now by the way) that you can join, and some folks actually group up and go through these exercises together. There’s even folks who sign up for these communities J U S T T O H E L P P E O P L E. Will you always get an answer right away? No, but it’ll help you with going at it to hammer at the issue some more while you wait. It’s free, and there’s some pretty awesome folks that hang out in the channels in these places. Final Thoughts: I’m not in anyway knocking anyone who wants to utilize a bootcamp to break into coding, I’m just making sure that if you do decide, you know the risks associated with it, and what to expect. It’s not easy and you won’t be spending a small amount of money to do so. It’s something that should be thought out thoroughly and you have to understand that spending thousands of dollars on this doesn’t guarantee that you’ll even have work afterwards. Tech is a tricky beast, one minute you’re sitting in the office, yucking it up with your colleagues and the next day everyone shows up to work to a locked door, no lights and a sad, long drawn out email stating that they no longer have jobs because there’s no longer a company. Basically what I’m saying is, don’t let the happy go lucky, diverse stock photos on the bootcamp website fool you, there are more facets to picking this up than just hitting up some tutorials, and some bootcamps and then B A M you’re sitting cozy open air office with the football table, keg, catered lunches and Xbox One hooked into the big screen. But that’s another blog for another time.","['Programming', 'Learning To Code', 'Kerfuffle', 'Coding Bootcamps']",https://medium.com/operation-code/learning-to-code-the-seven-kerfuffles-of-coding-bootcamps-44963071f109,9,[],0,23,krystyna,F,1.0,0.0
HackerYou,"Hands-on, project-based learning. Proven results. We offer Toronto’s best full-and part-time coding courses to help you become the best developer you can be.",Life Lessons from Three Shopify Execs – HackerYou College of Technology – Medium,2013-07-29 19:48:50,medium,"Life Lessons from Three Shopify Execs Last week, the Hacker You Summer Academy cohort had the incredible opportunity to sit down with three of Shopify’s executives to talk careers, life, and tech. From our outdoor session with Harley to our intimate Q& A with Daniel and our ice cream social with Tobi, we got the chance to take a peek inside some of the minds behind the e-commerce giant and hear their thoughts on career paths, lifestyle design and the pursuit of passions. Here are some of our top takeaways from the week: Harley Finkelstein — Chief Platform Officer Forget work-life balance — find work-life blend For the most part, baby boomers were taught to find a job that would allow you to leave work at the office and give you the freedom to ‘live life’ after work and on weekends. But as Harley pointed out to our group, if you have to leave work to live ‘life’…you’re missing out on tens of thousands of hours of living over the course of your lifetime. Instead of looking for jobs that you feel the need to get away from, find what you love to do and pursue opportunities in that field. When you’re doing something that you are truly passionate about, it no longer becomes necessary to ‘get away’ from the office, or separate ‘life’ and ‘work’ — it’s all just the pursuit of your passions and personal goals. Daniel Weinand — Chief Design and Culture Officer Never underestimate the value of tenacity when learning a new skill. If there’s anyone who knows about making career transitions, it’s Daniel Weinand. This jack of all trades is an engineer, a musician, a photographer and a designer, among many other things. It’s no surprise, then, that when our students — many of whom are in the midst of their own career transition — got a chance to sit down with Daniel, the topic of learning and mastery came up. According to Daniel, one of the keys to successfully learning a new skill or trade is tenacity. Regardless of your age or experience — if you have the sheer will to succeed and a dedication to your craft, your goals are within reach. Tobi Lutke — Founder & C E O Don’t make 16-hour days a habit. “ Sometimes the twelve or sixteen hours days are necessary, but don’t make them a habit”…while these aren’t words that you typically hear from a startup C E O, Tobi’s message about managing your energy and preventing burnout resonated deeply with the group. In his experience, Tobi has found that we’re often lucky to find five or more truly creative hours in a day. While he certainly isn’t advocating for laziness, Tobi explained to the group that working the long hours that are often glamourized in the startup world just for the sake of ‘working hard’ is not only a recipe for burnout, it’s just plain ineffective. Instead, find your own rhythm based on the ebbs and flow of your energy and do your best to build your days around that. It’s not about the hours you work — it’s about the results that they produce. As I’m sure you can tell, last week at the Hacker You Summer Academy was pretty inspirational, and we’re looking forward to putting all these lessons into practice as we head into our second and final month of Ruby on Rails bootcamp. Your turn: Got advice for our Summer Academy cohort? We’d love to hear it! Share in the comments or tweet us at @hackeryou.","['Advice', 'Ruby on Rails', 'Coding Bootcamp', 'Learn To', 'Shopify']",https://medium.com/hackeryou-college-of-technology/life-lessons-from-three-shopify-execs-8be89b5eaaf8,0,[],0,0,hackeryou,Unknown,Unknown,Unknown
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 19 — The Heart – conshus – Medium,2017-04-06 11:30:46,medium,"Day 19 — The Heartliner notes:- Yesterday was a good day. haha- Honestly, it was kind of a blur. I remember doing the daily quiz and getting it to work. Learned some techniques to group common parts into a singular method in the base prototype and call it when I need them. I think I got the vernacular down. haha- Also, learned about doing post requests. Later incorporated that into the Quiz App Homework assignment to be able to post the quiz results. My favorite from the series6:37am Realizing that whether it coding or whatever, if you really want to make it work, you need heart. Things are going to get rough, especially if you’ve never done it before and the learning curve is steep. Just have to have the heart to be able to persevere, keep pushing and elevate. Let me get back to coding and reading before I turn into a motivational, self help guru. hahapeace piece Dwane / conshushttp:// H I P H O Pand C O D E. com","['Coding', 'Codingbootcamp', 'Hip Hop', 'Front End Development', 'Programming']",https://medium.com/@conshus/day-19-the-heart-cac6285d2c30,1,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Academy Student,An account for the students to publish blogs,Academy student Josh talks self study vs coding bootcamps,2017-10-04 09:20:13,medium,"Academy student Josh talks self study vs coding bootcamps At the beginning of 2017 I made a promise to myself to learn how to program; the world is tech crazy, and I believe coding will be vital for me to know in the future. So I began a self study programme. I started with freecodecamp. com and really enjoyed it. However, as time went by, I realised I was lacking the direction that would enable me to gain the skills I needed to get hired. I spoke with various people within the coding industry to figure out how they worked their way into their careers. Most were university grads, some were self taught and the others mentioned bootcamps. At the time, I didn’t know much about bootcamps, so, I decided to do some research and find out more. After looking into it, I really liked the concept of bootcamps, and could see some huge benefits in attending one. A friend told me that he had recently read in a magazine about a software company that had created a coding course — Mayden Academy. After doing some research on the company, I got in touch with them to see whether I could get a place on the upcoming course. I attended an interview, was offered a place, and haven’t looked back! Here are three advantages I’ve found of a coding bootcamp over self study… Time At a bootcamp you are there to learn, which means you can dedicate eight solid hours a day to learning. During self study I was putting in one, maybe two hours a day, so I’m already being eight times more productive than I was alone. As you can imagine, this has had a huge impact on my learning curve. Teachers Having guidance is key. A good teacher is always willing to lend a hand when you are stuck, and to help you to understanding what you are doing and why you are doing it. Having help on demand is honestly like a dream come true and I recommend it to anyone that asks. Remember, no one can take on the world alone. Don’t be afraid to ask for help. Syllabus Software applications are complicated systems comprised of lots of interlinked parts: frontend, backend, database, web server, network… that’s why you must first learn about what we call the ‘stack’. It’s a good start to know about algorithms and data-structures, high-level programming, object oriented programming, system administration, and networking. With this knowledge, you’ll be able to navigate pretty much any system, and will be able to make good engineering decisions. A good bootcamp has a set curriculum that ensures you study (or are at least aware of) all these things, and ensures you learn everything you need to go ahead and get hired straight away. It trims the less important parts, making the information easier to digest. Curious to find out more? We are now accepting applications to our course beginning in February 2018. Get in touch to talk with academy lead, Mike.","['Programming', 'Codingbootcamp', 'Coding', 'Learning To Code', 'Developer']",https://medium.com/mayden-academy/academy-student-josh-talks-self-study-vs-coding-bootcamps-2136b79cfb98,0,[],0,3,academy,Unknown,Unknown,Unknown
TJ Stubbs,Learning to code at General Assembly WDI,So You Think You Can Code? General Assembly Bootcamp Week 2,2017-12-04 03:07:13,medium,"So You Think You Can Code? General Assembly Bootcamp Week 2 Man, I understand everything… said no developer ever! This statement sums up my week two experience. It is interesting to see how people interpret material differently with programming. That’s what makes web development so fascinating — everyone understands and sees the logic in their own unique way. Earlier in the week, we built our own individual racer games. The object of the game was simple enough. You have two players that can be controlled by two unique keyboard keys. The project required a start button on landing page, and a simple winning logic to let the winning player know when they have done so, and then you can restart once the game is over. We built the racer game while concurrently learning C S S, including the box model, and positioning along with D O M manipulation. I actually did not find the racer game overly complicated. The trickiest part for me was figuring out how to get the keydown event listener to correspond with the specific keyboard key that I wanted to assign for the players to move. After finishing the racer game we moved on to a more robust way to manage your C S S by learning flex-box. Flex box is a simplified way of laying out your webpage in the way that you desire, especially for making tables and sidebars. Finally, we finished off the week by learning objects and constructor functions. Objects allow you to manage multiple properties of other objects — it’s a way of controlling multiple items or variables in a more tidy fashion. Constructor functions help to create a neater way of managing and accessing your objects. You can create new objects with simple syntax, as well as create methods that act as functions within the constructor functions that allow you to perform the same function on all of the objects within that constructor function. While we were learning about constructor functions I thought I had a handle on everything until… Our big project over the weekend was to create a tic-tac-toe game. Up to this point, I have not struggled too much with any programming concepts that we have gone over. But for some reason, creating my own tic-tac-toe game has been a different story. Even though I thought I knew how to use constructor functions, I could not get them to do anything that I wanted. But my problems went deeper than that. I’ve rewritten my logic so many times that I’ve lost everything I write has no meaning. At this moment I can’t pin-point exactly what has caused me to struggle so hard. Something in my brain is not allowing for a fluid program to be created. I understand most of ( I think) the logic that I need to write the code, but something is blocking my ability to understand it as a whole. Mostly I think I’m just feeling fatigued. Does anyone else have this problem or am I the only one? What tips do you have to overcoming the fatigue? I have written and rewritten, and restarted my code so many times that I’m a bit lost in my head. While I’m frustrated with the problem right now, I recognize what I need to do next— and that is to step away from the problem, regroup with a fresh mindset and talk through the steps with someone more experienced to get help with solving the problem. https://softwareengineering. stackexchange. com/questions/37216/how-do-you-combat-programming-fatiguehttps://en. wikipedia. org/wiki/ Temporal_motivation_theory","['JavaScript', 'Coding', 'Software Development', 'Software Engineering', 'Codingbootcamp']",https://medium.com/@tj_teej6486/so-you-think-you-can-code-general-assembly-bootcamp-week-2-7657dc9f2509,1,['General Assembly'],1,73,tj,M,0.005271481286241434,0.9947285187137586
Omar De Los Santos,Software Developer,The Difference Between a Coding Bootcamp and an Apprenticeship: Part 1,2018-05-22 23:52:30,medium,"The Difference Between a Coding Bootcamp and an Apprenticeship: Part 1 Emptying the Cup This week, I started an apprenticeship with 8th Light — a software consultancy in which every Software Crafter begins as an apprentice. I also completed a coding bootcamp — App Academy in San Francisco — earlier this year. Though it’s only my second day as an apprentice, it’s already pretty clear how different the next six months will be than the three months I spent as a student at App Academy. In order to get better acquainted with the concept of apprenticeships, I’ve been reading Apprenticeship Patterns: Guidance for the Aspiring Software Craftsman. The book has helped illustrate some of the principal differences between learning to code as a student at an intensive bootcamp and as an apprentice at a software consultancy. I’ll be reviewing each chapter of the book and relating it to my experience as a bootcamp graduate. In their book, David H. Hoover ( Dave) and Adewale Oshineye ( Ade) understand that most software developers don’t start their careers as official apprentices. They provide a series of contexts, problems, and actionable solutions to embrace apprenticeships even at jobs that don’t explicitly treat new employees as apprentices. Given what I’ve read so far, I think that anyone considering a bootcamp or an apprenticeship can benefit from familiarizing themselves with these concepts. Although a bootcamp might facilitate some concepts (such as picking a first language), some just aren’t feasible in a bootcamp environment. Still, keeping these concepts in mind would have undoubtedly helped me make the best use of my time in the few months after the end of the bootcamp. Emptying the Cup Dave and Ade introduce an analogy that details the need to empty one’s tea cup in order to obtain fresh, new tea. In short, in order to learn, you must be willing to learn. To be accepted into a bootcamp, you’ll have to demonstrate that you can independently learn some coding fundamentals. You won’t need to know object-oriented programming or a full tech stack, but you will need to know basic loops and methods (typically in Java Script, Python, or Ruby). At an apprenticeship, though, you’ll already be expected to know O O P or possibly a tech stack to create an application like Tic Tac Toe. Before you get to that step, though, you must learn a computer programming language. Your First Language Dave and Ade give a lot of great advice about picking a first language. For instance, they suggest having “an actual problem to solve” as a way to help learn a first language (14). The lack of a problem to solve hindered my drive to code the three previous times that I tried to learn to code on my own prior to enrolling in App Academy. A bootcamp will provide you with daily projects and challenge you with a number of showcase projects to facilitate solving problems. In my case, I felt that the daily projects had little flexibility, as we often created them against pre-written tests. The showcase projects, however, provided me with the opportunity to begin tackling a problem. The primary showcase project was a clone of an existing website. Though we had little flexibility with the visual design (as we aimed for a pixel-perfect clone of a small number of features), we had more freedom to design database schemas on the backend as well as React component hierarchies and Redux state shape on the frontend. On their own (especially as a new developer), S Q L, Ruby on Rails, Java Script, and React- Redux won’t really help you create much. But the artificial problem that a bootcamp creates will help drive you toward putting those technologies together to build a real web application. Despite making it through the eight-week instructional curriculum, I didn’t feel comfortable enough to claim that I understood these languages and frameworks until I experienced firsthand how they worked together. Dave and Ade also suggest receiving feedback from a mentor in order to help select a first language (16). Very few bootcamp students have a degree in Computer Science, and many of them have had little exposure to coding before coming into the program. They often worked in industries without software developers nearby. Naturally, many students don’t have close peers to discuss the benefits or drawbacks of a particular language. Researching languages and frameworks online often results in reading highly opinionated and uncompromising endorsements of a language or tech stack at the exclusion of any other (the exception being Java Script, which is universally suggested for any aspiring web developer). That’s not actually me, but I do have the same octocat sticker on my laptop. That’s precisely where I found myself every time I tried to learn a new language. I credit part of my success at App Academy in having relinquished control of this decision and allowed App Academy to dictate which tech stack I would learn as my “first language. ” However, I’m following Dave’s and Ade’s advice to “wear the white belt” and “take a step toward ignorance” as I’m learning Clojure (19). Clojure is the first functional programming language that I’ve ever learned. If I’m going to learn a completely new paradigm, I will have to embrace my ignorance and seek out my mentors when I struggle. Expose and Confront Your Ignorance At a bootcamp, the limited amount of time (a little over three months, in my case), makes it difficult to follow some of the apprenticeship patterns. Simply put, you won’t always have the time to “wear the white belt” at a bootcamp that requires nine hours of time in class with an additional three to five hours of homework and study each night. Bootcamps and apprenticeships both foster an environment that encourages you to expose your ignorance. When you are surrounded by 75 peers struggling through the same material, there’s little stigma in admitting that you are lost. At an apprenticeship, you are brought onto the team with the expectation that learning is your full time job. Naturally, your peers are aware that you are ignorant of certain concepts or technologies. However, bootcamps and apprenticeships foster different approaches to confronting that exposed ignorance. As a student, I vividly recall pair programming with a former student who struggled with understanding Ruby bracket methods. The syntactic sugar would allow us to access an element inside of a two-dimensional array as [0, 3] rather than as [0][3]. Believing that the core Ruby concepts — classes, instances, and instance variables — were a more worthwhile focus, I suggested that we simply move one and accept that the code works. With assessments that determined whether or not you stayed in the bootcamp never more than a week or two away, I often found myself satisfied with the how over the why. It wasn’t until after the bootcamp was over that I began to understand the consequences of this tradeoff. At one of my first technical interviews, an interviewer asked me why I assigned a variable to a Java Script function’s parameters and manipulated that variable rather than manipulating the parameter directly. I was caught off guard by the question, so I answered honestly: “ I was taught that this was a best practice. ” Despite agreeing with me, he — rightfully — didn’t seem satisfied with my inability to justify why I made the decisions I did. The Deep End When confronted with a difficult problem or a difficult job offer, Dave and Ade suggest that you “grasp it with both hands” (30). Coding bootcamps certainly instill that attitude in in their students. After all, the majority are entering the job search with no software development experience. You are expected to sell yourself on your ability to learn and adapt quickly. While you’ll certainly learn quickly by diving into the deep end and taking a software development role immediately after graduating from a bootcamp, the possibility of burning out can have long-term consequences for your career. Becoming an apprentice certainly doesn’t mean you’re jumping into the shallow end. It’s closer to steadily swimming — rather than sprinting — the 1500 meter race.","['Programming', 'Apprenticeship', 'Codingbootcamp', 'Software Development', 'Software Engineer']",https://medium.com/@omarnyte/the-difference-between-a-coding-bootcamp-and-an-apprenticeship-part-1-5c80152e2dc7,2,['App Academy'],1,43,omar,M,0.00476718171743994,0.99523281828256
Fiona Whittington,"Aspiring Creative Technologist and Hacktivist. Boston University, 2019. Ask me about TechTogether & The Bit!","From Communications to Code with Christy Kusuma, Full Stack Web Developer Intern at YouVisit",2018-07-02 20:19:38,medium,"From Communications to Code with Christy Kusuma, Full Stack Web Developer Intern at You Visit By Fiona Whittington Photos by Bridget Scott Christy Kusuma is living the dream for aspiring developers from unconventional backgrounds. As a recent graduate of Boston University’s College of Communications, Christy has proved that with determination, hard work, and perseverance, anyone can become a developer. What motivated her to switch from writing articles to writing code? Christy’s entrepreneurial spirit. “ I realized I had all these ideas, but I couldn’t make any of them, ” she said. “ So I made a career pivot and joined a Bootcamp because I couldn’t wait for anybody else to help me do this. After college, I was coding 24/7. That would be the first thing I woke up to and the last thing I fell asleep to. ” The career switch came at a steep cost of $10, 000 to attend a coding Bootcamp, which she says was still not enough to learn the skills necessary to get a job or internship. Photo by Bridget Scott“ You need to know about algorithms and problem-solving skills that they don’t teach you, ” she recalled. “ I had to consistently be making projects and staying up late watching a lot of videos. ” Outside of the classroom, Christy used resources like Udemy and Treehouse to practice and learn new skills. “ Treehouse is a great tool for learning new languages because you can watch videos and get tested afterward. ” Once you get more advanced, she suggests using Udemy, so you can develop your skills through building projects. As a beginner coder in a new city trying to make it big as a developer, Christy remembers feeling lonely and discouraged. To keep her spirits high and create a network of support, she cited hackathons like She Hacks as the perfect way to make friends. Currently, Christy is working as a Full Stack Web Developer Intern for You Visit, a V R company that creates real-world 360° content. “ Every day I’m working on a different project, in a new situation, fixing and solving problems with code, ” she said. “ The other day I was working with P H P, S Q L, A W S, S A S S, and some Javascript too. Before that, I had to use React Redux, so it’s always different. ” Photo by Bridget Scott. In her job, Christy likes to use the following tools: V S Code — “ Better Version of Sublime” Source Tree — “ Git Hub for Bitbucket” Terminal, so she can enjoy some Home Brew with her cold brew Jira — A task management tool Chrome + an abundant number of excessive extensions ( We both share a love for Catify and C S S Peeper) On the weekends, Christy tries to achieve work-life balance by taking a break from coding to spend time with her friends. On Sundays you can either find her at home really tired, exploring New York, or working on her dream venture. “ I love coding, but I think it’s kind of like a stepping stone. Someday, I want to work on my own idea or have my own company. ” Photo by Bridget Scott.","['Web Development', 'Codingbootcamp', 'Women In Tech', 'Women in STEM', 'Girls Who Code']",https://medium.com/@fionawhittington/from-communications-to-code-with-christy-kusuma-full-stack-web-developer-at-youvisit-84f6c5167d31,2,[],0,28,fiona,F,0.9998077588527048,0.00019224114729516706
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 18 — I Can See Clearly Now – conshus – Medium,2017-04-05 10:58:17,medium,"Day 18 — I Can See Clearly Nowliner notes:- Yesterday was pretty great. I think I may have cleared the mental block I was having with Functional Programming. We were introduced to Prototypes and I think I pick it up pretty quickly. Used it to build a Java Script quiz. Of course, it’s still a work in progress, but you can check it out here:https://conshus. github. io/quiz-constructor/ So yeah…. because… J A M A I C A!!!!! Also went to the Code for Orlando meetup and brought some classmates along. I think they liked what they heard and hopefully will get involved. Always to good catch up with everyone and see how far they’ve come with their projects. Couldn’t stay too long because we had homework to finish. Also, through our daily quiz, I learned an interesting way to determine palindromes. 6:37am Looking forward to what we’ve got coming up. I think we’re moving from just learning the basics to being able to really think through concepts like developers would. Going to try and get some coding in before class starts. peace piece Dwane / conshushttp:// H I P H O Pand C O D E. com","['JavaScript', 'Functional Programming', 'Coding Bootcamps', 'Hiphop']",https://medium.com/@conshus/day-18-i-can-see-clearly-now-6991ddc1186d,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Zack Frank,,"I Stopped Coding, and It Worked Like a Charm (A Followup Story)",2018-03-19 18:27:02,medium,"I Stopped Coding, and It Worked Like a Charm ( A Followup Story) In my previous post I outlined an experience I had that led me to tweak my approach to brainstorming how to write algorithms. The basic premise applies to beginner to intermediate programmers of any language. What I learned was basically this: If you’re scratching your head a bit more than usual and considering a disconcerting number of nested loops and conditionals when trying to solve a problem, there may very well be a function or method that already exists that will perform the exact function you need. The trick is in simply recognizing when you’re in this situation and being able to find the method if it exists. This takes an ounce of self-awareness and can be easier said than done. However, I’m proud to announce that last night I effectively practiced what I preached and it felt pretty good. Especially after accomplishing my goal in one line of code. Here’s the synopsis: I’m currently enrolled in a coding bootcamp which gives us daily problems to solve outside of class to keep our skills sharp. Over the weekend we were given the following problem: Write a method called `split_array`, with two parameters, the first being an array, and the second being an integer. The method will then create an array of other arrays, each one being the size indicated by the second parameter. p split_array([0, 1, 2, 3, 4, 5], 2) #=> [[0, 1], [2, 3], [4, 5]]p split_array([0, 1, 2, 3, 4, 5], 3) #=> [[0, 1, 2], [3, 4, 5]] When I first saw this, I realized it was a bit more involved than our regular daily problems which usually require no more than 5 minutes. Since I gathered it would take some time to work out, I put it off until later in the weekend when I would have some downtime. Fast forward to 1am, the night (morning?) before the new week and I knew I had to tackle this (busy weekend!). So I start thinking about the problem, considering some pseudo-code but really just diving in with some loop ideas and pausing along the way to figure out what I was trying to accomplish and how my loop would get me closer to the solution. T H E N I S T O P P E D. In one sense, the problem seemed slightly unique, but it also seemed possible that you would be able to split an array into smaller pre-defined chunks with a single function. So I searched: “ruby split array into smaller arrays” and the first result led me to this: The Google search: “ruby split array into smaller arrays” led to this answer on Stack Overflow So my code looked like this:def split_array(array, size) array. each_slice(size). to_a end…and I was done. The best part was seeing everyone else’s answers with all the logic: the conditionals, the loops, etc. It was interesting to see how others approached the problem and to try to compare their answers to how I would have approached it had I not found the #each_slice method (or had it not existed). I almost felt guilty, like I cheated. However, when I considered that I had actually put my own strategy into practice and succeeded, I felt pretty good about it 😊. I would guess this “coder’s instinct, ” we’ll call it, is naturally acquired by all coders somewhere along their early coding career. I imagine it would be hard to grow and survive as a programmer without it. I won’t take full credit, however, for developing it completely autonomously, I have to give a shoutout to my bootcamp instructor, Peter Jang — a truly great teacher. Check out his blog, Linked In, etc. He gave me the nudge I needed to develop this approach when I was struggling with a problem a few weeks ago. It was a valuable lesson that I’m happy to pay forward to you! I hope that next time you’re struggling with a problem you remember to S T O P.","['Programming', 'Coding', 'Codingbootcamp', 'Mindfulness', 'Algorithms']",https://medium.com/@zackfrank/i-stopped-coding-and-it-worked-like-a-charm-a-followup-story-9565e2be17e8,0,[],0,6,zack,M,0.0,1.0
Maddy King,Education x Tech,How to turn Cyborg — Week 16 – Enspiral Dev Academy – Medium,2018-03-05 04:26:35,medium,"How to turn Cyborg — Week 16 My adventures through Dev Academy’s web development programme Enspiral Dev Academy is a web development school in Auckland and Wellington, New Zealand. Dev Academy’s Marketing Manager Maddy King has taken it upon herself to brave the programme, and share her #nofilter thoughts on the journey. Check out Week 1 here. At the end of every Sprint we fill in a reflection form that helps us monitor our progress, congratulate ourselves and ask ourselves what we could have done better. This week, after Sprint 8, mine went: What did I do well this sprint? Built a freaken calculator from scratch. !! The challenge this week was to build a calculator using Java Script. It was an opportunity to try out pair programming (i. e. programming with a partner), but as I was feeling pushed for time I made the call to do it on my own, knowing I’ll get plenty of pairing once we’re on bootcamp. This of course meant I faced the mountain of building a calculator from scratch alone. But, keeping in mind my lessons from my last sprint, I went into it with my head up. We started by looking at what someone else had done, and “reverse pseudo-coding” it. Pseudo-code means explaining what you’re going to do in plain English, rather than in code. So we had to explain what this person had done, and how they’d built their calculator, in words. I found they’d done a couple of things that I hadn’t been exposed to yet, to do with events and strings. But explaining their logic gave me a really good starting point to try and build my own calculator. And because I didn’t understand all of it, I couldn’t just copy them, I had to think of my own way of solving the problem using what I knew. I started by making the face of the calculator in H T M L — the buttons and the screen. I did this using a 4x4 table, with rows and columns. Each button was a cell of the table, and some buttons that took up two cells (like the Clear button). I used the calculator on my phone as a template, and just put in the simple operators + — x and ÷. Then I styled it a little using C S S, so the buttons changed colours when you hovered over them (just for fun). Then I started on the Java Script. My logic was: first I would need to get the number that the user clicks on, and print it to the ‘screen’. Then put the number into an array. Then get the operator that the user clicks on, and the following number. Then do the equation, put the answer in a variable, and print the contents of the variable to the screen of the calculator. Seems simple, right? Boy, was it anything but. Me learning new things since way back (ft. super cool Dad) First I couldn’t get the value of the click. I tried to use event listeners, which we’d learned about, which locate a section of your H T M L and add in the ability to respond to an action in that section, ie. respond to a double-click with a pop-up, or something. This didn’t work for me in the Java Script. Going over it now I don’t think I fully understood the interaction between the Java Script and H T M L in this. So in the end I used an input object in the H T M L that I found on Stack Overflow. Then I wrote a function to push that value into a ‘sum’ array. I wrote another function to clear the array when the clear button was pushed, and print a 0 to the screen — that was fine. Then I had to write a third function to ‘just do the maths’ when the equals button was pushed. Wow this was tricky. At first I’d thought that if I treated the input numbers and operators differently I could string them all together into an equation and get the Java Script to ‘just do’ the equation later. This proved pointless, so I ended up putting the whole equation into the sum array, numbers and operators and everything. I tried pulling all those values out of the array, reducing the array using the reduce function, messing with the reduce function a bit to try and get it to work with divide or multiply. But I just couldn’t figure out how to get Java Script to do the maths that was contained in the array. In the end I had spent 3 hours on it, so I hacked together a workaround. I wrote an ‘if’ statement, that said:‘ Look at the first three items in the array (the number, followed by the operator, followed by the next number). If the second item in the array is a +, then add the first item and the third item together. If it’s a -, then subtract the second item from the first. ’ Etc. I put the result in an answer variable. Variables store data. I printed the contents of the variable to the screen of the calculator using document. get Element By Id. inner H T M L. This locates an area of the H T M L (which builds your website) and then rewrites it with your new contents, so the new contents are printed out on the website. It’s pretty cool. Then I got the function to clear the array so the user could start again. But the maths still wouldn’t work. At first nothing was printing to the screen, and I realised it was because I’d missed some basic syntax around the operators (when you’re doing maths in Java Script you have to write += instead of just +, otherwise it thinks you’re assigning a new value to a variable). Then it was finally printing to the screen (breakthrough!) but the numbers it was printing were illogical. I added in some console. log commands and used the debugger, so that I could see what the Java Script was doing at each step, and saw that, while everything was going into the array as it should, the result was wild. It kept printing things like “3 + 3 = 337” or “2 x 5 = 45. ” Eventually (and I mean eventually — 3 hours later) I realised the absolute obvious — that all the values were going into the array as Strings, which means as text, rather than as numbers. So Java Script couldn’t do the maths, because it thought it was adding together words or letters, rather than doing an equation. I put the first and third values of the array into variables, and converted the contents of those variables into numbers. Viola! It finally worked. I was so happy. And I’d done it all on my own. Of course the calculator could only handle single-digit numbers, and couldn’t hold an equation while deleting the last value (like when you press C on a calculator, rather than A C which clears all the values). But after 6 hours none of that mattered. I was just so happy to get a machine to perform the most basic possible maths. I wrote-“ I’m really pleased with the way I approached the problem, I think I’ve solved it in a different way to anyone else. That’s probably why it doesn’t quite work, but points for innovation!” Phase: 0 Week: 16 Sprint: 8 Time logged: 9:30 hours Would you like to learn the skills to begin your journey into technology, and creative, well-paid work that you can do from anywhere in the world? Join Dev Academy today. Start the preparation phase through remote learning, before entering the in-class bootcamp in Auckland or Wellington. Graduate only 9 weeks later with the skills to become a junior web developer and craft the future. Apply now.","['Programming', 'Women In Tech', 'JavaScript', 'Codingbootcamp', 'New Zealand']",https://medium.com/enspiral-dev-academy/how-to-turn-cyborg-week-16-1dc79e602daa,0,[],0,10,maddy,F,1.0,0.0
Connor Kirkwood,,The Three Pairs of Pair Programming – Connor Kirkwood – Medium,2018-03-19 02:49:26,medium,"The Three Pairs of Pair Programming Pair Programming. For some it’s a necessary evil. You’re in a program where they believe in the process and force you to engage. They say things like “we believe you’ll find that you learn more from pair programming than you do on your own”. I don’t buy into this concept, unless of course my partner is Google and your conversation is held to blubs like, “better way to understand hooks than official Sequelize docs”. I find I learn most from the one on one battles with the machine (my wonderful 2011 who, despite these battles has been loyal for the past seven years). I find strength in the struggle. When I’m eye to eye with a 1, 000-line error and I’m on the last Stack Overflow entry of the first page of my Google search (does anyone actually check the second page?) Some people love pair programming. It can certainly be illuminating and you can learn a lot. It just depends on the pair. In a way its kind of like dating in that you know fairly quickly whether or not the first encounter is going to be very good or very bad. This makes pairing up a very nerve-racking and potentially disheartening process. In the end, you either end of feeling high on life or at home watching The Office wondering why you ever tried pairing in the first place. I guess for these reasons, I just like the stability of knowing what I’m going to get when I code alone. I hope that doesn’t speak volumes about my love life… Anyway, these are the three pairs of pair programming. I hope you find yourself identifying with at least one or two of them. Pair 1: The Dynamic Duo This is the good one. It’s the reason why we pair in the first place. You start out with some small talk and find out that you both like basketball and that you’re both not sure that the mid-range jumper is totally dead. ( Sorry non-sports fans, that’s the deepest sports reference I’ll make this entire post. I promise). You hit the code and things are rolling. They’re propelling the progress forward and each time there’s a bug, you come out spraying Raid. When you hit real roadblocks, you reason things our together. You listen to each other and collaboratively come up with a solution. And as soon as you pass this hurdle, it’s all high-fives and good vibes again. You’ve done battle together and neither of you would have made it without the other person. You’ve learned a lot from each other and you’re both better programmers for it. Pair 2: The Fast and the Furious Here is where things start to get ugly. Person A has a computer science background. They’ve been playing with computers their entire life and they just see code like they’re Neo from the Matrix. They like being the driver because they can’t always necessarily explain their thought process to their partner. The rare times they do get stuck, they don’t turn to their partner because they only trust the voice in their head to figure out the problem. They try to explain what they’re doing, but mostly they think their code is speaking for itself. They take their partner’s silence for understanding. They’ve finished every workshop so far, and they’re not about to slow down and risk breaking that streak. Person B is looooooost. They were bartending before they started boot camp. They felt pretty good about their progress until they paired up with person A. They’re too embarrassed and intimidated to speak up and say they have no idea what’s going on. They want person A to pull over and let drive, but they’ll just end up making a fool of themselves. They can just do the workshop over again tonight or maybe even this weekend. Actually they wanted to do C S Saturday this week, and they’re supposed to have dinner with their parents on Sunday. They don’t understand what Person A keeps doing with that question mark. And what’s the deal with all of the for Each’s? What happened to the tried and true for loop? They should have never come here. They were making pretty good money as a bartender. Maybe they’ll watch the episode where Dwight puts on a fire drill without telling anyone tonight. Who cares about having a career anyway? This may be a bit of a dramatized example, but I believe many of us have found ourselves in a similar situation. You may have been Person A or Person B. If you find yourself identifying Person A, slow down or pull over. Maybe you should try navigating more often than driving. You may find that talking a partner through a problem that you could easily solve on your own is a lot more challenging than you would think. Don’t let you code speak for itself. Explain your thought process. Ask your partner to explain you code, and have them ask questions about it. Don’t take head nods and nervous smiles for understanding. If you find yourself coding along for ten minutes straight with no dialogue, it may be time to pump the breaks. If you’re like Person B, don’t freak out. There’s always going to be brilliant people out there that make you want to give up on everything, especially in programming. If you’re paired with one, take it as an opportunity to learn from them. Speak up when you feel lost and get them to explain their code. Ask for them to pull over and don’t feel nervous about being a slow typer or continuously making errors. Everyone is here to learn. Have a good humility about yourself. It will help in the long run. Pair 3: The Lonely Launderers This is the grand finale and possibly the worst pair of all. It’s where you’re both lost and you’re not making any progress. Person A is a little less lost than Person B, so they’re trying to steer the ship, but they’re not making much progress. They’re not listening to their partner at all. They’re so focused on their own ideas that they can’t process suggestions. They call help tickets, which take longer than usual. This gets them to the next page of the workshop where they get stuck for the next hour. The review video can’t come soon enough. They’re both embarrassed and frustrated by the situation. They avoid eye contact in the halls until they share a few drinks together at Killarney’s. I identify most with this pair, specifically Person A. I like coding alone. As I’ve said before, I like the struggle of the one on one battle. When I get stuck on a bug or learning a new library, I become obsessed with it. I block everything and become laser-focused on the problem. I get frustrated and begin trying all crazy things without consulting my partner. When I started at Fullstack, I was terrible at pair programming. I was too proud to admit when I was completely lost. Often when working on personal checkpoints or problems, I would refuse help from classmates because I wanted to learn everything on my own. I would even refuse the help of Stack Overflow. This was obviously ridiculous, especially the last part. ( Stack Overflow is the greatest gift we as programmers have ever been giving). Don’t be like me. Listen to your partners and crack a joke about how lost you guys are. Accept help when you need it, and put in a help ticket for every page on the workshop if you absolutely need to. Everyone comes to Fullstack to learn, and there’s a great deal you can learn from your fellow students. The greatest learning and fulfillment may come from the one-on-one battle, but sometimes a tag-team match can be just as fun.","['Programming', 'Pair Programming', 'JavaScript', 'Learning To Code', 'Codingbootcamp']",https://medium.com/@cdkirkwood_43513/the-three-pairs-of-pair-programing-f8be9972b67,1,[],0,53,connor,M,0.007552730509043337,0.9924472694909566
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",How to Know If You Should Go to a Remote Coding Bootcamp,2018-03-20 13:01:01,medium,"How to Know If You Should Go to a Remote Coding Bootcamp Many potential coding bootcamp-goers wonder, “is an online coding bootcamp better than an in-person coding bootcamp?” Well, this answer varies from individual to individual. Some students prefer to be in a classroom setting, while others prefer to learn on their own. Here’s when to choose an online coding bootcamp over an in-person coding bootcamp:1. Your home city doesn’t have an in-person coding bootcamp Unless you’re willing to temporarily (or permanently) move to a city where a coding bootcamp is located, an online coding bootcamp is your only option. Online coding bootcamps allow you to learn from whichever city you live in. 2. You can’t afford to leave your job Okay, so maybe you do live a hub city that has a major coding bootcamp. But many full-time immersive bootcamps last for a couple of weeks to a few months — a long enough time frame that you would need to ask your employer for special permission or quit altogether. For people with families or other responsibilities, giving up a steady income for a few months isn’t a viable financial option. A part-time online coding bootcamp allows you to continue employment while learning to code. 3. You need to go at a slower pace than an in-person camp Full-time, immersive coding bootcamps are often highly intensive and fast-paced. If you’re someone that prefers to go at a slower speed, an online coding bootcamp is a good option. Hack Reactor’s remote part-time coding bootcamp takes place on evenings and weekends and is taught over nine months — a good pace for students who prefer to take it down a notch. For 3 more reasons to attend an online coding bootcamp over an in-person coding bootcamp, read our original post. Whether you decide to attend an online coding bootcamp or an in-person coding bootcamp, beginning your programming career has never been easier or more attainable. Assess which one is right for you and go for it!— Start codingtoday with Hack Reactor’s online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Coding', 'Codingbootcamp', 'Remote Work', 'Hack Reactor']",https://medium.com/@hackreactor/how-to-know-if-you-should-go-to-a-remote-coding-bootcamp-7e7732ba1e00,1,['Hack Reactor'],1,50,hack,Unknown,Unknown,Unknown
Kait Sykes,Web developer via @hackeryou. Slytherin. Popcorn & books are my vices. https://kaitsykes.com || kaitlyn.sykes@me.com,6 Tips for Wireframing before Coding – Kait Sykes – Medium,2017-05-01 23:43:38,medium,"6 Tips for Wireframing before Coding What to do before jumping into a P S D to H T M L conversion First of all, what is a wireframe? According to Wikipedia, a wireframe isa visual guide that represents the skeletal framework of a website. Wireframes are created for the purpose of arranging elements to best accomplish a particular purpose. The wireframe depicts the page layout or arrangement of the website’s content, including interface elements and navigational systems, and how they work together. The wireframe usually lacks typographic style, color, or graphics, since the main focus lies in functionality, behavior, and priority of content. In other words, it focuses on what a screen does, not what it looks like. Even projects that seem obviously simple need a wireframe first. You never know what issues might crop up later, and a wireframe helps you identify these problem areas before you begin writing code. It’s way easier to ask a designer questions and finesse your plan when you’re working with scribbles on a piece of paper instead of thousands of lines of code in Sublime Text. Our instructors at Hacker You suggested doing this before jumping into our first project, and while what they said made sense, I only kind of followed that instruction, because it just didn’t seem that necessary. ( It was kind of like when your Grade 8 teacher made you submit your outline with your essay and you wrote the outline after you finished the essay. ) As they say…hindsight is 20/20. That being said, here are a few key steps to make while wireframing as a web developer once you get a design mockup… so you can avoid the mess I made with my first foray into Project One. 1. Look for repetition Repetition of groups of elements or styling can help you write D R Y code. Flag these areas now with class names or semantic elements (e. g. , <h1>) so it’s easy to pop these into your C S S file later. Note: I used Adobe Creative Cloud Assets to inspect my P S D. When you go to the “ Extract” tool, you can find all kinds of information about your Photoshop file. 2. Check that it all makes sense If there are elements or functionalities that you don’t understand, now is the time to clarify with the designer. If you interpret one thing as a hero image and find out later it’s meant to be a slider, that could seriously mess with your code. 3. Think about semantic elements and accessibility As you work on interpreting the design mockup, make note of what semantic elements belong where and what kinds of elements you will need to include to achieve the layout desired (read: divs upon divs upon divs). 4. Notice fixed widths and heights Ideally you are designing a responsive website so these dimensions can’t stay. ( But even if you aren’t, you can’t make every aspect of every element fixed. ) Convert to percentages or ems/rems when possible, but you can view the mockup at 100% and your wireframe/website at 100% and measure pixels to ensure the approximation and conversion to percentages is correct. Also take note of any instances of placeholder text and how the design might need to scale should there be more or less text than anticipated. 5. Ensure the design is practical Make sure that the font stacks make sense and the designer hasn’t used commercial fonts that can’t be distributed. Ideally you’ll be able to use Google Fonts or Typekit. Another issue may crop up if the designer has you using fancy fonts or effects that can only be achieved with images. If the site grows and has 30 pages, the designer is going to have to hand letter all 30 headers. 6. Figure out what effects were intended Make sure links are differentiated from body text by colour and/or style. Failure to do so is a major design and functional flaw. Also consider any H T M L, C S S or Java Script effects such as rollovers or animation that will not be visible in a P S D mockup. The point of making a wireframe after receiving a design mockup is to map out a plan for yourself as the developer. If you go in with a game plan and a basic structure of your website, it’ll save you time messing around with your code once you realize halfway through you’ve failed to consider an issue of reflow or the fundamental functionality of an element. I’m Kait Sykes, a front-end web developer from Toronto. I love the internet, learning new technologies, and efficient best practices. I come from a background in book publishing so I’m pretty handy with a pen, too. In my spare time, I’m working my way through L. M. Montgomery’s journals, learning how to knit, binge reading the latest Y A fantasy, or searching for the best patch of nature in the city. Come hang out with me on Twitter!","['Web Development', 'Wireframe', 'Coding', 'Coding Bootcamp', 'Design']",https://medium.com/@ksykes/6-tips-for-wireframing-before-coding-e4e9d218f62,2,[],0,2,kait,F,1.0,0.0
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Weekly Project: Weekend Edition – Emily Deans – Medium,2017-07-16 00:02:47,medium,"Weekly Project: Weekend Edition This week’s project combines our learning from the past three weeks to culminate in a deliverable that incorporates H T M L, C S S, and Java Script to create a very basic calculator — we’re not quite at the T I-83 level. Yes, I’m dating myself. I approached the project first through H T M L to create a bit of body and structure for the app, and then swiftly moved to C S S (because it was hard to stay excited about a one-dimensional calculator that was non-functioning A N D hideous). My first stab at the H T M L C S S I just started on the Java Script component of the project and still have a long way to go on that front, but at least have been able to assign values to the numerical buttons and connect them with the screen. J S code start Here’s where I am with the browser view at the moment: Tomorrow, I’m going to try to create a function to clear the calculator and another to evaluate the input operations so that this thing can actually be functional/useful.","['Web Development', 'The Iron Yard', 'Codingbootcamp', 'Code Newbie', 'Women Who Code']",https://medium.com/@emilyldeans/weekly-project-weekend-edition-6f1eb6aaabb3,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
Shadi Jam,"Obsessed with back end development, particularly .Net/C# && all things coding at The Iron Yard Houston.",Into the Groove – Shadi Jam – Medium,2016-11-08 04:44:43,medium,"Into the Groove I’m starting to kind of, sort of, a little bit, get it!!! I’m much more relaxed about it as well. I also found a fantastic website that explains the most basic underlying principals of C# which has really helped me. Matt’s teaching style is really growing on me as well. Considering how overwhelming the content has been over the last two weeks it was difficult to see the bigger picture but now I understand and genuinely appreciate how each day he’s introducing a problem that requires us to implement the language in a way we aren’t quite comfortable with. Then he goes back the next day, explains each element and because we’re already familiar with it (seeing as we’ve struggled with it until 3:00 A M the night before!!!) we’re recognizing the process and retaining the information at a faster rate. It’s genius!‘ Whiteboarding’ has also become an essential part of my process and I thoroughly enjoy it, especially when working with the others in the class. Rahul, one of the other . Net/ C# students, has been great too. He really helped with the first challenge we were assigned on Wednesday where we had to measure the distance between two vectors. I haven’t taken a maths class since I was 18 so that was a bit of a struggle at first, but then I remembered how much I love the logic behind it! Another weird thing I’ve noticed is that my general day to day vocabulary is broader. It’s odd, it’s almost as if I’ve opened up a different part of my brain that I haven’t used in way way way too long. This course is incredibly difficult and yet I fully recognize that it’s been Y E A R S since the last time I was this interested, dedicated, and passionate about learning something new. At times, part of me definitely wishes my brain could absorb more information faster, but I’m also confident that I’ll get there.",['Coding Bootcamps'],https://medium.com/@shadijam/into-the-groove-fa500b355045,0,['The Iron Yard'],1,0,shadi,M,0.2668845315904139,0.7331154684095861
Matt Baker,http://thingsthathaventkilled.me,An Open Farewell to Dev Bootcamp – Matt Baker – Medium,2017-07-17 07:27:20,medium,"An Open Farewell to Dev Bootcamp My third week at Dev Bootcamp with the Otters, February 2014. I cannot count all the times I have felt “confident” or “convinced” in my life, there have been plenty. I can count on one hand the number of times I have felt certain. In the final months of 2013, I was certain I would work at Dev Bootcamp in Chicago. Dev Bootcamp did not know this at the time, and Dev Bootcamp was not hiring. Perhaps my certainty was enough, because Dave Hoover hired me anyway. For this, I will be forever in his debt. When I joined the Chicago staff I found that Dev Bootcamp was not a work of precision. It was a strange, beautiful, and chaotic thing. Dave had assembled a team of compassionate human beings and gently convinced them that it was ok to color outside the lines. Sometimes he encouraged them to make a mess. If a dozen teams across Chicago had been asked to produce a painting of a sunset, I am certain this staff would have used markers and glitter to draw a dinosaur. It could be no other way. Dev Bootcamp, like many coding schools, was lauded for rejecting the status quo. What made D B C different was that it didn’t. Rejecting the status quo is easy; you break left when they break right, pick blue when they pick yellow. Rejecting the status quo may change one’s position in the world, but the world itself does not move. Dev Bootcamp was not a rejection of the world as it stood, it was an attempt to craft a new one. It asked us to abandon the patterns of thought we took for granted and challenge ourselves to be a little more uncertain. “ This is a crazy place, ” a student once said to me breathlessly at the conclusion of her first week. She was right, it was a crazy place. Imagining a new world requires a modicum of lunacy. While I had ostensibly joined a coding school, it didn’t take long to see that coding was a very small part of it. Here was a place that asked students and staff to question what they knew about learning, and about themselves. It was a place that endeavored to make its students feel safe, even as it pushed them to work harder than they thought possible. Last Spring I left Dev Bootcamp with the same certainty that I joined. I could see that the end was coming, and after three and a half years I was tired. I had done a great many things at Dev Bootcamp, but hospice care could not be one of them. When I left I knew that I would write a farewell letter. I also knew that I had to wait until it was a farewell to D B C too. Too much of me still resides there, and I only have enough in me for one goodbye. Now that we’re here, I will address what mattered to me most these last few years: you. To the students Before I moved to Chicago, when I was still sitting in my drafty San Francisco apartment eyeing a sliver of the Bay Bridge out the window, I would daydream about ways to teach you. I invented A J A X role-playing skits in my head and imagined how I would explain objects and references and recursion. When I arrived at Dev Bootcamp, I found every teacher’s dream; a group of people that were bright, excited, determined, curious, and ravenous for knowledge. I soon discovered that you were also empathetic, funny, compassionate and caring. Every week I was inspired by the risks you took, the dedication you embodied, the fears you conquered, and the profound ways in which you grew. I witnessed a depth of perseverance that is rarely observed in our day-to-day, but during my tenure, observing it was my day-to-day. I watched you fight through moments of embarrassment, confusion, frustration, fatigue, anger and hopelessness. Instead of stopping, you turned those feelings into forward movement, and you did so with grace. Many of you have thanked me over the years, but the truth is I did very little. You are the ones that chose to take the journey you did; to spend weeks away from your families, to leave your jobs, to go into debt, to leave what you knew and who you used to be behind. You walked a difficult road, and I was simply there to listen and offer a hand. Thank you for letting me walk a piece of that road with you. It was an honor to be a part of it, and I hope someday I can repay you. To the staff In you I found compassion, empathy, and patience, but most importantly I found a commitment to growth. You made it look so natural that I came to believe it is simply an innate feature of your collective humanity. What’s more, the commitment was not just to yourself, but to our entire community. You would only accept growth that included everyone, no matter the difficulty that might represent. Compassion, empathy and patience are fine virtues, but they do not fall into our laps. They are the result of hard work, driven by a commitment to being better versions of ourselves. You live and breathe that commitment in all your roles, and I believe most of the time you do it without thinking. Over the last few years you’ve worked tirelessly, but in the months to come I ask you to consider that your most powerful contribution may simply be your presence. I believe your most important lessons are delivered without uttering a word. The shirt you got me when I left reads “ I worked at Dev Bootcamp, and all I got was a tenuous balance between whole-heartedness and nihilism. ” I love this shirt. It is true that I find no solace in our vast and indifferent universe, but that is precisely what strengthens my belief that we are here on this earth for each other. Our relevance extends only as far as the next mind we meet, and the next heart we touch. On “ Day 1”, when the teachers share with the school why we teach, I would share that I enjoy witnessing “ah-ha!” moments. I picked that answer because it was easy, and because the true answer was more complicated: I taught because learning illuminates connection. We see things we never would have seen before, and find links between concepts that were previously distant. Above all, learning illuminates the connections between us. We are allowed, briefly, to see the filaments that hold humanity together. Filaments without which we would only be collections of matter, unmoored amongst the stars. “ However vast the darkness, ” Stanley Kubrick once said, “we must supply our own light. ” Teaching is the only way I know how. To all of you When people ask me about my time at Dev Bootcamp I offer a small answer: “ It was exhausting and rewarding. ” I offer people a small answer because, more often than not, they don’t realize they are asking a big question. But when people really ask about my time at Dev Bootcamp I get quiet. It was a moment in my life, but it was no ordinary moment. Slavoj Žižek might call it an “effect that seems to exceed its causes. ” It is moments like these that leave us hushed and reflective. Such moments are not permanent, they are rarely repeatable, and they always feel brief. Like all moments there is a beginning, a middle and an end. Like all moments they become a part of us, and the story of that moment and the story of our lives interweave until we don’t know where the moment begins and we end. The moment we call Dev Bootcamp was not designed to last, and we weren’t designed to last in it. It pushed us all further beyond the limits of dedication and growth than we thought possible. We gave ourselves over to it and created the space we did because, I believe, we all knew how rare and precious these moments are. We were right to pour our hearts into Dev Bootcamp, but it is also right for it to come to an end. When the last gong sounds at D B C, remember that we are all still here. We still exist, as a community of alumni and staff, connected to each other and illuminated. We supply our own light, and maybe it’s time for that light to spread. As the Dev Bootcamp diaspora begins, our light goes with it; old staff will share it with new teams, but their connection to this community will not weaken. Dev Bootcamp may be closing, but we are still growing. Of this, I am certain. With all my love, Matt","['Codingbootcamp', 'Goodbye']",https://medium.com/@mattbaker/an-open-farewell-to-dev-bootcamp-9f245389b779,0,['Dev Bootcamp'],1,29,matt,M,0.00021192726656211588,0.9997880727334378
Institute of Code,,Are Coding Bootcamps a Scam!? (Is Institute of Code a scam?),2017-07-21 03:41:11,medium,"Are Coding Bootcamps a Scam!? ( Is Institute of Code a scam?) A lot of people are very sceptical about coding bootcamps. In fact, not a week goes by where we don’t hear a student telling us, “ I totally thought you guys were a scam when I first heard about you”, or have some worried parent calling us on Skype, thinking we had less than good intentions for their kids (clue: we don’t). Scamming students is a stigma that exists for all technical bootcamps. This stigma is often driven by either former students who have had a poor experience, or grizzled, O G programmers who started playing around with electronics when Steve Jobs was still a hippy. For these developers, their main argument is, “ I’ve spent the last 20 years perfecting my craft, so how could you possibly learn what I do in just a few weeks?” Undoubtedly, these O G developer are very good, and they raise a valid point; nothing can replicate good old, hard-earned experience. But within the last few years, pursuing careers as coders or programmers have become more mainstream. Along with increasingly high demand for skilled programmers, more accelerated methods of teaching people have appeared. Previously, coders would have had to undergo years of formal education, and forge territories unknown when they first started off. Now, there are countless resources to learn from and documentation to refer to. Development languages have also become more refined over time, with talented developers building frameworks and all manner of tools to make our (and their) lives easier. This means new coders and programmers are building off years of experience and development, walking on the paths forged by the O G developers before them. But bootcamps themselves…do they work? For the most part, yes, they do. Coding bootcamp aggregator Switchup states the vast majority of students leave bootcamps with a positive experience, with over half of all students stating they experienced an increase in salary within 6 months of graduating. However, it does depend on what you define as ‘work’, and how you define ‘work’ often will depend on what you want to get out of the experience. There are plenty of dodgy bootcamps out there, just as there are as many people expecting bootcamps to be a silver bullet to a high-paying and satisfying career. Currently, in order to learn coding, you have 4 options: To take a 2–4 year computer science degree. Self-teaching yourself, usually through experimentation, reading books and using online resources Coding bootcamps Through a combination of the above Out of all the choices, bootcamps offer one of the fastest ways to jumpstart your journey towards learning how to code. While a few weeks of learning might seem short compared to a college degree, this shorter time period can actually be highly advantageous. One of the main reasons is the tech world is an ever-evolving beast, so short courses mean the curriculum can always be kept up-to-date. That means you won’t be stuck learning boring, out-dated theory. As a way to upskill people fast, coding bootcamps also all centre around practical challenges and reversed learning. In non-fancy wording, they make you sit there, write a lot of code, and build tangible end-products. While this might sound like a steep challenge, all experts agree that this is really the only way to learn how to code. Bootcamps are designed to immerse you in an environment that replicates what it’s like to work on real-world projects (read our blog “3 reasons why you need to learn coding in an immersive environment). This means bootcamps generally produce students who are well-aligned with real-world expectations. The other advantage bootcamps have is a small mentor-to-student ratio. Everyone faces unique challenges in learning how to code; a concept you breezed through might be a colossal struggle for someone else, and vice-versa. That’s why having someone you can go to for help is not only immensely helpful, but is necessary to prevent you from stalling in progress and losing motivation, a phenomenon that’s all too common — it’s estimated only 15% of students complete online courses, with poor support and confusing instructions cited as major reasons for early dropouts. Another side of the argument opponents of bootcamps often miss out on is the purpose of learning code. The prevalence of web technologies in everything we do nowadays means an increasingly broader range of people will benefit from learning web development. Many people who are learning how to code often have no desire to become a developer. Graphics designers, digital marketers, project managers, even bloggers, are all quickly cottoning onto the fact that in order to stand out, you should at least have a basic proficiency in reading and writing code. This is where coding bootcamps shine. You don’t expect someone to undertake a multi-year computer science degree just to be able to work their way around an H T M L/ C S S document. By being able to choose your own bootcamp, and finding one that meets your own personal goals, you’ll be able get to where you want with no time wasted. How do you make the most out of a bootcamp? The question we’ve been answering throughout this blog post is: ‘ Do bootcamps work?’. But to get the best results, we challenge you to slightly modify the question to, ‘how do I make this bootcamp work for me?’ Before you sign-up, make sure you know what your goals are. Why do you want to learn how to code? Is it because you want to become a developer? Freelance? Just be able to read code and communicate with developers? Different bootcamps will cater for different levels, so have the right expectations before you go in. Like all education, bootcamps are what you make out of them. They’re all intensive, and designed to fill your brain to its limit every day. But having the information in your head is only the 1%. The rest of the 99% is where the journey really starts. Here are our tips on getting the most out of bootcamp journey. Make the most out of your mentors! Small mentor-to-student ratios means you’ll likely work with the same tutor(s) throughout the entirety of the bootcamp. Bootcamp mentors, unlike teachers, are professionals who work full-time in the field. That means they’ll have years of up-to-date, relevant experience. Make use out of it! Always ask questions, whether it be about code you don’t understand, or how to land a job. If you make it a mission to get to know them, you’ll make an invaluable connection (and even a friend!) Always bite off a bit more than you can chew When it comes to web-development jobs, we always advise people to take on something they’re not quite qualified for. Having to learn as you work is a great way to upskill fast. The same goes for bootcamps. Bootcamps are usually fast-paced, so there often isn’t a lot of time to rest on your laurels. However, always try set the bar high for yourself, and push yourself to meet these challenges. Learning how to code can be hard, but if you opt for the easiest paths, you definitely won’t learn as much, and you might even regret your experience Network, network, network Chances are your first piece of web development work will come through word-of-mouth, especially if you’re going down the freelance path. Open the net up wide and take any opportunity to make new friends! Who knows, you might pick up overflow work from a mentor, or pick up a job that your classmate didn’t want to take. Either way, more friends will never Take control of your own learning There might be a set curriculum and regular pre-planned classes, but don’t be fooled — much of what you learn in bootcamps is self-directed. Bootcamps generally employ a flipped-classroom learning model, where rather than getting all your information from one teacher, you are set challenges to complete, and mentors are there on the side-lines to help you as you progress. The challenges are often open-ended, so you can finish them however you see fit. Once you’ve finished a project, don’t stop there — create the next challenge to take on! It’s important to direct your own learning path, and complete these challenges in a way that meets your own goals. Tackle problems by yourself When you have a mentor there with you all the time, it’s easy to make a habit out of always going to them for help first. While this might sound like a good idea first, this could actually prohibit your progress. As we previously mentioned, the fastest way to learn is to direct your own learning path. The same applies when you encounter issues. Along your journey, you’re going to encounter issues you won’t have an immediate solution to. However, it’s important to get into the habit of self-diagnosing and Googling problems when you don’t understand them. Constantly Googling issues might not sound like what professionals might do, but it’s something that even the most experienced developers and programmers will readily agree to. So if ever in doubt, go hunt on the internet for it! The end of the bootcamp is only the beginning of the journey One of the toughest things about coding is the rapid rate at which learned knowledge is lost — just ask any developer. Stop coding for a week, and you’ll be surprised at how fast you’ll forget even the most basic things. Coding is something you just have to keep doing, especially after you’ve finished the bootcamp. Put together projects and challenges for yourself to keep working on in order to keep your skills sharp — don’t let all your work go to waste! As the demand for skilled developers continues to grow, there’s no doubt coding bootcamps are here to stay. In the end, it’s always important to do your research and choose a bootcamp that aligns with your goals. Bear in mind no matter how you choose to learn web development, your education will never be the be-all-and-end-all of your coding journey. The key is to take every opportunity that comes along your way to further your learning.","['Web Development', 'Web Development Bootcamps', 'Learning Web Development', 'Learning Coding', 'Coding Bootcamp']",https://medium.com/@instituteofcode/are-coding-bootcamps-a-scam-is-institute-of-code-a-scam-6f7d36bdea82,11,[],0,0,institute,Unknown,Unknown,Unknown
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 25 — (Last Day Before Final) – Mike Brave – Medium,2018-09-14 01:14:32,medium,"42 Piscine Day 25 — ( Last Day Before Final) Edit: This is part of a series that culminated here, Next post. Previous post. I’m an emotional mess, no good reason for it but there it is. Nearly teared up a few times, I think the stress mingled with other past emotions pushing them to the surface. The lab has been quieter than normal today, some people are still studying for the exam, but others I think are enjoying their last day here, spending time with friends, taking in the sunshine things like that. We’ve also been cleaning because if your room isn’t clean during the final you will be pulled out of the final to go back to your room to clean. I’ve basically packed up everything and given away whatever doesn’t fit in my bags. I also managed to have a chat with Jamie today, she is the resident Mom here. We talked about how our learning style here helps to prepare better candidates and how many of our cadets have gone on to big things, even recently. Some of the companies taking on interns were the biggest names in the business. She also strongly encourages us to volunteer at networking events instead of merely attending them, a brilliant strategy actually. Sometimes being an ambassador (volunteer guide) who shows around M V P’s will really help you to be prepared for technical interviews as well, as many of the executives who come to check out the school will ask those sort of questions ahead of time, often at a deeper level than a recruiter would, and even more often these are the sorts who are the bosses bosses. Really cool stuff, got me even more excited about the opportunity here. That said my confidence in my ability to pass the exam is small, I suppose we will find out after. The saying goes that fear and excitement are two sides of the same coin, well mine feels more like fear right now. At least I know what I need to work on next, overcoming that so I can continue to learn. Tomorrow I’ll update how the final went and how the B B Q was, then I’ll make a post mortem post about collective things learned, what the overall experience was and tips to prepare and get in. Until tomorrow.","['Startup', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-25-last-day-before-final-e75282e3266f,0,[],0,50,mike,M,0.003228654060934749,0.9967713459390652
Erin Levine,"Pretending to be an adult. Discussin' the ebb and flow of weight loss. Future #webdeveloper. Lifts heavy things. Hi, @ladygaga!",Week 4 of Coding Bootcamp: Group Projects and Endless Homework,2017-06-09 16:00:12,medium,"Week 4 of Coding Bootcamp: Group Projects and Endless Homework Here we are! Week 4! Too bad it feels like I’ve already spent an entire lifetime learning how to code. I wonder if I’ve taken any years off of my life. I guess we’ll find out down the line. This week was all about client-side storage, Firebase, and the beginning of our very first group project involving A P Is! At first, I was super excited to dabble with databases because my boyfriend is a Lead Database Administrator and the man deals with Oracle day in and day out. Imagine if I, too, were just as great with databases? Spoiler alert: I’m not. But I’m getting better! Our first homework assignment was due on Wednesday morning and I, of course, slaved over it while furiously typing code by the gleam of my laptop screen. Coinciding with last week’s class on A P Is, we had to implement the G I P H Y A P I on our own website, create dynamic buttons and pull the gifs from G I P H Y. On top of that, the gifs must be delivered in a still format and once the user clicks on the gifs, they magically become animated. Just like a story right out of Disney! I decided to go with the food theme. I was salivating the entire time, as you can guess. Always food. Always. I spent a bunch of time on this assignment and I’m pretty pleased with how it came out. In the end, I got an A+. Check it out here. We had another assignment due on Friday (and I even finished early! Aww, yeah!) that involved using Firebase to store information about a Train Schedule. Essentially, we created a schedule in Bootstrap and it would take input from users regarding Train Names, Train Destinations, First Train Time, and the Frequency of the trains. Feel free to play around with the database! But don’t add anything inappropriate or else I’ll be upset! Click over here! For the next few days, we’re going to be working on our first project. I’m delving into front end on this one, so it should be interesting! So far, it’s lookin’ pretty nice! We will be presenting next week! Week 4 down! Only 8 more to go! Originally published at www. exactlyerin. com on June 9, 2017.","['Firebase', 'Coding', 'Web Development', 'Codingbootcamp']",https://medium.com/@erinlevine_48138/week-4-of-coding-bootcamp-group-projects-and-endless-homework-63e82feec400,0,[],0,0,erin,F,0.9713346989397382,0.028665301060261786
William A. Mooney,Christ Centered Dev. || Developer || Blogger,6th Week — Vivixx Coding Bootcamp – William A. Mooney – Medium,2017-07-21 14:50:30,medium,"6th Week — Vivixx Coding Bootcamp Vivixx Academy Coding Bootcamp swag…. The first week of the 2nd Semester at Vivixx Academy Coding Bootcamp we started off by learning on Day 1: Trello which is a simple and powerful product management tool. We used it to create Kanban board’s which is a workflow visualization tool that enables you to optimize the flow of your work. Kanban Board in Trello for a Twitter Clone… We also were taught about Minimum Viable Product ( M V P) in product development, which is a product with just enough features to satisfy early customers, and to provide feedback for future development. It is a concept that many App’s adhere to. Toward’s the end of the day we were tasked with completing a Rails Blog project by following a guide. It was my first experience with Ruby on Rails but I enjoyed it. The Rails Blog from the guide with a few minimal adjustments via Bootstrap I ended up working on it for a few day’s as well as researching more into Rail’s. To the left you can see the main page for the Blog. It also allowed for comment creation and deletion within the articles. Check it out on my Github. Rail’s was unlike anything else I have done so far and the way it is organized is very cool. Around Day 4: we learned about scaffolding (a mean’s to automatically generate thing’s within Rails) and Devise Gem which is for Authentication and Registration of users. Afterward’s we were tasked to actually create the Twitter Clone we created a Kanban board for. We ended up working on this all the way until class was over on Friday, July 21st 2017. Below is a list of the work completed on my Twitter Clone project. Setup Git Hub Repository & Linked it to my project Content Added: A Nav Bar Bootstrap’s Grid System Authentication & User Accounts with Devise Dynamic Navigation Usernames via Devise Security features with Strong Parameters Fixed a bug due with the Profile page due to routing This was a lot of work but also very fun. I’ve still got more work to go but I intend to work on this project over the weekend and hopefully will have it completed before Monday. That wrap’s up another week at Vivixx Academy Coding Bootcamp for me. Please feel free to like and share this blog or contact me via Twitter. Christ Centered Dev. || Coding Bootcamp Student || Blogger","['Agile', 'Coding', 'Codingbootcamp', 'Web Development', 'Ruby on Rails']",https://medium.com/@williammooney/week-6-vivixx-coding-bootcamp-b0ea9034fd15,0,[],0,1,william,M,0.0038724765712618,0.9961275234287382
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),"My first app!! but first, a blogging refresh – My Coding Journey – Medium",2017-06-04 21:47:22,medium,"My first app!! but first, a blogging refresh Hey there again! So it’s been a while since I've last posted. We just completed our first full stack here at the Dojo and the last 5 weeks have been quite intense. We learned the Python stack plus 2 frameworks ( Flask and Django), took the belt exam ( I’m now a black belt in Python woohooo!!), worked on project week and I created an app. We’’ll talk about all of that, but first I want to recap. Last time I wrote, we were learning j Query, and needless to say, a lot has gone down since then. So what have we learned so far? Week 1: Web Fundamentals 1 - H T M L and C S S (along with the basics of Git and Git Hub). We then took the Belt Exam, (basically, recreate a webpage from an image). Week 2: Web Fundamentals 2 - Javascript, the D O M and D O M manipulation with j Query. We also worked on a few A P I projects and then learned how to call those A P I’s with A J A X. We learned the fundamentals of Responsive Web Dev and did some extra front end stuff. (j Query U I, a bit of Bootstrap…). ( Algorithms: Every morning in the program we start with white-boarding algorithms which get more advanced by the day. ( Last week we were doing linked-list algorithms). ) Week 3: Python 1 - Spent a few days learning the basic syntax and fundamentals of the language. Went on to learn about Object Oriented Programming and finally got introduced (at the end of the week) to our first web framework, Flask. Week 4: Python 2 - Our first taste of databases. Learned My S Q L basics, how to create visual representations of our models and how to write S Q L queries. We then learned how to incorporate databases into our Flask applications and build our first full stack app, The Wall (a message posting app). Finally, on Friday, we dipped our feet into Django and learned to modularize our code as well as what M V C frameworks are and how that equates to Django’s M T V structure. Week 5: Python 3 — We created Django apps all week, learned how to use object relational mapping ( O R M) and I opted to take the Python Belt Exam early (on Friday) so I would have time to work on a project the following week. The exam was to create a full stack Django application with specific requirements in 4. 5 hours and to deploy the application on A W S. ( I got 10/10 on the exam! So there’s that 😎) That takes us to Project week. Project week involves taking a popular web application and cloning it. ( Past projects have been versions of etsy, google drive etc. ) So at around 3pm on Friday afternoon, after all the “ Belters” finished their exams, instructor David began the selection process. Eventually the group settled on Zillow (the real estate website). It could be a great choice because if incorporates the google maps api in all sorts of ways. I had a small problem. I was going to miss 2 days of project week do to a Jewish holiday, so I wouldn't be able to be on a team for the Zillow project. I asked the instructors if I could do my own small app that would just take me a couple days and they agreed. So I was off to brainstorming, and “pooof” the “ Weather Mood Booster” app was born. More on that in the next post. See ya’ there.","['Web Development', 'Coding Dojo', 'Codingbootcamp', 'Coding', 'Web App Development']",https://medium.com/my-coding-dojo-experience/my-first-app-but-first-a-blogging-refresh-1fd29dc4f83c,0,[],0,1,leibel,Unknown,Unknown,Unknown
Nakuya Bridget,Life too short we haffi cherish it.,“Django girls made me a better girl” – Nakuya Bridget – Medium,2018-09-13 11:13:17,medium,"“ Django girls made me a better girl”“ They said the keyboard would unsex us”. I remember the day I got to the Django Girls opportunity, it was through one of my guy friends, he saw the message which was concerning girls, he said it was a very good opportunity but it was inviting girls only, l was like huh: really, he said “ Yeah, really, you should register” I wasn’t in the literal sense any good at programming/coding but you know , i always wanted to be good at it, even though I didn’t do anything about it and l thought it was really hard, only “ boy’s thing”. Well, since there was this opportunity for girls, involving programming , I didn’t know what to expect but oh well, l registered and after some time, l received a notification that l had got a place into the program, I was really psyched aboutthe news. The program took place every Saturday, at Outbox, Lumumba Avenue, between 10 am and 1 pm . The fact that it was on the weekend gave me a good chance to attend every class without conflicting with my classes at the University. So, i went for the first session, with just a laptop and ready to meet very old, bright men to show me how it’s done, Unfortunately, It were pretty young girls, Hahahaha, I thought it was a joke, because in my head “no girl could handle coding”, but I went through the first session, and if am asked how my first session was, I would say “ That day, i had a mental shift” and that’s about all i needed to be a better girl. To me seeing young girls/women teaching me programming and clearly knowing what they were doing with a good sense of leadership and a good way of delivering information, I already knew that “ Anyone could code” The amazing team of these girls taught us how to program in the Python Programming Language, and its platform Django. Because of the way they taught, with assignments and a lot of consistent help, pair programming , am proud to say l can now do something with Python and Django. Actually a lot. And not only did l get to learn how to program in Python, but i learnt how to work in groups, l learnt how stand up in front of a whole group of people to present my code, and am proud to say that am now one of those girls that spends hours on her computer “ Coding away”. All this, l give credit to the Django girls Program, I think every girl/ woman deserves a shot at it, it can surely change anyone for the better. Like i said at the start, “ They said the keyboard would unsex us”. I could not have got the meaning of this before my journey with the Django girls.","['Django', 'Girls', 'Coding', 'Codingbootcamp', 'Python']",https://medium.com/@bnakuya7/django-girls-made-me-a-better-girl-c867288c0ac2,0,[],0,2,nakuya,Unknown,Unknown,Unknown
William Elliott,"Software Engineer passionate about learning, building and ping pong.",Hello World! – William Elliott – Medium,2017-07-09 16:26:46,medium,"Hello World!image source My name is Will and I would like to share with you a glimpse of my journey into the wonderful world of programming. I first joined Codecademy on December 12th, 2015. At the time, I knew absolutely nothing about how to write code or where to even begin. I did, however, recognize the immense impact computer programming would continue to have on the future progress of business and technology. From that moment, a seed of curiosity had been firmly planted and began to take root. My background stems from public relations and philosophy. Yes, you read that correctly. Two disciplines that couldn’t be more unrelated. Maybe that makes me an oddball but I believe those two fields speak to concentrations in writing and logic, respectively. As is turns out, that’s a lot of what coding is all about — the formal structure of technical writing, or more specifically syntax, formed into logical statements to perform a function. As I continued to research and began learning, I quickly realized I had started what would become a life-long learning process. Where public relations seemed to lack the critical thinking that philosophy had provided and philosophy the real-world application, coding bridged the gap. With this discovery, I grew increasingly excited about the prospect of a truly engaging, challenging, and fulfilling career. Cue the ah-ha moment. I had a vision and a goal. I took to online tutorials, lessons, and classes teaching myself in my spare time. Somedays it was waking up early before the day started. Other days it was after a full day’s work. When it happened didn’t matter, as long as I found the time. I continued self-study for over a year. The only drawback to teaching yourself is only knowing what you know. Quora and Stack Overflow became quick friends for troubleshooting but I had no collaboration, no soundboard, no mentor. If I was going to take this career transition seriously, I needed an environment of like-minds to hone into and sharpen my skills. I spent months researching my options and determined the best course of action would be attending a coding bootcamp. I investigated every reputable name from San Francisco to New York City. I’m sure plenty of schools would have sufficed but after speaking to Digital Crafts, I knew that’s where I was meant to be. I had already started saving money and continued to do so for another six months after having spoken to their Atlanta campus director. Each day along that journey was a tally mark towards realizing my goal. Fast-forward to today and I am happily enrolled in Digital Crafts’ Full Stack Immersive program. As I am challenged each and everyday, I remember my self-taught path fondly. Everyone’s journey is different and this is only a glimpse into mine. My hope is that sharing this may be of use to someone. You are capable of anything you set your mind to — and follow through on. One of my favorite quotes comes from Bryce Courtenay, author of “ The Power of One”, when he writes, “ First with the head and then with the heart…” Now that I’ve introduced myself, I plan on sharing more tech-specific pieces about what I’m learning and working on in the wonderful world of programming. Until next time, Code on!","['Programming', 'Coding', 'Codingbootcamp', 'Inspiration', 'Learn To Code']",https://medium.com/@williamelliott_92702/hello-world-c36532c00158,2,[],0,28,william,M,0.0038724765712618,0.9961275234287382
Kalen Hammann,,"A New Beginning, Part 7 – Kalen Hammann – Medium",2017-07-17 16:06:57,medium,"A New Beginning, Part 7 Y O U R D E A L To solve Blur 1 I had to start learning about Object Oriented Programming: how to take a complex challenge and break it into small parts, then solve each of the parts. The example we worked with was a simple card game. First, we created a class called “ Card” and made it work. Then a class called “ Deck” made up of a bunch of cards. Then we learned how to shuffle the deck, how to deal a card, etc. This was fun again! With Ken’s encouragement, I even went beyond the assignment to create a full 52-card deck. Then it was back to Blur1, trying to solve the problem about arrays. I started making progress, but something still wasn’t working. For now, I seemed to be stuck. But I also had to keep working on Nomster. And just when I started to feel comfortable following the step by step instructions, they threw me a curve ball. I had to figure out how to add pagination to my app — with N O step-by-step instructions! I began to feel like a juggler with more balls in the air than I had hands. W E E K T H R E E: G O O G L E I S M Y F R I E N D. ( S O I S “ S T A C K O V E R F L O W. ”) To get pagination to work in my Nomster App, I fell back on something I’d heard during the pre-course work: “ When we know what we want ruby to do but we don’t know how, the best approach is usually to formulate a google search and see if someone else has solved a similar problem. ” When I searched Google for “pagination ruby” I was led to a wonderful site called “ Stack Overflow, ” where experienced folks ask questions to help each other (and newbies like me) to get things done. I discovered a couple of methods for adding pagination. After reading the comments about each, I decided to use the one that sounded simpler: one that involved a Ruby Gem called Kaminari. H O O R A Y F O R R U B Y G E M S! Ruby Gems, it turns out, are one of the main reasons that the Ruby programming language makes developers happy. A Ruby Gem is a mini-program that does an amazing amount of the heavy lifting to do something a web developer will have to do over and over in different applications, so the developer won’t have to write that same code over and over and over. Things like adding complex formatting to a document. Or adding an input form to a document so users can interact easily with the app. Or adding pagination. And using a Ruby Gem is amazingly simple. All it takes to use a Ruby Gem is to add a single line to a file called, amazingly enough, “gemfile. rb” and then running “bundle install” in the terminal to install the gem. Sometimes there are a couple of steps to configure the gem and voila! A whole new funcionality has been added to the app. I followed the bouncing ball, added Kaminari, and poof! — pages appeared in my app. But I couldn’t get part of the header to accept a new font even though I thought I was using C S S just right. And I still couldn’t figure out how to make Blur1 work exactly the way it was supposed to. Since both of these were outside the scope of the step-by-step instructions I was getting for Nomster, and since google searches didn’t seem to help, I only saw one option: ask my mentor. Fortunately my second meeting with Kevin was coming up. ( More to come… click here!)","['Programming', 'Startup Lessons', 'Careers', 'Coding', 'Codingbootcamp']",https://medium.com/@kalen7/a-surprising-career-change-part-6-54a454d24045,0,[],0,2,kalen,M,0.2631194002559883,0.7368805997440117
Joe Andy,Fullstack Web Developer interested in learning from anyone and everyone. Open to new ideas and efficient solutions.,My Journey to Web Development – Joe Andy – Medium,2018-05-12 21:28:34,medium,"Photo by Matt Howard on Unsplash My Journey to Web Development Web development was never a thought of mine while growing up. I actually only stumbled across it after I was given an assignment to research a field of engineering in my C A D class the last month of high school. All I did was research the ‘fasted growing field of engineering’. I could not tell you what the job required or the what the top 10 schools were in the country. All I knew was that I had a passion for math and a love for technology. So, when registration for college classes came around, you bet I signed up for Software Engineering. After three semesters at a community college and only one class that pertained to my degree, it wasn’t long until I realized that the college experience wasn’t moving as fast as I would have liked. I needed to bootstrap my career in coding A S A P. I dropped the distraction of college at the time and quickly began teaching myself basic H T M L, C S S, and Javascript. Seeing how my code had a direct effect on a web page was enough to empower me to pursue web development at a faster pace. I knew I could eventually hone my skills to land a job in such a fast growing field of technology! According to the Bureau of Labor Statistics:“ Employment of web developers is projected to grow 15 percent from 2016 to 2026, much faster than the average for all occupations. “ After a few months of teaching myself and seeking out coding bootcamps to upstart my career, I soon discovered Dev Mountain in Dallas, T X. I have been here for 9 weeks so far and only have 4 more to go. After rigorous training and repetition, I have successfully built my first full stack web application. Although it is still a work in progress, I am blown away at what I have accomplished in such a short period of time. It is amazing how much you can stretch your abilities when you are surrounded around peers that have the same passion for web development as much as you do. I have had the opportunity to learn more in these past couple months than I did the year prior on my own. I am excited to take the skills that I have learned here and build on top of them in a career that I love. You’ll know soon enough if you enjoy what you do, if you kick your sheets off in the morning ready to start the day.","['Programming', 'Codingbootcamp', 'Coding', 'Web Development', 'Software Development']",https://medium.com/@josephiznot/my-journey-to-web-development-f8d69e7c8f7e,5,[],0,3,joe,M,0.02449475112475898,0.975505248875241
Alexa Moy,Software engineer in training,How Adopting a Cat and Learning to Code Changed My Life,2018-05-02 04:13:28,medium,"How Adopting a Cat and Learning to Code Changed My Life Less than eight months ago (and three months after earning an undergraduate degree in Economics) I made two life altering choices as you can guess from the title. I adopted my kitten and I decided to take some local community college courses for computer science. At the time I was just looking for something to do to stay productive while on the job hunt for a position in finance. I went through interview after interview with no luck but deep down I had a feeling a big part of my struggle came from my inability to go in and pretend like I was passionate about something that I honestly had little interest in. I felt like I was at a crossroad and as a very anxious person, I had to deal with the anxiety that came with not knowing what my future looked liked. Meanwhile I was learning basic Java in one of my classes which felt like pretty dry material at the time because of how slow and dragged out the curriculum was. Despite this, I still enjoyed the labs I had where I wrote simple code and keeping myself preoccupied helped a lot for my mental health. Isn’t she precious It was around this time that I started going to local animal shelters to look at kittens but I wasn’t serious about getting one until the the adoption fee was half-priced for the month of October because the shelter was getting a large influx of kittens so they needed to make space. I wasn’t sure if I could take on the responsibility of a pet since I never had one growing up but the more I visited the shelter and did research, the more I felt like I was ready. So on October 29th, 2017, I adopted a 3-month-old medium-haired calico and renamed her Cheeto. I didn’t realize how much of an impact she would have on me but she has been with me for the entirety of my coding journey. She became the support I needed to make the leap and change my path. After some research I found the Grace Hopper Program, a 13 week immersive coding bootcamp at Fullstack Academy in New York. This is the part where I tell you that I suddenly fell in love with coding and decided to pursue my dream of becoming a software engineer at a big prestigious firm like Google, but it wasn’t that simple ( If anyone from Google is reading this, I would really love a job, thanks). For as long as I could remember I always lacked the confidence I needed to really excel at something. From soccer to piano to my short-lived interest in graphic design, I never felt good enough and would keep myself from putting in a little extra effort to be great. I was always average, at least in my eyes, and I would talk myself down and compare myself to those who were better than me so naturally I had some reservations about doing a 180 to programming. I was intimidated by the whole field and coming from almost no experience or exposure put me behind everyone else coming out of college with a degree in computer science. Finally I decided to make the leap (as you already know) and went through the online Bootcamp Prep provided by the program that taught Javascript basics before later applying/interviewing and eventually being offered a spot in the February cohort for the Grace Hopper Program. Let me just tell you now, the online foundations portion of the program that is required for the three weeks leading up to the immersive portion caught me off guard. My confidence was definitely taking a hit and it set me up for a very nerve-racking first week of Junior phase. In the six weeks of Junior phase, Grace Hopper went from this scary fast-paced bootcamp to my second home full of friendships I never imagined having ( I cringed writing that but it’s true). I learned how incredible and welcoming the tech community is both within Fullstack Academy and outside. I found comfort out of one of the most stressful and uncomfortable positions and realized that I finally found the passion I was lacking for so many years. I did more than just get by during Junior phase, I killed it and not a single mental breakdown or tear was shed (special shoutout to Cheeto for being there after all the 10–14 hour days). By the end of the 6 weeks, I was able to create a full stack single page application all on my own using Javscript, Node, Express, Sequelize, and React- Redux (still with a distaste for C S S that I don’t see going away any time soon). And with that, I comfortably move on to Senior phase and so far so good. Stay tuned for my next post where I fought my first big monster that is React Native, and won… well sort of.","['Codingbootcamp', 'Programming', 'Career Paths', 'Learning To Code']",https://medium.com/@alexamoy/how-adopting-a-cat-and-learning-to-code-changed-my-life-2602aa7a155e,5,['Fullstack Academy'],1,140,alexa,F,0.9978460888224202,0.002153911177579817
Natasha Robarge,Software Consultant | Tech Enthusiast | Fitness Enthusiast | Crypto Enthusiast | Undergraduate College Student | Life-Long Learner | Aquarius | INTP,Why Should You Start Your Career at a Coding Bootcamp before College,2017-10-04 16:17:04,medium,"Why Should You Start Your Career at a Coding Bootcamp before College From networking after class, to volunteering for events, and having confusion during class over topics, I would say that the life of a coding bootcamp student is a unique one. We learn topics quickly, and we never get in full depth on each topic we learn. So, what exactly makes coding bootcamps stand out to people and why would you want to do one before starting college? Let’s consider how classes are typically taught. You have lecture for about an hour and a half, to finally receive an assignment. However, after leaving college, how do you put the skills and theory you’ve studied into real life situations? For computer science majors, typically classes consist of theory, and some programming assignments. Typically, it’s mostly theory. A coding bootcamp teaches you how you can use the skills you’ve learned in a real life situation because not only are you handling stress from getting everything ready, but you’re also preparing for the stress that comes along with the industry depending on where you choose to grow. You also learn more about pair programming, and how important communication is when trying to get your foot in the door for a job. Although you may not know where Java Script originally came from, or you may not be the best S A S S( Syntactically Awesome Style Sheets) programmer out there, from a coding bootcamp’s perspective, you now hopefully have the logic behind programming down. Coding bootcamps are great for getting into the industry, learning from industry professionals, and improving on your technical skills before learning all the theory or mathematics behind programming. College is important. The struggle for some students is that they either have good instructors, or they have instructors who confuse them. College is great for learning theory, and improving communication skills when it comes down to a computer science degree. So in my perspective, I find that if you get your foot in the door first and learn the technical skills necessary, it makes the theory easier to learn. I also feel that it would help you get to a senior developer position quicker by studying technical skills while studying theory so if you come across having to create a database at work, and already know the theory, you can put the two together. This might make things easier than having one experience over the other. As an aspiring developer, I find that being passionate, determined, having an open mindset to change, and taking all the experience you obtain as something you can learn from, you’ll be set as a developer. Have a dream, and chase it.","['Programming', 'College', 'Codingbootcamp', 'Coding', 'Learning']",https://medium.com/@natasharobarge/why-should-you-start-your-career-at-a-coding-bootcamp-before-college-89565060c2c,4,[],0,1,natasha,F,0.9970190155429576,0.002980984457042445
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Chingu Weekly Vol. 56 – Chingu – Medium,2018-04-02 14:13:45,medium,"Chingu Weekly Vol. 56 My goodness! So many people got developer jobs this past week!!@maira’s game! News & Opportunities( Note: all the people below who got jobs have been named at least once as being super helpful, industrious, etc. by a team-mate in the Chingu weekly-check-in. Coincidence? I think not. )🎉 Congratulations La Quita for getting a developer last week!!!🎉 Congratulations Jesus Guerrero for getting the developer job!!!🎉 Congratulations @misomighty for getting your first developer job this week!🎉 Congratulations @marcel for getting your new job as a Graphic Designer/ Web- Developer!🎉 Congratulations Maira for achieving the full Google sponsorship of your Web Dev nanodegree!!🎉 Congratulations @javilag for getting a job as a front-end dev!!🎉 Congratulations @mar-bi for starting your new journey as a freelance developer and getting 2 projects!!🎉 Congratulations @freesgem for starting the new job this week! Cheers to these industrious & helpful developers! On the weekly check-ins there is a question that asks: Is there anyone on your team who has been super helpful, kind, hard-working, etc. and deserves a shout-out? Here’s the list of the people who got a shout-out (or 3) last week 👇@freesgen, @ Caleb Cox, @tmattlee, Jemimah O. , Tiffany, lady V, Veredrec, @ Rodiel Martinez, tasesmuemils, @javilag, @veronica, Lazycesar, nik, ziggysauce, Our P M @briahna — she has taken charge and helped with our git workflow, Designbyinna, @rinat, @blarz Hernandez team leader works all day and still seem to find the time to always be answering my question, and English is not even his native language!!!, @heyjp has been very productive and is the main reason we’re on target, Luoto, Ana Veiga, rajpranz, Matthew- Burfield, My teammates and project manager are super helpful, jessie, Jessica (@ J Hart6), every team member, Dereje, adeen, Jordanleo7 is always a stellar team member. Despite our group taking a week off he’s been active, patient, and coding!, Misomighty, Swoozeki, Meeetch, Yassine Shout-outs & Showcases🔥 Here is an awesome project M O D M E M E S by the ever industrious Van Tabbert!🔥 Have a look at this awesome Memory Card game by Maira!🔥 Check out this groovy Pixel Art Maker by Jim Medlock!🔥@adeen made a random quote app from the Star Wars prequel movies! You can see it here!🔥@shilpiverma509 built this Pomodoro Timer!🔥 Check out @erol’s Random quote machine app!🔥 @ Jon is back at it again with another project this week! Overheard in Chingu Completed our sprints, finished error handling , working on learning more react Dived and learned about authentication with Mongo and passport! I wrote a React component and it looks amazing! Our team is progressing really well and our plan is to have an M V P ready by the end of the week! Then we will start building additional features. Pair programmed and banged out the frontend for the ‘about page’ of our app Completed our sprints :) Chingu of the Week This week the honors go to Jordan aka @misomighty! Not only did she just get her first developer job, but she has been a long time member who has absolutely epitomized the power and importance of perseverance and being a great team-mate! She’s the kind of person who finishes a cohort and asks, “how could I have been a better team-mate? What can I do next time to create a better learning environment for my team-mates?” This mindset is both an inspiration to our community, and will no doubt facilitate a lot of success for herself and whoever is lucky enough to work with her throughout her career! We’re so lucky to have people like @misomighty involved in Chingu!!","['Web Development', 'Chingu', 'Freecodecamp', 'Codingbootcamp', 'React']",https://medium.com/chingu/chingu-weekly-vol-56-5ffe140ba06e,1,[],0,333,chance,M,0.024461428631419813,0.9755385713685801
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,11 Tips for the start of a Chingu Voyage & your team launch,2018-06-05 07:58:35,medium,"11 Tips for the start of a Chingu Voyage & your team launch Aka how to get the most out of your learning adventure Photo by John Matychuk on Unsplash Start of the Voyage: The first week is just for getting everyone in the Voyage, getting to know each other, and going over the prep material. For new people it can be a big transition so we take it slowly to make sure everyone has time to acclimatize and get ready. 1 — Say hi in #community-chat & Read #announcements (always read announcements)2 — Get comfortable with the communication application we use (often slack)3 — Write your intro in the #intros-your-story channel4— Drop your favorite resource in the #resource-treasures channel5 — Read the Prep doc (will be posted in #announcements in the next few days) Tips for the Team launch: Prelude — Show up when the teams are launched. The first week of a team project is absolutely crucial. You want to be communicating as much as possible and build momentum as soon as you can. The faster your team can get up and running, the higher likelihood the project can be completed. A mistake I sometimes see people make is they aren’t active in the first week and then later wonder why their team isn’t active in the 4th week. The first week is crucial. 1 — Bring energy and enthusiasm to the team with your first message Your first message to your team should: Transfer Excitement and/or Enthusiasm for working with your team-mates on a project. Why? Because we can’t help but react to signals, good or bad. If people come in excited and with enthusiasm, that signals to others that this is something worth working on and builds momentum. If people come in with neutral language, it does the opposite. Compare:“ Hey everyone! Can’t wait to get started and excited to build something awesome with you!! 🚀 🔥 https://giphy. com/gifs/thisisgiphy-reaction-audience-l0 K4m0mzk J D A Idh H W”with“hi” What message do you think will build more momentum, energize others, and increase the likelihood of the project finishing? This may sound silly but team dynamics and momentum is incredibly important. Of course, we all have different personalities and some may be more relaxed with this sort of thing. That’s completely fine, feel free to use your own style (or even copy and paste what I wrote above), but keep the above principle in mind. 2 — Understand this important reality about people and know that you have to continuously “activate” your team-mates I know what you’re thinking: what the ?%$! does that mean? Enter Ray Dalio, founder of Bridgewater Associates and the 83rd wealthiest human on Earth, who says one of the greatest insights he’s found as an employer is what he calls the “two yous” that wrestle inside everyone. The overarching challenge is people’s two thems, in other words think about it in this way: there are two yous inside you. There is the thoughtful you, prefrontal cortex type of thoughtful you. Then there’s the subliminal emotional you, and you’re not aware of the subliminal emotional you. There are those two yous and they’re often at odds. The classic example would be, of course, where you did something that you didn’t want to do. You ate the cake that you didn’t want to eat. What we’ve observed at Bridgewater on a constant basis is that the emotional subliminal them often can be in control of their more thoughtful them. That’s the battle that almost everybody all the time is doing. — Ray Dalio To bring this to the Chingu context, the more thoughtful, prefrontal cortex you is the one who wants to reach your goals and applied to Chingu. This you also went through the various forms [*cough cough filters*] we’ve sent and signed your name to Chingu’s Accountability Pledge. Before joining a cohort, all members have continuously asserted that they will be a dependable team-mate who will persevere regardless of the inevitable roadblocks. Yet people still go inactive. People still eat the cake they didn’t want to eat. We all experience times when we fail to reach a goal we wanted. That’s what the two yous mean. It’s a reality we all share and you have to contend with in your own life, in Chingu teams, as well as all teams throughout your life. How can I make this insight actionable? Recognize this reality, empathize with your team-mates (and yourself) when these battles happen, and know that despite setbacks, if you take ownership and utilize grit, you will succeed. 2 — Expect less, Do more. Finishing Act 1 is hard. Strangers have to come together, get to know each other and get a remote project going. Many teams will underestimate this and they won’t make it to Act 2. Don’t be that team. Do not make the mistake of expecting your team-mates to be fully engaged (see above #2). Everyone has their own lives and unique circumstances — some people will be working 2 jobs, some people will have emergencies come up, a lot of people will get jobs. The questions you should have going into any team project is: “ How can I activate and energize my team-mates? How can I keep them activated every week?” If everyone takes responsibility for their team getting started the team will have a good chance of getting started and finishing. 3 — Send your team-mates a Direct Message and build rapport right away Get to know your team-mates on an individual basis. You get to meet a new friend, but also it strengthens your team and reduces the risk of dropouts. Also, if they don’t reply after 3 days please make a ticket. 4 — Avoid asking general questions to no one in particular in your team-chat. Talk to people specifically by using @username when asking questions. If you ask things like “ What do you all want to work on?” it’s possible no one will reply. Instead ask: “ Hey @username1 @username2, can you give 2 ideas of something you’d like to work on? Then we can decide together from there. :)”5 — Utilize soft skills. I recommend reading over these soft skills principles every day during the course of this Voyage. If you learn to use these principles in your social interactions with others, you will be much more effective. Since Chingu started, we’ve launched around 1000 teams with thousands of tech-learners and 95% of all issues we’ve seen fall into one of two buckets. 1 — Soft skills issue-related2 — Member inactive (which is sometimes soft skills issue-related) Here are 30 Principles that’ll level up your Soft Skills.","['Startup', 'Chingu', 'Codingbootcamp', 'Soft Skills', 'Freecodecamp']",https://medium.com/chingu/11-tips-for-the-start-of-a-chingu-voyage-your-team-launch-20f5d1ade494,0,[],0,268,chance,M,0.024461428631419813,0.9755385713685801
Manuel Grullon,,A Bootcamper’s Guide to the Technical Interview – Manuel Grullon – Medium,2018-05-17 14:06:11,medium,"A Bootcamper’s Guide to the Technical Interview Disclaimer: I am not a career coach, nor have I been employed by a tech company. A lot of this is going to be regurgitation of advice I’ve found in podcasts, from developer friends, from books, from alumni, etc. I am myself, a bootcamp student at the Flatiron School quickly approaching graduation, and I thought it would be a good idea to gather some of the resources I’ve been exposed to and what I think is a good battle plan for a bootcamper to approach the technical aspect of an interview. Why do companies ask technical questions in interviews? Something I’ve heard from friends who work in development roles, and from online sources is that the kind of work they do on a day to day basis generally does not involve tricky algorithms and gotcha’s. I’ve also read that technical interviews are not perfect when it comes to predicting job performance. So why do we go through this gauntlet? The basic idea is that these hard, grueling questions are valuable because they put candidates in a tough spot. They make you stressed, they challenge you, and they reveal a lot about you and how you handle uncomfortable situations. The information being tested is at least tangentially related to the work you’ll be expected to do, but the real value comes in seeing how you explain your work, how you organize your code, how you get over walls, how you communicate under stress, etc. I don’t know how to do any of these problems, should I be grinding them right now!? If you’re in my position, 6 weeks from graduation, 2 major projects left, I would say that now is a good time to start learning and getting into the habit of doing technical problems, but it shouldn’t be your focus yet. Your focus should be on building awesome stuff and cementing the knowledge the bootcamp has armed you with, because your projects are going to go a long way in demonstrating your practical skills. Before attending Flatiron School, I tried to interview armed primarily with knowledge of algorithms and data structures, and I did fairly well on the technical sides of interviews, but I floundered when it came to being able to show projects and real world experience. I worked mostly alone on stuff so when asked about difficulties encountered when working in a team, I had almost nothing to go by. Technical coding challenges are a big part of these kinds of interviews, but they’re definitely not the whole thing. Three things you should have ready for the technical side of an interview You should know some data structures, you should know some algorithms, and you should be able to demonstrate knowledge of both on paper. It’s debated which algorithms and which data structures you should know, you should know about trees, linked lists, binary search, and some sorting algorithms, but none of that knowledge matters if you can’t implement them on a whiteboard. I think this is an especially big concern for bootcamp students, because we spend so much time learning with multiple tabs of google and stack overflow open, ready to try and find out or even remember how to solve problems as soon as we encounter them. Writing code on a whiteboard is a whole other beast. You need to be organized, you need to take time into consideration, you need to talk out-loud, you need to be comfortable in a naturally uncomfortable situation. I can’t stress enough that, as you approach your interviews, you should practice solving questions without turning to google when you get stuck. Good starting points I believe that the next few resources are a great starting point for boot camp students who are graduating soon or recently graduating and beginning to prepare for job interviews Leetcode. com There are a lot of sites like Leetcode. com but it is the one I personally use the most. It is a great resource because it’s very similar to what we’ve been doing as bootcamp students. You write some code and run it and see if you passed the tests or not. It also lets you search for questions based on content, so if you think you finally got binary search down, you can search for questions that test binary search knowledge. Sign up is free, and they have a premium service that offers things like mock interviews that are supposed to challenge you with the kinds of questions specific companies would ask. Start slow, maybe 1–3 easy questions a week until you graduate, then start tackling medium questions, then start tackling the topics that trip you up. Try to introduce time limits and try not to Google or jump to hints. The Impostor’s Handbook This one was actually brought to my attention by a fellow student Adam Towers. It is an ebook with accompanying videos written by someone who is a developer without a background in C S. I haven’t been through the whole thing yet, but it seems to cover a lot of what I would consider the important algorithms, data structures, and vocabulary you would be expected to know in an interview. Not free but it does seem to be a good resource. More Advanced Resources I don’t consider the following resources great starting points, I would start to use these after doing a lot of leetcode problems and feeling comfortable being able to write most of the essential data structures and algorithms from scratch on a white board. Interview Cake. com Access to the full site is expensive, and the questions are V E R Y difficult. Having said that, I haven’t found another site that breaks down these difficult problems in such detail. I highly recommend that you sign up for the free weekly questions immediately, even if you don’t look at them right away, so that a month or two from now you’ll have 5–10 hard, detailed problems to wrap your brain around. Pramp. com Pramp, short for Practice Makes Perfect, offers a very unique mock interviewing experience. You are sent a technical interview question, which you study and learn, and then you take that question and ask it to someone else, and then they ask you the question they were given to prepare. I plan to do a lot of mock interviews with my classmates as I look for a job, but I also plan to use Pramp a lot as well. I love my classmates, but being Pramp is great for two reasons. One, you are paired with a stranger, and that uncomfortableness is important. When you interview for a job, 99% of the time you’re interviewing with a stranger, so you should be used to talking to a stranger about code. The other thing is that you’ll be exposed to more people, and you’ll see people who are really good at interviewing and people who aren’t, and how the flow of an interview can be disrupted by incoherent speech and negative body gestures. People will freeze up, and you’ll see what that feels like for your interviewer and why you should avoid freezing up. They give you a bunch of free interviews, I recommend you at least try it. There’s countless other resources you can look into, and a lot of it depends on what kind of learner you are. If you’re a visual learner, you can look into Youtube and other sites. If you’re an academic learner, there are plenty of wonderful textbooks on algorithms and design you can look into. If you’re better with your words than with technical savvy, there’s plenty of stories online in sites like Quora and Reddit on how people navigate these sorts of interviews when they felt their algorithm knowledge was on the weaker side. I feel like the above 4 are a good starting point that should be good for most people.","['Interview', 'Flatiron School', 'Technical Interview', 'Bootcamp', 'Codingbootcamp']",https://medium.com/@astermanuelg/a-bootcampers-guide-to-the-technical-interview-41bc0964e9d6,2,['Flatiron School'],1,33,manuel,M,0.006254203823038035,0.993745796176962
Chris Lee,,Can a 10–12 Week Coding Bootcamp Turn You Into a Full-Stack Web Developer?,2018-08-11 21:40:33,medium,"Can a 10–12 Week Coding Bootcamp Turn You Into a Full- Stack Web Developer? Maybe, but Results Will Vary Greatly Photo by Tim Gouw on Unsplash A 10–12 week program can give you enough knowledge to get oriented on the path to success, but actually charting and traversing that path is ultimately up to you. In short, maybe — but probably not if you define “full-stack developer” the way most of the industry does. Despite the marketing materials that some of the bootcamps use, most are really not designed to make you into a “full-stack developer”. And how could they be? Mastering all of the skills that a full-stack developer needs is a process that requires consistent and sustained practice over time. 10–12 weeks simply isn’t long enough. The good bootcamps know this and therefore actively work to help you set the right expectations. A 10–12 week program can give you enough knowledge to get oriented on the path to success, but actually charting and traversing that path is ultimately up to you. Let’s try to flesh this out a bit. First, what is a “full-stack developer”? By most industry standards, a full-stack developer is someone who has a thorough understanding of all the elements of a web application. This means that they can design and implement a data store, write the server-side business logic, and code the client-side interface and view layer. The fact that there are roles in the software industry that focus exclusively on just one of those elements should tell you something about the difficulty of mastering all three. Good software may look simple from the outside, but that often belies the true complexity that lurks just outside of view. A full-stack developer is expected to have both the fundamental and domain-specific knowledge necessary to tackle challenges all across the application. This isn’t an easy goal to reach. There are plenty of success stories about bootcamp graduates who go on to get jobs as software developers after just 10 or 12 weeks, but it’s worth posing a few questions about what it takes to become one of those success stories yourself: What is your end goal? If your goal is simply to get a job in the software industry then a 10–12 week crash course might be enough. There is however a difference between a job and a top job. Full-stack developers spend thousands of hours mastering their craft because they value the opportunity to do interesting and challenging work. In general, this is not the kind of work that you can get without having already mastered fundamental skills. And mastery is difficult to achieve in the short-burst of intensity employed at most bootcamps. What is your learning style? Some learners thrive in environments of high intensity, but it doesn’t work for everyone. If you come from a technical background and are predisposed to an engineer’s mindset, then a 10–12 week bootcamp might be enough to set you on the right path. But learning to think and solve problems in a structured fashion takes time. You can learn this skill, but without the flexibility to explore problems to depth, and to absorb their nuances, it’s easy to get overwhelmed quickly. What are your expectations? The marketing literature for bootcamps is full of lofty promises to make you a “full-stack developer” in just a few months, but the truth is that the people who are most successful in these programs are the ones who have the right expectations from the start. If you treat a bootcamp of this length as a catalyst, meant only to kick-start a much longer learning journey, then you are starting from the right place. Mastering your craft is going to be a long process and the learning shouldn’t stop the day bootcamp ends. To the contrary, you’re going to have to double down on your studying when you graduate and commit to a much longer path. The high-intensity, short period of study model puts the onus for success on the learner rather than on the process. In truth, I think that our industry has done itself a bit of a disservice by adopting the high-intensity, short period of study framework as the dominant model for education. This model puts the onus for success on the learner rather than on the process. You can get a job as a programmer after 10–12 weeks of training, but whether that job leads to a long and fruitful career is another question entirely. Acquiring, retaining, and mastering new skills requires time, and more importantly, it requires the flexibility to stick with a topic until you thoroughly understand it. Mastery Over Time I think that 10–12 weeks is enough time for some learners to get on the path to becoming a full-stack developer, but only if they approach that time as a jumpstart rather than as a “complete” education. Some learners can do this, but it won’t work for everyone. This is why I have long been a proponent of mastery-based learning, where the burden for success falls on the process, not the individual. This approach to education leaves learners free to explore topics in depth and move on only when they are ready. All of this is a long way of coming back to the beginning of my answer: 10–12 weeks is maybe enough time to become a full-stack developer, but outcomes will vary greatly from learner to learner. This article was original published as an answer to a question on Quora, but is re-posted here for Medium readers who have the same question. If you enjoyed reading this article, please upvote my answer on Quora.","['Programming', 'Learning To Code', 'Codingbootcamp', 'How To Study', 'Launch School']",https://medium.com/launch-school/can-a-10-12-week-coding-bootcamp-turn-you-into-a-full-stack-web-developer-7d6470522741,4,[],0,461,chris,M,0.13713656176653735,0.8628634382334627
Garima Batra,"Full-Stack Software Developer Interested in Mission-Driven Start-Ups, Questions? Email me @ gbatra17@gmail.com",How I got into Hack Reactor (Summer 2017) aka My journey to join a coding bootcamp,2017-07-04 15:28:23,medium,"How I got into Hack Reactor ( Summer 2017) aka My journey to join a coding bootcamp The sob story and motivation On March 15th, I heard back from one of my last graduate schools that I applied for for Human- Computer Interaction. It was a rejection. While at first, I was completely devastated, the feedback I got back from the schools was straightforward enough: I simply didn’t have enough work experience to substantiate my interest in a career change (coming from a architecture/sales background). What was my next step? Get a foot in the door, in the quickest way possible. Insert: Hack Reactor. For the unfamiliar: Hack Reactor is considered one of the premiere coding bootcamps in the world that takes in 3% of its candidates and teaches them how to become full-stack Javascript developers in a sheer three months. Sounds something you would be skeptical of, right? I was in the same shoes, and still am, despite being a day away from joining the July 3rd cohort. But what made me join the H R family and shell out a fortune? While I haven’t gone through the program yet, my journey to joining Hack Reactor has been fraught with ups and downs but with an eventual epiphany. As an Indian citizen without work eligibility in the U S, I wasn’t left with many scholarship options when applying to the plethora of coding bootcamps out there. My main categories of selection were: the curriculum ( I wanted Javascript because it’s most widely known internationally), the scholarships available for minorities, and the support of the staff. Other extraneous factors included reputation, placement statistics (although I was highly skeptical of these — yet Hack Reactor was the only one that alleviated my concerns with their extremely detailed published reports) and the calibre of the portfolio projects. I eventually looked into Flat Iron School, General Assembly, Coding Dojo, Viking Code School, Hack Bright and Hack Reactor. The filtering process was straight-forward enough: General Assembly didn’t match my calibre, Flat Iron, Coding Dojo and Hack Bright taught too many languages and I wanted to get in-depth with one. So it was between Viking Code School and Hack Reactor. I looked at the free prep material for Viking Code School and was incredibly impressed with the wide range of information they gave on computer science topics (for anyone applying for bootcamps, I’d highly encourage you to look at this material!). But what won me over was Hack Reactor’s S S P ( Structured Study Program) — a one-month long remote experience that involved going over Hack Reactor’s free prep material with over 100 toy problems and their pre-course material. While I had gone through the prep material once before, it wasn’t until I began pair programming (a basic tenet of Hack Reactor) everyday that I actually solidified my understanding. The one-month schedule involved 3-hour long pair-program “sprints” with a partner everyday, 6x a week. The one month of S S P ended in June 26th — and I was accepted into the July 3rd cohort shortly after. For those on the same boat and with the same intentions of learning a language like Java Script (which despite it’s weirdness is one I’ve fallen in love with), I would offer the following words of advice: D O N’ T read J S books. When you’re just beginning to program, the feedback process of writing and running your own code is like a drug. The sooner you get into the habit of coding often, the quicker you will internalize J S concepts. Frankly put, reading !== coding. In the first month of my studies, I didn’t follow the above advice and instead fell into the endless cycle of reading about Javascript through resources like You Don’t Know J S, Eloquent J S and Speaking J S. All these resources are just too theoretical to begin with and will probably fly over your head (or at least they did over mine) if you are a *total noob* (if you aren’t then go ahead and use them to supplement your understanding!). So… I present you the *practical way* (imho). ( Disclaimer: I used these resources thoroughly to get into a coding bootcamp, and N O T to get a job so please don’t assume it’s the path if you’re trying to get a job *quickly*, that said many have used these resources to get them there) The Resources0. Because I’m a geek, I’m going to start with index 0 and because this is the absolute fundamental of starting to code at all. Y O U N E E D T O R E G I S T E R T O G I T H U B. I R E P E A T: L E A R N G I T A S A P. When I first read this tip on other blog posts, I was overwhelmed with all the new programming lingo, and assumed Git was another to add in a long list of terms I just *didn’t understand*. I simply didn’t get with it and so I completely skipped Git till 3 months into my journey. I often think about how much more I would have to show off on my Git Hub had I used it as a motivator. So what is Git Hub? Git Hub is your coding portfolio — it’s what recruiters and future employers will look at to see your projects. In simple English, it’s what people use to upload their code into. Folders are called repositories with basic “landing pages” called Read Me’s (the instructions to navigate through your many folders). To access your Git Hub through your local computer, you need to learn the “command line”. For Windows O S, this includes downloading G I T and Git Bash. The best resource I found too late was gitimmersion. com. I would recommend this before you move forward at all! Not only do you learn how Git works, you learn how to navigate the terminal line through Git Bash and push your work into your Git Hub. Treat it seriously and use the green dots in your contribution activity to motivate yourself on your productivity! Much like your first job where you need to set-up and understand your environment and workflow — you need to do the same with your coding journey. You will be better off getting in a rhythm of logging into your Git Hub and using your command line to push your work. Now, back to our scheduled curriculum on J S: Start with Code Academy J S track — you need to get the basics of syntax down. Practical Java Script (watchandcode. com) — an amazing tutorial by Gordon Zhu on building a Java Script app from the ground up ( I watched this waaay too late in my process but I would recommend speeding through this and filling in the holes with other resources listed below) Net Ninja’s Java Script Playlist — I would watch till video 30, but if you can watch them all to include D O M traversal, that’s not a bad idea! Join an I N- P E R S O N Free Code Camp community in your area and start working on toy problems through Hack Reactor’s free Prep program. Explain your process *thoroughly*. For example when explaining how to get the longest word in an array — do it with a for loop and then with a reduce function (if you have trouble with higher-order functions, watch out for my next blog post on the immense flexibility of reduce, my personal favorite!). The folks I met at mine were incredibly supportive and helped in both keeping me accountable and in driving my ambition (imagine meeting people I R L who are on the same self-taught hustle as you!) At this point you should be getting the hang of J S fundamentals. To mix things up, try the first Free Code Camp Random Quote Generator Challenge. This challenge is a good use of C S S/ H T M L/ J S at the same time and uses the same skills you learned from Practical J S. Alright, one project down and it’s time to rev up to Higher-order functions that’s going to make your code just that much more eloquent and efficient! For learning H O Fs I recommend reading Eloquent Javascript ( Chapter 5) to understand the basics and watching this video by Anjana Vakil to contextualize your understanding of Functional Programming and its uses. These two challenges to get you practicing with higher-order functions. Egghead. io also has an amazing playlist on H O Fs: it’s 40$ for monthly premium content that is more than worth it, but they have a ton of free resources too that are way better than many youtube videos I’ve watched on the same topics. P R A C T I C E, P R A C T I C E, P R A C T I C E. I can’t drill this enough, it wasn’t until I used both for loops/while loops and higher-order functions to solve a problem that I was really able to build an intuition of solving problems. I wouldn’t say I’m a master yet — but building an intuition is half the challenge when it comes to working on real issues, and this is why explaining your process and drilling questions comes in. My favorite resources is coderbyte. com and hackerrank. com At this point, you’ve just absorbed a lot of vanilla J S, hopefully understood the difference between functional vs. object-oriented programming (although not thoroughly). You need to start making projects! The best resource out there to put your ideas to use is Javascript30. com by Wes Bos — a free 30-day tutorial course on J S. It has some extremely neat tricks and projects to show off in your portfolio! And that should cover it! This is what I wish I would have done in my studies in applying to bootcamp. It’s definitely what would get you through the technical interview of Hack Reactor if that’s your aim! Stay tuned for other resources on moving your coding journey forward. Till next time.","['Programming', 'JavaScript', 'Hack Reactor', 'Codingbootcamp', 'Newbie']",https://medium.com/@gbatra17/how-i-got-into-hack-reactor-summer-2017-aka-my-journey-to-join-a-coding-bootcamp-d2c698c36813,2,"['Hack Reactor', 'General Assembly', 'Coding Dojo']",3,189,garima,F,1.0,0.0
Alessandro Drappa,,What learning to code made me realize about higher education,2017-08-05 15:59:23,medium,"What learning to code made me realize about higher education One month ago, I was presenting a prototype of my product on my very last day at Le Wagon ( Le Wagon). Besides the great satisfaction of having built from scratch a working prototype of my product in 2 weeks only, those 9 intensive weeks in full-stack web-development left me a particular feeling. The feeling to have truly completed my curriculum in business school ( Solvay). When Ernest Solvay created this Business School a bit more than one century ago, his goal was to form people skilled in both business and technological fields. The perfect synthesis between a business and a technical person. Ernest Solvay in his Brussels’ office. Credit: Solvay. 104 years later, this philosophy is still up-to-date, and maybe even more crucial than ever… except that the technical skills required in 1903 are not quite the same as the one we expect in 2017. When we think about a “technical-guy” in today’s world, what comes top to our mind is not someone skilled in industrial chemistry. Unfortunately, the emphasis is still put on physical science such as physics and chemistry even though few students graduated from Solvay eventually end up in an industrial company where those skills are really appreciated. On the opposite, digital technology will play a major role in the career of today’s young graduates, whether they’ll decide to follow a corporate or entrepreneurial path. It’s a pity that most students graduating from Solvay today can balance a redox equation but don’t master the technologies that will shape tomorrow’s world. Don’t get me wrong, I’m not saying that no initiative has been taken and it’s especially because I consider Solvay as a leading business school that I push them to innovate. After all, it’s there that I learnt that incumbents should take risks and innovate in order to stay at the top :-).","['Entrepreneurship', 'Digital Transformation', 'Codingbootcamp', 'Education', 'Educational Technology']",https://medium.com/@drappa.alessandro/what-learning-to-code-made-me-realize-about-higher-education-d0c313e3d9dc,2,[],0,0,alessandro,M,0.0,1.0
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 4 — (03) – Mike Brave – Medium,2018-08-24 10:05:15,medium,"42 Piscine Day 4 — (03) Edit: This is part of a series that culminated here, Next post. Previous post. I’m writing this at 2:30 am. I’m awake because my roommates smoke so much that my sinuses won’t let me sleep. I was going to write this in the morning, but since I can’t sleep now works just fine too. A few things I forgot to say before. The food here is actually pretty good, it ends up being about $5 a day for lunch and $6 a day for dinner, no breakfast though. The campus is actually a former Devry campus, but it’s nice, there are some things that still seem to be under construction (like where the information monitors used to be) but on the whole it’s nice, dorms are too but the beds remind me a lot of the beds we used at scout camp, basically a cot, but decent enough. Computer lab is huge and pretty cool looking, it does get a little hot though, they recommended bringing a fan, I would second it. it’s hard to find time to do laundry and other chores. Those who commute from home commuting to and from seems to be an extra struggle, I read somewhere else that “if you don’t get into the dorms don’t bother”, I feel this was a little strong but also I do see the commuters struggling more than those who just walk next door. Busy day, I spent most of it working on day02 exercise 4, a program that made three digit numbers without repeating numbers or reverse similar numbers while not being allowed to use most functions or create new ones either, basically the write function and while loops were all there was. I felt a bit overwhelmed, had to take a nap, call my mom and make some tea today to calm some feelings of anxiety about it. The nap helped and after I got back to work, finished exercise 04 of day 02, polished up my code before submission (mostly using a command called norminette, to see if our code fits the styling standards of the school called the norm) and submitted. Then I got back to work on day 03 determined to get at least examples 00 through 03 done tonight and finished at about 11:30. Sidenote; I failed day 01 as well as day 00. Not all of my assignments failed but my first ones did, for stupid mistakes that could have been easily avoided. This has shaken my confidence some and has made me paranoid looking for tricks and things that were implied but not more outrightly spoken. It seems many of the “word problems” for lack of a better word are tricky or designed to trick you. The real success here is not just in ability to code but in ability to look for directions and follow them even when not boldly stated (like reading the directions at the beginning of a document and remembering them as you go through the document or equally important paying attention to the screenshot examples). The people here are really cool, it’s nice to at least be in some good company, it’s also humbling/refreshing to be around so many smart people, and people, many of whom are way smarter than I am, which I don’t run into a lot. A few groups have started forming mostly around language lines, those who speak French hang out with each other, those who speak German and Russian likewise. There are not many who speak Spanish, but a good diversity of nearly everywhere else is represented, there's a good showing of women as well, which is cool to see ( I would say about a 2 to 1. 5 ratio of men to women, not perfect but better than expected for a code environment). Apparently this particular piscine is small, I’m not entirely sure how that affects our chances of getting in, but I guess sometimes if there are too many there is a grade cutoff as there are limited spots, which for us should be at least one less problem to worry about. I worry that some of this info may just be hearsay, if I end up being wrong about it I’m sorry, once I finish the piscine I’ll try to go back and edit out any inaccuracies I’ve posted. The lack of clarity of process seems to be a feature and not a bug though, those who ask questions and get to know people find out more, those who search it out find it, those who don’t try don’t know. At least it seems that way to me. To be honest I’ve barely talked to the prefects (the ones who are running the piscine) I’m not sure if they would answer more questions if I asked them or not, they seem to give off the vibe that they aren’t here to teach but just to facilitate, and have often joked about not actually helping, but perhaps that was a trick as well. Some people have already quit, though not as many as expected based on what I read ahead of time. Time will tell, I think the first test will really determine a lot of who stays or goes. assignments today were as followsfunction that does a pointer to an int showing a certain numberchain of nine pointersswap the valuesdividing with remainders while using pointers (hint use mod)(this is how far I got today)similar to above but more complexdisplay a string of characters using pointers and arrayscount and return number of characters in a stringreverse the order of a characters in a stringreproduce the behavior of atoi (what?)sort an array by ascending order That’s it for today.","['Life Lessons', 'Ecole 42', 'Codingbootcamp', 'Education']",https://medium.com/@themichaelbrave/42-piscine-day-4-03-9897dfd959ab,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Daniel Strimpel,,Ego will make you a bad programmer – Daniel Strimpel – Medium,2017-04-03 15:36:00,medium,"Ego will make you a bad programmer Towards the end of week 2, I was freaking out about being only 56% done with my Nomster app. Last night, Ken dropped some serious enlightenment down on my face by telling me that (had I looked at the firehose timeline, I would have known…) the Nomster app was actually suggested for weeks 2–5, not just 2. So I breathed a sigh of relief because in my attempt to speed up my progress, I had stopped reading instructions carefully, was getting bogged down with errors, and getting increasingly stressed. The thing about not reading instructions carefully is that you make mistakes. But you often don’t notice immediately because you’re too busy doing the next thing. But eventually, stuff starts breaking and you find yourself in an impossible maze of hopeless wild goose chases. My head starts spinning. I get flustered. I have to leave my computer and nurse my wounds like a boxer between rounds, steeling myself to go back “out there”. Having gone through this, I came to two key conclusions. I realized that my productivity would exponentially increase if I did the following two things: One: Ask questions on the forum as early as possible. So far, I’ve gotten really prompt and friendly responses from Ken and Mike. I’m afraid of sounding stupid, but that’s just stupid. Asking early on can save literally an entire day of fruitless and frantic scrolling and half-baked Google queries that turn up more confusing and not-quite-relevant infromation. The main obstacle to doing this is my ego. I think I can solve it myself. I want to enjoy the challenge. Well that might be true in other situations, but here, that kind of ego is a massive liability. After 4 hours and no progress, I’m so invested that now, I decide I must solve it myself to redeem all that time from the scrap heap… Two: I realized that if I’m waiting for help, or help isn’t available for some reason, there are often ways of going forward despite the initial issue still being unresolved. By finding ways to keep moving forward, I don’t lose time waiting for something outside my control to happen. The obstacle to this is my perfectionism. I need my project to progress in a perfectly linear fashion, and it should be perfect before I move on to the next stage. That’s some idealized theoretical idea that might be theoretically more satisfying, but it isn’t very practical, and given that I am actually trying to turn out a real project, it’s better for me to think pragmatically. According to Woody Allen, sharks have to keep moving otherwise they die… I guess none of this is anything new. We all have to discover things for ourselves for them to stick. But if sharing helps someone else, so much the better.","['Life Lessons', 'Life', 'Coding', 'Coding Bootcamp', 'Firehose Project']",https://medium.com/@dastrimpel/ego-will-make-you-a-bad-programmer-ed532c6f4054,0,[],0,5,daniel,M,0.004259946531406404,0.9957400534685936
Tom Johnston,"Writer. Investor. Entrepreneur. Former Diplomat. Flawed, But Working On it. Find me at MightyInvestor.com and RainlessMind.com.","Chris, – Tom Johnston – Medium",2018-07-11 21:04:09,medium,"Chris, I love the integrity of what you are doing. I’m going through the introductory material at Launch School. Not sure if this will be the right fit for my life trajectory (we’ll see), but thank you for putting together a product with such immense quality. It’s rare these days.","['Integrity', 'Quality', 'Coding', 'Codingbootcamp']",https://medium.com/@mightyinvestor/chris-222c594ea5b3,0,[],0,10,tom,M,0.004383455850805183,0.9956165441491949
Chantal Wallace,I am currently an aspiring software engineer at Flatiron School in Houston. Follow me @pandas_and_eggs on IG and Twitter.,Programming Terminology Part 1: Frameworks – Chantal Wallace – Medium,2018-08-03 05:11:55,medium,"Programming Terminology Part 1: Frameworks My journey with coding only began a few months ago. As to be expected, I hear a lot of terminology going around that I just don’t understand. At my school, many of those terms are explained through lectures or labs. One in particular keeps coming back to me though: framework. What is a Framework? A framework is a reusable software environment that provides particular functionality to help develop software applications, products and solutions. Think of it as the skeleton of your application. It may include things like compilers, code libraries, tool sets, templates and A P I’s to help develop a project or system. They are usually created so software developers can focus on higher lever or custom code for a project, rather than spend time on low level code that they would generally need to refactor. They provide a boilerplate for us to build our code on. Learning a new framework can take a while, but once a developer understands the intricacies of one, it can make working on future projects much quicker and easier. Frameworks have a couple things that set them apart from normal code libraries: The overall control flow is dictated by the framework, not the caller. The framework itself is made up of non-modifiable code, but does accept user implemented extensions or selective overriding within it. Different frameworks are used for different types of project and generally enhance a programming language in existence. Examples of Frameworks H T M L/ C S S Bootstrap Ruby Ruby on Rails Sinatra Padrino Javascript Angular J S React. js Node. js Python Django Flask Cherry Py Are Frameworks Worth Learning? As with any technology, there are pros and cons to learning a new framework. They make coding more efficient because of pre-built functions. They generally have security implementations already that have been tested by long term users. Popular frameworks are usually free and come with extensive documentation, and a supportive online community. Of course, learning a framework takes time, just like learning the programming language. It’s up to you to decide whether its more or less beneficial to learn a framework for your specific project. Sources:https://en. wikipedia. org/wiki/ Software_frameworkhttps://en. wikipedia. org/wiki/ Comparison_of_web_frameworkshttps://www. quora. com/ What-is-the-difference-between-a-programming-language-and-a-frameworkhttps://1stwebdesigner. com/web-frameworks/","['Web Development', 'Software Development', 'Framework', 'Codingbootcamp']",https://medium.com/@pandas.eggs/my-journey-with-coding-only-began-a-few-months-ago-16bce80b807a,0,['Flatiron School'],1,0,chantal,F,0.9991575400168492,0.0008424599831508003
chibueze ukaegbu,,LearnFactory Internship: Day 8 – LearnFactory Nigeria – Medium,2018-05-09 22:31:32,medium,"Learn Factory Internship: Day 8 Invest in yourself, you are your greatest asset… Day 8 The undying words of Eric Thomas echoed again today, searing the minds of all who heard. Day 3 of the Be Phenomenal or Be Forgotten was packed. Titled I C A N S E E C L E A R L Y N O W, it came as usual with 3 principles: #1 W R I T E Y O U R V I S I O N D O W N A N D K E E P W R I T I N G I T ( Writing it down makes our goals clear and vivid; and the clearer it gets, the more it controls our lives and decisions); #2 — I T’ S F O R M Y E Y E S O N L Y ( My vision was given to me, not everyone will see or understand or support it. Therefore, I should let no one or nothing stop me); #3 — S T O P B E G G I N G ( Stop asking people to do for me what I have not done for myself. It’s my dream, it’s my goal, so I should make the investment in it myself; what I will discover is that other people will then willingly invest in me. ) Chike, via Hangouts Immediately after this, we had a call from Chike Ukaegbu, the founder of Startup52 (www. startup52. com), the first diversity-focused accelerator based in New York. It was an amazing time with the interns, as Chike dropped nuggets of advice. Most were amazed when he informed them that he grew up and schooled in Aba, before leaving for the U S in 2002. He emphasized the importance of Tech, Education and Entrepreneurship. I read the riot act today; there was an air of soberness and somberness. Today, they saw the bad cop; I had to wield the stick to get everyone in line. With the Friday assessment deadline looming, everyone sat up. Matthew, doing his thing Matthew was just phenomenal today; as he waltzed through the class teaching, it was like he was floating mid-air on clouds. He re-energized the class with his command of H T M L5 and C S S3, drawing everyone out into hardcore practical work. They were giddy as they dived into the work, writing semantically correct H T M L and styling them too. During the break, no one was willing to leave, it was like there was a silent agreement to marry their screens. Some tasks they were permitted to collaborate on, others they were to do by themselves. The interns were effusive in their praise of the lecture today. I watched as they left the premises with their heads held high, their confidence restored in their own abilities and faith revived that they can beat the deadline. I’ll see them tomorrow. And I’ll see you too. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-8-1c0f96d4f6b,0,[],0,150,chibueze,M,0.0,1.0
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Piscine Day 15 — (10) – Mike Brave – Medium,2018-09-04 15:38:58,medium,"42 Piscine Day 15 — (10) Edit: This is part of a series that culminated here, Next post. Previous post. Yesterday started in exactly the way I do not want a day to begin, with a woman angry at me. My group project was probably the most dysfunctional group I’ve ever worked in. One of the members refused to help and I think dropped out in the middle of it. The other one informed me she would be unavailable to help because she’s attending a conference, then cancelled her second day of the conference to be available but still didn’t actually help. She tells me she is a V P of marketing for a startup, but I find that unlikely as she is one of the hardest people to communicate with effectively. So that’s what happened, I was stuck with a project alone for half the time, then the second half of the time I had someone who was trying to cheer me on but still not actually helping. It went about how you would expect, we didn’t finish on time. I told her I would upload to github so if anyone goes through our code they see we did something (maybe it will soften perspective) but that I wouldn’t get it graded as there are no partial credits here and so it’s a failing grade. We have to pay points to get things graded, group projects cost 3 points, an expensive project and these points don’t go back into the pool, of which there is starting to be a shortage now that a lot of people have quit. I stand by my decision to not have an incomplete and failing project graded, it would be a waste of time for everyone, a waste of resources and frankly I don’t think they would use it as a teaching moment. She noticed I had thrown in the towel on the project, declining the chance to have it graded, and she was upset. She thought that having them see our work and commenting on it mattered more than the grade, she had misunderstood when I told her I wouldn’t have it graded and was upset that I had done so without talking to her first (except I did). I apologized, she was still upset, there was nothing to be done really, the grade is unchanged either way. My friend who sits next to me was mad for me though saying things like “she didn’t even put in any work into this, she has no right to be mad about not getting graded for work she didn’t do” and he may have a point. We later had a good laugh about something she said though “we will be graded on how well we worked as a team and worked together” I just shook my head, because no, this was the most dysfunctional team I’ve worked on in my life, even the ones where I’ve been stuck doing all the work, at least we sort of communicated ok, this didn’t even have that. So I spent a good chunk of the morning trying to calm down. It seems procrastination and inability to focus are more about emotional control/flow than anything else. I’m one that has always felt feelings very deeply so this has been a lifelong struggle. I didn’t get much done all morning, I tried, I watched videos to understand the assignment, and other related videos to get a grasp of what’s going on. Then after lunch I took a quick nap, because I was still struggling to calm myself. Afterward, my friends and I decided to take a few hours off if we could get a certain amount of the daily project done, so we went and saw a movie at a theater. I needed it, I was all kinds of stressed, I feel a lot better now. There are only 3 more days of projects left, one group project, then one very large project, one more test and of course the final. We are more done than not. My headcount yesterday was in the ballpark of 40. I feel that a lot of people took yesterday off as it was labor day, but also I think a lot of people quit just before exam02 and right after it, I think group project02 sent a lot of people home as well. Another thing yesterday is I found out one of our students is actually a recruiter here to plant seeds of people to find later. She is also here to learn how the program is set up and designed so that her organization can emulate it some and perhaps improve on the model. After talking to some of my friends about it I guess this isn’t completely uncommon practice. I find the whole thing fascinating and in some ways that would be a dream job for me, to go places, learn things, meet people and try to find the talented ones, perhaps I’ll look into something like that. I also finally bought my plane ticket back and let my boss know when I’ll be ready to work again. Since I’m going back it may be worth it to stay more than just a month back at the job, so if I have to take a second piscine, perhaps the one in October isn’t timed quite right. In a perfect world I won’t have to take a second one, but I know where my skills are currently, and I might. So perhaps November or January then. But I had hoped to start my semester(for lack of a better word) as a cadet in November, if wishes were fishes. The assignment yesterday was about Makefiles, if you understand this well you can get through the assignments. It was a somewhat easier day than the last week, I was grateful to actually be able to turn something in, I still had to learn it mind you, but it wasn’t building on top of concepts I had missed as much as the assignments of week2.","['Life', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-piscine-day-15-10-72851a204a0e,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Chapter 6 — W3Develops FAQ – W3Develops – Medium,2018-10-03 01:44:47,medium,"Chapter 6 — W3 Develops F A Q Luck is what happens when preparation meets opportunity. — Seneca Photo: Jonathan Simcoe This is Chapter 4 of the W3 Develops Handbook. This will be my first time using slack, how should I prepare? If this is your first time using Discord, here is a little starter guide. How can I join the Code Incubator? The W3 Develops Code Incubator projects are hard to define specifically. They usually start organically and then we create Google doc signup sheets that explain the project, what success will look like, what tech stack is being used, etc. These will be posted in #news and people can sign up from there. How does W3 Develops exist if it’s free? For the first year, it was funded by my savings, but unfortunately I am not a rich person. Now, it runs on a pay-it-forward donation system. Normally during the last cohort session enough people donate to allow this cohort session to exist. The people from this session gracious enough to donate will allow the next cohort session to exist, and so on. In that way, W3 Develops is much like Mozilla, the open-source software community famous for making Firefox, which survives off donations from people around the world to keep working towards its mission. Is W3 Develops perfect? Absolutely not. This is mainly run by one person, with the help of a lot of people along the way. Sometimes, things won’t work right, so I apologize in advance! How long does a cohort last? When you join the cohorts, you get access to W3 Develops Discord channel and your cohort. The cohorts last 5–12weeks each and then are re-organized (you can join again and again). W3 Develops main Discord channel doesn’t change. Is there a set schedule? No, because each member’s schedule will be different based on what activities they choose to get involved in. That being said, Build-to- Learn projects start in the first week, pair programming and accountability will start in the second week, and W3 Develops Discord channel invites go out a few days in. What should I do in the first few days? Strangers aren’t known for helping other strangers. We’re more likely to help and build with people we know. So the first week your main focus should be on getting to know people. Writing your intro is extremely important, as it lets others know who you are. Finding ways to comment or leaving emojis on other people’s intros is another way to start to get to know people. Some really successful people in the past message people they have common interests with (ex. “ Hey I saw that you love learning languages, me too! I’m learning Korean right now!”) How should I write my intro? When you enter into your cohort, you’ll be encouraged to write an intro. We’ve found the best way is to split your intro into 3 parts: My Backstory, Coding History, My Interests. Here is an example: What is W3 Develops Discord channel? W3 Develops Discord channel is where we do cross-cohort collaboration for projects, where the P1 X T Study Guides Support Group is, and where you can connect to people from all the different cohorts. New members can get access to W3 Develops immediately into their first cohort. What tools does W3 Develops use? When you join the cohort ecosystem, you will get access to two places: your teams discord group and the W3 Develops main discord group. The team discord group is your cohort. If you’re reading this, you will either be in Tier-1, Tier-2, or Tier-3. The tiers are where you’ll be surrounded by a smaller number of people closer to your current skill-level. A strong cohort has the following: people build friendships, grow their network, showcase their work and ask for feedback, build. W3 Develops Discord Channel is the main channel we use. Think of it as the zoo of the cohorts. It has everyone from all the cohorts. It was created to allow people from different cohorts to collaborate together (we do a lot of larger style projects as well as the build-to-learns). It has evolved to house the P1 X T Guides Support Group, the Code Incubator teams, and a channel for the whole cohorts to come together to discuss topics, help each other, or beta test finished team projects. Github makes coding collaboration possible, and it’s also an industry standard for software developer jobs. We use it for all projects. Medium W3 Develops Weekly (weekly updates). The weekly updates is the publication of the cohorts. It’s where we showcase member’s individual projects, launch team projects, share news, among other things. It comes out every week or two on Sunday/ Monday depending on your timezone (sometimes changes based on how busy I am that week). B O N U S — Emojiis. Emojis help us to communicate in various ways, whether it is agreeing with someone’s message, celebrating another’s work, or just plain showing excitement. It makes us communicate more effectively. There’s nothing that emojis can’t do! What are the cohort channels all about? Each cohort has an environment. This environment is a cross between a fitness centre, a comfy lounge, and a playground for aspiring and current developers. This is where we all congregate and where a lot of the friendships, fun and level-ups happen. This environment is broken up into specific channels. Each cohort is unique, but these are some common channels:#general is a place to gather around a *not-real-but-there-in-spirit* fire and chat about whatever is on your mind. #daily-logs is where you update the cohort on whatever you worked on that day. This channel is where you celebrate your progress and cheer on your cohort-mates! This will help inspire the group, as well as allow people working on the same tutorial, projects, etc. to connect. #resources-treasure is where you can share resources that might be helpful to your fellow coders. #news is where I’ll post any news or useful information about the cohorts. Check here often for project or pair programming opportunities. Sometimes I can’t help myself and post motivational stuff. #intros-my-story: This channel is one of the coolest aspects of W3 Develops. You add your intro and get to read about all your cohort-mates. Trust me, it’ll blow your mind how diverse your cohort is. See the F A Q chapter for tips on how to write your intro. There will also be different pop-up channels and ones made by other members to join if they interest you. Remember, everything is in beta and these channels might evolve and change in some way. I’m in my new Cohort, but what’s next? What should I do now? You should review the above ways you can get involved, and pick some to get involved with. Beyond that, the number one thing you can do at any time is to get to know your cohort-mates. The people who get to know people in their cohorts get more opportunities. What am I allowed to do in Discord? Can I create new channels? What channels should I create? Absolutely. I have specifically set up Discord so it can be customized. In the past, people have made channels for things like ‘soft-skills’, ‘ydkjs’, ‘language-exchange’, ‘react’, etc. Make sure that other people can benefit/ are interested as well. How can I get into the P1 X T Guides Study group? When you get into W3 Develops discord channel, you’ll be able to join. What if I have a suggestion to improve the cohorts? We are always changing and adding new ways to help each other level-up. Your ideas on how to improve the cohorts are valuable and can change how we do things. All you need to ask when you want to try something new in the cohorts is “will this empower people and/or give them an opportunity they wouldn’t normally have?” If the answer is yes, I say go for it! Members have ideas about making a live-coding You Tube tutorials, vlogs and podcasts for the cohorts, which will allow members an interactive way to learn. I love it, and ideas like that are not only welcomed, they’re encouraged! :) Can I join another cohort after this? Yes, on the 3rd or 4th week of every cohort I’ll send out signups to join the next cohort session. The cohorts are a “ Choose-your-own- Adventure”. What does that mean? It means you have complete control of what opportunities you want to take advantage of. You choose what opportunities are best for you based on your specific circumstance and goals. We’ve made it this way so people can adapt their goals/ time commitments to the cohorts. Flexibility is key. :) A few cohort tips from P1 X T: Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 1 — Team Projects Lineup Chapter 2 — Schedule Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 4 — Standards & Builder’s Pledge Chapter 5 — Finished Projects & Other Cohorts Comments","['Programming', 'Pair Programming', 'Codingbootcamp', 'W3develops', 'Freecodecamp']",https://medium.com/w3develops/chapter-6-w3develops-faq-73d59f0452c4,1,[],0,0,jonathan,M,0.0042130252697924414,0.9957869747302076
DevPoint Labs,"Helping passionate people launch a career in full stack web development, UX design, and data analytics in 11 weeks. Utah’s highest rated coding school.",Why DevPoint Labs Coding School Offers Free Housing,2017-07-10 19:47:26,medium,"Why Dev Point Labs Coding School Offers Free Housing Love coding? Check √. Apply to coding boot camps? Check √. Received acceptance letter? Check √. Now, where do I find room and board? Here at Dev Point Labs, we know what it’s like for students to press pause on your life to achieve what some people deem impossible. We are confident anyone can reinvent them self and career into software development in as little as three to six months. We’re in an exciting and fortunate position to watch our students reinvent themselves every quarter. It’s beautiful and motivating to say the least; however, it comes with a lot of stress and hard work (even before class begins). This is why we’re one of the few coding schools to offer free student housing. Easing the burden that comes with a big commitment like this. Our co-founder Ty Diamse was once in your shoes. Once upon a time at the beginning of 2013, he embarked on a similar journey to The Starter League in Chicago. They were the pioneers that created this coding boot camp movement. At the time, Ty didn’t know anything about Chicago (besides Scruff Mc Gruff’s address) or what the neighborhoods were like and where to live. He had to rely on photos online to decide if this is where he would call home. Fortunately, he was able to connect with a classmate (now a good friend) and rent a room from his uncle. It was an empty home so it was still less than ideal, but he didn’t care. He knew he could do anything for three months. His story is exactly what we don’t want our students to go through. We want students to focus on what is important like studying the prep work and ensure you start day one with a solid foundation. Not scrambling to find roommates to help pay for rent or what neighborhoods to live in (or not). We have made a commitment to take care of housing if you take care of owning your education. For detailed information about the Dev House go to our free student housing page. Let’s hear from Brian Phelps who lived at the Dev House while attending the Fall Cohort 2016 Part- Time Java Script class. Brian is an East Coast kid that calls Connecticut home. In his downtime, you can find him running around online playing Counter Strike. So what has it been like living in the Dev House?“ Living in the Dev House has been great! It’s only a few blocks from the campus and a lot is provided here. I only need to buy groceries, everything else is provided. ” What is it like traveling to and from the campus?“ Traveling to campus is only a few minute walk, which isn’t bad at all. ” Did you have a private or shared room?“ My roommate and I share a room, and it’s been pretty sound. ” Was housing a deciding factor for you?“ The Dev House was definitely a deciding factor for me coming out-of-state, and not having a place to stay otherwise. ”","['Education', 'Learn To Code', 'Free Student Housing', 'Full Stack', 'Codingbootcamp']",https://medium.com/devpointlabs/why-devpoint-labs-coding-school-offers-free-housing-a850ac36de8d,1,['Starter League'],1,0,devpoint,Unknown,Unknown,Unknown
jordangonen,think for yourself. http://jordangonen.com/ views my own.,On Working Very Hard – jordangonen – Medium,2016-11-02 08:00:52,medium,"On Working Very Hard One of the biggest qualities I admire in people is there courageous drive and determination. I think drive is a universal equalizer. People that work hard can differentiate and go on to do so many incredible things. Sam Altman on hard work: On work: it’s difficult to do a great job on work you don’t care about. And it’s hard to be totally happy/fulfilled in life if you don’t like what you do for your work. Work very hard — a surprising number of people will be offended that you choose to work hard — but not so hard that the rest of your life passes you by. Aim to be the best in the world at whatever you do professionally. Even if you miss, you’ll probably end up in a pretty good place. Figure out your own productivity system — don’t waste time being unorganized, working at suboptimal times, etc. Don’t be afraid to take some career risks, especially early on. Most people pick their career fairly randomly — really think hard about what you like, what fields are going to be successful, and try to talk to people in those fields. This line stuck out to me big time –“ Work very hard — a surprising number of people will be offended that you choose to work hard” Offended? By hard work? Yes. Others will see you working and focusing on something you love so much that it will seem irrational and bizarre. Keep your head down and keep going, others get F O M O. Originally published at www. jordangonen. com on November 2, 2016.","['Life', 'Codingbootcamp']",https://medium.com/@jordangonen/on-working-very-hard-395289a3dfad,0,[],0,3,jordangonen,Unknown,Unknown,Unknown
Raymond Guan,,Ruby on Rails Postgres Error – Raymond Guan – Medium,2018-05-29 04:03:21,medium,"Ruby on Rails Postgres Error Photo by Daniel Tafjord on Unsplash In my Actualize coding bootcamp class last week, we were instructed to install Rails. I installed Ruby on Rails on my Mac Book, and ran the Rails server command; but, I received the following error. F A T A L: could not open lock file “/tmp/. s. P G S Q L. 5432. lock”: Permission denied I asked my fellow classmates if they saw this error because they were having issues installing Rails as well; but, none of them seem to have came upon the issue. I did get some advice on uninstalling Postgres, and looking for the Postgres folder in the Application folder through Finder. I uninstalled Postgres by running the brew uninstall Postgres command, deleted the Postgres folder, and ran the brew install Postgres command to reinstall Postgres. Unfortunately, I was still getting the same error; therefore, I decided to restart the Mac Book, and see if that would resolve the issue. After the restart, I ran the Rails Server command, checked on localhost:3000, and it said Yay you are now on Rails. The restart of the Mac Book fixed the F A T A L: could not open lock file“/tmp/. s. P G S Q L. 5432. lock”: Permission denied error for me.","['Ruby on Rails', 'Ruby', 'Programming', 'Codingbootcamp', 'Database']",https://medium.com/@rguan8/ruby-on-rails-postgres-error-7a814a7075ac,0,[],0,0,raymond,M,0.004537241362410542,0.9954627586375895
Vikash Hart,"Hey everyone, I'm an iOS developer and pretty new to the game. These articles are my way of sharing my knowledge and maybe even inspiring some of you out there.",My Journey to Becoming “Kash” the iOS Dev. – Vikash Hart – Medium,2018-05-16 19:02:34,medium,"My Journey to Becoming “ Kash” the i O S Dev. Hey everyone, if you’re like me then you’re pretty new to the coding world. For those of you who aren’t so new, maybe this story will stir up some nostalgic memories. C4 Q logo. Last September (2017) I started the access code fellowship at an organization called Coalition for Queens otherwise known to its students as C4 Q. Prior to that I had just graduated from college and didn’t really know where I was headed career-wise. I had heard about C4 Q from my brother and decided to give it a look. On the surface their mission looked really good and inspiring so I decided to sign up and give it a shot. I went through a pretty rigorous process that included on site technical and behavioral interviews as well as javascript workshops that culminated in a “final exam” to see how well we were able to pick up the code. I’m not going to lie, for a while I was pretty worried that I wasn’t going to make it in. Not because I didn’t think I could cut it, but rather just because I really wanted to get into the program. Every day I would anxiously check my email for a response, and after a few agonizingly nerve-wracking weeks I finally got a response back from them. I had been accepted into their i O S development program!!! This was such a big victory for me, but I knew that this was only the beginning of a very long road. Now let me preface this by saying that my class was very blessed, we had a fantastic instructor and ta’s that were just as great. Not to mention my cohort, we all came in as a group of strangers but quickly became a fairly tight knit and very supportive family. Speaking of family, my brother, who is in the same industry, was super supportive the whole way through. Tough love and everything, haha! The program started with us learning the fundamentals of Swift: let, var, strings, ints, arrays, the works! I’ll admit that this was pretty daunting considering that I had never really written code before outside of our javascript workshop. Every day was a battle to learn and understand the code that was put in front of me. After a couple of weeks we took what we knew about the fundamentals and started on logic, this was one of the hardest units I had done. Just wrapping my head around how to build and organize the logic code was difficult but at the same time pretty rewarding when I got it working. Skip forward a few weeks and we were about to graduate from Swift playgrounds to actual X Code projects! This was it, we were about to get our first taste of storyboards and making apps, albeit fairly simple ones, but apps nonetheless. I was super excited and anxious, but I had come this far, and I wasn’t about to stop now. I dove in headfirst and embraced this process through all the successes and failures, and believe me there were A L O T of failures. Part of learning to be a developer is learning how to deal with setbacks and failures. Every setback and failure is a learning opportunity, and if you don’t learn to see them this way, learning will inevitably and always does become an uphill battle. Fast forward a bit more and our cohort got another instructor who was super talented. It was about this time that I started working on group projects with my classmates. Let me tell you, if you think that learning to code and coding on your own is hard, working on a team of devs is a new type of challenge with problems and rewards all its own. I had to learn very quickly how to humble myself and not be possessive of the code that I wrote. Something that one of my instructors said that will always stick with me is that “when you work in a group and contribute code to the group, the code belongs to the group, thats what it means to work with a group”. I eventually made it to what is simply called at C4 Q, “hackathon”. We all proposed app ideas and people voted for the apps that they wanted to work on. This took place over 3 days and our groups had to build from the ground up an entire original app from scratch. If I thought working on a regular assigned group project was hard, this was a mountain of a challenge. Up until that point I didn’t realized how much my git skills truly needed work. I also worked with a team that turned out to be highly dysfunctional to say the least, but in the end we all made it work. At the end of hackathon we all demoed our app to a panel of judges from the actual developer world. This was my first real taste at speaking in public to people other than our classmates about an app that we built, it’s features, and answering tough questions by more experienced developers. Phase app logo. Now lets skip ahead about a week or so and it was finally time for our capstone projects. Pretty much the same concept as hackathon except on a much larger scale. We were able to pick who we ideally wanted to work with and by now we all had a good idea of who we all worked well with, and I was fortunate enough to be in a group that didn’t have a bunch of big egos in it. As a group, we tossed around some app ideas and names until we all agreed on the app “ Phase” (logo shown here). Phase was a social app that let users create albums known as “ Journeys” and each post was called a “ Phase”. It created focus on the whole process of individual Journeys from start to finish. Also users weren’t forced to see all of a person’s content on their feed unless they wanted to follow it all and allowed for better organization of image content than other competitors. Four weeks later, almost 140 files and almost 70, 000 lines of code in, we were about to present our app in front of an even bigger panel of judges and an even bigger crowd (more than 100 people), at Pay Pal/ Venmo headquarters right here in Manhattan!!! Talk about a tall order. We had rehearsed our demo dozens of times and double checked that the app was working about every twenty minutes. Overkill I know, but we were just being super cautious so that the only thing that we needed to worry about was showing up to the party. Our team was ready though, oh, and did I mention that they chose our team/app to close out the night! No pressure right. Needless to say we K I L L E D I T!, our demo was on point and our app worked!, we answered all of the judges questions with relative ease, and I’d even venture as far as to say that we probably had the most ambitious app there (in my oh so humble opinion, haha). At the time of writing this it’s now nine months later since the program began and currently we’re winding down a bit. We’re working on passion projects, learning new architecture types, languages, and most importantly applying to jobs. I myself am trying my hand at learning some M V V M, Rx Swift, and just overall working on improving my Swift and git skills. If I can leave you all with a nugget of wisdom, it’s to utilize all of your resources. The people around you, and most of all G O O G L E, S T A C K O V E R F L O W, and M E D I U M! Now I haven’t included every minute detail about my time at C4 Q and I can’t guarantee that everyone will have a similar experience, but I think that this is more than sufficient to convey the journey I took to begin my career as a developer. More than that, I hope that this story, even if in some small way, inspires anyone on the fence or even those of you who didn’t realize that you needed code in your life (haha) to pick up a language, any language, and start your journey to begin a developer career of your own ( I believe in you!).","['Programming', 'Developer', 'iOS', 'Swift', 'Codingbootcamp']",https://medium.com/@vikashhart/my-journey-to-becoming-kash-the-ios-dev-de0d7a939c49,1,[],0,133,vikash,M,0.0,1.0
Codeworks,"The leading JavaScript bootcamp in Europe. We teach JS for the full stack in the heart of Barcelona. For more info, check out our website: www.codeworks.me",New generation of women in tech – Code Words – Medium,2018-03-08 14:27:11,medium,"New generation of women in tech Future Funded is a crowdfunding platform to enable women to get easier access to learning tech skills. The platform was launched recently, and we are proud to be one of the first partners and join them in their great mission. We at Codeworks believe that there are and should not be differences between female and male students. They are equally talented and capable of learning our (or any for that matter) curriculum and become kick ass developers — like it has been proven in every batch in the history of our short existence. Still, we are only balancing around ⅓ to ⅔ female to male ratio in our bootcamp, so until this becomes a healthy ½, we have work to do, and give unfair advantage to the female population. For example we have a straight up 10% discount on the tuition fee for females. We also provide a few 100% scholarship places in our program. ( Have you read Anna’s story yet?). And here is how this newpartnership comes into play as well. Future Funded was started by Barcelona-based coworking and creative moguls, Cecilia Tham, and Laura Fernández Giménez. The two have been running Makers of Barcelona for years, and what started out as spinning an interesting idea between them, became a burning passion growing. So much, that there was no other way: the duo decided to go all in and launch Future Funded. The signature image of Future Funded Their mission statement is to create the next generation of women in technology, and we are completely aligned with that. So after a couple of meetings learning about each other’s ideas, visions and methodologies, we shook hands on the partnership. In our case it means, that we offer the platform for our admitted female students as an alternative way of financing. After the admission is confirmed from our side, Future Funded takes care of creating a compelling campaign for the candidates, and in their joint effort, they try to mobilise and activate the community around them. There is of course another side to this, where Future Funded can actually provide more significant help is partnerships with companies. Here Future Funded plays a matchmaker role, holding ownership of a group of talented and eager to learn women and actively seeking connections. Our first candidate, Sherezz Grant is on the platform already. She came through our application channels, but other aspirants can ask Future Funded’s advice on what to learn and where to learn. On their list are skills such as coding, A I, V R/ A R, big data, cybersecurity, but any other tech fields are legit. Sherezz Grant, our future full-stack developer student But back to Sherezz. She popped up on our radar from the exotic Trinidad and Tobago, and successfully passed our famously tough application process. Now she is focusing on her pre-course work before she joins us, and lately on her crowdfunding campaign. Sherezz is a multifaceted talent, she not only writes a blog but also music, and has been developing websites for clients through Up Work and her freelance business. She is ready to take her career to the next level and join us at the bootcamp in our June batch. We believe that she is a real gem, and hope that people and potentially also a company will find her interesting and help fund her campaign. So head over to the page, and show some support, especially on Women’s Day!https://futurefunded. co/project/sherezz-grant/","['Women In Tech', 'Crowdfunding', 'News', 'Coding', 'Codingbootcamp']",https://medium.com/code-words/new-generation-of-women-in-tech-1ed8a701149d,0,[],0,24,codeworks,Unknown,Unknown,Unknown
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",When the Lights Go Out: How To Get Your Mind Unstuck When Learning Something Difficult,2018-03-13 10:18:36,medium,"When the Lights Go Out: How To Get Your Mind Unstuck While Learning Something Difficult Photo by Lindsay Henwood on Unsplash In learning a new skill, there are significant ups-and-downs. Those moments of glory when something clicks. The code executes perfectly. The concept makes sense. Then there are those moments of devastation. Of thinking you’ll never get it. Of self-doubt and “ What did I get myself into? I’m not smart enough for this!” And you may experience both of these in the same day. Or sometimes in the same breath. It’s all part of the process. The Haze of Confusion We are in week three of Java Script at New York Code + Design Academy. And I’m beginning to feel more comfortable with the haze of confusion that sets in at the beginning of learning a new concept. If a camera were focussed on my face, you’d see my eyes squint. My eyebrows sag. And the corners of my mouth descend a little while my lips part. It’s my Look-of- Confusion. My “ What just happened?” face. “ Okay, ” our instructor says. “ Now that we’ve gone through the lecture, let’s do some exercises. ”“ A few what?” I think. “ The lecture is done?” I read the exercises. “ Is this what we just went over?” Learning To Step Away It’s amazing what wrestling with concepts and problems does, though. If you could pry open our heads in class, and see the neurons making connections, it would probably look like one of those movie scenes in a giant warehouse, where someone flips the switch ‘ On’. Nothing happens at first, but you can hear the electricity running. Then, little by little, the lights flicker on. ( Slowly. ) Part of the learning process is learning to step away. There are those times when you’re working on a problem that is going nowhere. You are staring at the computer screen, and there is no movement in your head. When there is no movement in your head, move your body. When you’re stuck in your mind, get your body unstuck. Go for a walk around the block. Get a cup of coffee. Just get outside, even if it’s freezing, and feel the cold air on your face. It can do wonders for your mind. Often, on that third leg of the walk around the block, just the right idea will come into your mind to help get you unstuck. “ Ahh… What if I were to do that instead?” Or when you come back to your desk, even if the problem still looks confusing, you will know what question to ask your instructor (or Google) to help you get unstuck. Little by little, you’ll make chinks in the wall. And before you know it, the wall will come crumbling down, and your path will be clear. Till you get to the next wall. And do it all over again. The learning happens in the struggle. It’s all part of the process. Give yourself over to it and you’ll learn more each day.","['Learning To Code', 'Codingbootcamp', 'Coding', 'Web Development', 'JavaScript']",https://medium.com/@josephcardillo/when-the-lights-go-out-how-to-get-your-mind-unstuck-when-learning-something-difficult-305ce10c20a6,0,[],0,13,joseph,M,0.004069495880582216,0.9959305041194177
Horizons,,Where Can I Learn to Code? – Horizons – Medium,2018-06-01 00:52:54,medium,"Where Can I Learn to Code? Where can I learn to code? Coding coding coding. You hear that coding, programming, web development, etc. are the jobs of the present and the jobs of the future. We are blasted from nearly all angles that this is the smart career path to take. Jobs are in high (and increasing) demand, and humanity’s thirst for having technology and machines solve our problems isn’t going anywhere soon. But for the uninitiated this begs the question, “how can I get in on this?” “ Where can I learn to code?” There are tons and tons of resources If you are someone who is just starting out and trying to determine what your career should be, someone who is looking for a career change, or someone who is just looking to learn a new skill to make yourself more valuable, “where can I learn to code” is one of the most important questions you will ask yourself. This is because we are inundated with resources and pathways that all claim the same thing. That they will put you on the path to a lucrative programming career. From computer science degrees from four-year universities, all the way through You Tube tutorials, there is a multitude of ways available to learn to code, all of varying cost, efficiency and effectiveness. Middle route? Horizons offers a middle route to these two extremes for those looking to learn to code. It is highly focused, and result and project driven. But at the same time, it offers you a framework within which you can learn, get support and thrive. Sure, there are tons of free or nearly free resources out there, especially when it comes to programming. And some of those resources can be really awesome. But what they don’t offer is a collaborative learning environment with just enough structure to keep you from groping blindly. And in which you are surrounded by people striving after the same goal: to become a kick-ass developer. At the same time, the summer immersion program at Horizons is not so structured as a university that it forces you to spend time learning things you don’t want to learn. You focus on skills and areas that are directly useful to you in whatever career path you choose to take. You will produce tangible value and real projects that you can take to any future job interview as proof that you can do what you say you can do. It’s all about efficiency So if you are looking to get into the tech world and are pondering the question, “where can I learn to code?”, you need to think about what you are actually looking to accomplish. The critical things to have are direction and efficiency. This means short-term and long-term goals, tangible deliverables and a plan ensuring your effort is expended wisely, and only in essential areas. If done right, C S degrees and self-teaching online with free resources both have the potential to get you on the path to the career you want. But both have also have a high potential for inefficiency and wasted time. College, through its lack of overall focus on concrete outcomes. Self-learning, through its lack of any structure or support system. Which way is best for you? Horizons is the solution to the potential problems posed by these other two paths. In addition to a collaborative learning and work environment, you will also have skilled and industry-proven instructors, resources for if you get stuck, the opportunity to hear talks and meet successful people in the tech industry, and extensive interview and career prep work. (see Are Coding Bootcamps Worth It?) Horizons only succeeds if you succeed. This means you gain a partner. Someone in your corner who is heavily invested in your success and wants you to build a career you love. So where can you learn to code? Fill out the application and schedule a 1:1 call today to find out.","['Programming', 'Code School', 'Codingbootcamp']",https://medium.com/@horizons/where-can-i-learn-to-code-95b3c116d8e4,2,[],0,0,horizons,Unknown,Unknown,Unknown
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Making Requests – Emily Deans – Medium,2017-07-17 22:53:36,medium,"Making Requests Today, we spent a bit of time with the content from yesterday’s reading, which meant a lot of playing around with promises and callbacks (still trying to wrap my head around those). The main focus of our daily activities and project, though, was on understanding remote requests, and figuring out how to access and manipulate information from other sites/servers to use in the creation of a new page. Our daily project required us to make an A J A X ( Asynchronous Java Script and X M L) call to the Git Hub A P I to request data. The goal of the project was to pull existing info from our own Git Hub account profiles to create a sort of virtual business card in a style similar to the provided mock-up. To do this successfully — and relatively attractively — meant utilizing H T M L, C S S, and Java Script, as well as concepts from the last couple of days — including template literals, parsing pulled content using J S O N ( Java Script Object Notation), and the ‘this’ keyword (another concept I’m just beginning to wrap my head around. Mock-up of the sample project result My stab at replicating the mock-up with my info pulled from the Git Hub A P I H T M L on the left and J S (with the A J A X call and a template literal) on the right C S S I’m still having some font issues, but otherwise feel pretty good about the techniques we worked with today. Getting more and more comfortable with C S S, which feels exciting. Now if I can just get my comprehension of call-backs and J S functions on a similar trajectory, I’ll be feeling pretty good… Song of the Day: ‘ Three Futures’ by Torres","['JavaScript', 'Codingbootcamp', 'Dctech', 'Women Who Code', 'The Iron Yard']",https://medium.com/@emilyldeans/making-requests-6237f83c7566,0,[],0,3,emily,F,0.9979317746535663,0.002068225346433675
Jacob Moore,,Day 7–9 JS FTW – Jacob Moore – Medium,2017-07-27 12:58:28,medium,Day 7–9 J S F T W Struggles: So clearly the homework ramped up as I’m doing a three day recap versus one a day. The homework along with family responsibilities is causing a bit of a strain. There’s something about trying to mow an acre of land as fast as possible to make dinner to be able to do a couple hours of coding in the evening. The work itself I’ve not had any major issues with as fortunately I did the Web Development Basics class and some Code Academy items to get me up to speed. The biggest struggle with Java Script that I’m having issues conceptualizing is probably the use of Loops. Sure I get the breakdown but applying them with variables makes my head hurt. I know practice will help this out quite a bit. Understood: Object literals makes sense. I mean it just does. Applying to a variable a list of objects which are just a list of keys with values is easy to put together in the ol’ noggin. The same goes for Arrays. Arrays are just lists. Problem solved. Looking forward to: Back-end. I keep floating through my mind either doing front-end or back-end. I’m not in love with front-end development. I know I could get a job faster with front-end especially knowing React but getting to know some back-end would really help me figure out what I want to focus on. I know it’s some time away but I’d like to be prepared. Other tidbits: I’m fully committed to the program and finishing out but part of me is leaning either to doing contract work after or possibly using the knowledge I’ve gained to do more product management with a tech company. This way I could actively use my knowledge with my career experience. I might need to research this a bit more. It’s possible I’ll change my mind in a week or so.,"['Programming', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-7-9-js-ftw-febf83f09194,1,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Jacob Moore,,Day 10 — Getting Caught Up – Jacob Moore – Medium,2017-07-28 13:09:07,medium,"Day 10 — Getting Caught Up I’ll be honest I don’t really get loops. Arrays are simple. They are basically lists. Object literals are basically keys/properties assigned to a variable. Makes sense. Loops are a method to say run this code this number of times based on some conditions. Seems simple but it’s actually a lot more complicated. So fortunately today is a play catch up, re-read all the work thus far, and then glance at the weekly project near the end of the day kind of day. In other news I’ve been looking at supplementing my education at The Iron Yard Academy and there are a ton of offerings. Udacity, free Code Camp, Code Academy, etc. There’s a ton of stuff that I would love to do but it’s just too much of a time commitment. I may, time allowing, use free Code Camp to go through more examples of using Loop or even C S S. In other kind of weirdly timed news I got an invite to set up my Trello board for job searches. It’s day 10 (week 2) and this is already happening. Struggles: Loops! I’ll get there but nested loops is taking some time to figure out. Understand: H T M L? Every time we take a step forward I feel like I end up learning something about it. Looking forward to: Completing the weekly project. At first glance yesterday it didn’t look so hard that it would kill me. It did however look like I’ll need to put in some time to actually get it done.","['JavaScript', 'Codingbootcamp', 'Coding', 'Amateur', 'Web Development']",https://medium.com/@jacob.w.moore/day-10-getting-caught-up-f1e1c59b2881,1,['The Iron Yard'],1,0,jacob,M,0.0024356479040408972,0.9975643520959591
Alec Petros,,Seeing Sound Part 3: Beautiful Numbers – Alec Petros – Medium,2018-04-03 17:00:25,medium,"Seeing Sound Part 3: Beautiful Numbers By and large, there’s no better way to scare me off a project than by throwing a bunch of large numbers at me and telling me to manipulate me. My instincts are all to run, or find the fastest possible method to never look at them again. I remember celebrating the day I finished my last math class in Freshman year of college, rejoicing that I’d never face the mess of big, ugly, unwieldy numbers again. At least, until I went back to school for coding. While this installation of Seeing Sound doesn’t have any big, flashy set pieces to show off like the last one, I’d like to walk through some of the revelations I’ve had chugging through this project, in hopes that some other souls will glean something of value out of it. Numbers don’t have to be scary, and with a little bit of attention and foresight, can actually be made incredibly friendly in your search to make strange and wonderful software. My stretch goal for my last project was to create a processing sketch that could handle incoming M I D I data from Ableton Live, and turn it into glorious, live-loopable visuals for my L E D matrix. After much finagling and banging of my head against the desk, I’m proud to say I’ve done that… mostly. By using Apple’s built-in I A C driver to create a virtual M I D I bus, and using the Processing midibus library, I was able to get communication set up between the two programs fairly easily. The job didn’t stop there, however. Once I had data on what M I D I notes were being pressed or played, how could I turn those into visuals? M I D I is the computer’s version of musical notation. Instead of a staff and scales, pianissimo and fortissimo, crescendos and codas, we have a series of possible notes, 0 through 127, each carrying its own velocity (how hard the note was hit) depending on how it was played. On top of that, we have C C ( Continuous Control) messages, for all those beautiful knobs and faders, which will send their own values when moved, also from 0 to 127. Various software, from synth plugins to samplers to drum machines and more, can take this M I D I information, and make it feel like you’re actually sitting in front of a grand piano in a concert hall in Stockholm, rather than in a stuffy apartment in front of a goofy looking M I D I keyboard with enough flashing lights on it to read by. Processing isn’t concerned with what these numbers mean, it just hands you the numbers to do with what you will. So there I was, once again confronted with a barrage of meaningless digits, and no easy way to turn them into the visuals I want. My first approach was to get something on the page that did… anything. To get the data from midibus to the rest of the sketch, I initialized an array of 127 integers, and dropped a piece of code in my sketch to write the velocity of an incoming note to its corresponding spot in the array. Now, hitting low C ( M I D I note 0) at a velocity of 100 would set note[0] to 100. Great. In my draw() block, I set up a for loop to iterate through my note array, and draw an ellipse for each one, with the transparency of that ellipse set to the value of that note in the array. As a first draft, it worked — hitting a M I D I note in Ableton, with M I D I out routed to our I A C bus, would cause a circle to appear on the screen. Adding another piece of code to the top of our for loop to reduce every value in the array by a set decay rate until it reaches 0 made it feel a little more functional — now, a note press will reset the transparency to whatever the velocity of the press was, and then it will fade back to invisible at a speed determined by our decay rate. Before I knew it, I had a bulky, ugly sketch in which I was multiplying note[i] by all sorts of weird numbers to get the results somewhere usable. R G B A color definitions operate in ranges of 0 to 255 — it wouldn’t be hard to set up an equation to get our 0–127 value to scale from 0–255 — but we might also want to use the note number to change the location of our circle across our scene, or to change our ellipse’s circle. Suddenly we’re writing dozens of ugly equations all over the sketch. There must be a better way. Enter map(). The map function allows us to pass in a variable, then that variable’s range, and then a range that we’d like to scale it to. Good: We can use this to replace our transparency equation. Better: We can use this to replace every modification equation on our code. Best: We can map each note once, before it gets stored in the variable, and make it easily applicable to any value in our sketch. How, you say? Limit the range to 0–1. While I’m sure this is common practice to many, the idea didn’t occur to me until I was working with the Math. random() function in Javascript. By multiplying the output, a random number between 0 and 1, by any number, you could easily set up the random number range to whatever you wanted. Similarly, if we map() our velocity value to 0–1, all we have to do to set transparency perfectly is drop in note[i] * 255. These six lines of code saved me hours. On the micro level, this made my Processing sketch infinitely easier. On the macro level, I realized that with just a bit of foresight about how you handle data, and what it will be applied to, you can clean up miles of code. An inch of prevention is worth a pound of cure. Now, these numbers suddenly don’t seem so scary, and my code is infinitely more flexible. You can dig through the current Processing sketch for my L E D matrix, including M I D I control, here.","['Java', 'Processing', 'Coding', 'Codingbootcamp']",https://medium.com/@alecpetros/seeing-sound-part-3-beautiful-numbers-2168e19db253,1,[],0,0,alec,M,0.006427495184146783,0.9935725048158532
chibueze ukaegbu,,"LearnFactory Internship: Day 14 (May 17, 2018) – LearnFactory Nigeria – Medium",2018-05-20 04:41:11,medium,"Learn Factory Internship: Day 14 ( May 17, 2018) Without struggle there is no progress; a setback is a setup for a comeback. Enraptured In E P I S O D E 9: A T T R A C T E D T O G R E A T N E S S, Eric Thomas reminds we were born phenomenal, but, most have consciously chosen/made the decision to be average. Sadly, its a choice most people have made, maybe based on their circumstances or environment. We are attracted to greatness because greatness is in us; that is why we sit long hours watching the Messi’s and Ronaldo’s play football or listening to your favorite music artist or watching your favorite actor. It’s easier for us to watch others exhibit their greatness instead of paying the price of discipline to manifest our own; that is why we are average. And it frustrates us because we are living below our own expectations. We need to get in the game; we can attain greatness if we will just show up. Average people are excited about their dreams and all they do is talk about it; Good people begin to make concrete plans to execute by writing it down; Great people are not satisfied with writing it down on a board somewhere or talking about it or planning; they are not satisfied until it is actualized and they are walking, talking and sleeping in it. Great people are willing to put in the time and effort, they are willing to make whatever sacrifice to actualize their dream. Phenomenal people are not only doing what they want to do, they have empowered other people to do it. Call with David Daser The highlight of today was the call by Daser David, the founder of N Hub Nigeria, Jos. It was a phenomenal time; both staff and students were glued to the screen. One of the craziest, geekiest and coolest developers I have met, his conversational style of discourse made it absolute fun for the interns. He told the story of his own journey, gave them interesting tips on how to transform from junior/beginner developers to uber programmers, and generally made everyone have a good laugh. But for me, the greatest wisdom he imparted today, was the advice to get a coding mentor — to identify an excellent developer in their field of study and follow up on his works. In choosing such a mentor, he advised a preference for those active in the open-source community; who have a lot of codebase in the open. Find their code, study their code, understand their thinking patterns and logic behind the code; gradually, your level of mastery will definitely grow. # Bring Back Daser Wow, it was a masterpiece. When there was a network glitch and his call dropped, there was a clamour akin to a riot to bring him back, # Bring Back Daser, lol. He reconnected and I must say, the 15 minutes he spent overall with them, was one of the most amazing. Yes, and we agreed to go pay them a visit sometime before the end of the internship; they are looking forward to it. The class continued on arrays and it numerous methods. But the bulk of the day was spent reviewing assignments and challenges given. Phew, can’t believe the week is already drawing to a close. S P O T L I G H T F O R T H E D A Y In the spotlight today, is our lady from Benue. Born to Mr Anthony and Mrs Rhoda Onoja, Grace Ehi Anthony is a Computer Science National Diploma ( N D) holder from the Federal Polytechnic, Idah, Kogi State. With the voice of an angel, Grace loves music and studying. An ardent Christian, she admires sincerity, holiness, faithfulness and righteousness; and dislikes lies and unbelief. Her likes a diversity of colors, which include Pink, Ash, White, Red, Blue and Black. She is very traditional, her favorite food is Fufu and Egusi soup. Mhmm. We have them from all works of life… Keep in touch, see you tomorrow. i C Chief Code Smith","['Internships', 'Coding', 'Codingbootcamp', 'JavaScript', 'Programming']",https://medium.com/learnfactory-nigeria/learnfactory-internship-day-14-may-17-2018-938d80be81f3,0,[],0,108,chibueze,M,0.0,1.0
L.J. Yockey,Full-Stack Developer. Thinkful grad. I like to use GIFs to narrate my experiences.,React and APIs – L.J. Yockey – Medium,2017-07-23 18:55:22,medium,"React and A P Is This week felt like Hell Week. I’ve just about finished my final Thinkful capstone, a full-functioning version of Hospit Alert. After submitting my 2-week notice at work, I felt the pressure to finish my capstone in a timely matter so that I would have my portfolio and resume ready for my move. It was hard not to get overwhelmed. One of the requirements for this capstone was to build the server-side A P I as a separate app. Once my A P I was complete, I ran into a lot of issues when I started making requests from the client. The project would have been a lot easier if the client and the A P I were part of the same app. But I definitely learned a lot more, including the nuances of cross-origin requests. It also confirmed my interest in backend development over frontend development, as building the A P I was really cool. For the React client, I decided to use Redux, since I had some difficulties learning it. Now that I’ve gotten some more experience with Redux, I love it! I applied middleware to the store that pulls the initial state from local storage, if it’s there. That way, the state persists even after the page reloads. Due to Facebook’s cross-origin restrictions, Facebook O Auth is done on the client-side and then sent to the A P I via a P O S T request. The state is setup in a way to keep A P I requests minimal. I still have to write some of the client-side tests, which are proving to be difficult due to the A P I requests in my components and reducers. But I think it’s safe to say that the hardest part is over. One night, I stumbled upon an old tweet of mine that put things in perspective. A little over a month ago, I knew nothing about React. Now, I have a full-stack React app in my portfolio. And that’s pretty amazing. It was particularly difficult to stay motivated this week. Work has been hectic and I logged long hours coding in the evening. The payout will be worth it. This week will be my last week at the Golden Nugget. Then, a week later, I’ll be moving to L A! Thanks for reading!","['JavaScript', 'React', 'API', 'Sql', 'Codingbootcamp']",https://medium.com/@Ljyockey/react-and-apis-699b59af55b,0,[],0,2,l.j.,Unknown,Unknown,Unknown
Faye Hayes,"Making GIFs inclusive with @PlayLoops. Passionate about code, mentorship, and access. Insta: @ fayemyrettehayes Tweet: @fayemhayes",Looking back at Dev Bootcamp – Faye Hayes – Medium,2017-09-01 23:31:39,medium,"Looking back at Dev Bootcamp It has been nearly a year since I was laid off from my first post-college job. I felt very vulnerable and unsure about what the future held for me. Now, looking back, I’m very grateful for that opportunity because that was just the nudge I needed to take my leap of faith into an industry that I never thought I could see myself in. By complete chance, I found Dev Bootcamp, an immersive coding program. At first, I was very skeptical. I didn’t believe that in the span of 18 weeks I could walk away a junior software developer. But I did. I graduated from this amazing program having worked together with a wonderful team, and actually developed fully functional mobile application (that is actually on my phone)! At Dev Bootcamp, I learned how to learn, how to be comfortable being uncomfortable, how to think outside of the box and hunt down the answers for those elusive questions that attempted to stump me. The people I met here come from various industries with one common goal to completely changing their lives. We learned that software engineering does not happen in a silo. With 1200+ hours of pair programming experience under our belt, we learned the value of collaboration and communication. Last Friday, I graduated from this incredible program, found my passion in tech and with a hunger to continue building meaningful and beautiful things! And a huge thanks to the teachers, mentors, and alum for encouraging us boots to keep building the thing. If any friends have any tips or insight into the industry or know of any open junior developer roles, please, feel free to reach out.","['Devbootcamp', 'Programming', 'Women In Tech', 'Girls In Tech', 'Codingbootcamp']",https://medium.com/@fayehayes/looking-back-at-dev-bootcamp-833c02525e3,1,['Dev Bootcamp'],1,25,faye,F,0.9924505203019792,0.007549479698020812
Chance Taken,Facilitator @ Chingu. Apply here: chingu.io,Overheard in Chingu Voyage-launch edition – Chingu – Medium,2018-05-28 18:14:08,medium,"Overheard in Chingu Voyage-launch edition Random lines taken out of context from the Chingu coding cohorts! Photo by Maxime Bhm on Unsplash W E L C O M E T O T H E V O Y A G E E V E R Y O N E :partywizard: :partywizard::partywizard::partywizard: Hey guys! Its exhilarating to be here, and ‘am pumped up to start building and learning! I’ve cycled through 11 countries in Europe(one day for 15 hrs), driven around 26 states and explored a few countries in Central America, South America and Africa. My goal is to build a sustainable business. I am currently working with a group of friends in building a healthy lifestyle app centered around the filipino community. I hope that I can be of help to my team and to everyone here. All the new Chingus you can go and add your flag in the #chingu-news channel 🙂 Live share is open to everyone, just in time for Voyage-5! We used this multiple times last voyage after the opt-in period. It’s a really amazing pair programming tool! https://www. visualstudio. com/services/live-share/awesome! I admire your motivation and hard work! I applied to General Assembly and Coding Dojo bootcamps about two months into learning and got in but decided it was too expensive. Shortly after, I found Chingu through Medium and it’s been the best ride I’ve ever been on. how does one add the dancing otter to the stickers I’m super stoked to be a part of this Chingu cohort — I’ve heard and read so many amazing things😮 You’re gonna have to start charging $5 admission fees so you can do this full time if it keeps growingback at it again with the Chingu- Voyage! L E T S M A K E S T U F F I am hustling at wrk Glad to be in another one ! Well I do actually! going to try and start working on some python scripts for my chatbot ( I part-time twitch stream) so my goals this morning we’re to start working on getting my custom scripts built for that. Until I saw the e-mail to join here. This is my first time doing the cohort thing so. Not sure where to begin 🙂 Just excited to finally find an avenue of like minded learners! I’m seeing a lot of familiar people from Voyage 4 👋 But generally as tips, begin coding early, keep a good structure and never stop coding even if its just a single line!most newcomers are nervous, remember that gives you the fuel to actually accomplish, it is totally normal I felt the same way on my first Voyage! Everyone is helpful here and welcoming. So, the anxiety went away quick. S O excited to get started. Been reading through everyone’s bio and it seems like an outstanding group 😄 Happy to be here !! My first Voyage !! Feeling super excited !!! Nigeria. You? Welcome to T H E V O Y A G E Yoda Master Ukraine, as always)) come to Kyiv. Now is the best season to visit. Chestnuts are blossoming I’m sure everyone’s experience is different, but mine was really great. I was part of the last voyage. It’s a lot of fun, and at times really challenging but as long as you have the right perspective about it, it’s all really good experience even during the hard parts. It’s great to be here. A big hello from Scotland :flag-scotland: Hey! Where in Mexico? I’m in C D M X 🙂 Hello from Mexico, I am really excited to be here Hello from Bulgaria :flag-bg: to everyone 🙂 I am really excited to be here Hi everyone from Germany. :germany-flag: Super excited to be here ❤hello from Barcelona 😄 Read a lot about Chingu. Now I’m a part of the family !! Feeling awesome !! Hello from Russia 🙂 :ru: Hello from Nigeria:flag-ng: Sending you bits of data from Philippines! Hello from West Texas! Hello from Ukraine!:) Hi everyone!! Finally it’s happening 😆 Nice to meet you all! Hello everyone! Greetings from California 🐻 Hello from Mexico, I am really excited to be here Hello from England :gb: 😀eastern europe, i’m night person btw, so i’ll be better in couple of hours 🙂 Hello everyone, I’m from Malaysia. And it’s morning 6:29am over here Yeah I was in Voyage-4. It’s S O M U C H fun. You have no idea. You will really enjoy it. Anyone watching Ice Hockey World Championship? 🏒 It’s 11 P M . . I should probably make some dinner soon 😅 One solid piece of advice I overheard during the last cohort is: don’t try to keep up with all of the messages in community chat. You’ll get completely overwhelmed! haha Just jump right in and don’t worry about what was written earlier. This is how Skynet starts. It starts with making a bot to make ideal Chingu pairing. 20 years from now, the world will look back and find out of the origin of Skynet. When they ask me, I can only say alexever12 did it…… I have a question that is of the utmost importance — who here plays League of Legends? 🤔 Yeah, can vouch for the craziness of the projecthello again, my dear chingus 🙂 I A M eating dinner! Come join me. It’s just rice, though. But I’ve got fish. I love fish. Whenever you need to spam, I can help. Do we have a fish emoji? Because I…. (need to shut up) I just started. It’s kind of all over the place. But i cant wait to get a full time job as a front end dev! If I’m playing league I code in between matches. lol solid 10 minutes between 30 minute games ( I F I feel like gaming)","['Chingu', 'Codingbootcamp', 'Freecodecamp', 'Team Development']",https://medium.com/chingu/overheard-in-chingu-voyage-launch-edition-2bcb34cb2ab3,1,"['General Assembly', 'Coding Dojo']",2,50,chance,M,0.024461428631419813,0.9755385713685801
Nathan Watts,"Setting out on a journey of my own creation. LDS, Autodidact, Musician, Creator.",Reviewing a Coding Bootcamp – Nathan Watts – Medium,2018-03-22 02:59:55,medium,"Reviewing a Coding Bootcamp Having finished a coding bootcamp about 4 months ago I would like share some of my thoughts and things that I have learned and see if I can clear up any doubts you may have. My journey started in March of 2016. I was currently attending University and was completing my sophomore year in a Business Administration degree while minoring in Entrepreneurship. I had started University in Computer Science, but was bored out of my mind by the courses. My family has a history of starting businesses beginning with my grandfather creating a construction company. I figured I’d study Business and Entrepreneurship, following the tradition and then teach myself technology on the side so that I could implement some of my ideas. I loved attending University, but looking at all the ridiculous expenses, breaking down my tuition and living costs it blew my mind. One thing that I absolutely hated was how much of my money was contributing to the school’s sports teams, getting them free gear, giving the students full-ride scholarships for sports and they were using my money! I dropped out of college. I’m now a 23 year old college dropout and am pursuing education following my own visions and goals while learning exactly what I want and need to learn. I began learning to code while I was in high school by picking up some of my dad’s old C++ and Java books. Following along with Youtube videos I was able to grasp a decent amount of concepts, albeit on a novice level. I decided I would pick it back up and see if I could do it myself. I rationalized that if I was able to dedicate my time to attend University while being enrolled in 15 credit hours, I could find a decent amount of hours per day to set out for only programming. All of my energy would be focused on one thing which was what I loved. I could sit down and grind for hours because I was very interested and curious in how it all worked. A few weeks passed by and I had been studying hard. I wasn’t putting any money into paid courses yet, and was just reading information wherever I could find it and on whatever subject. I had decided that I would try my hand in web development but that blew open a whole new world of coding for me! The Javascript world with all their frameworks, libraries, development approaches, and the rapid pace of innovation was moving a bit too fast for me, and I consider myself a quick learner. I looked into coding bootcamps. My family was telling me they were a scam and that no one could land such high paying jobs in only 3 months time. I started to believe it was a scam. I then decided to ask a previous student what he had thought. I met him through a mutual friend and he reassured me that it was not a scam, and that it would be worth my time if I put in the work. He also gave me a few pointers on how to get a decent discount on the tuition. I decided to take a chance. I attended a local school about 15 minutes from my house, 9–10 hours a day, 5 days a week, for 3 months. That is a lot of time spent in one classroom with the same students and instructors. I was lucky in that my class consisted of only 7 other students, and most of them were very bright individuals. I discovered that this school was exactly what I needed to point me in the right direction and give me the tools I needed to learn web development and even continue learning on my own efficiently. The courses began with basic Javascript, H T M L, and C S S. We began moving into more complex topics in each category until we had broadly covered them decently well. It was fast paced and hard, but it felt really good to be seeing results. This was a full-stack web development course so about midway through the course is when we began focusing on React. js for the front-end. React was super awesome and helped create projects much quicker than vanilla Javascript. We began integrating Express servers in Node and then connecting Mongo databases. We were making G E T P O S T P U T D E L E T E requests and all this fancy backend server stuff that opened my mind into what was actually happening throughout the entire stack. We covered topics such as Token Authentication, working with different apis including Google Maps and Spotify, Real-time messaging integration into some social media apps. Towards the end of the class we were cruising pretty well and I even attempted some React Native and React V R. School came to an end and I was pumped to go out and get a job. Then reality hit. School had been the easy part for me. I loved learning and working on projects, but I wasn’t having very much luck finding a job. I remember applying to X- Team, a business that hired out remote contractors. I aced their interview. The coding test was actually some real world code debugging and fixing them. I passed the exam with 100% in about 1/4 of the time I was given. I went on to some phone call interviews and felt good about it. Then the email came delivering the bad news. They were looking for Senior Developers with more experience. The hiring manager personally emailed me and told me he would help me out and guide me while starting out on this journey. He told me they would have hired me if I actually had experience. The experience right now is what gets me. I’m 23 and none of my job experience has been in technology. I’ve worked in restaurants, landscaping, as a ski instructor, for my dad’s startup, amongst other jobs when I was even younger. None of this gave me relevant experience in programming. I had applied to a job that I was sure I would get. I went through the whole process but was declined to move on to the last in person interview. I went to school that day, even though I’d already finished, and talked to some guys in a group that was halfway through. One of the guys landed the in person interview and he wasn’t even finished with the school! He was a few years older, but I felt we were on the same level. I became disillusioned by what was happening. I hated some of the ridiculous coding tests that were supposedly evaluating my skills but I found almost embarrassing to the business that was delivering them. I stopped looking for a few months and got a job as a ski instructor again ( I needed the free ski pass because I was now broke). I praise the coding bootcamp I attended highly and value it as one of the best decisions I have made. The job search is tough, but programming everyday, contributing to open source, and attending coding meet-ups are getting me closer. I may even end up starting my own business with the skills I’ve gained. I’m just looking for that breakthrough moment where a business is able to look at what applications and websites I’ve created. Rationalizing all of this I find it to be better than University. If I land a job within the next 2 years and start at a Junior Dev salary I would still be getting a job better than some of my friends who work in mechanical engineering. Opportunity cost is a big thing to me as well. It was all well worth it. I would recommend a bootcamp to those who are driven and highly motivated as well as quick learners. Sorry for the long rant, but I just had to get this out there for others.","['Programming', 'Reactjs', 'Nodejs', 'Codingbootcamp']",https://medium.com/@nathanlwatts7/reviewing-a-coding-bootcamp-3a8fb08189d4,4,[],0,0,nathan,M,0.00319299231881422,0.9968070076811858
NEXT Academy,"We are South East Asia’s best tech school focusing on coding, marketing, data and design.",Why We’ve (Re-)Started Interviewing Students – NEXT Academy – Medium,2017-08-02 06:30:35,medium,"Why We’ve ( Re-) Started Interviewing Students Why We’ve ( Re-) Started Interviewing Students When we first started N E X T Academy, we had the goal of empowering individuals to pursue careers that they could be excited about. Software development ranks as one of the most fulfilling careers amongst many. It satisfies the intellectual curiosity that we human beings crave, and at the very same time, appeals to our innate desire to create. And one of the plus points in this era — where technology is disrupting every other industry — is the potentially lucrative pay check that the skill can command. We are proud to have graduated 700 students in Software Development and Digital Marketing, and with that, we have learned a lot about delivering better education. Today, our mission to empower people remains the same. And for that reason, we have implemented many unconventional methods. For example, we don’t think classroom lectures are the best way to shape creativity, encourage independent problem-solving, and improve resourcefulness — qualities that correlate with with highly successful individuals. Beginning today, we are re-designing our admission process in order to create an even more conducive learning environment, to help our students better succeed as tech entrepreneurs and software developers. Every student who applies for our full-time Web Development and i O S bootcamps will be required to go through an admission interview. The interview isn’t designed to eliminate candidates with poor academic backgrounds. We have found poor correlation between excellent grades and success. Our admission interview searches for students who we think will excel in software development and become great at what they do. Our admission criterion identifies students who: Are highly committed to learning or have the potential to develop great interest Have the desire to be independent problem solvers Are introspective in their journey towards success Have the right attitude towards learning Unfortunately, we will not be admitting everyone but we believe this change in our admission process will help our students learn even better than before. If you want to learn, network and grow amongst the best, you may register here: https://www. nextacademy. com/courses/web-development-bootcamp or N E X T Academy's 10- Week i O S Development Bootcamp Learn How To Build i O S Apps in a Hands On, Immersive Learning Environment Become an entrepreneur. Stop being stuck at…www. nextacademy. com Josh Founder, N E X T Academy","['Coding Bootcamp', 'Next Academy', 'Updates']",https://medium.com/@NEXTAcademy_/why-weve-re-started-interviewing-students-43b4d29619b3,2,[],0,0,next,Unknown,Unknown,Unknown
Jacob Moore,,Day 18 — Google is your friend – Jacob Moore – Medium,2017-08-09 20:02:26,medium,"Day 18 — Google is your friend The major takeaway I’ve gotten is this: if you don’t know try random requests on Google (or Bing) to find a solution. It doesn’t always work but if anything I’m slowly getting better at learning what to actually ask. Right now we’re tasked with using fetch to pull data and then we need to set up a dynamic search for an input that will then display data associated with that search. I understand every single part of the assignment. I’ve mentally broken down the work to the following: Step One: Create H T M L and C S S documents Step Two: Create the Fetch request Step Three: Choose the data that is then searchable Step Four: Connect the H T M L/ J S function to do the search Step Five: Have a beer it’s done What I’m stuck at is really three and four. I have the data coming in. Should I be limiting the search results to a new list sitting in J S? Should it be dynamic against the fetch? Even if I figured that out the follow up would be how do I enter that in J S? I honestly don’t know. Thus Google, and Bing, have not really been helpful. I feel like I’m another couple hours of searching to even come up with the correct term to look up. Struggles: Applying J S to H T M L. I can do stuff with D O M, although my assignment on Monday is still wrong, but doing the functions is killing me. Understood: At the moment, I feel like I don’t. I get the principals behind using Fetch it’s just doing something with the data that alludes me. Looking forward to: That refreshing beer when I actually get these two assignments done.","['JavaScript', 'Codingbootcamp']",https://medium.com/@jacob.w.moore/day-18-google-is-your-friend-7c2923238637,1,[],0,0,jacob,M,0.0024356479040408972,0.9975643520959591
Derick Castillo,,How Coding Is a lot Like Planking – Derick Castillo – Medium,2018-08-08 02:52:48,medium,"How Coding Is a lot Like Planking As I reflect on my coding journey so far, I can see how the early stages are similar to the experience of planking ( Planking: You’re in a pushup-like position, but your forearms are holding you up, and you hold this position for a period of time, which exercises your abs). I’d like to get into the details of the similarities between coding and planking, while also explaining how I fell in love with coding. It’s helpful to think about the similarities between the two in terms of phases. Let’s walk thru them. Phase 1 “ Consistency” My love for coding started when my wife suggested I try out Codeacademy, eventually leading to me trying it out and wanting to code all the time. My love for planking started when I joined the Plank Club at my coding bootcamp. I enjoy coding and planking, but it has taken time to develop the necessary skills. Coding can be difficult and frustrating. I struggled at times, early on as I was trying to teach myself a coding language that was new to me. Ruby methods and iterators were very scary in the beginning, but the constant repetition/practice/consistency eventually led to my growth in understanding Ruby and acceptance into a rigorous coding program. Likewise, after my first day of planking at Plank Club, I only lasted 30 seconds of the allotted 2 minutes and wondered if I should even be planking in the first place. It was hard at first, but consistency is how I improved and eventually progressed to a 2 minute plank in a few weeks. Phase 2 “ Collaboration” Plank Club has become so much more than just a nice little break from coding. I enjoy the camaraderie and support as well. If nobody wanted to plank, and it was literally just myself, I think I’d eventually just stop doing it. The fact that there are others there who share a similar goal, willing to give me a random high-five after a round of planking, and show up daily with me, pushes me to plank even when I don’t feel like it. Same goes with coding. I can only do so much on my own. And as developers in the field we’re going to be working with others and collaborating and explaining our code. Collaborative skills are a must! I enjoy coding with others, learning from them, combining minds, tackling problems together, and just having the ability to do more with others than I’d be able to do on my own. When I was learning code on my own and solving problems, it was a lot different than learning alongside others. I don’t mind coding on my own, but collaborative efforts are also very helpful and beneficial. Phase 3 “ Cherish” The only reason I’m even doing this coding bootcamp, making all these sacrifices, and spending all day coding is because I genuinely love it. There’s no way I’d be here if I didn’t love coding. Same with Plank Club. There’s no way I’d show up everyday if I didn’t absolutely enjoy it. In regards to coding, I’ve found something I love, and I want to learn the skills necessary to get better at it and be able to do it for a living. When I’m tired, frustrated, or just in the midst of struggling to learn a new concept, my love for coding is what keeps me going. Likewise, my desire to stay fit and my dedication to my fellow plankers is what keeps me going even when I don’t feel like planking. I love coding and I love planking. Do what you love!","['Coding', 'Exercise', 'Codingbootcamp', 'Programming', 'Ruby']",https://medium.com/@9derick/how-coding-is-a-lot-like-planking-41b780c69ea3,0,[],0,51,derick,M,0.002083667254367687,0.9979163327456323
Holly Valenty,Full-Stack Developer and Tech Education Enthusiast.,Failing forward. – HollsMarie – Medium,2018-03-05 04:59:50,medium,"Failing forward. First things first. I earned a black belt in my first full-stack at Coding Dojo, Python! I don’t typically recommend telling your instructor to “ S H U I T U P” when receiving good news. But I was excited. Basically this means that not only did I pass the exam (which is essentially re-creating a specific website in 4. 5 hours using the language and server you learned during your stack, followed by successfully deploying it), but that I also “mastered” the material, earning a score between 9. 5–10 on my exam. Red belts are also awarded to students who pass the exam with a score of at least 8–9. 4. To continue through the program, and move into the next stack, C# / . N E T core, we had to at least earn a red belt on the Python exam. Don’t be fooled though, I took this exam 3 times to finally pass at all. As Python is the first full-stack students at Coding Dojo learn, it’s often one of the hardest. We’re expected to not only learn a new language and syntax in 3 weeks, but also how to work with multiple compatible servers, create databases, query the databases remotely, and utilize difficult validations. It’s not easy, but it is doable. The first stab at this exam was Friday, February 23rd. There are 7 different versions of each stack exam available to students, knowing that most will take the exam more than once. Our instructor, Ryan, gave us the challenge of tackling the most difficult version of the exam first. Knowing full well most of the students would fail. Which we did. Thanks, Ryan. . But all kidding aside, the lesson here was clear and valuable. Things break. You forget a comma that destroys your site. You have to delete your entire database mid-exam because that C O U L D be the issue but you’re still not really 100% sure if it actually is the reason things aren’t working. It’s not easy, it takes a lot of research, practice, critical thinking, and scouring Google. But you can’t just hit the wall, give up, and convince yourself you haven’t come as far as you truly have. He wanted us to learn to scale the wall, not just meet it and turn around because we didn’t have a ladder. We were forced to learn from our mistakes and “fail forward”. After most of us failed the exam, we had to untuck our tails from between our legs, and fix it. Which takes an entire day sometimes, just to get something as seemingly simple as a time or date validation to work. But we did it, and then we’d take the exam again. And sometimes you fail that one too. You are . 25 away from passing, and you’re pissed. You’re annoyed with yourself, your annoyed with the material, you’re annoyed that you couldn’t write your query correctly. And you go through the whole song and dance again. Fix the exam, learn from your mistakes, and then try once more. Finally, after 13. 5 hours of testing over a period of 5 days, I passed the exam. I’ve never been so proud, relieved, and happy. ( O K, maybe when I got into U F, but not since then. ) I never thought failing an exam could teach me so much. I didn’t realize how I’d be learning so much more than just how to write code, but about life and myself through this whole experience. The past 6 weeks have been some of the hardest, best, exhausting, exhilarating, and insightful weeks of my life and I can’t wait to take on the next 8. Anyways, more pictures and bucket list things below!“ Chicago-shirt Friday” because we love this city. I made it out to the infamous Green Mill. A jazz bar known for being an Al Capone hang out, and having secret tunnels that spread throughout Chicago under it. Lesley came to visit and we hit all the rooftops! The project that earned me my black belt. P. S. If you want to actually visit the mini site I built, type “18. 219. 247. 100” , without the “www. ” and “. com”(looking at you, mom and dad) into your browser. It’s a faux- trip planner. I promise I don’t have all these trips planned above.","['Education', 'Coding Dojo', 'Python', 'Codingbootcamp', 'Chicago']",https://medium.com/hollsmarie/failing-forward-a6fb1c1a53dc,0,['Coding Dojo'],1,208,holly,F,0.9923533354849922,0.00764666451500782
Charles Clemens,,Type Coercion and Weak Typing – Charles Clemens – Medium,2018-09-12 05:13:18,medium,"Type Coercion and Weak Typing Now today we are going to discuss in interesting tidbit about Java Script that doesn’t exist in all programming languages. When you write an expression, function, etc. (anything with a variable in it really), Java Script will take the variable you declare and define and do it’s best to figure out what data type seems appropriate to the context. This is called type coercion. For example, if you are performing some nifty string concatenation with a variable like this:var num = 27; Java Script will actually convert this number into a string because concatenation only applies to string objects. Pretty sweet, right? Now the reason why this works is because Java Script does not force your to declare the data type when declaring the variable itself. So this means that in the previous example, the variable “num” has a datatype that is variable in itself. This is an example of a weakly typedlanguage. Like clay, the datatype can be molded to fit the situation. In a strongly typedlanguage, the datatype is set in stone and cannot be molded at all. Take a look at these variable declarations from a slew of other languages and guess which languages are which type: Java Script: var book Title = “ H T M L & C S S”; Java: String right Bicep Name = “ Wanton Destruction”; Python: area = length * width C#: public int average Miles Per Hour Over The Speed Limit = 20; C++: char middle Initial = ‘j’; Ruby: @number_of_books = 2","['JavaScript', 'Codingbootcamp', 'Learning To Code']",https://medium.com/@cclemensjr/type-coercion-and-weak-typing-5b5a03e159cf,0,[],0,0,charles,M,0.005172083839041249,0.9948279161609588
Joseph Cardillo,"Curious about everything. Literature, Fiction, Programming, and whatever else catches my attention. @jscardillo",How to add GIFs to your GitHub README – Joseph Cardillo – Medium,2018-05-10 10:34:52,medium,"How to add G I Fs to your Git Hub R E A D M E What is the best way to display your web development projects to potential employers, friends and family? Photo by Ben Sweet on Unsplash Images and videos capture our attention more than static code on Git Hub. ( At least for most of us. ) Git Hub is clearly a great tool for version control and collaborating on projects. But what if you just want to show them to friends, family, or potential employers without hosting all of them on Heroku? Friend: Can you show me what you’ve been working on? You: Just clone my repo. Yeah, right! G I P H Y Capture A bite-sized option is to add a G I P H Y of your project on Git Hub (or Facebook) showing it in action. Note: G I P H Y Capture only records up to 30 seconds, so if there are additional pages and features you want to show, consider adding screen shots of these (or multiple G I Fs) to your R E A D M E. 1) To get started, download G I P H Y Capture from the App Store. 2) Run your project(s) on your local machine. Open G I P H Y Capture and resize it to fit your browser:3) Record for up to 30 seconds, then trim the clip:4) Save the file to your desktop, then upload it to the root of your Git Hub Repository. 5) Add this line to your R E A D M E. md file where you want the G I F to show:![](name-of-giphy. gif) Le voilà! Linked In | Git Hub | Twitter","['Github', 'Web Development', 'Codingbootcamp', 'Coding']",https://medium.com/@josephcardillo/how-to-add-gifs-to-your-github-readme-89c74da2ce47,0,[],0,255,joseph,M,0.004069495880582216,0.9959305041194177
Ardelia T,,The start… – ardeliacodes – Medium,2018-07-04 19:52:44,medium,"The start… Let’s start with a little about me. I graduated this past spring from U B C with a Bachelor of Science in Food, Nutrition, and Health. When I first entered university, specializing in foods seemed like a clear choice for me. Both my dad and brother-in-law are chefs, my mom makes the bombest thai food in Vancouver (not being biased), and so naturally I was drawn to working in the same industry. Throughout my university experience however, I had my fair share of existential crises as I regularly doubted this once seemingly easy choice. But I stuck through it. As I prepared for graduation and started my search for a career within the field, I realized that nothing stood out to me. Why was it so tough for me to find a job that I was excited about? That felt like a sign that going down this path was not right for me. I decided that I wanted, or much so needed, to try something new. So here we are. Fuelled by my fascination with the ever-changing world of technology, I started exploring other options. I had always been curious about learning how to code but never had the courage to take the first step. See when you’ve spent the past five years exhausting your time, effort, and money in a certain discipline, it’s extremely hard to let go. However, I remembered hearing about Lighthouse Labs through a colleague. After doing my own research, I learned that they offer coding bootcamps to help launch a career as a web developer in just 10 weeks. 10 weeks! Exploring coding finally seemed within reach and I immediately signed up for the Introduction to Web Development 6-week program. Since then, I dove head first into this world dedicating my days to youtube tutorials, listening to podcasts, and working my way through Free Code Camp (great resource by the way). Yesterday I attended my first class in the program. The instructor was passionate, my classmates were interactive. Coming home I was inspired to start this blog to document my experiences. I have so much to learn and for the first time in a what feels like a long time, I’m excited.","['Web Development', 'Ardelia Tay', 'Coding', 'Codingbootcamp']",https://medium.com/ardeliacodes/the-start-cce227e12d20,0,['Lighthouse Labs'],1,0,ardelia,F,1.0,0.0
Daniel Borowski,,Common Coding Bootcamp Interview Mistakes – Coderbyte – Medium,2017-01-02 01:39:37,medium,"Common Coding Bootcamp Interview Mistakes Coding bootcamp enrollment set new records in 2016, growing by 74% from the year before. Such an increase in interest should come as no surprise when you consider that nearly three in four bootcamp graduates find employment in an engineering field and earn a whopping 64% more than they were earning beforehand. That roughly equates to an average increase in salary of $26, 000 in exchange for an average bootcamp cost of $12, 000. Although once stigmatized compared to their computer science degree-holding colleagues, bootcamp graduates are now widely regarded as some of the most productive and ambitious in the workforce. Given the impressive results, a significant amount of applicant competition has followed, which means that bootcamps are getting more selective. Applicants are expected to study and illustrate some degree of comprehension before being accepted into a program. Nailing the interview is more important than ever, which is why we’ve compiled the most common mistakes and how to avoid them. In accordance with bootcamp curriculum and recommended reading, we’ve developed 60+ beginner challenges that have been taken half a million times. They encompass the fundamentals: simple loops, logic, regular expressions, and basic data structures. Based on user submissions and several hundred email conversations, we discovered that mistakes are both coding and non-coding related. So let’s begin with the most common coding ones: Mistake #1: Syntax for indexing/function calls Two common mistakes I’ve noticed beginner coders make when solving the easy challenges on Coderbyte is a simple syntax error and a logical error when returning a Boolean value from a function. And that’s unfortunate because our data actually shows that even beginners tend to write 95% of a function correctly, only getting tripped up on these two mixups. The first mistake is confusing parentheses with square brackets. The former, ( ), is for calling a function, while the latter, [ ], is for indexing. Below is an example (in Java Script) of an issue I commonly see beginners make: In the example above, parentheses are wrongly swapped with square brackets. Instead, it should be str[i] because you are indexing a part of the string, not running a function on it. You’ll kindly receive a Type Error when this happens in a console. Mistake #2: Boolean logical flaws The second mistake is to put return true or return false in the wrong part of a function. Common interview questions will ask the applicant to determine if something is true for all elements in an array. The correct way to solve this is to check all elements, and to return false if one of the elements is incorrect. But keeping track of boolean variables can prove tricky, as the example below indicates. At first glance, it seems that the function above adequately cycles through a string to check whether or not any of the characters are numbers, returning true if there are no numbers or false if there are any. But if you test it with a string like “abc4” or “a456”, you’ll notice the function doesn’t work as intended. That’s because the loop is actually returning true if any character is not a number. The correct solution to this function is below: By switching return false with return true and changing the conditional statement, the function now correctly identifies if there is an integer anywhere within the string and returns false if so. Otherwise, it returns true, since it’s clear by this point that an integer was not encountered. You can practice this type of problem here, and review a solution guide here. Taking advantage of hash tables Beyond syntax and logical mistakes, there is one other common shortcoming. Aspiring developers frequently underestimate the value and broad applications of hash tables and how much that data structure can improve your program. In a previous article I wrote about the Importance of Hash Tables. Taking the example from that article: For example, imagine you had a list of 1, 000, 000 items that people recently bought on a website like Amazon, and you wanted to check if the book, “ The Great Gatsby”, was within that large list. You could simply loop through all the items looking for “ The Great Gatsby” but that will, in the worst case scenario, require your program to perform 1, 000, 000 checks to see if each and every value is equal to “ The Great Gatsby. ” Instead, if you were to hash all the items and store them in a hash table, checking for virtually any element would happen quickly and at the same speed no matter how large your dataset. Even though it takes a few more lines of code, it executes a lot faster. We go into significantly more detail about hash tables and calculating efficiency (known as “algorithm analysis”) in our ebook, How to Ace the Coding Bootcamp Technical Interview. Read the recommended reading As I mentioned earlier, some of the most common interview mistakes are not related to coding. Many of the bootcamps we partner with explain how applicants simply fail to study the recommended reading that is posted on their website. For example, bootcamps may recommend to study functional programming, read a few chapters from an e-book, or create a simple project like a tic-tac-toe game to get some practice at coding. Hack Reactor is one of the most prestigious bootcamps and kindly posts preparatory materials right on their website. They even outline what they look for in an applicant. Likewise, App Academy provides a study guide with links to challenges, while Codesmith provides a plethora of resources. You can find coding challenges to prepare for a number of the most popular coding bootcamps here. Break it down Finally, no matter how much you prepare, the interviewer is always going to throw you a curveball (to be fair, that’s their job). The key is not to hit a home run but to do the opposite. Break the problem down into smaller pieces and hit a few singles. For a moment, don’t think about code but instead think about merely about the steps needed to solve the problem. Let’s take a common example. Imagine you are asked the following coding question: You are given a large string of people’s names, ages, and emails each on its own separate line of the string, and your goal is to create an object for each person that stores their information. Then you should write a function that will allow someone to sort all of the people either by their name, age, or email. This problem seems a bit complicated, and interviewees will often become overwhelmed. Don’t rush into this by starting to write some code or start talking about how you are going to write the sorting function because you first need to get a good grasp mentally on how you are going to tackle all of the different parts of this challenge. The first thing you should do is break the problem into smaller pieces and talk through it with your interviewer so they can see your thought process. Below is an example step-by-step process of breaking the problem down into smaller pieces: You are given a large string, and you need to somehow separate all the different pieces like name, age, and email. You’ll need to most likely use a split function to split the string into an array. Then the next part is to create a new object that will store the information for each person. This will involve actually creating a new object from different parts of the array, and then storing this object into some sort of list for easy access later. The last part requires you to be able to sort all of the people. If every single person is stored as an object, you’ll need some way to sort by some object’s property. Each step alone is significantly easier to handle and also shows your ability to think on your feet. By the way, that’s exactly how experienced engineers operate. Pros don’t look at complex problems and start writing code. They begin by breaking down problems into steps. It’s good to get the hang of doing that now, and delight interviewers in the process. Applying to and getting accepted into a coding bootcamp is a major milestone in the career of thousands of people every year. It’s truly a cause for celebration. As you study for an upcoming interview, be mindful not to let common mistakes stand in the way.","['Programming', 'Web Development', 'Codingbootcamp', 'Coding Interviews', 'JavaScript']",https://medium.com/coderbyte/common-coding-bootcamp-interview-mistakes-62a1e4c7e2c4,3,"['Hack Reactor', 'App Academy', 'Codesmith']",3,160,daniel,M,0.004259946531406404,0.9957400534685936
adam tropp,,CS 100.8: Trees – adam tropp – Medium,2018-05-18 19:59:07,medium,"C S 100. 8: Trees Today marks the beginning of a two-part series on graphs, starting with a special type of graph, and perhaps the most common one in interview-style problems, the tree. Trees are a hierarchical data structure, meaning that data is arranged in a parent-child relationship. You are, doubtless, familiar with various kinds of trees, as they are a common way to visualize relationships in the real world. A family tree, a corporation with all its subcomponents and employees, or, for a more to-the-point example, the file tree in your computer, all represent data as a tree, in which a root node points to its child nodes, which point to their child nodes, and so on and so forth. For all my Windows users ( Woot Woot! Go Windows!), you have probably at some point had to manipulate your hosts file, which lives at the path C:\ W I N D O W S\system32\drivers\etc\hosts. To help visualize, here is the same thing, written in tree form. C:  | 	\ Windows 	|	\system32 	|	\drivers 	| 	\etc 	| 	\hosts In this tree, /hosts is the direct child of /etc, which is the parent of /hosts. /system32 is an ancestor to both of these nodes, and they are both its descendants. C: is the root, i. e. it has no parent, and /hosts is a leaf, i. e. it has no children. All other nodes are inner nodes, i. e. they have both parent and child nodes. The height of a tree refers to how many levels it has, in the case of our file tree leading to our hosts file, 6. The level of a given node is 1 + the number of edges between it and the root, so the root node is at level 1, /hosts is at level 6, etc. The size is the amount of nodes in the tree, which in this case is simply the height, since each node has one child, but it not uncommon for a node to have multiple child nodes, as in a family tree, like this famous example: Root						 /\ Homer Marge    \       / Bart Lisa Maggie( Someone much more familiar with the Simpsons than me could extend the tree upwards, I’m quite sure, but I must confess that I’ve probably seen <10 episodes in my life. Don’t hate me) What, then is the definition of a tree? A recursive definition explains a tree as either empty, or a node with a key and a list of child nodes, the pseudocode for which looks like this:const tree(node)  if node. nil 	  return empty 	 else 	   return node. key, tree(child) for child in node. children 	```		 We will talk more about graphs next week, so I don't want to get into too much detail about them, but a graph is a set of edges and vertices, which we more commonly think of as lines and points. In this sense, each node in a tree is a vertex, and each pointer to a child node is an edge. Trees can also have pointers to parent nodes, but this is a less common implementation. In particular, trees are a kind of * Directed Acyclic Graph* ( D A G), meaning that they can only be traversed in one direction, and they do not have cycles, i. e. , there is no way to traverse from a node back to itself. In practice, this means that various operations on trees, including traversal, are much simpler than for general graphs, as we will explore shortly, and this will become crystal clear when we look at the equivalent processes for general graphs next week.			 			 Trees are a very common data structure, because they are a good compromise between some of the strengths and weaknesses of other common data structures. There are various kinds of trees, including heaps, which can be thought of as arrays represented as trees, plain ol' trees, and the type that we will focus on for the remainder of today's examples ( and by far the most common type in interview problems): binary search trees. Note that, while I will only focus on examples using binary search trees, most of the procedures outlined below, including all of the traversal methods, work the same way on all other trees. Binary search trees are a type of binary tree. Binary trees are a tree that maintain the invariant that each node has a max of two child nodes (hence binary). Binary search trees maintain the additional invariant that all nodes in a given node's left subtree are less than or equal to the node, and all nodes in its right subtree are greater.  Thus, the following tree is a binary search tree:4 					 /\				3  7				/   / 			2   5 			 \			 3 	```		 But, the following tree is not. . . : ```    12 					 /\ 					4 16 					/ \  \ 				 1	5 20 				    \ 							 13 ``` . . . although it is a binary tree. Make sure you understand why. Finding a given node in a B S T is a lot like performing binary search on a sorted array, and runs in O(log n) time, similarly. Simply start from the root, going left and right as needed until the node is found. If the node is not found, the process for inserting is simple, and inserted nodes will always be leaf nodes. The pseudocode for this process is below. find Node(node, root)   if node == root or root == nil		  return 	 else 	   next Node = root 			 while next Node != node 			   if next Node > node 					   if next Node. left					     next Node = next Node. left 							else 							  next Node. left = node 					else 					  if next Node. right 							  next Node = next Node. right 						 else 						  next Node. right = node 			return The process for deleting a leaf node is also quite simple, and also O(log n). Just find the node and delete it. Deleting a node with one child is similar, and involves setting the child node’s parent to be the parent of the deleted node. This process is shown below. delete Node With One Child(node, root)   if root == nil		  return 	 else 	   next Node = root 			 while next Node. left != node and next Node. right != node			   if next Node > node					   next Node = next Node. left 					else 							next Node = next Node. right 						if next Node. left == node 			  next Node. left = node. child (left or right) 		 else 		  next Node. right = node. child (left or right) The process for deleting a node with two children is slightly more complex, and involves replacing the node you wish to delete with its successor, i. e. the node in the tree that is one larger. Since the successor is the next largest node, every remaining node smaller than the deleted node must be smaller than the successor, and every remaining node bigger then the deleted node must be bigger than the successor, so it can occupy the same position in the tree. The pseudocode for this operation looks like this:delete Node With Two Children(node, root)   if root == nil		  return 	 else 	   next Node = root 			 while next Node. left != node and next Node. right != node			   if next Node > node					   next Node = next Node. left 					else 							next Node = next Node. right 					node Before Successor = find Node Before Successor(node) 				next Node. next = node Before Successor. next 		node Before Successor. next = node 		delete Node(node, root) 		find Node Before Successor(node)   greater Node = node. right 		while greater Node. left		  greater Node = greater Node. left 		return greater Node As you can see, binary search trees make finding, adding, and deleting nodes fairly simple. There are a couple of main ways to traverse a B S T, namely pre-order traversal, in-order traversal and post-order traversal. There is also another way to traverse, know as level-order traversal, but since it maintains a queue of all discovered nodes, it has O(n) space complexity in the worst case, and is thus not a good option. Level-order traversal is a breadth-first algorithm, whereas the other three are depth-first algorithms. I will further explain what this means when we discuss graphs next week, but for now, it is a useful tidbit to keep in the back of your mind. In general, the three depth-first traversals involve visiting the root, its entire left subtree, and its entire right subtree. Starting with the root, visiting its left subtree, and then visiting its right subtree is Preorder traversal. Starting with the left subtree, then visiting the root, then visiting the right subtree is known as Inorder traversal, which makes sense, since we are visiting all the nodes in ascending order. Visiting the left subtree, then the right subtree, then the root, is known as Postorder traversal. Again, we will discuss in more detail next week what it means to visit or discover a vertex in a graph, but for now, know that the goal of a traversal is to visit every node. The pseudocode for each of our depth-first traversals is below. preorder Trav(root)   if root == null 		  return  visit(root) 		preorder Trav(root. left) 		preorder Trav(root. right) 		inorder Trav(root)   if root == null 		  return 	 inorder Trav(root. left)	 visit(root) 	 inorder Trav(root. right) 	 	 postorder Trav(root)   if root == null 		  return		postorder Trav(root. left) 		postorder Trav(root. right)		visit(root) As you can see, depth-first searching algorithms lend themselves well to recursion. Keep this in mind when we talk about ways to traverse a general graph next week. Indeed, it is important to remember that trees are a simple case of a graph. When you want to think about how a process works in a graph, think about a similar process in a tree, and it may make the problem easier to visualize. Okay, that’s enough for today! I found these words of wisdom on the personal blog of another programmer, and they resonated with me so much, I had to find out where they originated. Turns out, this quote comes from a paper called The importance of stupidity in scientific research, originally published in the Journal of Cell Science by U V A microbiology professor Martin A. Schwartz -“ The more comfortable we become with being stupid, the deeper we will wade into the unknown and the more likely we are to make big discoveries” Really sums up my feelings about computer science! Til next time!","['Programming', 'Codingbootcamp', 'Computer Science']",https://medium.com/@adt6261/cs-100-8-trees-e22e08e41c96,0,[],0,0,adam,M,0.003677030249871331,0.9963229697501287
Mike Brave,I make things with design and code. Here's to the journey. https://michaelbrave.github.io/,42 Day 7 – Mike Brave – Medium,2018-08-27 15:36:29,medium,"42 Day 7 Edit: This is part of a series that culminated here, Next post. Previous post. I did not finish the sastantua project, I barely started it all, but I also barely understood how to do it, we had to print to screen a pyramid that would adjust what was already printed to center based on what was later printed. Then have a door that based on the size displays differently and is also centered. Group project turned out better than I thought, my partner is from an island outside of Madagascar, cool guy, really smart. He helped me understand a lot of things that had been bothering me that I didn’t understand yet, one of which (the thing I really wanted to know, how to use a variable as an array size) is apparently really bad practice, and after I asked about it in slack they gave an announcement about how you shouldn’t do that (oops). But now it’s day05, I’m glad I put in the time to understand arrays as now we are doing a ton of string manipulation. I’m going to try to actually get all of today’s work done, missing an assignment because I didn’t prioritize my time right was about the worst feeling in the world. There is also a meeting today at 9:42, we are all unsure as to what it will be about, my guess is that we will be reminded of rules that people have been breaking. Our numbers are fewer still than they were before, every day when I get here in the morning there are less and less. I still think we are close to 90 but I would have to count. Right now at 8am Monday there are about 14, a third of which are still here from the night before. Two days ago at this time there was 40 to put it in perspective. Either people are getting more used to the schedule and actually sleeping now or more have left. I did sign up for another piscine starting October 20th, that way I can still keep my word to my old job a little bit (though only being back for one month wouldn’t be great for them, It may not be enough to justify it really). But the plan is still to get accepted the first time. I used a different email to sign up again, and it gave me a different login which is a shame since I like my login. Between paying for car insurance and rent I almost wonder if it’s worth it going back, or if I should just have my brother sell the car and call it good. It would be a shame not to go back as there was a girl I would have liked to see, but she was terrible at texting me back anyway, so she probably doesn’t actually care much. All I stand to lose is a loss of integrity, and I wonder if perhaps I promised something I shouldn’t have. Still integrity is important to me, so I’ll do it even if it’s expensive, but for future lessons I should probably be slower to promise things like coming back when it wasn’t something I really wanted to do. I’m not sure if my roommates know about the meeting, I’ve been trying to run into them for days to let them know I’m going to try to move out (as I don’t want to be a dick who just leaves) but they go to bed at like 3 am, are rarely in the lab (at lest not when I am) and sleep until after noon. I don’t think they’ve managed to set up slack either, so if I were a betting man I’d wager they won’t show. I wonder what the consequences of missing a mandatory meeting are? We are one week done out of four, no small feat. In a way I’m sort of proud of the people who stuck through it, just the feeling of constant failure is hard to push past, to be able to put aside your ego enough to get through it is itself impressive. Oh I did try to nail down the selection process further and as it turns out nobody really knows anything, everything about the process is rumor. We know that certain things help, things like higher points, better collaboration, helping others, putting in the time, but on the whole nobody really knows, many of the people who have gotten in barely know or at least the feeling is that they still don’t. But all who have come before have stories of people who got low scores and still got in and people with nearly perfect scores who did not. So I guess cross your fingers for me since I’m not really sure what the most important thing to focus on would be, the short answer is that I don’t know how to game the system, and I would guess that’s exactly why it’s designed as it is. I don’t actually have access to day05 files for another half an hour, so I will update that tomorrow.","['Life', 'Ecole 42', 'Education', 'Codingbootcamp']",https://medium.com/@themichaelbrave/42-day-7-05-35154084a963,0,[],0,0,mike,M,0.003228654060934749,0.9967713459390652
Lisa Shepard,,Hashtags for Surviving a Coding Bootcamp – Lisa Shepard – Medium,2018-05-03 05:20:12,medium,"Hashtags for Surviving a Coding Bootcamp The hashtags below are just a few of the countless things I’ve learned these past few months at a coding bootcamp. # Appreciate The Language When you’re coding, you’re speaking a language. I’m not too great at analogies, but I like to imagine that while coding, I’m exchanging messages with my machine, kind of like I would with a friend. But, the machine and I don’t share a common tongue, so we’ve hired a compiler to help us understand each other. While programming languages !== natural language, the similarities are certainly there. And, just like English, Spanish, or whale vocalizations, coding has unique rules. When we speak, write, or sign, our words convey specific meaning … it’s the same story with programming! Sitting in front of a screen for more than twelve hours a day, and type, type, typing away, you don’t realize just how much this practice is helping with your programming fluency. When I was in Germany, I learned that immersion was the best way to improve my speaking, which is unsurprisingly the case for coding. # Get To Know Each Other Yes, you’re learning how to code, not learning how to socialize. Nonetheless, it’s definitely a good idea to take a slice, or even sliver, out of your bootcamp pie and use that little space to make friends. If you have some free time, talk to your peers — get to know a little about them. You’ll be surprised how close you can get in such a short amount of time. Getting to know your peers better will almost certainly help in the long-run. Bootcamp is also a wee bit less stressful when you can commiserate with people you like. And, you’ll hear some jaw-dropping anecdotes. # You Dont Have To Be Friends With Everybody You aren’t going to vibe with everyone … and that’s okay. It’s not your fault, and it’s not the others’ fault —for the most part, anyway. We’ve all done stuff that was kind of uncool, but I digress! Anyway, whether it’s a convo that ended on a meh or eh note or that good ole timeless workplace conflict (just never gets old, does it?), it’s imperative to remind yourself that some people don’t click. I repeat, some people just don’t click. But wait … there’s more. Just because you’re super chill with someone doesn’t mean you’ll be the most productive team or even work together harmoniously! I’ve definitely had work experiences where next to nothing was accomplished because we got too distracted, or we just weren’t that productive. So, I guess the main takeaway is: You won’t necessarily befriend everybody you work with and you won’t necessarily accomplish work with everybody you befriend. # We All Have Bad Days That person’s normally really friendly and talkative but is acting pretty standoffish and aloof. You wonder what you did wrong, even though you didn’t exchange a word and let the self-consciousness set in. But … all of us have bad days. You’ve been there before. We all have bad days. Remember that!# Condescension Sucks Belittlement isn’t cool. It’s not cool no matter who you are. Condescendingly correcting someone’s grammar is rarely, if ever, an acceptable thing to do. This, of course, also applies to critiquing another’s code. Those who let their inner superiority-complex-y pedant, rule, should stop being so darn rude. Constructive and well-intentioned advice equals good. Looking down on someone else equals not fun. # Take Breaks Working all day is exhausting. Socializing is exhausting. Working and socializing is doubly exhausting! Understand that you’re demanding a lot — a lot ­– from your mind and body. Taking occasional breaks will prevent you from reaching your personal threshold. So, take that fifteen-minute nap. You deserve it. You do!","['Life Lessons', 'Pair Programming', 'Coding', 'Codingbootcamp', 'Teamwork']",https://medium.com/@lisashepard04/hashtags-ive-learned-to-live-by-8b5762cf1f93,0,[],0,68,lisa,F,0.9971191234199352,0.002880876580064706
Drew Campbell,Unity Developer | Game Developer | VR | Blogger | Pixel Art Enthusiast | Lover of the Planet and all things Tech,Programming Fundamentals: Algorithms – Drew Campbell – Medium,2017-08-06 11:35:31,medium,"Programming Fundamentals: Algorithms Welcome to the final article in this series on programming fundamentals. Over the last several articles we have looked at many important concepts that are applicable to any programming language you will be using. These concepts included: variables, data structures, conditions, repetition, and functions. In this last article, we look at algorithms, something that requires the use of all the concepts previously discussed. At the most basic level we can define an algorithm as a set of steps that when finished result in the completion of a task, or the solution to a problem. The first article in this series introduced an algorithm for making a cup of tea. Under this definition though we could easily deduce that entire programs are algorithms as they are made up of a series of steps, albeit many steps, for completing a task. However, when we discuss algorithms in the realm of computer science they are generally seen as small concise steps intended to complete a specific task. Algorithms can be classified dependent upon how they go about solving a problem. Some examples of types of algorithms include: divide and conquer, greedy, and brute force algorithms. The classifications give details with regards to how the algorithm performs. A brute force algorithm is one that will try all workable solutions until a match is given. For example, if we wanted to find out a person’s pin number we would try to enter every 4-digit combination until we entered the correct one. Over the years, a multitude of algorithms have been developed that have been applied to solve a wide range of problem from searching, and sorting data within a data structures, to rendering realistic graphics in games. In most cases, it is up to the developer to use an existing algorithm to solve a specific problem dependent upon the problem at hand. In some situations though, you may have to modify an existing algorithm to suit your need, or even design your own. Algorithm design involves developing a series of steps that can be reused to solve a specific problem. There is a lot that goes into designing an algorithm. We must understand the problem we are trying to solve, ensure that our algorithm works for all the values we expect to be input, and that the algorithm is efficient. Efficiency generally refers to how much memory we need to use whilst our algorithm runs, and how long it takes for our algorithm to complete. Algorithms are essential in computer science. They are designed to solve problems, but also to be reusable, so that they can be then applied by developers for whatever they need. A search algorithm could be used, for instance, to sort a range of numbers from highest to lowest in a leaderboard, We decide how to use them, and having so many algorithms already designed for us, we are not short of options. So there we have it, a quick overview of algorithms. I purposely left this last article light on details as algorithms are such a broad topic which cannot easily be explained in this article alone. But at least you now have some understanding of what they are. I hope this series has provided a brief introduction, so if you look elsewhere on your journey to becoming a programmer and run into the word algorithm, variable, data structure, or anything of the other things we have discussed then you will know exactly what is going on, and a little a bit about the why. The last point to make is that this is unfortunately only the beginning. There are a lot of concepts I haven’t discussed, some big ones such as object orientated programming, recursion, nesting, scope, and many more things. But there are plenty of helpful people out there to guide you on your way. Good Luck, and have fun!","['Algorithms', 'Programming', 'Coding', 'Codingbootcamp', 'Software Development']",https://medium.com/@dr3wc/programming-fundamentals-algorithms-bcd8339c56f0,0,[],0,1,drew,M,0.0864588857780683,0.9135411142219317
Ethan R. Roberts,Full-Stack Software Engineer | NYC,Regexes: Our Not-So-Regular Expressions – Ethan R. Roberts – Medium,2017-07-20 02:33:12,medium,"Regexes: Our Not- So- Regular Expressions You may have heard of this funky little term in our title before and thought, “ What is that thing?? Is it even Ruby? Is it even English?!” To most new programmers (like myself) who are unfamiliar with the term and its application, when encountering these in resources such as Stack Overflow, we most likely end up either copying it without understanding it or, if we’re the honest and enterprising programmers we hope and aim to be, we just do this: And then skip to the next response, praying that one will be something we know. But why? What’s the big deal? What are we so afraid of? Well, let’s be completely honest here: to most people looking at it for the first time, that thing they’re seeing makes no sense whatsoever. It’s intimidating as hell! But that thing there is just a Regex and it’s basically a string — or is it? Well, keep reading to find ou-- no, no, sorry. I’m just kidding -- it’s far more than that; it’s a small language unto itself! So if I still have your attention and you haven’t skipped to the next article praying that one will be something you know, let’s proceed with a quick crash course:1. So What Is It? How Do You Even Pronounce It? There. First question answered. That wasn’t so bad, was it? Next!2. Are Regexes Language- Specific? No! While different regex engines (also sometimes known as flavors) can be found, you will find that - overall - Regexes are ubiquitous and often adapt from the same base: Perl. The Perl regex engine is arguably one of the most common engines due to its readability, flexibility/expressiveness and simplicity; it can be found in the following coding languages: Java Javascript Python Ruby Microsoft’s . N E T Framework X M L Schema In short, once learned, we can apply Regexes in any coding language or text-editor!3. Just what do we mean by Regular Expression? I mean… there’s nothing regular about it… Let’s not get bogged down in the etymology. “ Regular Expression” comes from a mathematical term that took hold in programming culture in 1968 for two specific uses: pattern matching in text editors and lexical analysis in a compiler. A regex is a text string that describes a pattern that a regex engine uses in order to find text (or positions) in a body of text, typically for the purposes of validating, finding, replacing or splitting. — Rex Egg. com Basically a regex is an indicator of a textual pattern — so if we think about it even words are regexes. Yes, a word is a regular expression. Kind of obvious when taken as a literal face-value, right? The keyword there is literal. ‘ Foo’ is a regex in that it is a pattern of regular characters with a literal meaning. In fact, you’ve probably seen and used a Regex in Ruby before and not even realized it: Grep! “ Grep” comes from the command for regex searching in an editor: g/re/p It stands for "" Global search for Regular Expression and Print matching lines"" — W H O A H!4. How does it work? In Ruby a Regex is a bit simpler than what we’d find in many other languages and engines. This is simply a testament to Ruby’s flexibility, readability and intuitive nature. In Regex we have two types of characters: literal and special. To start off, any literal character placed between a Regex’s forward slashes can be compared against a string. So, for instance, in the below example from Ruby Learning. com: This regular expression matches the string “a”, as well as any string containing the letter “a”. /a/ The special characters include the following:^ ( Negate a Character Class or, if a caret (^) is at the beginning of the entire regular expression, it matches to the beginning of a line. $ ( If a dollar sign is at the end of the entire regular expression, it matches the end of a line. ) If an entire regular expression is enclosed by a caret and dollar sign (^like this$), it matches an entire line!? ( Tells the engine: the preceding token in the regular expression is optional) Nov(ember)? #matches both ' Nov' and ' November'. . ( The Wildcard Character) The Wildcard Character is placed within a Regex to indicate that we are looking for a pattern anywhere within our compared string. /. ism/ This would match against strings like “ Buddhism”, “prism”, “kismet”, and “charisma”. Obviously, if you’re matching against a long string this can get to be a pretty extensive list — so we use things like character classes to narrow these lists down![ ] ( Character Class, see below) The Character Class ([]) is typically seen in a range such as “/[a-z]/” or “/[0–9]” and these ranges can even be combined. The below example checks for a hexadecimal digit such as one you might find in H T M L or C S S to represent colors:/[ A- Fa-f0–9]/ Much like how the “!” bang operator in Ruby can be placed before something to indicate “not” that thing, in Regex we have something similar: the carat icon “^” placed at the beginning will negate a character class and evaluate a Regex as “not” the following character class:/^[ A- Fa-f0–9]// \ ( Escape Characters) Special characters have special meanings. To escape their meaning and interpret them literally, we need to precede them with a backslash. The backslash tells the Regex engine to ignore the character’s special meaning and interpret it literally:/\?/{ } ( The Limiter/ Quantifier. Tells the engine: repeat {min, max} times. Omitting both the comma and max tells the engine to repeat the token exactly min times. Using a comma after min will set a min and max of infinity)( ) ( Tells the engine to group that part of the Regex. This allows you to apply a Quantifier to the group or restrict any alternation)+ ( Repeater. Tells the engine: attempt to match the preceding token once or more)* ( Repeater. Tells the engine: attempt to match the preceding token zero times or more) We also have special escape sequences. To name a few:\d matches any digit\w matches any digit, alphabetical character, or underscore (_). \s matches any whitespace character (space, tab, newline). To negate one of these sequences, we merely capitalize it:/\ S/#this evaluates as not whitespace So just a few minutes ago, looking at something like the above might have been intimidating. Now, we see it’s just a question mark. Nice! We’ve got this. 5. When do we use a Regex? The typical way in which a basic Regex is used is to match text patterns to strings. In Ruby we see this most often with the #match method. If there’s no match, the return value is nil. If there is a match, the return value is an instance of the class Match Data — most times we don’t actually want that instance so the match method can typically be implemented within a conditional logic statement where the new Match Data object will evaluate as ‘true’ if present or nil. Let’s check out the below example from regular-expressions. info:print(/\w+/. match(“test”)) This will return test in a simple string context. In a boolean context, for example, a conditional statement, this will simply return true. In newer versions of Ruby if we do not want a Match Data object and only want a boolean return value, the method #match? is preferred for optimal use. We use the ‘threequals’ operator (===) to compare a Regex to a string directly or the (=~) method. This returns the character’s position in the string of the start of the match or nil if no match was found. We can also find and replace any matches using Regexes:subject. gsub(/before/, “after”) Now you’re probably thinking, “ Yeah, but I can do all of thee things using #find or #replace, etc…” Yes, this is true. But what happens with the following examples from The Bastards Book of Ruby: Replace all occurrences of “ N Y C” with “ New York City”. With a regular expression, you can do the same find-and-replace action but catch “ N. Y. C”, “ N. Y. ”, “ N Y, N Y”, “nyc” and any other slight variations in spelling and capitalizations, all in one go. That’s the least you can do with a regular expression. In web development, regular expressions are used to detect if the email, phone number, city/state, etc. fields contain valid input. Likewise, they are extremely powerful for data cleaning. Awesome! You’re now well on your way to becoming a coding superhero for your team!! Helpful Resources: Regex 101 Translator The Bastards Book of Ruby Rex Egg Tutorial Ruby Learning Tutorial","['Regex', 'Ruby', 'Codingbootcamp', 'Programming']",https://medium.com/@ethan.reid.roberts/regexes-our-not-so-regular-expressions-ba8978459836,0,[],0,1,ethan,M,0.0016333670799214244,0.9983666329200785
Divyansh Tripathi,I have no idea what i’m doing.,An another intro of Git. – Divyansh Tripathi – Medium,2018-09-02 06:04:35,medium,"My terminal is sexy and i know it. An another intro of Git. Git can be a real pain in the posterior regions of yours when you are new to it. There are thousands of blogs explaining what is git… But i’ve tried my level best to make it different from them. So you can really answer this :- Bro, do you even G I T it ? What is Git? Git is a version control system ( V C S) . It is generally used to keep track of revisions and allow a developer or dev team to work together on a project through branches. Outside code development it is also used for keeping track of non-binary files such as financial reports. Git is not Git Hub. Git is the system, and Git Hub is a repository hosting service (the most popular of many). Tower, Source Tree, Github for Mac/ Windows — these are all G U Is, or Graphical User Interfaces. A G U I is a program that utilizes graphics to create a user-friendly experience, such as Windows to M S- D O S. These programs are useful to learn, especially in a team environment, but in this article, we’re going to do everything through the command line. Don’t worry, it’ll be great. After all this technical introduction i know what you are thinking…. It’s okay , i felt the same :) So what we’ll do is We’ll make one github repo on our own and learn what does all these technical jargons mean . Follow along , life will be a little simpler now…atleast the part of your life which includes G I T. Step 1: Installation Mac Open the Terminal program. Type git — version and press enter. If a version number is returned, Git is already installed. If something along the lines of -bash: git: command not found pops up, install Xcode from the App Store. In X Code, install Command Line Tools: > Preferences > Downloads > Command Line Tools. You can now use Git through Terminal. Although it’s not necessary for the rest of this article, now would be a good time to install Homebrew — a tool for simplifying the installation and management of dev tools. Windows Download Git for Windows. You will be using the Git Bash program. It will utilize all the same commands as Terminal. Step 2: Create an Online Git Repository Git Hub is the most popular location to host repositories, so go ahead and make an account there if you haven’t. I’ll assume your username is kamlesh. This would make your new Git Hub https://github. com/kamlesh. Once you’ve made your account, create a repository by clicking Add New Repo. Do not initialize with a R E A D M E. md or . gitignore at this point. We can call the repository project. Your repository has been created at github. com/you/project. It should be completely empty. Step 3: Create a Local Project If you’re not at all familiar with the command prompt, please read the first chapter or two of the command line crash course or you can follow along the article and come back to it again later. Here are the most important commands, and all you need to know to get started. Basic command line referencepwd Print Working Directory — shows the exact directory you’re working in. ls List Directories — lists all the files and folders in your current directory. cd Change Directory — change to another directory. mkdir Make Directory — create a new directory. Remember, Terminal ( Mac) and Git Bash ( Windows) are both command line shells. Any Git related Shell commands can be done the same through both. When you open Terminal, you will start off in your main directory. I will assume your computer has the same username as your Git Hub account. Now open git bash(if on windows) or terminal(if on O S X or Linux) and type the following command and hit enter after each. The code written succeeding (->) is the output of your command, you need not type that. Confirm your location. pwd--> / Users/you2. Create a new folder called project-local. mkdir project-local3. List your directories. ls You should see project-local in the list of directories. Of course, you could have created the directory through Finder or Explorer, but it’s a useful command to know. 4. Move into the newly created directory. cd project-local Now you’re in the folder where your local project and Git repository will live. From here, we will begin using git commands. There is a massive amount of commands for Git, but we only need a few to get started. Basic Git command reference( Not to be used now , just for reference) Config:-git config Initialize Git repositorygit init Check the status of a Git repositorygit status Track filesgit add Commit tracked filesgit commit Upload filesgit push Download filesgit pull All of the future commands we do today will only apply to your local Git environment. However, there is one important global step to take before doing anything else — configure your Git account. 5. Configure your global Git account. git config --global user. name “ Firstname Lastname”git config —-global user. email username@email. com Make sure you’re still in the project-local folder, then move on. 6. Initialize Git repository. git init Initialized empty Git repository in / Users/you/project-local/. git/ Great! Now you have an empty Git repo on your local computer. 7. Hook up local directory with the repo we made at github. com. git remote add origin https://github. com/you/project Terminal won’t respond, but it was successful. Go ahead and add a file to the project-local directory. You can add as many files as you want, but I will assume you added two files –index. html and style. css. 8. Check the status of your local repository. git status--> On branch master--> Initial commit--> Untracked files:-->(use “git add …” to include in what will be committed)-->index. html-->style. css-->nothing added to commit but untracked files present (use “git add” to track) Okay, so now it knows that there are two files in the directory, but they’re not a part of the Git repo. At this point we have to track the files with the add command. 9. Add A L L the files to the repo. (case sensitive command!)git add . Let’s check the status again with git status. --> On branch master--> Initial commit--> Changes to be committed:-->(use “git rm –cached …” to unstage)-->new file: index. html-->new file: style. css So, what did that do? The files are green now instead of red. Are we ready? Not quite yet. 10. Commit tracked files to the master branchgit commit -a -m “ Initial Commit”-->[master (root-commit)] Initial-->2 files changed, 34 insertions(+)-->create mode index. html-->create mode style. css With this command, I commit all the files (-a), include a message (-m), listed here (“ Initial Commit”). Everything in this line is mandatory. Do not forget to add a comment when you commit your files. Strategic commenting in Git is as important as commenting code. If you accidentally forget to add a comment and end up in a strange screen where you can no longer enter any commands, press E S C and type :q! followed by E N T E R. 11. Push the files to the Git repo at github. com. git push origin master Terminal will prompt you to enter your Git Hub username and password. When you type in your password, it might not show that you’ve typed anything, but it’s being entered. Now refresh your Git Hub page. Success! All your files are now hosted at Github. com! C E L E B R A T I O N T I M E !!!!!!!","['Git', 'Github', 'Codingbootcamp', 'Cli', 'Introduction']",https://medium.com/@divyanshtripathi1998/an-another-intro-of-git-56916d45b844,0,[],0,363,divyansh,M,0.0,1.0
Leibel Hecht,I’m Leibel. I’m transitioning from Talmud to Tech. Maybe someday I’ll be the Rabbi on Rails :),Portfolio is live! Plus apps are mobile friendly – My Coding Journey – Medium,2017-07-09 23:29:16,medium,"Portfolio is live! Plus apps are mobile friendly I’m launching my portfolio site leibelhecht. com plus I made (almost) all of my apps mobile friendly I am looking for an opportunity to join and contribute to a tech team, and I’d love to chat. I’m on Twitter, Linked In, Medium, Github or plain old email @ leibelhecht@gmail. com. My Portfolio is at leibelhecht. com Portfolio Landing Page of leibelhecht. com with inspiration from briandelaney. me. Thanks Meir Shemtov for the logo I’m super pumped to announce that my portfolio is live! The site has all sorts of random info about me but it also has a portfolio of deployed (!) mobile friendly apps. ( I’’ll let you catch your breath. ) The apps (most of them, at least) also have a video demo along with a blog post about the app, plus a link to the Git Hub repo. the “my work” tab Materialize C S S This C S S framework helped me a lot with modals and cards. I ended up having to use !important a lot, but thats part of the fun of using a C S S framework. Preload images and Waking up heroku apps Nobody wants to wait 25 seconds for an app to wake up. By then most will either leave your site or think that your link is broken ( I have seen both). In the end I solved this problem by pinging all of my apps on page load of my portfolio site, so that by the time someone clicks on an app, it should be awake. Circumventing the cross origin get request restriction was fun too. ( Well it wasn’t really but it worked with a proxy in the end). Image loads were also a problem, because the background image changes on hover. I ended up solving this problem by preloading all of the background images and fading in the page to give them time to load. That was actually kind of fun to figure out. Mobile Friendly I chose this design partly because I thought that it would make for a great mobile site, so actually implementing the mobile part wasn’t the biggest deal. It was just a matter of a few @media queries and I think it looks pretty good now. Anyway, enough talking about the site. I would love for you to check it out and (if you would be so kind) give me some feedback. Muchas Gracias. Here is the link. Mobile First, Y E S! Recognizing the importance of mobile friendly webs apps, I spent my Sunday mobilizing 😂 my apps. It wasn’t the biggest deal, as I generally use % over px anyway. I mainly needed to fix the login and registrations. Here are the mobile versions of my apps: Weather Mood Booster Its sunny in Berlin so a motivational message is displayed Team Management Dashboardthis. site ( Hope y’all got the J S reference 😏) Trivia Game Dr. Appointments Dashboard Book Reviewer Message Wall( Smack Talk Messaging) Well, we have a bit of a problem here. Slack is built as a a desktop app with a separate mobile app. For now we only have the desktop view built, and it will be significantly more work to make it mobile friendly. We would basically need to create a whole new app. We’ll see, but for now, please enjoy the desktop version. I am looking for an opportunity to join and contribute to a tech team, and I’d love to chat. I’m on Twitter, Linked In, Medium, Github or plain old email @ leibelhecht@gmail. com. My Portfolio is at leibelhecht. com","['Web Development', 'Portfolio', 'Coding', 'Codingbootcamp', 'Mobile App Development']",https://medium.com/my-coding-dojo-experience/portfolio-is-live-plus-apps-are-mobile-friendly-8bc34b74562d,3,[],0,1,leibel,Unknown,Unknown,Unknown
Jonathan Jackson,Facilitator at W3develops. Apply here: w3develops.org,Chapter 5 — Finished projects & What have people said about cohorts?,2018-10-03 01:42:44,medium,"Chapter 5 — Finished projects & What have people said about cohorts? It always seems impossible until it’s done. — Nelson Mandela Photo cred: Ian Schneider Finished Projects Here is a list of the finished projects from the W3 Develops ecosystem. We have new finished team projects coming in every week so check back every so often to see updates. If you like it, feel free to give the repo a star :) Here are comments people have left on exit surveys about their cohort experience:(you’ll notice that not every comment is positive. The cohorts aren’t perfect and we don’t pretend they are. We are continuously learning and finding new ways to make the experience better for everyone) The people, the projects, the feedback, and F U N! I’m enjoying it so much! I refuse to leave :) so many great people from all around the world, so many ideas flowing around! and then the projects are made together with other guys and even finished from time to time ;) I think it’s motivating to see other coders get excited. I had been bouncing around a couple React tutorials but I finally got started on my data vis projects because I decided to join in on the speed runs! Things I liked most about the cohort:1. Everyone I interacted with was friendly, cool, open, and eager to learn/work together2. Being grouped with coders who had pretty similar skill levels. Nice job with the algorithm!3. Having the option to participate in a structured Team Project and an Accountability Partnership. 4. Having the freedom & flexibility to shape the cohort to what worked for us ( Slack channels, study groups, etc. ) I was able to connect with people that have every similar goals at a common starting point — ex, I am currently meeting with a couple of people for discussion about the F C C algorithms, C S50, and have an accelerated reading group of Y D K J S that meets for discussion, to create reflection prompts, and to find exercises to practice our new J S skills together. Also, my accountability buddy and pair programming partners are both really great people! Build. to. learn projects and the guidance of our project manager Periklis! And working with friendly and motivated people who share the same goals. The Uprooting of the project ideas. Gamedev Project is awesome! My first real-life experience in a collaborative project, yay!! Initially I found pair-programming quite difficult, but after three sessions it was very fun. I thanks hogethedog for that, he always was the first to ask me if I wanted to program every week. I do have a small regret, is not taking on a more active role in groups, as without a clear leader it seemed difficult to move forward. Nothing has motivated me more then being surrounded by people who share my goals. I really enjoy the number of challenges available too. They make me want to leave my comfort zone and feel more like a privilege rather then a burden. It really does take one month to get a feel for how to navigate this zoo. Before I was occupied with the sheer amounts of resources funneling through the channels but now I’m able to focus on the challenges I signed up for and the people working along with me! Thank you! Being in the cohort itself was a great privilege. A B I G T H A N K Y O U. The group projects are great, but some struggle with focus. I’ve loved being surrounded by a community who wants to help each other out :) My favorite part is reading the weekly newsletter and seeing people get hired. It makes me feel inspired to work harder and to know that it is possible in the near future to transition into a tech career as a developer. Really enjoyed the projects and pairing up of like-minded folks. As the main group quietens down, the focus really turns on these Activities and smaller groups. Would love to see as many of these kinds of sign-up-if-you’re-interested opportunities as possible! Suggestion. I know people can always D M you but maybe there could be some formal way to indicate if you’re still looking to get involved in the cohort opportunities at any stage. For example, such scenarios as your pair programming buddy can’t do it anymore, or your build to learn team never gets off the ground / dies for whatever reason. It seems a real shame for people to miss out on these activities through no fault of their own, get demoralized and fade away as they can’t take part in some of the most valuable opportunities the cohort offers. I worry that those in the cohort who had a negative experience like this won’t come back and try another one. Maybe a difficult problem to solve since the cohorts are only 5 weeks long, and the build to learn project can take all 5 weeks, but perhaps there could be a ‘check in point’ after a couple of weeks? Or could there be designated volunteers from other cohorts responsible for checking in with the cohort on this topic and trying to resolve these kinds of situations? One more suggestion: Without knowing quite how much work goes into prepping the various pairs and teams, would there be any chance of publishing these and letting people get started any sooner vs. a week into what’s already a relatively brief cohort? Regardless: This has been a great experience and I’m excited to have the opportunity to continue it! I love the kind people who are always ready to help. I also learned a lot from the bot project I did with two others, I learned a lot from checking their code. I liked the fact that I was working with a team and started working together, remotely, via brainstorming and coming up with concepts for the bot splash page and even thoughts of working on the backend (although I for one was not ready as of yet for the latter). Being able to talk via public or D M with likeminded coders gave me a purpose to keep going with this, despite obstacles that may come my way. It’s free, yet may be more powerful than these “other” Bootcamps that are out there charging ridiculous prices. Another thing I really liked was receiving recognition for something I created, although it was incomplete. It gave me such a level up in continuing what I’ve started, and helps to encourage others to do the same. I enjoyed the idea of group programming but we didn’t manage to get far with the project — so I would like to be with a new team of people to do some project work. Working on projects I knew nothing about before. Pair programming — Finding/talking to people that were working on the exact same F C C challenge I was on — Build. to. learnprojects — The absolute best thing is working together in remote teams. I really feel like a “real” dev working as part of a team. I like the weekly newsletters! Unexpected invitation to join project team after not initially signing up for more projects/activities. Getting to meet people with similar interests and goals who are motivated and dedicated to learning. the opportunity to be among like minded people, I feel not alone when I learn to code. I have friendly friends who can answered my code questions. The whole part of being a cohortian in itself was a pleasure for me. It’s sad that I missed deadlines because of my other high priority stuff but in the next cohort I will surely give my 100%and would learn much more. Overall it was nice experience and meeting new people was cherry on the cake for me Game dev!! :) I really appreciated to read other people stories and share mine as well. It gave a me the feeling I’m not an impostor, instead I’m special just as everyone is special! My first cohort was pretty nervewracking but seeing others struggle and being able to both get help and help was great and I want to do more! I enjoyed everything but best was team projects! I started a writing group with another coder on there… strangely maybe the most fruitful thing I’ve done in spite of this being a coding exercise. I guess one of the fringe benefits of this is it’s a bunch of ambitious people trying to nail themselves to a wall, to put effort towards improving their lives in a L O T of ways, not just coding I’ve been able to easily find like-minded, equally passionate developers with whom I can collaborate, chat and sometimes commiserate. That alone is a great asset. I feel that much more motivated and inspired, having come in contact with and been able to collaborate with so many kind and driven individuals who love programming and tech as much as I do! I really like the opportunity to work in a remote dev team on actual projects. The experience I believe is very valuable. People from different races, religions, backgrounds, etc. come together and help each other to achieve something together, regardless of what ‘stereotypes’ might separate them. It’s amazing to see and participate in the process. Pair programming! All projects are really useful. I enjoyed the collaboration in the build to learn project. I also like that there was an opportunity to work on real life non-profit projects The game project was awesome, super fun to really work as a team! The accountability buddies was very useful! We also had a slack channel called daily-logs which was a general accountability group of sorts. Through the encouragement of others, I was more motivated to write/blog on a consistent basis, something I have been struggling with for a while, so I very much appreciated the support. I love the interaction that happens within the slack channels. Learning to work in a group is great and learning skills from others I create a group to learn React Native. It was amazing see them getting started. Now, I need to figure out how to keep them work together :) The understanding of time and scheduleteam projects I like the 2 person teams for the build to learn projects I am submitting this form again simply because I wanted to change hours spent coding per week… Hope that’s O K. :) Constant motivation and inspiration from complete strangers that are always eager to help in any way they can. The feeling of being apart of something big and that I am encouraged to join in on things and contribute even when I am not proficient. E V E R Y T H I N G! Greatest experience of my life! The opportunity to build projects and the coding challenges. It increased my confidence to build. Reading through feedback showcase and Dev help channels I like having like minded people around me to share experiences and learnings! I’ve really enjoyed the accountability buddy and working through the ydkjs guides Thank you so much for offering this. Although I was not extremely active because I feel that I need to learn more, I appreciate being part of a larger community where I can ask questions and so on. I’m a Genesis Word Press developer and learning much about customization right now, then P H P … where I am stuck in the F C C is in functional programming — I can complete the assignments using loops but would really like to level up in this area to get going again. Each assignment it seems is taking a long time due to having to research so much. Anyway, I just wanted to let you know that I’m still serious about this, still coding … and really would like a break-through. :) Well I believe I already shared with you what I believe about the cohorts and why I find it something amazing to experience as a developer and as a person :p. But if I have to add anything else is that the whole community indeed becomes like a family and it’s hard to quit after 5 weeks :p. Team projects. Collaboration experience! The thing I enjoyed most is watching people accomplish their goals, big or small. That motivates me to do more. Encouragement The efforts that people are making, to make this work is incredible, it’s a great cohort t be in, hopefully I can also contribute in the future. Everything is amazing, really Good !! The best thing was being part of an active coding community that was focused and limited in number. because everyone joined groups, everyone sort of became ‘known’ so I didn’t see a any of that random trolling or “ I know more than you and I know the truth” types. I got to complete one project with a team and I learned a lot in that one experience. Working across time zones and diverse experience/interest was really interesting and I look forward to improving to more opportunities and honing those remote dev skills. Other teams were not so successful but It was still a valuable experience my favorite part about the last cohort was finding a pair programming friend… I hope to continue on with him. I’ve enjoyed the fact that we’re constantly changing cohorts, meaning we have the opportunity to interact with other people This was a wonderful experience had many great aspects. I enjoyed being part of a group of friendly people with similar goal to mine. I especially liked the resource sharing channel, and the opportunity to see other people’s projects. Also, I enjoyed the pair programming experience. In general, being in a cohort helped me stay motivated and kept me on track. Oh, there’s a lot. First — momentum project. We haven’t finished it yet, but honestly I’ve been using it for over a week, and we could’ve put it in a chrome store already, but we keep polishing features or adding some small upgrades. I have improved a lot during this project. We decided to do it in React to learn it, and while I’m no expert I think I have a solid grasp of React’s basics. I also got a great practice using git and github. And it’s a huge satisfaction to create something that I enjoy myself. Second — p1xtstudygroup. This one is a bit weird, because on the outside nothing big happened in this group. There was no huge initiative, no regular meeting, nothing like that, it seemed somewhat quiet and inactive, but I really enjoyed just staying in that channel. I guess there’s no point in expecting some outstanding activity, because we all learn at different paces, have a different amount of time to dedicate, and life keeps getting in the way. Also, any kind of additional activity often looks like a distraction from the guide that we religiously follow, so I understand the hesitation when it comes to some time consuming ideas. But still, I did find a pair programming partner there, and even tho we didn’t build anything that big, I think I finally really understood the idea of combining promises and generators… The camaraderie and depth of people’s experiences Great accountability partners, great help when needed People encouraging each other, supportive community. The help between everyone and that even if someone isn’t fully active when they need help theres always someone there to help. I enjoyed having the opportunity to help out with a group project. setting up the github page for the cohort was a fun experience, got to learn a little but of how git works with a group project, hadmy first pairprogramming experience, so many gifs!! People histories and sharing resources. I enjoyed working on the real life app project like Momentum. Taught me many git skills like creating git branches, pushing to repository, and all other features it comes to working in a group. Enjoyed it a lot. I loved the group projects, and the introduction to pair programming I especially enjoyed the resource-treasures and code-dev-help channels, and of course all the friendly and helpful people. I wish I had more time to get into the machine learning stuff, since that interests me. I’m following one of the P1xt guides, so at the moment, I’m occupied with C S50. The next couple of months my schedule is pretty open, so I will have more time to be active in the cohorts and will definitely get more into machine learning. Having brilliant coders answer my coding issues as soon as I ask. Group projects Everything !the sharing attitude of people I love everything :)great place to get information I appreciate all the work everyone puts in. I really enjoyed working on the pair programming the most but unfortunately it seemed last time my partner was focused seemingly only on R E A C T and speeding through to a career path perhaps??? and also working full time or had other goals, where I desire to put in long hours, and fully understand the concepts more in-depth for my learning path. Also R E A C T is great, as is Python, E S6 or other languages but really seeking pair programming with people more interested in comphrehensive learning and conceptual understanding. Also including repeating tutorials and pair projects making them better, Git Hub, B A S H, V I M, Agile, Kanban, Project Management, servers, Linux, and Data Science and scraping are also high on my list. I loved the community, such an amazing group of people. I like working with a group on a project. I like being around people with similar interests. It provides a social aspect to coding projects. The friendly atmosphere. It’s great to be around people who have similar goals. It’s inspiring and motivating. First cohort was meerkats, spent most of my time trying to be friendly and active in the slack channels 5/5, second cohort was penguins and I spent most of that doing build to learn projects 5/5. would do it again 10/10. Getting asked to help out an international non-profit and getting super helpful messages offering to help me out with code the best thing is I can post my project and get instant feedback from nice people I really appreciated everybody was so keen in helping each other. In the period between the cohorts, I will try to spend some moreawesome resources shared (and put on Trello and Git Hub pages) and team projects — I’m hoping to catch up with those in the next cohort. Back to the Tables of Contents Preface — What is a W3 Develops “ Cohort”? Chapter 1 — Team Projects Lineup Chapter 2 — Schedule Chapter 3 — Essential Skills & Resources, and how to prepare for the Cohort Chapter 4 — Standards & Builder’s Pledge Chapter 6 — F A Q","['Programming', 'Pair Programming', 'Codingbootcamp', 'W3develops', 'Freecodecamp']",https://medium.com/w3develops/chapter-5-finished-projects-what-have-people-said-about-cohorts-3053ec216d86,3,['Momentum'],1,21,jonathan,M,0.0042130252697924414,0.9957869747302076
Berkan Asanovski,Sometimes i write…,"Why you should pay for a Coding Boot camp, or any other type of a Boot camp?",2018-03-17 10:33:53,medium,"Why you should pay for a Coding Boot camp, or any other type of a Boot camp? Photo by John Schnobrich on Unsplash Boot camps, this word has been used many times in this particular time of social media. It’s a place where they lock you and train you to become something you have never considered becoming. A coder, marketer, P R or anything that the boot camp is selling. So my answer to the ultimate question of “ Should you pay for an X Boot camp” is Yes, of course. Why should you pay? For the people in the boot camps. It’s that simple. There will be people in the boot camp that you will meet, with the same goal as you. To learn something new and possibly get a job. If you don’t find a job directly through the boot camp you can team up with someone from the boot camp and start working with them. You will find people that are like-minded like you and you can start working on different projects together. You will make new friends in the boot camp. Also, consider the atmosphere in the boot camp. The atmosphere in the boot camps is usually very intense, yes but it’s also relaxing and it will make you pay attention to what was being told. After all, you are paying money for the boot camp so make sure you get the most of it. Plus everyone is working on the same topic as you and i personally find it very motivational to work in such an atmosphere. Not everyone is like me but i personally get motivated by people working around me. That’s why i would work in a Co- Working space. Consider the connections in the boot camp. Many people that i personally know that went to a boot camp found a job from the boot camp simply because of the connections they made. Yes, there are people that don’t like to talk much, but if you are a talkative person consider going to a boot camp to make connections. Many boot camps work with outside partners that they come to the boot camp for an hour or so and if you are capable of selling yourself to that person, congratulations you have a new job :). What about the professors? The professors in boot camps are mainly with experience with teaching. I am not talking about every boot camp in the world. I am talking about general boot camps. In order for the boot camp to be sold to people, they will call the best professors in the industries and you will learn a lot from them. It’s like going to Harvard or M I T, people know that these universities are one of the best not because they are expensive, it’s because they have the best professors in the world. There are boot camps with professors that will blow your mind. So should you consider a boot camp? If you found the answer in these bullets above, pay for the boot camp if not, there are always free ways of learning something. If you want to learn you will learn it by yourself online, for free.","['Bootcamp', 'Codingbootcamp', 'Connection']",https://medium.com/@berkan_asanovski/why-you-should-pay-for-a-coding-boot-camp-or-any-other-type-of-a-boot-camp-274866df6ea9,1,[],0,15,berkan,Unknown,Unknown,Unknown
Max Lowe,,Imposter Syndrome and The Shawshank Redemption – Max Lowe – Medium,2018-05-18 18:45:46,medium,"Imposter Syndrome and The Shawshank Redemption I thought convincing myself to attempt a career change and choosing the right coding bootcamp at age 39 would be the most difficult phase in my journey to becoming a web developer. Once enrolled, I figured it’d just be a matter of putting in the time and effort. This wouldn’t be the first time in my life that I’d cue up the audio in my head of Red from The Shawshank Redemption: “ Geology is the study of pressure and time. That’s all it takes really… pressure… and time… That, and a big goddamn poster. ” But not long into the Web Developer Track, I experienced something for the first time that made me think that “pressure and time” might not be enough and I found myself hoping I’d be able to acquire “a big goddamn poster. ” I was experiencing Imposter Syndrome and Bloc saw that coming before I had even heard of Bloc, much less Imposter Syndrome. I was clueless about Imposter Syndrome before Bloc introduced it to me. As I was first signing up for group sessions, I noticed one called ‘ Dealing with Imposter Syndrome. ’ My immediate assumption was that it was a term used by people much further up the professional ladder who had bitten off more than they could chew. Or maybe it was common in 20-somethings with limited work experience? It didn’t register right away that it might apply to 39-year-old me, attempting the first deliberate career change in his life. It wasn’t long until I was blankly staring at my laptop asking myself questions like, “ Is it possible my brain just isn’t wired for coding? Did I make a mistake thinking I could do all this? How did I get myself into this?” While the vast majority of the world’s population seems to operate under the assumption that either you’re a ‘computer person’ or you’re not, those who attempt to become ‘computer people’ via bootcamp or other means will apparently often find themselves questioning their own worth and ability. Bloc (and a good portion of the industry from what I can tell) seems to know this kind of self doubt is quite common in aspiring coders and is something best battled head-on. Bloc’s attempts at dealing with imposter syndrome are reflected in how they interact with their students. Offering a ‘ Dealing with Imposter Syndrome’ group session is the most obvious example but Bloc also consciously injects the concept into regular outreach from their Student Success Team and into other group sessions. In meetings with my mentor, Jacob, I’m given not only encouragement and technical guidance but also helpful reminders that every developer regularly faces self doubt and the fact that they must continually learn and grow and that one will never come close to knowing all there is to know about coding. Proven strategies in combatting imposter syndrome are employed as Bloc and its people continually encourage students to become and stay a part of the student and coding communities, read the blogs/stories of others’ journeys, and to regularly reflect on one’s own journey with the challenges and successes therein. Overtly returning to my Shawshank Redemption metaphor, I’m like Andy Dufresne, meticulously chipping away at the wall between me and being a developer. Imposter syndrome is like Warden Hadley and the prison guards, trying to keep me inside the walls of life-as-usual. Bloc is like Red, who knows how to get things for me such as the knowledge, skills, and confidence(big poster of Rita Hayworth)to become a developer. Maybe I’m not cut out for blogs involving Shawshank Redemption metaphors? I’m going to assume I’m not the only one who feels that way and I’ll keep trying to improve.","['Imposter Syndrome', 'Bloc', 'Codingbootcamp']",https://medium.com/@maxjlowe/imposter-syndrome-and-the-shawshank-redemption-d7e8f2a00046,1,[],0,0,max,M,0.004684549053344715,0.9953154509466553
Francesco Pio Squillante,Just a guy who loves coding outside,How should you learn coding? – The Natural Method – Medium,2018-08-08 20:56:34,medium,"How should you learn coding? Versione italiana qui During my experience as a teacher I’ve experimented different ways to teach coding. In Italy coding is taught like something separated by the physical nature of the calculators. That’s why I started my teaching “part-time work” doing a school stage hosted by my game development team. Let’s discover something more about my study. The pupils are underage so I can’t show their countenance. In the next photos I’ll replace their faces with Nicolas Cage’s one. Last year, I’ve hosted several free game development lessons for about 100 pupils from the high schools in my hometown as a school stage. During the 70 hours course, over one third of the time has been dedicated to scripting and programming lessons. Scholars were divided in three classrooms so I could try three different approaches to computer programming. Using the same tests among the different classes I’ve discovered some common criticalties in each approach. But let’s do some flashback first. During my student carreer I’ve studied computer science with several different approaches as I’ve changed several teachers and I’ve studied alone, too. In Italy you simply can’t have the same teacher over the 5 years of the high schools. Some teachers shared the same methodologies to teach computer science, while someone’s was very different. Let’s talk about programming languages, for example: some teachers started teaching Visual Basic, some Visual C++, others the A N S I C. There is no standard to teach computer science. This story is also proponent for a standardization in that way. In the classroom During the course I’ve taught them two programming languages: the Math Studio scripting language and an experimental version of my C compiler and C standard library. At the end of the first module of lectures they have been tested with a task: build some softwares that solve several problems in the more efficient way. I said I would do that. To introduce my pupils to the awsome world of the coding, I’ve decided to try three different approaches, obtaining different results. In all the three classes I’ve dedicated just a few hours to the algorthms theory as they’ve already studied at school and I’ve always started teaching the Math Studio scripting languages (higher level of abstraction) and then the C language (lower level of abstraction). The methods In the first class I’ve started with an introduction to Information Theory and mathematical formalities. I’ve talked a lot about information encoding and the definition of bit. The pupils succeded in understanding the variables typization, data elaboration and organization and some optimization tricks, too. Moreover they were not able to solve new kinds of problems and tende to apply a mnemonic problem solving strategy; In the second class I’ve started talking about the Central Process Unit as an abstract black box that do something. I’ve introduced programming languages as human quickly undestandable infrastructure between a mathematical abstraction (the algorithm) and the machine language. The classroom gained a good hability to solve new problems and almost everyone completed the task. Moreover, the problem solving strategy remains a criticalty; In the third class I’ve tryed to mix the two methods, but unfortunately, due to time limitations, the method failed. The task results were very bad and only few people succeded developing the softwares. I’ll probably write another story to describe how I did the statistical evaluation of the classrooms. Maybe I have too much free time. So what methodology is the most suitable? After that experience I’ve tried a new method based on the result of my previous ones. Some months ago I’ve made some private lessons about coding and this time I’ve got pretty interesting results. The course lasted about 50 hours and tests revealed the new method allowed everybody to start talking the language of computers. I’ve started talking about what a transistor is and I built up the required abstractions to end up with high level interpreted languages and object oriented programming. During the experiment I’ve got some ispiration for my next projects and I’ve started coding a new programming language based on Math Studio which is perfectly suitable with my new teaching methodology. I’ve completely renewed the kernel code, so I’ve changed its name in Golden/ Ratio, and the language is basically a mix of Math Studio and C on steroids. Let’s introduce this approach. The Natural Method Just start from the lowest abstraction that you can find in a logical circuit: the transistors. What are transistors? Well I’m not going to explain why they work, but just how. Transistors are made up of semiconductur materials, such as silicon. The main purposes the trainsistor are designed for are signal amplification and switching. This last property is the most widely used in digital devices: by putting together several trasinstor you can build logic gates. Those are devices that perform the lowest level of computation: just a logical operation. If you link two transistor you’ll build a full working A N D logic gate. This is the scheme of the A N D gate. A and B are the input, Q is the output and T1 and T2 are the transistors. 0 identifies no current and 1 stands for current The A N D logic gate has three pins: two pins for inputs and one for output. The gate will output a fixed electric signal only if there is current in both the input signals. There are actually 16 binary logic gates — binary because they perform computation between two inputs — and thanks to the work of several mathematicians you can build every logical function. The Maths that studies the manipulation of logical values is called Boolean Algebra to the mathematician George Boole. Thanks to his studies, logical functions can be built to solve several different kinds of problem. You can’t solve any problem with a logical function: for instance, you’ll never compute the exact value of Pi as it would require an infinite amount of memory. There are also problems that can’t be solved for severe hardware limitations — such as play chess — because they would require eons for calculation even with the most powerful computer in the universe. Computer Scientists talk about complexity classes and probably the hardest question in Mathematics is about this subject. Put several logic gates together and you got an embedded circuit. These devices can be very sophisticated: just think that the C P U inside your P C or Smartphone is actually an embedded circuit and can contain up to several bilions of transistors. This is the Die Map of a 5th Gen Intel® Core™. The area covered by Cage contains up to several milions of transistors. Want to learn more? This is just a brief introduction to the next stories. I’m going to write a series of stories to introduce my teaching method and build up all the required knowledge to start programming cool things. My plan is to make a complete series of tutorials to build from scratch some of the most advanced kind of softwares: artificial intelligences. I’ll make my lesson accessible to everyone and I’ll always use open source tools to show you the way I use to code. If you want to be always up to date with my new posts, just follow me on Facebook or Twitter.","['Programming', 'Teaching', 'Methodology', 'Coding', 'Codingbootcamp']",https://medium.com/the-natural-method/how-should-you-learn-coding-5d180a11998d,1,[],0,1,francesco,M,0.0,1.0
Matt McMahon,"Full Stack Web Developer, Skeptic, and Unapologetic SJW.","Great introduction to the typical for-loop, but JavaScript actually has a number of looping…",2017-07-09 12:13:29,medium,"Great introduction to the typical for-loop, but Java Script actually has a number of looping mechanisms. A better for-loop for “iterables” like arrays is the for…of statement. To implement your Ruby loop, you would do something similar to this:const numbers = [1, 2, 3, 4, 5]for (let num of numbers) { console. log(num)} The array also has a few looping methods that you could use. For example the array’s humble #for Each method is almost identically to Ruby’s each:const numbers = [1, 2, 3, 4, 5]numbers. for Each(n => console. log(n)) One of the challenges when learning Java Script is that there’s never one-true-way to do a thing. You’ll sometimes want to do things imperatively (like the original for loop), more declaratively (like the #for Each method), or something in between (like the for…of loop). Happy Java Scripting!","['JavaScript', 'Ruby on Rails', 'Codingbootcamp', 'Students', 'Programming']",https://medium.com/@mmcmahon/great-introduction-to-the-typical-for-loop-but-javascript-actually-has-a-number-of-looping-1e34f9959ab0,0,[],0,0,matt,M,0.00021192726656211588,0.9997880727334378
AngelHack,"AngelHack ignites the passion of the world's most vibrant community of code creators + change makers to invent the new and make change happen, together.",Deciding Between a Bachelor’s Degree and Coding School,2018-09-12 20:17:10,medium,"Deciding Between a Bachelor’s Degree and Coding School For all the coverage of millennials struggling to find jobs in today’s changing market, one labor statistic is especially astounding: each year there are nearly nine times the amount of computing jobs open as there are freshly graduated Computer Science majors to fill them. What’s more, this field continues to grow at a pace nearly three times the national average. So if there are so many well-paying jobs available in a growing and exciting field, what exactly is keeping people from snatching up these positions? The problem stems not from a lack of willing applicants, but from a lack of adequate education options. Colleges and universities cannot churn out enough qualified graduates to meet the demand for programmers, developers, and data scientists. To be sure, university Computer Science departments have grown rapidly over the last decade as a reflection of the surging job market for computing. But this growth is not nearly enough to fill this nine-fold employment gap. For one thing, these are coveted admissions slots and not everyone gets in. For another, C S is among the academic disciplines with the highest dropout rates. And because many computing jobs have a ring of prestige to them, many assume that a formal degree is necessary to succeed in the field. This assumption keeps people in their late 20s and older from seriously considering this field as an option should they be looking to change their career path. After the college age-group, most people already have student debt and/or serious financial or familial obligations that make it extremely difficult if not impossible to attend a four-year degree program in Computer Science. Against this backdrop, coding bootcamps truly couldn’t have arrived at a better time. The coding bootcamp model of education is a natural and necessary development given the rapid job growth in the computing sector. By offering a rigorous, accelerated curriculum with a flexible and affordable tuition model, bootcamps are making careers in the tech industry accessible to a diverse and dedicated population that may have otherwise never been able to get a foot in the door. The following infographic from Whats The Host shows that the demographic statistics of U. S. coding bootcamp grads and U. S. Computer Science grads are starkly different. After all, not every aspiring developer is fresh out of high school and both capable and willing to take out four academic years’ worth of student loans. Different life situations call for different choices. Here are some of the most noteworthy differences that an aspiring programmer should consider when deciding between a coding bootcamp education and a Bachelor’s degree in Computer Science:","['Programming', 'Codingbootcamp', 'Coding', 'Education']",https://medium.com/angelhack/deciding-between-a-bachelors-degree-and-coding-school-590431ac3691,9,[],0,1,angelhack,Unknown,Unknown,Unknown
Clint Schmidt,Former CEO at Bloc. I build growth companies.,Don’t Believe The Hype: Coding Boot Camps Are Just Getting Started,2017-11-03 03:59:48,medium,"Don’t Believe The Hype: Coding Boot Camps Are Just Getting Started Flickr / Erin Sparling Several recent reports have concluded that the coding boot camp industry has already peaked. As evidence, these reports cite the closing of two early players in the industry and a recent round of layoffs at another established school. Any experienced economic analyst, however, will tell you that a few closures and layoffs are not equivalent to a major industry shakeout. You have to understand the fundamental dynamics driving the industry. Given how quickly the coding boot camp industry has grown since the beginning of the decade, what we have witnessed recently is more likely a necessary and even overdue market correction. According to Course Report, the coding boot camp industry has experienced 954% growth over the past five years. By any account, this constitutes rapid growth, and if anything, it is surprising that the recent market correction did not come sooner. But that’s not the real story here. Insatiable Demand for Technical and Design Talent Marc Andreessen was prescient when he declared that “software is eating the world”. The market demand for software development and design talent has multiplied over the last 30 years, which will drive growth in any educational programs that effectively fill that skills gap. Specifically, growth in coding boot camps will come mostly from online coding boot camps that serve a demographic of working adults for whom in-person boot camps and on-campus college degrees remain impractical and/or prohibitively expensive. The coding boot camps that stumbled earlier this year shared one common attribute: They were both intensive in-person, on-premise programs. While there will no doubt continue to be demand for an in-person, classroom-based format, there are two reasons why continued high growth of on-premise coding boot camps will be challenged. 1. On- Premise Programs Appeal To A Smaller Market On-premise coding boot camps compete for a relatively small demographic of potential students: those who have the luxury to go without income for three to six months, pay $12, 000 to $17, 000 in tuition, and depending on their current location, move to a urban center, where most coding academies are based. This is clearly a small slice of the public. For most working adults and/or people with family commitments, and anyone else who doesn’t have the ability to attend an on-premise program, this model was never a viable option. As the C E O of Bloc, the first and largest online-only coding boot camp, I have had the opportunity to get to know these folks. They span different ages, backgrounds, and genders, and live in cities and towns scattered across the nation. What they share in common is a desire to acquire in-demand tech skills without quitting their current job, subjugating family responsibilities, or relocating or commuting to a physical campus. While some coding schools, like Bloc, have always operated online, some on-premise incumbents have responded to oversaturation and slower growth with forays into quickly-assembled online offerings. New entrants have also joined the fray to innovate with online programs, but the ability to reach a broader market isn’t the only reason for more focus on online models. 2. R O I is King The very low barriers to entry for on-premise coding boot camps has created urgency around the challenge of finding a sustainable model to support growth in a competitive market. Online models with lower operating costs have a considerable advantage here. With no physical facilities to maintain, online coding boot camp programs can share massive cost-efficiencies with students via lower tuition, while concurrently offering their students a more flexible part-time training schedule so they can keep their day job and “earn while they learn”. Combined, these factors significantly lower the combined financial burden of skills training for online students, improve the return-on-investment ( R O I) calculation, and make the training they need much more accessible. But even a more modest financial investment in online coding and design boot camps must deliver R O I in the form of higher graduate earning power, which begs the question of efficacy. As I’ve said for years, nothing says that online programs works like a very long list of graduates now working as developers and designers in the field. As more time-strapped, budget-conscious working adults discover how effective online models can be, the online boot camp market will expand to match the scale of the large market opportunity it is well-suited to address. So remain skeptical of breathlessly dire forecasts for all coding boot camps. The macro-level demand for coding and design boot camp grads remains prodigious, and the future is bright for models that can increase access and R O I for a massive segment of prospective students who cannot put their life on hold to go sit in a classroom again.","['Codingbootcamp', 'Education Technology', 'Innovation In Education', 'Design Education', 'From The Ceo']",https://medium.com/newsonthebloc/dont-believe-the-hype-coding-boot-camps-are-just-getting-started-955bee1560cc,5,[],0,80,clint,M,0.0016856563134072108,0.9983143436865928
Verity Honebon,,Good Code Karma – Verity Honebon – Medium,2017-07-17 23:32:17,medium,"Good Code Karma When I was a kid I believed in God. I don’t believe in God now that I’m an adult but I do believe in karma. Having had a religious upbringing, one of the only things I still believe in is the phrase: “ Do unto others as you would have them do unto you”. I think it’s a good life mantra to have and is mirrored by the more secular “what goes around comes around” —i. e. if you put out good vibes you’re more likely to get good vibes back. It makes sense both spiritually and scientifically as it’s been proven that mood contagion is a legitimate human behavioural phenomenon. Ever had your mood brightened instantly by a smiley person or a random act of kindness from a stranger? Or in the opposite way, your mood worsened by a dick head on the bus? That’s mood contagion at work. I believe you can practise good code karma by adopting the behaviours which you might wish to see in your perfect pair. To get at these, think about what would constitute a great coding session and breakdown the behaviours that contribute to a productive and fun day of coding. After giving this some thought myself, the qualities my ideal pair would have (and so the qualities that I aspire to when pairing) are as follows: Listens to their pair’s ideas, gives them careful consideration and devotes time to exploring them Puts away ego Practices patience Is open to explaining an aspect of their knowledge ( I can’t count how many times I’ve been taught a priceless piece of information by my pair). Is confident in asking questions Is not afraid to correct or suggest alternatives Approaches problems positively Respects their partner’s style and pace of coding We’ve been lucky in that our Makers cohort is smaller than normal (10 people in total, while the average cohort size is around 20), which means we pair often, know each other well and are familiar with each other’s coding styles. It’s an intimate group of smart and interesting people so pairing, for the most part, has been easy. However, sometimes for whatever reason, a bad day or an unhappy event could throw the balance and that’s where a more conscious employment of the aspirations can work to your benefit. If you act in the way you think your perfect pair partner would act I promise you will see a difference both in your code and your interactions with others.","['Programming', 'Coding', 'Codingbootcamp', 'Collaboration']",https://medium.com/@verityhonebon/good-code-karma-9274c4165532,0,[],0,5,verity,F,1.0,0.0
CodeClan,16-week intensive and part-time software development courses in Edinburgh & Glasgow.,How we got an app on the Play Store – CodeClan – Medium,2018-06-05 13:27:09,medium,"How we got an app on the Play Store Armed with two weeks of Java learning and one week of Android, three brave Professional Software Development students decided to make Android games and try putting them on Google Play. We had one week to produce something that reflected and consolidated our knowledge of Java and Android, and the three of us chose to make a game. There were many options for projects, but we picked games as we were drawn to the challenge of coding game logic. We were really excited to attempt to produce something that was good enough to put on the Play Store — and show our friends! Could you tell us a little more about each of your projects? Jaime: Coding Bootcamp Student Simulator is all about balance. A game where a student takes 16 weeks through the scary world of studying software development. Every day the player will need to take a decision that will affect them in unexpected ways, leading them to failing the course or finding a proper job. Ewa: For this project I built a puzzle game called Ghost Sweeper — I based the game logic on the classic Minesweeper but invented my own custom theme, so instead of searching for bombs on a minefield the player’s goal is to trap ghosts hiding on the board. Marta: I made Stabagotchi, an idle tapping digital pet. You can tap on him to give him love, and look after him by feeding him to keep his health up. I also added a little twist at level 5… Where did you get your inspiration for your project from? E: I knew I wanted to create a fun app that my friends and family could enjoy (while giving me valuable user feedback), but also one that would allow me to revise topics we’d covered in class and explore a variety of user interactions with a mobile device, for example short and long clicks or rotating the screen. A: Minesweeper-like game ticked all those boxes, plus it presented me with some interesting logical challenges, such as how best to calculate the number of ghosts in direct vicinity of a field on the board in order to display it as a hint to the player. J: My inspirations were very clear. I wanted a challenging game that could be played with just one finger and based on our life as Code Clan students. Then, it was after playing Unicorn Startup Simulator (developed here in Scotland) when I discovered what I wanted to do. Decisions games are really easy to understand for any audience, can fit on any screen and just deciding the events was fun enough to encourage me to think of more and more surrealistic cards for the app. You had one week to complete the project. How did you find it? M: It was definitely challenging to have only one week as it was easy to get carried away with features. I had a really clear picture of what the game would be if it were a “proper game” so I had to reign myself in with a clear basic specification. My extensions were really modular so that once I had the finished product, adding each extension would add one complete feature but not depend on anything else. I used trello to stay organised which really helped. J: Like Marta, I was afraid that I would get carried away by all the things I wanted to add, something I suffered during my previous project. So this time, I decided to plan my project very seriously. I spent the whole first day just diagramming what I should do. After that, it was really easy to fly over the development just following my diagram. What was your favourite feature of the app? E: I’m really happy that I managed to introduce difficulty levels to Ghost Sweeper. It was the last extension I had time to build, however it was much needed, as initially I made the game almost impossible to win for anyone but the most experienced players! M: My favourite feature was the first extension that I implemented, which made the game actually playable — time. Each second, Taco’s health points goes down by one and this prompts the user to feed him and sets the game in motion. I researched how to use time in Java/ Android and I found that I would have to use multi-threading, which was intimidating at first but it actually all came together in about 30 minutes of coding! I also of course enjoyed implementing the plot twist at level 5, even though I didn’t have much time to do so. What was the biggest challenge you faced during development? E: I spent a long time working on a single function which uncovers a larger part of the board if a player taps on a field which isn’t directly next to a ghost. I knew that what I needed was recursion, which is a process in which a function calls itself — I first came across it during the pre-course work, however the sheer idea seemed completely mind-boggling to me at the time. The moment when I finally got it to work was incredibly fulfilling, and it more than made up for the hours of work! J: Impostor Syndrome. Definitely. There was a moment during the week where I thought that the whole idea of my project was worthless. I found it simple in mechanics, even when the logic behind was complex, and I thought I wasted several days following an idea that I should have dropped the first day. It was very hard and all I needed was a proper rest and a chat with someone. It’s really easy to turn inwards upon oneself on these project weeks. Our goal is one week ahead, there are no classes and everyone’s working on their projects, so you just forget that you’re surrounded by people experiencing the same feelings. How did you find the process of putting the apps on Play Store? M: It was much easier than I expected. I managed to get a debug version of the app to put as a release on github, which triggered us to think about making a signed A P K and potentially put it on the Play Store. Our instructor Pawel took the initiative to create a Code Clan account on the Play Store. J: The key point of releasing the apps came after installing Ewa’s and Marta’s games on my phone. It increased my wish of seeing my own app there, for real, even more so after finding myself playing with them at home. Luckily, Google Play has a really good tutorial on how to publish and create signed app files, so it was a matter of half an hour to deploy the app. E: I felt super chuffed when the three of us became “published” Android developers. One thing I found slightly disappointing was that the icon with a cute ghost which I chose for my app wasn’t displaying on newer phones. Luckily it didn’t take me long to research the solution, and after uploading a version of my app with a new adaptive icon to Play Store, I was excited to find that the game automatically updated on the phones of people who had previously downloaded it! What one tip would you give to any Code Clanners who are about to do their project? E: Don’t spend all the time working on your own. Talk to others, especially if you’re stuck on something. Even if their projects are very different to yours, they might have come across the bug you’re trying to fix, or could help you brainstorm a solution to a problem you’ve been stuck on for hours. Sometimes all you need is just a five-minute chat to have that eureka moment. And who knows, maybe you’ll also help them with something in the process? J: At this point on the course everybody has experienced Object- Oriented Principles, and I think this is the most important part on a project this size. Keeping things simple, using single responsibility on the methods you write and, what helped me a lot, commenting and cleaning your code are your main tools. This will allow you to move really quickly through your code when you have over 20 files. M: I would recommend that you set yourself a really well-defined specification that has the minimum coding you’ll need to do to get it working, even if it doesn’t have an interface. This means that you will have a well-tested code base, which will make the coding of the interface easier. Originally published at codeclan. com on June 5, 2018.","['Android', 'Coding', 'Codingbootcamp', 'Learning To Code', 'Career Change']",https://medium.com/codeclan/ewa-jaime-and-martas-journey-to-an-app-on-the-play-store-c8097d346ba7,0,[],0,0,codeclan,Unknown,Unknown,Unknown
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Are Online Coding Bootcamps Still Important in 2018?,2018-03-13 14:21:02,medium,"Are Online Coding Bootcamps Still Important in 2018? With a growing number of online resources on coding and web development, you may be wondering, “are coding bootcamps still important in 2018?” The answer is unequivocally yes. In today’s tech-driven world, every company is a technology company. Code powers our digital world — every website, app and computer program relies on code to operate, making programmers and engineers the new architects and builders of the digital age. And the path to becoming a programmer has never been more accessible than with remote and online coding bootcamps. Here are our 5 reasons why learning to code — especially through remote and online coding bootcamps — is still important in 2018. 1. Demand for programmers is high Though it’s more difficult to land a programming job now than it was a few years ago, the demand for programmers is still high and only continuing to increase. The number of job opportunities in web development is expected to increase by 27% by 2024, according to a report by Modis. And of those job opportunities, Java Script is the most in-demand skill, according to this report based on Indeed and Gooroo data. 2. The starting salary for programmers is high Money isn’t everything — but if you’re looking to up your salary (who isn’t?), learning to code could help you increase your paycheck. More than a third of the highest paying jobs in the U. S. right now require some familiarity with computer programming, according to a recent report from job search platform Glassdoor. 3. Learning to code gives you the freedom to build your own career Learning to code gives you the freedom to build your own career. Because demand for programmers is so high, possessing the ability to code in multiple languages allows you the flexibility to go anywhere in the world and still be able to find a job. Coding allows you to be location-independent. Alternatively, you can strike out on your own and utilize your coding knowledge as a freelance programmer. Whether you build your own app or consult on other companies’ projects, you can design your career to work for yourself. For 2 more reasons that online coding bootcamps are still important in 2018, read our original post. — Ready to learn to code? Check out Hack Reactor’s online full-time immersive and part-time programs that you can complete remotely from anywhere. Originally published at www. hackreactor. com.","['Programming', 'Coding', 'Codingbootcamp', 'Remote', 'Bootcamp']",https://medium.com/@hackreactor/are-online-coding-bootcamps-still-important-in-2018-6a82a799c152,0,['Hack Reactor'],1,1,hack,Unknown,Unknown,Unknown
Anthony Jarina,,Fitness Guru to Coding Neophyte: Pt 2 – Anthony Jarina – Medium,2017-03-01 15:50:31,medium,"Fitness Guru to Coding Neophyte: Pt 2 I’ve heard it called a “portfolio life”. As a matter of fact, I just finished reading a book called The Art of Work by Jeff Goins that introduced me to the term. It describes the idea that gone are the days of working for a company fresh out of high school and retiring with a pension and a gold watch. Now we pursue our careers to whatever end and what we carry with us — instead of a job title — are the lessons those successful or failed attempts at our passions teach us. We develop experience, and it could be all over the map. That’s certainly what I have done. In addition to being a massive video game lover, I lost hours upon hours drawing, painting, and working on puzzles or other logic games. I often received praise for my output as well. I can remember like it was yesterday actually considering going to art school before I talked myself out of it because it flew in the face of conventional logic: go to college (a proper four year university), and work at the same job all of your life. Why am I telling you all of this? Because it took me this long to realize that I’m finally doing what I always wanted to do. I worked as a trainer for years because I was good at it. I went into nursing school because I was desperate for stability, financially and professionally. With Coding Temple, I found a crossroad where financial and professional stability converge with something I am good at. Plus, I get to do something fun? Build apps and websites and maybe even video games down the road? Sounds like the perfect opportunity for a closet nerd like me.","['Entrepreneurship', 'Career Advice', 'Career Change', 'Coding', 'Codingbootcamp']",https://medium.com/@anthonyjarina/fitness-guru-to-coding-neophyte-pt-2-677e06d5e623,1,['Coding Temple'],1,0,anthony,M,0.004907680596533925,0.9950923194034661
Hack Reactor,"Providing the 21st century CS degree. We turn talented beginners into professionals through our insanely productive immersive program, in-person & live online.",Alumni Spotlight: Dylan Shelters’ Journey from Support Specialist to Senior React Engineer,2018-08-14 13:01:01,medium,"Alumni Spotlight: Dylan Shelters’ Journey from Support Specialist to Senior React Engineer Picture courtesy of Wikimedia Dylan Shelters was always interested in science. Growing up in in a small community in Topanga Canyon, which is located outside of Los Angeles, Dylan was able to enjoy the 300-acre wildlife nature reserve that was nearby. “ Growing up as a kid, I always had a fascination with science, my dad always had issues of Popular Scienceor mechanic magazines lying around. I was always super into that. ” In high school, Dylan enjoyed math and science classes, but when he was applying for colleges and trying to decide on a major, he wasn’t sure what he wanted to study. He ended up choosing to study Biochemistry and attended Chico State. “ I loved learning about chemistry. I was the opposite of everyone else; I loved all my lectures and I thought the labs were boring. But when I graduated from Chico, I still didn’t know what I wanted to do with my life. ” Dylan Shelters Dylan’s first job out of college was working for Baxter, a biopharmaceutical company. However, his love of chemistry didn’t translate into love for biopharmaceutical work. At the convincing of some of his college friends, Dylan quit his job and moved up to the San Francisco Bay Area without any concrete plans in terms of his future career. “ I had always been kind of interested in programming… I had a hacker friend in high school, so I pretended to read a book about assembly language. I read like 2 chapters and got ‘hello world’ up and that was it. I moved up and saw that coding was pretty big here. ” However, the financial pressure of being unemployed trumped his curiosity for programming, and he focused on gaining steady employment. After working a temp job in downtown San Francisco, he took on a new opportunity in sales at a tech company. “ I end up getting a job for a tech company in San Francisco doing sales, thinking ‘ How hard can it be to talk on the phone?’ Turns out it’s pretty hard. So, I didn’t do well in sales but I really loved the company, like there was a lot of camaraderie that I hadn’t had in my previous soul-crushing job in biotech. ” After working at Five Stars in sales for about four months, the company was able to move Dylan into a support position, helping the company’s 10, 000+ customers use the platform. “ I moved to support and that actually was an awesome opportunity, because one, I do like being technical, I also like working with people. It was a skill I developed — I was born very shy and had to learn social skills. Once I did, I really enjoyed them. There, I got to be on the phone and talk with people, and more importantly, learn a lot about computers. ” Dylan found himself doing very well in his new role, , being promoted to senior support specialist within 6 months of starting his support position. However, helping users out became repetitive over time, and Dylan began thinking about his next career move and with the encouragement of the engineers he worked with, began learning more about programming on his own. He started out by studying Python but quickly realized that with the breadth of information available, a structured curriculum would help him focus his learning. “ When you’re learning on your own, for me the hardest part is I don’t know what comes next because there’s no sequence to any of these steps. They’re all just random things here and there. And it’s like if I wanted to build something and get it deployed — first of all I barely know what deployment means. Second, what technologies are used? Part of it is that there’s so many different options for everything, period. That’s one of the reasons why I knew I needed a boot camp, to focus and just learn this [technology] and then figure the rest out. Because I had no idea where to start, and even if I did start one thing, but what’s really the next important thing to learn?” When it came to picking out a bootcamp, Dylan was only interested in Hack Reactor. At Five Stars, there was an engineer who had just graduated from Hack Reactor who started working at the same time as Dylan, and Dylan saw him do very well in his role there. However, Hack Reactor had been on his mind since he had moved up to the Bay Area. Shortly after he had moved, a friend mentioned to him that the startup he was working at had hired many Hack Reactor grads recently, which was, in fact, one of the reasons he began working through Code Academy after moving, but had dropped it off as he took on new jobs. “ It was once I got more stable, it was like let’s go back to thinking about what I want to do. Looking at the other side of the office at the devs, they come in, they have a chill schedule, they just think and that’s their job and can support themselves in the Bay Area. That’s definitely what I want to do. ” After passing his technical interview and getting accepted to Hack Reactor, Dylan quit his support job at Five Stars and was able to prepare for his time as a student by working through the Precourse material. After quickly completing the Precourse curriculum, Dylan started at Hack Reactor’s San Francisco Campus in February 2017, ready to learn. However, the program turned out to be more challenging than he expected. “ Hack Reactor was super humbling. I’ve kind of always described myself as an ambitious slacker. So I’m usually smart enough to get away with doing not too much. … I did well the first couple of weeks, but then I started to not finish my sprints, and I started to not pass the weekly quizzes. ” To learn more about Dylan’s journey, check out our original post. Interested in starting on the same path? It all began at Hack Reactor. Learn more about Hack Reactor’s full-time and part-time programs. We’re online in S F, Austin, N Y C, and L A. Originally published at www. hackreactor. com.","['Hack Reactor', 'React', 'Engineering', 'Programming', 'Codingbootcamp']",https://medium.com/@hackreactor/alumni-spotlight-dylan-shelters-journey-from-support-specialist-to-senior-react-engineer-79676a277cb6,4,['Hack Reactor'],1,0,hack,Unknown,Unknown,Unknown
Mario Posadas,Ironhack Expansion Lead,How to boost your life in the biggest LatAm startup scene,2018-05-22 12:08:34,medium,"How to boost your life in the biggest Lat Am startup scene Have you ever wondered how to be part of a technological era that happens very quickly and goes in front of your eyes almost unnoticed?, I’m sure you have, but also you have asked yourself where you should start and here is where everything becomes blurred. Well, here I will give you a tip to not start from scratch and basically I’ll tell you the secret to become a full stack developer in a very acceptable period of time even if you don’t know to code the infamous ‘ Hello world’ in the most basic program languages. Before sharing the holy grail of technological development and innovation, let’s take a step back and start by analyzing a bit the largest and most mature technological ecosystem in Latin America, the Brazilian tech and financial capital, São Paulo. The most mature scene in Latin America São Paulo is the largest innovation ecosystem in Latin America, and despite its bureaucracy’s poor reputation, the number of startups, investment funds, accelerators, startup events and co-working spaces grows at an increasingly accelerated pace. This creates a virtuous circle and becomes a spectacular center of innovation and technology where there is a huge demand of digital creators and experts in data management, just try to deep dive into the number of positions published for full stack developers, U X / U I designers, Dev Ops and Data Scientist and then you will realize, there is a huge opportunity here. Let’s see some numbers: According to Startup Genome 2017 report, the ecosystem value is of 3. 45 Bn, the largest in Latin America. São Paulo is #22 on Global Startup Ecosystem Report 2017 and #1 not only in Brazil but also in Latin America The 33% of Brazil G D P is concentrated in São Paulo São Paulo has up to 2, 700 active technology startups and growing. Want more? The Brazilian city is a very attractive market for investors who want to start technology companies, not only because of the aspects mentioned above, but also because of the size of its market, this financial center concentrates more than 12 million residents and on the top of it, the federal government of Brazil is aware of this positive dynamic and has triggered efforts to support the ecosystem growth such as the Startup Brasil initiative, a national startup acceleration program created by the Ministry of Science, Technology, Innovation and Communication. Let’s take a look on the key players in São Paulo’s ecosystem Accelerators: Startup Farm: one of the best known acceleration programs in Brazil, they have accelerated more than 280 startups and have programs ranging from 5 weeks to 6 months. Among the accelerated startups are Rapidoo, World packers and Beautydate. Aceleratech: their acceleration programs are designed for startups that are either growing from scratch or just need to grow faster and also they support companies seeking for innovating. They provide a wide range of opportunities from entrepreneurial training to networking and investments. Within its portfolio we can find startups such as Skyhub and Fundacity. Darwin Startups: Its acceleration model is based on startups that already have a M V P rolling with at least a little traction. They offer mentorships, capital and market access through their corporate partners, especially for areas such as fintech, insurtech, big data and telecom. Among its startups we find: Pague Veloz, Meetime and e P Health. More big players are: Baita, Acelera Partners and Wayra. Co-working spaces Cubo: founded by the largest private bank in Latin America — Itaú — and by the investment fund Redpoint eventures, this space is committed to develop the tech ecosystem by inspiring and connecting people. inova Bra habitat: It’s a gorgeus co-working space founded by Bradesco, one of the largest Brazilian banks. This space is focused on promoting innovation by bringing together the largest companies and startups with investors into the same space and providing mentoring. We Work: with its $ 7. 6 Bn funding and having less than a year in the Brazilian market, We Work has already opened 5 locations and is about to open 2 more. Google Campus: located in the heart of São Paulo, Google has opened this space to promote entrepreneurship. This campus is part of the exclusive Google network, with only 7 campuses in the world. Impact Hub: operates a workspace and social incubator that inspires, connects and catalyzes entrepreneurs that seek deep social and environmental impact. Other relevant spaces are: Spaces, Distrito and Plug. Prodigal children Nubank: the second Brazilian startup to reach the precious unicorn has established itself as a reference for any fintech looking for inspiration. With more than 3 million credit cards issued, Nubank seeks to continue innovating the industry. Get Ninjas: this web platform that hires local services such training, home renovation, consulting services and cleaning among others has raised $16. 8 million and is one of the players to follow in 2018. Trocafone: founded by Guillermo Freire and Guillermo Arlanian, has raised more than $48 M, its last round is $15 M leaded by Rocketship Ventures and including Lumia Capital, Mercado Libre, Castor Ventures and Pedralbes Partners. Definitely one of the Brazilian startups to follow in this year. Quinto Andar: this rental apartment marketplace was founded in 2013 by André Penha and Gabriel Braga and it has raised $20. 8 M since then, including a round of 12. 6 M in series B leading by Qualcomm Ventures and Acacia Capital99: the ridesharing app was the first Brazilian unicorn to be acquired in an operation that reached $1 Bn. Didi, the Asian giant has taken control over the operations of 99 to strengthen its expansion in Latin America. Also check: Rapidoo, In Loco Media, Cuco, Jeitto and Smart M E I Home of international big players With thousands of active startups and lots of support, São Paulo is not only the best place to start a business in this key Latin American country, but also is often labelled as the most mature startup scene because is home of international headquarters such as Google, Uber and Airbnb. And if that were not enough, according to Angel List, the valuation of the Brazilian ecosystem is 4. 1 Bn -vs the $3. 45 Bn of Genome’s 2017 report- with more than 1, 500 investors providing education, funds, mentoring and entrepreneurship development spaces, it has been possible to reach very accelerated rhythms of growth. Some investment firms are Monashees, D G F, Redpoint e Ventures, S P Ventures, Antera, 500 Startups, B B I Financial, and Bonanza Investments. The raw material As you can imagine within this dynamic there is a common factor that becomes the cornerstone of technological development …exactly, people. Local talent is the fuel that moves the machinery, however there is not always enough supply of digital devs, reason why the average salary of a full-stack developer is in a competitive average in São Paulo, around 1, 300 U S D and for an experienced desenvolvedor reaches 2, 900 U S D or more. If you want to know more, check out this calculator that Geekhunter has created on his website. You already begin to glimpse it, right? In a world where technology is the key piece of innovation and therefore a very important part in the economy of a city, knowledge about digital development becomes mandatory and hence the object of desire for many companies, specially for startups. The secret…“ Motivation makes things happen” I’m sure you already know what I’m talking about and of course the million-dollar question is how to achieve it, how can you get a job as a developer in such a competitive ecosystem? and also you wonder what are the options to acquire such valuable skills, right?, well from my point of view there are a few things that you can try, but at first it’s important that you define your motivation, let’s talk about it. Motivation makes things happen and then the first thing you have to ask to yourself is, why are you becoming a digital creator, is it because you want to change something in the world? or maybe you just want to change your current job and make more money? Try to change the object of your why, sometimes we do things for the wrong reason. Do we do that task to get it done, or to learn something new? Just shifting your why can you light your fire. Need some help? Once you have defined your motivation, you will surely begin to wonder what options you have to become a developer and how to find a job where you can put these skills into practice and learn new things. Well I have good news, having read this blog have increased your chances in a forceful way. Let’s see some basics that you should do Online education: there are several online options that can help you clarify your mind, you can look for tutorials or e-learning platforms such as Codeacademy, Udemy and Freecodecamp. These platforms will definitely give you tools to take your first steps as a digital creator, they have a wide variety of courses and content explained in a dynamic and entertaining way. Stay tuned and socialize: this will be your secret weapon to define your opportunities in the future. Creating a network of contacts always opens up new opportunities and to do so it’s important that you show up for events that are related to technology, entrepreneurship and programming and for that there are many tools that you can use such as Meetup, Eventbrite and Facebook itself. Ironhack“ Top 3 best coding bootcamps in the world Course Report and Switch Up” And the best news are! Ironhack ranked among the top 3 global technology schools that offer intensive programs — bootcamps — to learn how to develop as a pro hacker, has announced its arrival to São Paulo! Today, after having graduated over 1300 students in the U S, Europe and Latin America, Ironhack educational model is paving the way of the future and letting people to reach their dreams. No doubt this is an excellent option to join the tech world as a developer. In this type of bootcamps an immersive experience is lived where relatively fast technical skills are obtained, besides living a unique experience as a student. So now you know it, if you live in São Paulo and you are looking to hack your life, you are in the perfect ecosystem to achieve it!!! and you also have a huge amount of options at your disposal to be part of this digital transformation and all you need is to find your dream and pursue it. It does not matter if you do not have experience coding or if your career is not related to technology or at least you think it’s not because today everything is related to tech and there is always room for innovation. If you are an architect, merchandiser, doctor, engineer, student, driver of any app, gamer, entrepreneur or just a guy that wants to change his/her life, you just need the best attitude and a good motivation. If you liked this post, please share and comment! and also join to our Meetup group in São Paulo for free upcoming events, workshops, beer, pizza and a lot fun!- If you need more details about Ironhack bootcamps visit www. ironhack. com or write me a direct message to mario@ironhack. com and I’ll be glad to help.","['Startup', 'Codingbootcamp', 'Ironhack', 'Technology', 'Career Change']",https://medium.com/ironhack/how-to-boost-your-life-in-the-biggest-latam-startup-scene-6b2196f3b096,6,['Ironhack'],1,2.1K,mario,M,0.007525325615050651,0.9924746743849493
Caleb Harnell,Coder Academy Fast-track student — https://www.linkedin.com/in/caleb-harnell-72abb5143/,Extracting hash values from user input – Caleb Harnell – Medium,2017-08-03 09:24:13,medium,"Extracting hash values from user input Just throwing up a quick walkthrough of some code from today! One of today’s challenges asked us to create a ruby application to perform the following task:#3 — Experiment with dates Create a ruby application that requests the name of a classmate, and displays their birthday and your birthday. To achieve this, I first created a hash which I named ‘bday’, which consisted of the names of classmates as the key and their birthday (as a string) as the value:bday = { Tom: “15 December 1994”, Rebecca: “10 March 1990”, Jim: “07 September 1989”, David: “31 July 1985”} I then used ‘puts’ to prompt the user for a classmate’s name (and removed the extra line with ‘chomp’:puts “ Enter the name of a classmate:”classmate = gets. chomp What I then needed was a method of matching the user’s input to a key (classmate’s name) within the hash. To achieve this i used the . each iterator:bday. each do |key, value| The next line of the method is an ‘if’ statement to compare the hash key to the user’s input:bday. each do |key, value|if key. to_s == classmate Notice . to_s is used on key to convert the hash keys (which are currently symbols) into a string in order to compare with the user’s input (which is by default a string). We can then use puts to display our outcome, plugging in both the classmate from the user’s input and the corresponding hash value:bday. each do |key, value| if key. to_s == classmate puts “#{classmate}’s birthday is #{value}” puts “ Caleb’s birthday is 11 January 1991” end bday[key] = valueend I added my own birthday as a plain string and not within the hash because its going to be a constant anyway and partly because my brain was well and truly fried at this point. Hope someone find this useful!","['Ruby', 'Coding', 'Codingbootcamp', 'Code', 'Hashes']",https://medium.com/@calebharnell/extracting-hash-values-from-user-input-b2ea3acd6280,0,[],0,9,caleb,M,0.0021275981940658043,0.9978724018059342
Kenneth Teh,,Alpha Camp: Week 1 of 12 Learning Journal – Kenneth Teh – Medium,2017-10-01 16:18:34,medium,"Alpha Camp: Week 1 of 12 Learning Journal A new beginning Back to a classroom environment for the first time in years! Okay, not that long, but it’s still been a while. I’d forgotten how much I enjoyed meeting new people of completely different backgrounds with no agenda other than making friends! As an adult (stay with me on this), we don’t often get this opportunity. I suppose I do experience something similar at church, but there is a difference because in that setting when I meet someone new, I tend to be welcoming someone to church. To my 12 classmates ( I hope I didn’t leave anyone out…), it’s been an awesome first week with you! The rest of this going to be in the O R I D format, so forgive me if it ends up seeming rather robotic!1. Objective: What did you do this week? Ruby programming! I’ve done the Codecademy version before (as you would know if you follow my blog), but those were really just the basics of syntax. Watched the Lynda videos on Sunday before, and they were really helpful — highly recommended. At this bootcamp, we ran through the basics and then dove into Codewars katas and Leetcode exercises. One of the Codewars exercises Culminated with building a tic-tac-toe game with my teammate Joelle. Only got to level 2 (building a “computer” player that plays random moves), and my level 3 “smart A I” only works for the first two moves so far… may revisit it when I have time. Tic Tac Toe Game!2. Reflective: How did you feel this week? Well honestly the week was tiring (more so than work) because I was in a new environment and pushing myself to learn as much as I could. I do find that I thrive in academic environments (no, Greg, not going for a Ph D), because I love challenging myself to do better. And like I’ve already mentioned, meeting new people is great. Everyone’s quirks (and blur moves — not naming names, but…) are still at the amusing phase, maybe because the pressure hasn’t hit yet! Haven’t laughed this much for a long time. 3. Interpretive: What did you learn this week? (not a lecture note) Any reflection, questions, and problems I need to keep an open mind and learn from everyone. I also need to stop my natural instinct to Google for solutions and snippets of code, so that I can force myself to learn the slow way — reading through documentation. Because Dev Docs is everything4. Decisional: What are you going to do next week? (plan or goal for the next week) More of the same! Realized that it really helps to be prepared for class. I think because we proceed at a much faster pace than in college, I can’t just skip the prep and wing it in class. That’s all from me this week!","['Programming', 'Alphacamp', 'Ruby', 'Codingbootcamp']",https://medium.com/@kennethteh90/alpha-camp-week-1-of-12-learning-journal-42e2d8f7a848,2,[],0,5,kenneth,M,0.004173731781003495,0.9958262682189966
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 58 — This is it! – conshus – Medium,2017-06-01 10:51:53,medium,"Day 58 — This is it!liner notes: Yesterday, more code. Today, more code. Haha Final project has to be completed today. This is it! Till next time. peace piece Dwane / conshus H I P H O Pand C O D E. com","['Hip Hop', 'Coding', 'Code', 'Codingbootcamp', 'Hip Hop Music']",https://medium.com/@conshus/day-58-this-is-it-415da71f7426,0,['The Iron Yard'],1,0,conshus,Unknown,Unknown,Unknown
Aaron Blackshear,"Full-Stack Javascript Developer in Dallas, Texas. Frontend Developer for CrateBind, LLC",Getting a job as a junior developer: Tips from a teen,2018-08-11 19:21:58,medium,"Getting a job as a junior developer: Tips from a teen“ Close-up of a businessman’s hands adjusting his tie” by Ruthson Zimmerman on Unsplash Getting your first junior developer position might be a little intimidating when you start your job hunt. Many of you reading this may feel unprepared or unqualified for most job postings you see out there, but I can assure you that this is not true. Although I may not be the most qualified candidate to help with this subject, I have my fair share of tips that I learned to teach you and get you your first junior developer position! To start, I would like to give you a brief history of my background with coding. ( Feel free to skip this section if you don’t care about me and are just looking for some juicy tips!) My Background Like most junior developers, I haven’t been coding for a very long time. I have only really been seriously developing for about 5 months (as of writing this). I attended a coding bootcamp in March of 2018. While I was there I learned Full-stack Javascript development and completed a few full-stack projects. I graduated in June of 2018 feeling confident in my ability to write code and solve problems. I immediately started applying for jobs and connecting with companies and recruiters on Linked In. Shortly after, I got a recommendation from a great friend of mine and got an interview. A couple days and a coding challenge later and I receive an offer letter as a full-time Frontend Developer in just under a month after graduating! Now that we have gone over my brief experience in the industry, lets get to the tips. Tip 1: Connections are Key If you only take away one tip from this article, then it should be this one. If you want to get a job as quickly as possible, you need to build connections! The chances of you getting a job from applying to 100 different jobs through Indeed or Glassdoor are slim to none. I don’t want to discourage you from applying because I think you still should, but the chances of your application sticking out from all the others are low. The best way to get interviews is through connections. Linked In is probably the easiest way to do this. Just look up companies that are hiring and send a message and connection to one of the developers there. Start up a conversation and be there friend! You aren’t doing this just for a job, you are doing it to build a network. Even if they can’t help you get a job, keep talking to them and build friendships. Another, and probably the most effective way, is to attend meet-ups. This is a great way to build a network and learn something new. Personally, I love attending the React meet-ups in Dallas. They are a great way to build connections and make some great new friends. Remember, you aren’t only doing this for the job. If you only connect with people to get a recommendation from them, then you are in the wrong place. Go to meet-ups, make friends, and your opportunity will find you one way or another. Tip 2: Continual Learning Whether you just got out of a coding bootcamp, graduated college with a C S degree, or are a self-taught developer who is ready to get their first job, you should always be learning everything you can. Most of you already know this, but the languages you know are always changing. New versions are coming out and sometimes it’s hard to keep up with everything, but if you really want to stand out from the crowd, then knowing the technologies you write code in will boost your chances of getting noticed. There is no-such-thing as knowing too much, only knowing too little. There is always something new you can learn that will help you write better code, or come out with a new feature on an app you are building. Although job hunting may be a job in and of itself, you should still make a job out of your free time. I know relaxing may seem very tempting, but I promise that it will be more worth your time to spend it building an application to put on your portfolio. Relaxing may make you happy now, but in the long run you will regret not utilizing that time better. I would recommend going deeper into a language you already know well, rather than learning something new. The only exception I would have to that is if you really want to get a job in a certain language, and in that case I say go for it! For everyone else, stick to what you know for now and learn everything there is to possibly learn about that. Go super into depth about every little detail and your value will jump tremendously! Courses are a great way to do this. You can purchase one from a site like Udemy, or you can go the free route and read articles or try to find some You Tube videos covering the subject. Tip 3: Persistence I understand that sometimes it can be a little discouraging to get turned down after an interview or not even get one at all. It happens to everyone and you shouldn’t let it affect your outlook on the future. You are going to get turned down, it’s just the cold hard truth. All you can do is learn from that experience and work to improve the next opportunity that arises. “ It’s not about how hard you hit, it’s about how hard you can get hit and keep moving forward” - Rocky Balboa I assume most of you readers have heard this quote before, but it’s still one of my favorites of all time. Getting a job isn’t always easy. Everyone has a rough patch at some point, but if you can just keep pushing and grinding through it, then I promise you that it will all be worth it. This doesn’t just apply to coding, but for everything. The harder you push yourself through those valleys, the stronger you will come out when you get to the top of the mountain. Staying persistent may seem difficult at first, but the more you try the easier it will become. Message senior or mid-level developers on Linked In and ask for some advice on how to get into the industry. Most of them will be kind and gladly give you some advice, and if they don’t, then thank them for their time and ask someone else. I would recommend meeting with them in person if at all possible. You should offer to buy them a coffee or lunch and talk about it in person. Not only does this help build your network, but you also get to meet with an industry professional and make a new friend. You want to be remembered as a smart and kind person who loves what they do, not just as a username asking for tips on how to get a job. Summary If you haven’t already noticed, I talked about building connections and your network a lot, so make sure that you are constantly on Linked In and attending meet-ups. Make friends, build connections, and have fun while doing it, because if you don’t love what you are doing, then why are you doing it at all? Thank you all for reading my article (even if you just breezed over it). I appreciate all of you for coming here and I hope you all enjoyed! Feel free to message me about any feedback or follow-up questions. I would be more than happy to help anyone out. Cheers!","['Programming', 'Codingbootcamp', 'Job Hunting', 'Coding', 'Tips']",https://medium.com/@ablackshear7820/getting-a-job-as-a-junior-developer-tips-from-a-teen-f5e368763e3b,3,[],0,6,aaron,M,0.007405247511598737,0.9925947524884012
Nabil Yafai,Full stack developer trying to not become obsolete,Taking The Plunge to Become a Software Engineer – Nabil Yafai – Medium,2018-05-13 17:33:25,medium,"Two years ago I began tinkering with the idea of becoming a software engineer. This post is about my decision to take a chance on myself by beginning a software engineering immersive bootcamp. Hello! My name is Nabil and I am from Brooklyn, New York. Before I decided to become a developer I worked various jobs from bartending and customer service to working in higher education. During my undergraduate studies I studied liberal arts and did not imagine that I would end up pursuing a technical career as a developer. At my last job I worked in admissions for an organization that specializes in cultural exchange programs. At first my interest in web development was purely from curiosity. I wanted to know how the apps and websites that had become an integral part of my daily life worked. My goal to demystify the web for myself led me to begin learning front-end web development via free online resources such as Codecademy and Free Code Camp. I was particularly excited about Free Code Camp because it allowed users that completed its curriculum to gain real-world experience by contributing to open source tools used by nonprofits. While working at a nonprofit organization, I witnessed firsthand the major impact technology can have on an organization and its clients and I wanted to work towards being able to use my skills to make a contribution. My initial plan was to spend a minimum of 10 hours/week learning in the evenings after work. It was really exciting learning new concepts and getting to apply the curriculum through front-end projects. Writing my first algorithms felt like solving puzzles and was surprisingly fun. Don’t get me wrong, at times it would be very frustrating like when my code would not run because of a single misplaced bracket. Having errors like that really made me appreciate clean code and comments as they have helped me debug my code much faster. As my interest in programming grew, I began spending more time reading articles and watching videos related to programming. The more I learned on my own the more I realized that I wanted to transition from my current career into a software engineering role. I love problem-solving and creating things and I was determined to turn this hobby into a career path. I realized that if I wanted to really take my skills to the next level I would need to dedicate myself full-time to learning. The free online resources were a great jumping off point that helped me learn a lot but I wanted a more formal training with a reputable school. I came across Fullstack Academy when I began doing preliminary research on coding bootcamps. I wanted a bootcamp with a cutting edge curriculum and one with a physical campus in N Y C. I liked that Fullstack placed an emphasis on pair programming. I love working with others and this was something I felt I was missing by learning on my own. During my research I discovered the N Y C Web Development Fellowship program. Being born and raised in Brooklyn, New York I was really excited about the opportunity for New Yorkers to receive a solid training/education in Web Development so that they could apply for great tech jobs with N Y C companies. This opportunity also helped me reconsider my timeline for applying to Fullstack since the program would be tuition-free. After careful consideration of all my options, I applied. The admissions process was bit nerve-racking but I was accepted into the fellowship program. Fast forward and I have recently completed the foundations phase of Fullstack’s curriculum and I am excited to move into the junior phase of the program where we will get to the bulk of the core curriculum. I’m looking forward to honing my Javascript skills and learning more about React, Node. js, and databases. After graduating from Fullstack I’m hoping to work for a company that values teamwork, innovation, and professional development. I am still figuring out what kind of developer I would like to be professionally but my goal is to be part of a team that strives to make an amazing product.","['Programming', 'JavaScript', 'Learning To Code', 'Codingbootcamp', 'Career Change']",https://medium.com/@nabilyafai90/taking-the-plunge-to-become-a-software-engineer-cc842074d38c,5,['Fullstack Academy'],1,50,nabil,M,0.029696969696969697,0.9703030303030303
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Something to Tell You – Emily Deans – Medium,2017-07-16 21:08:04,medium,"Something to Tell You It’s the Sunday afternoon before I head into my F O U R T H week at The Iron Yard. Wow. As cliché as it sounds, I honestly can’t believe that this much time has already passed. It simultaneously seems like the first day of class was yesterday and also a lifetime ago. Very strange dichotomous feels to be sure… This week is the last in the formal curriculum where we’ll be focusing on front-end development — though we can choose to return for our focal path of choice in the third month. Exactly one week from today, I’ll be gearing up for a head-first launch into Ruby and will be learning more about programming logic, databases, A P Is, and connecting to front-end applications. One of this weekend’s readings is entitled ‘ Understanding Remote Requests’ and the opening section of the article is headed ‘ How the Web Works’. Funny that we should be almost a month into a full-time, immersive program thats whole focus is “web programming” before seeing such a section pop up. While my initial thought was “ I’ve been using the internet for most of my life and have been studying web programming for the better part of a year… I know how it works!”, my almost instantaneous follow-up thought was “ Wait. How D O E S the web work?” The article starts out explaining U R Ls and H T T Ps and other things that upon reading made me realize that despite my use of the terminology quite regularly, and my daily use of the tools, I in fact, had basically no idea what they were. For those of you who — like me — were not super secure on the identity of these functions aside from the name, I’ll give a little sum-up based on my learning from the article. U R L ( Universal Resource Locator): — Tells the browser (where you view your webpage) where the server is, how to communicate with it, and what request/s to make of the server once the connection is made. — Made up of distinct components, including Protocol: how a browser will speak to a server (i. e. , ‘https://’ or ‘ftp//’) Domain: a human-readable name for an I P address that browsers use to send data to a server. Domains contain at least three components of their own, including — - Subdomain: i. e. , ‘www’ or ‘maps’- Second Level Domain ( S L D): the name you rent for your website (i. e. , ‘google’, or ‘brainpickings’)- Top Level Domain ( T L D): i. e. , ‘com’, ‘org’, or ‘gov’ H T T P ( Hyper Text Transfer Protocol): — A protocol, which enables the seeking and retrieval of resources (i. e. , H T M L docs). Another helpful way to think about H T T P is that it essentially establishes the rules for how to request website data and which sites you’re allowed to access. Pretty neat, huh? I don’t want to head too far into the weeds on some of the other lesson material, because I’m not sure that’s why you’re here, and — to be perfectly honest — there are many more articles on the subject presented by individuals who are far more qualified and articulate on such matters. I hope everyone is enjoying their weekends and enjoying the new Haim album as much as I am (seriously, it’s amazing). Relevant to the post only in that I‘ve had on blast while writing and now I can say that Haim was on my blog","['Web Development', 'Codingbootcamp', 'Women Who Code', 'The Iron Yard']",https://medium.com/@emilyldeans/something-to-tell-you-515f5e69ac9,1,['The Iron Yard'],1,2,emily,F,0.9979317746535663,0.002068225346433675
J.Lim,"Learning JavaScript, Vue.js, Sass, Python, Django | Github @hlim18","Summary of CodeSchool's ""Try jQuery"" – J.Lim – Medium",2018-05-24 15:56:25,medium,"Summary of Code School’s “ Try j Query” J L’s Coding Bootcamp Journey #5[ J L’s Coding Bootcamp Story] Series1.  Why I started a blog as a coding bootcamp student2.  Java Script “ Scope & Closure”3.  Java Script “ This”4.  Java Script “ Call, Apply, Bind”5.  Summary of Code School’s “ Try j Query”( Current)6.  Java Script “ This” — Advanced7.  Java Script “ Code Reuse” — Part 1–1: Decorators8.  Java Script “ Code Reuse” — Part 1–2: Functional Classes9.  Java Script “ Prototype Chains”10. Java Script “ Code Reuse” — Part 2–1: Prototypal Classes11. Java Script “ Code Reuse” — Part 2–2: Pseudo-classical Classes P A R T 1. Introduction to j Query[1–1. What is j Query?] In order to use j Query, you need to know H T M L(content), C S S(style), and Java Script(behavior). j Query makes the following things easy to do : 1. find elements in an H T M L document 2. change H T M L content 3. listen to what a user does & react accordingly 4. animate content on the page 5. talk over the network to fetch new content. How can we search through our H T M L document? Our browser organizes the H T M L it receives through the Document Object Model ( D O M), a tree-like structure created by browsers that helps us to quickly find H T M L elements using Java Script. When we go to a U R L, our browser starts receiving H T M L from that web page and the browser loads the H T M L piece by piece into the D O M. As it receives each element, it starts building nodes inside of our D O M. C O P Y R I G H T © 2018 Code School Java Script gives developers a language to interact with the D O M. 1. A web browser requests a web page through a U R L to a web server. 2. A web server sends the H T M L and other files needed to load that page including Java Script to the web browser. 3. The web browser is going to load the H T M L into the D O M. Once loaded, we can execute the Java Script sent over to interact with the D O M. Because each browser has a slightly different D O M interface, we use j Query to communicate with all modern web browsers. C O P Y R I G H T © 2018 Code Schoolj Query(document). ready(function() { <code>}); This code will only run once the D O M is “ready. ”[1–2. Using j Query] C O P Y R I G H T © 2018 Code School P A R T 2. Traversing the D O M[2–1. Searching the D O M]/* Using the descendant selector */$(""#destinations li""); // parent - space - descendant/* Selecting only direct children */$(""#destinations > li""); // parent - the sign matters - child/* Selecting multiple elements */$("". promo, #france""); // the comma matters C S S-like pseudo classes are the following:$(#destinations li:first""); // select the first item in the list$(#destinations li:last""); // select the last item in the list/* The index starts at 0 */$(#destinations li:odd""); // select odd items in the list$(#destinations li:even""); // select even items in the list[2–2. Traversing the D O M] C O P Y R I G H T © 2018 Code School/* Walking the D O M */$(""li""). first(). next(). prev();/* Walking up the D O M */$(""#vacations li""). last(). parent();/* Walking the D O M up & down */$(""#destinations""). children(""li""); // children(), unlike find(), only selects direct children P A R T 3. Working with the D O M[3–1. Manipulating the D O M] C O P Y R I G H T © 2018 Code School[3–2. Acting on interaction]/* Passing in a function */$(document). ready(<even handler function>); // The ready method takes an event handler function as argumentfunction() { // executing the function runs the code // between the braces}$(document). ready(function() { // this function runs when the D O M is ready}); C O P Y R I G H T © 2018 Code School[3–3. Refactor Using Traversing] C O P Y R I G H T © 2018 Code School When clicking “ Get Price” button, each button is removed when it should be. However, it’s still adding the price on every list item. C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School Rather than clicking on the button to show the message, we could allow travelers to click on the entire <li> element. $(document). ready(function() { $('. vacation'). on('click', function() {  var price = $('<p> From $399. 99</p>');  $(this). append(price). find('button'). remove(); });});[3–4. Traversing & Filtering] So far, all vacations packages have the same price : $399. 99. In order to give different prices for each vacation, we can do the following: C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School If we add different buttons to our web page, this click handler is going to be called for all of them. So, we need to make this more specific by using a C S S selector. This technique is called ‘event delegation. ’ We’re targeting buttons only if it’s inside a vacation class. C O P Y R I G H T © 2018 Code School We’ll write 2 event handlers for our buttons and highlight vacations with these traits. C O P Y R I G H T © 2018 Code School$('#filters. '). on('click', '. onsale-filter', function() { // 1. find all vacations that are on sale // 2. add a class to these vacations} C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School We clear the highlighted class on click and highlight only the targeted vacations. P A R T 4. Listening to D O M Events[4–1. On D O M Load] C O P Y R I G H T © 2018 Code School There are 3 j Query object methods of ‘slide’ : . slide Down(), slide Up(), and slide Toggle(). C O P Y R I G H T © 2018 Code School This code doesn’t work. In order to debug the issue, we could query how many nodes are on a page by typing the following:alert($('button'). length); // 0 The problem was that we didn’t include $(document). ready(). $(document). ready(function() { alert($('button'). length); // 1 <code> in the image above});[4–2. Expanding on on()] C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School We can extract the repeated part out and name our event handler. C O P Y R I G H T © 2018 Code School[4–3. Keyboard Events] C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School$(document). ready(function() { $('. vacation'). on('keyup', '. quantity', function() {  // 1. Get the price for this vacation  // 2. Get the quantity entered  // 3. Set the total to price * quantity });}); C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School[4–4. Link Layover] When clicking “show comments, ” we want to show comments for that vacation. Specifically, we want them to fade in. C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School$(this). closest('. vacation'). find('. comments') // find the . comments ul using traversing There are 3 j Query object methods of ‘fade’ : . fade Down(), fade Up(), and fade Toggle(). $(this). closest('. vacation'). find('. comments'). fade Toggle();// fade In() . comments on the first click// fade Out() . comments on the next click By the way, if we click on a link near the bottom of the page, the page jumps back up to the top of the page. To solve the problem, we need to understand what happens when the event occurs inside of the D O M. C O P Y R I G H T © 2018 Code School When an event occurs, it starts on the link and the click event will “bubble up” to each parent node. Eventually, it’s going to get to the top of ‘index. html’ and run the following code:<a href=""#"" class='expand'> Show Comments</a>// follows the link! (pop it back up to the top of the web page) C O P Y R I G H T © 2018 Code School P A R T 5. Styling[5–1. Taming C S S] We can make all . vacation elements clickable to allow people to click on the <li> element for changing the style. C O P Y R I G H T © 2018 Code School To hide the price when we click the <li> element for the 2nd time, we could use “toggle Class” instead of “add Class. ”[5–2. Animation] Let’s make each of vacations jump up a little bit when we select them. $(document). ready(function() { $('#vacations'). on('click', '. vacation', function() {  $(this). toggle Class('highlighted');  $(this). animate({'top': '-10px'});  // will adjust a C S S property pixel in order to animate it });}); C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School C O P Y R I G H T © 2018 Code School[ Note] This is a summary of ‘ Try j Query’ Thanks for reading! 💕 If you like this blog post, please clap👏 J. Lim🌲 at Git Hub & Twitter.","['JavaScript', 'Jquery', 'Code School', 'Codingbootcamp', 'CSS']",https://medium.com/@j_lim_j/summary-of-codeschools-try-jquery-751db598de1f,0,[],0,47,j.lim,Unknown,Unknown,Unknown
Chris Fellingham,"I’m Chris, I formerly worked in Strategy for FutureLearn and write about Edtech and Education",Is the end nigh for Coding Bootcamps? – Human Learning – Medium,2017-08-09 12:11:17,medium,"Is the end nigh for Coding Bootcamps? In the last month, two Coding Bootcamps have announced they are shutting down after being unable to find a viable business model. Dev Bootcamp, owned by Kaplan was first — they said they were unable to balance the level of instruction they wanted i. e. in-person with support and run a profit, Iron Yard cited troubles of a nascent market. Despite this, more are coming is this folly? Not necessarily, although the specifics haven’t come out yet, some have cited the obvious: expensive real estate (i. e. some have offices in downtown D C, San Francisco etc) and high labour costs. Another angle is the payment model, both companies took an upfront payment — other schools take a % of the first year of work. The latter model can yield $2–3 K more per student (subject to the (likely local) labour market and the student). It also comes with caveats, companies reliant on salary share try and de-risk this by being far more selective of the students in question — which challenges bootcamps ideology that they can re-train anyone to a ‘new collar job’. Audrey Watters argues that Bootcamps themselves are part of a Silicon Valley narrative of a skills gap in programming which is at best exaggerated and at worst entirely aimed at getting a cheap labour supply for their own ends at the expense of students. Furthermore, they are also a second-rate education, citing a Bloomberg article which found some recruiters were dismissive of the quality of their graduates. While the skills gap is undoubtedly a political instrument for firms, it’s hardly non-existent, governments across developing and the developed world have found skill gaps such as China and the U K. Furthermore, there are other recruiter such as Triplebyte who present a more nuanced picture of Bootcamp graduates’ strengths and weaknesses. A more difficult to counter criticism is that made by Tressie Mcmillam Cottom, a Professor specialising in the marketisation of Education, Cottom notes that the schools are a ‘finishing school’ for the wealthy — namely that their high fees (and living costs) make them the preserve of the wealthy who use them to gain a further advantage in the job market. It’s a plausible argument, especially as one considers that even if the Bootcamp takes a salary share rather than upfront fees, their selectivity may well favour University graduates. The more likely result of all of this is a shakedown, Coding Bootcamps will be viable in certain labour markets i. e. with high job demand for coding skills, while online options may become the preferred low-cost option for those less able to pay or who need to fit it round existing work or study commitments — here, here and here","['Programming', 'Edtech', 'Codingbootcamp', 'Coding', 'Articles']",https://medium.com/human-learning/is-the-end-nigh-for-coding-bootcamps-965a00c57455,1,['Dev Bootcamp'],1,3,chris,M,0.13713656176653735,0.8628634382334627
Nicholas Vincent-Hill,Trader and Programmer http://www.nickvh.fun/ https://www.linkedin.com/in/nvincenthill/,Introduction and a little about accessing IEX’s API with JavaScript,2018-05-30 11:17:13,medium,"Introduction and a little about accessing I E X’s A P I with Java Script Hello there! I’m about to start the Hack Reactor 13-week immersive program and I thought I would document the experience, some technical challenges I’ll face and overcome, and some of my other thoughts here on Medium. A little about me: I’m a former trader (equities, commodities, mortgage-backed securities, etc. ) looking to pivot into tech. I live with my wonderful girlfriend and our urban garden in Oakland, C A. I have no idea how to blog and I’m still taking my first steps into the world of programming and software engineering. In future posts I will use this medium to enumerate on my experiences during Hack Reactor, my job search and preparation, and perhaps rant my political and philosophical ideas. I’ve been building a Bloomberg/ Yahoo Finance knock-off with React named Shroomberg to learn asynchronous Java Script and how to access R E S T(ful)? A P I’s. Here’s how I call I E X: Let’s examine the variable declarations:let query = this. state. value;let endpoint = `https://api. iextrading. com/1. 0/stock/${query}/batch?types=quote, stats, company, news, chart&range=5y`; Here I get the specific stock ticker from state (stored to state as entered in an input box by the user) and create the required I E X endpoint. This endpoint gives me the quote, key stats, news, and most of the chart data I need. Next- the fetch:fetch(endpoint) . then(response => {  if (response. ok) {   return response. json();  }  })  . then(response Json => {   this. add Data(response Json);  })  . catch(error => {   console. log(error);   this. set State({ input Class: ""animated shake search red"" });   set Timeout(() => this. set State({ input Class: ""search"" }), 1000);}); If the fetch was successful, I convert to J S O N with . json() and call my add Data() function to handle data cleaning and the set State() operation. Here is the complete code and instructions to run my app locally. In the future I hope to add this additional functionality to my fledgling app: Fuzzy search by name and ticker and some sort of auto-complete feature. Add cryptocurrency quote capabilities and associated features (see http://bitinfocharts. com/) Clean up a variety of bugs and make the site to increase performance and user experience.","['JavaScript', 'React', 'Coding', 'Codingbootcamp', 'Finance']",https://medium.com/coding-overload/introduction-and-a-little-about-accessing-iexs-api-with-javascript-7ae4e8af79d6,0,['Hack Reactor'],1,12,nicholas,M,0.003475715621243823,0.9965242843787562
Charles Clemens,,Learning Journal — Day 2 – Charles Clemens – Medium,2018-09-12 23:51:06,medium,"Learning Journal — Day 2 Code Fellows Prompt“[ For adult learners, ] their experience becomes the main resource of both their learning and the personal identity they have developed, as the richer and more diverse their experience, the more the diversity they can bring to their own learning. ” In other words, your life experience in learning the things you did before learning code will make this new experience more meaningful for you, and reflection on all of your experiences is essential in maximizing what you can gain from your study at Code Fellows. How do you think your prior life and professional experience will help you in this new endeavor? My life has been such a roller coaster of failure and indecisiveness that I can’t help but believe that my experiences will help me obtain success with Code Fellows. Let’s use my college experience as an example. I graduated with a degree in Software Engineering from the University of Phoenix Online shortly after I left the military. This meant that I worked during the day and learned Java, C++, Visual Basic, and a little bit of H T M L and C S S. After a few classes I realized that programming did not appeal to me. I don’t remember exactly why but I continued to go through the motions because I thought a piece of paper would guarantee me a fat salary. When the fat salary didn’t materialize, I moved on to something quite a bit less lucrative. How will this help me succeed at Code Fellows? I have proven that I can stick with a coding program even when it gets hard. And by going through the motions I have recognized many of the programming concepts in the bootcamp and my self study. Oh, and I know now that only hard work is going to produce the salary I want. Fast forward a few years. The new career was not only less lucrative but boring as well. While considering my options, I researched ways to put my degree to use and ran across web development. I followed along with tutorials for fun and I eventually devoted all of my free time toward learning Ruby on Rails. After a while I determined that web development was the career for me. I proceeded with self learning, completed a bunch of tutorials, and eventually started my own projects. The projects proved there was still a bit of skill needed to become employable so I enrolled in Code Fellows to fix that. This experience almost guarantees success because I have already invested enough time in web development to create a passion for it. I am not enrolled with Code Fellows to see how I like programming; I am enrolled to obtain a greater degree of proficiency that I cannot seem to obtain on my own. Lastly and professionally, my career in mortgage equipped me with a variety interpersonal and communication skills that are applicable in almost every setting. I anticipate using these skills to communicate effectively with my instructors and to foster strong relationships with the other students in my cohort. Collaboration is key.","['Coding', 'Codingbootcamp', 'Learning To Code', 'Failure']",https://medium.com/@cclemensjr/learning-journal-day-2-7a7bd0a9962f,4,['Code Fellows'],1,0,charles,M,0.005172083839041249,0.9948279161609588
conshus,the Black MacGyver | @OURshow (Sat 5-7pm WPRK 91.5fm) resident fan | all day. err day. http://HIPHOPandCODE.com | recent The Iron Yard coding bootcamp graduate,Day 37 — Meowpurrdy – conshus – Medium,2017-05-02 12:09:22,medium,"Day 37 — Meowpurrdyliner notes: So yesterday, we got into Firebase. I’ve been using Firebase in personal projects for a little while, ever since I came across a post about combining it with Angular. (k N Ow B E T T E R H I P H O P. com is based on Angular and Firebase) I’m continuously amazed with all the current and new features. With that said, it was good to be able to take the time to learn about what’s going on behind the scenes instead of just trying to get it to work for what I need it to. During class, we created a chat app and the homework was to extend that a little further to include being able to sign up and login a user with an email and password. Not sure why, but reading over the instructions, I envisioned a Cat Room. haha So I went with that theme. I wanted to take it a little further, so I coded a simple cat bot that responds to messages with a random number of “meow”s and punctuation. haha I deployed it to Firebase (one of its many awesome features) here https://fir-auth-c12f4. firebaseapp. com/ There are probably some bugs since it was a one night assignment, so any feedback would be great if you check it out. So to keep the cat theme going for the day…. I present Meow The Jewels I also got a chance to go to the Orlando Developers Meetup. Always a good time. Shouts to Brian (our instructor) for giving a great talk. Today, it looks like we will be diving into Redux. Going to do some reading before class. Have a great day!peace piece Dwane / conshus H I P H O Pand C O D E. com Just putting this here so I can use it as the feature image","['Firebase', 'Code', 'Coding', 'Codingbootcamp', 'Hip Hop']",https://medium.com/@conshus/day-37-meowpurrdy-73fbeb04d23b,0,['The Iron Yard'],1,1,conshus,Unknown,Unknown,Unknown
Lauren Greenberg,"Exploring programming, my assumptions and the outdoors.",I forgot my Password – Lauren Greenberg – Medium,2017-08-01 11:26:24,medium,"I forgot my Password This happens to me with relative frequency. Even though, like most people who do this and shouldn’t, I have a few variations of the same passwords. I often wish that sites would tell me all the requirements they gave me when I created my password. If I knew that for this site it had to be at least 8 letters with 1 capital letter and 1 number and 1 symbol, it would be a lot easier for me to put in the right one. Turns out, that would be a really bad idea. I had no idea before we started this unit on authentication how sites store passwords, which it turns out is a whole complicated process. I also didn’t realize that if they confirmed that I had gotten my username correct but not my password, they’d be making it much easier for hackers to get it. So now it seems pretty clear to me that reminding me of the parameters or conditions under which I set my password would be as helpful to me as it would be to said hackers. So I guess I’m glad they don’t do that. But in order for them to protect their users against hackers, sites have to put in a variety of protections. One of these is the password reset function, for all the people out there like me who forget where they put the “%” or “&” in their password. While I was looking it this though, I learned some other cool things. It turns out it’s a lot more complex than I realized to have a secure website where people are ‘logged in. ’ Having logged in users means that the website has to keep track of, and store, tons of information about you — from what information you tell it about yourself through your searches, security questions, etc, and from your I P address and where in the world you’re accessing the site from — so that if you normally access it from Long Island, it will notify you if someone tries to log in from Estonia or New Zealand. Cookies helps the website do this by allowing it to confirm with the encrypted info in the database that the user is the who they say they are whenever they make a request (ie navigate to a new page). Back to the password reset function though. I wanted to make one of my own. This usually works by sending an email to the user with a unique token, which they then have a finite amount of time to click on that will take them to a page that will accept a new password. So I built a user login page: Side note, isn’t it so cool that people can log in and out of my “website” that does nothing? In my research, I learned that the best/safest way to reset a password is through sending an email out to the user. While you can’t check how someone got a reset password link, you can increase the likelihood that it’s not a hacker by sending it to a place that (hopefully) only that user can access. You also want to keep track of the time that the link was sent out, so that you can put an expiration time on it to further increase the security. So then when someone clicks on it you can record that time and compare it with the time it was sent out, and if it’s under half an hour, or whatever amount of time you set, the user can use it. Otherwise, they’ll have to request a new one. I didn’t want to build email functionality into my program though, so I’m going to do it in a less secure way. Initially, I thought that the reset password would just be a link or a button. It’s true that I will have a button, but to manage this action I needed an entire reset password controller that authorizes a new token, similar to my user controller. Since I wanted to try this without sending out an email to someone, even though that would be the safest way, I thought I’d just redirect to another page where you can input a new password, which would then be salted and hashed and persisted in that format, so that the user could log in again with the new password. Unfortunately I am still working on that functionality. In the meantime, that’s what one W O U L D do. Here’s some code to start that off:class Password Resets Controller < Application Controller def new end def create   @user = User. find_by(name: params[:name])  redirect_to edit_password_reset_path  end def edit  @user = User. find(params[:id]) end#create a new password reset directs the user to an edit form, where they can reset their password.  That part works. and here’s some code that doesn’t work:def update  @name = params[:name]  @user = User. find_by(params[:id])  authenticated = @user. try(:authenticate, params[:user]  [:password])   @user. update(name: @name, password: params[:user][:password])  if authenticated  session[:user_id] = @user. id  redirect_to user_path(@user), :notice => "" Password has been reset!"" else  flash[:message] = "" Please try again""  redirect_to edit_password_reset_path endend But the basic idea still holds, even though I don’t have all the cookies that follow the user around or the authentication tokens that make sure that the user can set password at all. In summary, I’ve learned a lot about how and why password resets work, and a minimal amount about how to implement them. Thanks for reading!helpful links:stackoverflow. com: https://stackoverflow. com/questions/42427828/password-reset-logichttps://www. troyhunt. com/everything-you-ever-wanted-to-know/https://teamtreehouse. com/library/user-authentication-with-rails/password-resets-and-testing/adding-the-password-reset-controller","['Security', 'Ruby', 'Ruby on Rails', 'Codingbootcamp', 'Passwords']",https://medium.com/@lgreenberg23/i-forgot-my-password-6191f14d8c60,0,[],0,0,lauren,F,0.987739934147142,0.012260065852858035
Emily Deans,"Washington, D.C.-based web developer. Former cheesemaker/food-systems nerd and current nerd in general.",Thinking through Problems – Emily Deans – Medium,2017-07-11 01:08:12,medium,"Thinking through Problems So I know the other day I touched on something that broke my brain, which was followed by a pretty meager explanation post. I wanted to supplement today with a few thoughts on how to work- and think-through problems — I mean, “challenges”. One of our instructors suggested that when we get stuck on a line of code or bogged down in the structure of our syntax, that we should step away from our computer and try to present a mockup/diagram of the logic using the old-fashioned/never going out of style method of pen to paper. While it initially didn’t seem wildly intuitive to me — I felt like I should be able to complete all the processes in my head and then transcribe those thoughts with impeccable accuracy directly through the keyboard — I’ve found that the more I’m able to visually work through my thought process — gaining a precise clarity of what I’m being asked to accomplish, which tools I may have in my arsenal that may be applicable to the scenario, and how I would logically structure those tools to manipulate the code into producing the desired outcome —the better I’m able to comprehend the subject matter and the better the results. This (almost always) takes me through a messy stream of consciousness, but ultimately really helps me to better grasp concepts and be able to apply and recall code in the context of new prompts. As much as possible now, I’m trying to work through these problems with a pen and paper: My messy (but helpful to me) notes and diagrams But even when those tools aren’t handy to me, I’ll still try to work through with a non-grammatical process stream using a non-webby tool like ‘ Notes’: While I’m mostly using this approach at the moment to tackle coding challenges, I feel that broadening the application to other areas of my life will be extremely useful as well. Maybe I’m late to the party and everyone else is already on-board with this approach, but — if you aren’t doing so already — maybe try to utilize this to work through any challenges in your relationships/job/life? It’s definitely been a helpful one for me.","['Writing', 'Codingbootcamp', 'The Iron Yard', 'Lesbians Who Tech', 'Code Newbie']",https://medium.com/@emilyldeans/thinking-through-problems-b09247f2a58b,0,[],0,1,emily,F,0.9979317746535663,0.002068225346433675
