author,author_bio,title,date,publisher,text,tags,url,is_english
Jiyeol Lee,,Code States Pre_ 22기 6주차 – Jiyeol Lee – Medium,2018-05-12 11:36:03,medium,"Code States Pre_ 22기 6주차시간이 정말 빠르게 지나가는 것 같다. 어느덧 23기 분들도 들어오고 6주 동안 얼마나 내가 성장했는지 되돌아보게 된다. 여전히 프리코스의 진도는 따라잡지 못하고 있고, 요즈음 강의도 듣지 않고 있다. 어차피 들어도 모를 것 같아서 어느 샌가부터 듣지 않고 있고, 차후에 따로 들어야 하는데 과제 진도도 밀려있다보니 아직 엄두가 안 난다. 최근에 코딩하기로 뛰어든 친구와 같이 지내고 있어서 더 열심히 살고 있는 것은 맞는데, 갈 길이 멀다. 다른 사람들과 비교하거나 진도에 집착하면 더욱 멘탈이 흔들릴 것 같기에 ‘나는 나대로 갈 길을 가자. ’ 라고 계속 생각하려고 노력한다. 아직까지도 어떤 식으로 공부해야 하는지 제대로 배우고 있는 것인지 잘은 모르겠으나 실력있으신 분들이 나름의 생각을 가지고 프로그램을 구성했을테니 그냥 믿고 따라가려고 한다. 중요한 것은 조금씩 작은 성취감을 느끼며 코딩 공부의 매력을 약간씩 알아가고 있다는 것이며, 적어도 6주 전보다는 성장했다는 점이다. 비전공자나 코딩 공부에 대한 경험이 전무한 상황에서 프리 코스를 접한다면 프리 코스도 분명 쉽지는 않다. 나 자신도 그걸 엄청 느끼고 있다. 오늘(토요일 오프세션) 23기분들 공부하시는 것을 보니 내가 프리코스 시작할 때 하지도 못 했었던 질문들 하는 분도 많았고, 다시 초심을 생각해볼 수 있었다. 제 시간에 수료를 못 하더라도 수료는 무조건 할 것이다. 23기분들도 뵙고해보니 다시 한 번 정말 다양한 사람들이 코딩으로 뛰어든다고 느낄 수 있었고(심지어 외국인도 있었다), 좋은 환경 속에 있는 것 같아서 또 한 번 감사함을 느낄 수 있었다. 어떤 학원이든 부트캠프든 모든 건 내 자신에게 달려있지만, 환경도 절대 무시할 수 없기에 이러한 감사함을 가지고 계속 성장해나가고 싶다. 앞으로 갈 방향(코딩 입문)은 잘 잡았다고 생각한다. 결코 다시 뒤돌아가거나 다른 길로 가지 않을 것이다. 바람에 흔들리든 햇볕에 고생하든 이 길로 쭈욱 나아가서 크나큰 나무가 될 것이다.",['Codingbootcamp'],https://medium.com/@jake.lee4006/code-states-pre-22%EA%B8%B0-6%EC%A3%BC%EC%B0%A8-a8113a8aa57e,False
Diana Álvarez,Software Engineer https://www.linkedin.com/in/dianaalvarezco/,Se puede! Empezar de 0 siendo mujer a los 40 y encontrar el trabajo de tu vida,2018-05-07 10:04:50,medium,"Se puede! Empezar de 0 siendo mujer a los 40 y encontrar el trabajo de tu vida“ Pero qué haces, a tu edad, dejándolo todo para dedicarte a una profesión en la que no tienes futuro ni experiencia”. Esta sentencia me acompañó antes y durante mi experiencia en Ironhack, y no es un pensamiento baladí. Tras tantos años dedicándome simplemente a “trabajar para tirar adelante”, dejé de lado uno más de mis sueños: aprender a programar. Dependienta, camarera, recepcionista… y sí; la tecnología como afición hasta que la vida por sí misma te da una bofetada para que despiertes. En mi caso, una circunstancia grave desencadenó que arriesgara. Decidí con ciertas dudas matricularme en Ingeniería de Tecnologías de Información por la U N E D, pero pronto fui consciente de que, al tener que compaginarlo con el trabajo, sólo podría estudiar una parte de cada año de carrera. Qué locura, tan cerca de los cuarenta años, volver a la Universidad, cuyo sistema está tan obsoleto. Mi perspectiva era desmoralizadora, mi actitud fue de derrota… hasta que mi organismo dijo “¡ Basta!”, tuve una emergencia de salud, una baja médica y, sobre todo, tiempo para pensar y decidir sobre la dirección que quería dar a mi vida y entonces… me puse a investigar en Google acerca de bootcamps. Admito que lanzarme a esta aventura no fue una decisión sencilla. En primer lugar, la inversión económica que conllevaba: matrícula, estancia en otra ciudad, perder el trabajo por básico que fuera para poder trasladarme, etc. En segundo lugar, la inmersión total en una formación, y lo que significa también aceptar una gran soledad y un sacrificio personal añadidos. Cuando el período de aprendizaje concluyó, decidí seguir los consejos que recibí de Álvaro, el manager de Ironhack Madrid, y de algunos de los magníficos profesores y profesionales que tuve la suerte de conocer. Además de ser humilde y selectiva en las ofertas a las que me presentaba y perder el miedo a postularme como candidata (el conocido síndrome del impostor) o, directamente, solicitar que me tuvieran en cuenta en empresas que me interesaban cuando hubiera vacantes para Junior. Pasaron algunos meses, tras varias entrevistas, dos de ellas, debo decirlo, con ofertas en firme, a la espera de confirmación, hasta que tuve la entrevista más sorprendente que podría haber imaginado. Había enviado mi C V para una vacante de Junior Software Engineer en la B B C que encontré en Linked In. En cierto modo, no guardaba muchas esperanzas de recibir respuesta. Sin embargo, unas semanas después de aplicar para la candidatura, recibí un email con la invitación a un evento en Londres en el que nos entrevistarían, durante una primera ronda, a todos los candidatos, tras la que nos enviarían una prueba de código. Los elegidos pasarían a una segunda ronda de entrevistas. He de decir que mi trabajo anterior con estudiantes americanos me dio la confianza necesaria como para atreverme a postular para una vacante en lengua inglesa. Sin embargo, yo recibí la prueba de código directamente. “ Pero esto es Node. js”, me grité mentalmente. “ Yo he aprendido Ruby y Node. js sólo ha sido uno de mis experimentos tras el bootcamp”. Se admiten visualizaciones de mí misma corriendo en círculos y gritando clamorosamente: “ Hurraaaayyyyy!!” Pero pasé esa prueba. Pocos días después, tuve una entrevista por Skype. “¿ Qué me preguntaron en la entrevista?”, estaréis pensando. En primer lugar, el Senior Software Engineer me dirigió varias preguntas para entender cómo había abordado las pruebas, cuál había sido mi razonamiento. En segundo lugar, la Product Owner, que sería mi jefa, se centró en cuestiones de personalidad. Fue una entrevista muy distendida. La oferta consistía en el puesto de Junior Software Engineer para integrarse en el equipo que desarrollaba la plataforma de formación interna de los empleados de la B B C. El sueldo ya me parecía muy lejano de los que había visto en España, 29 mil libras al año. Así que podréis imaginar mi sorpresa cuando, poco antes de finalizar la entrevista, el Senior Engineer me comunica que no veía mi perfil como Junior (silencio dramático, y mi pensamiento de “bueno, al menos lo intenté”) sino como Mid-senior (silencio que precede un ataque cardíaco). No tardé ni un minuto en decir que sí. Cuando el empleado de R R H H que me llamó por la tarde para presentarme la oferta en firme me comunicó cuánto quería cobrar entre 30 mil y 40 mil libras al año, no lo podía creer. Así que escogí 34 mil, que tampoco es cuestión de abusar de la buena suerte. Durante los posteriores dos días, mi recuerdo consiste en mí misma preguntando, reiteradamente, a mi jefa si me estaban gastando una broma. En absoluto. Iba en serio. Dos semanas después de esa entrevista ya estaba en Birmingham, donde sigo. Terminé el proyecto con la B B C y, seis meses después, mis opciones con ellos pasaban por mudarme a Manchester o Londres, por lo que decidí dejar la B B C y quedarme en Birmingham. Sin dudarlo, fue la mejor decisión, porque eso me supuso el proyecto más excitante que podría haber imaginado que pudiera haber caído en mis manos tan pronto y, mejor aún, en Ruby (¡cuánto te echaba de menos, Ruby!). Debo añadir que hay mucha búsqueda de potenciales programadores en el mercado británico a través de los recruiters. Fue abrir luz verde y empezar a recibir ofertas, eso sí… con la obligación de momento de residir aquí, pero creo importante romper una lanza a favor de los recruiters, que sólo hacen su trabajo y, en general, lo hacen muy bien. No puedo decir mucho del proyecto, pero es “mi bebé”, de momento, full-stack, hasta convertirla totalmente en marca blanca (puedo marcar este objetivo de la lista como “hecho”), manteniendo los cinco millones de usuarios que existen, planificando actualizar una versión de hace casi diez años a la más actual, y con una motivación que supera con creces la frustración que siempre se vive en algún momento de esta aventura de profesión. ¿ Qué ocurre cuando miro atrás, cuando aún no se cumplen dos años desde que pisé Ironhack por primera vez? Vértigo, porque el vuelco que te da la vida es extremo. También gratitud al la gran familia que es Ironhack. Unas líneas más arriba mencionaba la soledad que temía al decidir trasladarme para realizar el bootcamp, pero el equipo nunca te hace sentir sólo… y esto fue lo que me hizo seguir adelante luchando y esforzándome. Cierto orgullo, que no vanidad, sin perder nunca el eje de equilibrio que proporciona la humildad, pero a veces hay que permitirse reconocerse algún mérito, ¿por qué no? Y motivación al sentir que cada día se presenta un nuevo reto que resolver y del cuál Aprender. ¿ Qué mejor forma de terminar un cuento que continuándolo?","['Change Your Life', 'Web Development', 'Codingbootcamp', 'Ironhack']",https://medium.com/ironhack/se-puede-empezar-de-0-siendo-mujer-a-los-40-y-encontrar-el-trabajo-de-tu-vida-3ddec55f835f,False
Code States,,"개발자 커리어 전환기 2 | 3시간 만의 퇴사 결정, 비전공자로 개발에 뛰어들다. – Code States (코드 스테이츠) – Medium",2018-05-21 03:01:16,medium,"개발자 커리어 전환기 2 | 3시간 만의 퇴사 결정, 비전공자로 개발에 뛰어들다. Q) 안녕하세요 Juan Carlos(환 까를로스)님 자기소개 부탁드려요. 네 안녕하세요. 지금 Immersive 6기에서 개발자가 되기 위해 열심히 공부하고 있는 환 까를로스라고 합니다. 어쩌다보니 Immersive 6기에서 전문 네비게이터로 생활하고 있어요. (웃음) 네비게이터는 페어프로그래밍을 할 때 드라이버가 코딩을 할 수 있도록 큰 그림을 그려주는 거라고 생각하시면 되요. 페어와 같이 코딩을 하면서 Immersive를 헤쳐나가고 있습니다. Q) 코드스테이츠 오시기 전에는 어떤 일을 하셨었나요?해외영업을 했습니다. 이 일을 선택한 이유는 조금 특별해요. 제가 취준생이었을 때 회사를 여러 곳을 지원을 했었습니다. 지원한 기업에서 합격 통보를 받았죠. 근데 막상 그 기업에 입사하려고 보니까 지방에서 근무를 해야 하는 거예요. 그전까지는 이런 것들을 생각도 안 하고 있다가, 막상 닥치니까 곰곰이 생각하게 되었어요. ‘내가 서울을 떠나서 잘 살 수 있을까?’ 지방에서 산다는 거에 대해서 크게 생각하고 있지 않았었는데, 막상 닥치니까 고민이 많이 되더라구요. 제가 서울 토박이인데, 고향을 떠나서 사는 거는 제가 너무 힘들 것 같아서 포기하고 지금 현 직장(지금은 퇴사를 했죠)에 다니게 된 거예요. 그리고 제가 공대 출신인데 공대 출신이 서울에서 직장을 잡으려면 영업 밖에 없더라구요. 그래서 영업직을 선택했었습니다. Q) 그럼 직장을 나오게 된 계기가 있으신가요?새로운 것을 수용할 생각이 없는 경직된 조직문화가 너무 안 맞았어요. 저는 신입을 뽑는 이유는 조직이 시장의 흐름이나 세대의 변화에 맞춰 변하기 위해서라고 생각해요. 근데, 전에 팀은 변할 생각을 안 하더라고요. 야근까지 해가면서 업무개선을 해도 기존 방식을 고수하자는 피드백이 계속되니 열정이 사라지는 것을 느꼈죠. 제가 4년 정도 다녔는데, 퇴사를 고민하고 3시간 만에 결정하고 사표를 내고 나왔어요. 저는 뭔가 다양한 경험을 하고 제 스스로가 발전하는 걸 좋아하는데, 발전한다는 느낌이 없었죠. 부서를 여러 곳으로 옮긴 이유도 제가 정확히 뭘 좋아하는지 모르니까 이것저것 해보면 알지 않을까 생각했어요. 영업 파트에서 일하면서도 기획부터 경영지원까지 다양한 일을 맡았었죠. Q) 3시간이면 정말 짧네요! 보통은 여러 번 고민하기 마련인데요. 그럼 퇴사하시고 나서는 무엇을 하셨나요?음… 사실 퇴사하고 나서 제가 맡았던 고객들이 경쟁사로 이직할 수 있게 도와주겠다고 하셔서 고민을 많이 했어요. 근데, 이왕 퇴사했는데 새로운 걸 해보고 싶었어요. 한 군데 계속 있으면 뭐랄까. . 나태해지는 것 같아서요. - 다른 분야의 직장을 잡으신 건가요?일단은 여행 가야지라고 생각해서, 스페인으로 떠났어요. 첫 번째로는 스페인의 순례길을 가기로 했죠. 1000km 정도 되는 길을 걸었던 것 같아요. 순례길을 걸으면서 다양한 사람들을 만나고 생각도 정리도 좀 하고 그랬어요. 거기에는 전 세계 퇴사한 사람이 다 모이는 것 같아요. 숙소에서 만난 친구들에게 물어보면 죄다 회사를 퇴사하고 왔다고 하더라구요(웃음) 그리고 그곳에서 개발자가 돼야겠다는 마음을 먹었습니다. Q) 어떤 경험을 하셨길래 그곳에서 개발자가 돼야겠단 마음을 먹으셨나요?먼저 이 얘기를 해야 하겠네요. 사실 제가 여행경비가 이렇게 많이 들지 몰랐어요. 순례길을 여행하다가 돈도 떨어져 가는데 직업이 있는 채로 순례길을 도는 사람들을 만나게 된 거예요. 세 명을 만났는데, 세 명 다 소프트웨어 엔지니어였습니다. 처음에는 브라질 개발자를 만났어요. 그때까지만 해도 별생각이 없었죠. 다음으로는 러시아 개발자를 만났습니다. 러시아 개발자 친구를 보면서 아 이런 게 디지털 노마드구나라는 생각을 갖게 되었죠. 그리고 마지막으로 스페인 개발자 친구를 만나니까 정말 개발자라는 직업이 부럽게 느껴지더라구요. Q) 디지털 노마드를 보고 개발자가 돼야겠단 결정을 하신 거네요! 그럼 코드스테이츠를 선택해주신 이유가 있으신가요? 아까 제가 생각보다 여행 경비가 많이 드는지 몰랐다고 했잖아요. 순례길만 여행하는데도 여행 경비가 다 떨어진거에요(웃음) 그래서 어쩔 수 없이 세계 여행의 꿈을 접고 한국으로 오게 되었죠. 그리고 한국으로 돌아오는 비행기 안에서 개발자가 되기로 결심을 했습니다. 내가 여행을 다니고 하고 싶은 것을 하면서도 일도 하고 그게 너무 좋아 보이는 거에요. 물론 한국의 현실은 많이 다르겠지만 그래도 개발자라면 가능하지 않을까라고 생각을 했습니다. 그리고 그 비행기에서 핸드폰으로 코딩 관련해서 검색을 하다가 코드스테이츠를 알게 되었어요. 알아보니까 교육철학도 좋고 저에게도 괜찮은 방식을 것 같아서 그 비행기 안에서 바로 결정을 하게 되었습니다. 퇴사할 때와 마찬가지로 일사천리로 결정을 했습니다. - 비행기 안에서 모든 결정이 이루어졌네요! 3시간 만에 퇴사를 결정하신 것 같이요!뭐 망설일 이유가 있나요. 자신감과 결단력 그게 제 장점이니까요(웃음)코드스테이츠 알아보기 Q) 그럼 이제 Immersive 얘기를 해볼게요. Immersive에서의 생활은 어떠세요?생각했던 것보다 여유가 있어서 좋아요. 그전에는 되게 불안하고 빡빡하고 그럴 것 같은데 막상 해보니까 할만하더라고요. 그리고 일단 사람들이 너무 좋아요. 같이 지내는 사람들이 좋으니까 Immersive도 할만한 것 같아요. Q) 그러면 지금 Immersive에서는 어떤 것을 배우고 있나요?서버를 배우고 있어요. 프론트 쪽 하구요. 프로젝트를 하고 적용을 해봐야 완전히 내 것으로 만들 수 있을 것 같아요. 역시 직접 적용을 해봐야 정확히 알 수 있을 것 같습니다. 자바스크립트라는 언어의 다양한 문법을 매일 체험해보고 있어서, 매일매일이 새롭습니다. 뭔가 이해할 만 하면 다른걸 배우거든요. 프로젝트를 해봐야 완전히 내것으로 만들 수 있을 것 같아요. Q) 앞으로 어떤 개발자가 되고 싶으세요?거창하게 세상을 바꾸는 개발자! 이런 건 제 스타일은 아니에요. (웃음) 저는 제가 하고 싶은 것을 하는 개발자. 만들고 싶은 것을 만드는 개발자가 되고 싶어요. 세상을 바꾸는 개발자도 내가 좋아하는 것, 내가 하고 싶은 것, 내가 만들고 싶은 것을 만드는 개발자가 되었을 때 가능하지 않을까요? Q) 프로젝트를 곧 하게 될 텐데 어떤 프로젝트를 하고 싶으신가요?제 경험에 기반한 프로젝트에요. 우리는 회사에서 주는 돈 그냥 받잖아요. 제가 회사를 나오고 받았던 돈을 확인해보니 제대로 받지 못했다는 것을 알았어요. 그래서 사람들이 노동의 정당한 보상을 알고 받을 수 있도록 도와주는 프로그램을 만들고 싶어요. 주변만 봐도 대부분의 사람들이 이런 문제로 인해 문제를 가지고 있다고 생각해요. Q) 1년 후에 개발자가 되었다고 생각하면 어떤 모습일까요?개발자가 될 수 있을까요?(웃음) 아마 1년 후엔 야근에 쩔어있지 않을까요? 저는 이게 내 일이다라는 생각을 하면 엄청 파고드는 스타일이거든요. 개발자로 처음 들어간 직장에 남아 있거나 이직을 하고 있을 것 같아요. 사실 저는 계획을 잘 안 세우거든요. 그러니까 아무 준비 없이 퇴사하고 개발을 배우고 있죠. 설마 굶어죽기야 하겠어요? Q) 마지막으로 하고 싶은 말이 있나요?제가 퇴사하면서 방 정리도 같이 하게 됐어요. 정리를 하다 보니까 우연찮게 제 학창시절 생활기록부를 보게 되었습니다. 생활기록부에 장래희망을 적는 칸이 있잖아요. 근데 제가 깜짝 놀란 게 거기에 중학교 때부터 고등학교 때까지 줄곧 프로그래머로 적혀있던 거에요. 그동안 까맣게 잊고 살았는데 신기했어요. 그리고 또 생각을 해보니까 대학교 때도 제가 컴공과는 아니지만 공대라서 C++을 해야했는데 그 과목에서 처음으로 A+을 받은 기억이 나더라구요. 이런 생각이 들면서 결국 나는 프로그래머를 선택할 운명이었나? 이런 생각도 들고. 결국에는 돌아돌아 이 길로 온 것 같아요. 그래도 돌아왔다고 해서 늦었다거나 아쉽지는 않아요. 제가 지금까지 걸어온 길이 분명히 프로그래밍을 하는데 도움이 된다고 생각하고 있으니까요. 지금까지 환 까를로스님과의 인터뷰를 진행했었는데요. 정말 엄청난 비하인드 스토리를 가진 분이라는 생각이 드네요. Immersive Course를 성공적으로 수료하시고 목표로 하는 개발자가 되기를 바랍니다. 앞으로도 다양한 스토리를 가진 Immersive Course 수강생분들의 이야기로 찾아뵙겠습니다.","['개발자', '개발', '교육', '라이프', '커리어']",https://medium.com/code-states/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%BB%A4%EB%A6%AC%EC%96%B4-%EC%A0%84%ED%99%98%EA%B8%B0-2-3%EC%8B%9C%EA%B0%84-%EB%A7%8C%EC%9D%98-%ED%87%B4%EC%82%AC-%EA%B2%B0%EC%A0%95-%EB%B9%84%EC%A0%84%EA%B3%B5%EC%9E%90%EB%A1%9C-%EA%B0%9C%EB%B0%9C%EC%97%90-%EB%9B%B0%EC%96%B4%EB%93%A4%EB%8B%A4-7b08c2f72b9d,False
Angélica Velázquez,,Sass – KAN by MUKTEK Academy,2018-07-09 20:30:05,fuerzamuktek,"Sass Primero que todo hay que saber que Sass ( Syntactically Awesome Style Sheets ) es un preprocesador de C S S. Pero, ¿qué significa esto?. Los preprocesadores C S S son herramientas para los desarrolladores de sitios web, que permiten traducir un código de hojas de estilo no estándar, en este caso Sass, a un código C S S estándar, entendible por los navegadores. La mayoría de preprocesadores C S S añadirán algunas características que no existen en C S S puro, como variables, mixins, selectores anidados, entre otros. Estas características hacen la estructura de C S S más legible y fácil de mantener. Algunas de las ventajas de usar estos preprocesadores es que nos ahorra tiempo, podemos tener un código más organizado y gracias a esto podemos editar ciertos valores que afecten decenas de líneas de código. Sass tiene dos sintaxis: S C S S ( Sassy C S S ): La sintaxis es similar a C S S . Sass ( Sass original): Su sintaxis es similar a Ruby . Ambos son parte del pre-procesador Sass y pueden importase entre si. Nosotros usaremos S C S S y a continuación aprenderemos algunas cosas sobre su sintaxis: Variables Las variables en S C S S nos permiten asignar a un identificador de nuestra elección un valor específico. ¿ Por qué es eso útil? A diferencia de C S S, si se necesita modificar un valor, solo tendremos que actualizarlo en un lugar y el cambio se reflejará en donde hayamos usado la variable con el valor asignado. En Sass, “$” se usa para definir y referenciar una variable:ex. Variable Una vez compilado el código anterior, obtendrías un código estándar como el siguiente:css Nota: La mayor parte de las veces es mejor que el nombre de las variables no hagan referencia al valor de las mismas sino, por ejemplo, a donde se aplican. Anidación ( Nesting) S C S S permite anidar las reglas C S S para que las hojas de estilos sean más concisas y fáciles de escribir. Con anidación en C S S tendrás que escribir menos, pues tendremos selectores que son menos largos y menos repetitivos. Pongamos un ejemplo con el siguiente código H T M L: Para agregar estilos al código anterior con C S S tendríamos que hacer algo como esto: C S S A continuación veamos un código donde anidamos los selectores. Esa anidación es similar a la que tenemos en el H T M L, donde unas etiquetas están dentro de otras. Scss Referencia al selector padre A la hora de producir código anidado en S C S S hay otra técnica que se usa bastante, que es la referencia al selector padre, usando el caracter “&”. En S C S S, el caracter “&” se utiliza para especificar exactamente dónde se debe insertar un selector principal. También ayuda a escribir pseudo clases de una manera mucho menos repetitiva. Por ejemplo: Otro uso de este operador para referirse al selector padre es cuando estás usando una nomenclatura como “ B E M”. Supongamos que tenemos un código H T M L como el siguiente: Para poder definir todos los estilos de la clase “container” de una vez y usando anidación, podríamos escribir algo como esto. Y compilaría de la siguiente manera: Propiedades Anidadas En S C S S, la anidación no está limitada solo a los selectores. También se puede anidar las propiedades C S S comunes si agrega un sufijo de dos puntos después del nombre de la propiedad. Y compilaría de la siguiente manera: Estos son algunos de las cosas que podemos hacer haciendo uso del pre-procesador Sass. Aprende más sobre Sass y la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K","['HTML', 'CSS', 'Sass', 'Codingbootcamp']",https://blog.muktek.com/sass-379465688049,False
CeroUno,Somos la escuela de programación con los programas más actualizados y la mejor red de instructores de todo México. http://cerouno.io.,Garantía CeroUno – CeroUno – Medium,2018-08-02 18:25:18,medium,"Garantía Cero Uno La educación en México está desconectada del mercado laboral. Las universidades gradúan a cientos de estudiantes que no están listos. Semestre tras semestre, los estudiantes adquieren conocimientos desconexos, que no están vinculados a las necesidades de las empresas. La educación tradicional es obsoleta. En Cero Uno repensamos la educación. Nos enfocamos en que nuestros estudiantes no sólo aprendan, sino que aprendan a hacer. Nuestro objetivo es construir capacidades, más que conocimiento. Nuestros instructores son gente experta en la industria de software. Por eso, a partir de hoy, nuestros programas estarán protegidos por la Garantía de Empleabilidad de Cero Uno. ¿ Qué significa esto? Qué nosotros te conseguimos empleo en menos de seis meses. Así de simple. ¿ Cómo funciona? Inscríbete en un programa de Cero Uno. Paga la mitad de la colegiatura. Nosotros te conseguimos empleo con nuestro pool de empresas en menos de seis meses. Si no te conseguimos una oferta de empleo en ese tiempo, nosotros cubrimos la mitad restante de tu colegiatura. La Garantía de Empleabilidad de Cero Uno sólo es válida si estás buscando empleo, si cumples con los requisitos académicos de nuestros programas, y si estás inscrito en nuestros programas a título personal. Tú pones el esfuerzo, nosotros ponemos el empleo. ¿ Te interesa? Escríbenos a alice@cerouno. io para mayor información.","['Codingbootcamp', 'Monterrey', 'Education', 'Software Development']",https://medium.com/@cerounoio/garant%C3%ADa-cerouno-fa499bb74f19,False
Angélica Velázquez,,FlexBox – KAN by MUKTEK Academy,2018-02-01 01:45:27,fuerzamuktek,"Flex Box La propiedad Flexbox, de C S S3 es un modo de diseño que permite colocar los elementos de una página para que se comporten de forma predecible cuando el diseño de la página debe acomodarse a diferentes tamaños de pantalla y diferentes dispositivos. ( M D N) Responsive Design Gracias a Flex Box facilitamos la forma en que posicionamos elementos, es más simple y usamos menos código. Terminología Para empezar a trabajar con Flex Box primero tienes que entender la estructura; Flex Box está constituido por un padre ( Flex-container) y sus hijos ( Flex-item). Flex-container: Es el elemento padre que contendrá a los flex-items y que indicará el posicionamiento de sus hijos dentro de él. Para definirlo se usa el valor flexen la propiedad display. Flex-item: Es el elemento que se encuentra dentro del flex-container que tendrá un comportamiento automático dependiendo lo que defina el elemento padre. Eje principal (main-axis): es el sentido horizontal con el que se van posicionando los flex-items. Por defecto va de izquierda a derecha (horizontal) pero puede cambiar dependiendo de la propiedad flex-direction. Eje transversal (cross-axis): Es el sentido perpendicular al eje principal. Por defecto va de arriba hacia abajo (vertical) pero al igual que el main-axis puede cambiar dependiendo del valor de la propiedad flex-direction. Propiedades de Flex-container Display: Esto es lo único que necesitamos para configurar el contenedor principal y automáticamente todos sus hijos se convertirán en elementos flex. Flex-direction: Esta propiedad define las direcciones del main-axis, es decir, hacia donde se moverán los flex-items, tanto horizontalmente como verticalmente. Flex-wrap: Por defecto los flex-items intentarán estar contenidos en una sola línea. Con esta propiedad puedes cambiarlo y permitir que los items se envuelvan como sea necesario. Flex-flow: Esta propiedad combina las propiedades flex-direction y flex-wrap. Justify-content: Esta propiedad define cómo los elementos flexibles se alinean a lo largo del main-axis (horizontal). Align-items: Esta propiedad define cómo los elementos flexibles se disponen a lo largo del cross-axis (vertical). Align-content: Esta propiedad controla la alineación de las lineas a lo largo del cross-axis cuando los elementos no utilizan todo el espacio disponible. Propiedades de Flex-item Order: Con esta propiedad controlamos el orden de los flex-items que están dentro del flex-container. Por defecto aparecen en el orden que indica el código fuente. Flex-grow: Esta propiedad especifica el factor que determina hasta que punto un flex-item crecerá en relación con el resto de los flex-items. Flex-shrink: Esta propiedad da la capacidad de encoger los flex-items si es necesario. Flex-basis: Esta propiedad tiene los mismos valores que las propiedades width y height y especifica el tamaño principal del flex-item, distribuyéndose de acuerdo con los factores flex. Flex: Esta propiedad solo es la abreviatura de flex-grow, flex-shrink y flex-basis. Align-self: Esta propiedad permite sobreescribir la alineación por defecto (o la especificada por align-items) para flex-items individualmente. En los siguientes post veremos las propiedades de Flex-container y Flex-item con más detenimiento. Aprende más sobre Flex Box y la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K","['HTML', 'CSS', 'Flexbox', 'Codingbootcamp', 'Mexico']",https://blog.muktek.com/flexbox-18ad65c58afa,False
Francesco Pio Squillante,Just a guy who loves coding outside,Come si impara a programmare? – Il Metodo Naturale – Medium,2018-08-09 12:11:25,medium,"Come si impara a programmare? English version here Durante la mia esperienza da insegnante ho sperimentato diversi modi per insegnare a programmare. In Italia il coding è insegnato come qualcosa di separato dalla natura fisica dei calcolatori. È per questo che ho iniziato il mio “lavoro part-time” con l’alternanza scuola-lavoro ospitata dal mio team di sviluppo. Ecco cosa ho imparato dalla mia esperienza. Gli alunni sono minorenni e non posso mostrare il loro viso. Nelle prossime foto sostituirò la loro faccia con quella di Nicolas Cage. L’anno scorso, ho ospitato diverse lezioni gratuite di game development per circa 100 alunni dagli istituti superiori della mia città per l’alternanza scuola-lavoro. Durante il corso di 70 ore, più di un terzo del tempo è stato dedicato a lezioni di scripting e programmazione. Gli studenti sono stati divisi in tre classi così ho potuto provare tre diversi approcci alla programmazione e, sottoponendo gli alunni allo stesso test, ho scoperto alcune criticità comuni ai tre approcci. Ma facciamo prima un flashback. Durante la mia carriera da studente ho studiato l’informatica con molti approcci differenti dal momento che ho cambiato spesso insegnante e ho studiato molto da autodidatta. In Italia semplicemente non puoi avere gli stessi professori durante i 5 anni delle scuole superiori. Alcuni insegnanti condividevano gli stessi approcci all'insegnamento dell’informatica, mentre i metodi di altri erano molto diversi. Prendiamo ad esempio i linguaggi di programmazione: alcuni iniziavano introducendo il Visual Basic, alcuni il Visual C++ e altri l’ A N S I C. Non c’è uno standard per insegnare a programmare. Questo articolo è anche propedeutico per una standardizzazione in questi termini. In classe Durante il corso ho insegnato due linguaggi di programmazione: il linguaggio di scripting Math Studio e una versione sperimentale del mio compilatore C con la annessa Standard Library. Alla fine del primo modulo di lezioni sono state testate le competenze degli studenti con un compito: realizzare alcuni programmi per risolvere diversi problemi nella maniera più efficiente. Ho detto che lo avrei fatto. Per introdurre i miei alunni al fantastico mondo del coding, ho deciso di adottare tre diversi approcci, ottenendo diversi risultati. In tutte le tre classi ho dedicato solo poche ore alla teoria degli algoritmi siccome l’avevano già studiata a scuola e ho sempre iniziato a introdurre prima Math Studio (livello di astrazione più alto) e poi il Linguaggio C (livello di astrazione più basso). I metodi Nella prima classe ho iniziato con un’introduzione alla Teoria dell’informazione e alcune formalità matematiche. Ho parlato molto della codifica delle informazioni e della definizione del bit. Gli studenti sono riusciti a capire la tipizzazione delle variabili, l’elaborazione e l’organizzazione dei dati e anche qualche tecnica di ottimizzazione. Tuttavia non erano in grado di risolvere nuovi problemi e tendevano ad applicare una strategia di problem solving mnemonica; Nella seconda classe ho iniziato a descrivere la Central Process Unit come una scatola nera astratta che fa operazioni. Ho introdotto i linguaggi di programmazione come un’infrastruttura tra un’astrazione matematica (l’algoritmo) e il linguaggio della macchina facilmente interpretabile dall’uomo. La classe ha ottenuto una buona abilità di risoluzione dei problemi e quasi tutti hanno completato il compito. Tuttavia, la strategia di problem solving rimane una criticità; Nella terza classe ho provato un mix dei due metodi, ma sfortunatamente, a causa delle limitazioni del tempo a disposizione, il metodo è fallito. I risultati test sono stati disastrosi e solo poche persone hanno completato il compito. Probabilmente scriverò un altro articolo per illustrare il modo in cui ho effettuato la valutazione statistica delle classi. Forse ho troppo tempo libero. Allora quale metodologia è la più adatta? Dopo questa esperienza ho provato un nuovo metodo basandomi sui risultati dei precedenti. Diversi mesi fa ho tenuto diverse lezioni private riguardo la programmazione e questa volta ho ottenuto dei risultati interessanti. Il corso è durato circa 50 ore e i test hanno rivelato che il nuovo metodo permetteva a chiunque di imparare a parlare la lingua dei computers. Ho iniziato a spiegare cosa è un transistor e ho costruito tutti livelli di astrazione necessari per arrivare a capire i linguaggi interpretati ad alto livello e la programmazione a oggetti. Durante l’esperimento ho anche trovato l’ispirazione per i miei prossimi progetti e ho iniziato a realizzare un nuovo linguaggio di programmazione basato su Math Studio che si adatta perfettamente al mio nuovo metodo di insegnamento. Ho completamente rivisto il codice alla base, così ho cambiato il suo nome in Golden/ Ratio, e il linguaggio è praticamente un mix pompato di Math Studio e C. Vediamo questo approccio. Il Metodo Naturale Iniziamo dalla più bassa astrazione che si può trovare in un circuito logico: i transistor. Che cosa sono i transistor? Beh, non spiegherò perché funzionano, ma semplicemente come. I transistor sono dispositivi realizzati con materiali semiconduttori, come il silicio e sono molto utilizzati come amplificatori e interruttori. Quest’ultima proprietà è la più utilizzata nei dispostivi digitali: mettendo insieme diversi transistor si possono costruire le porte logiche. Queste ultime sono a loro volta dispositivi che permettono di effettuare il più basso livello di computazione: una semplice operazione logica. Collegando due transistor si ottiene una porta A N D. Questo è lo schema della porta A N D. A e B sono gli input, Q è l’output e T1 e T2 sono i transistor. 0 identifica no corrente e 1 sta per corrente La porta A N D ha tre pin: due pin per l’input e uno per l’output. La porta restituirà un segnale elettrico fisso solo se questo è presente in entrambi gli input. Ci sono in realtà 16 porte logiche binarie — binarie perchè effettuano la computazione tra due input — e grazie al lavoro di diversi matematici, si possono esprimere tutte le funzioni logiche con queste. La branca della matematica che studia la manipolazione di valori logici è chiamata Algebra Booleana per il matematico George Boole. Grazie ai suoi studi e a quelli successivi, le funzioni logiche possono essere utilizzate per risolvere diversi tipi di problemi. Non si possono risolvere tutti i problemi con le funzioni logiche: per esempio, non si potrà mai calcolare l’esatto valore di Pi greco siccome richiederebbe una quantità infinita di memoria. Ci sono anche problemi che non possono essere risolti per importanti limitazioni hardware — come giocare a scacchi — perché richiederebbero eoni di tempo per il calcolo, anche con il più potente computer dell’universo. Gli informatici parlano di classi di complessità e probabilmente la più difficile domanda della matematica riguarda questo ambito. Se si mettono insieme diverse porte logiche si ottiene un circuito integrato. Questi dispositivi possono diventare molto sofisticati: basta pensare che la C P U dentro un P C o uno Smartphone è nient’altro che un enorme circuito integrato e può contenere fino a diversi miliardi di transistor. Questa è una Die Map di un Intel® Core™ di 5a Generazione. L’area coperta da Cage contiene diversi milioni di transistor. Vuoi scoprire di più? Questa è solo una breve introduzione a una serie di articoli che scriverò per costruire tutte le conoscenze necessarie per iniziare a programmare cose belle. Il mio piano è realizzare una serie di tutorial per programmare dal basso una delle più avanzate tipologie di software: le intelligenze artificiali. Renderò le mie lezioni accessibili a tutti e userò sempre strumenti open source. Se vuoi essere sempre aggiornato sui miei nuovi post, puoi seguirmi su Facebook o Twitter. Ti aspetto!","['Programmazione', 'Coding', 'Codingbootcamp', 'Tutorial', 'Lezioni']",https://medium.com/il-metodo-naturale/come-si-impara-a-programmare-bb695f1205d7,False
Irsan Sebastian,,Let’s start a journey ! – Irsan Sebastian – Medium,2016-11-05 14:19:30,medium,"Let’s start a journey ! Nama gue Irsan, gue seorang programmer yang “ilmu”nya setengah-setengah. . (apa sih maksudnya…?) So kisah ini dimulai sejak gue duduk di bangku kuliah, tepatnya di kampus B I N A N U S A N T A R A. dimana jurusan yang gue ambil adalah S I / Sistem Informasi (beberapa orang menafsikannya sebagai Salah Informasi…. Iye gue setuju…) L O L. Jurusan ini menawarkan pengetahuan yang menurut penafsiran gue adalah setengah Management dan setengah Programming. Lalu kisah ini dipercepat hingga pertengahan Semester 4, disaat itu ada sebuah Challenging Enterpreneurship Competition yang sederhananya merupakan sebuah kompetisi startup, dimana lomba ini diadakan hanya di ruang lingkup mahasiswa Bina Nusantara. Dan gue adalah salah satu pesertanya, setelah membentuk Team dan Bussiness Plan. kita siap berkompetisi ! Dikarenakan kemampuan programming yang sangat minim, akhirnya kita mencoba untuk meng-hire sebuah Team yang membantu kita untuk implementasi ide kita dalam bentuk aplikasi. dan biaya yang cukup besar pun dikeluarkan. hari demi hari, meeting demi meeting, seluruh darah dan keringat sudah kita keluarkan, conflict demi conflict kita lewati dan alhasil…. . W E W O N T H E F I R S T P L A C E !!yap that’s cool… Tetapi disini masalah dan gejolak dalam diri gue muncul. dimana apabila gue ingin melanjutkan Business ini, apa yang harus dilakukan ? apalagi bagian paling teknikal di Business ini adalah aplikasi dan software yang kita rundingkan dan bahas bersama. disaat itu kemampuan programming gue sangat minim, alhasil Team ini bubar dan Business ini tidak dilanjutkan kembali. “we just won the name. . , not the Business. . ” Untuk itu gue pun bertekad, untuk belajar bahasa programming. Memperdalam ilmu yang “setengah-setengah” menjadi something. Alasan utama dikarenakan, apabila gue saat itu yang menciptakan, yang turun tangan untuk Develop from scratch. Setidaknya hari ini gue masih bisa melanjutkan Business itu. dan masih ada lagi cerita tentang mengapa gue ingin mendalami programming, nanti mungkin akan gue share lagi cerita itu Sampai disini dolo perkenalan kali ini, hopefully blog ini akan berlanjut terus dan makin banyak inspirasi dan ilham yang keluar, sehingga content-nya ga membosankan. Thank you guys ! Irsan Sebastian","['Story', 'My Life', 'Codingbootcamp', 'Coding', 'Startup']",https://medium.com/@irsansebastian/lets-start-a-journey-df35a98e6dbf,False
Le Wagon Montréal,Coding school for creative people & entrepreneurs 🦄 🖥 9-week Full-Stack program to learn to code. 🚀 http://lewagon.com/montreal,La diversité et l’inclusivité dans les tech: actions et opportunités à Montréal,2017-07-21 19:55:20,medium,"La diversité et l’inclusivité dans les tech: actions et opportunités à Montréal Le Wagon Talk — Diversité dans les Tech: Un panel de discussion. 6 juillet 2017. À La Gare, espace collaboratif et maison du Wagon Montréal La diversité et l’inclusivité dans les tech: actions et opportunités à Montréal Read the English version Pourquoi amener le sujet de la diversité dans les tech dans un Wagon Talk? Parce que c’est un enjeu qui m’importe personnellement : je suis une femme et j’oeuvre dans le milieu des technologies depuis plus de 15 ans. Mais pas juste pour ça, ce serait trop réducteur. Parce que des vagues de scandales américains récemment véhiculées dans les médias ont choqué, interpellé et fait réagir les communautés partout dans le monde. Parce qu’au Canada, la communauté tech s’est porté championne de la diversité: des milliers d’entrepreneurs, acteurs et personnes impliquées dans des startups et entreprises technologiques l’ont reconnu comme une valeur qui fait la force et la richesse du pays. Et au delà des mots, certaines agissent. Parce qu’au Québec, comme ailleurs dans le monde, on constate que les start-up et les entreprises technologiques ont encore du chemin à faire face à cet enjeu. Parce qu’à Montréal, on en parle aussi beaucoup et plusieurs initiatives oeuvrent à une plus grande diversité, notamment Startup Mosaic, Maison Notman et Ladies Learning Code, … la liste est longue. Définitions La diversité: Ensemble des personnes qui diffèrent les unes des autres par leur origine géographique, socio-culturelle ou religieuse, leur âge, leur sexe, leur orientation sexuelle, etc. , et qui constituent la communauté nationale à laquelle elles appartiennent ( Larousse) Avoir une démarche inclusive: “ Tout le monde est invité à s’impliquer; quelque que soit leur genre, orientations sexuelles, traditions, races, etc. ” Chloé Freslon, journaliste et animatrice; Ilias Benjelloun, Emma Notman & Cassie L. Rhéaume Un momentum pour faire le point à Montréal On s’est dit que c’était le bon moment pour faire le point sur la situation à Montréal et les actions qu’il nous reste à accomplir, en tant que société et individu pour adopter une démarche plus inclusive, équitable et juste. Nous avons réunis des acteurs et champions de la communauté le 6 juillet dernier pour en parler: Cassie L. Rhéaume, développeuse, conférencière et ambassadrice de la division montréalaise de Ladies Learning Code Emma Williams, directrice de campus, Maison Notman Ilias Benjelloun, directeur créatif de M T L New Tech et Interpreneurship Catalyst, Desjardins Lab. com Le panel était animé par Chloé Freslon, journaliste et auteur du blogue U Relles, un blogue dédié aux femmes en tech. “ Je crois fort au pouvoir des modèles dans la vie pour changer ce qui ne va pas dans les sociétés. ” Chloé Freslon Faits saillants issus de la discussion L’enjeu de parité s’aggrave. Dans les années 50 et 60, il y a eu des femmes pionnières en informatique. Quand l’informatique est entré dans les foyers, dans les années 80, l’ordinateur a été amené comme un jouet pour les gars. Cet effet d’inertie a poussé les garçons à être dans l’écosystème technologique plus tôt que les filles. Il est encore difficile de changer la culture du “bro”, de sortir des stéréotypes machistes dans une culture qui peine encore à être inclusive. Un moyen important pour remédier à cela: favoriser la littératie numérique envers les jeunes filles pour leur faire comprendre que les technologies s’adressent à tout le monde. On a besoin de diversité pour créer de la valeur du point de vue économique (un rapport de Mc Kinsey Global Institute prédit que les avancées en matière d’équité dans les entreprises pourraient augmenter le Produit Intérieur Brut ( P I B) du Canada de 150 milliards de dollars d’ici 2026), du point de vue créatif et du point de vue social. Les avancés en intelligence artificielle sont une opportunité pour défaire les biais que nous avons et c’est pourquoi la diversité des genres, des origines et des cultures est essentielle. Les scandales liés aux inégalités, discriminations et abus qui font l’actualité contribuent au sentiment d’insécurité mais favorisent aussi à témoigner des situations discriminatoires et inéquitables et donne l’espoir que certains comportements ne soient plus tolérées. Les actions et solutions dans la communauté tech à Montréal sont nombreuses. On est chanceux de vivre dans une communauté tissé serrée, d’avoir des piliers comme Maison Notman et M T L New Tech, de profiter d’une multitude d’événements, de disposer de plusieurs façons d’apprendre à coder (un bootcamp comme Le Wagon Montréal ou des organismes à but non lucratif comme Les Pitonneux ou Ladies Learning Code, — d’ailleurs, petite parenthèse, 43% des élèves de bootcamp en Amérique du Nord sont des femmes), d’avoir des groupes Slack et Facebook pour les femmes en tech. , des initiatives comme Startup Mosaic et Queer Tech M T L qui mettent de l’avant des modèles issus de la diversité et des leaders issus de la diversité pour encourager la diversité. C’est par les efforts de chacun que les choses pourront changer disait Ilias lors du talk. Nous le croyons. C’est d’ailleurs pourquoi notre programme s’adresse à tous les esprits créatifs et entrepreneuriaux, peu importe leur genre et leur origine et il est ouvert sur le monde (20 Wagon à travers le monde aujourd’hui qui accueille des étudiants du monde entier). Nos attentes par rapports aux candidat-es ? Une (très) forte motivation, la curiosité et la sociabilité. Cristina, architecte et étudiante au Wagon Montréal, batch #77 Et vous ? Avez-vous des exemples de gestes et d’actions qui changent les choses ? Envie d’en savoir plus sur nos prochains événements 📅? Inscrivez-vous à notre groupe Meetup. Pssst… Cette “story” vous a plu? Clap 👏 et partagez pour que d’autres puissent la lire aussi. N’hésitez pas à nous laisser un commentaire ! 🤗 La diversité dans le monde de la techno à Montréal : table ronde organisée par Le Wagon | A S K I D A Photo: Le Wagon La diversité est très importante pour Askida. Nous embauchons des experts d'un peu partout à travers la…askida. com Changer de carrière en 9 semaines grâce aux femmes et à l&rsquo;inclusivité Neuf semaines pour devenir programmeur full stack et construire un site web avec des gens qu&rsquo;on ne connait pas…journalmetro. com Le Wagon Montréal - Coding School Le Wagon (https://goo. gl/ Y As262) démystifie le code à travers le monde et a déjà formé plus de 1900 étudiants. Vous êtes…www. meetup. com Originally published at medium. com on July 21, 2017.","['Diversity In Tech', 'Diversity And Inclusion', 'Technology', 'Codingbootcamp', 'Women In Tech']",https://medium.com/@lewagonmontreal/la-diversit%C3%A9-et-linclusivit%C3%A9-dans-les-tech-actions-et-opportunit%C3%A9s-%C3%A0-montr%C3%A9al-48eda39273b1,False
Azharie Muhammad,I'm Fullstack Web Developer,Setelah Setahun Belajar Coding – Azharie Muhammad – Medium,2018-08-05 08:50:03,medium,"Setelah Setahun Belajar Coding1 Agustus kemarin tepat setahun saya belajar coding. Untuk itu saya ingin menandai tanggal ini dengan membuat tulisan pertama saya di medium. Saya ingin membagi pengalaman bagaimana saya belajar coding, cerita saya mengganti karir dari seorang Lab technician menjadi developer. Juga bagaimana saya mendapatkan kerjaan pertama saya sebagai seorang profesional web developer. Yeah Mungkin kita sedikit perkenalan dulu ya. Saya Azharie, awalnya bekerja sebagai pegawai honorer di sebuah puskesmas di kabupaten Buru tepatnya kota Namlea sekitar 8 jam naik ferry dari kota Ambon. Dulunya saya aktif di program pemberantasan Malaria di provinsi Maluku dan dari program malaria ini saya berkesempatan untuk belajar selama 3 minggu di Melbourne setelah mendapat beasiswa Australia Awards. Semenjak kecil saya sudah menyenangi komputer. Main game, browsing internet dan lain lain yang berhubungan dengan komputer. Sempat bermimpi untuk menjadi programmer tapi tidak tahu harus belajar apa. Sekitar 3 tahun saya bekerja sebagai Analis kesehatan di Laboratorium. Kalau kamu pernah ke dokter dan diminta periksa darah. Nah itu lah perkerjaan saya dulunya, memeriksa darah pasien di laboratorium. Di tahun terakhir, gara gara lowongan C P N S tak kunjung dibuka. saya berpikiran untuk mencari kerjaan lain atau melanjutkan studi S1. Disitulah saya mulai coba membuat riset kecil-kecilan kira kira kerjaan apa yang paling menjanjikan di masa depan. hm, ternyata menjadi programmer adalah termasuk pekerjaan dengan gaji tinggi. Coding is very important when you think about the future, where everything is going. With more phones and tablets and computers being made, and more people having access to every thing and information being shared, I think it’s very important to be able to learn the language of coding and programming. Chris Bosh. N B A All- Star, Miami Heat Niat saya bisa punya side job sebagai programmer dan mulailah saya belajar coding. Proses di awal belajar coding adalah yang paling sulit. Saya memulai dengan belajar Python dari teks P D F Learn Python The Hard Way karya Zed A. Shaw namun setelah 2 minggu belajar saya merasa tidak mengerti apa-apa. sintaks aneh, banyak istilah yang saya tidak mengerti bikin sakit kepala 😵😵😵dan kemudian ini membuat hasrat buat belajar mulai pudar. Semua orang yang belajar coding akan merasakan hal yang sama. salah nulis sintaks bikin console error. Gak ngerti apa yang dipelajari atau bahkan gak tahu harus mulai dari mana. jangan takut, slow aja bro. Mungkin karena keseringan googling mengenai coding tiba tiba saya menemukan iklan coding bootcamp muncul di instagram. Yup. Hacktiv8, saya salah satu korban iklan mereka. hahaaa. Ada cerita menarik ketika saya kasih tahu ke orang tua dan teman teman saya mengenai keinginan saya untuk pindah karir. Ada perasaan bahwa ini adalah ide gila. Tipikal orang ambon adalah kerjaan yang terjamin masa depannya cuma P N S lain dari itu abu-abu. Okay tulisan ini akan membuktikan bahwa pilihan saya bukanlah sekedar gambling. Kemudian setelah berpikir panjang dan saya putuskan untuk bergabung di coding bootcamp ini untuk menjadi profesional web developer. it’s a true life changing experience. Berbekal nekat ke jakarta. Ku mulai petualangan baru ini. Life at coding bootcamp Belajar di Hacktiv8. Ini bagian paling buruk dari tulisan ini. Program belajar di hacktiv8 ini ditarget bisa selesai dalam 4 bulan. Namun yang terjadi pada saya adalah sekitar 6 bulan baru bisa selesai dari hacktiv8. saking gue struggle banget belajar coding. Di fase awal yang diajari hal hal yang paling fundamental. Print hello world di console atau membuat web static dan yang paling berat adalah belajar logika programming. Baru sebulan di hacktiv8 saya merasa ingin balik ke Ambon. Kayaknya ini bukan tempat saya. Tapi mau gimana lagi udah bayar mahal hehe. Programming is so so hard. Banyak pelajaran yang tidak masuk di otak saya. Impostor syndrome (also known as impostor phenomenon, impostorism, fraud syndrome or the impostor experience) is a psychological pattern in which an individual doubts their accomplishments and has a persistent internalized fear of being exposed as a “fraud”. Wikipedia Sindrom impostor adalah hal biasa yang dialami seorang newbie. Tapi kamu harus tetap semangat, emang sih coding itu susah susah gampang. Anggaplah apa yang kamu pelajari hari ini dan hari besok adalah titik titik informasi yang tidak jelas. Tugas kamu adalah menyambungnya sehingga titik titik ini menjadi lebih jelas. Kamu jadi tahu kenapa di awal pelajaran di hacktiv8 kita lebih ditekankan computational thingking ketimbang langsung membuat aplikasi. Karena coding itu adalah cara kita menyelesaikan masalah dengan langkah yang jelas. Pressing yang diberikan para instruktor juga sebenarnya hanya secuil dibanding apa yang nanti kamu hadapi di kantor pertamamu. Saya sendiri hampir di depak karena tidak lulus di fase 1 dan 2. tapi saya tetap semangat belajar hingga bisa lulus setelah 6 bulan di hacktiv8. Every skill you acquire doubles your odds of success. Scott Adams Pekerjaan Pertama Sebagai Web Developer Saat mendapat kerjaan pertama, saya telah membuktikan bahwa riset kecil-kecilan saya dulu mengenai kerjaan yang paling menjanjikan. Kamu bisa mendapatkan gaji dengan range 8 sampai 12 juta perbulan. Bekerja di startup dengan culture yang tidak boring seperti di kantor pemerintahan. Jam kerja yang fleksibel. Saya sekarang menjadi front end developer di Gramedia. com, sebulan pertama saya sebagai developer, ada sedikit ketakutan tidak bisa menyelesaikan task yang diberikan. Tidak merasa percaya diri jika harus coding sendirian tanpa di bantu senior. Dan error-error lainnya. But it’s okay. Hal menarik lainnya adalah banyak orang yang kaget saat tahu background saya adalah seorang tenaga kesehatan tapi bisa ngoding hehe. Karena sebenarnya apapun profesi mu, kamu bisa menjadi programmer juga. Learning to code will be a huge booster for your future, no matter what your professional plans may be. Learning to code will also make you extremely cool! Max Levchin. Co- Founder, Paypal Lifelong Learner Dunia teknologi berubah begitu cepat. To keep up with the trends seorang programmer harus tetap belajar. Sekarang menjadi lifelong learner bukan lagi sebuah opsi kita tidak bisa menghindarinya. Saat ini saya merasakan bagaimana profesi yang saya jalani ini mengharuskan saya untuk terus belajar. membaca artikel, mencoba menyelesaikan sebuah tutorial programming. Belajar bahasa baru. Ini adalah pengalaman belajar yang saya tidak temukan di profesi saya sebelumnya. Biasanya ada dua pilihan yang di ambil oleh seorang programmer apa dia ingin expert dalam satu hal atau menjadi general di banyak hal. Kalau saya lebih prefer menjadi general di banyak hal. Tapi intinya ini membuktikan bahwa belajar itu hingga akhir hayat. Hobi saya adalah membaca. Pernah suatu kali teman saya bilang kok kamu tahu banyak mengenai teknologi. Kamu kayak lulusan I T bukan anak lulusan coding bootcamp. Well, ini akibat dari setiap hari baca artikel. Satu tips buat kamu yang bukan anak I T tapi lagi belajar coding agar kamu tidak ketinggalan pengetahuannya dari anak I T maka dengan banyak banyak membaca artikel mengenai teknologi ataupun coding, kamu bisa membuat percakapan mu dengan mereka anak I T tulen lebih masuk akal. Akhir Kata… Seperti itulah cerita saya belajar coding selama setahun ini dan berganti karir menjadi programmer. Hal lain yang saya lakukan adalah sharing apa yang saya tahu. Saya senang berbagi, menjadi mentor coding untuk beberapa teman saya, ikut berbagai macam talks atau meetup para developer. Bertemu orang baru. nonton video ted talk dan sekarang lagi belajar untuk menjadi seorang tech entrepreneur. Semoga tulisan saya bisa menginspirasi teman teman semua. Terima Kasih.","['Coding', 'Codingbootcamp', 'Freecodecamp', 'Indonesia', 'Jakarta']",https://medium.com/@azharieazharou/setelah-setahun-belajar-coding-88cac4d741d1,False
Jonathan Chevalier,,"Pourquoi le Wagon a changé ma vie, et devrait peut être changer la vôtre ?",2016-09-02 17:23:55,medium,"Pourquoi le Wagon a changé ma vie, et devrait peut être changer la vôtre ? Avant de commencer je tiens à préciser que c’est mon tout premier article, first one ever! Et oui l’orthographe et moi on n’a jamais été trop copain, faites pas trop gaffe aux fautes quoi! Petit stop sur mon background pour comprendre l’essence de cet article (ca y est ma prose est en place on peut commencer). J’ai passé 5 années dans la plus grosse boite de construction française en tant qu’ingénieur, c’est un peu le genre de job qui te donne une situation confortable et tranquille, mais qui ne te stimule pas assez, en tout cas, pas suffisamment à mon goût. J’ai pris la décision d’arrêter de subir mon lavage de cerveau au métro boulot dodo (et d’écouter mes collègues parler de la retraite comme le Saint Graal), et j’ai choisi l’option “ Crush it” de mon pote Gary. Bah oui, c’est bien V O U S le seul commandant à bord, personne ne prendra cette décision à votre place! Quitter un job tranquille et confortable n’est jamais facile, on sait souvent ce que l’on perd mais on ne sait jamais ce que l’on gagne, c’est assez fucked up comme principe. Mais croyez moi, si vous aussi vous avez ce besoin d’innovation, de découverte, de création, de challenge, de voyage et un peu geek aussi, ne cherchez pas plus loin, le Wagon Brésil est fait pour vous ! Et aussi un peu d’argent de côté parce c’est pas gratuit, mais c’est vraiment pas cher comparé à ce que vous gagnerez. Le Wagon pour ceux qui ne connaissent pas, c’est le “bootcamp” de référence pour les entrepreneurs. Grosso modo c’est deux mois très intense où vous apprendrez à coder et deviendrez un super ge̶̶e̶k̶ développeur. Mais pourquoi faire le Wagon au brésil ? Est-ce que j’ai vraiment besoin de préciser ? Sun, beach, people, art de vivre, Samba, Churrasco, s̶t̶r̶i̶n̶g̶ la liste risque d’être longue… Une chose mérite vraiment d’être rectifiée, oui c’est un pays dangereux, mais non vous n’allez pas vous faire agresser à chaque coin de rue. Je ne pourrai pas vous dire pourquoi le faire en France, mais je peux vous dire pourquoi le faire au Brésil. L’équipe est vraiment géniale, les participants sont tous aussi intéressants les uns que les autres, la pédagogie est exceptionnelle, les profs sont géniaux et l’ambiance ne pourrait être meilleure. Tous les ingrédients sont vraiment réunis pour vous faire réussir. La suite ? j’ai décidé de faire une école de portugais pendant 1 mois et demi «porque nao falou portuguese muito bom», mais c’est cool parce que les vidéos de cours sont aussi en français et les profs parlent tous anglais, et ca donne aussi un visa étudiant de 6 mois. Ensuite j’ai pris l’option startuppeur à Salvador de Bahia jusqu’à la fin de mon visa and then lets find out! Mais le plus important à mes yeux, et de loin, ce sont les perspectives. Être heureux de se lever tous les matins, de pouvoir travailler aux quatre coins du monde (ou même chez soi pour les plus casaniers) ou encore de monter sa boite avec ses potes. Et surtout d’être stimulé au quotidien par un job intéressant où tous les jours sont différents et l’apprentissage est illimité. Ma conclusion : Si vous n’êtes pas épanoui dans ce que vous faites, vous êtes curieux, vous aimez la technologie et l’innovation, vous souhaitez monter votre boite ou encore travailler dans une start up au Brésil ? pas besoin de chercher plus loin. Si vous avez des questions, ou quoi ce soit je me ferai un plaisir de vous répondre! You can ping me on https://www. linkedin. com/in/jonathan-chevalier-18b4ba57 . P E A C E. ps : Voilà ce que vous serez capable de faire après vos deux mois de formation : http://www. calendr. io/ Why Le Wagon changed my life, and might change yours? Before starting I want to precise that this is my very first article, first one ever! Yes orthography and I were never really friends, so don’t focus on my grammar mistakes! Small stop on my background to understand the essence of this article (my prose is now on fire we can start). I spent five years in the biggest french building company as an engineer, it’s kind of a job that gives you a comfortable and chill position, but that does not stimulate you enough, i mean not enough from my point of view. I decided to stop undergoing the brainwashing “subway job and sleep” (and the hearing of my colleagues speaking of their retirement as the Holy Grail), and I chose the “ Crush It” option of my buddy Gary. Well yes, Y O U A R E the only captain on board, no one will make this decision for you! Leaving a chilling and comfortable job is never easy, we often know what we lost but never know what we earn, yes this sound pretty fucked up. But believe me, if you also have this need for innovation, discovery, creation, new challenges, travel and a bit geeky side too, look no further, Le Wagon Brazil is for you! And also have a bit of money aside because it is not free, but it’s really not expensive compared to what you will earn. Le Wagon for those who do not know, is the french “bootcamp” referency for entrepreneurs. Basically it’s two very intense months where you will learn to code and become a super ge̶̶e̶k̶y developer. But why make Le Wagon in Brazil? Do I really need to explain? Sun, beach, people, lifestyle, samba, churrasco, s̶t̶r̶i̶n̶g̶ the list is endless … One thing really deserves to be corrected, yes it is a dangerous country, but no you are not going to be attacked on every street corner. I can not tell you why to do it in France, but I can tell you why doing it in Brazil. The team is really awesome, the participants are so much interesting, teaching is outstanding, teachers are really great and the atmosphere could not be better. All the ingredients are really there to make you successful. The following ? I decided to make a Portuguese school for a 1 month and a half «porque nao falou portuguese muito bom», but it’s cool cause the courses lessons video are also available in French and pretty soon in english too, plus the teachers all speak English, and it also give you a 6 month student visa. After that I decided to go for the startuppeur option in Salvador de Bahia until the end of my visa and then lets find out! But most important to me, by far, are the perspectives. Be happy to get up every day, work around the world (or even at home for the lazy one) or simply setting up your company with your buddies. And especially to be daily stimulated by an interesting job where every day is different and with unlimited learning options. My conclusion: If you are not fulfilled with what you do, you’re curious, you love technology and innovation, or thinking about creating company or working in a start-up in Brazil? No need not look further. If you have any questions, or anything I’d be happy to answer! You can ping me on https://www. linkedin. com/in/jonathan-chevalier-18b4ba57. P E A C E. ps: This is what you’ll be able to do after the training: http://www. calendr. io/","['Codingbootcamp', 'Startup', 'Entrepreneurship', 'Ruby on Rails']",https://medium.com/@jojoooo/pourquoi-le-wagon-a-chang%C3%A9-ma-vie-et-devrait-peut-%C3%AAtre-changer-la-v%C3%B4tre-db1a619e554e,False
Jesús Silva Méndez,,Comparación objetiva entre la Formación Profesional (DAW y ASIR) y los Bootcamp de programación —…,2018-10-01 10:58:04,medium,"Comparación objetiva entre la Formación Profesional ( D A W y A S I R) y los Bootcamp de programación — ¿dónde estudiar? Al grano, en este post voy a contar objetivamente las diferencias que he vivido entre un bootcamp de programación y la F P. Por facilidad lectora, he dividido la comparación en “asignaturas” y “salidas laborales”. Y, más abajo, he desarrollado un poco mi experiencia personal… Primeros datos: Soy un chico de Olivenza, un pueblo de Badajoz, que desde bien pequeño empecé a sentir curiosidad por el mundo de la informática. Decidí hacer el Ciclo Formativo de Grado Superior ( C F G S) en “ Administración de Sistemas Informáticos en Red” también conocido por sus siglas como A S I R y posteriormente cursé otro en “ Desarrollo de Aplicaciones Web” o D A W. Posteriormente y por motivos que cuento más abajo, hice Ironhack, un bootcamp intensivo de programación. Como os decía, al haber cursado ambas cosas, puedo tener una opinión más objetiva. Así que nada, ¡empieza la comparación! P O R A S I G N A T U R A S Lenguaje de Marcas ( F P) en la cual se imparte H T M L y C S S con temario obsoleto. A consecuencia de esto, teníamos que hacer webs con iframes y tablas, ni siquiera utilizaban “divs”. La asignatura duró 9 meses. En el bootcamp dimos H T M L5, C S S3, j Query y Canvas en las 3 semanas del módulo 1 (front). Durante la última semana de este primer módulo todos los alumnos tienen que hacen un pequeño proyecto. Base de Datos ( F P) la duración de esta asignatura es de 18 meses, ya que se imparte durante los dos años del ciclo. En ella aprendí bases de datos relacionales. Me gustó mucho que fuese una asignatura con bastante práctica, aunque me hubiera gustado que los profesores estuvieran más actualizados. En el bootcamp, durante las 3 semanas del módulo 2, aprendí a usar bases de datos no relacionales. Vimos Mongo y Express. Aquí añado Stick Overflow el pequeño proyecto que hice al final de este módulo para afianzar lo aprendido. Desarrollo web en entorno servidor ( F P) en este módulo de 9 meses de duración se enseña Back- End en P H P. Estuvo bien ya que es un lenguaje demandado, aunque el formato de aprendizaje está anticuado. Se debería poder aprender más en menos tiempo. En el bootcamp, durante 3 semanas aprendimos Node J S con Express, con temario y tecnologías actuales. Desarrollo web en entorno Cliente ( F P), como el anterior, este también dura 9 meses y solo se aprendía Java Script. En el bootcamp dimos Angular 5 en la primera semana del módulo 3. Y, para acabar, en las dos últimas semanas del bootcamp, hicimos el proyecto final. Programación ( F P), en este módulo se da la base para aprender a programar, con una duración de 9 meses. En el bootcamp, que tiene una duración de 9 semanas, estás constantemente aprendiendo buenas prácticas a la hora de programar. Como por ejemplo ‘debuggear’, un proceso importante a la hora de entender cómo funciona el código y de encontrar posibles errores. Estas son las asignaturas más importantes de Desarrollo de Aplicaciones Web. El resto de asignaturas que tuve en la F P son un poco de relleno. Formación y Orientación Laboral, Empresas e Iniciativa Emprendedora, Sistemas Informáticos…“ La imagen de la Formación Profesional ( F P) en España no alcanza todavía el aprobado, según un estudio”. Administraciones, centros y empresas reclaman un currículo más actualizado, más autonomía y un mejor nivel de inglés en la F P Europa press 19/04/2018 P O R S A L I D A S L A B O R A L E S Datos: Tras los dos grados superiores de F P hice 14 entrevistas, recibí 8 ofertas como becario y 0 ofertas como programador junior. Acabé trabajando de conductor en una empresa de alquiler de coches. Tras el bootcamp de Ironhack, hice 41 entrevistas, recibí 8 ofertas como programador junior y a los 14 días de salir ya estaba trabajando (donde sigo hoy en día). * Nota: De mi clase de Ironhack fuimos 25 graduados de los cuales solo 8 tenían background técnico. Cinco meses después, 23 de ellos ya están trabajando y 2 buscando. The Key Talent, Cover Wallet y Minsait son algunos ejemplos de las empresas donde trabajan mis compañeros. La media de sueldo de todos nosotros es aprox 24. 000€ brutos/año. Una vez acabados los “datos” voy a desarrollar algo más ambas experiencias y voy a hacer otras comparaciones… Al salir de F P, y a pesar de tener estos dos C F G S no conseguí encontrar trabajo de lo que había estudiado, ya que para las empresas era como si prácticamente no tuviese nada y lo único que me ofrecían eran becas. El problema estaba en las entrevistas, nos hacían pruebas técnicas y no sabíamos defendernos. En las pruebas técnicas nos pedían cosas que no habíamos visto. Así que decidí probar suerte en Madrid donde el mercado laboral ofrece más oportunidades que en Extremadura. Aún así, después de revisar todas las aplicaciones de empleo ( Infojobs, Jobandtalent, Job Today…) y después de recorrerme Madrid entera echando C Vs, no conseguí encontrar trabajo de programador. Para poder quedarme en Madrid no tuve más remedio que olvidarme de mi “sueño” de ser programador y buscar otro trabajo. Tuve suerte y encontré trabajo como operario de flota para una empresa de rent a car. Un año después, buscando algún máster o estudio similar que me pudiera dar un poco más de salida laboral, me topé con Ironhack. Me llamó tanto la atención que en el mismo momento me puse a investigar acerca de sus bootcamps. Admito que al principio sonaba todo demasiado bonito para ser verdad, pero tuve la ocasión de hablar con gente que había hecho anteriormente el bootcamp y mi mente se negaba a creer que lo que me estaban contando era real. Parecía que querían venderme un producto, eran como comerciales y, sin embargo, simplemente eran antiguos alumnos contándome con mucha pasión lo que vivieron ellos. Más adelante, al vivirlo personalmente, entendí porqué lo contaban con tanta energía. Hoy, unos meses después de acabar el bootcamp, puedo hacer la siguiente comparación: Mientras que en los ciclos se da “ Formación y Orientación Laboral” o “ Empresas e Iniciativa Emprendedora” cuya duración de ambas asignaturas son de 9 meses, en Ironhack cuentan con una Placement Manager ( Sonia Roca) dedicada a nosotros durante todo el bootcamp. Entre otras cosas, Sonia nos ayuda a mejorar nuestra imagen a la hora de buscar trabajo, nos ayuda a potenciar Linkedin y se dedica a contactar con cientos de empresas para que conozcan el talento que sale de Ironhack. Echando la vista atrás, y volviendo a la F P, recuerdo estar un poco quemado por el sistema educativo de España y por los profesores que me tocaron. Llegué a tener profesores que pasaban completamente de dar clase o que no se le podía sugerir un cambio para mejor en el temario ya que se lo sabían “de pe a pa” y era lo que repetían como loros. Al fin y al cabo eran profesores que llevaban toda una vida enseñando lo mismo y que, al parecer, ya estaban cansados. España suspende en Formación Profesional, según la O C D E El pais 12/09/2017 Sin embargo, en Ironhack cualquier sugerencia se valora y se estudia si llevarla a cabo o no. Escuchan a los alumnos y a las empresas para, a partir de esos comentarios, mejorar el curriculum y la metodología de enseñanza. Además, en el bootcamp se notaba mucho que a los profesores les gustaba lo que hacían y soy de los que piensan que si alguien trabaja en algo que le gusta lo acaba haciendo mucho mejor. En definitiva, se puede ver que hay un fuerte contraste entre una enseñanza y la otra. Con todo esto no digo que una Formación Profesional esté mal, y que por ello no lo hagáis, ya que te da una base de la cual poder partir y en ocasiones no viene mal, pero es bueno ser consciente de lo que hay. En Ironhack, y en concreto en mi promoción, han pasado alumnos que venían de carreras muy diferentes ( Derecho, Periodismo, A D E, Bellas Artes, etc. ), incluso gente sin carrera ni bachillerato. Y, aunque no vinieran de un campo tecnológico como fue mi caso, han aprendido lo mismo o incluso más que yo. Por último, me gustaría añadir que, además de los conocimientos técnicos ya mencionados, en Ironhack aprendes a controlar la frustración, a saber que descansar es importante y a buscarte la vida por ti mismo. Como nos solían decir, ‘aquí se aprende a aprender’. Si alguien tiene alguna duda, os animo a escribirme a hola@jesussilva. es o contactarme por Linkedin.","['Fp', 'Codingbootcamp', 'Coding', 'Programación', 'Desarrollo Web']",https://medium.com/ironhack/fp-vs-bootcamp-b8d04ec19fef,False
Pedro Duque Estrada Meyer,"cofounder of Le Wagon Brasil, the first Coding Bootcamp in Brazil",Aprenda a mudar e programe o mundo! – Codando by Le Wagon – Medium,2017-07-18 20:47:37,medium,"Aprenda a mudar e programe o mundo![ You can also read this article in English] Eu vou contar pra vocês uma historinha de como aprender a mudar pra programar o mundo. O mundo está mudando rápido mas não necessariamente na boa direção, mas nunca foi tão fácil adquirir as habilidades para ajudá-lo a pivotar. No final de 1998/começo de 1999 eu era um skatistazinho punk de 17 anos e tinha que escolher um curso de universidade. Eu queria ajudar a salvar o mundo. Entre várias opções acabei escolhendo estudar Relações Internacionais. Estudei durante 4 anos e meio e trabalhei em algumas O N Gs de direitos humanos. Durante esse tempo duas coisas me marcaram: Quando fui na reunião do conselho de direitos humanos da O N U e vi um monte de velho rico barriga branca discutindo sobre vírgulas e parágrafos num texto regulador e fazendo política durante horas. E em 2001 quando fui a Índia e logo antes de aterrizar o país foi atingido por um dois mais fatais terremotos que já se viu por lá, matando 20. 000 pessoas. Ver o que a combinação miséria + desastre natural pode fazer me deprimiu muito. Eu acabei me dando conta que realmente não havia muito o que fazer e não tinha idéia como eu poderia efetivamente ajudar. Resolvi deixar a ambição altruísta de lado e ganhar dinheiro fazendo algo divertido. Em 2004, quando me formei eu virei fotógrafo de moda! Passa pra frente 11 anos. Estamos em 2015. Ainda trabalho com fotografia de moda e publicidade, casado com uma moça muito especial e ela está grávida. Mais uma vez, depois de tanto tempo, volto a me perguntar o que será que eu poderia fazer para ajudar a construir um mundo melhor. O mundo continua doente e precisando de cuidado. Eu não tenho mais 17 anos, tenho 34. Começo a ler bastante sobre tudo, revisitar antigos interesses e procurar novos. Escuto falar através de um amigo sobre o Ouishare Fest em Paris, pertinho da minha casa. Consegui um daqueles ingressos gratuitos pro ultimo dia e fui meio sem saber o que ia encontrar. Eu fiquei super impressionado. Era a edição “ Lost in transition”, um pouco depois do boom da “sharing economy”. Achei curioso que três grupos diferentes de pessoas se destacavam — as pessoas normais como a gente, os yuppies capitalistas caçando o próximo uber/airbnb e os hippies querendo salvar o mundo. E todo mundo estava falando a mesma coisa, todos estavam falando sobre mudar o mundo. A discussão sobre a apropriação da retórica de “mudar o mundo” pela cultura startup fica pra próxima, mas enquanto todo mundo quer mudar o mundo, ninguém quer mudar a si mesmo. Você já prestou atenção numa criança brincando ? Ela pode passar horas ou até mesmo dias brincando com o mesmo brinquedo, mas eventualmente ela cansa daquele brinquedo e escolhe um outro. Ela troca de brinquedo preferido como trocamos de roupa. As vezes o brinquedo interessa a ela por minutos, as vezes por semanas. As vezes ela volta para um brinquedo que gostava, as vezes não. Por que somos ensinados que com nossas carreiras, trabalho, ou interesses em geral deve ser diferente ? Por que devemos escolher um trabalho e repeti-lo pelo resto da vida ? Mudar é se livrar de correntes que nós mesmos construímos. Eu estava super decidido a mudar o mundo, e sabia que para isso eu ia ter que mudar de carreira. Mas qual carreira ? Se olharmos por trás das cortinas de todas as tecnologias que estão mudando o mundo em todas as áreas — finanças, saúde, política, ciência, educação, entretenimento, etc — encontraremos a mesma coisa: No pun intended #sqn Código. Se no começo dos anos 2000 era difícil descobrir como colaborar para um mundo melhor, hoje sabe-se que a programação é a ferramenta responsável pela estrutura dos maiores projetos que estão fazendo exatamente isso. Ok, então fui dar uma olhada em projetos que me interessavam e eles tinham essa cara aqui:wtf ? Se tem uma coisa que as pessoas temem mais do que mudança, essa coisa é código. Ok, para mudar o mundo eu precisava de aprender código. Minha experiência com código se resumia a dois/três tags de html que eu usava em bate-papo do U O L lá em 1999. Na época eu até flertei com a possibilidade de aprender mas aquilo mas não tinha idéia nem por onde começar. Hoje em dia, você tem uma infinidade de recursos online, gratuitos ou não, para aprender. — Codecademy, Treehouse, Udemy, Coursera, Edx, etc — Os melhores programadores que eu conheci são autodidatas. E assim comecei a tentar aprender sozinho. Mas infelizmente aprender a programar não é fácil como gostaríamos que fosse. Não é só tomar a pílula vermelha e pra começar a ver a realidade. A curva de aprendizado é muito íngrime, a sensação que tinha era que eu estava tentando subir o everest de skate, sozinho. minha turma no Le Wagon Paris E assim descobri a existência dos bootcamps de programação. Bootcamps são cursos presenciais super intensivos e práticos com duração entre 8 e 12 semanas que ensinam iniciantes a programar. A minha filha ia nascer e eu não tinha tempo para parar 5 anos para fazer uma faculdade de ciências da computação — mas certamente poderia parar alguns meses. E foi assim que descobri o Le Wagon — um bootcamp de programação de 9 semanas em Paris. Foi o que encontrei de mais próximo da pílula vermelha. Eu acho que eu nunca trabalhei tão duro na minha vida. Foram dois meses aprendendo fazendo, de nove da manhã até as 19h da noite no bootcamp e até de madrugada em casa. Não é a toa que pega-se emprestado o termo bootcamp do exército. A partir da primeira semana você começa a sonhar com código — e achar isso bom! O esforço mental é absurdo, mas é impressionante descobrir, junto com várias outras pessoas, o tanto de conhecimento que podemos absorver em tão pouco tempo se estamos determinados e se a metodologia é bem construída. Esse estudo do coursereport sobre os resultados obtidos por bootcamps é super interessante e recomendo a quem se interessar procurar por ele depois. É claro que não são todos que querem mudar o mundo como a gente, alguns só querem um emprego melhor do que o que tem. Ok, legal. Mas e para aqueles que, como eu, querem ajudar a salvar o mundo ? Bom, lembram dessa tela aqui ? Pois é, depois de tomar a pílula vermelha é mais ou menos isso aqui que a gente vêahhhh…. Essas é uma pequena seleção de tecnologias promissoras que já estão mudando, e muito, o mundo. E- D E M O C R A C Y O modelo de democracia representativa esta em crise, basta olhar pra Brexit, Trump ou pro Brasil pra se dar conta disso. E ao mesmo tempo temos em nossas mãos todos os dias algo que pode nos aproximar e muito da democracia direta, o que há alguns anos atrás parecia um sonho que só países como a Suíça tinham acesso. Ouve-se bastante falar das bolhas ideológicas que os algoritmo de recomendação das redes sociais têm criado, então também não bastaria só democracia direta se as opiniões são todas frutos de curadorias algorítmicas realizadas por machine learning. A S T R O FÍ S I C A Os avanços na astrofísica estão cada vez mais rápidos — estamos olhando e entendendo cada vez mais o universo ao redor da gente. Existem projetos incríveis open source que você pode ajudar mesmo sem ser um astrofísico, tipo o galaxyzoo — um projeto de crowdsourcing onde pode ajudar a classificar e descobrir novas galáxias. Se você tomou a pílula vermelha você pode ajudar com o código por trás do projeto, mas mesmo se tomou a pílula azul pode ajudar através do site. R E A L I D A D E V I R T U A L E I N T E L I GÊ N C I A A R T I F I C I A L Entre esses todos dois me dão medo, e não acho que seja por assistir Black Mirror. Realidade Virtual e Inteligência artificial. Sem querer entrar muito em teorias conspiratórias malucas, V R ainda é visto pela maior parte do público só como entretenimento e inteligência artificial como uma realidade distante, mas não precisa ser muito esperto para perceber que o potencial das duas tecnologias juntas é assustadoramente poderoso. As analogias a Matrix, que aliás foi lançado em 1999 também, não estão aqui por coincidência. Quem se interessar mais por isso pode ler esse artigo do Nick Bolstrom chamado Simulation Argument. Recentemente ele publicou um livro chamado Superintelligence, que é um pouco um guia sobre os perigos da chegada de inteligência artificial. B L O C K C H A I N E blockchain ? Bom, se você ainda não sabe é o que é, pode-se dizer que é o futuro da internet. Ainda há muito espaço para desenvolver novos apps nessa nova camada e inúmeras oportunidades. Mesmo se quiser só investir, só pra se ter uma idéia, se tivesse comprado 20 mil dólares em ether no ano passado hoje teria 1 milhão de dólares… E se nada disso der certo e realmente não conseguirmos salvar o mundo que tal garantir um lugar pra família na colonização de marte? Estava pesquisando projetos open source de viagem espacial e trombei sem querer com um teste de seleção de estagiários de engenharia para o space X no github. Para a minha total surpresa, eu sabia resolver o problema — depois de menos de um ano sabendo programar! Entenderam o tipo de superpoder que código pode te dar? E o que eu fiz nesse ultimo ano? Bom, depois que eu terminei o bootcamp eu virei Teacher Assistant do Le Wagon em Paris e em Amsterdam, por que melhor que aprender fazendo só aprender ensinando! Continuo aprendendo muito todos os dias. Estou desenvolvendo um algoritmo de cálculo de risco genético de cancer junto com um oncologista, criei um app que interage com a base de dados do Panama Papers gerando mapas das offshores da Mossak & Fonseca ao redor do mundo. …tipo esse aqui do rio de janeiro. Eu não mostro o rosto dela pra não correr o risco que ela seja cadastrada em algoritmo de reconhecimento facial. Ah, além disso estou criando a minha filha pra liderar a resistência contra a Skynet e a Evil corp. E trouxe também junto com o Mathieu Le Roux e o Fernando Americano o Le Wagon para o Brasil — então podem se juntar à revolução! Hippies e Yuppies são super bem vindos!","['Codingbootcamp', 'Coding', 'Startup', 'Change']",https://medium.com/codando/aprenda-a-mudar-e-programe-o-mundo-684078034dd0,False
MG Ayoub,"Co-founder @ Le Wagon Montréal, a coding bootcamp that brings technical skills to entrepreneurs and creative people. 🙌 lewagon.com/montreal","Apprendre, entreprendre et suivre ses passions: le parcours atypique d’un jeune développeur",2018-09-05 16:41:35,medium,"Apprendre, entreprendre et suivre ses passions: le parcours atypique d’un jeune développeur Victor Korelsky a suivi le programme Full Stack du Wagon à Paris (batch #30). Entrepreneur, développeur, étudiant en sciences de l’informatique à Mc Gill, il est aussi professeur et coach nomade du Wagon, en résidence principale à Montréal. Une soif d’apprendre: de Paris à MontréalÉté 2014, Victor a 17 ans, il vient de passer l’étape ultime du secondaire français: le baccalauréat. Son diplôme en poche, il décide de partir en Russie pour apprendre le russe. C’est à ce moment là qu’un ami lui propose de lancer une start-up dont la mission est d’offrir un support académique en ligne personnalisé aux étudiants: son aventure entrepreneuriale avec Teech est initiée. Sa soif de défis l’amène à faire l’ascension du Mont- Blanc et réfléchir aux prochaines étapes de sa vie. Cette expérience le pousse à suivre ses passions et à se dépasser. Victor au sommet du Mont- Blanc“Ça été l’expérience la plus dure de ma vie, mais j’en ai retenu que si tu as vraiment envie de le faire, tu y arrives” Au printemps 2015, il intègre la prestigieuse université Mc Gill ( Montréal) en science-politique économie et science de l’informatique. Il réalise alors qu’il lui manque un savoir-faire essentiel pour être indépendant et plus agile dans l’avancée de ses projets, tant académique que entrepreneuriaux: savoir coder. Le Wagon pour accélérer son apprentissage de la programmation web Ces recherches l’amène à découvrir le programme Full Stack du Wagon qu’il intègre à Paris à l’été 2016 ( Batch #30). Après 2 mois d’apprentissage intensif et une application codée en 10 jours, il retourne à Montréal pour poursuivre son Bachelor en science informatique à Mc Gill avec l’opportunité de continuer d’apprendre et de grandir au seinn de la communauté du Wagon. Happy Papy - Le Wagon Paris - Batch #30 Life's never been so easy!www. lewagon. comÀ la question de ce que Le Wagon lui a concrètement apporté, Victor répond:“ Le Wagon m’a permis d’acquérir une expérience solide en programmation web: le bootcamp offre près de 400 heures de code en 9 semaines versus 150 heures sur un semestre universitaire. ” Il complète: “ J’ai l’impression de savoir coder depuis longtemps et je gagne 50% de temps pour réaliser un devoir par rapport à un étudiant de première année qui ne sait pas coder depuis longtemps” Finalement, la différence qui lui semble la plus flagrante est en terme d’employabilité: “ Mon programme universitaire et le bootcamp sont deux concentrations très différentes: mes études me forment aux sciences de l’informatique, le génie logiciel etc. et le Wagon forme principalement au développement web. ”“ Le programme du Wagon apporte bien plus qu’un bagage technique. Il nous apprend à être entrepreneur et construire un produit. ” Victor fait un pitch à un Demo Day L’expérience de C T O en startup Victor garde un pied dans l’entrepreneuriat et continue son implication avec Teech. Après une levée de fonds de 700 000 $, la startup prend de l’essor et se structure. Tout en poursuivant ses études, il devient alors C T O et prend en charge le marketing. Il profite de l’été 2017 pour rejoindre l’équipe, alors basée à Londres ( U K) dans l’incubateur de Kings University, tout en étant professeur assistant au Wagon London. Réunion de la “ Dream Team” @ Teech“ Je me suis rendu compte de l’importance du rôle d’un C T O dans une startup. J’ai passé beaucoup de temps à manager les devs qui travaillaient sans collaborer”. Teech connaît alors une forte croissance avec 20 000 téléchargements de l’application, dont 40 à 50% durant les examens universitaires. Transmettre avec passion: d’alumni à prof au Wagon Installé à Montréal, Victor fait partie de l’aventure du lancement du Wagon dans la métropole, premier chapitre du programme en Amérique du Nord. Il rejoint l’équipe dès la première session, en février 2017. Tout en poursuivant ses études universitaires, il continue aujourd’hui à transmettre avec la même passion un programme qui lui a permis de faire ce qu’il aime aujourd’hui, à Montréal et ailleurs dans le monde. Victor offre du soutien à Aaron, étudiant de la batch #168 du Wagon Montréal“ Le Wagon m’offre l’opportunité de voyager pour travailler auprès d’une communauté internationale hyper-active. Je suis allé à Londres ( U K), à Tokyo ( Japon) et j’y ai retrouvé la même expérience “ Wagon”. Les ambiances sont assez similaires: work hard, play hard”. Son conseil pour les futurs codeurs et entrepreneurs :“ Dites oui aux nouveaux défis spontanément et voyez après comment les réaliser plutôt que de refuser par peur d’échouer. ” Les 3 raisons qui confortent ton choix d’avoir fait le Wagon? Le Wagon m’a accompagné à travers la période frustrante que chaque débutant rencontre en abordant le code. On peut passer par Code Cademy, lire des livres et faire des tutoriels mais il y a un gap entre cela et construire un vrai produit ou une application. Ce gap prend généralement plus de temps à passer au début, car on ne sait pas encore vraiment ce que l’on doit apprendre ni comment les différentes technologies jouent ensemble, donc l’apprentissage est long et souvent frustrant. Le wagon est comme un “cheat code”, on en sort avec tous les outils pour être productif, comprendre et utiliser des technologies plus complexes. Le Wagon m’a permis de rencontrer beaucoup de gens intéressants avec des parcours variés. Cela m’a permis aussi de voyager en enseignant dans différents pays ou le bootcamp est présent. C’est un vrai avantage d’avoir une communauté proche et que la majorité des profs et T A aient eux mêmes suivi le programme a un moment donné. La dernière raison serait que nous avons accès à vie à la plateforme qui contient les cours et les exercices. C’est très utile pour revoir un sujet ou pour apprendre une nouvelle technologie. Le curriculum est constamment mis à jour pour être in sync avec le monde du développement web, donc on peut toujours y apprendre de nouvelles choses et rester up to date. Les 3 conseils que tu donnerais à des étudiants pour tirer le maximum de leur expérience de bootcamp? Regarder les enregistrements vidéo des cours avant le début de la journée. Très utile pour pouvoir se concentrer sur les points importants. Ne pas avoir peur de ne rien comprendre. Cela fait partie du processus d’apprentissage, il faut être confortable avec le feeling d’être perdu face à son code, savoir poser son raisonnement et avancer pas à pas. Ne pas copier/coller de code en ligne, essayer de comprendre tout ce qu’on code. Prendre le temps de lire la documentation et utiliser un crayon et du papier avant de passer au clavier. Vous souhaitez en savoir plus sur le programme du Wagon Montréal? Téléchargez notre Syllabus or prenez un rendez-vous avec nous! 😁 Learning & building: Following your passion as a young developer An entrepreneur, developer and computer science student at Mc Gill, Victor is also a roving instructor and coach for Le…medium. com Coding Bootcamp in Montréal — Le Wagon Working as a junior developer for Stripe, Algolia, Molotov, Save, Compass, 55, Save, etc. . We will help you find your…www. lewagon. com","['Entrepreneurship', 'Startup', 'Codingbootcamp', 'Technology', 'Teaching']",https://medium.com/@mgayoub/apprendre-entreprendre-et-suivre-ses-passions-le-parcours-atypique-dun-jeune-d%C3%A9veloppeur-2ef55e209ebe,False
irra wulandari,Admin Situs Belajar Online Niomic,Belajar Pemrograman c++ Untuk Pemula – irra wulandari – Medium,2018-06-05 07:50:29,medium,"Belajar Pemrograman c++ Untuk Pemula Mari Belajar Bersama Kami di Niomic Cara Belajar Pemrograman khususnya C++ Untuk kalian yang ingin mempelajari pemrograman khususnya mengenai c++ kini ada kabar gembira untuk kalian semua karena untuk belajar c++ saat ini tidak harus mengikuti les pivat dan kuliah yang tentunya biyayanya selangit. Kalian dapat memanfaatkan kecanggihan teknologi saat ini dengan bergabung bersama kami di kelas online Niomic Kelas Belajar Online C++ N I O M I C sebuah startup yang bergerak dibidang pendidikan meluncurkan Program Pembelajaran Online dibidang Programming. Yang menyajikan pembelajaran dengan mode yang cukup mudah di pelajari untuk pemula dan tentunya semua pembelajaran menggunakan bahasa indonesia. Materi pembelajaran di Niomic mengenai html, coding, java script, dan masih banyak yang lainya Metode Pembelajaran Kelas O N L I N E Program pelatihan online yang diluncurkan N I O M I C akan berlangsung selama 12 Bulan dengan didampingi oleh pengajar disetiap kelas onlinenya sehingga setiap peserta yang mengalami kesulitan dapat langsung berkonsultasi dengan para pengajarnya. Materi-materi yang akan dipelajari juga sangatlah terbaru terutama dari bahasa pemrograman yang saat ini banyak digunakan diberbagai industri startup seperti React J S, React Native, Node J S, Golang hingga belajar bagaimana Deployment ke Server. Sangat menarik bukan? Special untuk kamu yang pengin daftar jangan sampai ketinggalan, yuk cek langsung diwebsitenya Niomic","['Programming', 'Codingbootcamp', 'Coding', 'HTML', 'PHP']",https://medium.com/@irrawulandari30/belajar-pemrograman-c-untuk-pemula-1b243c713845,False
Adriana Höher Dorneles,"A Brazilian economist/accountant/developer that can't help being a chameleon, full of long term goals and short term tasks.",Vai começar… – Adriana Höher Dorneles – Medium,2017-01-06 19:43:01,medium,"Vai começar… Sou formada em Economia. Até hoje não entendo muito bem por que, a não ser por aquele dia em que tive que decidir pra qual curso prestaria vestibular (e dar um jeito de fugir de Medicina, que óbvio, era o que meu pai queria que eu fizesse). Pra entender esta história você precisa de: Uma tesoura sem ponta; Folha de ofício; Tá, nada disso. Continuando… Bom, naquele dia, eu imprimi a lista de cursos existentes na Universidade Federal, que era onde eu queria estudar, risquei tudo que não tivesse matemática e tudo que não “desse dinheiro” (como se tivesse alguma noção com 17 anos). Cheguei nas Engenharias bem na hora que meu pai chegou em casa: “ Minha filha, engenharia é coisa de homem, tu, como mulher, não vais ser respeitada e o mercado de trabalho vai ser muito difícil. ” (importante dizer que amo meu paizinho, e entendo a preocupação dele…). Bem, isso somado ao fato de que seria muito improvável trabalhar durante toda a faculdade, e que o campus era onde o diabo-perdeu-as-meias, risquei. Fico feliz de notar que após 10 anos de ter ouvido esta frase, cada dia entram mais meninas nas faculdades de Engenharia. Porque lugar de mulher é onde ela quiser, né?! Sobrou Administração, Economia e Contabilidade. Administração, risquei também (não vou ficar me explicando aqui, adm’s, mas ❤ pra vocês, tá?). Contabilidade eu poderia fazer um técnico — e o fiz. Sobrou Economia. T C H A R A M M M M M que escolha profissional tão bem feita e magnífica!!! Nada pode dar errado… A não ser pelo fato de que não curti a faculdade e que a sensação de que eu posso trabalhar em qualquer lugar e com qualquer coisa me deixou ainda mais perdida do que como eu estava quando comecei a riscar os cursos da lista. Eu realmente queria me encontrar numa profissão. E ainda quero! Bem, mas a vida acontece e é bem assim que as coisas são. Em nenhum momento pensei em trocar de curso. Acreditei no meu método de escolha e confiei que era aquilo mesmo o que eu devia fazer. Sempre tive emprego, e com um esforço aqui e outro ali, nem foi ruim trabalhar no setor financeiro, que foi onde me firmei. Até que fui trabalhar numa empresa de tecnologia — consultoria de software — e o eco que veio na minha cabeça, desde o primeiro dia em que pisei lá, foi: “ E U S E M P R E Q U I S P R O G R A M A R”. Vi meninas programando (eu era bem machistinha) e aquilo me surpreendeu. Será que eu posso também?“ Fiz muita gente chorar quando havia queda de luz e o Word (?) não salvava os trabalhos. ” P C, em 1993. Aprendi a ler e escrever com 04/05 anos usando aquele P C que tinha imagem só preta e branca e usava o M S- D O S como sistema operacional. Pra iniciar eu ia dando aqueles comandinhos que alguém me ditava, e que nem me lembro quais são, mas que me faziam sentir com superpoderes. Mesmo que isso não tenha nada a ver com programação, amar o funcionamento dos computadores — ou, no caso, sistemas operacionais — é essencial pra querer estar sempre perto deles e aprender a mandar nesses queridinhos. Bom, depois de ter saído da empresa de tecnologia pra tentar outra área a não ser a financeira; depois de ter feito minha própria consultoria relacionada a informações gerenciais e automatização de relatórios (no Excel, ferramenta que, até agora, me dei melhor na vida. ); e depois de ter passado num concurso pra Receita Federal (tudo isso em menos de 03 anos), a pulga da programação não quis me deixar. Fui bem sucedida nessas etapas da minha vida e não podia reclamar do que ganhava financeiramente, mas meu cérebro andava pedindo mais. Procurando coding bootcamps* pelo mundo todo cheguei à < Academia de Código >, em Portugal. Além de que o investimento era muito menor do que qualquer outro curso deste tipo que tinha visto até então, só precisaria pagar após conseguir um emprego. U A U, né? Porém, há algumas etapas que não se vê frequentemente nos outros bootcamps, que são:* Coding bootcamps: é um programa de treinamento técnico que ensina as partes da programação com o maior impacto e relevância para as necessidades atuais do mercado. Ele permite que os alunos com muito pouca proficiência de codificação se concentrar nos aspectos mais importantes da codificação e aplicar imediatamente suas novas habilidades de codificação para resolver problemas do mundo real. Fazer um curso web gratuito da Stanford University; Enviar um formulário com muitas respostas sobre ti, e que realmente tem um peso para a ponderação nas etapas 4 e 5 — eles buscam pessoas com uma vibe bem específica: a boa!; Realizar um code challenge após ter feito alguns tutorias no codecamy; Passar no code challenge (número de vagas no bootcamp=~ 20. Apenas o dobro de pessoas em relação às vagas vai à ultima etapa, o workshop); Um dia de workshop: o teste final. Bom, o processo todo demora em torno de 01 mês. Eu fui participando das etapas ainda estando no Brasil. Pra fazer o workshop, como é suposto, tens de estar presente. Esta última etapa, desta vez, foi das 9 da manhã à meia noite (ufff!). É composta de 03 partes: uma aula pra retomar conceitos de J S e apresentar uma library que íamos utilizar pra realizar o último desafio; uma entrevista, que pode ser eliminatória; e o projeto final, que é o código em si. Ontem, um dia após ter feito o workshop, recebi a notícia de que havia passado pro programa. Segunda-feira, dia 09, é o primeiro dia. Tenho certeza de que serão 14 semanas extremamente cansativas, mas que me trarão uma nova visão de um mundo que eu ainda conheço muito pouco, “mas que já considero pakas”. Olha, tudo isso pra dizer o seguinte: P A S S E I, C A R^ L#*! Estes são os meus colegas. Pessoas de várias idades, backgrounds e lugares. O Jesse é americano, por exemplo. Só duas meninas. Pouco, né? Stay Tuned! Assinado: a mais nova developer wannabe (:","['Codingbootcamp', 'Coding', 'Girls In Tech', 'Career Change']",https://medium.com/@ahdorneles/vai-come%C3%A7ar-536bc6118e31,False
Code States,,"개발자 커리어 전환기 1 | 하드웨어 개발자, 소프트웨어 개발자가 되기로 마음먹다. – Code States (코드 스테이츠) – Medium",2018-05-21 02:58:20,medium,"개발자 커리어 전환기 1 | 하드웨어 개발자, 소프트웨어 개발자가 되기로 마음먹다. 개발자는 도대체 어떻게, 누가 되는 거야?코드스테이츠가 가장 많이 받아온 질문 중 하나입니다. 그래서 준비한 특급 연재! 개발자 커리어 전환기! 매주 Immersive Course를 수강하고 있는 수강생 한 분과 인터뷰해서 어떻게 개발을 시작하게 되었는지, 또 현재 무엇을 배우고 있는지에 대한 인터뷰를 포스팅하려고 합니다. 아무것도 모르는 비전공자 출신 분들이(물론 전공자 분도 계십니다!) 개발자가 되어가는 과정을 생생하게 보실 수 있습니다. 그럼, 첫 번째 포스팅의 주인공 이야기를 시작하겠습니다. 코드스테이츠 코딩 부트 캠프, Immersive 6기 과정이 시작되었습니다. 지난 5기 데모데이를 들뜬 마음으로 지켜보던 Pre-course 수강생들이 어느덧 새로운 Immersive 과정의 주인공이 되었는데요. 오늘은 하드웨어 개발자 출신으로서 커리어 전환을 위해 코드스테이츠를 찾아온 6기의 전한길님을 만나봤습니다. Q) 한길님 반갑습니다. Pre Course 수료를 축하드리며 간단한 자기소개 부탁드려요. - 안녕하세요! 전한길입니다. Q) 정말 간단하네요! 보통은 인터뷰어를 위해 좀 더 길게 합니다만…- 아… 전 대학에서 전자공학을 전공했고요. 어쩌다 보니 전자회로 설계일을 하게 되었어요. 원래는 소프트웨어 쪽에 관심이 있었는데 하드웨어 쪽으로 일을 했습니다. 사실, 당시에는 집 가까운 회사를 찾다보니. . (웃음) 어쨌든! 커리어 전환을 위해 코드스테이츠에 오게 되었습니다. Q) 원래 이쪽에 관심이 있으셔서 소프트웨어 엔지니어로 커리어 전환을 하시는 건가요?- 자신만의 기술을 가질 수 있다는 점이 좋아서 소프트웨어 엔지니어를 하기로 결심했어요. 저는 회사생활을 6년 동안 했는데요. 하루하루 똑같은 업무와 일상이 지루하더라구요. 직급이 올라간다고 해서 더 나아질 거 같지도 않았고…사실 깊이 생각하는 성격이 아니에요. 무작정 회사를 나와서 고민했죠. 그러다가 “나만의 기술을 가질 수 있는 매력적인 직업을 갖자”는 저만의 원칙을 고수한 끝에 소프트웨어 엔지니어가 되기로 결심했어요. Q) 그러면 특별히 코드스테이츠를 선택하신 이유가 무엇인가요?- 처음에는 국비지원과정도 알아봤어요. 국비지원과정에서 공부를 할까 하다가 우연히 친구 소개로 코드스테이츠를 알게 되었죠. ‘자기 주도적 학습’이라는 단어에 끌렸어요. 전 코딩이 언어랑 비슷하다고 생각하거든요. 문법을 잘 안다고 영어를 잘하는 건 아니잖아요. 아는 것도 중요하지만 습관이 중요하다고 생각해요. 지름길을 가면서 스스로 코딩을 많이 해볼 수 있을 거 같아서 코드스테이츠를 선택하게 되었죠. 코딩은, 아는 것도 중요하지만 습관이 중요하다고 생각해요 Q) 이건 개인적으로 매우(?) 긴장되는 질문인데, 실제로 Pre-course는 어땠나요?- 코드스테이츠 학습 방식 자체가 강의식이 아니다 보니 생각한 대로 ‘자기 주도적 학습 위주’고, 특히 실제로 코딩을 많이 해봐서 좋았어요. 그리고 위에서 얘기한 것처럼 저는 지름길이 필요했는데요. 방향을 잘 잡아주셔서 좋았어요. 단계별로 공부할 수 있는 내용이 잘 정리되어있더라구요. 시간을 효율적으로 쓸 수 있었습니다. Q) 담당자로서 매우 뿌듯한 답변이네요. :) 특히 어떤 프로젝트가 가장 기억에 남나요?- *twittler 를 만들었을 때가 가장 기뻤어요. 뭐라고 말로 표현하기는 어려운 감정인데, 실제로 눈에 보이는 걸 만들었을 때 성취감이 크더라구요. 그 성취감이 동기부여가 되어서 더 열심히 했던 거 같습니다. *twittler: 코드스테이츠 Pre-course과정에서 수행하는 프로젝트로, 트위터의 일부 기능을 구현한 프로그램한길님이 구현한 twittler Q) 이제 막 Immersive Course가 시작되었는데요. 과정에서는 어떤 걸 기대하나요?- 코드스테이츠의 체계적인 커리큘럼과… 웹 개발자로 취업하는 거?? Q) 교과서 같은 답변이네요. ^^ 3개월 뒤면 웹 개발자가 되어있을 거라고 믿습니다. 그렇다면 어떤 개발자가 되고 싶나요?- 기술을 잘 아는 개발자가 되고 싶어요. 개인적으로 호기심이 많아요. 블록체인부터 빅데이터까지. . 새로운 기술과 관련된 단어들을 들으면 호기심이 생기죠. 이렇게 호기심이 생겼을 때 그 기술에 대해 이해하고 실제로 기술을 잘 구현하는 개발자가 되고 싶어요. 소위 말하는 백엔드 쪽에 더 관심이 있는 거 같아요. 앞으로도 이 방향으로 나아가고 싶구요. 음. . 그리고 하나만 덧붙이면, 제 생활도 잘 지킬 수 있는 개발자가 되고 싶어요. 일도 일이지만. ! Q) 마지막으로 코드스테이츠를 다른 사람에게 추천한다면?소프트웨어 엔지니어가 되고 싶으신 분들에게 꼭 추천하고 싶어요. 독학을 해도 좋은 점이 있겠지만. . 체계적인 커리큘럼을 따라가면서 방향성 있는 공부를 하면 효율적일 거 같아요. 시간을 아낄 수 있죠. 커리어 전환을 고민하시는 분들에게도 적합하구요. 그리고 무엇보다 같은 길을 가는 사람들과 커뮤니티를 형성하고 함께 공부할 수 있다는 점이 코드스테이츠의 가장 큰 장점이라고 생각합니다. 코드스테이츠 | 혁신적인 코딩 교육 부트캠프","['개발', '라이프', '교육', '커리어', '개발자']",https://medium.com/code-states/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%BB%A4%EB%A6%AC%EC%96%B4-%EC%A0%84%ED%99%98%EA%B8%B0-1-%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EC%9E%90%EA%B0%80-%EB%90%98%EA%B8%B0%EB%A1%9C-%EB%A7%88%EC%9D%8C%EB%A8%B9%EB%8B%A4-5f1c66f367b8,False
Riza Fahmi,"Co-founder, Curriculum Director at Hacktiv8.com. Podcaster at CeritanyaDeveloper.com. Screencaster at RandomScreencast.com",Kenapa Edukasi Yang Bagus Itu Tidak Murah Harganya – Riza Fahmi – Medium,2018-04-06 10:56:01,medium,"Kenapa Edukasi Yang Bagus Itu Tidak Murah Harganya Paradigma Bisnis Publishing V S Paradigma Bisnis Edukasi Dalam dunia produksi konten, ada dua paradigma bisnis industri konten: paradigma penerbit atau istilah kerennya publishing dan paradigma edukasi. Keduanya memiliki pasar dan ceruknya masing-masing. Akan tetapi ada yang menganggap keduanya adalah suatu hal yang sama dibawah payung edukasi. Meskipun mirip, kedua paradigma ini sebenarnya tidaklah sama. Artikel ini akan membahas tentang persamaan dan perbedaan keduanya. Paradigma Bisnis Produksi Konten Pernah membaca kisah tentang seorang bernama Nate Berkopec yang berhasil menjual course (buku dan video) yang berjudul The Complete Guide to Rails Performance? Di artikel ini dia berkisah bahwa dia berhasi menjual course tersebut sebanyak 500 copy dan mendapatkan keuntungan sebesar $70, 714. 20. Tujuh puluh ribu dollar, man! Siapa coba yang tidak terinspirasi dan tertarik mencoba. Banyak lagi cerita sukses dari para produser konten baik itu buku, buku elektronik, dan video course yang berhasil membuat kita berdecak kagum. Istilah information product atau produk informasi biasanya berkaitan dengan konten edukasi seperti buku, ebook, newsletter, blog, audio, video atau juga kombinasinya. Biasanya produk informasi ini dijual secara digital dan dijual via internet. Distribusi Masif Sisi positifnya harga dari sumber ilmu tersebut, baik itu buku, video course, blog, podcast dan lain sebagainya menjadi terjangkau. Bahkan tidak jarang dibagikan secara gratis untuk tujuan satu atau lain hal. Kenapa produk-produk informasi bisa murah atau terjangkau? Salah satu alasannya karena produk-produk informasi tersebut dapat didistribusikan secara masif. Biaya produksi produk informasi seperti video, podcast, ataupun buku sebenarnya tidak murah. Akan tetapi karena dapat didistribusikan secara masif lintas daerah bahkan lintas negara, maka harganya dapat didistribusikan pula. Dosen saya pernah berkata: “ Harganya memang murah, tapi faktor pengalinya yang banyak!”. Hal ini juga didukung oleh perubahan kiblat yang terjadi di dunia digital pada umumnya. Kalau dulu kita menjual aplikasi atau game dengan harga ratusan ribu rupiah, saat ini sebuah game premium dapat kita ‘tebus’ dengan harga sepulu ribuan saja! Dampak Terhadap Kehidupan Namun produk informasi ini juga memiliki kekurangan dari sisi pembeli. Seseorang membeli produk informasi ataupun mengikuti kegiatan workshop dan aneka sajian edukasi lainnya adalah bertujuan untuk meningkatkan skill dan kemampuannya. Dampak atau impact yang didapat ketika kita membeli produk informasi hasilnya beragam. Ada yang berhasil, tentu. Akan tetapi tidak sedikit yang tidak berdampak apa-apa terhadap kehidupannya. Semua tergantung si pembeli itu sendiri. Ketika seseorang membeli sebuah produk informasi seperti buku, tanggung jawab si penerbit dan author hanya sampai disitu. Mau bukunya dibaca, ataupun tidak, itu urusan si pemilik buku. Apakah bukunya dijadikan ganjalan pintu atau tatakan monitor juga tidak ada yang melarang. Tidak ada kewajiban dari pihak penulis ataupun penerbit untuk memastikan bahwa impact terhadap perubahan hidup seseorang itu sesuai ekspektasinya. Tanggungjawab apakah ia sukses ataupun tidak hanya tergantung kepada si pembeli saja dalam hal ini. Sekarang mari kita lihat sisi yang lain, yaitu bisnis edukasi. Semoga artikel ini dapat membantu kamu yang bertanya-tanya kenapa edukasi seperti bootcamp kok harganya tidak murah jika dibandingkan alternatif lain seperti buku, atau online course. Paradigma Bisnis Edukasi Coding bootcamp sedang menjamur, baik diluar maupun didalam negeri. Keinginan seseorang untuk mentransformasi hidupnya dengan cepat menjadi salah satu alasan yang sering terdengar mengapa ia memilih mengikuti bootcamp, kursus, dan sejenisnya. Padahal biaya dan waktu yang dikeluarkan tidaklah sedikit. Apa yang menjadi pembeda antara bisnis produk informasi dengan bisnis edukasi seperti coding bootcamp? Dan kenapa perbedaan harganya cukup jomplang? Biaya Operasional Yang Tinggi Yang pasti perbedaan terbesar adalah modal yang dibutuhkan untuk membangun dan menjalankan bisnis edukasi tidaklah kecil. Bayangkan, kita harus memiliki atau menyewa tempat, memiliki lab komputer yang mumpuni, karyawan untuk segala hal dan yang tak kalah pentingya, adalah merekrut instruktur atau tenaga pengajar. Bisnis Edukasi Bertanggungjawab Terhadap Hasil Berbeda dengan produk informasi, bisnis edukasi ikut serta bertanggungjawab dalam memberikan dampak kepada kehidupan si pembeli. Dengan kata lain, tanggung jawab dibebankan kepada dua pihak: seorang yang mau belajar, dan pihak penyedia edukasi tersebut. Tentu si siswa yang ingin belajar harus punya niat dan motivasi untuk mengejar mimpinya (apapun itu), bangun pagi, datang tepat waktu dan belajar dengan sepenuh hati. Tapi di lain sisi, ada pihak penyedia edukasi yang juga mempunyai tanggungjawab untuk memastikan siswa sukses melewati berbagai rintangan pelajaran dengan memberikan rambu-rambu, mengingatkan, mengarahkan hingga siswa dapat belajar dengan baik. Itulah sebabnya universitas atau bahkan sekolah biayanya jauh lebih mahal dari buku atau online course. Mereka harus membayar sewa gedung, operasional, mengurus akreditasi dan yang terpenting, P E N G A J A R! Contoh yang cukup jelas misalnya, untuk menjadi seorang dokter dibutuhkan biaya dan waktu studi yang panjang dan lama. Untuk menjadi dokter kita H A R U S kuliah dan kerja praktek. Tidak bisa semata hanya dengan membeli beberapa buku kedokteran, serta-merta kemudian kita menjadi dokter. Tentu, buku tersebut sangat berguna dan ilmunya sangat banyak yang bisa kita dapatkan, tapi juga kita tentu tidak bisa membuka praktek dokter umum setelah membaca buku-buku itu, kan?! Kesimpulan Cara dan media belajar saat ini sudah begitu banyak. Baik itu yang berupa produk informasi seperti online course, buku, video tutorial, artikel blog dan lain sebagainya hingga lembaga kursus, bootcamp, sekolah tinggi hingga kampus. Kembali lagi ke diri kita masing-masing mau memilih yang mana yang sesuai dengan keinginan, kemampuan dan cara belajar kita. Apabila kamu adalah seorang self learner dan tidak butuh motivasi eksternal, silakan belajar sendiri dengan buku, online course dan lain sebagainya. Namun apabila kamu butuh bantuan untuk memotivasi, menjaga kamu agar tetap di jalur yang diinginkan serta dikelilingi oleh orang-orang yang sama-sama ingin sukses, maka pilihan seperti bootcamp, kursus ataupun kuliah bisa menjadi pilihan. Selamat belajar! Artikel ini pertama kali di-publish di https://blog. hacktiv8. com/edukasi-yang-bagus/","['Education', 'Coding Bootcamp', 'Publishing', 'Buku', 'Bisnis Edukasi']",https://medium.com/@rizafahmi22/kenapa-edukasi-yang-bagus-itu-tidak-murah-harganya-b45705d211d9,False
Zolbayar Magsar,"computer scientist, entrepreneur",Код гэж юу вэ? – Codercub – Medium,2018-05-23 07:37:28,medium,"Код гэж юу вэ?Энэ асуултаас арай амархан асуултанд эхлээд хариулъя. Компютер гэж юу вэ?Компютер гэдэг бол ердөө л маш үр ашигтай “логик цаг”. Компютер тодорхой агшинд ганцхан үйлдэл хийдэг бөгөөд тэр нь ердөө л 1-р ангийн математикийн үйлдлүүд байдаг. Тиймээс компютерын гаднаас ирсэн сигнал бүр дээр хийдэг нэгж тооцоолол бүрийг та үзэг цаас ашиглан амархан хийж чадна. Компютерийн гол давуу тал нь тэрхүү энгийн тооцооллыг секундэд хэдэн тэрбум удаа хийх чадварт оршиж байгаа юм. Тэрбум тэрбумаар тоологдох бичил тооцооллууд өнөөдрийн бидний хэрэглэж байгаа тоон технологиуд болох гар утас, ухаалаг цаг, камер, телевизоруудын үндэс билээ. Харин компютерын тэр өндөр хүчин чадлыг яаж удирдах вэ? Код бидэнд тэрхүү боломжийг олгодог. Код гэдэг нь компютерт хүн гараараа оруулах зааварчилгаануудын бүрдэл юм. Тэр зааварчилгаануудыг програмчлалын хэл (компютер ойлгодог хэл) ашиглан өгдөг. Жишээ нь, та бидний тоглох дуртай Play Station, Xbox-г програмчлахад C++ гэдэг програмчлалын хэлийг ашиглана. Бид аж үйлдвэрийн дөрөвдүгээр хувьсгалын эрин үед амьдарч байгаа билээ. Өдгөө бүх технологи компютераас улбаалж хөгжиж байна. Компютерыг хөдөлгүүр, дугуйтай болгоод автомашин ( Tesla) бүтээчихлээ. Дөрөвдүгээр хувьсгалыг тодорхойлогч эдгээр экспоненциал технологиудын амин зүрх нь компютерын шинжлэх ухааны боловсрол бөгөөд 21-р зууны иргэнд байх хамгийн гол чадвараар (literacy for the 21st century) нэрлэгдэж байна. Дэлхийн боловсролын чиг хандлага өөрчлөгдөж энэхүү чадварыг хүүхдийн бага наснаас эхэлж олгоход анхаарах болсон ба АНУ тэргүүтэй улсуудад дунд сургуулийн хүүхдийн компютерын боловсролыг биологи, химийн хичээлтэй адил түвшинд авч үзэх болсон байна. Энэ чиг хандлагат хөл нийлүүлж Монголын анхны coding bootcamp (зуны эрчимжүүлсэн сургалт зуслан) Мэдээллийн Технологийн Үндэсний Парк дээр 6-р сарын 11-с эхлэн 11-16 насныханд зориулж явагдах гэж байна. Суудлын тоо хязгаартай тул та амжиж бүртгүүлээрэй. #КодСурцгаая!","['Codingbootcamp', 'Education', 'Edtech']",https://medium.com/codercub/%D0%BA%D0%BE%D0%B4-%D0%B3%D1%8D%D0%B6-%D1%8E%D1%83-%D0%B2%D1%8D-ac2ae2b53aa7,False
azzahra bangka,,BELAJAR SEKOLAH CODING – azzahra bangka – Medium,2018-09-12 08:14:37,medium,"B E L A J A R S E K O L A H C O D I N G Seiring berkembangnya zaman perkembangan suatu teknologi merupakan sebuah hal yang sangat diperhatikan jika dahulu kala perkembangan teknologi sangat susah sekali kini seolah semua berbanding terbalik atau berubah sangat cepat, perkembangan suatu teknologi I T kini sudah sangat merata disetiap Negara bahkan di Indonesia. Sekarang ini sudah semakin banyak masyarakat Indonesia yang tertarik untuk belajar Pemrograman. Namun sumber belajar yang menggunakan bahasa Indonesia masih sangat sedikit karena itu jika kita tidak pandai pandai dalam melakukan sebuah interaksi dengan orang lain itu akan sangat berpengaruh dalam pembelajran kita materi materi yang ditampilkan , baik yang berbentuk tutorial tertulis maupun tutorial video masih sangat minim. Masalah inilah yang melatarbelakangi mengembangkan situs sekolah Coding, situs ini merupakan sebuah situs yang akan membantu masyarakat Indonesia yang ingin belajar koding melalui tutorial berbentuk tulisan maupun video yang mudah untuk dimengerti. Sekolah Coding ini memiliki sebuah cita-cita yang cukup besar yaitu menjadikan programmer programmer yang sangup menjadi pembeda dan menjadi sebuah pemecah solusi ditengah sebuah permasalahan yang ada di Negara kita ini dan dapat melahirkan ahli-ahli pemrograman dari Indonesia yang karyanya bermanfaat hingga ke dunia. Keseriusan dalam mencapai cita-cita ini dapat dilihat dari banyaknya video tutorial maupun video tertulis yang telah menghiasi isi situs ini. Tutorial-tutorial yang dihasilkan merupakan tutorial khusus web development. Disana terdapat tutorial H T M L, Java Script, C S S, Java, J Query, dan Java. Tutorial tertulis untuk H T M L, C S S, dan Javascript yang disediakan sudah cukup lengkap. Bahkan untuk Java Script sudah masuk ke pemrograman berorientasi objek. Tutorial tertulis ini membahas satu bagian dari halaman ke halaman yang lain. Kita bisa berpindah halaman melalui panah kiri (kembali ke bagian sebelumnya) ataupun panah kanan (maju ke bagian selanjutnya). Untuk bagian tutorial yang memiliki contoh kode, kita bisa mencoba kode tersebut langsung dihalaman tersebut. Video tutorial yang ada di Sekolah Koding adalah tautan menuju tutorial yang mereka ungguh di situs sekolah koding ini memiliki banyak sekali kegunaan nya terutama bagi programmer yang masih pemula karena bisa sangat sekali membantu melalui halaman sekolah koding. Kualitas videonya sangat bagus dan suaranya juga sangat jelas, jarang sekali ada suara yang mengganggu saat mendengarkan penjelasan dari video. Penjelasan yang diberikan mudah dipahami karena instrukturnya berbicara sangat jelas dan cukup percaya diri pada saat menyampaikan materi. Pembaca yang memiliki pertanyaan seputar Sekolah Koding secara umum maupun pertanyaan seputar materi dapat langsung berinteraksi dengan pengembang situs maupun pengguna lainnya melalui halaman Diskusi. Banyak Sekali kini dapat kita temui di internet bermacam macam situs yang menayangkan sekolah koding salah satunya situs niomic. com jika anda semua ingin semakin mengembangkan ktramiplan anda di bidang pemrograman anda harus semakin lebih giat lagi belajar tentang pemrograman. Minat Belajar tentang coding Silahkan klik Disini","['Codingbootcamp', 'Programming', 'HTML', 'Programmer']",https://medium.com/@azzahra.bangka/belajar-sekolah-coding-ed9d38c44051,False
Angélica Velázquez,,Flex-Item – KAN by MUKTEK Academy,2018-02-02 18:35:29,fuerzamuktek,"Flex- Item Image Credit: C O D E P L A N E T Ya hablamos de Flex Box y de las propiedades que se pueden usar en nuestro flex-container; ahora solo nos falta saber como afecta flex a nuestros flex-items. Las propiedades que podemos usar en nuestros flex-items son: Order Con esta propiedad controlamos el orden de los flex-items que están dentro del flex-container. Por defecto aparecen en el orden que indica el código fuente. El valor por defecto es 0. valor por defecto = 0flex-direction: row;orderflex-direction: row-reverse;order Flew-grow Esta propiedad especifica el factor que determina hasta que punto un flex-item crecerá en relación con el resto de los flex-items. El valor por defecto es 0. Si los flex-item tienen el mismo valor para flex-grow, todos van a tener el mismo tamaño, según el flex-container. flex-grow: 1; Al definir que en el segundo flex-item la propiedad flex-grow va a tener un valor de dos, este va a tomar un ancho que equivale a la suma de dos elementos. flex-grow Flex-shrink Esta propiedad da la capacidad de encoger los flex-items si es necesario. Por defecto, todos lo flex-items se pueden reducir, pero si les ponemos el valor de 0 no se van a encoger, si no, que van a mantener el tamaño original. El valor por defecto es 1. flex-shrink Flex-basis Esta propiedad tiene los mismos valores que las propiedades width y height y especifica el tamaño principal del flex-item, distribuyéndose de acuerdo con los factores flex. Aquí especificamos que el quinto flex-item dicta el tamaño inicial del elemento. Flex Esta propiedad solo es la abreviatura de flex-grow, flex-shrink y flex-basis. Valor por defecto: 0 1 auto; Align-self Esta propiedad permite sobreescribir la alineación por defecto (o la especificada por align-items) para flex-items individualmente. align-self Gracias a el conjunto de todas estas propiedades que acabas de aprender, puedes crear sitios responsivos de manera muy fácil, recuerda que la practica hace al maestro. Aprende más sobre Flex Box y la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K.","['HTML', 'CSS', 'Flexbox', 'Flex', 'Codingbootcamp']",https://blog.muktek.com/flex-item-40ec5aed693a,False
MG Ayoub,"Co-founder @ Le Wagon Montréal, a coding bootcamp that brings technical skills to entrepreneurs and creative people. 🙌 lewagon.com/montreal",C’est la Journée Internationale de la Femme aujourd’hui.,2018-03-08 05:02:46,medium,"Stéphanie & Sara codent leur projet final (batch #98, Automne 2017) C’est la Journée Internationale des droits des femmes aujourd’hui. Célébrons les femmes pour une plus grande diversité dans les tech Read the English version. Les femmes ont initié et mené des avancées majeures dans la programmation et le développement logiciel. Citons notamment Ada Lovelace, Hedy Lamarr, Jean Bartik, ou encore Admiral Grace Hopper qui ont véritablement marqué l’histoire. Dans les années 80, 37% des diplômés avec une majeure en informatique était des femmes. Aujourd’hui, seulement un emploi dans les T I sur 4 est détenu par une femme. a, selon la dernière étude de T E C H N O Compétences sur la main d’oeuvre en T I, parue en février 2018. An Animated History of How Tech Became So Male- Dominated Since computing began in the 1940s, women have led major developments in programming and software development. In 1984…www. theatlantic. com La situation évolue toutefois positivement: le nombre d’inscription des filles au baccalauréat en T I a augmenté depuis ces 5 dernières années et le taux de diplomation a connu une hausse de 41% au Québec (selon le Diagnostic T E C H N O Compétences 2018). Malgré tout, il reste encore du chemin à faire pour arriver à une plus grande inclusivité et diversité dans ce secteur. À l’occasion de la Journée Internationale des droits des femmes, nous avons voulu célébrer les femmes du Wagon et partager l’histoire de quelques unes d’entre elles. Jessica était professeur d’anglais au Japon. Après avoir fait Le Wagon Montréal et grâce à sa détermination, elle est aujourd’hui développeuse à Proctor U. From English Teacher in Japan to Software Engineer in the U S Jessica did Le Wagon batch 77 during the summer 2017. medium. com Hanae était consultante pour de grands groupes. Après avoir suivi le programme du Wagon à Barcelone, elle a décidé de le lancer à Casablanca, la première ville en Afrique à proposer le bootcamp de 9 semaines. Elle nous a partagé son point de vue sur la situation des femmes dans l’industrie des technologies. The case for women in tech or why it’s key to build positive nudges for female enrollment in the… Last week, one of my peers at Le Wagon told me he was slightly backslashed by one of his information session’s…medium. com Diplômée de Yale University, Maria est développeuse Full- Stack et mentor au Wagon Shanghai. C’est une fervente ambassadrice des femmes en tech. [ Lady in Tech] Maria Altyeva- From Yale Graduate to Coding Mentor Le Wagon exprience. When students say Le Wagon is one of the best investment they can make for their personal…mp. weixin. qq. com Lea est entrée sur le marché du travail 1 semaine après la fin du bootcamp qu’elle a suivi à Barcelone. Lea Cohen accepted a job offer the week after the bootcamp endedand is now a full-stack developer in a field she studied and loves ! My background is in Geography and G I S (geospatial…www. lewagon. com Après avoir fait Le Wagon à Amsterdam, Carolyn a obtenu un poste de développeuse chez a Frog Leap grâce à son talent et … un chatbot. Carolyn aced her job interview with a C V chatbot Coding isn't that different from knitting. It's all about patterns. www. lewagon. com Viola était avocate avant de suivre le programme du Wagon à Lisbonne, elle est maintenant développeuse et entrepreneur. From lawyer to developer and entrepreneur in less than 6 months Viola, I am 26 years old, from a small town in Switzerland's German region. I studied law in Switzerland and I worked…www. lewagon. com Plus d’histoires de femmes du Wagon 👉 www. lewagon. com/alumni Au Wagon Montréal, la diversité nous tient à coeur. Nous avons engagé des actions concrètes pour contribuer à apporter plus de diversité et d’inclusivité dans le domaine des technologies: Notre bootcamp est ouvert à toute personne, peu importe son origine et son expérience passée. Nous demandons à nos candidats d’avoir 3 qualités essentielles : de la motivation (beaucoup de motivation!), de la curiosité et un bon sens relationnel. Notre équipe est paritaire et diversifiée, composée autant d’hommes que de femmes. Nous avons organisé un événement rassemblant des ambassadeurs de la diversité à Montréal pour informer et sensibiliser sur le sujet. Qu’est ce que Le Wagon? Le Wagon apporte un savoir-faire technique et une culture “startup” aux entrepreneurs et esprits créatifs. Notre programme principal est un cours de développement web Full- Stack intensif de 9 semaines qui permet, à son issue, de construire le prototype de n’importe quelle idée. Nos étudiantes et étudiants sont de futurs développeurs web, des fondateurs de start-up, des chefs de projet, des chefs de produit, et plus encore. Ensemble, nous formons une équipe mondiale de plus de 250 mentors passionnés et plus de 2400 alumni dans 19 pays et 29 villes. 🚀 🚀 🚀 Il reste encore quelques places pour notre prochaine batch 👉 9 avril — 8 juin 2018 👉 Postulez maintenant! Pssst… Cette “story” vous a plu? Clap 👏 et partagez pour que d’autres puissent la lire aussi. N’hésitez pas à nous laisser un commentaire ! 🤗","['Women In Tech', 'Technology', 'Codingbootcamp', 'International Womens Day', 'Diversity']",https://medium.com/@mgayoub/cest-la-journ%C3%A9e-internationale-de-la-femme-aujourd-hui-c995d51512af,False
azzahra bangka,,MANFAAT MEMPELAJARI KOMPUTER – azzahra bangka – Medium,2018-09-12 07:11:59,medium,"M A N F A A T M E M P E L A J A R I K O M P U T E R M A N F A A T M E M P E L A J A R I K O M P U T E R Manfaat dari suatu proses pembelajaran adalah hal yang diinginkan oleh setiap pelajar. Apapun itu yang dipelajari baik itu belajar komputer, belajar internet atau belajar yang lainnya. Selama yang dipelajari itu hal yang positif dan bermanfaat untuk saat ini dan masa yang akan datang kenapa tidak untuk dipelajari?. Nah, sebetulnya apa sih manfaat belajar komputer untuk diri kita?. Mungkin pertanyaan ini terlontar bagi kita yang baru mempelajari komputer, termasuk ane sewaktu sekolah dulu. pada dasarnya setiap orang didunia ini pasti memerlukan sebuah pembelajaran baik itu yang bersifat formal maupun non formal, karena tanpa kita belajar mustahil kita bisa mengerti sebuah pembelajaran atau bahkan memahaminya Oleh karena itu tanpa sangat perlu sekali yang namanya belajar. sebuah pembelajaran bisa dilakukan dimana saja dan bisa menggunakan apa saja bahkan belajar dengan keterbatasan sebuah alat asalkan kita tekun pasti kita akan mendapatkan hasilnya kunci dalam sebuah pembelajaran adalah ketekunan tanpa ketekunan kita pasti akan kesulitan mendapatkan hasil yang terbaik. b 1. Membantu Pekerjaan atau Tugas Bagi anda yang masih pelajar baik itu siswa atau mahasiswa baik itu di sekolah atau di kampus tentu sering mendapatkan tugas dari guru atau dosen. Misalnya kita diberi tugas membuat makalah. Jika agan belajar komputer seperti microsoft word tentu tugas agan lebih terbantu. Apalagi jika agan dapat mengetik 10 jari pasti pekerjaan kita lebih cepat selesai. 2. Membuka Peluang Usaha Saat ini peluang usaha di dunia I T sangat menjanjikan, karena semuanya hampir dikerjakan menggunakan komputer. Nah, bagi agan yang suka dengan usaha atau bisnis dengan agan belajar komputer. Tentu agan akan mendapatkan peluang usaha tersebut seperti membuka toko komputer dan service komputer. 3. Karir Saat ini era zamannya digital semua pekerjaan menggunakan komputer. Nah, kalau agan belajar komputer tentu karir akan mudah agan raih. Telebih agan menguasai bidang yang khusus seperti programming, networking dan lain sebagainya. 4. Sumber Informasi Mudah Didapat Dengan agan belajar komputer tentu informasi mudah didapat, yaitu mencari melalui internet. Untuk mencari sesuatu di internet agan perlu mengetahui tata caranya seperti mengoperasikan browser. Itulah beberapa manfaat belajar komputer menurut ane gan, kalau ada yang kurang dan agan berkenan untuk menambahkan silahkan berkomentar melalui form komentar dibawah ini. Oh, ya bagi agan yang belum mengetahui pengertian komputer dapat membaca artikel sebelumnya. Semoga bermanfaat. Nah Bagi Kalian yang berminat belajar silahkan Gabung Disini","['Belajar', 'Computers', 'HTML', 'Programming', 'Codingbootcamp']",https://medium.com/@azzahra.bangka/manfaat-mempelajari-komputer-8043a661439f,False
Angélica Velázquez,,CSS – KAN by MUKTEK Academy,2018-03-10 21:28:01,fuerzamuktek,"C S S Tal vez te preguntes qué es C S S, pues aquí te haré un super resumen de qué es y para qué sirve. C S S son las siglas en ingles para Cascading Style Sheet ( Hojas de Estilo en Cascada). El gran impulso de los lenguajes de hojas de estilos se produjo con el boom de Internet y el crecimiento exponencial del lenguaje H T M L para la creación de documentos electrónicos. El organismo W3 C ( World Wide Web Consortium), encargado de crear todos los estándares relacionados con la web, propuso la creación de un lenguaje de hojas de estilos específico para el lenguaje H T M L. Se mandaron 9 propuestas pero solo 2 fueron tomadas en cuenta la C H S S ( Cascading H T M L Style Sheets) y la S S P ( Stream-based Style Sheet Proposal). Los realizadores de estas 2 propuestas se unieron para definir un nuevo lenguaje que tomaba lo mejor de cada una y así nació C S S. https://learning. linkedin. com/blog/tech-tips/5-great-reasons-to-learn-a-little-css¿ Cómo funciona C S S? C S S funciona a base de reglas, es decir, declaraciones sobre el estilo de uno o más elementos. Las hojas de estilo están compuestas por una o más de esas reglas aplicadas a un documento H T M L . La regla tiene dos partes: un selector y una declaración. A su vez la declaración está compuesta por una propiedad y el valor que se le asigne. The rule C S S puede seleccionar elementos H T M L utilizando el nombre de etiqueta de un elemento. Un nombre de etiqueta es la palabra (o carácter) entre corchetes angulares de H T M L. Por ejemplo, en H T M L, la etiqueta de un encabezado de tercer nivel es <h3>. La sintaxis C S S para seleccionar elementos <h3> es: Selector En el ejemplo anterior, todos los elementos <h3> serán seleccionados y las propiedades que escribamos se aplicaran a todos los elementos con esa etiqueta. Inline Styles Aunque C S S es un idioma diferente al H T M L, es posible escribir código C S S directamente dentro del código H T M L utilizando estilos en línea. Para darle un estilo a un elemento H T M L, se puede agregar el atributo de estilo directamente a la etiqueta de apertura. Después de agregar el atributo, se establecen los estilos usando la sintaxis de las propiedades y los valores. Inline Style La etiqueta <style> Los estilos en línea son una forma rápida de diseñar H T M L, pero también tienen limitaciones. Si quisieras diseñar, por ejemplo, múltiples elementos <p>, tendrías que agregar estilo en línea a cada elemento manualmente. Afortunadamente, H T M L permite escribir código C S S en su propia sección especificada con el elemento <style>. Para usar el elemento <style>, debe colocarse dentro del elemento <head>. Etiqueta <style> La principal diferencia es que puede especificar a qué selectores aplicar el estilo. En el siguiente ejemplo le estamos dando a todos los elementos <p>un color rojo y un tamaño de fuente de 20px. Etiqueta <style> El archivo . css Los desarrolladores evitan mezclar código, almacenando código H T M L y C S S en archivos separados (los archivos . html contienen solo código H T M L, y los archivos . css contienen solo código C S S). Se crea un archivo C S S utilizando la extensión de nombre de archivo . css. . html & . css Con un archivo C S S, puede escribir todo el código C S S necesario para diseñar una página sin sacrificar la legibilidad y la capacidad de mantenimiento del archivo H T M L. Cuando los códigos están en archivos separados, los archivos deben estar vinculados. De lo contrario, el archivo H T M L no podrá ubicar el código C S S, y el estilo no se aplicará. Podemos usar el elemento <link> para vincular archivos H T M L y C S S juntos. El elemento <link> debe colocarse dentro del <head> del archivo H T M L. Es una etiqueta de cierre automático y requiere los siguientes tres atributos:href: al igual que en la etiqueta <a>, el valor de este atributo debe ser la dirección, o ruta, del archivo C S S. type: este atributo describe el tipo de documento al que está vinculando (en este caso, un archivo C S S). El valor de este atributo debe establecerse como:“text/css”. rel: este atributo describe la relación entre el archivo H T M L y el archivo C S S. Debido a que está vinculando a una hoja de estilo, el valor debe ser: “stylesheet”link tag Y con esto ya vinculamos nuestra hoja de estilo y los cambios que hagamos en ella se aplicaran a nuestro archivo . html. Aprende más sobre la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K","['HTML', 'CSS', 'Codingbootcamp', 'Css3']",https://blog.muktek.com/css-a3f51cdf88d9,False
이상훈,,"CodeStates_immersive 3기 2–2 : call, apply, bind – 이상훈 – Medium",2017-01-03 15:47:34,medium,"Code States_immersive 3기 2–2 : call, apply, bindcall, apply, bind의 용법과 예시call, apply : 함수를 호출하는 메서드bind : 함수를 호출하는 것이 아니라, 함수 그 자체를 가져오는 것var f = function(this, arg1, arg2){};f. call(this, arg1, arg2);f. apply(this, [arg1, arg2]);call : 보통 함수처럼 인자들을 넣는다apply : 인자들을 하나로 묶어서 배열안에 넣는다call, apply를 쓰는 이유 : (1) 어떤 함수 안에 this가 들어가 있을 때에, 내가 원하는 그 this를 사용하기 위해서(2) f라는 함수의 return값을 호출하기 위해서f. bind(this);bind : f 라는 함수 그 자체를 가져오기 위해서 사용한다. ___________________________________________________________________기본적으로 내가 이해한 것은, f() === call, applyf === bindcall과 apply는 함수의 결과 값을 나타내고bind는 함수 그 자체이다코딩 넘나 어려운것오후에 명상수업을 한 후에 마음보기 어플을 처음 이용해 봤다. 명상을 하면서 나 스스로에게 집중할 수 있는 시간들은 언제나 소중하다. 하루에 하나씩만 알아가자면서 욕심내지 않고 코딩 공부를 하려고 하지만, 그 하나마저도 없을 수 있다는 생각에 스스로 답답한 부분들도 있다. 그럴수록, 아직 내것이 될 수 없는 것들에 대해서 아쉬워하지 말고, 자책하지 말고, 가진 것에 만족하며 살아가자어떻게든 두번 썼으니, 내일이 고비겠구만","['Codingbootcamp', 'JavaScript', 'Function', 'Front End Development', 'Korea']",https://medium.com/@fkdndpf1/codestates-immersive-3%EA%B8%B0-2-2-call-apply-bind-c97a1dab04fb,False
Accelerate Tech,,建築工變軟件工程師 – Accelerate Tech – Medium,2018-08-08 00:00:00,medium,"建築工變軟件工程師 Accelerate訪問了我們應屆的沉浸式軟件工程課程畢業生 Bal Kumar Rai. Bal娓娓道來，分享了在 Accelerate過去16星期的學習點滴，希望可以鼓舞各位有意多加瞭解的朋友。（ Bal 完成了課程後現正在 Nova 任職全端開發軟件工程師。） Bal！多謝你接受訪問，可以分享一下你在參加課程之前的背景嗎？我本來是一個在地盤工作的建築工人，由於本身對編程頗有興趣，在網上課程也自學了一點。後來留意到 Accelerate正在開設軟件工程課程，就決心 報讀了。為何你會下定決心轉行呢？在地盤工作前我已有少許編程經驗，一直亦有打算重回軟件工程師行業，因此當看見 Accelerate的軟件工程課程有就業支援服務，我覺得是時候重拾舊時的 目標，最終就辭職下定決心轉行了。在芸芸眾多選擇之中，何解會選擇編程訓練營呢？我本身從網上資源學習手機程式開發，該課程主力以 Android 作例子，但有感自己在 I O S方面認識很少。當我順藤摸瓜一輪之後，發覺現今手機開發需要網站開發的知識，更需要全端開發的認知。我覺得如果只靠自學未必能達至預期的目標，最終就決定選擇編程訓練營了。你覺得此課程是否符合你的預期呢？我從網上自學時，發覺進展相當緩慢，遇上問題時亦求教無門。相比之下， Accelerate導師富經驗，課程設計嚴謹，僅僅四個月我深感獲益良多。 我覺得如果我繼續自學的話，應該很難達到現今的水平。結果我畢業後，信心滿滿去各種公司面試，很快就如願而償得到現今的職位。看來你的編程水準已相當好，職業技能培訓方面呢？我畢業後亦自習不少，當然 Accelerate在這方面也有相當多的支援。 Alex（ Accelerate軟件工程導師）教學清晰有條理而且很有耐性，他為我準備 了許多面試小貼士，我覺得在實戰中相當有用，所以在畢業後兩個月後已找到軟件工程師的職位。于你而言，理想職位是如何的呢？工作環境是其一，技能上切合也是相當重要，薪金反而于我而言是其次。我當然希望工作環境有趣一點，工作時亦事半功倍。你對即將參加編程訓練營的師弟有何感言？如果他們想轉向軟件工程師這一行的話， Accelerate 是一個相當好的選擇。我由建築業投身科技行業，正正是一個很好的例子，即使建築業與科技行業好像風馬牛不相及，但 Accelerate的教導絕對使你有充份準備。 我個人覺得編程是每個有決心跟熱誠的人都能做到，與天資沒有太大關係，而 Accelerate 教的課程亦相當切合現今科技界的需要。不過有一件事情我想重申一下：就是一定要在參加 Accelerate 課程之前完成 Accelerate 準備的網上自學 Precourse課程，有良好的 Javascript 根底可以使你在訓練營中事半功倍，尤其是此前無任何編程經驗的同學。當然在過程中努力不懈也是很重要啦。我的公司覺得我的技能應付現今職位其實游刃有餘，可見 Accelerate其實為各位同學準備充足呢！讀完 Bal的故事，其實你也可以像 Bal一樣開創自己的未來。 瀏覽 Accelerate的 Full- Time Immersive Software Engineering Bootcamp 或安排免費的 1–1 Consultation 找尋你未來的科技出路。 Originally published at www. accelerating. tech on August 8, 2018.","['Codingbootcamp', 'Career Change', 'Careers', 'Programming', 'Hong Kong']",https://medium.com/@acce.tech/%E5%BB%BA%E7%AF%89%E5%B7%A5%E8%AE%8A%E8%BB%9F%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%AB-f6421e4623a4,False
Enrique Carral Trevino,Impacting people through technology. RoR @TheIronYard MBA @LBS ChemEng @NorthwesternU BizDev @Samsung Consulting @ATKearney Opera Cycling Golf;MEX US UK HK KOR,Mi experiencia en un coding bootcamp – KAN by MUKTEK Academy,2017-07-21 04:53:19,fuerzamuktek,"Mi experiencia en un coding bootcamp Por Enrique Carral Treviño Hola, Hoy les quiero hablar de la experiencia de un coding bootcamp intensivo como lo fue para mí The Iron Yard y como lo que ya pueden experimentar en México con M U K T E K. Primero, un poco de historia El modelo de coding bootcamp nace en 2012 como un modelo educativo intenso y muy enfocado en satisfacer la necesidad de desarrolladores de software en Estados Unidos. Al día de hoy, existen 91 brands de bootcamps (tan solo en Estados Unidos) con alrededor de 300 localidades en todo el país. Para el 2016, se estima que habían alrededor de 18, 000 graduados de bootcamps en los Estados Unidos y con un crecimiento de 1. 7 veces el volúmen en 2015. El costo promedio está alrededor de los 13, 000 U S D, y los graduados lo ven como una inversión en su carrera para entrar al mundo de la tecnología ganando salarios promedio de desarrolladores junior. Pero este fenómeno educativo no se reduce a los Estados Unidos, sino que existen bootcamps en países como Gran Bretaña, España, Alemania, Francia, Bélgica, Holanda, Portugal, Dinamarca, China, Japón, Corea del Sur, Kenya, Egipto, Canadá, Colombia, Perú, Chile, y México, entre muchos otros. Ya que tenemos un poco de contexto, les puedo contar sobre lo que yo viví hace un año. Credit: The Iron Yard blog Mi experiencia en The Iron Yard1. La investigación Visto el costo elevado de estos bootcamps, un paso importante fue asegurarme de escoger un programa de calidad. Por otro lado, yo estaba un poco restringido, ya que tenía un lugar para quedarme 4 meses en Houston, T X, más no en San Francisco o Nueva York, en donde existe la mayor concentración de bootcamps en U S A. Entonces busqué cuales de los top bootcamps tenían sedes en Houston, y estaban solamente The Iron Yard y Digital Crafts a punto de entrar. Al ver que The Iron Yard tenía muchas sedes y había sido adquirida por una empresa de Educación, decidí iniciar el proceso para conocerlos. 2. El proceso de admisión En T I Y ( The Iron Yard), el primer paso fue llenar una forma en línea con mis datos, mi nivel educativo, y un pequeño ensayo expresando mis razones para unirme. Muy pronto, recibí una invitación para una entrevista con la directora de marketing y admisiones en el campus de Houston. Sus preguntas fueron muy relacionadas a mi motivación por aprender — poco sabía yo sobre la importancia que eso tendría en mi éxito. Mi motivación era conocer el modelo educativo para ver si funcionaba con una visión de traerlo a México. Después tuve una segunda entrevista con el que sería mi futuro profesor. A él le importaba más saber si tenía experiencia programando. Ahí le conté que en la carrera (ingeniería química) había programado un poco, pero eso había sido hacía unos 13 años. 3. El Pre- Work Poco después de platicar con Jesse, mi futuro instructor, recibí un email suyo con el famoso pre-work listado en la mayoría de las páginas de los bootcamps. El propósito de esta tarea es básicamente prepararte para entrar al programa con las bases de programación. Ya que yo buscaba entrar al programa de Ruby on Rails, mi pre-work incluyó leer lo más que pudiera de un libro de Ruby para niños, además de hacer un mini-curso en línea de H T M L y C S S. Durante unas dos semanas, le dediqué tiempo suficiente y leí unos cuatro capítulos del libro además de terminar un 75% del curso en línea. 4. El Primer Día En el primer día del bootcamp, inmediatamente me dí cuenta que estaba entrando a una comunidad de gente, no solo una academia. Además, entendí muy pronto que esta comunidad de gente es gente que tiene todas las ganas de cambiar su vida y dedicarse a algo que les apasiona. Bueno, pues este día hubo presentaciones del Sr. Dorton, el head del campus, y todos nos presentamos también, contando nuestros objetivos para hacer el programa. También nos contaron “las reglas del juego” (aunque claro que ya las habíamos leído en algún lugar) como el que si faltabas más de 4 días al bootcamp, no podrías tener tu diploma. Pero esto no duró mucho, después de 1hr ya estábamos en clase, y así inició esta época super intensa de mi vida, pero la cual claramente me cambió la vida. 5. La Experiencia del Bootcamp Lo básico es que diario aprendes algo nuevo durante unas 3 horas, y diario trabajas unas 6+hrs en eso que viste en clase en la mañana. Cada día entregas una tarea, y cada día te mandan una calificación nueva. Las opciones son: satisfactory, not satisfactory. Si te sacas la segunda opción, no pasa nada, solo tienes que volver a entregar hasta que la pases. También, cada fin de semana hay un lab o mini-proyecto. Los jueves te lo dejan de tarea, trabajas todo el viernes en él, pero si el viernes no has terminado, pues trabajarás todo el fin de semana, ya que lo tienes que entregar a más tardar a las 6 A M de todos los lunes. Las cosas avanzan muy rápido. Para el 6to fin de semana del bootcamp, ya estábamos creando un clon de Twitter — no con T O D A la funcionalidad, pero se sorprenderían cuanta. Dos highlights de la experiencia son 1) el nivel de bonding que haces con tus compañeros y el nivel de ayuda que recibes de ellos y 2) el apoyo que tienes del staff del bootcamp para cualquier cosa, académica o no académica. La gente en serio vive por la causa. Además, me encantó el enfoque en la parte humana del aprendizaje. Todos los martes, teníamos que escribir un blog post en Medium, y Jesse, nuestro profesor, nos daba un video o artículo para tener una base de que hablar — aquí matábamos dos pájaros de un tiro, al aprender soft skills y crear una presencia en línea para nuestras futuras entrevistas de trabajo. 6. Mi Proyecto Final (click para verlo)* Después de la novena semana, llegó la hora de idear un proyecto y llevarlo a cabo. Fue una experiencia super retadora. A pesar de haber pasado por rigurosos programas académicos en mi vida, nunca me había enfrentado a la idea de crear algo tan complejo utilizando skills aprendidos tan recientemente. Para lograrlo, lo más importante fue la resilencia y la motivación. Mi proyecto lo dividí en cuatro partes importanes: I) Ideación (3 a 5 días) — este fue el tiempo en el que cree la idea y se la presenté al profesor. En mi caso, quise crear un Learning Management System para el bootcamp que iba a crear en México; fue una idea ambiciosa, pero lo logré. I I) Planeación (2 a 3 días) — aquí fue en donde definí los features de mi app a los que quería llegar, dibujé en papel los screens principales, y planifiqué muy bien la base de datos relacional que tenía que crear. Además, pensé en qué herramientas tendría que aprender a utilizar para lograrlo. I I I) Creación (14 días) — esto fue duro, me topé con mucho más obstáculos de los que me esperaba, y hubieron días en los que me pasé 24 o más horas tratando de resolver lo que parecía una pequeñísima parte de lo que sería mi app — por ejemplo, integrar una herramienta de markup para generar P D Fs que se mostraran como reportes de calificaciones. I V) Embellecimiento (3 días) — siempre nos dijeron que a la hora de enseñarle nuestras apps a los empleadores potenciales (y a cualquiera), los looks serían importantes. Entonces le dediqué unos tres días a eso. Aquí ajusté colores, cree animaciones, y escogí una portada atractiva. Y voilá, en 3 semanas había creado un sistema de manejo de aprendizaje, con unas seis tablas relacionales, dos tipos de usuarios con autentificación usando O A T H, y sufientes vistas para tener una navegación e interfáz fucional e intuitiva para los dos tipos de usuarios. Credit: Positive Psychology Program7. Conclusiones He pensado mucho en los beneficios de un bootcamp como al que yo fui, y creo que, además del network generado, lo importante en cuanto al aprendizaje de código se resume en lo siguiente: P R I M E R O: aprendes las herramientas necesarias para crear web apps (esto se dice fácil, pero es mucho) S E G U N D O: pasas por una serie de experiencias en las que te topas con pared mil veces y tienes que salir adelante de distintas formas. A veces solo, a veces con ayuda de un amigo, a veces con ayuda de Google o Stack Overflow, a veces con la ayuda de un profesor. T E R C E R O: ganas la confianza de poderte enfrentar a cosas que nunca has logrado y la fe en que lo podrás hacer de una u otra forma. En otras palabras, aprendes a aprender, sin miedo <> con mucha confianza. Una experiencia que requiere algo y genera más carácter, pero una clara prueba para los que creen en el querer es poder. Happy Coding. * Passwords::teacher=> username: teacher; pass: 87654321:student=> username: student; pass: 87654321 Si te gustó este post, compártelo! Para conocer un coding bootcamp de calidad mundial y con atención personalizada en México, visita M U K T E K","['Codingbootcamp', 'Aprender', 'Desarrollo De Software', 'Educación', 'Growth Mindset']",https://blog.muktek.com/mi-experiencia-en-un-coding-bootcamp-ebaa3b242641,False
Jimena de Haro,Gerente de Comunicación de Laboratoria en México,100 Razones Para Aprender A Programar En Laboratoria,2017-07-13 17:58:22,medium,"100 Razones Para Aprender A Programar En Laboratoria¿ Necesitas razones para postular a Laboratoria y convertirte en desarrolladora web? Aquí te damos 100 por qués… Quieres transformar tu vida. Es una habilidad con mucho futuro. Puedes trabajar en cualquier sector, porque todos los sectores tienen necesidad de profesionales tech. Es más fácil conseguir un trabajo de horarios flexibles… O trabajar de manera remota…6. O sea que podrías trabajar desde tu casa en pijama…7. P O D RÍ A S T R A B A J A R E N P I J A M A (siento que esta debería contar por dos). 8. Y puedes tener una vida balanceada entre lo profesional y lo personal. 9. Es una profesión súper cool. 10. Harás cosas que nunca te imaginaste. 11. Podrás crear páginas web y aplicaciones de la nada. 12. Para 2025, América Latina va a tener una necesidad de 1. 25 millones de programadores. 13. Para 2019, ya van a hacer falta casi medio millón de programadores. 14. Menos del 10% de los programadores en América Latina son mujeres. 15. Puedes ayudar a combatir estereotipo de lo que hacen o deben hacer las mujeres…16. Y hacerle saber al mundo que las mujeres son capaces de lograr todo lo que se proponen…17. Y que son igual de inteligentes…18. Y trabajadoras que cualquiera. 19. Porque puedes. 20. Para demostrar que lo mejor que tiene América Latina es su gente. 21. Y mostrar que las mujeres jóvenes tienen mucho potencial. 22. Desarrollador web es una de las profesiones mejor pagadas en América Latina. 23. En México es una de las 11 profesiones con mejor salario. 24. No necesitas un título universitario para que te contraten como programadora. 25. Serás parte de una comunidad de personas que quieren seguir aprendiendo. . . 26. Y que se ayudan entre sí. 27. Conocerás a las personas más cool y relajadas. 28. Hay trabajo en todas partes del mundo. 29. Puedes tener una idea, llevarla a cabo y hacerte millonaria. 30. Puedes ser la próxima Jade Raymond…31. O Kimberly Bryant…32. O Lyndsey Scott. 33. Puedes ser tu propia jefa. 34. Tu principal herramienta de trabajo es una computadora. 35. Puedes cambiar el mundo. 36. Puedes programar música…37. Y hacer animaciones. 38. Porque puedes estudiar en Laboratoria (!)39. Laboratoria es un programa sólo para mujeres…40. Donde conocerás otras mujeres que quieren transformar su futuro. 41. En 6 meses te conviertes en desarrolladora front-end. 42. En 2 años, puedes llegar a ser desarrolladora full-stack. 43. Laboratoria ofrece la mejor capacitación técnica…44. En un bootcamp que dura 6 meses…45. Donde aprendes Java Script…46. C S S3…47. H T M L5…48. Para convertirte en una programadora súper chingona (capa, increíble). 49. Y también te ofrece talleres de desarrollo personal…50. Donde aprendes a valorar tu esfuerzo…51. A comunicarte mejor…52. Trabajar en equipo…53. A conocerte mejor…54. Y te das cuenta de que puedes lograr todo lo que te propones. 55. Terminando el bootcamp de 6 meses, Laboratoria te ayuda a conseguir un trabajo tech. 56. Y S O L O E M P I E Z A S A P A G A R T U S E S T U D I O S H A S T A Q U E C O N S I G U E S T R A B A J O. 57. El programa de Laboratoria también incluye capacitaciones al finalizar los 6 meses de bootcamp…58. Con cursos en línea…59. Y clases con horarios flexibles…60. Donde seguirás aprendiendo lo que más te guste de programación…61. Ya sea U X Design…62. O Java Script…63. O programación back-end. 64. Y también aprenderás inglés para developers…65. Que te ayudará a tener más crecimiento como programadora…66. Y te dará más herramientas para tener una exitosa carrera. 67. Podrás ser como las más de 800 mujeres que se han graduado de Laboratoria…68. 80% de nuestras recientes egresadas hoy trabajan en todo tipo de empresas…69. Desde startups y agencias digitales…70. Hasta empresas globales y organismos multilaterales. 71. Podrás colocarte en las mejores empresas…72. Como I B M…73. Everis…74. Axa Seguros…75. B B V A…76. Y hasta podrás hacer una pasantía en el Banco Interamericano de Desarrollo…77. Y Thoughtworks. 78. En promedio las egresadas ganan 3 veces más que antes de aprender a programar. 79. Laboratoria tiene sedes en Lima… Lo más cerca a un Gi F de Lima que econtré80. São Paulo81. Santiago de Chile…82. Ciudad de México…83. Y Guadalajara84. Tenemos los mejores profesores. 85. Y las mejores alumnas. 86. Las instalaciones más cool. 87. El equipo de trabajo más comprometido. 88. Tenemos una red de más de 500 empresas empleadoras. 89. Contamos con el apoyo de Google…90. Y del Omidyar Network…91. Y del Banco Interamericano de Desarrollo (sí lo mencionamos dos veces, porque así de importante es). 92. Laboratoria y sus alumnas han sido muy reconocidas por personajes súper relevantes…93. Como Barack Obama…94. Michelle Bachelet…95. Y Mark Zuckerberg…96. Y estás de suerte, porque la convocatoria para ser parte de ¡ Laboratoria está abierta todo el año!97. Sí todo el año…98. Lo más importante es que Laboratoria te ayudará a explorar tu potencial…99. Creer en ti…100. Y transformar tu futuro!","['Codingbootcamp', 'Codelikeagirl', 'Laboratorians']",https://medium.com/laboratoria/100-razones-para-aprender-a-programar-en-laboratoria-1c019c739f04,False
Coding Days,Coding Days est un organisme certifié de formations ludiques et accessibles pour apprendre à coder et naviguer dans le digital 💻⚓️,Comment s’initier au code ? – Coding Days – Medium,2017-05-11 08:17:56,medium,"Comment s’initier au code ? Vous souhaitez apprendre à coder ! C’est déjà une bonne chose ! Il existe plusieurs façons de vous lancer dans l’apprentissage du code 👩‍💻 Apprentissage en ligne, à l’école, en formation courte. Pour apprendre le code il y en a pour tous les goûts ! À vous de trouver la méthode qui vous correspond le mieux. Apprendre en ligne 💻 Vous êtes motivés, vous disposez de temps mais souhaitez apprendre de chez vous ? Alors le format d’apprentissage en ligne vous correspond parfaitement ! Profitez de sites comme Open Classroom qui vous permettrons d’apprendre le code avec des vidéos en ligne (appelées M O O C : Massive Open Online Course en anglais). Votre motivation sera la clé de la réussite de votre apprentissage ! Hélas, 90% des M O O C sont abandonnés en cause : le nombre important d’heures à devoir passer devant les vidéos et remplir les questionnaires peuvent peut-être expliquer ce chiffre important. Apprendre à l’école 🎓 Si vous êtes dans une école qui propose l’apprentissage du code : vous avez beaucoup de chance ! De plus en plus d’établissements scolaires prennent conscience de l’importance d’apprendre le code et ceux dès le plus jeune âge. Aux États Unis et au Royaume- Unis, il est déjà très fréquent de voir de jeunes enfants apprendre à l’école ! Avant de débarquer dans nos écoles élémentaires, des cours de code sont dispensés dans de plus en plus d’écoles supérieures : école de commerce, école de communication, école de graphisme. Étant encore une nouvelle matière à appréhender, la pédagogie n’est parfois pas toujours au rendez-vous, rendant l’apprentissage parfois laborieux. Toutefois, de plus en plus d’écoles, diverses et variées, intègrent dans leur programme le code et ça, c’est une bonne nouvelle 🎉 Apprendre en présentiel 👩‍💻👨‍🏫 On dit toujours le meilleur pour la fin, n’est-ce pas ? Apprendre en présentiel c’est avoir l’assurance d’avoir un réel accompagnement dans votre apprentissage du code. L’avantage de ce moyen d’apprentissage, dans le cadre des formations proposées par Coding Days, c’est que vous avez toutes les raisons de ne pas décrocher ! Le format : 1 mentor pour 5 élèves, si vous le souhaitez, la mise en place de pair programming (programmer à deux), rencontrez quelqu’un qui traverse les mêmes difficultés que vous, un accès à la communauté Slack d’anciens élèves et de mentors à votre écoute ! Envie de vous lancer ? N’hésitez plus ! Quelque soit votre méthode, l’apprentissage du code est aujourd’hui indispensable ! Pas convaincu ? Découvrez notre article sur Pourquoi apprendre à coder !___________________________________________________________ Pour plus d’articles sur le développement web, n’hésitez pas à mettre un petit 💚 à cet article ! 🤗","['Code', 'Learning To Code', 'Formation Professionnelle', 'Codingbootcamp', 'Coding']",https://medium.com/coding-days/comment-sinitier-au-code-f30f8c079491,False
Laboratoria,,Todo lo que necesitas saber sobre nuestro proceso de selección,2017-06-07 15:37:26,medium,"Todo lo que necesitas saber sobre nuestro proceso de selección Una gran parte de las preguntas que recibimos a través de nuestro correo y nuestra página de Facebook son sobre el proceso de selección que llevamos a cabo para conformar cada generación de Laboratoria, ya sea en Lima, Santiago de Chile, Guadalajara, São Paulo o Ciudad de México. Por eso, hemos decidido dedicar un post para explicar en general este tema tan importante, y así tratar de responder una buena parte de las preguntas que puedan surgir (aunque tal vez no todas). ¡ Empecemos! Querida postulante que está considerando postular, que le llamó la atención el post y que le dio click sin querer o queriendo: Bienvenida a nuestro blog y en particular a este post donde te explicaremos todos lo que necesitas saber sobre el proceso de selección que estás empezando/considerando/comprendiendo/conociendo por azares del destino. Lo más importante que debes saber es que el proceso de selección de Laboratoria está dividido en 5 etapas. I. Registro El primer paso es postular. Para eso tienes que ingresar a nuestra página http://convocatoria. laboratoria. la y registrarte. Los datos que proporciones nos servirán para contactarte, saber a qué sede estás postulando y empezar el proceso de selección. Ahora, ten cuidado, porque para poder inscribiste deberás responder algunas preguntas sobre Laboratoria. Así que te recomendamos leer e investigar sobre nosotras antes de comenzar tu registro. Si no respondes bien, tranquila, podrás intentarlo nuevamente hasta que lo logres. Después del registro te pedimos que completes tu datos personales, ya sea en ese mismo momento o después, cuando más se te acomode. De cualquier forma te enviaremos un correo para recordarte que lo tienes pendiente. No te tardarás más de 15 minutos en llenar este formulario, pero para nosotros es muy importante tener tus datos para conocerte mejor e identificar si tienes el perfil que buscamos en las estudiantes. I I. Examen La segunda etapa es la que más pone nerviosas a las candidatas, en gran parte porque no saben qué esperar. ¡ No tienes de qué preocuparte! No tienes que estudiar ni tener conocimientos previos de programación. Sólo es una prueba que nos permite saber cómo piensas y cómo te enfrentas ante la vida y las situaciones de estrés. El examen está dividido en 5secciones que evalúan tu potencial para aprender código dentro de nuestro programa. Cada sección nos dice algo diferente de ti por lo que al final del examen tenemos una mejor idea de tu talento y tu capacidad. En general evaluamos 4 cosas: personalidad, matemáticas, razonamiento lógico y lectura de comprensión. Tendrás un máximo de 4 horas para contestar las 4 secciones del examen y podrás realizarlo en línea cuando tú prefieras, desde tu casa o algún otro lugar donde puedas concentrarte. Pero ten en cuenta que una vez que empieces, sólo tendrás 4 horas para terminarlo, así que escoge bien tu momento y lugar para minimizar distracciones. Si no tienes acceso a una computadora e internet, nosotros te podemos ayudar a encontrar un lugar dónde presentar el examen. I I I. Pre-trabajo El objetivo de esta etapa es conocer tu manera de trabajar y de aprender. Por ello, en esta tercera etapa te pedimos que veas unos videos y realices unas lecturas básicas sobre los temas que vamos a estudiar durante el bootcamp, para que puedas hacer unos ejercicios de programación básica. Ello nos permitirá analizar tu capacidad de aprendizaje autodidacta, es decir, qué tan buena eres para entender el material teórico por tu cuenta y ponerlo en la práctica. Toda la información que vas a necesitar para hacer los ejercicios va a estar a tu disposición, sólo es cuestión de ver, leer y releer todos los materiales con mucha atención. Realizar los ejercicios de esta tercera etapa te tardará aproximadamente 20 horas en total, por lo que te recomendamos que te organices bien para que no se te venga el tiempo encima. No creas que tienes que trabajar las 20 horas sin descanso. A diferencia del examen, estos ejercicios sí los puedes ir haciendo por partes. Y recuerda que es muy importante hacer un buen esfuerzo en estas tareas ya que de ello depende si avanzas o no a la siguiente y última etapa. I V. Entrevistas La cuarta etapa ya es presencial y se lleva a cabo en nuestras instalaciones (en las distintas sedes), por lo que sólo avanzan quienes hayan tenido un buen examen de admisión y hayan completado exitosamente los ejercicios de la etapa previa. Esta etapa es para conocerte mejor, saber cuáles son tus intereses personales y profesionales. También evaluaremos qué tanto sabes de Laboratoria y del compromiso que implica ser estudiante. Nuestra recomendación es que seas tú misma. Sé espontánea, y todo saldrá bien. V. Pre- Admisión Quienes pasen la etapa de la entrevista, serán invitadas a pasar 4 días con nosotros. Será como asistir a clases. A este momento le llamamos Pre- Admisión. Durante los días de pre-admisión, el objetivo es brindarte una introducción a nuestro plan de estudios y a la metodología ágil que utilizamos en nuestras clases. Lo importante de esto es que vas a vivir el día a día de una estudiante de Laboratoria para que sepas cómo funciona el programa y conozcas a las que podrían ser tus compañeras. Esta etapa es el último filtro antes de ingresar oficialmente a Laboratoria por lo que es muy importante demostrar compromiso, todo tu talento y sobre todo, una excelente actitud. Las postulantes que tengan el mejor desempeño en la pre-admisión serán admitidas para formar parte del bootcamp que empieza. Las que no logren entrar, podrán postular para la siguiente generación. Éste es nuestro proceso de selección a grandes rasgos. En próximos posts estaremos entrando más a detalle sobre las diferentes etapas, poniendo énfasis en el examen y el pre-trabajo pues la mayoría de las preguntas de las postulantes se refieren a estos dos pasos. Pero por lo pronto, esperamos que tengas una mejor idea de nuestro proceso. Si empezaste el proceso de selección, ¡felicidades! Has tomado una excelente decisión. Recuerda que en nuestro blog encontrarás todo lo que necesitas saber sobre los siguientes pasos. ¡ Mucha suerte! Si estás considerando postular, regístrate aquí aunque no estés segura. Así nos das la oportunidad de convencerte. Si no supiste cómo llegaste a este blog, pero de todas maneras llegaste hasta el final para leer este mensaje, postula a Laboratoria. No hay que ignorar las señales que te da el destino. No olvides que también podrás encontrar más información sobre nosotros en nuestras redes sociales y en nuestra página web www. laboratoria. la. Y por favor no dudes en mandarnos un correo a postula@laboratoria. la si tienes alguna pregunta específica. ¡ Hasta la próxima!","['Education', 'Codingbootcamp', 'Mujeres En Tecnología', 'Talent Acquisition']",https://medium.com/laboratoria/todo-lo-que-siempre-quisiste-saber-sobre-el-proceso-de-selecci%C3%B3n-de-laboratoria-y-s%C3%AD-te-atreviste-531a62df8a0a,False
Pablo Laso Cortabitarte,,El fin de las comunidades tradicionales - Community,2018-05-21 11:35:44,medium,"El fin de las comunidades tradicionales - Community Parece mentira que en el 2018 sigamos teniendo que gestionar nuestros problemas vecinales a golpe de estatuto, a gritos en una junta o a escobazos si no nos dejan dormir. A nadie nos gusta mudarnos a un sitio en el que no conocemos a nuestros vecinos y tardar años en coger la confianza suficiente para tener una buena convivencia. Nos gustaría poder avisar de lo que nos parece mal, que no sea necesaria nuestra presencia en todas las votaciones de las juntas, o que si necesitamos un favor de un vecino, podamos contactar con él. ¿ Qué es Community? Community surge para solucionar estos problemas, es una solución digital que tiene como objetivo final, mejorar la convivencia entre vecinos. A través de Community, podremos solventar problemas tan básicos como hacer pagos digitales, hablar con nuestros vecinos o gestionar las juntas de vecinos, pero todo esto lo veremos en detalle a lo largo de este post. Antes me gustaría presentar la historia de este proyecto. ¿ De dónde nace Community? Community ha sido desarrollado por tres alumnos de Ironhack: Alba Díaz, alumna del bootcamp de U X/ U I ha sido la diseñadora del producto, se ha encargado tanto del diseño de la interfaz como del research necesario para comprender las necesidades del producto. Marco Monzón y yo, Pablo Laso, alumnos del bootcamp de Desarrollo Web, nos hemos encargado del desarrollo de la aplicación web, desde la creación de su A P I hasta el desarrollo de todo el Front. Cabe destacar que este ha sido uno de los pocos proyectos, de momento, que se han desarrollado en Ironhack juntando a gente de U X/ U I y Web y por ello estamos muy orgullosos de haber podido hacer equipo. Además, no podríamos estar más orgullosos, ya que nuestro proyecto ¡ha sido el ganador el pasado viernes 18 de mayo del Hackshow de Web!¿ Qué nos ofrece Community? A través de la aplicación vamos a disponer de una serie de herramientas que nos ayudarán a solventar los problemas del día de día de una comunidad de vecinos. 1. Tablón de anuncios En esta sección podrás mantenerte al día de lo que ocurre en tu comunidad a través de noticias que los vecinos propondrán y que el administrador aprobará y asignará una prioridad, representada a través de colores. 2. Juntas de vecinos A través de nuestro sistema de gestión de juntas, podrás votar los puntos del día de las reuniones en activo, ver las actas digitalizadas de las juntas pasadas o conocer con antelación la próxima junta. 3. Chat A través del chat de la aplicación, podrás conectar con tus vecinos para gestionar temas personales. Por ejemplo, ¿te llega un paquete de Amazon a casa y no tienes quién te lo recoja?4. Anuncios La monetización también es un aspecto importante a tener en cuenta a la hora de plantear una solución así. Por tanto, hemos desarrollado una sección donde anunciantes locales podrán promocionarse para poder llegar a un público que de verdad les interese y con mayor posibilidad de conversión. 5. Chat-bot de ayuda Nuestro querido Wall- C siempre estará disponible para preguntarle dudas acerca de la comunidad o del funcionamiento de la aplicación, entra a su chat y habla con él. 6. Pagos A través de Pay Pal, hemos integrado un servicio con el que poder crear pagos como pueden ser derramas o pagos mensuales de la cuota de la comunidad y que los vecinos puedan pagar y tener registrado. 7. Normas Y por último, mejor olvidarnos de las carpetas llenas de estatutos de la comunidad y mantener estas normas de forma digital en nuestra aplicación. Reflexión Con todas estas funcionalidades, creemos que una comunidad de vecinos podría ser mucho más sencilla de manejar tanto para perfiles más acostumbrados a tareas de este tipo, por ejemplo, administradores de fincas, como para vecinos a los que les toca ser el presidente durante un tiempo, y por supuesto, para todos los vecinos que la utilizarían. Próximos pasos El siguiente que nos gustaría llevar a cabo sería el desarrollo de la aplicación de forma nativa para dispositivos móviles ya que creemos que ese sería el paso definitivo para aprovechar correctamente todas las ventajas que ofrecemos. ¡ Gracias! Si has llegado hasta aquí, muchas gracias y espero que nuestro proyecto te haya gustado. Podéis consultar más información en este enlace o preguntarnos directamente a cualquiera de los tres involucrados en el proyecto. Por supuesto nos gustaría agradecer a todo el equipo de Ironhack desde profesores, T A’s, el staff y nuestros compañeros por haber hecho de estos meses una gran experiencia que sin duda, no olvidaremos. Alba Díaz Marco Monzón Pablo Laso","['Web Development', 'Ironhack', 'UX', 'Codingbootcamp', 'Coding']",https://medium.com/ironhack/el-fin-de-las-comunidades-tradicionales-community-26296f898594,False
Angélica Velázquez,,Flex-Container – KAN by MUKTEK Academy,2018-02-02 17:44:23,fuerzamuktek,"Flex- Container Aprende más dando click aqui Ya hablamos un poco de Flex Box, ahora dividiremos un poco la terminología para que sea mas entendible para nosotros. En este post veremos cuales son las propiedades de flex-container. Empecemos!!!!! Display Esto es lo primero que debemos definir para usar Flex Box, haciendo esto, se define el elemento como contenedor flexible y todos sus “hijos” como elementos flexibles. Hay 2 posibles valores para esta propiedad:display: flex;flexdisplay: inline-flex;inline-flex Flex-direction Esta propiedad define las direcciones del main-axis, es decir, hacia donde se moverán los flex-items, tanto horizontalmente como verticalmente. Los posibles valore son:flex-direction: row; (por defecto)rowflex-direction: row-reverse;row-reverseflex-direction: column;columnflex-direction: column-reverse;column-reverse Flex-wrap Por defecto los flex-items intentarán estar contenidos en una sola línea. Con esta propiedad puedes cambiarlo y permitir que los items se envuelvan como sea necesario. Los posibles valores son:flex-wrap: no-wrap; (por defecto)no-wrapflex-wrap: wrap;wrapflex-wrap: wrap-reverse;wrap-reverse Flex-flow Esta propiedad combina las propiedades flex-direction y flex-wrap. El valor por defecto es flex-flow: row no-wrap . flex-flow: row no-wrap;row no-wrapflex-flow: row-reverse wrap-reverse;row-reverse wrap-reverse Justify-content Esta propiedad define cómo los elementos flexibles se alinean a lo largo del main-axis (horizontal). Ademas del espacio de sobra en la misma linea o cuando esta sobrepasa el limite. Los posibles valores son:justify-content: flex-start; (por defecto)flex-startjustify-content: flex-end;flex-endjustify-content: center;centerjustify-content: space-around;space-aroundjustify-content: space-between;space-between Align-items Esta propiedad define cómo los elementos flexibles se disponen a lo largo del cross-axis (vertical). Se puede entender como el justify-content para el eje-vertical. Los posibles valores son:align-items: stretch; (por defecto)stretchalign-items: flex-start;flex-startalign-items: center;centeralign-items: flex-end;flex-endalign-items: baseline;baseline Align-content Esta propiedad controla la alineación de las lineas a lo largo del cross-axis cuando los elementos no utilizan todo el espacio disponible. Esta propiedad no tiene efecto cuando solo hay una línea de flex-items. Los posibles valores son:align-content: stretch; (por defecto)stretchalign-content: flex-start;flex-startalign-content: center;centeralign-content: flex-end;flex-endalign-content: space-around;space-aroundalign-content: space-between;space-between Estas son las propiedades que podemos usar en nuestro Flex-container. En el siguiente post veremos cuales son las propiedades de Flex-item. Aprende más sobre Flex Box y la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K","['HTML', 'CSS', 'Flexbox', 'Flex', 'Codingbootcamp']",https://blog.muktek.com/flex-container-b309b9fdd16b,False
Angélica Velázquez,,Media queries – KAN by MUKTEK Academy,2018-03-16 23:53:09,fuerzamuktek,"Media querieshttp://www. drupalthemer. org/blog/responsive-design-media-queries-and-how-to-make-them-more-friendly C S S utiliza media queries para adaptar el contenido de un sitio web a diferentes tamaños de pantalla. Con los media queries, C S S puede detectar el tamaño de la pantalla actual y aplicar diferentes estilos C S S dependiendo del ancho de la pantalla. Sintaxis Los media queries consisten de un media type y una o mas expresiones, implicando características del medio, la cual se resuelve como verdadera o falsa. El resultado de la consulta es verdadera si el tipo de medio especificado en el media query concuerda con el tipo de dispositivo que está siendo mostrado y todas las expresiones en el media query son verdaderas. @mediaqueries El ejemplo anterior demuestra cómo se aplica un media query. Vamos a dividir este ejemplo en sus partes:@media: Esta palabra clave comienza una regla de media query e instruye al compilador de C S S sobre cómo analizar el resto de la regla. only screen: indica qué tipos de dispositivos deberían usar esta regla. En los primeros intentos para apuntar a diferentes dispositivos, C S S incorporó diferentes tipos de medios (pantalla, impresión, móviles). La razón fundamental fue que, conociendo el tipo de medio, se podrían aplicar las reglas de C S S adecuadas. Sin embargo, los dispositivos “móviles” y de “pantalla” comenzaron a ocupar un rango mucho más amplio de tamaños y tener solo una regla de C S S por dispositivo de medios no fue suficiente. screen es el tipo de medio que se usa siempre para mostrar contenido, sin importar el tipo de dispositivo. La palabra clave only se agrega para indicar que esta regla solo se aplica a un tipo de medio (pantalla). and (max-width: 480px): esta parte de la regla se denomina función multimedia e instruye al compilador C S S a aplicar los estilos a dispositivos con un ancho de 480 píxeles o menos. Las reglas de C S S están anidadas dentro de las llaves del media query. Los estilos C S S se aplicarán cuando se cumplan las condiciones del query. En el ejemplo anterior, el texto en el elemento body se establece en un tamaño de fuente de 12 px cuando la pantalla del usuario es inferior a 480 px. Operador And El operador and se puede usar para requerir múltiples funciones de medios. operador and Al colocar el operador and entre las dos funciones de medios, el navegador requerirá que ambas características de los medios sean verdaderas antes de que presente el C S S dentro del media query. El operador and se puede usar para encadenar tantas características de medios como sea necesario. Lista separada por comas Si solo se debe cumplir una de las múltiples funciones de medios en un media query, las características de los medios se pueden separar por comas. Por ejemplo, si necesitamos aplicar un estilo cuando solo uno de los siguientes es verdadero: La pantalla tiene más de 480 px de ancho La pantalla está en modo horizontal Podríamos escribir:orientation En el ejemplo anterior, usamos una coma (, ) para separar varias reglas y requiere que solo una sea verdadera para que se aplique su C S S. Hay que tener en cuenta que la segunda característica de medios es la orientación. La función de medios de orientación detecta si la página tiene más ancho que alto. Si una página es más ancha, se considera landscape, y si una página es más alta, se considera portrait. Breakpoints Ahora ya sabemos cómo usar los media queries para aplicar reglas C S S basadas en el tamaño, pero ¿cómo determinamos qué consultas establecer? Los puntos en los que se establecen consultas de medios se denominan breakpoints. Los breakpoints son los tamaños de pantalla en los que la página web no aparece correctamente. Por ejemplo, si queremos apuntar a tabletas que están en orientación horizontal, podemos crear el siguiente breakpoint:breakpoint Sin embargo, establecer breakpoints para cada dispositivo imaginable sería increíblemente difícil porque hay muchos dispositivos de diferentes formas y tamaños. Además, cada año se lanzan nuevos dispositivos con nuevos tamaños de pantalla. En lugar de establecer breakpoints basados ​​en dispositivos específicos, la mejor práctica es cambiar el tamaño del navegador para ver dónde el sitio web naturalmente se rompe en función de su contenido. Las dimensiones en las que el diseño se rompe o se ve extraño se convierten en puntos de referencia para los media queries. Dentro de esos breakpoints, podemos ajustar el C S S para hacer que la página cambie de tamaño y se reorganice. Al observar las dimensiones en las que un sitio web se rompe de forma natural, se puede establecer puntos de referencia que crean la mejor experiencia de usuario posible proyecto por proyecto, en lugar de forzar a cada proyecto a ajustarse a un determinado tamaño de pantalla. Los diferentes proyectos tienen diferentes necesidades, y la creación de un diseño responsivo no debería ser diferente. https://builtvisible. com/the-responsive-design-seo-checklist/ Ahora ya sabemos un poco de media queries, si quieres aprender acerca de otros tipos de medios te recomiendo leer esta página. Aprende más sobre la mejor forma de iniciarte en H T M L y C S S visitando la página de M U K T E K","['HTML', 'CSS', 'Media Queries', 'Codingbootcamp']",https://blog.muktek.com/media-queries-30674b927ddb,False
MG Ayoub,"Co-founder @ Le Wagon Montréal, a coding bootcamp that brings technical skills to entrepreneurs and creative people. 🙌 lewagon.com/montreal",La diversité et l’inclusivité dans les tech: actions et opportunités à Montréal,2017-07-21 19:55:20,medium,"Le Wagon Talk — Diversité dans les Tech: Un panel de discussion. 6 juillet 2017. À La Gare, espace collaboratif et maison du Wagon Montréal La diversité et l’inclusivité dans les tech: actions et opportunités à Montréal Read the English version Pourquoi amener le sujet de la diversité dans les tech dans un Wagon Talk? Parce que c’est un enjeu qui m’importe personnellement : je suis une femme et j’oeuvre dans le milieu des technologies depuis plus de 15 ans. Mais pas juste pour ça, ce serait trop réducteur. Parce que des vagues de scandales américains récemment véhiculées dans les médias ont choqué, interpellé et fait réagir les communautés partout dans le monde. Parce qu’au Canada, la communauté tech s’est porté championne de la diversité: des milliers d’entrepreneurs, acteurs et personnes impliquées dans des startups et entreprises technologiques l’ont reconnu comme une valeur qui fait la force et la richesse du pays. Et au delà des mots, certaines agissent. Parce qu’au Québec, comme ailleurs dans le monde, on constate que les start-up et les entreprises technologiques ont encore du chemin à faire face à cet enjeu. Parce qu’à Montréal, on en parle aussi beaucoup et plusieurs initiatives oeuvrent à une plus grande diversité, notamment Startup Mosaic, Maison Notman et Ladies Learning Code, … la liste est longue. Définitions La diversité: Ensemble des personnes qui diffèrent les unes des autres par leur origine géographique, socio-culturelle ou religieuse, leur âge, leur sexe, leur orientation sexuelle, etc. , et qui constituent la communauté nationale à laquelle elles appartiennent ( Larousse) Avoir une démarche inclusive: “ Tout le monde est invité à s’impliquer; quelque que soit leur genre, orientations sexuelles, traditions, races, etc. ” Chloé Freslon, journaliste et animatrice; Ilias Benjelloun, Emma Notman & Cassie L. Rhéaume Un momentum pour faire le point à Montréal On s’est dit que c’était le momentum pour faire le point sur la situation à Montréal et les actions qu’il nous reste à accomplir, en tant que société et individu pour adopter une démarche plus inclusive, équitable et juste. Nous avons réunis des acteurs et champions de la communauté le 6 juillet dernier pour en parler: Cassie L. Rhéaume, développeuse, conférencière et ambassadrice de la division montréalaise de Ladies Learning Code Emma Williams, directrice de campus, Maison Notman Ilias Benjelloun, directeur créatif de M T L New Tech et Interpreneurship Catalyst, Desjardins Lab. com Le panel était animé par Chloé Freslon, journaliste et auteur du blogue U Relles, un blogue dédié aux femmes en tech. “ Je crois fort au pouvoir des modèles dans la vie pour changer ce qui ne va pas dans les sociétés. ” Chloé Freslon Faits saillants issus de la discussion L’enjeu de parité s’aggrave. Dans les années 50 et 60, il y a eu des femmes pionnières en informatique. Quand l’informatique est entré dans les foyers, dans les années 80, l’ordinateur a été amené comme un jouet pour les gars. Cet effet d’inertie a poussé les garçons à être dans l’écosystème technologique plus tôt que les filles. Il est encore difficile de changer la culture du “bro”, de sortir des stéréotypes machistes dans une culture qui peine encore à être inclusive. Un moyen important pour remédier à cela: favoriser la littératie numérique envers les jeunes filles pour leur faire comprendre que les technologies s’adressent à tout le monde. On a besoin de diversité pour créer de la valeur du point de vue économique (un rapport de Mc Kinsey Global Institute prédit que les avancées en matière d’équité dans les entreprises pourraient augmenter le Produit Intérieur Brut ( P I B) du Canada de 150 milliards de dollars d’ici 2026), du point de vue créatif et du point de vue social. Les avancés en intelligence artificielle sont une opportunité pour défaire les biais que nous avons et c’est pourquoi la diversité des genres, des origines et des cultures est essentielle. Les scandales liés aux inégalités, discriminations et abus qui font l’actualité contribuent au sentiment d’insécurité mais favorisent aussi à témoigner des situations discriminatoires et inéquitables et donne l’espoir que certains comportements ne soient plus tolérées. Les actions et solutions dans la communauté tech à Montréal sont nombreuses. On est chanceux de vivre dans une communauté tissé serrée, d’avoir des piliers comme Maison Notman et M T L New Tech, de profiter d’une multitude d’événements, de disposer de plusieurs façons d’apprendre à coder (un bootcamp comme Le Wagon Montréal ou des organismes à but non lucratif comme Les Pitonneux ou Ladies Learning Code, — d’ailleurs, petite parenthèse, 43% des élèves de bootcamp en Amérique du Nord sont des femmes), d’avoir des groupes Slack et Facebook pour les femmes en tech. , des initiatives comme Startup Mosaic et Queer Tech M T L qui mettent de l’avant des modèles issus de la diversité et des leaders issus de la diversité pour encourager la diversité. C’est par les efforts de chacun que les choses pourront changer disait Ilias lors du talk. Nous le croyons. C’est d’ailleurs pourquoi notre programme s’adresse à tous les esprits créatifs et entrepreneuriaux, peu importe leur genre et leur origine et il est ouvert sur le monde (20 Wagon à travers le monde aujourd’hui qui accueille des étudiants du monde entier). Nos attentes par rapports aux candidat-es ? Une (très) forte motivation, la curiosité et la sociabilité. Cristina, architecte et étudiante au Wagon Montréal, batch #77 Et vous ? Avez-vous des exemples de gestes et d’actions qui changent les choses ? Envie d’en savoir plus sur nos prochains événements 📅? Inscrivez-vous à notre groupe Meetup. Pssst… Cette “story” vous a plu? Clap 👏 et partagez pour que d’autres puissent la lire aussi. N’hésitez pas à nous laisser un commentaire ! 🤗À lire aussi La diversité dans le monde de la techno à Montréal : table ronde organisée par Le Wagon Photo: Le Wagon La diversité est très importante pour Askida. Nous embauchons des experts d'un peu partout à travers la…askida. com Changer de carrière en 9 semaines grâce aux femmes et à l’inclusivité Neuf semaines pour devenir programmeur full stack et construire un site web avec des gens qu’on ne connait pas…journalmetro. com Le Wagon Montréal - Coding Station Le Wagon démystifie le code à travers le monde et a déjà formé plus de 1400 étudiants. Vous êtes un créatif, un…www. meetup. com","['Diversity', 'Diversity In Tech', 'Diversity And Inclusion', 'Codingbootcamp', 'Montreal']",https://medium.com/@mgayoub/diversityintech-cf6841912e59,False
Fernando Americano,"cofounder of Le Wagon Brasil, the first Coding Bootcamp in Brazil",Veja os produtos criados pelos alunos do Le Wagon — Turma 34,2016-11-01 14:37:20,medium,"Veja os produtos criados pelos alunos do Le Wagon — Turma 34 Isso é o que os alunos do Le Wagon são capazes de fazer em apenas 10 dias, após algumas semanas de bootcamp Ontem aquela pessoa de blusa listrada não sabia nem instalar uma impressora. Hoje ela poderia trabalhar na Tesla. Ontem publiquei um texto onde conto minha experiência enquanto aluno de bootcamps. Nesse primeiro texto falo sobre a metodologia e benefícios, de uma maneira um tanto quanto filosófica. Neste texto de agora vou falar de uma maneira muito mais concreta e sucinta: mostrando o resultado! Sem mais delongas, vejam aqui os projetos criados pelos alunos da primeira turma do Le Wagon no Brasil. Antes de assistir aos vídeos, é bom lembrar que: i) Algumas dessas pessoas eram completamente leigas e nunca tinham escrito uma linha de código na vida. ii) Cada um destes apps foi feito em menos de 10 dias de trabalho, por grupos de 3 ou 4 pessoas. 1 — Calendr. io Calendr. io é uma solução pra acabar com a dificuldade de se agendar quadras, salas de reunião e o que mais você precisar. A ideia é que síndicos e administradores de condomínios possam contar com uma ferramenta simples e fácil de usar e que elimine o velho papel e caneta. Quer experimentar? Calendr. io2— Numooh Numooh significa “ New Media Out of Home”. É um market place de mídia Out of Home (que algumas pessoas no Brasil gostam de chamar de “outdoor”). A ideia do app é consolidar as informações sobre placas disponíveis para aluguel e colocar essa informação nas mãos da pessoa que aluga, eliminando a necessidade dos grandes brokers. O app traz algumas funcionalidades muito úteis, como por exemplo poder visualizar as placas via integração com o Google Street View. É um produto muito promissor e estamos acompanhando de perto sua evolução! Visite o Numooh!3— Client Premium Client Premium é uma solução para trazer B I e C R M até as pequenas e médias empresas. É a calda longa do B I, conseguiram colocar nas mãos dos pequenos e médios comerciantes ferramentas antes muito caras e só disponíveis para os grandes. O sistema é alimentado com os dados de C P F da Nota Paulista e a partir daí cria gráficos e gera inteligência para o comerciante. Quer fazer igual? Temos turmas em S P, R J e B H. E aí, qual destes é o seu produto favorito?","['Ruby on Rails', 'Coding Bootcamps']",https://medium.com/codando/veja-os-produtos-criados-pelos-alunos-do-le-wagon-turma-34-f83413d1e6cd,False
Alexandra GAUTHIER-POINT,Je parcours le monde et les écosystèmes startups afin de créer des learning expeditions uniques qui challengeront la vision entrepreneuriale des participants,Ecole 42 : bilan à mi-chemin de mon aventure ! – Alexandra GAUTHIER-POINT – Medium,2018-08-07 08:48:54,medium,"Ecole 42 : bilan à mi-chemin de mon aventure ! J’arrive à la moitié du parcours de mon aventure à 42. C’est à la fois passé vite et en même temps, me dire que je dois tenir encore aussi longtemps me fait peur. Je sais que ce qui m’attend va être encore plus complexe et plus intense, j’ai donc choisi de reprendre mon souffle aujourd’hui avec une pause d’une journée entière sans aller au lab… Me voilà reboostée et prête à affronter la 3ème semaine. Si je devais vous résumer ma deuxième semaine dans la Piscine en une seule phrase : mon mental a été mis à rude épreuve. Les notes : ou comment accepter d’avoir zéro régulièrement Même si je sais que les notes ne reflètent pas notre travail et n’éliminent pas nos chances d’être pris à 42, c’est dur d’enchaîner les zéros sur 100 et de ne pas valider les journées d’exercices (25 points pour valider). Nous avons les statistiques et je sais que le taux d’échec est gigantesque (60 à 80% d’échec en général). D’autant plus pour ceux comme moi qui n’ont jamais codé auparavant. Malgré tout cela, c’est dur de travailler autant et de faire autant d’efforts pour recevoir des zéros et encore des zéros. J’ai pourtant trouvé que mes camarades validaient des journées plus facilement et qu’ils avaient de meilleurs résultats que moi. Je me suis donc sentie encore plus nulle de ne pas réussir et c’était très frustrant (moralité : éviter de se comparer aux autres). Cependant, au fur et à mesure de mes interactions je me suis rendue compte que certains recopiaient des fonctions bêtement sans forcément comprendre mais dans l’objectif d’avoir une bonne note. Sauf que moi depuis le début j’ai une règle d’or : je n’écris pas et je ne rends pas un travail que je ne comprends pas et que je ne suis pas capable d’expliquer. En faisant du copier coller on arrive à avoir des meilleures notes, mais ce n’est pas le but du jeu ici et je l’ai vraiment assimilé cette semaine. Même si je le savais, le fait de le vivre est tellement différent. On est malheureusement très formatés à travailler pour une note. Et quand on change les règles du jeu, certains réflexes perdurent. Mon objectif reste bien toujours d’apprendre le plus possible sur 1 mois. Et l’objectif est déjà atteint, qu’est-ce-que j’apprends ! Le travail de groupe de samedi m’a énormément aidé car je me suis rendue compte que les notes n’avaient pas ou peu de valeur. En effet, j’ai été le moteur du groupe (j’étais sur le papier celle qui avait le moins bon niveau) et j’ai eu une compréhension très rapide du problème et de la technique pour le résoudre. Et cela, sans aller directement voir la réponse comme certains ont pu le faire. J’ai pris conscience que je comprenais la logique et l’algorithme bien plus que les notes ne laissent transparaître. Cela m’a redonné confiance en moi pour la suite et m’a aidé à prendre du recul sur mon tas de zéros ! Chinois, néerlandais, russe, coréen, américain : un groupe cosmopolite en train d‘apprendre ensemble L’examen du vendredi : F A I L Passons au récit de mon examen de 4h vendredi qui a été très difficile. Le premier exercice tombe sur une des journées de code que j’ai le plus aimée et que j’ai bien compris… excepté un élément… et là c’est le drame : mon programme ne fonctionne pas. J’ai donc cherché mon erreur pendant près de 2 heures, soit la moitié de l’examen… je ne voulais pas lâcher. Je me suis littéralement arrachée les cheveux mais je savais que j’y passerai 4h s’il le fallait. Je me refusais à échouer. À force de persévérance et de tests, j’ai enfin réussi à faire fonctionner mon programme ! Je le fais donc valider par l’ordinateur pour qu’il me donne l’exercice suivant du niveau supérieur. Là encore une fois joie et bonheur, je comprends directement ce que je dois faire. . . je code, je code et je me vois déjà valider mon examen ! Et oui cet exercice me ferait passer la barre des 25 points. . . trop de pression ! Et là, bim je teste et ça fonctionne… enfin presque. . sauf que je sais très bien que le programme qui valide mon exercice ne prend pas les fonctions qui fonctionnent “presque”. Pas de souci je me dis que j’ai encore du temps et que je vais trouver facilement l’erreur. 2 heures plus tard, on est à 2 minutes de la fermeture de l’examen et je suis toujours en train de galérer et de tester et retester mon programme. Je l’envoie quand même, sachant que je ne vais pas le valider et la sentence tombe : F A I L U R E ! Je sors de l’examen complètement dépitée d’avoir été si proche du but et d’avoir échoué. Je demande directement en sortant à des amis qui ont réussi, comment ils ont fait. Ils me donnent la réponse et je suis encore plus dépitée puisque la solution était simple mais m’est passée sous le nez ! Il y a de quoi s’arracher les cheveux, croyez-moi. Mais cela me donne envie d’y retourner et de ne pas me faire avoir une deuxième fois ! ;) Une troisième semaine qui s’annonce intense… J’angoisse de plus en plus pour la semaine prochaine car le niveau ne cesse de monter et j’ai à peine le temps de comprendre et de reprendre mon souffle que je me prends une nouvelle vague à surmonter. Oui, la piscine de 42 est une piscine à vagues. Cette troisième semaine sera sans aucun doute une grosse vague et je sais à peine nager donc il va falloir redoubler d’efforts pour la surmonter !","['Ecole 42', 'Women In Tech', 'Learning To Code', 'Silicon Valley', 'Codingbootcamp']",https://medium.com/@aLexHub/ecole-42-bilan-%C3%A0-mi-chemin-de-mon-aventure-b7401b591911,False
Alex,"Cheerleader in chief for KMMX & IoT Researcher, NativeScript Developer Expert. Auth0 Ambassador. Unity Training Partner. HTML+JS Community Leader CDMX",¿que hacer después de mi coding Bootcamp? – Alex – Medium,2018-10-01 15:30:54,medium,"¿que hacer después de mi coding Bootcamp? Consejos para triunfar después de haber cursado un Bootcamp Los bootcamps de codificación son programas intensivos de desarrollo de software. El concepto de Bootcamp es relativamente nuevo, comenzó hace un par de años y se han vuelto muy populares, ya que atienden a una necesidad apremiante que es la de cubrir la gran demanda de desarrolladores y/o personas de T I. get Dev Job = calidad de vida ( imagen de Internet, puede tener derechos). La expectativa tanto de empleadores como de los participantes, después de haber cursado exitosamente un bootcamp es que conoces y dominas los fundamentos de la tecnología en cuestión, el desarrollo de sistemas — en cualquier de sus variantes es una carrera de toda la vida, nunca, nunca, dejas de aprender. Los bootcamps te ayudan, te habilitan para el primer empleo dándote las bases para crecer en el mundo de la tecnología. No esperes ganar un super sueldo en tu primer empleo, eso lo iras logrando poco a poco, con la experiencia, pero te aseguramos que es una carrera lucrativa, que con empeño y constancia podrás ir subiendo peldaños. En México no conozco de la existencia de estadísticas precisas u oficiales acerca de las personas que toman un bootcamps pero al menos en Estados Unidos las cifras son alentadoras, hay un sentimiento generalizado de triunfo es decir que todos avanzan en sus carreras, más del 80% logra conseguir trabajo y aproximadamente el 51% tiene un aumento de sueldo. Se ha discutido mucho acerca de las ventajas y desventajas de tomar un bootcamp ( Quora, Reddit, Medium, etc, ). ¿ Debo asistir? ¿vale la pena la inversión ? ¿es mejor que una carrera universitaria ? Tal vez si, tal vez no, pero no voy a escribir acerca de ello en este artículo. Una vez que has tomado la decisión de convertirte en desarrollador de software, solo resta ponerle ganas durante y después de la capacitación. Incluso más después, ya que tienes una visión más completa del escenario de desarrollo y lo complejo que esto puede ser. Empieza a aplicar a las vacantes que te gustaría tomar, todos hemos pasado por eso, aplicas a 50 posiciones, la mayoría te dicen que no, en muchas no te dan la entrevista, es más en algunas ni siquiera te responden. Así es esto, no te preocupes sigue haciendo tu trabajo, preparándote y eventualmente se va a dar. Esta mal que te lo diga — por que no es para confiarse, pero hay muchísima demanda de programadores y desarrolladores, muchas empresas sufren literalmente para cubrir algunos puestos. Otra aspecto a considerar muy importante es que el bootcamp te da ciertas herramientas y fundamentos técnicos, habilidades duras, es tu tarea adquirir las otras habilidades denominadas blandas, comunicación, pensamiento creativo, trabajo en equipo, resolución de conflictos, etc. Ahora, habemos del idioma inglés, si no tienes al menos comprensión de lectura de textos en idioma inglés estas frito. Al día de hoy hay muchísimos sitios web, aplicaciones móviles y eventos que te pueden ayudar a conseguir el tan anhelado trabajo. Eso es una gran ventaja, simplemente crear una cuenta en Linkedin o en Angel List y listo. Asiste a los meetups Todas las semanas hay una gran cantidad no solo de meetups sino de eventos de tecnología, la mayoría gratuitos, hasta pizza y cerveza en algunos, ¿que más quieres? no desaproveches estos eventos aprendes muchísimo , conoces gente ¡ y te diviertes!. Pero no solo eso, participa en ellos y da una charla, te ayuda a mejorar en muchos aspectos y la audiencia es más amigable, no te va a aventar jitomates. En los congresos y/o eventos cerca de tu localidad pide ser voluntario, no solo vas a aprender rodeándote de estas personas y escuchándolas, se ve bien en tu curriculum. Practica, practica, practica. A programar se aprende programando. Así de sencillo. Si puedes contribuir a algún proyecto de software libre que mejor, los proyectos de código libre necesitan toda la ayuda que puedan obtener, tal vez no vas a programar la próxima gran característica , pero hay un montón de formas de involucrarse, aquí hay una guía de Git Hub para contribuir al software libre. Bootcamp de J S- Back-end Developer Muchas suerte en tu camino. Para más información de Bootcamps en C D M X de Python, Java Script, Scrum, Desarrollo de Video Juegos con Unity da clic A Q U I","['Codingbootcamp', 'Coding Interviews', 'Mexico City', 'Javascript Jobs', 'Python Jobs']",https://medium.com/@alexmarket/que-hacer-despu%C3%A9s-de-mi-coding-bootcamp-f4c1f227d34d,False
World Tech Makers,Cursos de programación presenciales y virtuales! Cambia tu carrera. Cambia tu vida. http://virtual.bootcamps.online,"Knowmad, el perfil que buscan las empresas de hoy – World Tech Makers – Medium",2017-03-03 04:24:54,medium,"Knowmad, el perfil que buscan las empresas de hoy Foto: stocksnap. io El término knowmad es un neologismo que combina las palabras know (conocer, saber) y nomad (nómada) y que da cuenta del perfil del sujeto capaz de ser un nómada del conocimiento. “ Los knowmads son profesionales motivados, cuyo fin es aportar su talento y conocimientos a una organización, sea como empleado o en un emprendimiento personal, en un momento concreto. Son muy activos y continuamente están probando nuevas técnicas e informándose. Así, logran traer a las empresas conceptos y procesos de éxito”. ( Vizcarra, 2014). Como deja entrever el propio nombre, son un tipo de trabajadores que no se ajustan al modelo inspiracional tradicional de conseguir un trabajo indefinido y pasar casi toda su vida laboral dentro de su empresa. Los Knowmads no tienen miedo a equivocarse por lo tanto les gusta experimentar, les gusta el trabajo en red por lo que se asocian a comunidades, aprenden y desaprenden con facilidad, son flexibles y utilizan la información para generar nuevos conocimientos, siempre en buscando innovar. Las características de un No está limitado a una edad determinada. 2. Creativo, innovador, colaborativo y motivado. 3. Utiliza la información y genera conocimientos en diferentes contextos. 4. Altamente inventivo, intuitivo, capaz de producir ideas. 5. Creador de redes, siempre conectando a personas, ideas, organizaciones, etc. 6. Capacidad para utilizar herramientas para resolver diferentes problemas. 7. Alfabetizado digitalmente, comprende cómo y por qué funcionan las tecnologías digitales. 8. Aprende a compartir (sin límites geográficos). 9. Es adaptable a diferentes contextos y entornos. 10. No teme el fracaso. Este nuevo perfil cada día tiene mayor cabida en un mercado laboral en el que no se busca personas con perfiles “vacíos” que automaticen labores, si no perfiles dinámicos con capacidad de liderazgo y adaptabilidad ante los cambios. No te quedes atrás fortalece tu portafolio con con skills y/o habilidades en tecnología y aumenta tus posibilidades de obtener un empleo, toma un Bootcamp con World Tech Makers e ingresa a un mercado con el 95% empleabilidad. Aplica Aquí","['Knowmads', 'Makers', 'Bootcamps', 'Codingbootcamp', 'Skills']",https://medium.com/@Worldtechmaker/knowmad-el-perfil-que-buscan-las-empresas-de-hoy-190e27aacac3,False
